uint64_t sub_10000271C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  v3 = sub_100082E40();
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100002784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100008938(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_100002794(long long *a1)
{
  long long v2 = *a1;
  if (sub_10007F274(2, 17, 0, 0)) {
    return swift_getOpaqueTypeMetadata2();
  }
  else {
    return v2;
  }
}

uint64_t sub_100002808(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (sub_10007F274(2, 17, 0, 0)) {
    return swift_getOpaqueTypeConformance2();
  }
  return v1;
}

uint64_t sub_100002874(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000028B8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100002900()
{
  unint64_t result = qword_1000A7A48;
  if (!qword_1000A7A48)
  {
    sub_1000028B8(&qword_1000A7A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A7A48);
  }
  return result;
}

void type metadata accessor for CLAccuracyAuthorization(uint64_t a1)
{
}

__n128 initializeWithTake for ColorSchemeSpecificImageSet(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

char *sub_100002994(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(void *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = *a2;
      if (*a2 == (char *)1)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        v28 = a2[1];
        *(void *)a1 = v12;
        *((void *)a1 + 1) = v28;
        v29 = v12;
        v30 = v28;
      }
      v31 = a2[3];
      *((void *)a1 + 2) = a2[2];
      *((void *)a1 + 3) = v31;
      *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
      a1[36] = *((unsigned char *)a2 + 36);
      v32 = a2[6];
      *((void *)a1 + 5) = a2[5];
      *((void *)a1 + 6) = v32;
      a1[56] = *((unsigned char *)a2 + 56);
      uint64_t v33 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      v34 = &a1[v33];
      v35 = (char *)a2 + v33;
      uint64_t v36 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v37 = *(void *)(v36 - 8);
      v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v38(v35, 1, v36))
      {
        uint64_t v39 = sub_100002874(&qword_1000A7A78);
        memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v50 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v34, v35, v50);
        uint64_t v51 = *(int *)(v36 + 20);
        v52 = &v34[v51];
        v53 = &v35[v51];
        v54 = *(void **)&v35[v51];
        if (v54 == (void *)1)
        {
          *(_OWORD *)v52 = *(_OWORD *)v53;
        }
        else
        {
          v73 = (void *)*((void *)v53 + 1);
          *(void *)v52 = v54;
          *((void *)v52 + 1) = v73;
          id v74 = v54;
          id v75 = v73;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v7;
      v8 = a2[3];
      *((void *)a1 + 2) = a2[2];
      *((void *)a1 + 3) = v8;
      v9 = a2[5];
      *((void *)a1 + 4) = a2[4];
      *((void *)a1 + 5) = v9;
      a1[48] = *((unsigned char *)a2 + 48);
      v10 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 == (char *)1)
      {
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
      }
      else
      {
        v19 = a2[8];
        *((void *)a1 + 7) = v10;
        *((void *)a1 + 8) = v19;
        v20 = v10;
        v21 = v19;
      }
      *((_DWORD *)a1 + 18) = *((_DWORD *)a2 + 18);
      a1[76] = *((unsigned char *)a2 + 76);
      uint64_t v22 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      v23 = &a1[v22];
      v24 = (char *)a2 + v22;
      v25 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v26 = *((void *)v25 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
      {
        uint64_t v27 = sub_100002874(&qword_1000A7A70);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        uint64_t v45 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v23, v24, v45);
        uint64_t v46 = v25[5];
        v47 = &v23[v46];
        v48 = &v24[v46];
        v49 = *(void **)&v24[v46];
        if (v49 == (void *)1)
        {
          *(_OWORD *)v47 = *(_OWORD *)v48;
        }
        else
        {
          v61 = (void *)*((void *)v48 + 1);
          *(void *)v47 = v49;
          *((void *)v47 + 1) = v61;
          id v62 = v49;
          id v63 = v61;
        }
        uint64_t v64 = v25[6];
        v65 = &v23[v64];
        v66 = &v24[v64];
        *(_OWORD *)v65 = *(_OWORD *)v66;
        v65[16] = v66[16];
        uint64_t v67 = v25[7];
        v68 = &v23[v67];
        v69 = &v24[v67];
        uint64_t v70 = sub_100082D90();
        uint64_t v71 = *(void *)(v70 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
        {
          uint64_t v72 = sub_100002874(&qword_1000A7A68);
          memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        }
        (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
      }
    }
    else
    {
      *(void *)a1 = *a2;
      a1[8] = *((unsigned char *)a2 + 8);
      uint64_t v13 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      v14 = &a1[v13];
      v15 = (char *)a2 + v13;
      v16 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      uint64_t v17 = *((void *)v16 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_100002874(&qword_1000A7A60);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v40 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v14, v15, v40);
        *(void *)&v14[v16[5]] = *(void *)&v15[v16[5]];
        uint64_t v41 = v16[6];
        v42 = &v14[v41];
        v43 = &v15[v41];
        v44 = *(void **)&v15[v41];
        swift_bridgeObjectRetain();
        if (v44 == (void *)1)
        {
          *(_OWORD *)v42 = *(_OWORD *)v43;
        }
        else
        {
          v55 = (void *)*((void *)v43 + 1);
          *(void *)v42 = v44;
          *((void *)v42 + 1) = v55;
          id v56 = v44;
          id v57 = v55;
        }
        uint64_t v58 = v16[7];
        v59 = &v14[v58];
        v60 = &v15[v58];
        *(void *)v59 = *(void *)v60;
        v59[8] = v60[8];
        (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_100003008(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if (*(void *)a1 != 1)
    {
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v7 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v3, 1, v7))
    {
      uint64_t v8 = sub_1000837F0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v3, v8);
      uint64_t v6 = *(int *)(v7 + 20);
LABEL_10:
      uint64_t v9 = v3 + v6;
      if (*(void *)v9 != 1)
      {

        v10 = *(void **)(v9 + 8);
      }
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload) {
        return;
      }
      uint64_t v3 = a1 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      uint64_t v4 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4)) {
        return;
      }
      uint64_t v5 = sub_1000837F0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
      swift_bridgeObjectRelease();
      uint64_t v6 = *(int *)(v4 + 24);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = *(void **)(a1 + 56);
    if (v11 != (void *)1)
    {
    }
    uint64_t v12 = a1 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
    uint64_t v13 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      uint64_t v14 = sub_1000837F0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
      v15 = (id *)(v12 + *(int *)(v13 + 20));
      if (*v15 != (id)1)
      {
      }
      uint64_t v16 = v12 + *(int *)(v13 + 28);
      uint64_t v17 = sub_100082D90();
      uint64_t v19 = *(void *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
      {
        uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
        v18(v16, v17);
      }
    }
  }
}

uint64_t sub_10000336C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *(void **)a2;
    if (*(void *)a2 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      v25 = *(void **)(a2 + 8);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v25;
      id v26 = v9;
      id v27 = v25;
    }
    uint64_t v28 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v28;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
    uint64_t v29 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v29;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v30 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    v20 = (char *)(a1 + v30);
    v31 = (char *)(a2 + v30);
    uint64_t v22 = (int *)type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    uint64_t v23 = *((void *)v22 - 1);
    v32 = *(unsigned int (**)(char *, uint64_t, int *))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32(v31, 1, v22))
    {
      uint64_t v33 = sub_100002874(&qword_1000A7A78);
      memcpy(v20, v31, *(void *)(*(void *)(v33 - 8) + 64));
      goto LABEL_29;
    }
    uint64_t v44 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v20, v31, v44);
    uint64_t v45 = v22[5];
    uint64_t v46 = &v20[v45];
    v47 = &v31[v45];
    v48 = *(void **)&v31[v45];
    if (v48 == (void *)1)
    {
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    }
    else
    {
      uint64_t v67 = (void *)*((void *)v47 + 1);
      *(void *)uint64_t v46 = v48;
      *((void *)v46 + 1) = v67;
      id v68 = v48;
      id v69 = v67;
    }
    goto LABEL_28;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    uint64_t v8 = *(void **)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8 == (void *)1)
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    }
    else
    {
      uint64_t v16 = *(void **)(a2 + 64);
      *(void *)(a1 + 56) = v8;
      *(void *)(a1 + 64) = v16;
      id v17 = v8;
      id v18 = v16;
    }
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
    uint64_t v19 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
    v20 = (char *)(a1 + v19);
    v21 = (char *)(a2 + v19);
    uint64_t v22 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    uint64_t v23 = *((void *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_100002874(&qword_1000A7A70);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      goto LABEL_29;
    }
    uint64_t v39 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v20, v21, v39);
    uint64_t v40 = v22[5];
    uint64_t v41 = &v20[v40];
    v42 = &v21[v40];
    v43 = *(void **)&v21[v40];
    if (v43 == (void *)1)
    {
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    }
    else
    {
      v55 = (void *)*((void *)v42 + 1);
      *(void *)uint64_t v41 = v43;
      *((void *)v41 + 1) = v55;
      id v56 = v43;
      id v57 = v55;
    }
    uint64_t v58 = v22[6];
    v59 = &v20[v58];
    v60 = &v21[v58];
    *(_OWORD *)v59 = *(_OWORD *)v60;
    v59[16] = v60[16];
    uint64_t v61 = v22[7];
    id v62 = &v20[v61];
    id v63 = &v21[v61];
    uint64_t v64 = sub_100082D90();
    uint64_t v65 = *(void *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      uint64_t v66 = sub_100002874(&qword_1000A7A68);
      memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
LABEL_28:
    (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    goto LABEL_29;
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v10 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100002874(&qword_1000A7A60);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v34 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v11, v12, v34);
    *(void *)&v11[v13[5]] = *(void *)&v12[v13[5]];
    uint64_t v35 = v13[6];
    uint64_t v36 = &v11[v35];
    uint64_t v37 = &v12[v35];
    v38 = *(void **)&v12[v35];
    swift_bridgeObjectRetain();
    if (v38 == (void *)1)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    }
    else
    {
      v49 = (void *)*((void *)v37 + 1);
      *(void *)uint64_t v36 = v38;
      *((void *)v36 + 1) = v49;
      id v50 = v38;
      id v51 = v49;
    }
    uint64_t v52 = v13[7];
    v53 = &v11[v52];
    v54 = &v12[v52];
    *(void *)v53 = *(void *)v54;
    v53[8] = v54[8];
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
LABEL_29:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100003974(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100003FC8(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = *(void **)a2;
      if (*(void *)a2 == 1)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        *(void *)a1 = v7;
        v25 = *(void **)(a2 + 8);
        *(void *)(a1 + 8) = v25;
        id v26 = v7;
        id v27 = v25;
      }
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      int v28 = *(_DWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
      *(_DWORD *)(a1 + 32) = v28;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      uint64_t v29 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      v20 = (char *)(a1 + v29);
      uint64_t v30 = (char *)(a2 + v29);
      uint64_t v22 = (int *)type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v23 = *((void *)v22 - 1);
      v31 = *(unsigned int (**)(char *, uint64_t, int *))(v23 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31(v30, 1, v22))
      {
        uint64_t v32 = sub_100002874(&qword_1000A7A78);
        memcpy(v20, v30, *(void *)(*(void *)(v32 - 8) + 64));
        goto LABEL_30;
      }
      uint64_t v43 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v20, v30, v43);
      uint64_t v44 = v22[5];
      uint64_t v45 = &v20[v44];
      uint64_t v46 = &v30[v44];
      v47 = *(void **)&v30[v44];
      if (v47 == (void *)1)
      {
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      }
      else
      {
        *(void *)uint64_t v45 = v47;
        id v68 = (void *)*((void *)v46 + 1);
        *((void *)v45 + 1) = v68;
        id v69 = v47;
        id v70 = v68;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v8 = *(void **)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(void *)a1 = v8;
        uint64_t v9 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
        uint64_t v10 = (char *)(a1 + v9);
        v11 = (char *)(a2 + v9);
        uint64_t v12 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        uint64_t v13 = *((void *)v12 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
        {
          uint64_t v14 = sub_100002874(&qword_1000A7A60);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v33 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v10, v11, v33);
          *(void *)&v10[v12[5]] = *(void *)&v11[v12[5]];
          uint64_t v34 = v12[6];
          uint64_t v35 = &v10[v34];
          uint64_t v36 = &v11[v34];
          uint64_t v37 = *(void **)&v11[v34];
          swift_bridgeObjectRetain();
          if (v37 == (void *)1)
          {
            *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
          }
          else
          {
            *(void *)uint64_t v35 = v37;
            v48 = (void *)*((void *)v36 + 1);
            *((void *)v35 + 1) = v48;
            id v49 = v37;
            id v50 = v48;
          }
          uint64_t v51 = v12[7];
          uint64_t v52 = &v10[v51];
          v53 = &v11[v51];
          uint64_t v54 = *(void *)v53;
          v52[8] = v53[8];
          *(void *)uint64_t v52 = v54;
          (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
        }
        goto LABEL_30;
      }
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      uint64_t v5 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v5;
      uint64_t v6 = *(void **)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v6 == (void *)1)
      {
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      }
      else
      {
        *(void *)(a1 + 56) = v6;
        uint64_t v15 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v15;
        id v16 = v6;
        id v17 = v15;
      }
      int v18 = *(_DWORD *)(a2 + 72);
      *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
      *(_DWORD *)(a1 + 72) = v18;
      uint64_t v19 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      v20 = (char *)(a1 + v19);
      v21 = (char *)(a2 + v19);
      uint64_t v22 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v23 = *((void *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = sub_100002874(&qword_1000A7A70);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_30:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v38 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v20, v21, v38);
      uint64_t v39 = v22[5];
      uint64_t v40 = &v20[v39];
      uint64_t v41 = &v21[v39];
      v42 = *(void **)&v21[v39];
      if (v42 == (void *)1)
      {
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      }
      else
      {
        *(void *)uint64_t v40 = v42;
        v55 = (void *)*((void *)v41 + 1);
        *((void *)v40 + 1) = v55;
        id v56 = v42;
        id v57 = v55;
      }
      uint64_t v58 = v22[6];
      v59 = &v20[v58];
      v60 = &v21[v58];
      long long v61 = *(_OWORD *)v60;
      v59[16] = v60[16];
      *(_OWORD *)v59 = v61;
      uint64_t v62 = v22[7];
      id v63 = &v20[v62];
      uint64_t v64 = &v21[v62];
      uint64_t v65 = sub_100082D90();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        uint64_t v67 = sub_100002874(&qword_1000A7A68);
        memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
    }
    (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    goto LABEL_30;
  }
  return a1;
}

uint64_t sub_100003FC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for GeneralMapsTimelineEntryContent(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A7AF0);
}

uint64_t sub_100004044(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v16 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    id v17 = (char *)(a1 + v16);
    int v18 = (char *)(a2 + v16);
    uint64_t v19 = (int *)type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      v21 = &qword_1000A7A78;
LABEL_9:
      size_t v12 = *(void *)(*(void *)(sub_100002874(v21) - 8) + 64);
      uint64_t v13 = v17;
      uint64_t v14 = v18;
      goto LABEL_10;
    }
    uint64_t v33 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v17, v18, v33);
    *(_OWORD *)&v17[v19[5]] = *(_OWORD *)&v18[v19[5]];
LABEL_15:
    (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload != 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    uint64_t v22 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
    id v17 = (char *)(a1 + v22);
    int v18 = (char *)(a2 + v22);
    uint64_t v19 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      v21 = &qword_1000A7A60;
      goto LABEL_9;
    }
    uint64_t v34 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v17, v18, v34);
    *(void *)&v17[v19[5]] = *(void *)&v18[v19[5]];
    *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
    uint64_t v35 = v19[7];
    uint64_t v36 = &v17[v35];
    uint64_t v37 = &v18[v35];
    v36[8] = v37[8];
    *(void *)uint64_t v36 = *(void *)v37;
    goto LABEL_15;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v7 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    size_t v12 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v13 = v8;
    uint64_t v14 = v9;
LABEL_10:
    memcpy(v13, v14, v12);
    goto LABEL_18;
  }
  uint64_t v23 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v8, v9, v23);
  *(_OWORD *)&v8[v10[5]] = *(_OWORD *)&v9[v10[5]];
  uint64_t v24 = v10[6];
  v25 = &v8[v24];
  id v26 = &v9[v24];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  uint64_t v27 = v10[7];
  int v28 = &v8[v27];
  uint64_t v29 = &v9[v27];
  uint64_t v30 = sub_100082D90();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100002874(&qword_1000A7A68);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_18:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10000451C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100003FC8(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v15 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v15;
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      uint64_t v16 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      id v17 = (char *)(a1 + v16);
      int v18 = (char *)(a2 + v16);
      uint64_t v19 = (int *)type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v20 = *((void *)v19 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
      {
        v21 = &qword_1000A7A78;
LABEL_10:
        size_t v12 = *(void *)(*(void *)(sub_100002874(v21) - 8) + 64);
        uint64_t v13 = v17;
        uint64_t v14 = v18;
LABEL_11:
        memcpy(v13, v14, v12);
LABEL_19:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v33 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v17, v18, v33);
      *(_OWORD *)&v17[v19[5]] = *(_OWORD *)&v18[v19[5]];
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        long long v5 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v5;
        uint64_t v6 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v6;
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
        *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
        uint64_t v7 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
        uint64_t v8 = (char *)(a1 + v7);
        uint64_t v9 = (char *)(a2 + v7);
        uint64_t v10 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
        uint64_t v11 = *((void *)v10 - 1);
        if (!(*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
        {
          uint64_t v23 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v8, v9, v23);
          *(_OWORD *)&v8[v10[5]] = *(_OWORD *)&v9[v10[5]];
          uint64_t v24 = v10[6];
          v25 = &v8[v24];
          id v26 = &v9[v24];
          *(_OWORD *)v25 = *(_OWORD *)v26;
          v25[16] = v26[16];
          uint64_t v27 = v10[7];
          int v28 = &v8[v27];
          uint64_t v29 = &v9[v27];
          uint64_t v30 = sub_100082D90();
          uint64_t v31 = *(void *)(v30 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
          {
            uint64_t v32 = sub_100002874(&qword_1000A7A68);
            memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          }
          (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
          goto LABEL_19;
        }
        size_t v12 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
        uint64_t v13 = v8;
        uint64_t v14 = v9;
        goto LABEL_11;
      }
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v22 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      id v17 = (char *)(a1 + v22);
      int v18 = (char *)(a2 + v22);
      uint64_t v19 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      uint64_t v20 = *((void *)v19 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
      {
        v21 = &qword_1000A7A60;
        goto LABEL_10;
      }
      uint64_t v34 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v17, v18, v34);
      *(void *)&v17[v19[5]] = *(void *)&v18[v19[5]];
      *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
      uint64_t v35 = v19[7];
      uint64_t v36 = &v17[v35];
      uint64_t v37 = &v18[v35];
      v36[8] = v37[8];
      *(void *)uint64_t v36 = *(void *)v37;
    }
    (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    goto LABEL_19;
  }
  return a1;
}

uint64_t sub_100004A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_100004A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_100004A5C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100004A6C()
{
  uint64_t result = type metadata accessor for NearbyEntryContent(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SuggestedDestinationEntryContent(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for NavigationETAEntryContent(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100004B6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100082E40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    uint64_t v10 = (void **)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100002874(&qword_1000A7B28);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v20 = *v10;
        uint64_t v92 = v12;
        if (*v10 == (void *)1)
        {
          _OWORD *v9 = *(_OWORD *)v10;
        }
        else
        {
          uint64_t v35 = v10[1];
          *(void *)uint64_t v9 = v20;
          *((void *)v9 + 1) = v35;
          id v36 = v20;
          id v37 = v35;
        }
        uint64_t v38 = v10[3];
        *((void *)v9 + 2) = v10[2];
        *((void *)v9 + 3) = v38;
        *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
        *((unsigned char *)v9 + 36) = *((unsigned char *)v10 + 36);
        uint64_t v39 = v10[6];
        *((void *)v9 + 5) = v10[5];
        *((void *)v9 + 6) = v39;
        *((unsigned char *)v9 + 56) = *((unsigned char *)v10 + 56);
        uint64_t v40 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
        __dsta = (char *)v9 + v40;
        v89 = (char *)v10 + v40;
        uint64_t v41 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
        uint64_t v42 = *(void *)(v41 - 8);
        uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
        uint64_t v44 = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v43(v89, 1, v44))
        {
          uint64_t v45 = sub_100002874(&qword_1000A7A78);
          memcpy(__dsta, v89, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          uint64_t v55 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(__dsta, v89, v55);
          uint64_t v56 = *(int *)(v44 + 20);
          id v57 = &__dsta[v56];
          uint64_t v58 = &v89[v56];
          v59 = *(void **)&v89[v56];
          if (v59 == (void *)1)
          {
            *(_OWORD *)id v57 = *(_OWORD *)v58;
          }
          else
          {
            v77 = (void *)*((void *)v58 + 1);
            *(void *)id v57 = v59;
            *((void *)v57 + 1) = v77;
            id v78 = v59;
            id v79 = v77;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(__dsta, 0, 1, v44);
        }
        uint64_t v12 = v92;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v16 = v10[1];
        *(void *)uint64_t v9 = *v10;
        *((void *)v9 + 1) = v16;
        id v17 = v10[3];
        *((void *)v9 + 2) = v10[2];
        *((void *)v9 + 3) = v17;
        int v18 = v10[5];
        *((void *)v9 + 4) = v10[4];
        *((void *)v9 + 5) = v18;
        *((unsigned char *)v9 + 48) = *((unsigned char *)v10 + 48);
        uint64_t v19 = v10[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19 == (void *)1)
        {
          *(_OWORD *)((char *)v9 + 56) = *(_OWORD *)(v10 + 7);
        }
        else
        {
          id v26 = v10[8];
          *((void *)v9 + 7) = v19;
          *((void *)v9 + 8) = v26;
          id v27 = v19;
          id v28 = v26;
        }
        *((_DWORD *)v9 + 18) = *((_DWORD *)v10 + 18);
        *((unsigned char *)v9 + 76) = *((unsigned char *)v10 + 76);
        uint64_t v29 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
        uint64_t v30 = (char *)v9 + v29;
        uint64_t v31 = (char *)v10 + v29;
        uint64_t v32 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
        uint64_t v33 = *((void *)v32 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
        {
          uint64_t v34 = sub_100002874(&qword_1000A7A70);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          uint64_t v50 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v30, v31, v50);
          uint64_t v51 = v32[5];
          uint64_t v52 = &v30[v51];
          v53 = &v31[v51];
          uint64_t v54 = *(void **)&v31[v51];
          __dstb = v30;
          uint64_t v87 = v33;
          if (v54 == (void *)1)
          {
            *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
          }
          else
          {
            uint64_t v66 = (void *)*((void *)v53 + 1);
            *(void *)uint64_t v52 = v54;
            *((void *)v52 + 1) = v66;
            id v67 = v54;
            id v68 = v66;
            uint64_t v30 = __dstb;
          }
          uint64_t v69 = v32[6];
          id v70 = &v30[v69];
          uint64_t v71 = &v31[v69];
          *(_OWORD *)id v70 = *(_OWORD *)v71;
          v70[16] = v71[16];
          uint64_t v72 = v32[7];
          v91 = &v30[v72];
          v73 = &v31[v72];
          uint64_t v74 = sub_100082D90();
          uint64_t v75 = *(void *)(v74 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
          {
            uint64_t v76 = sub_100002874(&qword_1000A7A68);
            memcpy(v91, v73, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v91, v73, v74);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v91, 0, 1, v74);
          }
          (*(void (**)(char *, void, uint64_t, int *))(v87 + 56))(__dstb, 0, 1, v32);
        }
      }
      else
      {
        *(void *)uint64_t v9 = *v10;
        *((unsigned char *)v9 + 8) = *((unsigned char *)v10 + 8);
        uint64_t v21 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
        __dst = (char *)v9 + v21;
        uint64_t v22 = (char *)v10 + v21;
        uint64_t v23 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        uint64_t v24 = *((void *)v23 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
        {
          uint64_t v25 = sub_100002874(&qword_1000A7A60);
          memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v90 = v24;
          uint64_t v46 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(__dst, v22, v46);
          *(void *)&__dst[v23[5]] = *(void *)&v22[v23[5]];
          uint64_t v47 = v23[6];
          v88 = &__dst[v47];
          v48 = &v22[v47];
          id v49 = *(void **)&v22[v47];
          swift_bridgeObjectRetain();
          if (v49 == (void *)1)
          {
            *(_OWORD *)v88 = *(_OWORD *)v48;
          }
          else
          {
            v60 = (void *)*((void *)v48 + 1);
            *(void *)v88 = v49;
            *((void *)v88 + 1) = v60;
            id v61 = v49;
            id v62 = v60;
          }
          uint64_t v63 = v23[7];
          uint64_t v64 = &__dst[v63];
          uint64_t v65 = &v22[v63];
          *(void *)uint64_t v64 = *(void *)v65;
          v64[8] = v65[8];
          (*(void (**)(void))(v90 + 56))();
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v80 = *(int *)(a3 + 24);
    v81 = (char *)a1 + v80;
    v82 = (char *)a2 + v80;
    uint64_t v83 = sub_1000837C0();
    uint64_t v84 = *(void *)(v83 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
    {
      uint64_t v85 = sub_100002874(&qword_1000A7B30);
      memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v82, v83);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
    }
  }
  return a1;
}

uint64_t sub_100005420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)) {
    goto LABEL_2;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if (*(void *)v5 != 1)
    {
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v5 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v16 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16))
    {
      uint64_t v17 = sub_1000837F0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v11, v17);
      uint64_t v14 = *(int *)(v16 + 20);
LABEL_16:
      int v18 = (id *)(v11 + v14);
      if (*v18 != (id)1)
      {
      }
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_2;
      }
      uint64_t v11 = v5 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      uint64_t v12 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12)) {
        goto LABEL_2;
      }
      uint64_t v13 = sub_1000837F0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
      swift_bridgeObjectRelease();
      uint64_t v14 = *(int *)(v12 + 24);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void **)(v5 + 56);
    if (v19 != (void *)1)
    {
    }
    uint64_t v20 = v5 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
    uint64_t v21 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21))
    {
      uint64_t v22 = sub_1000837F0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
      uint64_t v23 = (id *)(v20 + *(int *)(v21 + 20));
      if (*v23 != (id)1)
      {
      }
      uint64_t v24 = v20 + *(int *)(v21 + 28);
      uint64_t v25 = sub_100082D90();
      uint64_t v26 = *(void *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      }
    }
  }
LABEL_2:
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1000837C0();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v7, 1, v8);
  if (!result)
  {
    long long v15 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
    return v15(v7, v8);
  }
  return result;
}

uint64_t sub_100005898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (void **)(a2 + v7);
  uint64_t v10 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100002874(&qword_1000A7B28);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      int v18 = *v9;
      uint64_t v93 = a3;
      uint64_t v89 = v11;
      if (*v9 == (void *)1)
      {
        _OWORD *v8 = *(_OWORD *)v9;
      }
      else
      {
        uint64_t v33 = v9[1];
        *(void *)uint64_t v8 = v18;
        *((void *)v8 + 1) = v33;
        id v34 = v18;
        id v35 = v33;
      }
      id v36 = v9[3];
      *((void *)v8 + 2) = v9[2];
      *((void *)v8 + 3) = v36;
      *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
      *((unsigned char *)v8 + 36) = *((unsigned char *)v9 + 36);
      id v37 = v9[6];
      *((void *)v8 + 5) = v9[5];
      *((void *)v8 + 6) = v37;
      *((unsigned char *)v8 + 56) = *((unsigned char *)v9 + 56);
      uint64_t v38 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      __dsta = (char *)v8 + v38;
      __src = (char *)v9 + v38;
      uint64_t v39 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v41(__src, 1, v39))
      {
        uint64_t v42 = sub_100002874(&qword_1000A7A78);
        memcpy(__dsta, __src, *(void *)(*(void *)(v42 - 8) + 64));
        a3 = v93;
      }
      else
      {
        uint64_t v53 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(__dsta, __src, v53);
        uint64_t v54 = *(int *)(v39 + 20);
        uint64_t v55 = &__dsta[v54];
        uint64_t v56 = &__src[v54];
        id v57 = *(void **)&__src[v54];
        a3 = v93;
        if (v57 == (void *)1)
        {
          *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        }
        else
        {
          uint64_t v75 = v39;
          uint64_t v76 = (void *)*((void *)v56 + 1);
          *(void *)uint64_t v55 = v57;
          *((void *)v55 + 1) = v76;
          id v77 = v57;
          id v78 = v76;
          uint64_t v39 = v75;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(__dsta, 0, 1, v39);
      }
      uint64_t v11 = v89;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = v9[1];
      *(void *)uint64_t v8 = *v9;
      *((void *)v8 + 1) = v14;
      long long v15 = v9[3];
      *((void *)v8 + 2) = v9[2];
      *((void *)v8 + 3) = v15;
      uint64_t v16 = v9[5];
      *((void *)v8 + 4) = v9[4];
      *((void *)v8 + 5) = v16;
      *((unsigned char *)v8 + 48) = *((unsigned char *)v9 + 48);
      uint64_t v17 = v9[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17 == (void *)1)
      {
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)(v9 + 7);
      }
      else
      {
        uint64_t v24 = v9[8];
        *((void *)v8 + 7) = v17;
        *((void *)v8 + 8) = v24;
        id v25 = v17;
        id v26 = v24;
      }
      *((_DWORD *)v8 + 18) = *((_DWORD *)v9 + 18);
      *((unsigned char *)v8 + 76) = *((unsigned char *)v9 + 76);
      uint64_t v27 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      id v28 = (char *)v8 + v27;
      uint64_t v29 = (char *)v9 + v27;
      uint64_t v30 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v31 = *((void *)v30 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_100002874(&qword_1000A7A70);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v48 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v28, v29, v48);
        uint64_t v49 = v30[5];
        uint64_t v50 = &v28[v49];
        uint64_t v51 = &v29[v49];
        uint64_t v52 = *(void **)&v29[v49];
        uint64_t v95 = a3;
        if (v52 == (void *)1)
        {
          *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        }
        else
        {
          uint64_t v64 = (void *)*((void *)v51 + 1);
          *(void *)uint64_t v50 = v52;
          *((void *)v50 + 1) = v64;
          id v65 = v52;
          id v66 = v64;
        }
        uint64_t v67 = v30[6];
        id v68 = &v28[v67];
        uint64_t v69 = &v29[v67];
        *(_OWORD *)id v68 = *(_OWORD *)v69;
        v68[16] = v69[16];
        uint64_t v70 = v30[7];
        v86 = v28;
        __dstb = &v28[v70];
        uint64_t v71 = &v29[v70];
        uint64_t v72 = sub_100082D90();
        uint64_t v73 = *(void *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          uint64_t v74 = sub_100002874(&qword_1000A7A68);
          memcpy(__dstb, v71, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(__dstb, v71, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(__dstb, 0, 1, v72);
        }
        a3 = v95;
        (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v86, 0, 1, v30);
      }
    }
    else
    {
      *(void *)uint64_t v8 = *v9;
      *((unsigned char *)v8 + 8) = *((unsigned char *)v9 + 8);
      uint64_t v19 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      __dst = (char *)v8 + v19;
      uint64_t v20 = (char *)v9 + v19;
      uint64_t v21 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      uint64_t v22 = (unsigned int (**)(const void *, uint64_t, int *))*((void *)v21 - 1);
      if (v22[6](v20, 1, v21))
      {
        uint64_t v23 = sub_100002874(&qword_1000A7A60);
        memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        __srca = (void (**)(void))v22;
        uint64_t v94 = a3;
        uint64_t v43 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(__dst, v20, v43);
        *(void *)&__dst[v21[5]] = *(void *)&v20[v21[5]];
        uint64_t v44 = v21[6];
        uint64_t v45 = &__dst[v44];
        uint64_t v46 = &v20[v44];
        uint64_t v47 = *(void **)&v20[v44];
        swift_bridgeObjectRetain();
        if (v47 == (void *)1)
        {
          *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        }
        else
        {
          uint64_t v58 = (void *)*((void *)v46 + 1);
          *(void *)uint64_t v45 = v47;
          *((void *)v45 + 1) = v58;
          id v59 = v47;
          id v60 = v58;
        }
        a3 = v94;
        uint64_t v61 = v21[7];
        id v62 = &__dst[v61];
        uint64_t v63 = &v20[v61];
        *(void *)id v62 = *(void *)v63;
        v62[8] = v63[8];
        __srca[7]();
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v79 = *(int *)(a3 + 24);
  uint64_t v80 = (void *)(a1 + v79);
  v81 = (const void *)(a2 + v79);
  uint64_t v82 = sub_1000837C0();
  uint64_t v83 = *(void *)(v82 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
  {
    uint64_t v84 = sub_100002874(&qword_1000A7B30);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v83 + 16))(v80, v81, v82);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
  }
  return a1;
}

uint64_t sub_100006104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v22 = *(void **)v9;
        uint64_t v164 = a2;
        if (*(void *)v9 == 1)
        {
          *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        }
        else
        {
          *(void *)uint64_t v8 = v22;
          uint64_t v39 = *(void **)(v9 + 8);
          *(void *)(v8 + 8) = v39;
          id v40 = v22;
          id v41 = v39;
        }
        *(void *)(v8 + 16) = *(void *)(v9 + 16);
        *(void *)(v8 + 24) = *(void *)(v9 + 24);
        int v42 = *(_DWORD *)(v9 + 32);
        *(unsigned char *)(v8 + 36) = *(unsigned char *)(v9 + 36);
        *(_DWORD *)(v8 + 32) = v42;
        *(void *)(v8 + 40) = *(void *)(v9 + 40);
        *(void *)(v8 + 48) = *(void *)(v9 + 48);
        *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
        uint64_t v43 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
        __src = (char *)(v8 + v43);
        __dsta = (char *)(v9 + v43);
        uint64_t v44 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
        uint64_t v45 = *(void *)(v44 - 8);
        uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v46(__dsta, 1, v44))
        {
          uint64_t v47 = sub_100002874(&qword_1000A7A78);
          memcpy(__src, __dsta, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          uint64_t v66 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(__src, __dsta, v66);
          uint64_t v67 = *(int *)(v44 + 20);
          id v68 = &__src[v67];
          uint64_t v69 = &__dsta[v67];
          uint64_t v70 = *(void **)&__dsta[v67];
          if (v70 == (void *)1)
          {
            *(_OWORD *)id v68 = *(_OWORD *)v69;
          }
          else
          {
            *(void *)id v68 = v70;
            uint64_t v111 = v44;
            v112 = (void *)*((void *)v69 + 1);
            *((void *)v68 + 1) = v112;
            id v113 = v70;
            id v114 = v112;
            uint64_t v44 = v111;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__src, 0, 1, v44);
        }
        a2 = v164;
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(void *)uint64_t v8 = *(void *)v9;
        *(void *)(v8 + 8) = *(void *)(v9 + 8);
        *(void *)(v8 + 16) = *(void *)(v9 + 16);
        *(void *)(v8 + 24) = *(void *)(v9 + 24);
        *(void *)(v8 + 32) = *(void *)(v9 + 32);
        uint64_t v16 = *(void *)(v9 + 40);
        *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
        *(void *)(v8 + 40) = v16;
        uint64_t v17 = *(void **)(v9 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17 == (void *)1)
        {
          *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
        }
        else
        {
          *(void *)(v8 + 56) = v17;
          uint64_t v29 = *(void **)(v9 + 64);
          *(void *)(v8 + 64) = v29;
          id v30 = v17;
          id v31 = v29;
        }
        int v32 = *(_DWORD *)(v9 + 72);
        *(unsigned char *)(v8 + 76) = *(unsigned char *)(v9 + 76);
        *(_DWORD *)(v8 + 72) = v32;
        uint64_t v33 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
        id v34 = (char *)(v8 + v33);
        id v35 = (char *)(v9 + v33);
        id v36 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
        uint64_t v37 = *((void *)v36 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
        {
          uint64_t v38 = sub_100002874(&qword_1000A7A70);
          memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v61 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v34, v35, v61);
          uint64_t v62 = v36[5];
          uint64_t v63 = &v34[v62];
          uint64_t v64 = &v35[v62];
          id v65 = *(void **)&v35[v62];
          uint64_t v172 = a3;
          if (v65 == (void *)1)
          {
            *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
          }
          else
          {
            *(void *)uint64_t v63 = v65;
            v99 = (void *)*((void *)v64 + 1);
            *((void *)v63 + 1) = v99;
            id v100 = v65;
            id v101 = v99;
          }
          uint64_t v102 = v36[6];
          v103 = &v34[v102];
          v104 = &v35[v102];
          long long v105 = *(_OWORD *)v104;
          v103[16] = v104[16];
          *(_OWORD *)v103 = v105;
          uint64_t v106 = v36[7];
          v161 = v34;
          __dstb = &v34[v106];
          v107 = &v35[v106];
          uint64_t v108 = sub_100082D90();
          uint64_t v109 = *(void *)(v108 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
          {
            uint64_t v110 = sub_100002874(&qword_1000A7A68);
            memcpy(__dstb, v107, *(void *)(*(void *)(v110 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v109 + 16))(__dstb, v107, v108);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(__dstb, 0, 1, v108);
          }
          a3 = v172;
          (*(void (**)(char *, void, uint64_t, int *))(v37 + 56))(v161, 0, 1, v36);
        }
      }
      else
      {
        uint64_t v23 = *(void **)v9;
        *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
        *(void *)uint64_t v8 = v23;
        uint64_t v24 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
        __dst = (char *)(v8 + v24);
        id v25 = (char *)(v9 + v24);
        id v26 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        uint64_t v27 = (unsigned int (**)(const void *, uint64_t, int *))*((void *)v26 - 1);
        if (v27[6](v25, 1, v26))
        {
          uint64_t v28 = sub_100002874(&qword_1000A7A60);
          memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          __srca = (void (**)(void))v27;
          uint64_t v171 = a3;
          uint64_t v56 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(__dst, v25, v56);
          *(void *)&__dst[v26[5]] = *(void *)&v25[v26[5]];
          uint64_t v57 = v26[6];
          uint64_t v58 = &__dst[v57];
          id v59 = &v25[v57];
          id v60 = *(void **)&v25[v57];
          swift_bridgeObjectRetain();
          if (v60 == (void *)1)
          {
            *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
          }
          else
          {
            *(void *)uint64_t v58 = v60;
            uint64_t v92 = (void *)*((void *)v59 + 1);
            *((void *)v58 + 1) = v92;
            id v93 = v60;
            id v94 = v92;
          }
          a3 = v171;
          uint64_t v95 = v26[7];
          v96 = &__dst[v95];
          v97 = &v25[v95];
          uint64_t v98 = *(void *)v97;
          v96[8] = v97[8];
          *(void *)v96 = v98;
          __srca[7]();
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_58;
    }
LABEL_9:
    uint64_t v18 = sub_100002874(&qword_1000A7B28);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_58;
  }
  if (v14)
  {
    sub_100003FC8(v8);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_100003FC8(v8);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 2)
    {
      uint64_t v48 = *(void **)v9;
      if (*(void *)v9 == 1)
      {
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      }
      else
      {
        *(void *)uint64_t v8 = v48;
        v81 = *(void **)(v9 + 8);
        *(void *)(v8 + 8) = v81;
        id v82 = v48;
        id v83 = v81;
      }
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      int v84 = *(_DWORD *)(v9 + 32);
      *(unsigned char *)(v8 + 36) = *(unsigned char *)(v9 + 36);
      *(_DWORD *)(v8 + 32) = v84;
      *(void *)(v8 + 40) = *(void *)(v9 + 40);
      *(void *)(v8 + 48) = *(void *)(v9 + 48);
      *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
      uint64_t v85 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      v168 = (char *)(v8 + v85);
      v86 = (char *)(v9 + v85);
      uint64_t v87 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v88 = *(void *)(v87 - 8);
      uint64_t v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
      uint64_t v90 = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v89(v86, 1, v90))
      {
        uint64_t v91 = sub_100002874(&qword_1000A7A78);
        memcpy(v168, v86, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        uint64_t v124 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v168, v86, v124);
        uint64_t v125 = *(int *)(v90 + 20);
        v126 = &v168[v125];
        v127 = &v86[v125];
        v128 = *(void **)&v86[v125];
        if (v128 == (void *)1)
        {
          *(_OWORD *)v126 = *(_OWORD *)v127;
        }
        else
        {
          *(void *)v126 = v128;
          v158 = (void *)*((void *)v127 + 1);
          *((void *)v126 + 1) = v158;
          id v159 = v128;
          id v160 = v158;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v168, 0, 1, v90);
      }
    }
    else if (v19 == 1)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      uint64_t v20 = *(void *)(v9 + 40);
      *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
      *(void *)(v8 + 40) = v20;
      uint64_t v21 = *(void **)(v9 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21 == (void *)1)
      {
        *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
      }
      else
      {
        *(void *)(v8 + 56) = v21;
        uint64_t v71 = *(void **)(v9 + 64);
        *(void *)(v8 + 64) = v71;
        id v72 = v21;
        id v73 = v71;
      }
      int v74 = *(_DWORD *)(v9 + 72);
      *(unsigned char *)(v8 + 76) = *(unsigned char *)(v9 + 76);
      *(_DWORD *)(v8 + 72) = v74;
      uint64_t v75 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      uint64_t v76 = (char *)(v8 + v75);
      id v77 = (char *)(v9 + v75);
      id v78 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v79 = *((void *)v78 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v79 + 48))(v77, 1, v78))
      {
        uint64_t v80 = sub_100002874(&qword_1000A7A70);
        memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        uint64_t v119 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v76, v77, v119);
        uint64_t v120 = v78[5];
        v121 = &v76[v120];
        v122 = &v77[v120];
        v123 = *(void **)&v77[v120];
        uint64_t v174 = a3;
        if (v123 == (void *)1)
        {
          *(_OWORD *)v121 = *(_OWORD *)v122;
        }
        else
        {
          *(void *)v121 = v123;
          v146 = (void *)*((void *)v122 + 1);
          *((void *)v121 + 1) = v146;
          id v147 = v123;
          id v148 = v146;
        }
        uint64_t v149 = v78[6];
        v150 = &v76[v149];
        v151 = &v77[v149];
        long long v152 = *(_OWORD *)v151;
        v150[16] = v151[16];
        *(_OWORD *)v150 = v152;
        uint64_t v153 = v78[7];
        v170 = &v76[v153];
        v154 = &v77[v153];
        uint64_t v155 = sub_100082D90();
        uint64_t v156 = *(void *)(v155 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
        {
          uint64_t v157 = sub_100002874(&qword_1000A7A68);
          memcpy(v170, v154, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v170, v154, v155);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v170, 0, 1, v155);
        }
        a3 = v174;
        (*(void (**)(char *, void, uint64_t, int *))(v79 + 56))(v76, 0, 1, v78);
      }
    }
    else
    {
      uint64_t v49 = *(void **)v9;
      *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
      *(void *)uint64_t v8 = v49;
      uint64_t v50 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      uint64_t v51 = (char *)(v8 + v50);
      uint64_t v52 = (char *)(v9 + v50);
      uint64_t v53 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      uint64_t v54 = *((void *)v53 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v54 + 48))(v52, 1, v53))
      {
        uint64_t v55 = sub_100002874(&qword_1000A7A60);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        uint64_t v173 = a3;
        uint64_t v115 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v51, v52, v115);
        *(void *)&v51[v53[5]] = *(void *)&v52[v53[5]];
        uint64_t v116 = v53[6];
        v169 = &v51[v116];
        v117 = &v52[v116];
        v118 = *(void **)&v52[v116];
        swift_bridgeObjectRetain();
        if (v118 == (void *)1)
        {
          *(_OWORD *)v169 = *(_OWORD *)v117;
        }
        else
        {
          *(void *)v169 = v118;
          v139 = (void *)*((void *)v117 + 1);
          *((void *)v169 + 1) = v139;
          id v140 = v118;
          id v141 = v139;
        }
        a3 = v173;
        uint64_t v142 = v53[7];
        v143 = &v51[v142];
        v144 = &v52[v142];
        uint64_t v145 = *(void *)v144;
        v143[8] = v144[8];
        *(void *)v143 = v145;
        (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(v51, 0, 1, v53);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_58:
  uint64_t v129 = *(int *)(a3 + 24);
  v130 = (void *)(a1 + v129);
  v131 = (void *)(a2 + v129);
  uint64_t v132 = sub_1000837C0();
  uint64_t v133 = *(void *)(v132 - 8);
  v134 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v133 + 48);
  int v135 = v134(v130, 1, v132);
  int v136 = v134(v131, 1, v132);
  if (!v135)
  {
    if (!v136)
    {
      (*(void (**)(void *, void *, uint64_t))(v133 + 24))(v130, v131, v132);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v133 + 8))(v130, v132);
    goto LABEL_63;
  }
  if (v136)
  {
LABEL_63:
    uint64_t v137 = sub_100002874(&qword_1000A7B30);
    memcpy(v130, v131, *(void *)(*(void *)(v137 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v133 + 16))(v130, v131, v132);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
  return a1;
}

uint64_t sub_10000709C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100002874(&qword_1000A7B28);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_18;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      long long v14 = v9[1];
      _OWORD *v8 = *v9;
      v8[1] = v14;
      uint64_t v15 = *((void *)v9 + 5);
      *((void *)v8 + 4) = *((void *)v9 + 4);
      *((void *)v8 + 5) = v15;
      *((unsigned char *)v8 + 48) = *((unsigned char *)v9 + 48);
      *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
      *((unsigned char *)v8 + 76) = *((unsigned char *)v9 + 76);
      *((_DWORD *)v8 + 18) = *((_DWORD *)v9 + 18);
      uint64_t v16 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      __dst = (char *)v8 + v16;
      uint64_t v17 = (char *)v9 + v16;
      uint64_t v18 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v19 = *((void *)v18 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_100002874(&qword_1000A7A70);
        memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v30 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(__dst, v17, v30);
        *(_OWORD *)&__dst[v18[5]] = *(_OWORD *)&v17[v18[5]];
        uint64_t v31 = v18[6];
        int v32 = &__dst[v31];
        uint64_t v33 = &v17[v31];
        *(_OWORD *)int v32 = *(_OWORD *)v33;
        v32[16] = v33[16];
        uint64_t v34 = v18[7];
        uint64_t v51 = v18;
        uint64_t v52 = &__dst[v34];
        id v35 = &v17[v34];
        uint64_t v36 = sub_100082D90();
        uint64_t v37 = *(void *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          uint64_t v38 = sub_100002874(&qword_1000A7A68);
          memcpy(v52, v35, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v52, v35, v36);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v52, 0, 1, v36);
        }
        (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(__dst, 0, 1, v51);
      }
      goto LABEL_17;
    }
    *(void *)uint64_t v8 = *(void *)v9;
    *((unsigned char *)v8 + 8) = *((unsigned char *)v9 + 8);
    uint64_t v28 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
    uint64_t v23 = (char *)v8 + v28;
    uint64_t v24 = (char *)v9 + v28;
    id v25 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
    uint64_t v26 = *((void *)v25 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = &qword_1000A7A60;
      goto LABEL_11;
    }
    uint64_t v40 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v23, v24, v40);
    *(void *)&v23[v25[5]] = *(void *)&v24[v25[5]];
    *(_OWORD *)&v23[v25[6]] = *(_OWORD *)&v24[v25[6]];
    uint64_t v41 = v25[7];
    int v42 = &v23[v41];
    uint64_t v43 = &v24[v41];
    v42[8] = v43[8];
    *(void *)int v42 = *(void *)v43;
LABEL_16:
    (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
    goto LABEL_17;
  }
  long long v21 = v9[1];
  _OWORD *v8 = *v9;
  v8[1] = v21;
  *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
  *((unsigned char *)v8 + 36) = *((unsigned char *)v9 + 36);
  *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
  *((unsigned char *)v8 + 56) = *((unsigned char *)v9 + 56);
  uint64_t v22 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v23 = (char *)v8 + v22;
  uint64_t v24 = (char *)v9 + v22;
  id v25 = (int *)type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v26 = *((void *)v25 - 1);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v39 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v23, v24, v39);
    *(_OWORD *)&v23[v25[5]] = *(_OWORD *)&v24[v25[5]];
    goto LABEL_16;
  }
  uint64_t v27 = &qword_1000A7A78;
LABEL_11:
  uint64_t v29 = sub_100002874(v27);
  memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
LABEL_17:
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_18:
  uint64_t v44 = *(int *)(a3 + 24);
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (const void *)(a2 + v44);
  uint64_t v47 = sub_1000837C0();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    uint64_t v49 = sub_100002874(&qword_1000A7B30);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  return a1;
}

uint64_t sub_10000778C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        long long v33 = *(_OWORD *)(v9 + 16);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *(_OWORD *)(v8 + 16) = v33;
        *(_DWORD *)(v8 + 32) = *(_DWORD *)(v9 + 32);
        *(unsigned char *)(v8 + 36) = *(unsigned char *)(v9 + 36);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
        uint64_t v34 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
        id v35 = (char *)(v8 + v34);
        uint64_t v36 = (char *)(v9 + v34);
        uint64_t v37 = (int *)type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
        uint64_t v38 = *((void *)v37 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
        {
          uint64_t v39 = &qword_1000A7A78;
LABEL_19:
          uint64_t v41 = sub_100002874(v39);
          memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_29:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
          goto LABEL_30;
        }
        uint64_t v64 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v35, v36, v64);
        *(_OWORD *)&v35[v37[5]] = *(_OWORD *)&v36[v37[5]];
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          long long v16 = *(_OWORD *)(v9 + 16);
          *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
          *(_OWORD *)(v8 + 16) = v16;
          uint64_t v17 = *(void *)(v9 + 40);
          *(void *)(v8 + 32) = *(void *)(v9 + 32);
          *(void *)(v8 + 40) = v17;
          *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
          *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
          *(unsigned char *)(v8 + 76) = *(unsigned char *)(v9 + 76);
          *(_DWORD *)(v8 + 72) = *(_DWORD *)(v9 + 72);
          uint64_t v18 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
          __dst = (char *)(v8 + v18);
          uint64_t v19 = (char *)(v9 + v18);
          uint64_t v20 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
          uint64_t v21 = *((void *)v20 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
          {
            uint64_t v22 = sub_100002874(&qword_1000A7A70);
            memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            uint64_t v42 = sub_1000837F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(__dst, v19, v42);
            *(_OWORD *)&__dst[v20[5]] = *(_OWORD *)&v19[v20[5]];
            uint64_t v43 = v20[6];
            uint64_t v44 = &__dst[v43];
            uint64_t v45 = &v19[v43];
            *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
            v44[16] = v45[16];
            id v94 = v20;
            uint64_t v46 = v20[7];
            id v93 = &__dst[v46];
            uint64_t v47 = &v19[v46];
            uint64_t v48 = sub_100082D90();
            uint64_t v49 = *(void *)(v48 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
            {
              uint64_t v50 = sub_100002874(&qword_1000A7A68);
              memcpy(v93, v47, *(void *)(*(void *)(v50 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v93, v47, v48);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v93, 0, 1, v48);
            }
            (*(void (**)(char *, void, uint64_t, int *))(v21 + 56))(__dst, 0, 1, v94);
          }
          goto LABEL_29;
        }
        *(void *)uint64_t v8 = *(void *)v9;
        *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
        uint64_t v40 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
        id v35 = (char *)(v8 + v40);
        uint64_t v36 = (char *)(v9 + v40);
        uint64_t v37 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        uint64_t v38 = *((void *)v37 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
        {
          uint64_t v39 = &qword_1000A7A60;
          goto LABEL_19;
        }
        uint64_t v65 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v35, v36, v65);
        *(void *)&v35[v37[5]] = *(void *)&v36[v37[5]];
        *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
        uint64_t v66 = v37[7];
        uint64_t v67 = &v35[v66];
        id v68 = &v36[v66];
        v67[8] = v68[8];
        *(void *)uint64_t v67 = *(void *)v68;
      }
      (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_29;
    }
LABEL_9:
    uint64_t v23 = sub_100002874(&qword_1000A7B28);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_30;
  }
  if (v14)
  {
    sub_100003FC8(v8);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_100003FC8(v8);
    int v24 = swift_getEnumCaseMultiPayload();
    if (v24 == 2)
    {
      long long v51 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v51;
      *(_DWORD *)(v8 + 32) = *(_DWORD *)(v9 + 32);
      *(unsigned char *)(v8 + 36) = *(unsigned char *)(v9 + 36);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
      uint64_t v52 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      uint64_t v53 = (char *)(v8 + v52);
      uint64_t v54 = (char *)(v9 + v52);
      uint64_t v55 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v56 = *(void *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        uint64_t v57 = sub_100002874(&qword_1000A7A78);
        memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        uint64_t v88 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v53, v54, v88);
        *(_OWORD *)&v53[*(int *)(v55 + 20)] = *(_OWORD *)&v54[*(int *)(v55 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
    }
    else if (v24 == 1)
    {
      long long v25 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v25;
      uint64_t v26 = *(void *)(v9 + 40);
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      *(void *)(v8 + 40) = v26;
      *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
      *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
      *(unsigned char *)(v8 + 76) = *(unsigned char *)(v9 + 76);
      *(_DWORD *)(v8 + 72) = *(_DWORD *)(v9 + 72);
      uint64_t v27 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      uint64_t v28 = (char *)(v8 + v27);
      uint64_t v29 = (char *)(v9 + v27);
      uint64_t v30 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v31 = *((void *)v30 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_100002874(&qword_1000A7A70);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v79 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v28, v29, v79);
        *(_OWORD *)&v28[v30[5]] = *(_OWORD *)&v29[v30[5]];
        uint64_t v80 = v30[6];
        v81 = &v28[v80];
        id v82 = &v29[v80];
        *(_OWORD *)v81 = *(_OWORD *)v82;
        v81[16] = v82[16];
        uint64_t v83 = v30[7];
        uint64_t v95 = v28;
        v97 = &v28[v83];
        int v84 = &v29[v83];
        uint64_t v85 = sub_100082D90();
        uint64_t v86 = *(void *)(v85 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
        {
          uint64_t v87 = sub_100002874(&qword_1000A7A68);
          memcpy(v97, v84, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v97, v84, v85);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v97, 0, 1, v85);
        }
        (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v95, 0, 1, v30);
      }
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
      uint64_t v58 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      id v59 = (char *)(v8 + v58);
      id v60 = (char *)(v9 + v58);
      uint64_t v61 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      uint64_t v62 = *((void *)v61 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v62 + 48))(v60, 1, v61))
      {
        uint64_t v63 = sub_100002874(&qword_1000A7A60);
        memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        uint64_t v89 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v59, v60, v89);
        *(void *)&v59[v61[5]] = *(void *)&v60[v61[5]];
        *(_OWORD *)&v59[v61[6]] = *(_OWORD *)&v60[v61[6]];
        uint64_t v90 = v61[7];
        uint64_t v91 = &v59[v90];
        uint64_t v92 = &v60[v90];
        v91[8] = v92[8];
        *(void *)uint64_t v91 = *(void *)v92;
        (*(void (**)(char *, void, uint64_t, int *))(v62 + 56))(v59, 0, 1, v61);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_30:
  uint64_t v69 = *(int *)(a3 + 24);
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (void *)(a2 + v69);
  uint64_t v72 = sub_1000837C0();
  uint64_t v73 = *(void *)(v72 - 8);
  int v74 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v70, 1, v72);
  int v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (!v76)
    {
      (*(void (**)(void *, void *, uint64_t))(v73 + 40))(v70, v71, v72);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v73 + 8))(v70, v72);
    goto LABEL_35;
  }
  if (v76)
  {
LABEL_35:
    uint64_t v77 = sub_100002874(&qword_1000A7B30);
    memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v73 + 32))(v70, v71, v72);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  return a1;
}

uint64_t sub_100008414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100008428);
}

uint64_t sub_100008428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100082E40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002874(&qword_1000A7B28);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_100002874(&qword_1000A7B30);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_10000857C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100008590);
}

uint64_t sub_100008590(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100082E40();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100002874(&qword_1000A7B28);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_100002874(&qword_1000A7B30);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for GeneralMapsTimelineEntry(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000A7B90);
}

uint64_t sub_100008710(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100008748()
{
  sub_100082E40();
  if (v0 <= 0x3F)
  {
    sub_100008884(319, &qword_1000A7BA0, (void (*)(uint64_t))type metadata accessor for GeneralMapsTimelineEntryContent);
    if (v1 <= 0x3F)
    {
      sub_100008884(319, (unint64_t *)&unk_1000A7BA8, (void (*)(uint64_t))&type metadata accessor for TimelineEntryRelevance);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100008884(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000839F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_1000088D8(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_1000088EC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1000088FC(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_100008908(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_DWORD *sub_10000891C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_10000892C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100008938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000A7B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for GeneralMapsState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_1000089D4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000089E0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100008A00(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
}

void type metadata accessor for GEOURLOptions_MapType(uint64_t a1)
{
}

void type metadata accessor for GEOTransportType(uint64_t a1)
{
}

void type metadata accessor for MapsSuggestionsEntryType(uint64_t a1)
{
}

void type metadata accessor for GEOUserPreferredTransportType(uint64_t a1)
{
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
}

uint64_t sub_100008AA4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100008AC4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
}

void type metadata accessor for MKMapType(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_100008B28(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t sub_100008B88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100002874(&qword_1000A7F60);
  uint64_t v2 = (void *)sub_100083BC0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_100075828((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100008C94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100002874(&qword_1000A80F8);
  uint64_t v2 = (void *)sub_100083BC0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    long long v11 = *v4;
    id v5 = *((id *)v4 - 1);
    swift_retain();
    unint64_t result = sub_1000758E8((uint64_t)v5);
    if (v7) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    uint64_t v8 = v2[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      goto LABEL_11;
    }
    v2[2] = v10;
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100008DB4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100002874(&qword_1000A8100);
  uint64_t v2 = sub_100083BC0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001A720(v6, (uint64_t)v15, &qword_1000A8108);
    unint64_t result = sub_100075938((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_10001A784(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_100008F64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 8);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 16);
  char v7 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 24);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 32);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 40);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 48);
  uint64_t v3 = v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
  BOOL v13 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 56);
  uint64_t v12 = (void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 56);
  long long v11 = v13;
  uint64_t v14 = *(void *)(v3 + 64);
  uint64_t v15 = *(void *)(v3 + 72);
  char v16 = *(unsigned char *)(v3 + 80);
  if (v10)
  {
    long long v17 = v4;
    uint64_t v18 = v5;
    int v19 = v6;
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    uint64_t v22 = v9;
    unint64_t v44 = v10;
    uint64_t v23 = v11;
    uint64_t v24 = v14;
    uint64_t v25 = v15;
    char v43 = v16;
  }
  else
  {
    uint64_t v42 = v4;
    uint64_t v41 = v5;
    uint64_t v39 = v8;
    uint64_t v40 = v6;
    uint64_t v37 = v9;
    uint64_t v38 = v7;
    uint64_t v26 = v11;
    unint64_t v27 = sub_100008B88((uint64_t)&_swiftEmptyArrayStorage);
    uint64_t v35 = *(void *)(v3 + 8);
    uint64_t v36 = *(void *)v3;
    long long v33 = *(void **)(v3 + 24);
    uint64_t v34 = *(void *)(v3 + 16);
    uint64_t v31 = *(void *)(v3 + 40);
    uint64_t v32 = *(void *)(v3 + 32);
    uint64_t v29 = *(void **)(v3 + 56);
    uint64_t v30 = *(void *)(v3 + 48);
    *(_OWORD *)uint64_t v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    *(_OWORD *)(v3 + 32) = 0u;
    *(void *)(v3 + 48) = v27;
    void *v12 = 0;
    v12[1] = 0;
    v12[2] = 0;
    char v43 = 2;
    *(unsigned char *)(v3 + 80) = 2;
    unint64_t v44 = v27;
    swift_bridgeObjectRetain();
    sub_100018854(v36, v35, v34, v33, v32, v31, v30, v29);
    long long v11 = v26;
    uint64_t v10 = 0;
    uint64_t v9 = v37;
    char v7 = v38;
    uint64_t v8 = v39;
    uint64_t v6 = v40;
    uint64_t v5 = v41;
    uint64_t v4 = v42;
    long long v17 = 0;
    uint64_t v18 = 0;
    int v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  id result = sub_100019B00(v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = v18;
  *(_DWORD *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v20;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v22;
  *(void *)(a1 + 48) = v44;
  *(void *)(a1 + 56) = v23;
  *(void *)(a1 + 64) = v24;
  *(void *)(a1 + 72) = v25;
  *(unsigned char *)(a1 + 80) = v43;
  return result;
}

id sub_100009134()
{
  id result = [objc_allocWithZone((Class)GEOLocationShifter) init];
  qword_1000A7DB0 = (uint64_t)result;
  return result;
}

BOOL sub_100009168(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100009180()
{
  Swift::UInt v1 = *v0;
  sub_100083C20();
  sub_100083C30(v1);
  return sub_100083C50();
}

void sub_1000091C8()
{
  sub_100083C30(*v0);
}

Swift::Int sub_1000091F4()
{
  Swift::UInt v1 = *v0;
  sub_100083C20();
  sub_100083C30(v1);
  return sub_100083C50();
}

void *sub_100009238()
{
  id result = (void *)sub_100018284((uint64_t)&_swiftEmptyArrayStorage);
  off_1000A7DB8 = result;
  return result;
}

NSObject *sub_100009260(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_suggestionsEngine] = 0;
  uint64_t v3 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_suggestionsNetworkRequester;
  id v4 = objc_allocWithZone((Class)MapsSuggestionsRealNetworkRequester);
  uint64_t v5 = v1;
  id v6 = [v4 init];
  *(void *)&v1[v3] = v6;
  uint64_t v7 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup;
  *(void *)&v5[v7] = dispatch_group_create();
  uint64_t v8 = &v5[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state];
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *(_OWORD *)uint64_t v8 = 0u;
  v8[80] = 0;
  v5[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNearbyCategoriesCancellation] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNavigationRouteCancellation] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue] = a1;
  id v9 = objc_allocWithZone((Class)type metadata accessor for GeneralMapsLocationUpdater());
  uint64_t v10 = a1;
  sub_100024B60(v10);
  *(void *)&v5[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_locationUpdater] = v11;
  uint64_t v12 = self;
  id v13 = v6;
  id v14 = [v12 sharedPredictor];
  id v15 = [objc_allocWithZone((Class)MapsSuggestionsETARequirements) initWithMaxAge:1.79769313e308 maxDistance:1.79769313e308 minAccuracy:0.0];
  id v16 = [objc_allocWithZone((Class)MapsSuggestionsETARequester) initWithNetworkRequester:v13 transportModePredictor:v14 requirements:v15];

  *(void *)&v5[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_transportModePredictor] = v16;
  v42.receiver = v5;
  v42.super_class = (Class)type metadata accessor for GeneralMapsStateCollector();
  id v17 = [super init];
  id v18 = objc_allocWithZone((Class)MapsSuggestionsBlockFilter);
  aBlock[4] = sub_1000098BC;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100017F70;
  aBlock[3] = &unk_10009DF90;
  int v19 = _Block_copy(aBlock);
  uint64_t v20 = v17;
  uint64_t v21 = [v18 initWithBlock:v19];
  _Block_release(v19);
  swift_release();
  id v22 = [self forDevice];
  id v23 = [v22 withoutTracker];

  id v24 = [v23 withLocationUpdater:*(Class *)((char *)&v20->isa + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_locationUpdater)];
  sub_100002874(&qword_1000A7F00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100086310;
  aBlock[0] = [objc_allocWithZone((Class)MapsSuggestionsShortcutFilter) init];
  sub_1000188D8(0, &qword_1000A7F08);
  sub_100017FE0(&qword_1000A7F10, &qword_1000A7F08);
  sub_100083A80();
  aBlock[0] = [objc_allocWithZone((Class)MapsSuggestionsZeroWeightFilter) init];
  sub_1000188D8(0, &qword_1000A7F18);
  sub_100017FE0(&qword_1000A7F20, &qword_1000A7F18);
  sub_100083A80();
  sub_100018434(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  Class isa = sub_100083900().super.isa;
  swift_bridgeObjectRelease();
  unint64_t v27 = [v24 withPreFilters:isa];

  uint64_t v28 = (objc_class *)[v27 build];
  if (!v28)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_100082F00();
    sub_10001859C(v37, (uint64_t)qword_1000ACBA8);
    uint64_t v34 = sub_100082EE0();
    os_log_type_t v38 = sub_100083930();
    if (!os_log_type_enabled(v34, v38))
    {
      uint64_t v40 = v34;
      uint64_t v34 = v10;
      uint64_t v10 = v27;
      unint64_t v27 = v20;
      uint64_t v31 = v21;
      goto LABEL_14;
    }
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v38, "GeneralMapsStateCollector: could not build suggestions engine", v39, 2u);
    swift_slowDealloc();
    goto LABEL_11;
  }
  uint64_t v29 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_suggestionsEngine;
  uint64_t v30 = *(Class *)((char *)&v20->isa + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_suggestionsEngine);
  *(Class *)((char *)&v20->isa + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_suggestionsEngine) = v28;
  uint64_t v31 = v28;

  id result = *(NSObject **)((char *)&v20->isa + v29);
  if (result)
  {
    [result addAdditionalFilter:v21 forSink:v20];
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_100082F00();
    sub_10001859C(v33, (uint64_t)qword_1000ACBA8);
    uint64_t v34 = sub_100082EE0();
    os_log_type_t v35 = sub_100083920();
    if (!os_log_type_enabled(v34, v35))
    {

      uint64_t v40 = v10;
      uint64_t v34 = v27;
      uint64_t v10 = v20;
      unint64_t v27 = v21;
      goto LABEL_14;
    }
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "GeneralMapsStateCollector: Created MSgEngine", v36, 2u);
    swift_slowDealloc();

LABEL_11:
    uint64_t v40 = v21;
    uint64_t v31 = v20;
LABEL_14:

    return v20;
  }
  __break(1u);
  return result;
}

BOOL sub_1000098BC(void *a1)
{
  unint64_t v2 = (unint64_t)[a1 type];
  BOOL v3 = v2 > 0x18 || ((1 << v2) & 0x18BF93E) == 0;
  BOOL result = 0;
  if (!v3)
  {
    id v4 = [a1 geoMapItem];

    if (v4)
    {
      if (([a1 BOOLeanForKey:@"MapsSuggestionsIsNotADestinationKey" is:1] & 1) == 0
        && ([a1 hasExpired] & 1) == 0
        && ([a1 BOOLeanForKey:@"MapsSuggestionsAlreadyThereKey" is:1] & 1) == 0)
      {
        if ([a1 type] != (id)1) {
          return 1;
        }
        [a1 weight];
        if (v5 != 0.0) {
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000099BC(char *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = sub_100083610();
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  uint64_t v41 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100083630();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100082E40();
  uint64_t v11 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v36 = v12;
  uint64_t v37 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000836A0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100082F00();
  sub_10001859C(v17, (uint64_t)qword_1000ACBA8);
  id v18 = sub_100082EE0();
  os_log_type_t v19 = sub_100083920();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v35 = v4;
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "GeneralMapsStateCollector: collect BEGIN", v20, 2u);
    id v4 = v35;
    swift_slowDealloc();
  }

  uint64_t v21 = *(void **)&v4[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue];
  void *v16 = v21;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v21;
  LOBYTE(v21) = sub_1000836C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v21)
  {
    sub_10000E824();
    id v24 = v37;
    uint64_t v23 = v38;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, a1, v38);
    unint64_t v25 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v4;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v26 + v25, v24, v23);
    unint64_t v27 = v4;
    sub_10000A2A8(a1, (uint64_t)sub_100019A38, v26);
    swift_release();
    sub_10000CF5C();
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = a2;
    v28[3] = a3;
    v28[4] = v27;
    aBlock[4] = sub_100019AF4;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100068EDC;
    aBlock[3] = &unk_10009E580;
    uint64_t v29 = _Block_copy(aBlock);
    uint64_t v30 = v27;
    swift_retain();
    uint64_t v31 = v39;
    sub_100083620();
    uint64_t v45 = &_swiftEmptyArrayStorage;
    sub_100018A68();
    sub_100002874((uint64_t *)&unk_1000A7F80);
    sub_100018AC0();
    uint64_t v32 = v41;
    uint64_t v33 = v44;
    sub_100083A40();
    sub_100083960();
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100009F38(void (*a1)(unsigned char *))
{
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100082F00();
  sub_10001859C(v2, (uint64_t)qword_1000ACBA8);
  BOOL v3 = sub_100082EE0();
  os_log_type_t v4 = sub_100083920();
  if (os_log_type_enabled(v3, v4))
  {
    double v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "GeneralMapsStateCollector: collect END", v5, 2u);
    swift_slowDealloc();
  }

  sub_100008F64((uint64_t)v7);
  a1(v7);
  return sub_1000187DC((uint64_t)v7);
}

uint64_t sub_10000A050()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000836A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100082F00();
  sub_10001859C(v6, (uint64_t)qword_1000ACBA8);
  uint64_t v7 = sub_100082EE0();
  os_log_type_t v8 = sub_100083910();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "GeneralMapsStateCollector: cancelling state collection", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  *double v5 = v10;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v11 = v10;
  LOBYTE(v10) = sub_1000836C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v10)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled) = 1;
    if (*(void *)(v1
                   + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNearbyCategoriesCancellation))
    {
      swift_retain();
      sub_100083680();
      sub_100083670();
      uint64_t result = swift_release();
    }
    if (*(void *)(v1
                   + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNavigationRouteCancellation))
    {
      swift_retain();
      sub_100083680();
      sub_100083670();
      uint64_t result = swift_release();
    }
    if (*(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation))
    {
      swift_retain();
      sub_100083680();
      sub_100083670();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10000A2A8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v6 = sub_100082E40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v45 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v44 = (char *)v41 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v41 - v12;
  uint64_t v14 = sub_1000836A0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (void *)((char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v18 = *(void **)&v4[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue];
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v4[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled])
  {
    if (qword_1000A7A00 == -1)
    {
LABEL_4:
      uint64_t v20 = sub_100082F00();
      sub_10001859C(v20, (uint64_t)qword_1000ACBA8);
      uint64_t v21 = sub_100082EE0();
      os_log_type_t v22 = sub_100083910();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "GeneralMapsStateCollector: skipped collectLocation (state collection cancelled)", v23, 2u);
        swift_slowDealloc();
      }

      return;
    }
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_100082F00();
  sub_10001859C(v24, (uint64_t)qword_1000ACBA8);
  unint64_t v25 = sub_100082EE0();
  os_log_type_t v26 = sub_100083920();
  if (os_log_type_enabled(v25, v26))
  {
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "GeneralMapsStateCollector: collectLocation BEGIN", v27, 2u);
    swift_slowDealloc();
  }

  dispatch_group_enter(*(dispatch_group_t *)&v4[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup]);
  sub_100082E30();
  uint64_t v28 = (void (*)())swift_allocObject();
  *((void *)v28 + 2) = v42;
  *((void *)v28 + 3) = a3;
  *((void *)v28 + 4) = v4;
  uint64_t v29 = *(void *)&v4[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_locationUpdater];
  v41[1] = a3;
  uint64_t v42 = v29;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v31 = v44;
  v30(v44, v13, v6);
  v30(v45, v43, v6);
  uint64_t v32 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v33 = (v32 + 24) & ~v32;
  unint64_t v34 = (v8 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = v6;
  uint64_t v36 = (v32 + v34 + 16) & ~v32;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v4;
  uint64_t v43 = v13;
  uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v38(v37 + v33, v31, v35);
  uint64_t v39 = (void (**)())(v37 + v34);
  *uint64_t v39 = sub_100019744;
  v39[1] = v28;
  v38(v37 + v36, v45, v35);
  uint64_t v40 = v4;
  swift_retain();
  swift_retain();
  sub_100025078((uint64_t)sub_10001989C, v37);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v35);
}

void sub_10000A788(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, void *a8)
{
  id v93 = a8;
  uint64_t v98 = a7;
  v99 = a6;
  uint64_t v100 = a5;
  uint64_t v95 = a2;
  uint64_t v97 = sub_100082E40();
  uint64_t v11 = *(void *)(v97 - 8);
  uint64_t v12 = __chkstk_darwin(v97);
  uint64_t v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  v96 = (char *)&v90 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  id v94 = (char *)&v90 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v90 - v19;
  uint64_t v21 = sub_1000836A0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t *)((char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v25 = *(void **)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  void *v24 = v25;
  (*(void (**)(void *, void, uint64_t))(v22 + 104))(v24, enum case for DispatchPredicate.onQueue(_:), v21);
  id v26 = v25;
  LOBYTE(v25) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled))
  {
    if (qword_1000A7A00 == -1)
    {
LABEL_4:
      uint64_t v27 = sub_100082F00();
      sub_10001859C(v27, (uint64_t)qword_1000ACBA8);
      uint64_t v28 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v100, v97);
      uint64_t v29 = sub_100082EE0();
      os_log_type_t v30 = sub_100083930();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 134349056;
        uint64_t v32 = v96;
        sub_100082E30();
        sub_100082DC0();
        uint64_t v34 = v33;
        uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
        v35(v32, v28);
        v104[0] = v34;
        sub_100083A00();
        v35(v14, v28);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "GeneralMapsStateCollector: collectLocation END (state collection cancelled, %{public}f seconds elapsed)", v31, 0xCu);
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v28);
      }
      uint64_t v44 = v99;

      v44();
      return;
    }
LABEL_29:
    swift_once();
    goto LABEL_4;
  }
  if (a1)
  {
    id v36 = a1;
    if ([v36 referenceFrame] == 2
      || (uint64_t v37 = self,
          [v36 coordinate],
          GEOLocationCoordinate2DFromCLLocationCoordinate2D(),
          !objc_msgSend(v37, "isLocationShiftRequiredForCoordinate:")))
    {
      id v93 = v36;
      sub_100008F64((uint64_t)v104);
      int v92 = v113;
      uint64_t v45 = v111;
      uint64_t v91 = v112;
      uint64_t v47 = v109;
      uint64_t v46 = v110;
      uint64_t v48 = v107;
      uint64_t v49 = v108;
      uint64_t v50 = v106;
      uint64_t v51 = v105;
      sub_100019284((uint64_t)v104, (uint64_t)v114, &qword_1000A7F38);
      sub_100019714(v114);
      uint64_t v52 = a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
      uint64_t v53 = *(void *)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
      uint64_t v54 = *(void *)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 8);
      uint64_t v55 = *(void *)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 16);
      uint64_t v56 = *(void **)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 24);
      uint64_t v57 = *(void *)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 32);
      uint64_t v58 = *(void *)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 40);
      uint64_t v59 = *(void *)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 48);
      id v60 = *(void **)(a4 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 56);
      uint64_t v61 = v95;
      *(void *)uint64_t v52 = a1;
      *(void *)(v52 + 8) = v61;
      *(void *)(v52 + 16) = v51;
      *(void *)(v52 + 24) = v50;
      *(void *)(v52 + 32) = v48;
      *(void *)(v52 + 40) = v49;
      *(void *)(v52 + 48) = v47;
      *(void *)(v52 + 56) = v46;
      uint64_t v62 = v91;
      *(void *)(v52 + 64) = v45;
      *(void *)(v52 + 72) = v62;
      *(unsigned char *)(v52 + 80) = v92;
      sub_100018854(v53, v54, v55, v56, v57, v58, v59, v60);
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_100082F00();
      sub_10001859C(v63, (uint64_t)qword_1000ACBA8);
      uint64_t v64 = v94;
      uint64_t v65 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v94, v100, v97);
      id v66 = v93;
      uint64_t v67 = sub_100082EE0();
      os_log_type_t v68 = sub_100083920();
      int v69 = v68;
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v70 = swift_slowAlloc();
        uint64_t v71 = swift_slowAlloc();
        uint64_t v100 = v71;
        uint64_t v101 = (uint64_t)v66;
        *(_DWORD *)uint64_t v70 = 136380931;
        LODWORD(v93) = v69;
        uint64_t v102 = v95;
        uint64_t v103 = v71;
        id v72 = v66;
        uint64_t v73 = sub_100083890();
        uint64_t v101 = sub_10006863C(v73, v74, &v103);
        sub_100083A00();

        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 12) = 2050;
        int v75 = v96;
        sub_100082E30();
        sub_100082DC0();
        uint64_t v77 = v76;
        id v78 = *(void (**)(char *, uint64_t))(v11 + 8);
        v78(v75, v65);
        uint64_t v101 = v77;
        sub_100083A00();
        v78(v64, v65);
        _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v93, "GeneralMapsStateCollector: collectLocation END (location: %{private}s, %{public}f seconds elapsed)", (uint8_t *)v70, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v11 + 8))(v64, v65);
      }

      v99();
    }
    else
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_100082F00();
      sub_10001859C(v38, (uint64_t)qword_1000ACBA8);
      uint64_t v39 = sub_100082EE0();
      os_log_type_t v40 = sub_100083920();
      BOOL v41 = os_log_type_enabled(v39, v40);
      uint64_t v42 = v99;
      if (v41)
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "GeneralMapsStateCollector: collectLocation will shift location", v43, 2u);
        swift_slowDealloc();
      }

      sub_10000B1F8((uint64_t)v93, v36, v95, v100, v42, v98);
    }
  }
  else
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_100082F00();
    sub_10001859C(v79, (uint64_t)qword_1000ACBA8);
    uint64_t v80 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v20, v100, v97);
    swift_errorRetain();
    swift_errorRetain();
    v81 = sub_100082EE0();
    os_log_type_t v82 = sub_100083930();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v100 = swift_slowAlloc();
      v104[0] = v100;
      *(_DWORD *)uint64_t v83 = 136446466;
      v114[0] = a3;
      swift_errorRetain();
      sub_100002874(&qword_1000A7F48);
      uint64_t v84 = sub_100083890();
      v114[0] = (id)sub_10006863C(v84, v85, v104);
      sub_100083A00();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v83 + 12) = 2050;
      uint64_t v86 = v96;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v88 = v87;
      uint64_t v89 = *(void (**)(char *, uint64_t))(v11 + 8);
      v89(v86, v80);
      v114[0] = v88;
      sub_100083A00();
      v89(v20, v80);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "GeneralMapsStateCollector: collectLocation END (no location; error: %{public}s, %{public}f seconds elapsed)",
        (uint8_t *)v83,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v80);
    }

    v99();
  }
}

void sub_10000B1F8(uint64_t a1, void *a2, void *a3, uint64_t a4, id a5, uint64_t a6)
{
  uint64_t v10 = v6;
  uint64_t v70 = a4;
  id v60 = a3;
  id v59 = a2;
  uint64_t v61 = a1;
  uint64_t v13 = sub_100082E40();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v63 = v13;
  uint64_t v64 = v14;
  __chkstk_darwin(v13);
  int v69 = v15;
  uint64_t v62 = (char *)&v55 - ((unint64_t)(v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100083610();
  __chkstk_darwin(v16);
  uint64_t v17 = sub_1000836A0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(void **)&v6[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue];
  void *v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v22 = v21;
  char v23 = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  id v58 = v22;
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v25 = (void *)swift_allocObject();
  v25[2] = v24;
  v25[3] = a5;
  v25[4] = a6;
  uint64_t v76 = sub_10001935C;
  uint64_t v77 = v25;
  aBlock = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  uint64_t v73 = 1107296256;
  os_log_type_t v68 = &v74;
  unint64_t v74 = sub_100068EDC;
  int v75 = &unk_10009E3C8;
  _Block_copy(&aBlock);
  uint64_t v71 = &_swiftEmptyArrayStorage;
  sub_100018A68();
  swift_retain();
  swift_retain();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  id v67 = a5;
  sub_100018AC0();
  sub_100083A40();
  sub_100083690();
  swift_allocObject();
  uint64_t v26 = sub_100083660();
  swift_release();
  swift_release();
  *(void *)&v10[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation] = v26;
  swift_release();
  a5 = v59;
  [v59 coordinate];
  GEOLocationCoordinate2DFromCLLocationCoordinate2D();
  double v7 = v27;
  double v8 = v28;
  uint64_t v66 = a6;
  if (qword_1000A7970 != -1) {
LABEL_5:
  }
    swift_once();
  id v57 = (id)qword_1000A7DB0;
  [a5 horizontalAccuracy];
  double v30 = v29;
  uint64_t v31 = v64;
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  uint64_t v33 = v62;
  uint64_t v32 = v63;
  v56(v62, v70, v63);
  uint64_t v34 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v35 = (v34 + 40) & ~v34;
  uint64_t v65 = v34 | 7;
  unint64_t v36 = (unint64_t)&v69[v35 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v10;
  v37[3] = a5;
  v37[4] = v60;
  uint64_t v64 = *(void *)(v31 + 32);
  ((void (*)(char *, char *, uint64_t))v64)((char *)v37 + v35, v33, v32);
  uint64_t v38 = (void *)((char *)v37 + v36);
  uint64_t v39 = v66;
  void *v38 = v67;
  v38[1] = v39;
  uint64_t v76 = sub_10001945C;
  uint64_t v77 = v37;
  aBlock = _NSConcreteStackBlock;
  uint64_t v73 = v9;
  unint64_t v74 = (uint64_t (*)())sub_10000C2E8;
  int v75 = &unk_10009E418;
  id v60 = _Block_copy(&aBlock);
  swift_retain();
  os_log_type_t v40 = v10;
  id v41 = a5;
  swift_release();
  uint64_t v42 = v56;
  v56(v33, v61, v32);
  uint64_t v43 = (v34 + 24) & ~v34;
  uint64_t v44 = &v69[v43];
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v40;
  ((void (*)(uint64_t, char *, uint64_t))v64)(v45 + v43, v33, v32);
  uint64_t v76 = sub_100019520;
  uint64_t v77 = (void *)v45;
  aBlock = _NSConcreteStackBlock;
  uint64_t v73 = v9;
  unint64_t v74 = sub_100068EDC;
  int v75 = &unk_10009E468;
  int v69 = (char *)_Block_copy(&aBlock);
  uint64_t v46 = v40;
  swift_release();
  v42(v33, v70, v32);
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v46;
  ((void (*)(uint64_t, char *, uint64_t))v64)(v47 + v43, v33, v32);
  uint64_t v48 = (void *)(v47 + ((unint64_t)(v44 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v49 = v66;
  void *v48 = v67;
  v48[1] = v49;
  uint64_t v76 = sub_100019670;
  uint64_t v77 = (void *)v47;
  aBlock = _NSConcreteStackBlock;
  uint64_t v73 = v9;
  unint64_t v74 = (uint64_t (*)())sub_10000CA4C;
  int v75 = &unk_10009E4B8;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v51 = v46;
  swift_release();
  id v52 = v57;
  uint64_t v53 = v60;
  uint64_t v54 = v69;
  [v57 shiftCoordinate:v60 accuracy:v69 withCompletionHandler:v50 mustGoToNetworkCallback:v58 errorHandler:v7 callbackQueue:v30];
  _Block_release(v50);
  _Block_release(v54);
  _Block_release(v53);
}

uint64_t sub_10000B924(uint64_t a1, uint64_t (*a2)(char *))
{
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_100082F00();
  sub_10001859C(v3, (uint64_t)qword_1000ACBA8);
  uint64_t v4 = sub_100082EE0();
  os_log_type_t v5 = sub_100083930();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "GeneralMapsStateCollector: collectLocation END (shiftLocation cancelled)", v6, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    *(void *)&Strong[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation] = 0;

    Strong = (char *)swift_release();
  }
  return a2(Strong);
}

void sub_10000BA60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, double a7, double a8)
{
  uint64_t v98 = a4;
  uint64_t v101 = a3;
  uint64_t v14 = sub_100082E40();
  uint64_t v100 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v99 = (char *)&v86 - v18;
  uint64_t v19 = sub_1000836A0();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char **)((char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v23 = *(void **)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  *id v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  LOBYTE(v23) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
LABEL_6:
    uint64_t v65 = sub_100082F00();
    sub_10001859C(v65, (uint64_t)qword_1000ACBA8);
    uint64_t v66 = v100;
    id v67 = v99;
    uint64_t v68 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v98, v97);
    id v69 = v93;
    uint64_t v70 = sub_100082EE0();
    os_log_type_t v71 = sub_100083920();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v98 = swift_slowAlloc();
      uint64_t v104 = v98;
      *(_DWORD *)uint64_t v72 = 136380931;
      uint64_t v102 = (uint64_t)v69;
      uint64_t v103 = v101;
      id v73 = v69;
      uint64_t v74 = sub_100083890();
      uint64_t v102 = sub_10006863C(v74, v75, &v104);
      sub_100083A00();

      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2050;
      uint64_t v76 = v86;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v78 = v77;
      uint64_t v79 = *(void (**)(char *, uint64_t))(v66 + 8);
      uint64_t v80 = v76;
      uint64_t v81 = v97;
      v79(v80, v97);
      uint64_t v102 = v78;
      sub_100083A00();
      v79(v67, v81);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "GeneralMapsStateCollector: collectLocation END (shifted location: %{private}s, %{public}f seconds elapsed)", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
    }

    v96();
    swift_release();
    return;
  }
  uint64_t v25 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation;
  if (*(void *)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation))
  {
    double v92 = a7;
    id v93 = *(id *)&a8;
    uint64_t v86 = v17;
    uint64_t v97 = v14;
    uint64_t v95 = a6;
    v96 = a5;
    uint64_t v94 = swift_retain();
    sub_100083670();
    *(void *)(a1 + v25) = 0;
    swift_release();
    [a2 clientLocation];
    int v26 = v105;
    uint64_t v27 = *(void *)v108;
    uint64_t v28 = *(void *)&v108[8];
    uint64_t v29 = *(void *)&v108[16];
    uint64_t v30 = *(void *)&v108[24];
    uint64_t v31 = *(void *)&v108[32];
    uint64_t v32 = *(void *)&v108[48];
    uint64_t v87 = *(void *)&v108[56];
    int v33 = v109;
    uint64_t v34 = v110;
    int v35 = v111;
    uint64_t v89 = v114;
    uint64_t v88 = v115;
    uint64_t v91 = v117;
    uint64_t v90 = v118;
    char v36 = v119;
    [a2 rawCourse];
    uint64_t v38 = v37;
    id v39 = a2;
    Class isa = (Class)[v39 coarseMetaData];
    if (isa)
    {
      uint64_t v41 = sub_100082DB0();
      unint64_t v43 = v42;

      Class isa = sub_100082DA0().super.isa;
      sub_1000191EC(v41, v43);
    }
    id v44 = objc_allocWithZone((Class)CLLocation);
    int v105 = v26;
    double v106 = v92;
    id v107 = v93;
    *(void *)uint64_t v108 = v27;
    *(void *)&v108[8] = v28;
    *(void *)&v108[16] = v29;
    *(void *)&v108[24] = v30;
    *(void *)&v108[32] = v31;
    *(void *)&v108[40] = v38;
    *(void *)&v108[48] = v32;
    *(void *)&v108[56] = v87;
    int v109 = v33;
    uint64_t v110 = v34;
    int v111 = v35;
    double v112 = v92;
    id v113 = v93;
    uint64_t v114 = v89;
    uint64_t v115 = v88;
    int v116 = 2;
    uint64_t v117 = v91;
    uint64_t v118 = v90;
    char v119 = v36;
    id v45 = [v44 initWithClientLocation:&v105 coarseMetaData:isa];

    id v46 = v45;
    id v93 = v46;
    sub_100008F64((uint64_t)&v105);
    LODWORD(v92) = v108[60];
    uint64_t v47 = *(void *)&v108[52];
    uint64_t v48 = *(void *)&v108[44];
    uint64_t v49 = *(void *)&v108[36];
    uint64_t v50 = *(void *)&v108[28];
    uint64_t v51 = *(void *)&v108[20];
    uint64_t v52 = *(void *)&v108[12];
    uint64_t v53 = *(void *)&v108[4];
    uint64_t v54 = HIDWORD(v107);
    sub_100019284((uint64_t)&v105, (uint64_t)&v120, &qword_1000A7F38);
    sub_100019714(&v120);
    uint64_t v55 = a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
    uint64_t v56 = *(void *)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
    uint64_t v57 = *(void *)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 8);
    uint64_t v58 = *(void *)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 16);
    id v59 = *(void **)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 24);
    uint64_t v60 = *(void *)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 32);
    uint64_t v61 = *(void *)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 40);
    uint64_t v62 = *(void *)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 48);
    uint64_t v63 = *(void **)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 56);
    uint64_t v64 = v101;
    *(void *)uint64_t v55 = v46;
    *(void *)(v55 + 8) = v64;
    *(void *)(v55 + 16) = v54;
    *(void *)(v55 + 24) = v53;
    *(void *)(v55 + 32) = v52;
    *(void *)(v55 + 40) = v51;
    *(void *)(v55 + 48) = v50;
    *(void *)(v55 + 56) = v49;
    *(void *)(v55 + 64) = v48;
    *(void *)(v55 + 72) = v47;
    *(unsigned char *)(v55 + 80) = LOBYTE(v92);
    sub_100018854(v56, v57, v58, v59, v60, v61, v62, v63);
    if (qword_1000A7A00 == -1) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v82 = sub_100082F00();
  sub_10001859C(v82, (uint64_t)qword_1000ACBA8);
  uint64_t v83 = sub_100082EE0();
  os_log_type_t v84 = sub_100083910();
  if (os_log_type_enabled(v83, v84))
  {
    unint64_t v85 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v85 = 0;
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "GeneralMapsStateCollector: collectLocation was cancelled just before completion", v85, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10000C2E8(uint64_t a1, double a2, double a3, double a4)
{
  double v7 = *(void (**)(uint64_t, double, double, double))(a1 + 32);
  uint64_t v8 = swift_retain();
  v7(v8, a2, a3, a4);

  return swift_release();
}

void sub_10000C354(uint64_t a1)
{
  uint64_t v2 = sub_1000836A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  *os_log_type_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6) {
    sub_10000CAB8();
  }
  else {
    __break(1u);
  }
}

void sub_10000C474(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v43 = a5;
  id v44 = a4;
  uint64_t v42 = a3;
  uint64_t v7 = sub_100082E40();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v39[-v12];
  uint64_t v14 = sub_1000836A0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = *(void **)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v20 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation;
  if (*(void *)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation))
  {
    swift_retain();
    sub_100083670();
    *(void *)(a2 + v20) = 0;
    swift_release();
    if (qword_1000A7A00 == -1)
    {
LABEL_4:
      uint64_t v21 = sub_100082F00();
      sub_10001859C(v21, (uint64_t)qword_1000ACBA8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v13, v42, v7);
      swift_errorRetain();
      swift_errorRetain();
      id v22 = sub_100082EE0();
      os_log_type_t v23 = sub_100083930();
      int v24 = v23;
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v45 = a1;
        uint64_t v46 = v42;
        *(_DWORD *)uint64_t v25 = 136446466;
        os_log_t v41 = v22;
        swift_errorRetain();
        sub_100002874(&qword_1000A7F48);
        int v40 = v24;
        uint64_t v26 = sub_100083890();
        uint64_t v45 = sub_10006863C(v26, v27, &v46);
        sub_100083A00();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        *(_WORD *)(v25 + 12) = 2050;
        sub_100082E30();
        sub_100082DC0();
        uint64_t v29 = v28;
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
        v30(v11, v7);
        uint64_t v45 = v29;
        sub_100083A00();
        v30(v13, v7);
        os_log_t v31 = v41;
        _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "GeneralMapsStateCollector: collectLocation END (location shift error: %{public}s, %{public}f seconds elapsed)", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
      }
      v44();
      swift_release();
      return;
    }
LABEL_15:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_100082F00();
  sub_10001859C(v32, (uint64_t)qword_1000ACBA8);
  swift_errorRetain();
  swift_errorRetain();
  int v33 = sub_100082EE0();
  os_log_type_t v34 = sub_100083930();
  if (os_log_type_enabled(v33, v34))
  {
    int v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v45 = a1;
    uint64_t v46 = v36;
    *(_DWORD *)int v35 = 136446210;
    swift_errorRetain();
    sub_100002874(&qword_1000A7F48);
    uint64_t v37 = sub_100083890();
    uint64_t v45 = sub_10006863C(v37, v38, &v46);
    sub_100083A00();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "GeneralMapsStateCollector: collectLocation was cancelled prior to error delivery (error: %{public}s)", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_10000CA4C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_10000CAB8()
{
  uint64_t v1 = sub_100083650();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  os_log_type_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v28 - v6;
  uint64_t v8 = sub_1000836A0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  v28[0] = v12;
  LOBYTE(v12) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    swift_once();
    goto LABEL_10;
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingLocationShiftCancellation))
  {
    swift_retain();
    sub_100082E10();
    double v14 = v13 + -10.0;
    if (v13 + -10.0 <= 0.0)
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_100082F00();
      sub_10001859C(v24, (uint64_t)qword_1000ACBA8);
      uint64_t v25 = sub_100082EE0();
      os_log_type_t v26 = sub_100083930();
      if (os_log_type_enabled(v25, v26))
      {
        unint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "GeneralMapsStateCollector: could not schedule shiftLocation cancellation", v27, 2u);
        swift_slowDealloc();
      }

      swift_release();
    }
    else
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_100082F00();
      sub_10001859C(v15, (uint64_t)qword_1000ACBA8);
      uint64_t v16 = sub_100082EE0();
      os_log_type_t v17 = sub_100083920();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 134349056;
        *(double *)&v28[1] = v14;
        sub_100083A00();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "GeneralMapsStateCollector: scheduled shiftLocation cancellation in %{public}f seconds", v18, 0xCu);
        swift_slowDealloc();
      }

      sub_100083640();
      sub_1000836B0();
      id v19 = *(void (**)(char *, uint64_t))(v2 + 8);
      v19(v5, v1);
      sub_100083980();
      swift_release();
      v19(v7, v1);
    }
    return;
  }
  if (qword_1000A7A00 != -1) {
    goto LABEL_19;
  }
LABEL_10:
  uint64_t v20 = sub_100082F00();
  sub_10001859C(v20, (uint64_t)qword_1000ACBA8);
  uint64_t v21 = sub_100082EE0();
  os_log_type_t v22 = sub_100083910();
  if (os_log_type_enabled(v21, v22))
  {
    os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "GeneralMapsStateCollector: shiftLocation completed before cancellation was scheduled", v23, 2u);
    swift_slowDealloc();
  }
}

void sub_10000CF5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000836A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  *os_log_type_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
LABEL_4:
    uint64_t v8 = sub_100082F00();
    sub_10001859C(v8, (uint64_t)qword_1000ACBA8);
    uint64_t v9 = sub_100082EE0();
    os_log_type_t v10 = sub_100083910();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "GeneralMapsStateCollector: skipped collectNavigationRoute (state collection cancelled)", v11, 2u);
      swift_slowDealloc();
    }
    goto LABEL_14;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled))
  {
    if (qword_1000A7A00 == -1) {
      goto LABEL_4;
    }
    goto LABEL_17;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100082F00();
  sub_10001859C(v12, (uint64_t)qword_1000ACBA8);
  double v13 = sub_100082EE0();
  os_log_type_t v14 = sub_100083920();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "GeneralMapsStateCollector: collectNavigationRoute BEGIN", v15, 2u);
    swift_slowDealloc();
  }

  dispatch_group_enter(*(dispatch_group_t *)(v1
                                           + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup));
  sub_10000D264();
  uint64_t v16 = self;
  id v17 = [v16 sharedService];
  if (v17)
  {
    uint64_t v18 = v17;
    [v17 registerObserver:v1];
  }
  id v19 = [v16 sharedService];
  if (v19)
  {
    uint64_t v9 = v19;
    [v19 openForClient:v1];
LABEL_14:
  }
}

uint64_t sub_10000D264()
{
  uint64_t v1 = v0;
  v20[0] = sub_100083650();
  uint64_t v2 = *(void *)(v20[0] - 8);
  uint64_t v3 = __chkstk_darwin(v20[0]);
  os_log_type_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)v20 - v6;
  uint64_t v8 = sub_100083610();
  __chkstk_darwin(v8);
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100082F00();
  sub_10001859C(v9, (uint64_t)qword_1000ACBA8);
  os_log_type_t v10 = sub_100082EE0();
  os_log_type_t v11 = sub_100083920();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134349056;
    aBlock[0] = 0x4014000000000000;
    sub_100083A00();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "GeneralMapsStateCollector: scheduled collectNavigationRoute cancellation in %{public}f seconds", v12, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100019314;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  aBlock[3] = &unk_10009E378;
  _Block_copy(aBlock);
  v20[1] = &_swiftEmptyArrayStorage;
  sub_100018A68();
  swift_retain();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  sub_100083A40();
  sub_100083690();
  swift_allocObject();
  uint64_t v14 = sub_100083660();
  swift_release();
  swift_release();
  uint64_t v15 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNavigationRouteCancellation;
  *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNavigationRouteCancellation) = v14;
  swift_release();
  sub_100083640();
  sub_1000836B0();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  id v17 = v5;
  uint64_t v18 = v20[0];
  uint64_t result = v16(v17, v20[0]);
  if (*(void *)(v1 + v15))
  {
    swift_retain();
    sub_100083980();
    swift_release();
    return v16(v7, v18);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10000D614()
{
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100082F00();
  sub_10001859C(v0, (uint64_t)qword_1000ACBA8);
  uint64_t v1 = sub_100082EE0();
  os_log_type_t v2 = sub_100083910();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "GeneralMapsStateCollector: running fetchNavigationRoute because nav service did not respond in time", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    *(void *)&Strong[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNavigationRouteCancellation] = 0;

    swift_release();
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_10000D760();
  }
}

void sub_10000D760()
{
  uint64_t v1 = v0;
  sub_100002874(&qword_1000A8038);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_1000836A0();
  uint64_t v5 = *(v4 - 1);
  __chkstk_darwin();
  id v7 = (uint64_t *)((char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  void *v7 = v8;
  (*(void (**)(void *, void, void *))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = sub_1000836C0();
  (*(void (**)(void *, void *))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_52:
    swift_once();
LABEL_5:
    uint64_t v11 = sub_100082F00();
    sub_10001859C(v11, (uint64_t)qword_1000ACBA8);
    uint64_t v12 = sub_100082EE0();
    os_log_type_t v13 = sub_100083930();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "GeneralMapsStateCollector: collectNavigationRoute END (state collection cancelled)", v14, 2u);
      swift_slowDealloc();
    }

    [v4 unregisterObserver:v1];
    if (![v4 isOpenForClient:v1]) {
      goto LABEL_9;
    }
LABEL_8:
    [v4 closeForClient:v1];
LABEL_9:
    dispatch_group_leave(*(dispatch_group_t *)(v1
                                             + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup));

    return;
  }
  os_log_type_t v10 = [self sharedService];
  if (v10)
  {
    uint64_t v4 = v10;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled))
    {
      if (qword_1000A7A00 == -1) {
        goto LABEL_5;
      }
      goto LABEL_52;
    }
    if ([v10 isOpenForClient:v1])
    {
      if (![v4 isInNavigatingState]
        || (id v15 = [v4 route]) == 0)
      {
        if (qword_1000A7A00 != -1) {
          swift_once();
        }
        uint64_t v28 = sub_100082F00();
        sub_10001859C(v28, (uint64_t)qword_1000ACBA8);
        uint64_t v29 = sub_100082EE0();
        os_log_type_t v30 = sub_100083920();
        if (os_log_type_enabled(v29, v30))
        {
          os_log_t v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_t v31 = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "GeneralMapsStateCollector: collectNavigationRoute END (not navigating)", v31, 2u);
          swift_slowDealloc();
        }
        goto LABEL_25;
      }
      uint64_t v16 = v15;
      id v17 = [v4 batteryChargeInfoForRoute:v15];
      id v18 = [v4 displayETAInfoForRoute:v16];
      if (v18)
      {
        id v105 = v18;
        id v19 = [v4 remainingDistanceInfoForRoute:v16];
        if (v19)
        {
          uint64_t v20 = v19;
          id v21 = [v4 upcomingStop];
          id v22 = [v21 timezone];

          uint64_t v102 = v17;
          if (v22)
          {
            sub_100082EC0();

            uint64_t v23 = sub_100082ED0();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v3, 0, 1, v23);
          }
          else
          {
            uint64_t v23 = sub_100082ED0();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v3, 1, 1, v23);
          }
          LODWORD(v101) = [v16 transportType];
          sub_100082ED0();
          uint64_t v33 = *(void *)(v23 - 8);
          int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v3, 1, v23);
          uint64_t v104 = v102;
          id v103 = v105;
          id v32 = v20;
          Class isa = 0;
          if (v34 != 1)
          {
            Class isa = sub_100082EB0().super.isa;
            (*(void (**)(char *, uint64_t))(v33 + 8))(v3, v23);
          }
          id v36 = objc_allocWithZone((Class)GuidanceETA);
          uint64_t v37 = v103;
          unint64_t v38 = v104;
          id v39 = [v36 initWithDisplayETA:v103 remainingDistance:v32 batteryChargeInfo:v104 destinationTimeZone:isa transportType:v101];

          if (v39)
          {
            id v105 = v32;
            id v101 = v16;
            sub_100008F64((uint64_t)v108);
            LODWORD(v100) = v115;
            *(void *)&long long v99 = v114[1];
            uint64_t v98 = v114[2];
            uint64_t v97 = v113;
            uint64_t v40 = v111;
            uint64_t v96 = v112;
            uint64_t v41 = v110;
            uint64_t v102 = v39;
            uint64_t v42 = v109;
            uint64_t v43 = v108[0];
            uint64_t v44 = v108[1];
            sub_100019284((uint64_t)v114, (uint64_t)&v124, &qword_1000A8040);
            sub_100019714(&v124);
            uint64_t v45 = v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
            uint64_t v46 = *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
            uint64_t v47 = *(void *)(v1
                            + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                            + 8);
            uint64_t v48 = *(void *)(v1
                            + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                            + 16);
            uint64_t v49 = *(void **)(v1
                           + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                           + 24);
            uint64_t v50 = *(void *)(v1
                            + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                            + 32);
            uint64_t v51 = *(void *)(v1
                            + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                            + 40);
            uint64_t v52 = *(void *)(v1
                            + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                            + 48);
            uint64_t v53 = *(void **)(v1
                           + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                           + 56);
            *(void *)uint64_t v45 = v43;
            *(void *)(v45 + 8) = v44;
            *(void *)(v45 + 16) = v42;
            *(void *)(v45 + 24) = v41;
            uint64_t v54 = v96;
            *(void *)(v45 + 32) = v40;
            *(void *)(v45 + 40) = v54;
            *(void *)(v45 + 48) = v97;
            *(void *)(v45 + 56) = v16;
            *(void *)(v45 + 64) = v99;
            *(void *)(v45 + 72) = v98;
            *(unsigned char *)(v45 + 80) = v100;
            sub_100018854(v46, v47, v48, v49, v50, v51, v52, v53);
            id v55 = [v102 etaDateStringWithAMPMSymbol:1 allowTimeZone:0];
            if (v55)
            {
              uint64_t v56 = v55;
              uint64_t v98 = sub_100083870();
              uint64_t v97 = v57;
            }
            else
            {
              uint64_t v98 = 0;
              uint64_t v97 = 0;
            }
            sub_100008F64((uint64_t)v116);
            LODWORD(v100) = v122[16];
            uint64_t v63 = v121;
            long long v99 = v120;
            uint64_t v64 = v118;
            uint64_t v65 = v119;
            uint64_t v66 = v117;
            uint64_t v68 = v116[0];
            uint64_t v67 = v116[1];
            sub_100019284((uint64_t)v122, (uint64_t)v123, &qword_1000A7F90);
            sub_1000192E8((uint64_t)v123);
            uint64_t v69 = *(void *)v45;
            uint64_t v70 = *(void *)(v45 + 8);
            uint64_t v71 = *(void *)(v45 + 16);
            uint64_t v72 = *(void **)(v45 + 24);
            uint64_t v73 = *(void *)(v45 + 32);
            uint64_t v74 = *(void *)(v45 + 40);
            uint64_t v75 = *(void *)(v45 + 48);
            uint64_t v76 = *(void **)(v45 + 56);
            *(void *)uint64_t v45 = v68;
            *(void *)(v45 + 8) = v67;
            *(void *)(v45 + 16) = v66;
            *(void *)(v45 + 24) = v64;
            *(void *)(v45 + 32) = v65;
            *(_OWORD *)(v45 + 40) = v99;
            uint64_t v77 = v98;
            *(void *)(v45 + 56) = v63;
            *(void *)(v45 + 64) = v77;
            *(void *)(v45 + 72) = v97;
            *(unsigned char *)(v45 + 80) = v100;
            sub_100018854(v69, v70, v71, v72, v73, v74, v75, v76);
            if (qword_1000A7A00 != -1) {
              swift_once();
            }
            uint64_t v78 = sub_100082F00();
            sub_10001859C(v78, (uint64_t)qword_1000ACBA8);
            id v79 = v101;
            uint64_t v80 = v102;
            id v81 = v79;
            uint64_t v29 = v80;
            uint64_t v82 = sub_100082EE0();
            os_log_type_t v83 = sub_100083920();
            int v84 = v83;
            if (os_log_type_enabled(v82, v83))
            {
              uint64_t v85 = swift_slowAlloc();
              uint64_t v102 = swift_slowAlloc();
              id v107 = v102;
              *(_DWORD *)uint64_t v85 = 67174915;
              LODWORD(v101) = v84;
              unsigned int v86 = [v81 expectedTime];

              LODWORD(v106) = v86 / 0x3C;
              sub_100083A00();

              *(_WORD *)(v85 + 8) = 2081;
              uint64_t v100 = v85 + 10;
              uint64_t v87 = v29;
              id v88 = [v87 description];
              uint64_t v89 = sub_100083870();
              *(void *)&long long v99 = v82;
              unint64_t v91 = v90;

              uint64_t v106 = sub_10006863C(v89, v91, (uint64_t *)&v107);
              sub_100083A00();

              swift_bridgeObjectRelease();
              double v92 = (void *)v99;
              _os_log_impl((void *)&_mh_execute_header, (os_log_t)v99, (os_log_type_t)v101, "GeneralMapsStateCollector: collectNavigationRoute END (route with expected travel time: %{private}u mins, ETA %{private}s)", (uint8_t *)v85, 0x12u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            id v93 = v105;
            uint64_t v94 = v103;
            sub_10000E454();

LABEL_25:
            goto LABEL_42;
          }

          id v17 = v102;
        }
        else
        {
          id v32 = v105;
        }
      }
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_100082F00();
      sub_10001859C(v58, (uint64_t)qword_1000ACBA8);
      id v59 = v16;
      uint64_t v25 = sub_100082EE0();
      os_log_type_t v60 = sub_100083930();
      if (os_log_type_enabled(v25, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 67174657;
        LODWORD(v116[0]) = [v59 expectedTime] / 0x3C;
        sub_100083A00();

        _os_log_impl((void *)&_mh_execute_header, v25, v60, "GeneralMapsStateCollector: collectNavigationRoute END (route with expected travel time: %{private}u mins, but no ETA available)", v61, 8u);
        swift_slowDealloc();
        uint64_t v62 = v59;
      }
      else
      {

        uint64_t v62 = v17;
        id v17 = v59;
        uint64_t v25 = v59;
      }
    }
    else
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_100082F00();
      sub_10001859C(v24, (uint64_t)qword_1000ACBA8);
      uint64_t v25 = sub_100082EE0();
      os_log_type_t v26 = sub_100083930();
      if (os_log_type_enabled(v25, v26))
      {
        unint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "GeneralMapsStateCollector: collectNavigationRoute END (nav service was closed for client)", v27, 2u);
        swift_slowDealloc();
      }
    }

LABEL_42:
    [v4 unregisterObserver:v1];
    if (([v4 isOpenForClient:v1] & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10000E454()
{
  uint64_t v1 = v0;
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100082F00();
  sub_10001859C(v2, (uint64_t)qword_1000ACBA8);
  uint64_t v3 = sub_100082EE0();
  os_log_type_t v4 = sub_100083920();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "GeneralMapsStateCollector: collectShareETAAvailability BEGIN", v5, 2u);
    swift_slowDealloc();
  }

  dispatch_group_enter(*(dispatch_group_t *)&v1[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup]);
  id v6 = [self sharedInstance];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    v11[4] = sub_10001927C;
    v11[5] = v8;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_10000E7BC;
    v11[3] = &unk_10009E350;
    id v9 = _Block_copy(v11);
    os_log_type_t v10 = v1;
    swift_release();
    [v7 performBlockAfterInitialSync:v9];
    _Block_release(v9);
  }
  else
  {
    __break(1u);
  }
}

void sub_10000E620(uint64_t a1, uint64_t a2)
{
  char v3 = MSPSharedTripSharingAvailable();
  sub_100008F64((uint64_t)&v21);
  uint64_t v4 = v27;
  uint64_t v6 = v24;
  uint64_t v5 = v25;
  uint64_t v7 = v22;
  uint64_t v8 = a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
  uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
  uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 8);
  uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 16);
  uint64_t v12 = *(void **)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 24);
  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 32);
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 40);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 48);
  uint64_t v16 = *(void **)(a2 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 56);
  *(_OWORD *)uint64_t v8 = v21;
  *(void *)(v8 + 16) = v7;
  *(_OWORD *)(v8 + 24) = v23;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v5;
  *(_OWORD *)(v8 + 56) = v26;
  *(void *)(v8 + 72) = v4;
  *(unsigned char *)(v8 + 80) = v3;
  sub_100018854(v9, v10, v11, v12, v13, v14, v15, v16);
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100082F00();
  sub_10001859C(v17, (uint64_t)qword_1000ACBA8);
  id v18 = sub_100082EE0();
  os_log_type_t v19 = sub_100083920();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 67240192;
    sub_100083A00();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "GeneralMapsStateCollector: collectShareETAAvailability END (available: %{BOOL,public}d)", v20, 8u);
    swift_slowDealloc();
  }

  dispatch_group_leave(*(dispatch_group_t *)(a2
                                           + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup));
}

void sub_10000E7BC(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_10000E824()
{
  uint64_t v1 = sub_100082F00();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000836A0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  void *v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_29:
    swift_once();
LABEL_4:
    sub_10001859C(v1, (uint64_t)qword_1000ACBA8);
    uint64_t v11 = sub_100082EE0();
    os_log_type_t v12 = sub_100083910();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      uint64_t v14 = "GeneralMapsStateCollector: skipped collectMapsActivityMapType (state collection cancelled)";
LABEL_19:
      _os_log_impl((void *)&_mh_execute_header, v11, v12, v14, v13, 2u);
      swift_slowDealloc();
      goto LABEL_20;
    }
    goto LABEL_20;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled))
  {
    if (qword_1000A7A00 == -1) {
      goto LABEL_4;
    }
    goto LABEL_29;
  }
  id v15 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v16 = sub_100083850();
  id v17 = [v15 initWithSuiteName:v16];

  if (!v17)
  {
    if (qword_1000A7A00 == -1) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  id v18 = v17;
  NSString v19 = sub_100083850();
  uint64_t v20 = (uint64_t)[v18 integerForKey:v19];

  if (v20 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v20 > 0x7FFFFFFF)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_once();
LABEL_17:
    sub_10001859C(v1, (uint64_t)qword_1000ACBA8);
    uint64_t v11 = sub_100082EE0();
    os_log_type_t v12 = sub_100083910();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      uint64_t v14 = "GeneralMapsStateCollector: collectMapsActivityMapType found no MapsLastActivityMapType in defaults";
      goto LABEL_19;
    }
LABEL_20:

    return;
  }
  if ((v20 - 1) > 1)
  {
    sub_100008F64((uint64_t)v50);
    char v27 = v53;
    uint64_t v28 = v52;
    uint64_t v30 = v50[5];
    uint64_t v29 = v50[6];
    uint64_t v31 = v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
    uint64_t v32 = *(void *)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
    uint64_t v33 = *(void *)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 8);
    uint64_t v34 = *(void *)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 16);
    int v35 = *(void **)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 24);
    uint64_t v36 = *(void *)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 32);
    uint64_t v37 = *(void *)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 40);
    uint64_t v38 = *(void *)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 48);
    id v39 = *(void **)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 56);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v50;
    *(void *)(v31 + 16) = v20;
    *(_OWORD *)(v31 + 24) = *(_OWORD *)&v50[3];
    *(void *)(v31 + 40) = v30;
    *(void *)(v31 + 48) = v29;
    *(_OWORD *)(v31 + 56) = v51;
    *(void *)(v31 + 72) = v28;
    *(unsigned char *)(v31 + 80) = v27;
    sub_100018854(v32, v33, v34, v35, v36, v37, v38, v39);

    return;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_10001859C(v1, (uint64_t)qword_1000ACBA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v21, v1);
  unsigned int v22 = sub_100082EE0();
  int v23 = sub_100083910();
  if (!os_log_type_enabled(v22, (os_log_type_t)v23))
  {

LABEL_27:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return;
  }
  int v48 = v23;
  uint64_t v24 = (uint8_t *)swift_slowAlloc();
  uint64_t v47 = swift_slowAlloc();
  v50[0] = v47;
  *(_DWORD *)uint64_t v24 = 136446210;
  if (v20 == 2)
  {
    uint64_t v25 = @"Hybrid";
    uint64_t v40 = @"Hybrid";
  }
  else if (v20 == 1)
  {
    uint64_t v25 = @"Satellite";
    long long v26 = @"Satellite";
  }
  else
  {
    uint64_t v25 = +[NSString stringWithFormat:@"(unknown: %i)", v20];
  }
  uint64_t v41 = v25;
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = sub_100083870();
    unint64_t v45 = v44;

    uint64_t v49 = sub_10006863C(v43, v45, v50);
    sub_100083A00();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v48, "%{public}s map type not supported in Maps widget", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    goto LABEL_27;
  }
  __break(1u);
}

void sub_10000EE58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000836A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_50:
    swift_once();
LABEL_4:
    uint64_t v8 = sub_100082F00();
    sub_10001859C(v8, (uint64_t)qword_1000ACBA8);
    uint64_t v9 = sub_100082EE0();
    os_log_type_t v10 = sub_100083910();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      os_log_type_t v12 = "GeneralMapsStateCollector: skipped collectMapsActivityCamera (state collection cancelled)";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v12, v11, 2u);
      swift_slowDealloc();
      goto LABEL_12;
    }
    goto LABEL_12;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled))
  {
    if (qword_1000A7A00 == -1) {
      goto LABEL_4;
    }
    goto LABEL_50;
  }
  sub_100008F64((uint64_t)v79);
  sub_1000187DC((uint64_t)v79);
  sub_100019284((uint64_t)v79, (uint64_t)v85, &qword_1000A7F38);
  sub_100019284((uint64_t)v85, (uint64_t)&v86, &qword_1000A7F38);
  if (!v86)
  {
    id v14 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v15 = sub_100083850();
    NSString v16 = [v14 initWithSuiteName:v15];

    if (!v16
      || (uint64_t v9 = v16,
          NSString v17 = sub_100083850(),
          id v18 = [v9 dataForKey:v17],
          v9,
          v17,
          !v18))
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_100082F00();
      sub_10001859C(v37, (uint64_t)qword_1000ACBA8);
      uint64_t v9 = sub_100082EE0();
      os_log_type_t v38 = sub_100083910();
      if (os_log_type_enabled(v9, v38))
      {
        id v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v38, "GeneralMapsStateCollector: collectMapsActivityCamera found no MapsLastActivityCamera in defaults", v39, 2u);
        swift_slowDealloc();
      }
      else
      {

        uint64_t v9 = v16;
      }
      goto LABEL_12;
    }
    uint64_t v19 = sub_100082DB0();
    unint64_t v21 = v20;

    id v22 = objc_allocWithZone((Class)GEOURLCamera);
    sub_100019194(v19, v21);
    Class isa = sub_100082DA0().super.isa;
    sub_1000191EC(v19, v21);
    id v24 = [v22 initWithData:isa];

    if (v24)
    {
      id v25 = v24;
      if ([v25 hasLatitude]
        && [v25 hasLongitude]
        && [v25 hasAltitude])
      {
        [v25 latitude];
        double v27 = v26;
        [v25 longitude];
        if (v28 >= -180.0 && v28 <= 180.0 && v27 >= -90.0 && v27 <= 90.0)
        {
          if (qword_1000A7A00 != -1) {
            swift_once();
          }
          uint64_t v78 = v19;
          uint64_t v29 = sub_100082F00();
          sub_10001859C(v29, (uint64_t)qword_1000ACBA8);
          uint64_t v30 = v25;
          uint64_t v31 = sub_100082EE0();
          os_log_type_t v32 = sub_100083910();
          BOOL v33 = os_log_type_enabled(v31, v32);
          unint64_t v77 = v21;
          if (v33)
          {
            uint64_t v34 = (uint8_t *)swift_slowAlloc();
            uint64_t v75 = (void *)swift_slowAlloc();
            uint64_t v76 = v34;
            *(_DWORD *)uint64_t v34 = 138477827;
            v80[0] = v30;
            int v35 = v30;
            uint64_t v36 = v30;
            sub_100083A00();
            *uint64_t v75 = v24;

            uint64_t v30 = v35;
            _os_log_impl((void *)&_mh_execute_header, v31, v32, "GeneralMapsStateCollector: collectMapsActivityCamera found valid camera (%{private}@)", v76, 0xCu);
            sub_100002874(&qword_1000A8030);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v31 = v30;
          }

          uint64_t v76 = v30;
          sub_100008F64((uint64_t)v80);
          LODWORD(v75) = v83;
          uint64_t v55 = v82[4];
          uint64_t v74 = v82[5];
          uint64_t v73 = v82[6];
          uint64_t v56 = v82[2];
          uint64_t v57 = v82[3];
          uint64_t v58 = v82[1];
          uint64_t v59 = v81;
          uint64_t v60 = v80[0];
          uint64_t v61 = v80[1];
          sub_100019284((uint64_t)v82, (uint64_t)&v84, &qword_1000A8010);
          sub_100019714(&v84);
          uint64_t v62 = v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
          uint64_t v63 = *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
          uint64_t v64 = *(void *)(v1
                          + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                          + 8);
          uint64_t v65 = *(void *)(v1
                          + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                          + 16);
          uint64_t v66 = *(void **)(v1
                         + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                         + 24);
          uint64_t v67 = *(void *)(v1
                          + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                          + 32);
          uint64_t v68 = *(void *)(v1
                          + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                          + 40);
          uint64_t v69 = *(void *)(v1
                          + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                          + 48);
          uint64_t v70 = *(void **)(v1
                         + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                         + 56);
          *(void *)uint64_t v62 = v60;
          *(void *)(v62 + 8) = v61;
          *(void *)(v62 + 16) = v59;
          *(void *)(v62 + 24) = v24;
          *(void *)(v62 + 32) = v58;
          *(void *)(v62 + 40) = v56;
          *(void *)(v62 + 48) = v57;
          *(void *)(v62 + 56) = v55;
          uint64_t v71 = v73;
          *(void *)(v62 + 64) = v74;
          *(void *)(v62 + 72) = v71;
          *(unsigned char *)(v62 + 80) = (_BYTE)v75;
          sub_100018854(v63, v64, v65, v66, v67, v68, v69, v70);

          sub_1000191EC(v78, v77);
          uint64_t v9 = v76;

          goto LABEL_12;
        }
        if (qword_1000A7A00 != -1) {
          swift_once();
        }
        uint64_t v47 = sub_100082F00();
        sub_10001859C(v47, (uint64_t)qword_1000ACBA8);
        uint64_t v41 = v25;
        int v48 = (uint8_t *)sub_100082EE0();
        os_log_type_t v49 = sub_100083930();
        if (os_log_type_enabled((os_log_t)v48, v49))
        {
          uint64_t v76 = v48;
          uint64_t v50 = swift_slowAlloc();
          uint64_t v78 = v19;
          long long v51 = (uint8_t *)v50;
          uint64_t v52 = (void *)swift_slowAlloc();
          *(_DWORD *)long long v51 = 138477827;
          v80[0] = v41;
          char v53 = v41;
          sub_100083A00();
          void *v52 = v24;

          uint64_t v54 = v76;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v76, v49, "GeneralMapsStateCollector: collectMapsActivityCamera camera (%{private}@) invalid coordinate", v51, 0xCu);
          sub_100002874(&qword_1000A8030);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1000191EC(v78, v21);
          goto LABEL_12;
        }

        sub_1000191EC(v19, v21);
LABEL_39:

        uint64_t v9 = v41;
        goto LABEL_12;
      }
    }
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_100082F00();
    sub_10001859C(v40, (uint64_t)qword_1000ACBA8);
    uint64_t v41 = v24;
    uint64_t v42 = sub_100082EE0();
    os_log_type_t v43 = sub_100083930();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v78 = v19;
      unint64_t v77 = v21;
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      unint64_t v45 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v44 = 138477827;
      if (v24)
      {
        v80[0] = v41;
        uint64_t v46 = v41;
      }
      else
      {
        v80[0] = 0;
      }
      sub_100083A00();
      *unint64_t v45 = v24;

      _os_log_impl((void *)&_mh_execute_header, v42, v43, "GeneralMapsStateCollector: collectMapsActivityCamera camera (%{private}@) missing data", v44, 0xCu);
      sub_100002874(&qword_1000A8030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1000191EC(v78, v77);
      goto LABEL_12;
    }

    sub_1000191EC(v19, v21);
    goto LABEL_39;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100082F00();
  sub_10001859C(v13, (uint64_t)qword_1000ACBA8);
  uint64_t v9 = sub_100082EE0();
  os_log_type_t v10 = sub_100083910();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    os_log_type_t v12 = "GeneralMapsStateCollector: collectMapsActivityCamera had location info";
    goto LABEL_11;
  }
LABEL_12:
}

void sub_10000F99C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v276 = a1;
  uint64_t v279 = sub_100082EA0();
  uint64_t v281 = *(void *)(v279 - 8);
  __chkstk_darwin(v279);
  v284 = (char *)&v259 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100002874(&qword_1000A7F30);
  __chkstk_darwin(v4 - 8);
  v280 = (char *)&v259 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082F00();
  uint64_t v282 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v259 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  v270 = (char *)&v259 - v11;
  __chkstk_darwin(v10);
  v267 = (char *)&v259 - v12;
  v285 = (int *)type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  uint64_t v273 = *((void *)v285 - 1);
  uint64_t v13 = __chkstk_darwin(v285);
  uint64_t v269 = (uint64_t)&v259 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v268 = (uint64_t)&v259 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v266 = (uint64_t)&v259 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v272 = (uint64_t)&v259 - v20;
  __chkstk_darwin(v19);
  uint64_t v274 = (uint64_t)&v259 - v21;
  uint64_t v22 = sub_100082E40();
  uint64_t v291 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  v277 = (char *)&v259 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  v286 = (char *)&v259 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v259 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  v275 = (char *)&v259 - v31;
  uint64_t v271 = v32;
  __chkstk_darwin(v30);
  v288 = (char *)&v259 - v33;
  uint64_t v34 = sub_1000836A0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (uint64_t *)((char *)&v259 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v38 = *(void **)&v2[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue];
  *uint64_t v37 = v38;
  (*(void (**)(void *, void, uint64_t))(v35 + 104))(v37, enum case for DispatchPredicate.onQueue(_:), v34);
  id v39 = v38;
  LOBYTE(v38) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v35 + 8))(v37, v34);
  if ((v38 & 1) == 0)
  {
    __break(1u);
LABEL_152:
    swift_once();
LABEL_4:
    sub_10001859C(v6, (uint64_t)qword_1000ACBA8);
    uint64_t v40 = sub_100082EE0();
    os_log_type_t v41 = sub_100083910();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "GeneralMapsStateCollector: skipped collectNearbyCategories (state collection cancelled)", v42, 2u);
      swift_slowDealloc();
    }
    goto LABEL_6;
  }
  if (v2[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled])
  {
    if (qword_1000A7A00 == -1) {
      goto LABEL_4;
    }
    goto LABEL_152;
  }
  id v43 = [self sharedService];
  if (!v43)
  {
    __break(1u);
    goto LABEL_155;
  }
  unint64_t v44 = v43;
  v263 = v9;
  v283 = v29;
  uint64_t v289 = v6;
  uint64_t v290 = v22;
  id v45 = [v43 defaultTraits];

  if (!v45)
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  uint64_t v287 = swift_allocObject();
  [v45 setIsWidgetRequest:1];
  sub_100008F64((uint64_t)v296);
  sub_1000187DC((uint64_t)v296);
  if ((v297 - 1) < 3) {
    uint64_t v46 = (v297 + 1);
  }
  else {
    uint64_t v46 = 1;
  }
  [v45 setMode:v46];
  sub_100008F64((uint64_t)v298);
  sub_100019284((uint64_t)v298, (uint64_t)v314, &qword_1000A7F38);
  id v265 = (id)v298[0];
  uint64_t v47 = (void *)v298[3];
  int v48 = (void *)v298[7];
  sub_100019284((uint64_t)v314, (uint64_t)&v315, &qword_1000A7F38);
  v278 = v2;
  if (v315)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id v49 = objc_allocWithZone((Class)GEOLocation);
    id v50 = v265;
    id v51 = [v49 initWithCLLocation:v265];
    [v45 setDeviceLocation:v51];

    [v50 coordinate];
    MKMapRectMakeWithRadialDistance();
    double v55 = nullsub_1(v52, v53, v54);
    id v59 = [objc_allocWithZone((Class)GEOMapRegion) initWithMapRect:v55, v56, v57, v58];
    [v45 setMapRegion:v59];

    char v60 = 0;
    goto LABEL_16;
  }
  sub_1000187DC((uint64_t)v298);
  sub_100008F64((uint64_t)v299);
  sub_100019284((uint64_t)&v300, (uint64_t)&v313, &qword_1000A8010);
  sub_100018F64(&v313);
  sub_1000187DC((uint64_t)v299);
  sub_100019284((uint64_t)&v313, (uint64_t)v316, &qword_1000A8010);
  id v61 = v316[0];
  if (v316[0])
  {
    [v316[0] latitude];
    double v63 = v62;
    [v61 longitude];
    id v65 = [objc_allocWithZone((Class)GEOLocation) initWithLatitude:v63 longitude:v64];
    [v45 setDeviceLocation:v65];

    sub_100037280();
    double v69 = nullsub_1(v66, v67, v68);
    id v50 = [objc_allocWithZone((Class)GEOMapRegion) initWithMapRect:v69, v70, v71, v72];
    [v45 setMapRegion:v50];
    sub_100019714(&v313);
    char v60 = 1;
LABEL_16:
    uint64_t v73 = (char *)(v287 + 16);

    char *v73 = v60;
    sub_100082E30();
    id v74 = [self sharedConfiguration];
    if (v74)
    {
      uint64_t v75 = v74;
      id v76 = [v74 countryCode];

      if (v76)
      {
        v262 = v73;
        uint64_t v77 = sub_100083870();
        uint64_t v79 = v78;

        id v265 = v45;
        id v80 = [v45 deviceLocation];
        if (v80)
        {
          id v81 = v80;
          uint64_t v82 = v285;
          uint64_t v83 = swift_allocBox();
          uint64_t v85 = v84;
          int v86 = GEOGetUserPreferredTransportType();
          sub_100008F64((uint64_t)v301);
          sub_1000187DC((uint64_t)v301);
          int v87 = v301[4];
          v260 = *(void (**)(char *, char *, uint64_t))(v291 + 32);
          uint64_t v261 = v291 + 32;
          v260(v85, v288, v290);
          id v88 = (uint64_t *)&v85[v82[5]];
          uint64_t *v88 = v77;
          v88[1] = v79;
          uint64_t v89 = v82[6];
          *(void *)&v85[v89] = v81;
          uint64_t v90 = v82[7];
          *(_DWORD *)&v85[v90] = v86;
          uint64_t v91 = v82[8];
          *(_DWORD *)&v85[v91] = v87;
          uint64_t v92 = v82[9];
          v288 = v85;
          *(void *)&v85[v92] = 0;
          if (qword_1000A7978 != -1) {
            swift_once();
          }
          char v93 = *v262;
          swift_beginAccess();
          uint64_t v94 = off_1000A7DB8;
          uint64_t v95 = *((void *)off_1000A7DB8 + 2);
          uint64_t v264 = v83;
          if (v95 && (unint64_t v96 = sub_100075878(v93), (v97 & 1) != 0))
          {
            uint64_t v98 = v94[7];
            uint64_t v99 = v272;
            sub_100018E10(v98 + *(void *)(v273 + 72) * v96, v272);
            uint64_t v100 = v99;
            uint64_t v101 = v274;
            sub_100018E74(v100, v274);
            swift_endAccess();
            if (*(void *)(v101 + v285[9]))
            {
              if (*(_DWORD *)&v288[v90] == *(_DWORD *)(v101 + v285[7]))
              {
                uint64_t v102 = v290;
                uint64_t v103 = v291;
                if (*(_DWORD *)&v288[v91] == *(_DWORD *)(v101 + v285[8]))
                {
                  uint64_t v104 = v288;
                  uint64_t v273 = *(void *)(v101 + v285[9]);
                  swift_bridgeObjectRetain();
                  uint64_t v105 = v101;
                  uint64_t v106 = v104;
                  GEOConfigGetDouble();
                  double v108 = v107;
                  unsigned int v109 = v275;
                  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v275, v104, v102);
                  sub_100082DC0();
                  double v111 = v110;
                  (*(void (**)(char *, uint64_t))(v103 + 8))(v109, v102);
                  if (v111 >= v108)
                  {
                    swift_bridgeObjectRelease();
                    if (qword_1000A7A00 != -1) {
                      swift_once();
                    }
                    sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
                    v212 = sub_100082EE0();
                    os_log_type_t v213 = sub_100083910();
                    if (!os_log_type_enabled(v212, v213)) {
                      goto LABEL_104;
                    }
                    v214 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v214 = 0;
                    v215 = "GeneralMapsStateCollector: collectNearbyCategories will not use cache: snapshot has expired";
LABEL_103:
                    _os_log_impl((void *)&_mh_execute_header, v212, v213, v215, v214, 2u);
                    swift_slowDealloc();
LABEL_104:

                    sub_100018ED8(v274);
                    goto LABEL_44;
                  }
                  uint64_t v112 = (void *)(v105 + v285[5]);
                  if (*v88 == *v112 && v88[1] == v112[1] || (sub_100083C00() & 1) != 0)
                  {
                    GEOConfigGetDouble();
                    double v114 = v113;
                    [*(id *)&v104[v89] coordinate];
                    [*(id *)(v105 + v285[6]) coordinate];
                    j__GEOCalculateDistance();
                    if (v115 < v114)
                    {
                      unint64_t v116 = v273;
                      swift_bridgeObjectRetain();
                      unsigned int v117 = v278;
                      sub_100008F64((uint64_t)&aBlock);
                      LODWORD(v291) = v312;
                      uint64_t v118 = v309;
                      uint64_t v290 = v310;
                      v288 = v311;
                      uint64_t v120 = v307;
                      uint64_t v119 = v308;
                      uint64_t v121 = v305;
                      uint64_t v122 = v304;
                      uint64_t v123 = aBlock;
                      uint64_t v124 = v303;
                      sub_100019284((uint64_t)&v306, (uint64_t)v295, &qword_1000A8008);
                      sub_100018F38((uint64_t)v295);
                      uint64_t v125 = &v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state];
                      uint64_t v126 = *(void *)&v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state];
                      uint64_t v127 = *(void *)&v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                                            + 8];
                      uint64_t v128 = *(void *)&v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                                            + 16];
                      uint64_t v129 = *(void **)&v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                                           + 24];
                      uint64_t v130 = *(void *)&v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                                            + 32];
                      uint64_t v131 = *(void *)&v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                                            + 40];
                      uint64_t v132 = *(void *)&v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                                            + 48];
                      uint64_t v133 = *(void **)&v117[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state
                                           + 56];
                      *(void *)uint64_t v125 = v123;
                      *((void *)v125 + 1) = v124;
                      *((void *)v125 + 2) = v122;
                      *((void *)v125 + 3) = v121;
                      *((void *)v125 + 4) = v116;
                      *((void *)v125 + 5) = v120;
                      *((void *)v125 + 6) = v119;
                      *((void *)v125 + 7) = v118;
                      v134 = v288;
                      *((void *)v125 + 8) = v290;
                      *((void *)v125 + 9) = v134;
                      v125[80] = v291;
                      sub_100018854(v126, v127, v128, v129, v130, v131, v132, v133);
                      if (qword_1000A7A00 != -1) {
                        swift_once();
                      }
                      sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
                      swift_bridgeObjectRetain();
                      int v135 = sub_100082EE0();
                      os_log_type_t v136 = sub_100083910();
                      if (os_log_type_enabled(v135, v136))
                      {
                        uint64_t v137 = (uint8_t *)swift_slowAlloc();
                        *(_DWORD *)uint64_t v137 = 134349056;
                        if (v116 >> 62)
                        {
                          swift_bridgeObjectRetain();
                          uint64_t v138 = sub_100083B80();
                          swift_bridgeObjectRelease();
                        }
                        else
                        {
                          uint64_t v138 = *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        }
                        swift_bridgeObjectRelease();
                        uint64_t v292 = v138;
                        sub_100083A00();
                        swift_bridgeObjectRelease();
                        _os_log_impl((void *)&_mh_execute_header, v135, v136, "GeneralMapsStateCollector: collectNearbyCategories will use %{public}ld categories from cache", v137, 0xCu);
                        swift_slowDealloc();
                      }
                      else
                      {

                        swift_bridgeObjectRelease_n();
                      }
                      sub_100018ED8(v274);
                      swift_release();
                      goto LABEL_77;
                    }
                    swift_bridgeObjectRelease();
                    if (qword_1000A7A00 != -1) {
                      swift_once();
                    }
                    sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
                    v212 = sub_100082EE0();
                    os_log_type_t v213 = sub_100083910();
                    if (!os_log_type_enabled(v212, v213)) {
                      goto LABEL_104;
                    }
                    v214 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)v214 = 0;
                    v215 = "GeneralMapsStateCollector: collectNearbyCategories will not use cache: location has changed";
                    goto LABEL_103;
                  }
                  swift_bridgeObjectRelease();
                  if (qword_1000A7A00 != -1) {
                    swift_once();
                  }
                  sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
                  uint64_t v232 = v274;
                  uint64_t v233 = v266;
                  sub_100018E10(v274, v266);
                  swift_retain_n();
                  v234 = sub_100082EE0();
                  os_log_type_t v235 = sub_100083910();
                  if (!os_log_type_enabled(v234, v235))
                  {
                    swift_release_n();

                    sub_100018ED8(v233);
                    uint64_t v258 = v232;
                    goto LABEL_149;
                  }
                  uint64_t v236 = swift_slowAlloc();
                  uint64_t v273 = swift_slowAlloc();
                  uint64_t aBlock = v273;
                  *(_DWORD *)uint64_t v236 = 136380931;
                  v237 = v285;
                  v238 = (uint64_t *)(v233 + v285[5]);
                  uint64_t v239 = v233;
                  uint64_t v240 = *v238;
                  unint64_t v241 = v238[1];
                  swift_bridgeObjectRetain();
                  v295[0] = sub_10006863C(v240, v241, &aBlock);
                  sub_100083A00();
                  swift_bridgeObjectRelease();
                  sub_100018ED8(v239);
                  *(_WORD *)(v236 + 12) = 2081;
                  swift_beginAccess();
                  v242 = (uint64_t *)&v106[v237[5]];
                  uint64_t v243 = *v242;
                  unint64_t v244 = v242[1];
                  swift_bridgeObjectRetain();
                  v295[0] = sub_10006863C(v243, v244, &aBlock);
                  sub_100083A00();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v234, v235, "GeneralMapsStateCollector: collectNearbyCategories will not use cache: country code has changed (%{private}s -> %{private}s)", (uint8_t *)v236, 0x16u);
                  swift_arrayDestroy();
                  uint64_t v103 = v291;
                  swift_slowDealloc();
                  swift_slowDealloc();

LABEL_148:
                  uint64_t v258 = v274;
LABEL_149:
                  sub_100018ED8(v258);
                  uint64_t v102 = v290;
                  goto LABEL_44;
                }
                if (qword_1000A7A00 != -1) {
                  swift_once();
                }
                uint64_t v208 = v289;
                uint64_t v209 = sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
                uint64_t v200 = v282;
                v201 = v267;
                (*(void (**)(char *, uint64_t, uint64_t))(v282 + 16))(v267, v209, v208);
                uint64_t v202 = v268;
                sub_100018E10(v101, v268);
                swift_retain_n();
                uint64_t v203 = v101;
                v204 = sub_100082EE0();
                LODWORD(v273) = sub_100083910();
                if (os_log_type_enabled(v204, (os_log_type_t)v273))
                {
                  uint64_t v205 = swift_slowAlloc();
                  uint64_t aBlock = swift_slowAlloc();
                  *(_DWORD *)uint64_t v205 = 136380931;
                  v210 = v288;
                  switch(*(_DWORD *)(v202 + v285[8]))
                  {
                    case 0:
                      v211 = @"Standard";
                      goto LABEL_135;
                    case 1:
                      v211 = @"Satellite";
                      goto LABEL_135;
                    case 2:
                      v211 = @"Hybrid";
                      goto LABEL_135;
                    case 3:
                      v211 = @"Transit";
                      goto LABEL_135;
                    case 4:
                      v211 = @"Driving";
LABEL_135:
                      v245 = v211;
                      break;
                    default:
                      v211 = +[NSString stringWithFormat:@"(unknown: %i)", *(unsigned int *)(v202 + v285[8])];
                      v210 = v288;
                      break;
                  }
                  v246 = v211;
                  if (v246)
                  {
                    v247 = v246;
                    uint64_t v248 = sub_100083870();
                    unint64_t v250 = v249;

                    v295[0] = sub_10006863C(v248, v250, &aBlock);
                    sub_100083A00();
                    swift_bridgeObjectRelease();
                    sub_100018ED8(v268);
                    *(_WORD *)(v205 + 12) = 2081;
                    swift_beginAccess();
                    v222 = v267;
                    switch(*(_DWORD *)&v210[v285[8]])
                    {
                      case 0:
                        v251 = @"Standard";
                        goto LABEL_144;
                      case 1:
                        v251 = @"Satellite";
                        goto LABEL_144;
                      case 2:
                        v251 = @"Hybrid";
                        goto LABEL_144;
                      case 3:
                        v251 = @"Transit";
                        goto LABEL_144;
                      case 4:
                        v251 = @"Driving";
LABEL_144:
                        v252 = v251;
                        uint64_t v103 = v291;
                        break;
                      default:
                        v251 = +[NSString stringWithFormat:@"(unknown: %i)", *(unsigned int *)&v210[v285[8]]];
                        uint64_t v103 = v291;
                        v222 = v267;
                        break;
                    }
                    v253 = v251;
                    if (v253)
                    {
                      v254 = v253;
                      uint64_t v255 = sub_100083870();
                      unint64_t v257 = v256;

                      v295[0] = sub_10006863C(v255, v257, &aBlock);
                      sub_100083A00();
                      swift_release_n();
                      swift_bridgeObjectRelease();
                      os_log_type_t v230 = v273;
                      v231 = "GeneralMapsStateCollector: collectNearbyCategories will not use cache: map type has changed"
                             " (%{private}s -> %{private}s)";
                      goto LABEL_147;
                    }
LABEL_162:
                    swift_release();
                    __break(1u);
                    JUMPOUT(0x100011E78);
                  }
LABEL_161:
                  swift_release();
                  __break(1u);
                  goto LABEL_162;
                }
LABEL_94:
                swift_release_n();

                sub_100018ED8(v202);
                (*(void (**)(char *, uint64_t))(v200 + 8))(v201, v289);
                sub_100018ED8(v203);
                goto LABEL_44;
              }
              uint64_t v102 = v290;
              uint64_t v103 = v291;
              if (qword_1000A7A00 != -1) {
                swift_once();
              }
              uint64_t v198 = v289;
              uint64_t v199 = sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
              uint64_t v200 = v282;
              v201 = v270;
              (*(void (**)(char *, uint64_t, uint64_t))(v282 + 16))(v270, v199, v198);
              uint64_t v202 = v269;
              sub_100018E10(v101, v269);
              swift_retain_n();
              uint64_t v203 = v101;
              v204 = sub_100082EE0();
              LODWORD(v273) = sub_100083910();
              if (!os_log_type_enabled(v204, (os_log_type_t)v273)) {
                goto LABEL_94;
              }
              uint64_t v205 = swift_slowAlloc();
              uint64_t aBlock = swift_slowAlloc();
              *(_DWORD *)uint64_t v205 = 136380931;
              v206 = v288;
              switch(*(_DWORD *)(v202 + v285[7]))
              {
                case 0:
                  v207 = @"PREFERRED_TRANSPORT_TYPE_NONE";
                  goto LABEL_111;
                case 1:
                  v207 = @"PREFERRED_TRANSPORT_TYPE_DRIVING";
                  goto LABEL_111;
                case 2:
                  v207 = @"PREFERRED_TRANSPORT_TYPE_WALKING";
                  goto LABEL_111;
                case 3:
                  v207 = @"PREFERRED_TRANSPORT_TYPE_TRANSIT";
                  goto LABEL_111;
                case 4:
                  v207 = @"PREFERRED_TRANSPORT_TYPE_RIDESHARE";
                  goto LABEL_111;
                case 5:
                  v207 = @"PREFERRED_TRANSPORT_TYPE_CYCLING";
LABEL_111:
                  v216 = v207;
                  break;
                default:
                  v207 = +[NSString stringWithFormat:@"(unknown: %i)", *(unsigned int *)(v202 + v285[7])];
                  v206 = v288;
                  break;
              }
              v217 = v207;
              if (v217)
              {
                v218 = v217;
                uint64_t v219 = sub_100083870();
                unint64_t v221 = v220;

                v295[0] = sub_10006863C(v219, v221, &aBlock);
                sub_100083A00();
                swift_bridgeObjectRelease();
                sub_100018ED8(v269);
                *(_WORD *)(v205 + 12) = 2081;
                swift_beginAccess();
                uint64_t v103 = v291;
                v222 = v270;
                switch(*(_DWORD *)&v206[v285[7]])
                {
                  case 0:
                    v223 = @"PREFERRED_TRANSPORT_TYPE_NONE";
                    goto LABEL_121;
                  case 1:
                    v223 = @"PREFERRED_TRANSPORT_TYPE_DRIVING";
                    goto LABEL_121;
                  case 2:
                    v223 = @"PREFERRED_TRANSPORT_TYPE_WALKING";
                    goto LABEL_121;
                  case 3:
                    v223 = @"PREFERRED_TRANSPORT_TYPE_TRANSIT";
                    goto LABEL_121;
                  case 4:
                    v223 = @"PREFERRED_TRANSPORT_TYPE_RIDESHARE";
                    goto LABEL_121;
                  case 5:
                    v223 = @"PREFERRED_TRANSPORT_TYPE_CYCLING";
LABEL_121:
                    v224 = v223;
                    break;
                  default:
                    v223 = +[NSString stringWithFormat:@"(unknown: %i)", *(unsigned int *)&v206[v285[7]]];
                    uint64_t v103 = v291;
                    v222 = v270;
                    break;
                }
                v225 = v223;
                if (v225)
                {
                  v226 = v225;
                  uint64_t v227 = sub_100083870();
                  unint64_t v229 = v228;

                  v295[0] = sub_10006863C(v227, v229, &aBlock);
                  sub_100083A00();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  os_log_type_t v230 = v273;
                  v231 = "GeneralMapsStateCollector: collectNearbyCategories will not use cache: preferred transport type"
                         " has changed (%{private}s -> %{private}s)";
LABEL_147:
                  _os_log_impl((void *)&_mh_execute_header, v204, v230, v231, (uint8_t *)v205, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  (*(void (**)(char *, uint64_t))(v282 + 8))(v222, v289);
                  goto LABEL_148;
                }
                goto LABEL_160;
              }
LABEL_159:
              swift_release();
              __break(1u);
LABEL_160:
              swift_release();
              __break(1u);
              goto LABEL_161;
            }
            sub_100018ED8(v101);
          }
          else
          {
            swift_endAccess();
          }
          uint64_t v139 = v287;
          if (qword_1000A7A00 != -1) {
            swift_once();
          }
          sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
          swift_retain_n();
          id v140 = sub_100082EE0();
          os_log_type_t v141 = sub_100083910();
          if (os_log_type_enabled(v140, v141))
          {
            uint64_t v142 = (uint8_t *)swift_slowAlloc();
            uint64_t aBlock = swift_slowAlloc();
            *(_DWORD *)uint64_t v142 = 136446210;
            swift_beginAccess();
            LOBYTE(v295[0]) = *(unsigned char *)(v139 + 16);
            uint64_t v143 = sub_100083880();
            v295[0] = sub_10006863C(v143, v144, &aBlock);
            sub_100083A00();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v140, v141, "GeneralMapsStateCollector: collectNearbyCategories will not use cache: no cached categories found for domain %{public}s", v142, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          uint64_t v102 = v290;
          uint64_t v103 = v291;
LABEL_44:
          uint64_t v145 = v279;
          v146 = (char *)[self standardUserDefaults];
          NSString v147 = sub_100083850();
          id v148 = [v146 objectForKey:v147];

          if (v148)
          {
            sub_100083A20();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v295, 0, sizeof(v295));
          }
          uint64_t v149 = (uint64_t)v280;
          sub_100019284((uint64_t)v295, (uint64_t)&aBlock, &qword_1000A7F40);
          if (v305)
          {
            int v150 = swift_dynamicCast();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v149, v150 ^ 1u, 1, v102);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v149, 1, v102) != 1)
            {
              v260(v283, (char *)v149, v102);
LABEL_52:
              NSString v151 = sub_100083850();
              v288 = v146;
              id v152 = [v146 integerForKey:v151];

              uint64_t v294 = (uint64_t)v152;
              uint64_t Integer = GEOConfigGetInteger();
              v154 = v284;
              sub_100082E90();
              char v155 = sub_100082E80();
              uint64_t v156 = *(void (**)(char *, uint64_t))(v281 + 8);
              v156(v154, v145);
              if ((v155 & 1) != 0 && v294 >= Integer)
              {
                uint64_t v157 = v291;
                if (qword_1000A7A00 != -1) {
                  swift_once();
                }
                sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
                v158 = sub_100082EE0();
                os_log_type_t v159 = sub_100083910();
                if (os_log_type_enabled(v158, v159))
                {
                  uint64_t v160 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v160 = 134349312;
                  swift_beginAccess();
                  v295[0] = v294;
                  sub_100083A00();
                  *(_WORD *)(v160 + 12) = 2050;
                  v295[0] = Integer;
                  sub_100083A00();
                  _os_log_impl((void *)&_mh_execute_header, v158, v159, "GeneralMapsStateCollector: collectNearbyCategories will not fetch categories: already issued %{public}ld requests (of daily maximum: %{public}ld)", (uint8_t *)v160, 0x16u);
                  swift_slowDealloc();
                }

                (*(void (**)(char *, uint64_t))(v157 + 8))(v283, v290);
LABEL_76:
                swift_release();
LABEL_77:
                swift_release();
                return;
              }
              dispatch_group_enter(*(dispatch_group_t *)&v278[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup]);
              sub_100082E30();
              v161 = v284;
              sub_100082E90();
              char v162 = sub_100082E80();
              v156(v161, v145);
              uint64_t v163 = v291;
              if (v162)
              {
                uint64_t v164 = v294 + 1;
                if (!__OFADD__(v294, 1)) {
                  goto LABEL_64;
                }
                __break(1u);
              }
              uint64_t v164 = 1;
LABEL_64:
              uint64_t v294 = v164;
              Class isa = sub_100082DD0().super.isa;
              NSString v166 = sub_100083850();
              v167 = v288;
              [v288 setObject:isa forKey:v166];

              NSString v168 = sub_100083850();
              [v167 setInteger:v164 forKey:v168];

              if (qword_1000A7A00 != -1) {
                swift_once();
              }
              uint64_t v169 = sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
              v170 = sub_100082EE0();
              os_log_type_t v171 = sub_100083910();
              if (os_log_type_enabled(v170, v171))
              {
                uint64_t v172 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)uint64_t v172 = 134349056;
                swift_beginAccess();
                uint64_t aBlock = v294;
                sub_100083A00();
                _os_log_impl((void *)&_mh_execute_header, v170, v171, "GeneralMapsStateCollector: collectNearbyCategories BEGIN (daily request number %{public}ld)", v172, 0xCu);
                swift_slowDealloc();
              }

              id v173 = [self sharedService];
              uint64_t v174 = v290;
              v175 = v286;
              v176 = v277;
              if (v173)
              {
                v177 = v173;
                id v178 = [v173 ticketForCategoryListWithTraits:v265 isFromNoQueryState:0];

                v179 = v278;
                sub_10001312C(v276, (uint64_t)v178);
                if (v178)
                {
                  v180 = *(void (**)(char *, char *, uint64_t))(v163 + 16);
                  v285 = (int *)v169;
                  v181 = v275;
                  v180(v275, v175, v174);
                  unint64_t v182 = (*(unsigned __int8 *)(v163 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80);
                  unint64_t v183 = (v271 + v182 + 7) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v184 = (v183 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v185 = swift_allocObject();
                  *(void *)(v185 + 16) = v179;
                  v260((char *)(v185 + v182), v181, v290);
                  *(void *)(v185 + v183) = v264;
                  v175 = v286;
                  *(void *)(v185 + v184) = v287;
                  uint64_t v174 = v290;
                  v306 = sub_100018D54;
                  uint64_t v307 = v185;
                  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
                  uint64_t v303 = 1107296256;
                  v304 = sub_100013090;
                  v305 = &unk_10009E2B0;
                  v186 = _Block_copy(&aBlock);
                  uint64_t v169 = (uint64_t)v285;
                  swift_retain();
                  swift_retain();
                  swift_unknownObjectRetain();
                  id v187 = v179;
                  v176 = v277;
                  swift_release();
                  [v178 submitWithHandler:v186 networkActivity:0];
                  swift_unknownObjectRelease();
                  _Block_release(v186);
                }
              }
              else
              {
                sub_10001312C(v276, 0);
                id v178 = 0;
              }
              (*(void (**)(char *, uint64_t, uint64_t))(v282 + 16))(v263, v169, v289);
              (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v176, v175, v174);
              v188 = v176;
              v189 = sub_100082EE0();
              os_log_type_t v190 = sub_100083920();
              if (os_log_type_enabled(v189, v190))
              {
                uint64_t v191 = swift_slowAlloc();
                *(_DWORD *)uint64_t v191 = 134349312;
                v285 = (int *)v178;
                v192 = v275;
                sub_100082E30();
                sub_100082DC0();
                uint64_t v194 = v193;
                v195 = *(void (**)(char *, uint64_t))(v163 + 8);
                v195(v192, v290);
                uint64_t aBlock = v194;
                uint64_t v174 = v290;
                sub_100083A00();
                v195(v188, v174);
                *(_WORD *)(v191 + 12) = 2050;
                swift_beginAccess();
                uint64_t v293 = v294;
                sub_100083A00();
                _os_log_impl((void *)&_mh_execute_header, v189, v190, "GeneralMapsStateCollector: collectNearbyCategories blocked caller for %{public}f seconds, request %{public}ld", (uint8_t *)v191, 0x16u);
                v175 = v286;
                swift_slowDealloc();
                swift_unknownObjectRelease();
              }
              else
              {

                v195 = *(void (**)(char *, uint64_t))(v163 + 8);
                v195(v188, v174);
                swift_unknownObjectRelease();
              }
              (*(void (**)(char *, uint64_t))(v282 + 8))(v263, v289);
              v195(v175, v174);
              v195(v283, v174);
              goto LABEL_76;
            }
          }
          else
          {
            sub_100019138((uint64_t)&aBlock, &qword_1000A7F40);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v149, 1, 1, v102);
          }
          sub_100082E30();
          sub_100019138(v149, &qword_1000A7F30);
          goto LABEL_52;
        }
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
LABEL_157:
      __break(1u);
      goto LABEL_158;
    }
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  sub_10001859C(v289, (uint64_t)qword_1000ACBA8);
  uint64_t v40 = sub_100082EE0();
  os_log_type_t v196 = sub_100083930();
  if (os_log_type_enabled(v40, v196))
  {
    v197 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v197 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v196, "GeneralMapsStateCollector: collectNearbyCategories had no location or region to work with", v197, 2u);
    swift_slowDealloc();
    swift_release();

LABEL_6:
    return;
  }
  swift_release();
}

uint64_t sub_100011ED0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v27 = a2;
  uint64_t v33 = sub_100083610();
  uint64_t v36 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v32 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100083630();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  __chkstk_darwin(v10);
  uint64_t v28 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082E40();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)&a3[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a4, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a3;
  *((void *)v18 + 3) = a1;
  *((void *)v18 + 4) = v27;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v16], v15, v12);
  uint64_t v19 = v30;
  *(void *)&v18[v17] = v29;
  *(void *)&v18[(v17 + 15) & 0xFFFFFFFFFFFFFFF8] = v19;
  aBlock[4] = sub_100019098;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  aBlock[3] = &unk_10009E300;
  uint64_t v20 = _Block_copy(aBlock);
  uint64_t v21 = a3;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_retain();
  swift_retain();
  uint64_t v22 = v28;
  sub_100083620();
  uint64_t v37 = &_swiftEmptyArrayStorage;
  sub_100018A68();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  uint64_t v24 = v32;
  uint64_t v23 = v33;
  sub_100083A40();
  sub_1000839B0();
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v35);
  return swift_release();
}

void sub_10001226C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v99 = a4;
  uint64_t v10 = sub_100002874(&qword_1000A8018);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100082E40();
  uint64_t v101 = *(void *)(v100 - 8);
  uint64_t v13 = __chkstk_darwin(v100);
  uint64_t v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v98 = (char *)&v88 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v96 = (char *)&v88 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v88 - v20;
  uint64_t v22 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  uint64_t v23 = swift_projectBox();
  uint64_t v24 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNearbyCategoriesCancellation;
  if (*(Class *)((char *)&a1->isa
                + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNearbyCategoriesCancellation))
  {
    uint64_t v25 = swift_retain();
    os_log_t v102 = a1;
    uint64_t v97 = v25;
    sub_100083670();
    *(Class *)((char *)&v102->isa + v24) = 0;
    swift_release();
    if (a2 && (unint64_t v26 = (unint64_t)sub_1000305BC(a2)) != 0)
    {
      unint64_t v27 = v26;
      unint64_t v28 = v26 >> 62;
      if (v26 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v78 = sub_100083B80();
        swift_bridgeObjectRelease();
        if (v78) {
          goto LABEL_6;
        }
      }
      else if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        unint64_t v89 = v28;
        uint64_t v95 = (unsigned char *)(a6 + 16);
        swift_bridgeObjectRetain();
        os_log_t v29 = v102;
        sub_100008F64((uint64_t)v105);
        int v94 = v109;
        uint64_t v93 = v108[4];
        uint64_t v92 = v108[5];
        uint64_t v91 = v108[3];
        uint64_t v30 = v108[1];
        uint64_t v90 = v108[2];
        uint64_t v31 = v107;
        uint64_t v32 = v106;
        uint64_t v34 = v105[0];
        uint64_t v33 = v105[1];
        sub_100019284((uint64_t)v108, (uint64_t)v110, &qword_1000A8008);
        sub_100018F38((uint64_t)v110);
        uint64_t v35 = (char *)v29 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
        uint64_t v36 = *(uint64_t *)((char *)&v29->isa
                         + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
        uint64_t v37 = *(uint64_t *)((char *)&v29[1].isa
                         + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
        uint64_t v38 = *(uint64_t *)((char *)&v29[2].isa
                         + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
        id v39 = *(Class *)((char *)&v29[3].isa
                       + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
        uint64_t v40 = *(uint64_t *)((char *)&v29[4].isa
                         + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
        uint64_t v41 = *(uint64_t *)((char *)&v29[5].isa
                         + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
        uint64_t v42 = *(uint64_t *)((char *)&v29[6].isa
                         + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
        id v43 = *(Class *)((char *)&v29[7].isa
                       + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
        *(void *)uint64_t v35 = v34;
        *((void *)v35 + 1) = v33;
        *((void *)v35 + 2) = v32;
        *((void *)v35 + 3) = v31;
        *((void *)v35 + 4) = v27;
        *((void *)v35 + 5) = v30;
        uint64_t v44 = v91;
        *((void *)v35 + 6) = v90;
        *((void *)v35 + 7) = v44;
        uint64_t v45 = v92;
        *((void *)v35 + 8) = v93;
        *((void *)v35 + 9) = v45;
        v35[80] = v94;
        sub_100018854(v36, v37, v38, v39, v40, v41, v42, v43);
        swift_beginAccess();
        *(void *)(v23 + *(int *)(v22 + 36)) = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (qword_1000A7978 != -1) {
          swift_once();
        }
        uint64_t v46 = v95;
        swift_beginAccess();
        LOBYTE(v46) = *v46;
        swift_beginAccess();
        sub_100018E10(v23, (uint64_t)v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 0, 1, v22);
        swift_beginAccess();
        sub_100012E58((uint64_t)v12, (char)v46);
        swift_endAccess();
        uint64_t v47 = v100;
        if (qword_1000A7A00 != -1) {
          swift_once();
        }
        uint64_t v48 = sub_100082F00();
        sub_10001859C(v48, (uint64_t)qword_1000ACBA8);
        uint64_t v49 = v101;
        id v50 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v96, v99, v47);
        swift_bridgeObjectRetain();
        id v51 = sub_100082EE0();
        os_log_type_t v52 = sub_100083920();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 134349312;
          if (v89)
          {
            swift_bridgeObjectRetain();
            uint64_t v54 = sub_100083B80();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v54 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          uint64_t v103 = v54;
          sub_100083A00();
          swift_bridgeObjectRelease();
          *(_WORD *)(v53 + 12) = 2050;
          uint64_t v73 = v98;
          sub_100082E30();
          sub_100082DC0();
          uint64_t v75 = v74;
          id v76 = *(void (**)(char *, uint64_t))(v49 + 8);
          v76(v73, v47);
          uint64_t v103 = v75;
          sub_100083A00();
          v76(v50, v47);
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "GeneralMapsStateCollector: collectNearbyCategories END (%{public}ld categories, %{public}f seconds elapsed)", (uint8_t *)v53, 0x16u);
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v47);
        }
        os_log_t v77 = v102;

        double v72 = *(NSObject **)((char *)&v77->isa
                           + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup);
        goto LABEL_31;
      }
      swift_bridgeObjectRelease();
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v79 = sub_100082F00();
      sub_10001859C(v79, (uint64_t)qword_1000ACBA8);
      uint64_t v80 = v101;
      uint64_t v81 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v15, v99, v100);
      swift_errorRetain();
      swift_errorRetain();
      double v58 = sub_100082EE0();
      os_log_type_t v59 = sub_100083930();
      if (!os_log_type_enabled(v58, v59))
      {
        swift_errorRelease();
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v15, v81);
        goto LABEL_26;
      }
      uint64_t v60 = swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      v105[0] = v99;
      *(_DWORD *)uint64_t v60 = 136446466;
      uint64_t v104 = a3;
      swift_errorRetain();
      sub_100002874(&qword_1000A7F48);
      uint64_t v82 = sub_100083890();
      uint64_t v104 = sub_10006863C(v82, v83, v105);
      sub_100083A00();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v60 + 12) = 2050;
      id v84 = v98;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v86 = v85;
      int v87 = *(void (**)(char *, uint64_t))(v80 + 8);
      v87(v84, v81);
      uint64_t v104 = v86;
      sub_100083A00();
      v87(v15, v81);
      double v67 = "GeneralMapsStateCollector: collectNearbyCategories END (no categories; error: %{public}s, %{public}f seconds elapsed)";
    }
    else
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_100082F00();
      sub_10001859C(v55, (uint64_t)qword_1000ACBA8);
      uint64_t v56 = v101;
      uint64_t v57 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v21, v99, v100);
      swift_errorRetain();
      swift_errorRetain();
      double v58 = sub_100082EE0();
      os_log_type_t v59 = sub_100083930();
      if (!os_log_type_enabled(v58, v59))
      {
        swift_errorRelease();
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v21, v57);
        goto LABEL_26;
      }
      uint64_t v60 = swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      v105[0] = v99;
      *(_DWORD *)uint64_t v60 = 136446466;
      uint64_t v104 = a3;
      swift_errorRetain();
      sub_100002874(&qword_1000A7F48);
      uint64_t v61 = sub_100083890();
      uint64_t v104 = sub_10006863C(v61, v62, v105);
      sub_100083A00();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v60 + 12) = 2050;
      double v63 = v98;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v65 = v64;
      double v66 = *(void (**)(char *, uint64_t))(v56 + 8);
      v66(v63, v57);
      uint64_t v104 = v65;
      sub_100083A00();
      v66(v21, v57);
      double v67 = "GeneralMapsStateCollector: collectNearbyCategories END (unexpected category type; error: %{public}s, %{publi"
            "c}f seconds elapsed)";
    }
    _os_log_impl((void *)&_mh_execute_header, v58, v59, v67, (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_26:

    double v72 = *(NSObject **)((char *)&v102->isa
                       + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup);
LABEL_31:
    dispatch_group_leave(v72);
    swift_release();
    return;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v68 = sub_100082F00();
  sub_10001859C(v68, (uint64_t)qword_1000ACBA8);
  os_log_t v102 = (os_log_t)sub_100082EE0();
  os_log_type_t v69 = sub_100083930();
  if (os_log_type_enabled(v102, v69))
  {
    double v70 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v70 = 0;
    _os_log_impl((void *)&_mh_execute_header, v102, v69, "GeneralMapsStateCollector: collectNearbyCategories was cancelled just before completion", v70, 2u);
    swift_slowDealloc();
  }
  os_log_t v71 = v102;
}

uint64_t sub_100012E58(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  char v5 = a2 & 1;
  uint64_t v6 = sub_100002874(&qword_1000A8018);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_100019138(a1, &qword_1000A8018);
    unint64_t v13 = sub_100075878(v5);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000364C8();
        uint64_t v17 = v21;
      }
      sub_100018E74(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8);
      sub_100035A64(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_100019138((uint64_t)v8, &qword_1000A8018);
  }
  else
  {
    sub_100018E74(a1, (uint64_t)v12);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100035E0C((uint64_t)v12, v5, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100013090(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_1000838D0();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_10001312C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100083650();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_100083610();
  __chkstk_darwin(v13);
  if (a2)
  {
    uint64_t v32 = v7;
    uint64_t v33 = v6;
    uint64_t v14 = swift_allocObject();
    uint64_t v34 = a1;
    uint64_t v15 = v14;
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a2;
    *(void *)(v16 + 24) = v15;
    aBlock[4] = sub_100018BF8;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100068EDC;
    aBlock[3] = &unk_10009E238;
    _Block_copy(aBlock);
    uint64_t v35 = &_swiftEmptyArrayStorage;
    sub_100018A68();
    swift_unknownObjectRetain_n();
    swift_retain();
    sub_100002874((uint64_t *)&unk_1000A7F80);
    sub_100018AC0();
    sub_100083A40();
    sub_100083690();
    swift_allocObject();
    uint64_t v17 = sub_100083660();
    swift_release();
    swift_release();
    uint64_t v18 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNearbyCategoriesCancellation;
    *(void *)(v3 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNearbyCategoriesCancellation) = v17;
    swift_release();
    sub_100082E10();
    double v20 = v19 + -10.0;
    if (v19 + -10.0 <= 0.0)
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_100082F00();
      sub_10001859C(v28, (uint64_t)qword_1000ACBA8);
      os_log_t v29 = sub_100082EE0();
      os_log_type_t v30 = sub_100083930();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "GeneralMapsStateCollector: could not schedule collectNearbyCategories cancellation", v31, 2u);
        swift_slowDealloc();
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_100082F00();
      sub_10001859C(v21, (uint64_t)qword_1000ACBA8);
      uint64_t v22 = sub_100082EE0();
      os_log_type_t v23 = sub_100083920();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 134349056;
        *(double *)uint64_t aBlock = v20;
        sub_100083A00();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "GeneralMapsStateCollector: scheduled collectNearbyCategories cancellation in %{public}f seconds", v24, 0xCu);
        swift_slowDealloc();
      }

      sub_100083640();
      sub_1000836B0();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v32 + 8);
      unint64_t v26 = v10;
      uint64_t v27 = v33;
      v25(v26, v33);
      if (*(void *)(v3 + v18))
      {
        swift_retain();
        sub_100083980();
        swift_unknownObjectRelease();
        swift_release();
        v25(v12, v27);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_100013600(void *a1)
{
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100082F00();
  sub_10001859C(v2, (uint64_t)qword_1000ACBA8);
  uint64_t v3 = sub_100082EE0();
  os_log_type_t v4 = sub_100083930();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "GeneralMapsStateCollector: collectNearbyCategories END (cancelled)", v5, 2u);
    swift_slowDealloc();
  }

  [a1 cancel];
  swift_beginAccess();
  Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    *(void *)&Strong[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNearbyCategoriesCancellation] = 0;

    swift_release();
  }
  swift_beginAccess();
  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = objc_retain(*(id *)(v7
                                       + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup));

    dispatch_group_leave(v9);
  }
}

void sub_100013784()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000836A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_cancelled))
  {
    if (qword_1000A7A00 == -1)
    {
LABEL_4:
      uint64_t v8 = sub_100082F00();
      sub_10001859C(v8, (uint64_t)qword_1000ACBA8);
      uint64_t v9 = sub_100082EE0();
      os_log_type_t v10 = sub_100083910();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "GeneralMapsStateCollector: skipped collectSuggestions (state collection cancelled)", v11, 2u);
        swift_slowDealloc();
      }

      return;
    }
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100082F00();
  sub_10001859C(v12, (uint64_t)qword_1000ACBA8);
  uint64_t v13 = sub_100082EE0();
  os_log_type_t v14 = sub_100083920();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "GeneralMapsStateCollector: collectSuggestions BEGIN", v15, 2u);
    swift_slowDealloc();
  }

  dispatch_group_enter(*(dispatch_group_t *)(v1
                                           + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup));
  sub_100013B4C();
}

void sub_100013B4C()
{
  uint64_t v1 = v0;
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100082F00();
  sub_10001859C(v2, (uint64_t)qword_1000ACBA8);
  uint64_t v3 = sub_100082EE0();
  os_log_type_t v4 = sub_100083920();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "GeneralMapsStateCollector: fetchSuggestionEntries", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_suggestionsEngine);
  if (v6)
  {
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v10[4] = sub_100018BB0;
    v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10001414C;
    v10[3] = &unk_10009E1E8;
    uint64_t v8 = _Block_copy(v10);
    id v9 = v6;
    swift_release();
    [v9 oneShotTopSuggestionsForSink:v1 count:3 transportType:4 callback:v8 onQueue:*(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue)];
    _Block_release(v8);
  }
  else
  {
    __break(1u);
  }
}

void sub_100013D18(unint64_t a1, uint64_t a2)
{
  if (a1 && !a2)
  {
    uint64_t v10 = qword_1000A7A00;
    swift_bridgeObjectRetain();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100082F00();
    sub_10001859C(v11, (uint64_t)qword_1000ACBA8);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_100082EE0();
    os_log_type_t v13 = sub_100083920();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v14 = 134349056;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_100083B80();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v37[0] = v15;
      sub_100083A00();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "GeneralMapsStateCollector: fetchSuggestionEntries received %{public}ld entries", v14, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v17 = (char *)Strong;
      sub_100008F64((uint64_t)v37);
      char v36 = v42;
      uint64_t v18 = v41[2];
      uint64_t v34 = v41[4];
      uint64_t v35 = v41[3];
      uint64_t v19 = v41[1];
      uint64_t v20 = v39;
      uint64_t v21 = v40;
      uint64_t v22 = v38;
      uint64_t v23 = v37[0];
      uint64_t v24 = v37[1];
      sub_100019284((uint64_t)v41, (uint64_t)v43, &qword_1000A7FA0);
      sub_100018F38((uint64_t)v43);
      uint64_t v25 = &v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state];
      uint64_t v26 = *(void *)&v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state];
      uint64_t v27 = *(void *)&v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 8];
      uint64_t v28 = *(void *)&v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 16];
      os_log_t v29 = *(void **)&v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 24];
      uint64_t v30 = *(void *)&v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 32];
      uint64_t v31 = *(void *)&v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 40];
      uint64_t v32 = *(void *)&v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 48];
      uint64_t v33 = *(void **)&v17[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 56];
      *(void *)uint64_t v25 = v23;
      *((void *)v25 + 1) = v24;
      *((void *)v25 + 2) = v22;
      *((void *)v25 + 3) = v20;
      *((void *)v25 + 4) = v21;
      *((void *)v25 + 5) = a1;
      *((void *)v25 + 6) = v19;
      *((void *)v25 + 7) = v18;
      *((void *)v25 + 8) = v35;
      *((void *)v25 + 9) = v34;
      v25[80] = v36;
      sub_100018854(v26, v27, v28, v29, v30, v31, v32, v33);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_100082F00();
    sub_10001859C(v2, (uint64_t)qword_1000ACBA8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = sub_100082EE0();
    os_log_type_t v4 = sub_100083930();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      v37[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136446210;
      swift_errorRetain();
      sub_100002874(&qword_1000A7F48);
      uint64_t v6 = sub_100083890();
      sub_10006863C(v6, v7, v37);
      sub_100083A00();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "GeneralMapsStateCollector: fetchSuggestionEntries error: %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  swift_beginAccess();
  uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    sub_1000141F0();
  }
}

uint64_t sub_10001414C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1000188D8(0, &qword_1000A7F68);
    uint64_t v4 = sub_1000838D0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1000141F0()
{
  uint64_t v63 = sub_100083610();
  uint64_t v1 = *(void **)(v63 - 8);
  __chkstk_darwin(v63);
  unint64_t v62 = (char *)v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100083630();
  uint64_t v3 = *(void **)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v60 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000836A0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v72 = v0;
  id v9 = *(void **)&v0[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue];
  void *v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v59 = v9;
  LOBYTE(v9) = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0) {
    goto LABEL_30;
  }
  if (qword_1000A7A00 != -1) {
    goto LABEL_31;
  }
  while (1)
  {
    uint64_t v10 = sub_100082F00();
    v55[1] = sub_10001859C(v10, (uint64_t)qword_1000ACBA8);
    uint64_t v11 = sub_100082EE0();
    os_log_type_t v12 = sub_100083920();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "GeneralMapsStateCollector: finalizeSuggestionEntries", v13, 2u);
      swift_slowDealloc();
    }

    sub_100008F64((uint64_t)v82);
    unint64_t v14 = v83;
    swift_bridgeObjectRetain();
    sub_1000187DC((uint64_t)v82);
    uint64_t v15 = &selRef_timestamp;
    if (!v14) {
      break;
    }
    unint64_t v64 = v14;
    uint64_t v58 = v14 & 0xFFFFFFFFFFFFFF8;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_100083B80();
      swift_bridgeObjectRelease();
      v55[0] = v51;
      if (v51 <= 0)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        break;
      }
      unint64_t v17 = v64;
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_100083B80();
      if (!v16)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_100082EE0();
        os_log_type_t v49 = sub_100083920();
        if (os_log_type_enabled(v48, v49))
        {
          id v50 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v50 = 134349056;
          swift_bridgeObjectRelease();
          uint64_t aBlock = (void **)v55[0];
          sub_100083A00();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "GeneralMapsStateCollector: collectSuggestions END (%{public}ld entries)", v50, 0xCu);
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v15 = &selRef_timestamp;
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v16) {
        goto LABEL_35;
      }
      unint64_t v17 = v64;
      swift_bridgeObjectRetain();
      v55[0] = v16;
    }
    int v70 = 0;
    unint64_t v18 = 0;
    dispatch_group_t v71 = *(dispatch_group_t *)((char *)v72
                              + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup);
    uint64_t v67 = *(void *)((char *)v72
                    + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_suggestionsNetworkRequester);
    unint64_t v69 = v17 & 0xC000000000000001;
    uint64_t v73 = &v78;
    uint64_t v57 = (void (**)(char *, uint64_t))(v1 + 1);
    uint64_t v56 = (void (**)(char *, uint64_t))(v3 + 1);
    uint64_t v68 = v16;
    while (1)
    {
      if (v69)
      {
        id v19 = (id)sub_100083AB0();
      }
      else
      {
        if (v18 >= *(void *)(v58 + 16)) {
          goto LABEL_29;
        }
        id v19 = *(id *)(v17 + 8 * v18 + 32);
      }
      uint64_t v20 = v19;
      if (__OFADD__(v18, 1)) {
        break;
      }
      unint64_t v74 = v18 + 1;
      dispatch_group_enter(v71);
      uint64_t v21 = dispatch_group_create();
      dispatch_group_enter(v21);
      uint64_t v1 = (void *)swift_allocObject();
      uint64_t v22 = v72;
      v1[2] = v20;
      v1[3] = v22;
      v1[4] = v21;
      uint64_t v3 = (void *)swift_allocObject();
      v3[2] = v22;
      v3[3] = v20;
      v3[4] = sub_1000189C8;
      v3[5] = v1;
      uint64_t v80 = sub_1000189D8;
      uint64_t v81 = v3;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v77 = 1107296256;
      uint64_t v78 = sub_1000155E0;
      uint64_t v79 = &unk_10009E0A8;
      uint64_t v23 = _Block_copy(&aBlock);
      id v24 = v20;
      id v25 = v22;
      id v26 = v24;
      uint64_t v27 = v21;
      swift_retain();
      swift_retain();
      swift_release();
      LODWORD(v21) = GEOMapItemFromMapsSuggestionsEntry();
      _Block_release(v23);
      if (!v21)
      {
        uint64_t v28 = (void *)swift_allocObject();
        void v28[2] = v25;
        v28[3] = v26;
        v28[4] = sub_1000189C8;
        v28[5] = v1;
        uint64_t v80 = sub_100018B20;
        uint64_t v81 = v28;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v77 = 1107296256;
        uint64_t v78 = (void (*)(uint64_t, void *, void *))sub_100068EDC;
        uint64_t v79 = &unk_10009E148;
        uint64_t v65 = _Block_copy(&aBlock);
        id v29 = v25;
        id v30 = v26;
        swift_retain();
        id v66 = v25;
        uint64_t v31 = v60;
        sub_100083620();
        uint64_t v75 = &_swiftEmptyArrayStorage;
        sub_100018A68();
        sub_100002874((uint64_t *)&unk_1000A7F80);
        sub_100018AC0();
        uint64_t v32 = v62;
        uint64_t v33 = v27;
        uint64_t v34 = v63;
        sub_100083A40();
        uint64_t v35 = v65;
        sub_1000839B0();
        _Block_release(v35);
        char v36 = v32;
        unint64_t v17 = v64;
        uint64_t v37 = v34;
        uint64_t v27 = v33;
        (*v57)(v36, v37);
        unsigned int v38 = v31;
        id v25 = v66;
        (*v56)(v38, v61);
        swift_release();
      }
      if (!(v70 & 1 | ((sub_1000159B4() & 1) == 0))
        && ([v26 BOOLeanForKey:@"MapsSuggestionsRoutingNotAvailableKey" is:1] & 1) == 0
        && [v26 containsKey:@"MapsSuggestionsNeedsETATrackingKey"]
        && [v26 BOOLeanForKey:@"MapsSuggestionsNeedsETATrackingKey"])
      {
        dispatch_group_enter(v71);
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = v25;
        *(void *)(v39 + 24) = v26;
        uint64_t v80 = sub_100018A24;
        uint64_t v81 = (void *)v39;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v77 = 1107296256;
        uint64_t v78 = (void (*)(uint64_t, void *, void *))sub_100068EDC;
        uint64_t v79 = &unk_10009E0F8;
        uint64_t v40 = _Block_copy(&aBlock);
        id v41 = v25;
        id v42 = v26;
        id v43 = v60;
        sub_100083620();
        uint64_t v75 = &_swiftEmptyArrayStorage;
        sub_100018A68();
        sub_100002874((uint64_t *)&unk_1000A7F80);
        sub_100018AC0();
        uint64_t v44 = v62;
        uint64_t v45 = v27;
        uint64_t v46 = v63;
        sub_100083A40();
        sub_100083960();
        _Block_release(v40);

        swift_release();
        swift_release();
        uint64_t v47 = v44;
        unint64_t v17 = v64;
        (*v57)(v47, v46);
        (*v56)(v43, v61);
        swift_release();
        int v70 = 1;
        unint64_t v18 = v74;
        if (v74 == v68) {
          goto LABEL_24;
        }
      }
      else
      {

        swift_release();
        swift_release();
        ++v18;
        if (v74 == v68) {
          goto LABEL_24;
        }
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_once();
  }
  os_log_type_t v52 = sub_100082EE0();
  os_log_type_t v53 = sub_100083920();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "GeneralMapsStateCollector: collectSuggestions END (no entries)", v54, 2u);
    swift_slowDealloc();
  }

LABEL_39:
  dispatch_group_leave(*(dispatch_group_t *)&v15[445][(void)v72]);
}

void sub_100014D38(uint64_t a1, id a2, uint64_t a3, NSObject *a4)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_100082F00();
    sub_10001859C(v7, (uint64_t)qword_1000ACBA8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v8 = sub_100082EE0();
    os_log_type_t v9 = sub_100083930();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      uint64_t v30 = a1;
      swift_errorRetain();
      sub_100002874(&qword_1000A7F98);
      uint64_t v11 = sub_100083890();
      uint64_t v30 = sub_10006863C(v11, v12, v29);
      sub_100083A00();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "GeneralMapsStateCollector: could not determine transport type: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  if (![a2 containsKey:@"MapsSuggestionsTransportTypeKey"])
  {
    uint64_t v15 = 0xE700000000000000;
    uint64_t v16 = 0x6E776F6E6B6E75;
    goto LABEL_24;
  }
  uint64_t v13 = (uint64_t)[a2 integerForKey:@"MapsSuggestionsTransportTypeKey"];
  if (v13 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v13 > 0x7FFFFFFF)
  {
LABEL_31:
    __break(1u);
    JUMPOUT(0x100015218);
  }
  switch((int)v13)
  {
    case 0:
      unint64_t v14 = @"AUTOMOBILE";
      goto LABEL_20;
    case 1:
      unint64_t v14 = @"TRANSIT";
      goto LABEL_20;
    case 2:
      unint64_t v14 = @"WALKING";
      goto LABEL_20;
    case 3:
      unint64_t v14 = @"BICYCLE";
      goto LABEL_20;
    case 4:
      unint64_t v14 = @"UNKNOWN_TRANSPORT_TYPE";
      goto LABEL_20;
    case 5:
      unint64_t v14 = @"FERRY";
      goto LABEL_20;
    case 6:
      unint64_t v14 = @"RIDESHARE";
LABEL_20:
      unint64_t v17 = v14;
      break;
    default:
      unint64_t v14 = +[NSString stringWithFormat:@"(unknown: %i)", v13];
      break;
  }
  unint64_t v18 = v14;
  if (v18)
  {
    id v19 = v18;
    uint64_t v16 = sub_100083870();
    uint64_t v15 = v20;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v15 = 0;
  }
LABEL_24:
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100082F00();
  sub_10001859C(v21, (uint64_t)qword_1000ACBA8);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_100082EE0();
  os_log_type_t v23 = sub_100083920();
  if (os_log_type_enabled(v22, v23))
  {
    id v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v29[1] = v15;
    uint64_t v30 = v25;
    *(_DWORD *)id v24 = 136315138;
    v29[0] = v16;
    swift_bridgeObjectRetain();
    sub_100002874(&qword_1000A7F90);
    uint64_t v26 = sub_100083890();
    v29[0] = sub_10006863C(v26, v27, &v30);
    sub_100083A00();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "GeneralMapsStateCollector: determineTransportType complete, determined=%s", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  dispatch_group_leave(*(dispatch_group_t *)(a3
                                           + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup));
  dispatch_group_leave(a4);
}

uint64_t sub_100015234(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_100083610();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100083630();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = *(void *)&a3[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue];
  unint64_t v18 = (void *)swift_allocObject();
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  v18[5] = a6;
  aBlock[4] = sub_10001A794;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  aBlock[3] = &unk_10009E198;
  id v19 = _Block_copy(aBlock);
  uint64_t v20 = a3;
  id v21 = a4;
  swift_retain();
  sub_100083620();
  v23[1] = &_swiftEmptyArrayStorage;
  sub_100018A68();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  sub_100083A40();
  sub_1000839B0();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return swift_release();
}

uint64_t sub_1000154C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100082F00();
  sub_10001859C(v7, (uint64_t)qword_1000ACBA8);
  uint64_t v8 = sub_100082EE0();
  os_log_type_t v9 = sub_100083920();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "GeneralMapsStateCollector: GEOMapItemFromMapsSuggestionsEntry complete", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t result = sub_1000155E4(a2, (uint64_t)a3, a4);
  if ((result & 1) == 0) {
    return a3(0);
  }
  return result;
}

BOOL sub_1000155E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1000836A0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  char v13 = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  sub_100008F64((uint64_t)v29);
  sub_100019284((uint64_t)v29, (uint64_t)v30, &qword_1000A7F38);
  uint64_t v14 = (void *)v29[0];
  uint64_t v15 = (void *)v29[3];
  uint64_t v16 = (void *)v29[7];
  sub_100019284((uint64_t)v30, (uint64_t)v31, &qword_1000A7F38);
  if (v31[0])
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    unint64_t v17 = *(void **)(v3 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_transportModePredictor);
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v26;
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = v19;
    aBlock[4] = sub_100018954;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001593C;
    aBlock[3] = &unk_10009E030;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    LODWORD(v19) = [v17 transportTypeFromLocation:v14 toEntry:v27 completion:v20];

    _Block_release(v20);
    return v19 == 1;
  }
  sub_1000187DC((uint64_t)v29);
  if (qword_1000A7A00 != -1) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v22 = sub_100082F00();
  sub_10001859C(v22, (uint64_t)qword_1000ACBA8);
  os_log_type_t v23 = sub_100082EE0();
  os_log_type_t v24 = sub_100083920();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "GeneralMapsStateCollector: determineTransportType had no origin location", v25, 2u);
    swift_slowDealloc();
  }

  return 0;
}

void sub_10001593C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1000159B4()
{
  uint64_t v0 = sub_100082EA0();
  uint64_t v32 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100002874(&qword_1000A7F30);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082E40();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000A7A08 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100082F30();
  swift_release();
  swift_release();
  if ((v36 & 1) != 0 || v35)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100082F00();
    sub_10001859C(v16, (uint64_t)qword_1000ACBA8);
    unint64_t v17 = sub_100082EE0();
    os_log_type_t v18 = sub_100083920();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_22;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "GeneralMapsStateCollector: canFetchRoutesForSuggestions location is not precise";
    goto LABEL_21;
  }
  sub_100008F64((uint64_t)&v35);
  sub_100019284((uint64_t)&v35, (uint64_t)v37, &qword_1000A7F38);
  sub_100019284((uint64_t)v37, (uint64_t)v38, &qword_1000A7F38);
  uint64_t v10 = v38[0];
  sub_1000187DC((uint64_t)&v35);
  if (!v10)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_100082F00();
    sub_10001859C(v21, (uint64_t)qword_1000ACBA8);
    unint64_t v17 = sub_100082EE0();
    os_log_type_t v18 = sub_100083920();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_22;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "GeneralMapsStateCollector: canFetchRoutesForSuggestions no location";
    goto LABEL_21;
  }
  uint64_t Integer = GEOConfigGetInteger();
  if (Integer <= 0)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_100082F00();
    sub_10001859C(v22, (uint64_t)qword_1000ACBA8);
    unint64_t v17 = sub_100082EE0();
    os_log_type_t v18 = sub_100083920();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_22;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "GeneralMapsStateCollector: canFetchRoutesForSuggestions routing requests not allowed";
LABEL_21:
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v20, v19, 2u);
    swift_slowDealloc();
LABEL_22:

    return 0;
  }
  uint64_t v12 = Integer;
  id v13 = [self standardUserDefaults];
  NSString v14 = sub_100083850();
  id v15 = [v13 objectForKey:v14];

  if (v15)
  {
    sub_100083A20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_100019284((uint64_t)v33, (uint64_t)v34, &qword_1000A7F40);
  if (!v34[3])
  {
    sub_100019138((uint64_t)v34, &qword_1000A7F40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_29;
  }
  int v24 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, v24 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_29:
    sub_100082E30();
    sub_100019138((uint64_t)v5, &qword_1000A7F30);
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
LABEL_30:
  NSString v25 = sub_100083850();
  id v26 = [v13 integerForKey:v25];

  sub_100082E90();
  LOBYTE(v25) = sub_100082E80();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v2, v0);
  if ((v25 & 1) != 0 && (uint64_t)v26 >= v12)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100082F00();
    sub_10001859C(v27, (uint64_t)qword_1000ACBA8);
    uint64_t v28 = sub_100082EE0();
    os_log_type_t v29 = sub_100083920();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134217984;
      v34[0] = v12;
      sub_100083A00();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "GeneralMapsStateCollector: canFetchRoutesForSuggestions already fetched the maximum number of routes for today (%ld)", v30, 0xCu);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 1;
}

void sub_100016128(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v105 = (void *)sub_100082EA0();
  uint64_t v104 = (void (**)(void, void))*(v105 - 1);
  __chkstk_darwin(v105);
  uint64_t v103 = ((char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100002874(&qword_1000A7F30);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100082E40();
  uint64_t v8 = *(void *)(v109 - 8);
  uint64_t v9 = __chkstk_darwin(v109);
  os_log_t v102 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v97 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  double v108 = (char *)&v97 - v15;
  uint64_t v101 = v16;
  __chkstk_darwin(v14);
  uint64_t v112 = (char *)&v97 - v17;
  uint64_t v18 = sub_1000836A0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)&v2[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_isolationQueue];
  void *v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  char v24 = sub_1000836C0();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v24)
  {
    id v111 = a1;
    uint64_t v107 = v8;
    unsigned int v106 = v2;
    sub_100008F64((uint64_t)v118);
    sub_100019284((uint64_t)v118, (uint64_t)v119, &qword_1000A7F38);
    id v110 = (id)v118[0];
    NSString v25 = (void *)v118[3];
    id v26 = (void *)v118[7];
    sub_100019284((uint64_t)v119, (uint64_t)&v120, &qword_1000A7F38);
    if (v120)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      id v27 = [v111 MKMapItem];
      if (v27)
      {
        id v100 = v27;
        if (qword_1000A7A00 == -1) {
          goto LABEL_5;
        }
        goto LABEL_45;
      }
      id v44 = v110;
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_100082F00();
      sub_10001859C(v45, (uint64_t)qword_1000ACBA8);
      id v41 = sub_100082EE0();
      os_log_type_t v46 = sub_100083930();
      if (!os_log_type_enabled(v41, v46))
      {

        return;
      }
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v46, "GeneralMapsStateCollector: fetchRouteForSuggestion had no map item", v47, 2u);
      swift_slowDealloc();
    }
    else
    {
      sub_1000187DC((uint64_t)v118);
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_100082F00();
      sub_10001859C(v40, (uint64_t)qword_1000ACBA8);
      id v41 = sub_100082EE0();
      os_log_type_t v42 = sub_100083930();
      if (os_log_type_enabled(v41, v42))
      {
        id v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "GeneralMapsStateCollector: fetchRouteForSuggestion had no origin location", v43, 2u);
        swift_slowDealloc();
      }
    }

    return;
  }
  __break(1u);
LABEL_45:
  swift_once();
LABEL_5:
  uint64_t v28 = sub_100082F00();
  uint64_t v99 = sub_10001859C(v28, (uint64_t)qword_1000ACBA8);
  os_log_type_t v29 = sub_100082EE0();
  os_log_type_t v30 = sub_100083920();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = v109;
  uint64_t v33 = v108;
  uint64_t v34 = v107;
  uint64_t v35 = v106;
  if (v31)
  {
    char v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "GeneralMapsStateCollector: fetchRouteForSuggestion BEGIN", v36, 2u);
    swift_slowDealloc();
  }

  dispatch_group_enter(*(dispatch_group_t *)&v35[OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup]);
  sub_100082E30();
  id v37 = [self standardUserDefaults];
  NSString v38 = sub_100083850();
  id v39 = [v37 objectForKey:v38];

  if (v39)
  {
    sub_100083A20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v117, 0, sizeof(v117));
  }
  sub_100019284((uint64_t)v117, (uint64_t)aBlock, &qword_1000A7F40);
  if (v114)
  {
    int v48 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v7, v48 ^ 1u, 1, v32);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v7, 1, v32) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v7, v32);
      goto LABEL_24;
    }
  }
  else
  {
    sub_100019138((uint64_t)aBlock, &qword_1000A7F40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v7, 1, 1, v32);
  }
  sub_100082E30();
  sub_100019138((uint64_t)v7, &qword_1000A7F30);
LABEL_24:
  NSString v49 = sub_100083850();
  id v50 = [v37 integerForKey:v49];

  uint64_t v51 = v103;
  sub_100082E90();
  char v52 = sub_100082E80();
  ((void (**)(NSObject *, void *))v104)[1](v51, v105);
  if ((v52 & 1) == 0)
  {
LABEL_28:
    uint64_t v54 = 1;
    goto LABEL_29;
  }
  BOOL v53 = __OFADD__(v50, 1);
  uint64_t v54 = (uint64_t)v50 + 1;
  if (v53)
  {
    __break(1u);
    goto LABEL_28;
  }
LABEL_29:
  Class isa = sub_100082DD0().super.isa;
  NSString v56 = sub_100083850();
  [v37 setObject:isa forKey:v56];

  NSString v57 = sub_100083850();
  uint64_t v104 = (void (**)(void, void))v37;
  [v37 setInteger:v54 forKey:v57];

  uint64_t BOOL = GEOConfigGetBOOL();
  uint64_t v59 = GEOTransportTypeFromUserPreference();
  id v60 = v111;
  if (![v111 containsKey:@"MapsSuggestionsTransportTypeKey"])
  {
LABEL_33:
    id v62 = v110;
    goto LABEL_34;
  }
  uint64_t v61 = (uint64_t)[v60 integerForKey:@"MapsSuggestionsTransportTypeKey"];
  id v62 = v110;
  if (v61 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v59 = v61;
  if (v61 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_33;
  }
LABEL_34:
  uint64_t v97 = v54;
  if (v59 > 5) {
    uint64_t v63 = 1;
  }
  else {
    uint64_t v63 = qword_100086488[(int)v59];
  }
  unint64_t v64 = [objc_allocWithZone((Class)MKDirectionsRequest) init];
  [v62 coordinate];
  id v67 = [objc_allocWithZone((Class)MKPlacemark) initWithCoordinate:v65, v66];
  id v68 = [objc_allocWithZone((Class)MKMapItem) initWithPlacemark:v67];

  [v64 setSource:v68];
  [v64 setDestination:v100];
  [v64 setTransportType:v63];
  [v64 _setUseBackgroundURL:BOOL];
  unint64_t v69 = [objc_allocWithZone((Class)MKDirections) initWithRequest:v64];
  id v70 = [self sharedService];
  if (!v70) {
    goto LABEL_47;
  }
  dispatch_group_t v71 = v70;
  uint64_t v105 = v69;
  uint64_t v103 = v64;
  id v72 = [v70 defaultTraits];

  if (!v72)
  {
LABEL_48:
    __break(1u);
    return;
  }
  [v72 setIsWidgetRequest:1];
  id v73 = [objc_allocWithZone((Class)GEOLocation) initWithCLLocation:v62];
  [v72 setDeviceLocation:v73];

  [v72 addTransportType:v59];
  uint64_t v74 = v107;
  uint64_t v98 = *(void (**)(void, void, void))(v107 + 16);
  uint64_t v75 = v112;
  v98(v13, v112, v32);
  unint64_t v76 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v77 = swift_allocObject();
  uint64_t v78 = v106;
  id v79 = v111;
  *(void *)(v77 + 16) = v106;
  *(void *)(v77 + 24) = v79;
  unint64_t v80 = v77 + v76;
  uint64_t v81 = v109;
  (*(void (**)(unint64_t, char *, uint64_t))(v74 + 32))(v80, v13, v109);
  double v115 = sub_100018758;
  uint64_t v116 = v77;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000155E0;
  double v114 = &unk_10009DFE0;
  uint64_t v82 = _Block_copy(aBlock);
  id v83 = v72;
  id v84 = v78;
  id v85 = v79;
  swift_release();
  id v86 = v105;
  [v105 _calculateDirectionsWithTraits:v83 completionHandler:v82];
  _Block_release(v82);
  id v111 = v83;

  int v87 = v102;
  v98(v102, v75, v81);
  uint64_t v88 = sub_100082EE0();
  os_log_type_t v89 = sub_100083920();
  if (os_log_type_enabled(v88, v89))
  {
    uint64_t v90 = swift_slowAlloc();
    *(_DWORD *)uint64_t v90 = 134349312;
    unsigned int v106 = (char *)(v90 + 4);
    sub_100082E30();
    sub_100082DC0();
    uint64_t v92 = v91;
    uint64_t v93 = *(void (**)(void, void))(v74 + 8);
    v93(v13, v81);
    aBlock[0] = v92;
    sub_100083A00();
    v93(v87, v81);
    *(_WORD *)(v90 + 12) = 2050;
    aBlock[0] = v97;
    sub_100083A00();
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "GeneralMapsStateCollector: fetchRouteForSuggestion blocked caller for %{public}f seconds, request %{public}ld", (uint8_t *)v90, 0x16u);
    id v94 = v105;
    swift_slowDealloc();

    id v95 = v111;
    id v96 = v104;
  }
  else
  {

    uint64_t v93 = *(void (**)(void, void))(v74 + 8);
    v93(v87, v81);
    uint64_t v88 = v103;
    id v96 = v110;
    id v94 = v111;
    id v95 = v100;
  }

  v93(v108, v81);
  v93(v112, v81);
}

void sub_100016FE8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v90 = a3;
  uint64_t v9 = sub_1000836A0();
  uint64_t v87 = *(void *)(v9 - 8);
  uint64_t v88 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)&v81[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_100082E40();
  id v13 = *(unsigned char **)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_type_t v89 = &v81[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = &v81[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v81[-v19];
  if (!a1) {
    goto LABEL_20;
  }
  id v21 = [a1 routes];
  sub_1000188D8(0, &qword_1000A7F50);
  unint64_t v22 = sub_1000838D0();

  if (!(v22 >> 62))
  {
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v68 = sub_100083B80();
  swift_bridgeObjectRelease();
  if (!v68) {
    goto LABEL_19;
  }
LABEL_4:
  id v86 = a4;
  if ((v22 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = a5;
    char v24 = v18;
    uint64_t v18 = v13;
    uint64_t v25 = v12;
    id v26 = (id)sub_100083AB0();
  }
  else
  {
    if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v23 = a5;
    char v24 = v18;
    uint64_t v18 = v13;
    uint64_t v25 = v12;
    id v26 = *(id *)(v22 + 32);
  }
  id v27 = v26;
  id v85 = v24;
  swift_bridgeObjectRelease();
  id v28 = [v27 _geoComposedRoute];

  uint64_t v12 = v25;
  id v13 = v18;
  a5 = v23;
  os_log_type_t v29 = v86;
  if (!v28)
  {
LABEL_20:
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_100082F00();
    sub_10001859C(v69, (uint64_t)qword_1000ACBA8);
    (*((void (**)(unsigned char *, uint64_t, uint64_t))v13 + 2))(v20, a5, v12);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v61 = sub_100082EE0();
    os_log_type_t v70 = sub_100083930();
    if (os_log_type_enabled(v61, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v88 = v12;
      uint64_t v91 = a2;
      v92[0] = v72;
      *(_DWORD *)uint64_t v71 = 136446466;
      swift_errorRetain();
      sub_100002874(&qword_1000A7F48);
      uint64_t v73 = sub_100083890();
      uint64_t v91 = sub_10006863C(v73, v74, v92);
      sub_100083A00();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v71 + 12) = 2050;
      uint64_t v75 = v89;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v77 = v76;
      uint64_t v78 = (void (*)(unsigned char *, uint64_t))*((void *)v13 + 1);
      id v79 = v75;
      uint64_t v80 = v88;
      v78(v79, v88);
      uint64_t v91 = v77;
      sub_100083A00();
      v78(v20, v80);
      _os_log_impl((void *)&_mh_execute_header, v61, v70, "GeneralMapsStateCollector: fetchRouteForSuggestion END (error: %{public}s, %{public}f seconds elapsed)", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      (*((void (**)(unsigned char *, uint64_t))v13 + 1))(v20, v12);
    }
    goto LABEL_25;
  }
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t *v11 = sub_1000839A0();
  uint64_t v31 = v87;
  uint64_t v30 = v88;
  (*(void (**)(uint64_t *, void, uint64_t))(v87 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v88);
  char v32 = sub_1000836C0();
  (*(void (**)(uint64_t *, uint64_t))(v31 + 8))(v11, v30);
  if ((v32 & 1) == 0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
LABEL_15:
    uint64_t v55 = sub_100082F00();
    sub_10001859C(v55, (uint64_t)qword_1000ACBA8);
    NSString v56 = v13;
    NSString v57 = (void (*)(unsigned char *, uint64_t, uint64_t))*((void *)v13 + 2);
    uint64_t v58 = v85;
    uint64_t v59 = v88;
    v57(v85, v87, v88);
    id v60 = v18;
    uint64_t v61 = sub_100082EE0();
    os_log_type_t v62 = sub_100083920();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 67174913;
      LODWORD(v91) = [v60 expectedTime] / 0x3C;
      sub_100083A00();

      *(_WORD *)(v63 + 8) = 2050;
      unint64_t v64 = v89;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v66 = v65;
      id v67 = (void (*)(unsigned char *, uint64_t))*((void *)v56 + 1);
      v67(v64, v59);
      uint64_t v91 = v66;
      sub_100083A00();
      v67(v58, v59);
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "GeneralMapsStateCollector: fetchRouteForSuggestion END (route with expected travel time: %{private}u mins, %{public}f seconds elapsed)", (uint8_t *)v63, 0x12u);
      swift_slowDealloc();
    }
    else
    {

      (*((void (**)(unsigned char *, uint64_t))v56 + 1))(v58, v59);
    }
LABEL_25:

    dispatch_group_leave(*(dispatch_group_t *)(v90
                                             + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup));
    return;
  }
  uint64_t v87 = a5;
  uint64_t v88 = v12;
  id v33 = v29;
  uint64_t v18 = v28;
  sub_100008F64((uint64_t)v92);
  uint64_t v34 = v92[0];
  uint64_t v35 = v92[1];
  uint64_t v36 = v93;
  uint64_t v37 = v94;
  uint64_t v38 = v95;
  uint64_t v40 = v96;
  uint64_t v39 = v97;
  id v86 = v98;
  uint64_t v84 = v99;
  uint64_t v83 = v100;
  int v82 = v101;
  if ((v97 & 0xC000000000000001) == 0) {
    goto LABEL_14;
  }
  if (v97 >= 0) {
    uint64_t v39 = v97 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v41 = sub_100083B30();
  if (!__OFADD__(v41, 1))
  {
    uint64_t v39 = sub_100018030(v39, v41 + 1);
LABEL_14:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v91 = v39;
    sub_100035F58((uint64_t)v18, v33, isUniquelyReferenced_nonNull_native);
    uint64_t v43 = v91;

    swift_bridgeObjectRelease();
    uint64_t v44 = v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state;
    uint64_t v45 = *(void *)(v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state);
    uint64_t v46 = *(void *)(v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 8);
    uint64_t v47 = *(void *)(v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 16);
    int v48 = *(void **)(v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 24);
    uint64_t v49 = *(void *)(v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 32);
    uint64_t v50 = *(void *)(v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 40);
    uint64_t v51 = *(void *)(v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 48);
    char v52 = *(void **)(v90 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector____lazy_storage___state + 56);
    *(void *)uint64_t v44 = v34;
    *(void *)(v44 + 8) = v35;
    *(void *)(v44 + 16) = v36;
    *(void *)(v44 + 24) = v37;
    *(void *)(v44 + 32) = v38;
    *(void *)(v44 + 40) = v40;
    BOOL v53 = v86;
    *(void *)(v44 + 48) = v43;
    *(void *)(v44 + 56) = v53;
    uint64_t v54 = v83;
    *(void *)(v44 + 64) = v84;
    *(void *)(v44 + 72) = v54;
    *(unsigned char *)(v44 + 80) = v82;
    sub_100018854(v45, v46, v47, v48, v49, v50, v51, v52);
    if (qword_1000A7A00 == -1) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
  __break(1u);
}

void sub_100017854(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1000178E0(uint64_t a1)
{
  uint64_t v1 = OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNavigationRouteCancellation;
  if (*(void *)(a1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_pendingNavigationRouteCancellation))
  {
    swift_retain();
    sub_100083670();
    *(void *)(a1 + v1) = 0;
    swift_release();
    sub_10000D760();
    swift_release();
  }
  else
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_100082F00();
    sub_10001859C(v3, (uint64_t)qword_1000ACBA8);
    oslog = sub_100082EE0();
    os_log_type_t v4 = sub_100083930();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "GeneralMapsStateCollector: collectNavigationRoute was cancelled just before nav service callback", v5, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_100017AC0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GeneralMapsStateCollector();
  return [super dealloc];
}

uint64_t type metadata accessor for GeneralMapsStateCollector()
{
  return self;
}

uint64_t destroy for GeneralMapsState(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GeneralMapsState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v9 = *(void **)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  id v10 = v3;
  id v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GeneralMapsState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(void **)(a1 + 24);
  uint64_t v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  id v9 = v8;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v10 = *(void **)(a1 + 56);
  id v11 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v11;
  id v12 = v11;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for GeneralMapsState(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for GeneralMapsState(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneralMapsState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneralMapsState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeneralMapsState()
{
  return &type metadata for GeneralMapsState;
}

uint64_t sub_100017F70(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_100017FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100017FD8()
{
  return swift_release();
}

uint64_t sub_100017FE0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000188D8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_100018030(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100002874(&qword_1000A7F60);
    uint64_t v2 = sub_100083BB0();
    uint64_t v18 = v2;
    sub_100083B20();
    uint64_t v3 = sub_100083B50();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1000188D8(0, &qword_1000A7F68);
      do
      {
        swift_dynamicCast();
        sub_1000188D8(0, (unint64_t *)&unk_1000A7F70);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1000351A4(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = sub_1000839D0(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_100083B50();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

unint64_t sub_100018284(uint64_t a1)
{
  uint64_t v2 = sub_100002874(&qword_1000A8020);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_100002874(&qword_1000A8028);
    uint64_t v7 = (void *)sub_100083BC0();
    uint64_t v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_10001A720(v9, (uint64_t)v5, &qword_1000A8020);
      char v11 = *v5;
      unint64_t result = sub_100075878(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v7[6] + result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
      unint64_t result = sub_100018E74(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

Swift::Int sub_100018434(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100002874(&qword_1000A7F28);
    uint64_t v3 = sub_100083A90();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      sub_1000185D4(v6 + 40 * v4, (uint64_t)v21);
      Swift::Int result = sub_100083A60(*(void *)(v3 + 40));
      uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v9 = result & v8;
      unint64_t v10 = (result & (unint64_t)v8) >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * v10);
      uint64_t v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        while (1)
        {
          sub_1000185D4(*(void *)(v3 + 48) + 40 * v9, (uint64_t)v20);
          char v13 = sub_100083A70();
          Swift::Int result = sub_100018630((uint64_t)v20);
          if (v13) {
            break;
          }
          unint64_t v9 = (v9 + 1) & v8;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0) {
            goto LABEL_8;
          }
        }
        sub_100018630((uint64_t)v21);
      }
      else
      {
LABEL_8:
        *(void *)(v5 + 8 * v10) = v12 | v11;
        uint64_t v14 = *(void *)(v3 + 48) + 40 * v9;
        long long v15 = v21[0];
        long long v16 = v21[1];
        *(void *)(v14 + 32) = v22;
        *(_OWORD *)uint64_t v14 = v15;
        *(_OWORD *)(v14 + 16) = v16;
        uint64_t v17 = *(void *)(v3 + 16);
        BOOL v18 = __OFADD__(v17, 1);
        uint64_t v19 = v17 + 1;
        if (v18)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v19;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_10001859C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1000185D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100018630(uint64_t a1)
{
  return a1;
}

uint64_t sub_100018684()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100018758(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100082E40() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void **)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100016FE8(a1, a2, v6, v7, v8);
}

uint64_t sub_1000187DC(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 56);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100018854(uint64_t result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a7)
  {
    unint64_t v10 = (void *)result;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000188D8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10001891C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100018954(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

uint64_t sub_100018980()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000189C8(uint64_t a1)
{
  sub_100014D38(a1, *(id *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_1000189D8(uint64_t a1, uint64_t a2)
{
  return sub_100015234(a1, a2, *(char **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1000189E4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100018A24()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_100016128(*(void **)(v0 + 24));
  uint64_t v2 = *(NSObject **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup);

  dispatch_group_leave(v2);
}

unint64_t sub_100018A68()
{
  unint64_t result = qword_1000A8800;
  if (!qword_1000A8800)
  {
    sub_100083610();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8800);
  }
  return result;
}

unint64_t sub_100018AC0()
{
  unint64_t result = qword_1000A8810[0];
  if (!qword_1000A8810[0])
  {
    sub_1000028B8((uint64_t *)&unk_1000A7F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A8810);
  }
  return result;
}

uint64_t sub_100018B20()
{
  return sub_1000154C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100018B30()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100018B78()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100018BB0(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_100018BB8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100018BF8()
{
  sub_100013600(*(void **)(v0 + 16));
}

uint64_t type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot()
{
  uint64_t result = qword_1000A80A8;
  if (!qword_1000A80A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100018C4C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100018C5C()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100018D54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100082E40() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(char **)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100011ED0(a1, a2, v8, v2 + v6, v9, v10);
}

uint64_t sub_100018E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100018E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100018ED8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100018F38(uint64_t a1)
{
  return a1;
}

id *sub_100018F64(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_100018F90()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100019098()
{
  uint64_t v1 = *(void *)(sub_100082E40() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = *(void *)((char *)v0 + v3);
  uint64_t v8 = *(void *)((char *)v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_10001226C(v4, v5, v6, (uint64_t)v0 + v2, v7, v8);
}

uint64_t sub_100019138(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100002874(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100019194(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1000191EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100019244()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10001927C(uint64_t a1)
{
  sub_10000E620(a1, *(void *)(v1 + 16));
}

uint64_t sub_100019284(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100002874(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000192E8(uint64_t a1)
{
  return a1;
}

void sub_100019314()
{
}

uint64_t sub_10001931C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10001935C()
{
  return sub_10000B924(*(void *)(v0 + 16), *(uint64_t (**)(char *))(v0 + 24));
}

uint64_t sub_100019368()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_10001945C(double a1, double a2)
{
  uint64_t v5 = *(void *)(sub_100082E40() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2[2];
  uint64_t v8 = (void *)v2[3];
  uint64_t v9 = v2[4];
  uint64_t v10 = (uint64_t)v2 + v6;
  uint64_t v11 = (char *)v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void (**)(void))v11;
  uint64_t v13 = *((void *)v11 + 1);

  sub_10000BA60(v7, v8, v9, v10, v12, v13, a1, a2);
}

void sub_100019520()
{
  sub_100082E40();
  uint64_t v1 = *(void *)(v0 + 16);

  sub_10000C354(v1);
}

uint64_t sub_100019584()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_100019670(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100082E40() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void (**)(void))v7;
  uint64_t v9 = *(void *)(v7 + 8);

  sub_10000C474(a1, v5, v6, v8, v9);
}

id *sub_100019714(id *a1)
{
  return a1;
}

void sub_100019744()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  uint64_t v2 = *(NSObject **)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget25GeneralMapsStateCollector_collectorGroup);

  dispatch_group_leave(v2);
}

uint64_t sub_100019790()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  unint64_t v7 = (v3 + ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v3;
  uint64_t v8 = v7 + v5;

  unint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  swift_release();
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

void sub_10001989C(void *a1, void *a2, void *a3)
{
  uint64_t v7 = *(void *)(sub_100082E40() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + 24) & ~v8;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v12 = *(void (**)(void))(v3 + v10);
  uint64_t v13 = *(void *)(v3 + v10 + 8);

  sub_10000A788(a1, a2, a3, v11, v3 + v9, v12, v13, (void *)(v3 + ((v8 + v10 + 16) & ~v8)));
}

uint64_t sub_10001996C()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100019A38()
{
  uint64_t v1 = *(void *)(sub_100082E40() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_10000EE58();
  sub_10000F99C(v2);
  sub_100013784();
}

uint64_t sub_100019AB4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100019AF4()
{
  return sub_100009F38(*(void (**)(unsigned char *))(v0 + 16));
}

id sub_100019B00(id result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a7)
  {
    uint64_t v9 = result;
    swift_bridgeObjectRetain();
    id v10 = v9;
    id v11 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a8;
  }
  return result;
}

uint64_t sub_100019B90()
{
  uint64_t v1 = sub_100083610();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100083630();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_100019DF8;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009E5D0;
  id v10 = _Block_copy(aBlock);
  id v11 = v0;
  sub_100083620();
  v13[1] = &_swiftEmptyArrayStorage;
  sub_100018A68();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  sub_100083A40();
  sub_1000839B0();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void sub_100019DF8()
{
  sub_1000178E0(*(void *)(v0 + 16));
}

unsigned char *initializeBufferWithCopyOfBuffer for GeneralMapsStateCollector.NearbyCategoryCacheDomain(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GeneralMapsStateCollector.NearbyCategoryCacheDomain(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GeneralMapsStateCollector.NearbyCategoryCacheDomain(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100019F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100019F90(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100019F98(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GeneralMapsStateCollector.NearbyCategoryCacheDomain()
{
  return &type metadata for GeneralMapsStateCollector.NearbyCategoryCacheDomain;
}

uint64_t *sub_100019FB4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100082E40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    id v10 = (uint64_t *)((char *)a1 + v8);
    id v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v13;
    uint64_t v14 = a3[8];
    *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    *(_DWORD *)((char *)a1 + v14) = *(_DWORD *)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    id v15 = v13;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10001A0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10001A150(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  id v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v12;
  uint64_t v13 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  id v14 = v12;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10001A20C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)(a2 + v10);
  uint64_t v12 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = v11;
  id v13 = v11;

  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10001A2F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10001A398(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  id v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  uint64_t v14 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10001A460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001A474);
}

uint64_t sub_10001A474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100082E40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10001A538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001A54C);
}

uint64_t sub_10001A54C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100082E40();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10001A60C()
{
  uint64_t result = sub_100082E40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10001A6CC()
{
  unint64_t result = qword_1000A80F0;
  if (!qword_1000A80F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A80F0);
  }
  return result;
}

uint64_t sub_10001A720(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100002874(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_10001A784(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_10001A82C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    unint64_t v10 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
    uint64_t v11 = *((void *)v10 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100002874(&qword_1000A7A60);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      *(void *)&v8[v10[5]] = *(void *)&v9[v10[5]];
      uint64_t v15 = v10[6];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      BOOL v18 = *(void **)&v9[v15];
      swift_bridgeObjectRetain();
      if (v18 == (void *)1)
      {
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      }
      else
      {
        uint64_t v19 = (void *)*((void *)v17 + 1);
        *(void *)uint64_t v16 = v18;
        *((void *)v16 + 1) = v19;
        id v20 = v18;
        id v21 = v19;
      }
      uint64_t v22 = v10[7];
      uint64_t v23 = &v8[v22];
      char v24 = &v9[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v25 = *(int *)(a3 + 20);
    id v26 = (void *)((char *)v4 + v25);
    id v27 = (uint64_t *)((char *)a2 + v25);
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_100083730();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *id v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10001AACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v5 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    swift_bridgeObjectRelease();
    uint64_t v7 = (id *)(v4 + *(int *)(v5 + 24));
    if (*v7 != (id)1)
    {
    }
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_100083730();
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10001AC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100002874(&qword_1000A7A60);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
    *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
    uint64_t v13 = v9[6];
    uint64_t v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    uint64_t v16 = *(void **)&v8[v13];
    swift_bridgeObjectRetain();
    if (v16 == (void *)1)
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    }
    else
    {
      uint64_t v17 = (void *)*((void *)v15 + 1);
      *(void *)uint64_t v14 = v16;
      *((void *)v14 + 1) = v17;
      id v18 = v16;
      id v19 = v17;
    }
    uint64_t v20 = v9[7];
    id v21 = &v7[v20];
    uint64_t v22 = &v8[v20];
    *(void *)id v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v23 = *(int *)(a3 + 20);
  char v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_100083730();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    void *v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10001AE90(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_100020EB8((uint64_t)v8, type metadata accessor for NearbyEntryContent.ResolvedContent);
LABEL_7:
      uint64_t v20 = sub_100002874(&qword_1000A7A60);
      memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
      if ((uint64_t *)a1 == a2) {
        return a1;
      }
      goto LABEL_20;
    }
    uint64_t v21 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v8, v9, v21);
    *(void *)&v8[v10[5]] = *(void *)&v9[v10[5]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v22 = v10[6];
    uint64_t v23 = &v8[v22];
    char v24 = &v9[v22];
    uint64_t v25 = *(void **)&v8[v22];
    uint64_t v26 = *(void **)&v9[v22];
    if (v25 == (void *)1)
    {
      if (v26 != (void *)1)
      {
        *(void *)uint64_t v23 = v26;
        id v27 = (void *)*((void *)v24 + 1);
        *((void *)v23 + 1) = v27;
        id v28 = v26;
        id v29 = v27;
        goto LABEL_19;
      }
    }
    else
    {
      if (v26 != (void *)1)
      {
        *(void *)uint64_t v23 = v26;
        id v37 = v26;

        uint64_t v38 = (void *)*((void *)v23 + 1);
        uint64_t v39 = (void *)*((void *)v24 + 1);
        *((void *)v23 + 1) = v39;
        id v40 = v39;

LABEL_19:
        uint64_t v41 = v10[7];
        os_log_type_t v42 = &v8[v41];
        uint64_t v43 = &v9[v41];
        uint64_t v44 = *(void *)v43;
        v42[8] = v43[8];
        *(void *)os_log_type_t v42 = v44;
        if ((uint64_t *)a1 == a2) {
          return a1;
        }
        goto LABEL_20;
      }
      sub_10001B23C((uint64_t)v23);
    }
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    goto LABEL_19;
  }
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
  *(void *)&v8[v10[5]] = *(void *)&v9[v10[5]];
  uint64_t v16 = v10[6];
  uint64_t v17 = &v8[v16];
  id v18 = &v9[v16];
  id v19 = *(void **)&v9[v16];
  swift_bridgeObjectRetain();
  if (v19 == (void *)1)
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  else
  {
    *(void *)uint64_t v17 = v19;
    uint64_t v30 = (void *)*((void *)v18 + 1);
    *((void *)v17 + 1) = v30;
    id v31 = v19;
    id v32 = v30;
  }
  uint64_t v33 = v10[7];
  uint64_t v34 = &v8[v33];
  uint64_t v35 = &v9[v33];
  uint64_t v36 = *(void *)v35;
  v34[8] = v35[8];
  *(void *)uint64_t v34 = v36;
  (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  if ((uint64_t *)a1 != a2)
  {
LABEL_20:
    uint64_t v45 = *(int *)(a3 + 20);
    uint64_t v46 = (void *)(a1 + v45);
    uint64_t v47 = (uint64_t *)((char *)a2 + v45);
    sub_100019138(a1 + v45, &qword_1000A8170);
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v48 = sub_100083730();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
    }
    else
    {
      *uint64_t v46 = *v47;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10001B23C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001B290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100002874(&qword_1000A7A60);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
    *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
    uint64_t v13 = v9[7];
    int v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    v14[8] = v15[8];
    *(void *)int v14 = *(void *)v15;
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (void *)(a1 + v16);
  id v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_100083730();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10001B4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
      *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
      uint64_t v15 = v9[7];
      uint64_t v16 = &v7[v15];
      uint64_t v17 = &v8[v15];
      v16[8] = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v18 = sub_100002874(&qword_1000A7A60);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_8;
  }
  if (v13)
  {
    sub_100020EB8((uint64_t)v7, type metadata accessor for NearbyEntryContent.ResolvedContent);
    goto LABEL_7;
  }
  uint64_t v25 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v7, v8, v25);
  *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
  swift_bridgeObjectRelease();
  uint64_t v26 = v9[6];
  uint64_t v27 = (uint64_t)&v7[v26];
  id v28 = &v8[v26];
  id v29 = *(void **)&v7[v26];
  if (v29 == (void *)1) {
    goto LABEL_15;
  }
  if (*(void *)v28 == 1)
  {
    sub_10001B23C(v27);
LABEL_15:
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    goto LABEL_17;
  }
  *(void *)uint64_t v27 = *(void *)v28;

  uint64_t v30 = *(void **)(v27 + 8);
  *(void *)(v27 + 8) = *((void *)v28 + 1);

LABEL_17:
  uint64_t v31 = v9[7];
  id v32 = &v7[v31];
  uint64_t v33 = &v8[v31];
  *(void *)id v32 = *(void *)v33;
  v32[8] = v33[8];
  if (a1 == a2) {
    return a1;
  }
LABEL_8:
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  sub_100019138(a1 + v19, &qword_1000A8170);
  uint64_t v22 = sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_100083730();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10001B808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001B81C);
}

uint64_t sub_10001B81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100002874(&qword_1000A8178);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10001B918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001B92C);
}

uint64_t sub_10001B92C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100002874(&qword_1000A8178);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for NearbyWidgetView(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000A81D8);
}

void sub_10001BA54()
{
  type metadata accessor for NearbyEntryContent(319);
  if (v0 <= 0x3F)
  {
    sub_100021048(319, (unint64_t *)&qword_1000A81E8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10001BB38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001BB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v24[1] = a1;
  uint64_t v28 = a2;
  sub_100002874(&qword_1000A86E8);
  __chkstk_darwin();
  int v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100083520();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100002874(&qword_1000A86F0);
  __chkstk_darwin();
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100002874(&qword_1000A86F8);
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100002874(&qword_1000A8700);
  __chkstk_darwin();
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for Image.TemplateRenderingMode.original(_:);
  uint64_t v16 = sub_100083540();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v9, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
  sub_100083530();
  sub_100019138((uint64_t)v9, &qword_1000A86F0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  sub_100083560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100083700();
  uint64_t v18 = sub_100083720();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 0, 1, v18);
  sub_100083550();
  swift_release();
  sub_100019138((uint64_t)v3, &qword_1000A86E8);
  if (qword_1000A7988 != -1) {
    swift_once();
  }
  sub_1000835D0();
  sub_100082FB0();
  uint64_t v20 = v26;
  uint64_t v19 = v27;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v14, v12, v27);
  uint64_t v21 = &v14[*(int *)(v25 + 36)];
  long long v22 = v30;
  *(_OWORD *)uint64_t v21 = v29;
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v31;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v19);
  sub_100023E18();
  sub_100083420();
  return sub_100019138((uint64_t)v14, &qword_1000A8700);
}

uint64_t sub_10001BFEC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001BB54(*v1, a1);
}

uint64_t sub_10001BFF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v41 = sub_100002874(&qword_1000A8698);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100002874(&qword_1000A86A0);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v43 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100082D90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = type metadata accessor for NearbyButtonAction(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100002874(&qword_1000A86A8);
  uint64_t v14 = *(void *)(v40 - 8);
  uint64_t v15 = __chkstk_darwin(v40);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = type metadata accessor for NearbyButtonContent(0);
  sub_100020C04(v45 + *(int *)(v20 + 24), (uint64_t)v13, type metadata accessor for NearbyButtonAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v13, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  if (EnumCaseMultiPayload == 1) {
    sub_100083360();
  }
  else {
    sub_100083350();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  uint64_t v22 = v40;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v17, v40);
  uint64_t v23 = type metadata accessor for NearbyButtonActionLink(0);
  uint64_t v24 = v45;
  uint64_t v25 = *(void *)(v45 + *(int *)(v23 + 20));
  swift_retain();
  uint64_t v26 = sub_1000835D0();
  uint64_t v28 = v27;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v2, v19, v22);
  uint64_t v29 = v42;
  long long v30 = (uint64_t *)&v2[*(int *)(v41 + 36)];
  uint64_t *v30 = v26;
  v30[1] = v28;
  long long v31 = v43;
  sub_10001A720((uint64_t)v2, (uint64_t)&v43[*(int *)(v29 + 36)], &qword_1000A8698);
  void *v31 = v25;
  sub_100019138((uint64_t)v2, &qword_1000A8698);
  uint64_t v32 = *(void *)(v24 + 24);
  uint64_t v46 = *(void *)(v24 + 16);
  uint64_t v47 = v32;
  sub_100023C14();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1000833B0();
  uint64_t v35 = v34;
  char v37 = v36 & 1;
  sub_100023C68();
  sub_100083430();
  sub_100023DA0(v33, v35, v37);
  swift_bridgeObjectRelease();
  sub_100019138((uint64_t)v31, &qword_1000A86A0);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v22);
}

uint64_t sub_10001C4A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000834B0();
  *a1 = result;
  return result;
}

uint64_t sub_10001C4D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NearbyButtonAction(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NearbyButtonContent(0);
  sub_100020C04(v1 + *(int *)(v6 + 24), (uint64_t)v5, type metadata accessor for NearbyButtonAction);
  uint64_t v7 = sub_100082D90();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, v5, v7);
}

uint64_t sub_10001C5AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v3 - 8);
  uint64_t v42 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000832D0();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A7A60);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NearbyEntryContent(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100002874(&qword_1000A8540);
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  __chkstk_darwin(v14);
  char v37 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000835D0();
  uint64_t v18 = v17;
  int v19 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v43 = a1;
  if (v19 == 2) {
    goto LABEL_4;
  }
  uint64_t v20 = *(void *)v1;
  sub_100020C04(v1, (uint64_t)v13, type metadata accessor for NearbyEntryContent);
  sub_100019284((uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t)v10, &qword_1000A7A60);
  uint64_t v21 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v10, 1, v21);
  if (result != 1)
  {
    uint64_t v23 = &v10[*(int *)(v21 + 28)];
    uint64_t v24 = *(void *)v23;
    char v25 = v23[8];
    sub_100020EB8((uint64_t)v10, type metadata accessor for NearbyEntryContent.ResolvedContent);
    if ((v25 & 1) == 0)
    {
      uint64_t v26 = v19 & 1;
      goto LABEL_6;
    }
LABEL_4:
    uint64_t v20 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 2;
LABEL_6:
    uint64_t v44 = v16;
    uint64_t v45 = v18;
    uint64_t v46 = v20;
    uint64_t v47 = v26;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v48 = v24;
    uint64_t v27 = sub_1000832C0();
    v36[1] = v36;
    __chkstk_darwin(v27);
    sub_1000835D0();
    uint64_t v28 = sub_100002874(&qword_1000A8548);
    uint64_t v29 = sub_100002874(&qword_1000A8478);
    uint64_t v30 = sub_100023D5C(&qword_1000A8550, &qword_1000A8548);
    uint64_t v35 = sub_100023D5C(&qword_1000A8488, &qword_1000A8478);
    long long v31 = v37;
    sub_100083460();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
    uint64_t v32 = sub_100082D90();
    uint64_t v33 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v42, 1, 1, v32);
    uint64_t v44 = v28;
    uint64_t v45 = v29;
    uint64_t v46 = v30;
    uint64_t v47 = v35;
    swift_getOpaqueTypeConformance2();
    uint64_t v34 = v39;
    sub_1000833D0();
    sub_100019138(v33, &qword_1000A7A68);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v31, v34);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001CA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A8490);
  __chkstk_darwin(v3 - 8);
  uint64_t v29 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100002874(&qword_1000A8288);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100002874(&qword_1000A7A60);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = (int *)sub_100002874(&qword_1000A8478);
  __chkstk_darwin(v17);
  int v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v16;
  sub_100020C04(a1, (uint64_t)v16, type metadata accessor for NearbyEntryContent);
  LODWORD(v16) = *(unsigned __int8 *)(a1 + 8);
  sub_100020C04(a1, (uint64_t)v14, type metadata accessor for NearbyEntryContent);
  if (v16 == 2)
  {
    sub_100020EB8((uint64_t)v14, type metadata accessor for NearbyEntryContent);
    char v21 = 0;
LABEL_5:
    uint64_t v25 = (uint64_t)v20;
    uint64_t v26 = v29;
    uint64_t v27 = v30;
    char v28 = v21 & 1;
    uint64_t *v7 = swift_getKeyPath();
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    *uint64_t v26 = swift_getKeyPath();
    sub_100002874(&qword_1000A8498);
    swift_storeEnumTagMultiPayload();
    *(void *)&v19[v17[10]] = swift_getKeyPath();
    sub_100002874(&qword_1000A84A0);
    swift_storeEnumTagMultiPayload();
    sub_100019284((uint64_t)v7, (uint64_t)v19, &qword_1000A8288);
    sub_100019284((uint64_t)v26, (uint64_t)&v19[v17[9]], &qword_1000A8490);
    sub_100023058(v25, (uint64_t)&v19[v17[11]], type metadata accessor for NearbyEntryContent);
    v19[v17[12]] = v28;
    return sub_100019284((uint64_t)v19, v27, &qword_1000A8478);
  }
  sub_10001A720((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v10, &qword_1000A7A60);
  uint64_t v22 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v10, 1, v22);
  if (result != 1)
  {
    sub_100020EB8((uint64_t)v14, type metadata accessor for NearbyEntryContent);
    char v24 = v10[*(int *)(v22 + 28) + 8];
    sub_100020EB8((uint64_t)v10, type metadata accessor for NearbyEntryContent.ResolvedContent);
    char v21 = v24 ^ 1;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_10001CE94()
{
  qword_1000ACB40 = 0x4030000000000000;
}

void sub_10001CEA4()
{
  qword_1000ACB48 = 0x4049000000000000;
}

void sub_10001CEB4()
{
  qword_1000ACB50 = 0x402E000000000000;
}

uint64_t sub_10001CEC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v2 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v2 - 8);
  id v79 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000832D0();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100002874(&qword_1000A8558);
  __chkstk_darwin(v76);
  uint64_t v71 = (uint64_t *)((char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_100002874(&qword_1000A8560);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100082F80();
  uint64_t v7 = *(void *)(v83 - 8);
  uint64_t v8 = __chkstk_darwin(v83);
  uint64_t v94 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v97 = (uint64_t)&v70 - v10;
  uint64_t v11 = sub_100002874(&qword_1000A8468);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NearbyButtonActionLink(0);
  uint64_t v82 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v93 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v84 = (uint64_t)&v70 - v18;
  __chkstk_darwin(v17);
  uint64_t v92 = (uint64_t)&v70 - v19;
  uint64_t v20 = type metadata accessor for NearbyButtonContent(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20 - 8);
  char v24 = (void **)((char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v70 - v25;
  uint64_t v26 = sub_100002874(&qword_1000A7A60);
  __chkstk_darwin(v26 - 8);
  char v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v30 = v29 - 8;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v70 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v102 = &_swiftEmptyArrayStorage;
  uint64_t v33 = *(int *)(type metadata accessor for NearbyMediumWidgetView(0) + 20);
  uint64_t v96 = v1;
  sub_100020C04(v1 + v33, (uint64_t)v32, type metadata accessor for NearbyEntryContent);
  sub_100019284((uint64_t)&v32[*(int *)(v30 + 28)], (uint64_t)v28, &qword_1000A7A60);
  uint64_t v34 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v28, 1, v34) == 1)
  {
    __break(1u);
LABEL_23:
    uint64_t result = sub_100083B70();
    __break(1u);
  }
  else
  {
    uint64_t v35 = *(void *)&v28[*(int *)(v34 + 20)];
    swift_bridgeObjectRetain();
    sub_100020EB8((uint64_t)v28, type metadata accessor for NearbyEntryContent.ResolvedContent);
    uint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      unint64_t v37 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v70 = v35;
      uint64_t v38 = v35 + v37;
      os_log_type_t v89 = (uint64_t (**)(char *, uint64_t))(v7 + 88);
      uint64_t v90 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      int v88 = enum case for ColorScheme.light(_:);
      int v81 = enum case for ColorScheme.dark(_:);
      uint64_t v91 = (void (**)(uint64_t, uint64_t))(v7 + 8);
      uint64_t v39 = v83;
      id v86 = (unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48);
      uint64_t v87 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
      uint64_t v85 = *(void *)(v21 + 72);
      uint64_t v40 = (uint64_t)v95;
      while (1)
      {
        sub_100020C04(v38, v40, type metadata accessor for NearbyButtonContent);
        if (v102[2] > 1uLL) {
          break;
        }
        uint64_t v41 = v14;
        sub_100020C04(v40, (uint64_t)v24, type metadata accessor for NearbyButtonContent);
        uint64_t v42 = v97;
        sub_1000681A4(v97);
        uint64_t v44 = *v24;
        uint64_t v43 = v24[1];
        uint64_t v45 = v94;
        (*v90)(v94, v42, v39);
        int v46 = (*v89)(v45, v39);
        if (v46 == v88)
        {
          uint64_t v43 = v44;
          uint64_t v14 = v41;
        }
        else
        {
          uint64_t v14 = v41;
          if (v46 != v81) {
            goto LABEL_23;
          }
        }
        if (v43)
        {
          uint64_t v47 = v84;
          sub_100020C04((uint64_t)v24, v84, type metadata accessor for NearbyButtonContent);
          id v48 = v43;
          uint64_t v49 = sub_100083500();
          (*v91)(v97, v39);
          sub_100020EB8((uint64_t)v24, type metadata accessor for NearbyButtonContent);
          *(void *)(v47 + *(int *)(v14 + 20)) = v49;
          sub_100023058(v47, (uint64_t)v13, type metadata accessor for NearbyButtonActionLink);
          uint64_t v50 = 0;
        }
        else
        {
          (*v91)(v97, v39);
          sub_100020EB8((uint64_t)v24, type metadata accessor for NearbyButtonContent);
          uint64_t v50 = 1;
        }
        uint64_t v40 = (uint64_t)v95;
        (*v87)(v13, v50, 1, v14);
        if ((*v86)(v13, 1, v14) == 1)
        {
          sub_100020EB8(v40, type metadata accessor for NearbyButtonContent);
          sub_100019138((uint64_t)v13, &qword_1000A8468);
        }
        else
        {
          uint64_t v51 = v92;
          sub_100023058((uint64_t)v13, v92, type metadata accessor for NearbyButtonActionLink);
          sub_100020C04(v51, v93, type metadata accessor for NearbyButtonActionLink);
          unint64_t v52 = (unint64_t)v102;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v52 = sub_100074C1C(0, *(void *)(v52 + 16) + 1, 1, v52);
          }
          unint64_t v54 = *(void *)(v52 + 16);
          unint64_t v53 = *(void *)(v52 + 24);
          if (v54 >= v53 >> 1) {
            unint64_t v52 = sub_100074C1C(v53 > 1, v54 + 1, 1, v52);
          }
          *(void *)(v52 + 16) = v54 + 1;
          sub_100023058(v93, v52+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v54, type metadata accessor for NearbyButtonActionLink);
          os_log_t v102 = (void *)v52;
          sub_100020EB8(v92, type metadata accessor for NearbyButtonActionLink);
          sub_100020EB8(v40, type metadata accessor for NearbyButtonContent);
          uint64_t v39 = v83;
        }
        v38 += v85;
        if (!--v36) {
          goto LABEL_21;
        }
      }
      sub_100020EB8(v40, type metadata accessor for NearbyButtonContent);
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_1000835D0();
    uint64_t v56 = (uint64_t)v71;
    *uint64_t v71 = v55;
    *(void *)(v56 + 8) = v57;
    uint64_t v58 = sub_100002874(&qword_1000A8568);
    sub_10001DAE0((uint64_t *)&v102, v96, v56 + *(int *)(v58 + 44));
    uint64_t v59 = v72;
    uint64_t v60 = sub_1000832C0();
    __chkstk_darwin(v60);
    sub_1000835D0();
    uint64_t v61 = sub_100002874(&qword_1000A8478);
    uint64_t v62 = sub_100023D5C(&qword_1000A8570, &qword_1000A8558);
    uint64_t v69 = sub_100023D5C(&qword_1000A8488, &qword_1000A8478);
    uint64_t v63 = v75;
    uint64_t v64 = v76;
    sub_100083460();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v59, v74);
    sub_100019138(v56, &qword_1000A8558);
    uint64_t v65 = sub_100082D90();
    uint64_t v66 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v79, 1, 1, v65);
    uint64_t v98 = v64;
    uint64_t v99 = v61;
    uint64_t v100 = v62;
    uint64_t v101 = v69;
    swift_getOpaqueTypeConformance2();
    uint64_t v67 = v78;
    sub_1000833D0();
    sub_100019138(v66, &qword_1000A7A68);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v63, v67);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001DAE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100002874(&qword_1000A7A60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NearbyEntryContent(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100002874(&qword_1000A8578);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v37 - v16;
  if (*(void *)(*a1 + 16))
  {
    *(void *)uint64_t v17 = sub_1000831C0();
    *((void *)v17 + 1) = 0;
    v17[16] = 1;
    uint64_t v18 = sub_100002874(&qword_1000A8590);
    sub_10001DF08(a1, (uint64_t)&v17[*(int *)(v18 + 44)]);
    uint64_t v19 = sub_100002874(&qword_1000A8580);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = sub_100002874(&qword_1000A8580);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 1, 1, v20);
  }
  uint64_t v21 = a2 + *(int *)(type metadata accessor for NearbyMediumWidgetView(0) + 20);
  int v22 = *(unsigned __int8 *)(v21 + 8);
  double v23 = 0.0;
  if (v22 == 2) {
    goto LABEL_7;
  }
  uint64_t v24 = *(void *)v21;
  sub_100020C04(v21, (uint64_t)v11, type metadata accessor for NearbyEntryContent);
  sub_100019284((uint64_t)&v11[*(int *)(v9 + 20)], (uint64_t)v8, &qword_1000A7A60);
  uint64_t v25 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v8, 1, v25);
  if (result != 1)
  {
    uint64_t v27 = &v8[*(int *)(v25 + 28)];
    uint64_t v28 = *(void *)v27;
    char v29 = v27[8];
    sub_100020EB8((uint64_t)v8, type metadata accessor for NearbyEntryContent.ResolvedContent);
    if ((v29 & 1) == 0)
    {
      if (qword_1000A7980 != -1) {
        swift_once();
      }
      double v32 = *(double *)&qword_1000ACB40;
      if (qword_1000A7988 != -1) {
        swift_once();
      }
      uint64_t v30 = v22 & 1;
      double v33 = *(double *)&qword_1000ACB48;
      double v34 = v32 + *(double *)&qword_1000ACB48;
      if (qword_1000A7990 != -1)
      {
        swift_once();
        double v33 = *(double *)&qword_1000ACB48;
      }
      double v23 = sub_100037170(0.0, v34 + *(double *)&qword_1000ACB50 + v33 + *(double *)&qword_1000ACB40, 0.0, 0.0);
      uint64_t v31 = v35;
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v24 = 0;
    uint64_t v28 = 0;
    uint64_t v30 = 2;
    uint64_t v31 = 0;
LABEL_15:
    sub_10001A720((uint64_t)v17, (uint64_t)v15, &qword_1000A8578);
    sub_10001A720((uint64_t)v15, a3, &qword_1000A8578);
    uint64_t v36 = (double *)(a3 + *(int *)(sub_100002874(&qword_1000A8588) + 48));
    *(void *)uint64_t v36 = v24;
    *((void *)v36 + 1) = v30;
    *((void *)v36 + 2) = v28;
    v36[3] = v23;
    *((void *)v36 + 4) = v31;
    sub_100019138((uint64_t)v17, &qword_1000A8578);
    return sub_100019138((uint64_t)v15, &qword_1000A8578);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001DF08@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A8598);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  *(void *)uint64_t v9 = sub_100083130();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v10 = sub_100002874(&qword_1000A85A0);
  sub_10001E030(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  sub_10001A720((uint64_t)v9, (uint64_t)v7, &qword_1000A8598);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0x3FF0000000000000;
  uint64_t v11 = sub_100002874(&qword_1000A85A8);
  sub_10001A720((uint64_t)v7, a2 + *(int *)(v11 + 48), &qword_1000A8598);
  sub_100019138((uint64_t)v9, &qword_1000A8598);
  return sub_100019138((uint64_t)v7, &qword_1000A8598);
}

uint64_t sub_10001E030@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A85B0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  if (qword_1000A7980 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1000ACB40;
  uint64_t *v7 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v7 + *(int *)(v4 + 36)) = v10;
  uint64_t v11 = (char *)v7 + *(int *)(v4 + 40);
  *(void *)uint64_t v11 = sub_1000831C0();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v12 = *(int *)(sub_100002874(&qword_1000A85B8) + 44);
  if (qword_1000A7990 != -1) {
    swift_once();
  }
  uint64_t v13 = &v11[v12];
  uint64_t v14 = qword_1000ACB50;
  *(void *)uint64_t v13 = sub_100083130();
  *((void *)v13 + 1) = v14;
  v13[16] = 0;
  uint64_t v15 = sub_100002874(&qword_1000A85C0);
  sub_10001E254(a1, &v13[*(int *)(v15 + 44)]);
  sub_100019284((uint64_t)v7, (uint64_t)v9, &qword_1000A85B0);
  sub_10001A720((uint64_t)v9, (uint64_t)v7, &qword_1000A85B0);
  sub_10001A720((uint64_t)v7, a2, &qword_1000A85B0);
  uint64_t v16 = a2 + *(int *)(sub_100002874(&qword_1000A85C8) + 48);
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  *(void *)(v16 + 16) = 0x3FF0000000000000;
  sub_100019138((uint64_t)v9, &qword_1000A85B0);
  return sub_100019138((uint64_t)v7, &qword_1000A85B0);
}

uint64_t sub_10001E254@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A85D0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v17 = *v2;
  swift_bridgeObjectRetain();
  sub_100002874(&qword_1000A85D8);
  sub_100082D90();
  type metadata accessor for NearbyButtonActionLink(0);
  sub_100023D5C(&qword_1000A85E0, &qword_1000A85D8);
  sub_100020D48(&qword_1000A85E8, (void (*)(uint64_t))type metadata accessor for NearbyButtonActionLink);
  sub_100020D48(&qword_1000A85F0, (void (*)(uint64_t))type metadata accessor for NearbyButtonActionLink);
  sub_1000835B0();
  LOBYTE(v2) = *(void *)(*v15 + 16) != 1;
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v10(v7, v9, v3);
  uint64_t v11 = v16;
  v10(v16, v7, v3);
  v11[*(int *)(sub_100002874(&qword_1000A85F8) + 48)] = (char)v2;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v9, v3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v7, v3);
}

uint64_t sub_10001E4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100020C04(a1, a2, type metadata accessor for NearbyButtonActionLink);
}

uint64_t sub_10001E500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v2 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000832D0();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100002874(&qword_1000A8458);
  __chkstk_darwin(v76);
  uint64_t v71 = (void *)((char *)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100002874(&qword_1000A8460);
  uint64_t v77 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v75 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100082F80();
  uint64_t v87 = *(void (***)(char *, uint64_t))(v81 - 8);
  uint64_t v9 = __chkstk_darwin(v81);
  uint64_t v94 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v95 = (char *)v68 - v11;
  uint64_t v12 = type metadata accessor for NearbyButtonContent(0);
  uint64_t v84 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (void **)((char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_100002874(&qword_1000A8468);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for NearbyButtonActionLink(0);
  uint64_t v80 = *(void *)(v93 - 8);
  uint64_t v18 = __chkstk_darwin(v93);
  uint64_t v92 = (uint64_t)v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v83 = (uint64_t)v68 - v21;
  __chkstk_darwin(v20);
  uint64_t v91 = (uint64_t)v68 - v22;
  uint64_t v23 = sub_100002874(&qword_1000A7A60);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  char v29 = (char *)v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 16) = &_swiftEmptyArrayStorage;
  uint64_t v30 = type metadata accessor for NearbyLargeWidgetView(0);
  sub_100020C04(v1 + *(int *)(v30 + 20), (uint64_t)v29, type metadata accessor for NearbyEntryContent);
  sub_100019284((uint64_t)&v29[*(int *)(v27 + 28)], (uint64_t)v25, &qword_1000A7A60);
  uint64_t v31 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v25, 1, v31) == 1)
  {
    __break(1u);
LABEL_20:
    uint64_t result = sub_100083B70();
    __break(1u);
  }
  else
  {
    uint64_t v69 = v7;
    uint64_t v70 = v4;
    uint64_t v32 = *(void *)&v25[*(int *)(v31 + 20)];
    swift_bridgeObjectRetain();
    sub_100020EB8((uint64_t)v25, type metadata accessor for NearbyEntryContent.ResolvedContent);
    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      unint64_t v34 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
      v68[1] = v32;
      uint64_t v35 = v32 + v34;
      os_log_type_t v89 = (uint64_t (**)(char *, uint64_t))(v87 + 11);
      uint64_t v90 = (void (**)(char *, uint64_t, uint64_t))(v87 + 2);
      int v88 = enum case for ColorScheme.light(_:);
      int v79 = enum case for ColorScheme.dark(_:);
      uint64_t v36 = v81;
      id v86 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
      ++v87;
      uint64_t v84 = *(void *)(v84 + 72);
      uint64_t v85 = (unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
      uint64_t v37 = (uint64_t)v95;
      do
      {
        sub_100020C04(v35, (uint64_t)v14, type metadata accessor for NearbyButtonContent);
        sub_1000681A4(v37);
        uint64_t v38 = *v14;
        uint64_t v39 = v14[1];
        uint64_t v40 = v94;
        (*v90)(v94, v37, v36);
        int v41 = (*v89)(v40, v36);
        if (v41 == v88)
        {
          uint64_t v39 = v38;
          uint64_t v42 = v93;
        }
        else
        {
          uint64_t v42 = v93;
          if (v41 != v79) {
            goto LABEL_20;
          }
        }
        if (v39)
        {
          uint64_t v43 = v83;
          sub_100020C04((uint64_t)v14, v83, type metadata accessor for NearbyButtonContent);
          id v44 = v39;
          uint64_t v45 = sub_100083500();
          (*v87)(v95, v36);
          sub_100020EB8((uint64_t)v14, type metadata accessor for NearbyButtonContent);
          *(void *)(v43 + *(int *)(v42 + 20)) = v45;
          sub_100023058(v43, (uint64_t)v17, type metadata accessor for NearbyButtonActionLink);
          uint64_t v46 = 0;
        }
        else
        {
          (*v87)(v95, v36);
          sub_100020EB8((uint64_t)v14, type metadata accessor for NearbyButtonContent);
          uint64_t v46 = 1;
        }
        (*v86)(v17, v46, 1, v42);
        if ((*v85)(v17, 1, v42) == 1)
        {
          sub_100019138((uint64_t)v17, &qword_1000A8468);
        }
        else
        {
          uint64_t v47 = v91;
          sub_100023058((uint64_t)v17, v91, type metadata accessor for NearbyButtonActionLink);
          sub_100020C04(v47, v92, type metadata accessor for NearbyButtonActionLink);
          uint64_t v48 = v82;
          unint64_t v49 = *(void *)(v82 + 16);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v48 + 16) = v49;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v49 = sub_100074C1C(0, *(void *)(v49 + 16) + 1, 1, v49);
            *(void *)(v82 + 16) = v49;
          }
          unint64_t v52 = *(void *)(v49 + 16);
          unint64_t v51 = *(void *)(v49 + 24);
          if (v52 >= v51 >> 1)
          {
            unint64_t v49 = sub_100074C1C(v51 > 1, v52 + 1, 1, v49);
            *(void *)(v82 + 16) = v49;
          }
          *(void *)(v49 + 16) = v52 + 1;
          sub_100023058(v92, v49+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(void *)(v80 + 72) * v52, type metadata accessor for NearbyButtonActionLink);
          sub_100020EB8(v91, type metadata accessor for NearbyButtonActionLink);
          uint64_t v36 = v81;
        }
        v35 += v84;
        --v33;
      }
      while (v33);
    }
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1000835D0();
    uint64_t v54 = (uint64_t)v71;
    *uint64_t v71 = v53;
    *(void *)(v54 + 8) = v55;
    uint64_t v56 = sub_100002874(&qword_1000A8470);
    sub_10001F09C(v82, v1, v54 + *(int *)(v56 + 44));
    uint64_t v57 = v72;
    uint64_t v58 = sub_1000832C0();
    uint64_t v95 = (char *)v68;
    __chkstk_darwin(v58);
    sub_1000835D0();
    uint64_t v59 = sub_100002874(&qword_1000A8478);
    uint64_t v60 = sub_100023D5C(&qword_1000A8480, &qword_1000A8458);
    uint64_t v67 = sub_100023D5C(&qword_1000A8488, &qword_1000A8478);
    uint64_t v61 = v75;
    uint64_t v62 = v76;
    sub_100083460();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v57, v74);
    sub_100019138(v54, &qword_1000A8458);
    uint64_t v63 = sub_100082D90();
    uint64_t v64 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v70, 1, 1, v63);
    uint64_t v96 = v62;
    uint64_t v97 = v59;
    uint64_t v98 = v60;
    uint64_t v99 = v67;
    swift_getOpaqueTypeConformance2();
    uint64_t v65 = v69;
    sub_1000833D0();
    sub_100019138(v64, &qword_1000A7A68);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v61, v65);
    return swift_release();
  }
  return result;
}

uint64_t sub_10001F09C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100002874(&qword_1000A7A60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NearbyEntryContent(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100002874(&qword_1000A84A8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v36 - v16;
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 16) + 16))
  {
    *(void *)uint64_t v17 = sub_1000831C0();
    *((void *)v17 + 1) = 0;
    v17[16] = 1;
    uint64_t v18 = sub_100002874(&qword_1000A84C0);
    sub_10001F49C(a1, (uint64_t)&v17[*(int *)(v18 + 44)]);
    uint64_t v19 = sub_100002874(&qword_1000A84B0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = sub_100002874(&qword_1000A84B0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 1, 1, v20);
  }
  uint64_t v21 = a2 + *(int *)(type metadata accessor for NearbyLargeWidgetView(0) + 20);
  int v22 = *(unsigned __int8 *)(v21 + 8);
  double v23 = 0.0;
  if (v22 == 2) {
    goto LABEL_7;
  }
  uint64_t v24 = *(void *)v21;
  sub_100020C04(v21, (uint64_t)v11, type metadata accessor for NearbyEntryContent);
  sub_100019284((uint64_t)&v11[*(int *)(v9 + 20)], (uint64_t)v8, &qword_1000A7A60);
  uint64_t v25 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v8, 1, v25);
  if (result != 1)
  {
    uint64_t v27 = &v8[*(int *)(v25 + 28)];
    uint64_t v28 = *(void *)v27;
    char v29 = v27[8];
    sub_100020EB8((uint64_t)v8, type metadata accessor for NearbyEntryContent.ResolvedContent);
    if ((v29 & 1) == 0)
    {
      if (qword_1000A7980 != -1) {
        swift_once();
      }
      uint64_t v30 = v22 & 1;
      double v32 = *(double *)&qword_1000ACB40;
      double v33 = *(double *)&qword_1000ACB40;
      if (qword_1000A7988 != -1)
      {
        swift_once();
        double v33 = *(double *)&qword_1000ACB40;
      }
      double v23 = sub_100037170(0.0, 0.0, v32 + *(double *)&qword_1000ACB48 + v33, 0.0);
      uint64_t v31 = v34;
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v24 = 0;
    uint64_t v28 = 0;
    uint64_t v30 = 2;
    uint64_t v31 = 0;
LABEL_13:
    sub_10001A720((uint64_t)v17, (uint64_t)v15, &qword_1000A84A8);
    sub_10001A720((uint64_t)v15, a3, &qword_1000A84A8);
    uint64_t v35 = (double *)(a3 + *(int *)(sub_100002874(&qword_1000A84B8) + 48));
    *(void *)uint64_t v35 = v24;
    *((void *)v35 + 1) = v30;
    *((void *)v35 + 2) = v28;
    v35[3] = v23;
    *((void *)v35 + 4) = v31;
    sub_100019138((uint64_t)v17, &qword_1000A84A8);
    return sub_100019138((uint64_t)v15, &qword_1000A84A8);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001F49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A84C8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - v8;
  if (qword_1000A7980 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1000ACB40;
  uint64_t *v7 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v7 + *(int *)(v4 + 36)) = v10;
  uint64_t v11 = (char *)v7 + *(int *)(v4 + 40);
  *(void *)uint64_t v11 = sub_100083130();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v12 = sub_100002874(&qword_1000A84D0);
  sub_10001F65C(a1, &v11[*(int *)(v12 + 44)]);
  sub_100019284((uint64_t)v7, (uint64_t)v9, &qword_1000A84C8);
  sub_10001A720((uint64_t)v9, (uint64_t)v7, &qword_1000A84C8);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0x3FF0000000000000;
  uint64_t v13 = sub_100002874(&qword_1000A84D8);
  sub_10001A720((uint64_t)v7, a2 + *(int *)(v13 + 48), &qword_1000A84C8);
  sub_100019138((uint64_t)v9, &qword_1000A84C8);
  return sub_100019138((uint64_t)v7, &qword_1000A84C8);
}

uint64_t sub_10001F65C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A84E0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v27 = (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v25 = (char *)&v24 - v6;
  uint64_t v7 = sub_100002874(&qword_1000A84E8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v24 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - v11;
  swift_beginAccess();
  uint64_t v13 = *(void *)(*(void *)(a1 + 16) + 16);
  uint64_t v28 = 0;
  uint64_t v29 = v13;
  swift_getKeyPath();
  swift_retain();
  sub_100002874(&qword_1000A84F0);
  sub_100002874(&qword_1000A84F8);
  sub_1000230D8();
  sub_100023D5C(&qword_1000A8510, &qword_1000A84F8);
  sub_1000835A0();
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 16) + 16) == 1)
  {
    sub_100002874(&qword_1000A8528);
    sub_100023D5C(&qword_1000A8530, &qword_1000A8528);
    uint64_t v14 = (uint64_t)v25;
    sub_1000835C0();
    uint64_t v15 = sub_100002874(&qword_1000A8518);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = sub_100002874(&qword_1000A8518);
    uint64_t v14 = (uint64_t)v25;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v25, 1, 1, v16);
  }
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v18 = v24;
  v17(v24, v12, v7);
  uint64_t v19 = v27;
  sub_10001A720(v14, v27, &qword_1000A84E0);
  uint64_t v20 = v26;
  v17(v26, v18, v7);
  uint64_t v21 = sub_100002874(&qword_1000A8520);
  sub_10001A720(v19, (uint64_t)&v20[*(int *)(v21 + 48)], &qword_1000A84E0);
  sub_100019138(v14, &qword_1000A84E0);
  int v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v12, v7);
  sub_100019138(v19, &qword_1000A84E0);
  return ((uint64_t (*)(char *, uint64_t))v22)(v18, v7);
}

uint64_t sub_10001FA58@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for NearbyButtonActionLink(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - v11;
  unint64_t v13 = *a1;
  uint64_t result = swift_beginAccess();
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v15 = *(void *)(a2 + 16);
  unint64_t v16 = *(void *)(v15 + 16);
  if (v13 >= v16)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_100020C04(v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v13, (uint64_t)v12, type metadata accessor for NearbyButtonActionLink);
  BOOL v17 = v13 >= v16 - 1;
  char v18 = !v17;
  sub_100020C04((uint64_t)v12, (uint64_t)v10, type metadata accessor for NearbyButtonActionLink);
  sub_100020C04((uint64_t)v10, a3, type metadata accessor for NearbyButtonActionLink);
  uint64_t v19 = a3 + *(int *)(sub_100002874(&qword_1000A8538) + 48);
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = v18;
  *(unsigned char *)(v19 + 9) = v17;
  sub_100020EB8((uint64_t)v12, type metadata accessor for NearbyButtonActionLink);
  return sub_100020EB8((uint64_t)v10, type metadata accessor for NearbyButtonActionLink);
}

void sub_10001FC10(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_10001FC20@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v5 = sub_100002874(&qword_1000A8490);
  __chkstk_darwin(v5 - 8);
  double v32 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100002874(&qword_1000A8288);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100002874(&qword_1000A7A60);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v18 = (char *)&v32 - v17;
  uint64_t v19 = (int *)sub_100002874(&qword_1000A8478);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1 + *(int *)(a2(0) + 20);
  double v23 = v18;
  sub_100020C04(v22, (uint64_t)v18, type metadata accessor for NearbyEntryContent);
  LODWORD(v18) = *(unsigned __int8 *)(v22 + 8);
  sub_100020C04(v22, (uint64_t)v16, type metadata accessor for NearbyEntryContent);
  if (v18 == 2)
  {
    sub_100020EB8((uint64_t)v16, type metadata accessor for NearbyEntryContent);
    char v24 = 0;
LABEL_5:
    uint64_t v28 = (uint64_t)v23;
    uint64_t v29 = v32;
    uint64_t v30 = v33;
    char v31 = v24 & 1;
    uint64_t *v9 = swift_getKeyPath();
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    uint64_t *v29 = swift_getKeyPath();
    sub_100002874(&qword_1000A8498);
    swift_storeEnumTagMultiPayload();
    *(void *)&v21[v19[10]] = swift_getKeyPath();
    sub_100002874(&qword_1000A84A0);
    swift_storeEnumTagMultiPayload();
    sub_100019284((uint64_t)v9, (uint64_t)v21, &qword_1000A8288);
    sub_100019284((uint64_t)v29, (uint64_t)&v21[v19[9]], &qword_1000A8490);
    sub_100023058(v28, (uint64_t)&v21[v19[11]], type metadata accessor for NearbyEntryContent);
    v21[v19[12]] = v31;
    return sub_100019284((uint64_t)v21, v30, &qword_1000A8478);
  }
  sub_10001A720((uint64_t)&v16[*(int *)(v13 + 20)], (uint64_t)v12, &qword_1000A7A60);
  uint64_t v25 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v12, 1, v25);
  if (result != 1)
  {
    sub_100020EB8((uint64_t)v16, type metadata accessor for NearbyEntryContent);
    char v27 = v12[*(int *)(v25 + 28) + 8];
    sub_100020EB8((uint64_t)v12, type metadata accessor for NearbyEntryContent.ResolvedContent);
    char v24 = v27 ^ 1;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100020034()
{
  return sub_100083440();
}

uint64_t sub_100020054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v45 = sub_100002874(&qword_1000A8218);
  __chkstk_darwin(v45);
  uint64_t v46 = (uint64_t)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100002874(&qword_1000A8220);
  __chkstk_darwin(v56);
  uint64_t v48 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for NearbyLargeWidgetView(0);
  __chkstk_darwin(v44);
  unint64_t v49 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for NearbyEntryContent(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v50 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for NearbyMediumWidgetView(0);
  __chkstk_darwin(v53);
  uint64_t v47 = (uint64_t *)((char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_100002874(&qword_1000A8228);
  __chkstk_darwin(v54);
  uint64_t v55 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100002874(&qword_1000A8230);
  __chkstk_darwin(v58);
  uint64_t v52 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100002874(&qword_1000A8238);
  __chkstk_darwin(v51);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100002874(&qword_1000A8240);
  __chkstk_darwin(v59);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100002874(&qword_1000A8248);
  __chkstk_darwin(v60);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for NearbySmallWidgetView(0);
  __chkstk_darwin(v16);
  char v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100083730();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NearbyWidgetView(0);
  uint64_t v23 = v1;
  sub_1000681E0((uint64_t)v22);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v22, v19);
  if (v24 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v25 = (uint64_t)v18;
    sub_100020C04(v1, (uint64_t)v18, type metadata accessor for NearbyEntryContent);
    sub_100020C04((uint64_t)v18, (uint64_t)v11, type metadata accessor for NearbySmallWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_100020D48(&qword_1000A8268, (void (*)(uint64_t))type metadata accessor for NearbySmallWidgetView);
    sub_100020D48(&qword_1000A8270, (void (*)(uint64_t))type metadata accessor for NearbyMediumWidgetView);
    sub_100083230();
    sub_10001A720((uint64_t)v13, v52, &qword_1000A8240);
    swift_storeEnumTagMultiPayload();
    sub_100020C6C();
    sub_100020D90();
    sub_100083230();
    sub_100019138((uint64_t)v13, &qword_1000A8240);
    sub_10001A720((uint64_t)v15, v55, &qword_1000A8248);
    swift_storeEnumTagMultiPayload();
    sub_100020E3C();
    sub_100083230();
    sub_100019138((uint64_t)v15, &qword_1000A8248);
    uint64_t v26 = type metadata accessor for NearbySmallWidgetView;
LABEL_5:
    uint64_t v34 = v26;
    uint64_t v35 = v25;
    return sub_100020EB8(v35, v34);
  }
  uint64_t v27 = (uint64_t)v11;
  uint64_t v28 = v52;
  uint64_t v29 = v53;
  uint64_t v43 = v15;
  if (v24 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v30 = v23;
    uint64_t v31 = v50;
    sub_100020C04(v30, v50, type metadata accessor for NearbyEntryContent);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v25 = (uint64_t)v47;
    uint64_t *v47 = KeyPath;
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    sub_100023058(v31, v25 + *(int *)(v29 + 20), type metadata accessor for NearbyEntryContent);
    sub_100020C04(v25, v27, type metadata accessor for NearbyMediumWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_100020D48(&qword_1000A8268, (void (*)(uint64_t))type metadata accessor for NearbySmallWidgetView);
    sub_100020D48(&qword_1000A8270, (void (*)(uint64_t))type metadata accessor for NearbyMediumWidgetView);
    sub_100083230();
    sub_10001A720((uint64_t)v13, v28, &qword_1000A8240);
    swift_storeEnumTagMultiPayload();
    sub_100020C6C();
    sub_100020D90();
    uint64_t v33 = (uint64_t)v43;
    sub_100083230();
    sub_100019138((uint64_t)v13, &qword_1000A8240);
    sub_10001A720(v33, v55, &qword_1000A8248);
    swift_storeEnumTagMultiPayload();
    sub_100020E3C();
    sub_100083230();
    sub_100019138(v33, &qword_1000A8248);
    uint64_t v26 = type metadata accessor for NearbyMediumWidgetView;
    goto LABEL_5;
  }
  uint64_t v36 = v55;
  if (v24 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v37 = v50;
    sub_100020C04(v23, v50, type metadata accessor for NearbyEntryContent);
    uint64_t v38 = swift_getKeyPath();
    uint64_t v39 = (uint64_t)v49;
    uint64_t *v49 = v38;
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    sub_100023058(v37, v39 + *(int *)(v44 + 20), type metadata accessor for NearbyEntryContent);
    sub_100020C04(v39, v46, type metadata accessor for NearbyLargeWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_100020D48(&qword_1000A8258, (void (*)(uint64_t))type metadata accessor for NearbyLargeWidgetView);
    uint64_t v40 = (uint64_t)v48;
    sub_100083230();
    sub_10001A720(v40, v28, &qword_1000A8220);
    swift_storeEnumTagMultiPayload();
    sub_100020C6C();
    sub_100020D90();
    uint64_t v41 = (uint64_t)v43;
    sub_100083230();
    sub_100019138(v40, &qword_1000A8220);
    sub_10001A720(v41, v36, &qword_1000A8248);
    swift_storeEnumTagMultiPayload();
    sub_100020E3C();
    sub_100083230();
    sub_100019138(v41, &qword_1000A8248);
    uint64_t v34 = type metadata accessor for NearbyLargeWidgetView;
    uint64_t v35 = v39;
    return sub_100020EB8(v35, v34);
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NearbyLargeWidgetView(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000A82E8);
}

uint64_t type metadata accessor for NearbyMediumWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A8380);
}

uint64_t type metadata accessor for NearbySmallWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A8410);
}

uint64_t sub_100020C04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100020C6C()
{
  unint64_t result = qword_1000A8260;
  if (!qword_1000A8260)
  {
    sub_1000028B8(&qword_1000A8240);
    sub_100020D48(&qword_1000A8268, (void (*)(uint64_t))type metadata accessor for NearbySmallWidgetView);
    sub_100020D48(&qword_1000A8270, (void (*)(uint64_t))type metadata accessor for NearbyMediumWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8260);
  }
  return result;
}

uint64_t sub_100020D48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100020D90()
{
  unint64_t result = qword_1000A8278;
  if (!qword_1000A8278)
  {
    sub_1000028B8(&qword_1000A8220);
    sub_100020D48(&qword_1000A8258, (void (*)(uint64_t))type metadata accessor for NearbyLargeWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8278);
  }
  return result;
}

unint64_t sub_100020E3C()
{
  unint64_t result = qword_1000A8280;
  if (!qword_1000A8280)
  {
    sub_1000028B8(&qword_1000A8248);
    sub_100020C6C();
    sub_100020D90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8280);
  }
  return result;
}

uint64_t sub_100020EB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100020F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100020F44);
}

uint64_t sub_100020F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100020F5C);
}

void sub_100020F64()
{
  sub_100021048(319, (unint64_t *)&unk_1000A82F8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    type metadata accessor for NearbyEntryContent(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100021048(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100082F90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_10002109C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)uint64_t v10 = *(void *)((char *)a2 + v9);
    v10[8] = *((unsigned char *)a2 + v9 + 8);
    uint64_t v12 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
    uint64_t v13 = &v10[v12];
    uint64_t v14 = &v11[v12];
    uint64_t v15 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
    uint64_t v16 = *((void *)v15 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100002874(&qword_1000A7A60);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
      *(void *)&v13[v15[5]] = *(void *)&v14[v15[5]];
      uint64_t v19 = v15[6];
      uint64_t v20 = &v13[v19];
      uint64_t v21 = &v14[v19];
      uint64_t v22 = *(void **)&v14[v19];
      swift_bridgeObjectRetain();
      if (v22 == (void *)1)
      {
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      }
      else
      {
        uint64_t v23 = (void *)*((void *)v21 + 1);
        *(void *)uint64_t v20 = v22;
        *((void *)v20 + 1) = v23;
        id v24 = v22;
        id v25 = v23;
      }
      uint64_t v26 = v15[7];
      uint64_t v27 = &v13[v26];
      uint64_t v28 = &v14[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return a1;
}

void sub_100021334(uint64_t a1, uint64_t a2)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100082F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = v5 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v7 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 24);
    if (*(void *)v9 != 1)
    {

      uint64_t v10 = *(void **)(v9 + 8);
    }
  }
}

void *sub_100021494(void *a1, void *a2, uint64_t a3)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100082F80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[8] = *((unsigned char *)a2 + v7 + 8);
  uint64_t v10 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = &v9[v10];
  uint64_t v13 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100002874(&qword_1000A7A60);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
    *(void *)&v11[v13[5]] = *(void *)&v12[v13[5]];
    uint64_t v17 = v13[6];
    uint64_t v18 = &v11[v17];
    uint64_t v19 = &v12[v17];
    uint64_t v20 = *(void **)&v12[v17];
    swift_bridgeObjectRetain();
    if (v20 == (void *)1)
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v21 = (void *)*((void *)v19 + 1);
      *(void *)uint64_t v18 = v20;
      *((void *)v18 + 1) = v21;
      id v22 = v20;
      id v23 = v21;
    }
    uint64_t v24 = v13[7];
    id v25 = &v11[v24];
    uint64_t v26 = &v12[v24];
    *(void *)id v25 = *(void *)v26;
    v25[8] = v26[8];
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

void *sub_1000216DC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7);
  v8[8] = v9[8];
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_100020EB8((uint64_t)v12, type metadata accessor for NearbyEntryContent.ResolvedContent);
      goto LABEL_12;
    }
    uint64_t v25 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v12, v13, v25);
    *(void *)&v12[v14[5]] = *(void *)&v13[v14[5]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = v14[6];
    uint64_t v27 = &v12[v26];
    uint64_t v28 = &v13[v26];
    uint64_t v29 = *(void **)&v12[v26];
    uint64_t v30 = *(void **)&v13[v26];
    if (v29 == (void *)1)
    {
      if (v30 != (void *)1)
      {
        *(void *)uint64_t v27 = v30;
        uint64_t v31 = (void *)*((void *)v28 + 1);
        *((void *)v27 + 1) = v31;
        id v32 = v30;
        id v33 = v31;
LABEL_22:
        uint64_t v45 = v14[7];
        uint64_t v46 = &v12[v45];
        uint64_t v47 = &v13[v45];
        uint64_t v48 = *(void *)v47;
        v46[8] = v47[8];
        *(void *)uint64_t v46 = v48;
        return a1;
      }
    }
    else
    {
      if (v30 != (void *)1)
      {
        *(void *)uint64_t v27 = v30;
        id v41 = v30;

        uint64_t v42 = (void *)*((void *)v27 + 1);
        uint64_t v43 = (void *)*((void *)v28 + 1);
        *((void *)v27 + 1) = v43;
        id v44 = v43;

        goto LABEL_22;
      }
      sub_10001B23C((uint64_t)v27);
    }
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    goto LABEL_22;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v24 = sub_100002874(&qword_1000A7A60);
    memcpy(v12, v13, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  uint64_t v19 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
  *(void *)&v12[v14[5]] = *(void *)&v13[v14[5]];
  uint64_t v20 = v14[6];
  uint64_t v21 = &v12[v20];
  id v22 = &v13[v20];
  id v23 = *(void **)&v13[v20];
  swift_bridgeObjectRetain();
  if (v23 == (void *)1)
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  else
  {
    *(void *)uint64_t v21 = v23;
    uint64_t v34 = (void *)*((void *)v22 + 1);
    *((void *)v21 + 1) = v34;
    id v35 = v23;
    id v36 = v34;
  }
  uint64_t v37 = v14[7];
  uint64_t v38 = &v12[v37];
  uint64_t v39 = &v13[v37];
  uint64_t v40 = *(void *)v39;
  v38[8] = v39[8];
  *(void *)uint64_t v38 = v40;
  (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

char *sub_100021A70(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100082F80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  v9[8] = a2[v8 + 8];
  uint64_t v11 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v12 = &v9[v11];
  uint64_t v13 = &v10[v11];
  uint64_t v14 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002874(&qword_1000A7A60);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v13, v17);
    *(void *)&v12[v14[5]] = *(void *)&v13[v14[5]];
    *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
    uint64_t v18 = v14[7];
    uint64_t v19 = &v12[v18];
    uint64_t v20 = &v13[v18];
    v19[8] = v20[8];
    *(void *)uint64_t v19 = *(void *)v20;
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

char *sub_100021C8C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    uint64_t v6 = sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  v9[8] = a2[v8 + 8];
  uint64_t v11 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v12 = &v9[v11];
  uint64_t v13 = &v10[v11];
  uint64_t v14 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_100020EB8((uint64_t)v12, type metadata accessor for NearbyEntryContent.ResolvedContent);
      goto LABEL_10;
    }
    uint64_t v25 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v12, v13, v25);
    *(void *)&v12[v14[5]] = *(void *)&v13[v14[5]];
    swift_bridgeObjectRelease();
    uint64_t v26 = v14[6];
    uint64_t v27 = &v12[v26];
    uint64_t v28 = &v13[v26];
    uint64_t v29 = *(void **)&v12[v26];
    if (v29 != (void *)1)
    {
      if (*(void *)v28 != 1)
      {
        *(void *)uint64_t v27 = *(void *)v28;

        uint64_t v30 = (void *)*((void *)v27 + 1);
        *((void *)v27 + 1) = *((void *)v28 + 1);

        goto LABEL_17;
      }
      sub_10001B23C((uint64_t)v27);
    }
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
LABEL_17:
    uint64_t v31 = v14[7];
    id v32 = &v12[v31];
    id v33 = &v13[v31];
    *(void *)id v32 = *(void *)v33;
    v32[8] = v33[8];
    return a1;
  }
  if (v18)
  {
LABEL_10:
    uint64_t v23 = sub_100002874(&qword_1000A7A60);
    memcpy(v12, v13, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  uint64_t v19 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v12, v13, v19);
  *(void *)&v12[v14[5]] = *(void *)&v13[v14[5]];
  *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
  uint64_t v20 = v14[7];
  uint64_t v21 = &v12[v20];
  id v22 = &v13[v20];
  v21[8] = v22[8];
  *(void *)uint64_t v21 = *(void *)v22;
  (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_100021FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100021FDC);
}

uint64_t sub_100021FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8288);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for NearbyEntryContent(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000220DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000220F0);
}

uint64_t sub_1000220F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100002874(&qword_1000A8288);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for NearbyEntryContent(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1000221FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for NearbyEntryContent(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(v4 + 20);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
    uint64_t v10 = *((void *)v9 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_100002874(&qword_1000A7A60);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
      *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
      uint64_t v14 = v9[6];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      int v17 = *(void **)&v8[v14];
      swift_bridgeObjectRetain();
      if (v17 == (void *)1)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      }
      else
      {
        int v18 = (void *)*((void *)v16 + 1);
        *(void *)uint64_t v15 = v17;
        *((void *)v15 + 1) = v18;
        id v19 = v17;
        id v20 = v18;
      }
      uint64_t v21 = v9[7];
      id v22 = &v7[v21];
      uint64_t v23 = &v8[v21];
      *(void *)id v22 = *(void *)v23;
      v22[8] = v23[8];
      (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return a1;
}

void sub_1000223F8(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v2 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v3 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v1, v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = v1 + *(int *)(v2 + 24);
    if (*(void *)v4 != 1)
    {

      int v5 = *(void **)(v4 + 8);
    }
  }
}

uint64_t sub_1000224E8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  int v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v8 = *((void *)v7 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100002874(&qword_1000A7A60);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v5, v6, v10);
    *(void *)&v5[v7[5]] = *(void *)&v6[v7[5]];
    uint64_t v11 = v7[6];
    uint64_t v12 = &v5[v11];
    uint64_t v13 = &v6[v11];
    uint64_t v14 = *(void **)&v6[v11];
    swift_bridgeObjectRetain();
    if (v14 == (void *)1)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v15 = (void *)*((void *)v13 + 1);
      *(void *)uint64_t v12 = v14;
      *((void *)v12 + 1) = v15;
      id v16 = v14;
      id v17 = v15;
    }
    uint64_t v18 = v7[7];
    id v19 = &v5[v18];
    id v20 = &v6[v18];
    *(void *)id v19 = *(void *)v20;
    v19[8] = v20[8];
    (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_100022694(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, int *))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      sub_100020EB8((uint64_t)v6, type metadata accessor for NearbyEntryContent.ResolvedContent);
      goto LABEL_7;
    }
    uint64_t v19 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v6, v7, v19);
    *(void *)&v6[v8[5]] = *(void *)&v7[v8[5]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v8[6];
    uint64_t v21 = &v6[v20];
    id v22 = &v7[v20];
    uint64_t v23 = *(void **)&v6[v20];
    uint64_t v24 = *(void **)&v7[v20];
    if (v23 == (void *)1)
    {
      if (v24 != (void *)1)
      {
        *(void *)uint64_t v21 = v24;
        uint64_t v25 = (void *)*((void *)v22 + 1);
        *((void *)v21 + 1) = v25;
        id v26 = v24;
        id v27 = v25;
LABEL_17:
        uint64_t v39 = v8[7];
        uint64_t v40 = &v6[v39];
        id v41 = &v7[v39];
        uint64_t v42 = *(void *)v41;
        v40[8] = v41[8];
        *(void *)uint64_t v40 = v42;
        return a1;
      }
    }
    else
    {
      if (v24 != (void *)1)
      {
        *(void *)uint64_t v21 = v24;
        id v35 = v24;

        id v36 = (void *)*((void *)v21 + 1);
        uint64_t v37 = (void *)*((void *)v22 + 1);
        *((void *)v21 + 1) = v37;
        id v38 = v37;

        goto LABEL_17;
      }
      sub_10001B23C((uint64_t)v21);
    }
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    goto LABEL_17;
  }
  if (v12)
  {
LABEL_7:
    uint64_t v18 = sub_100002874(&qword_1000A7A60);
    memcpy(v6, v7, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  uint64_t v13 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v7, v13);
  *(void *)&v6[v8[5]] = *(void *)&v7[v8[5]];
  uint64_t v14 = v8[6];
  uint64_t v15 = &v6[v14];
  id v16 = &v7[v14];
  id v17 = *(void **)&v7[v14];
  swift_bridgeObjectRetain();
  if (v17 == (void *)1)
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  else
  {
    *(void *)uint64_t v15 = v17;
    uint64_t v28 = (void *)*((void *)v16 + 1);
    *((void *)v15 + 1) = v28;
    id v29 = v17;
    id v30 = v28;
  }
  uint64_t v31 = v8[7];
  id v32 = &v6[v31];
  id v33 = &v7[v31];
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)id v32 = v34;
  (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t sub_100022974(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v8 = *((void *)v7 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100002874(&qword_1000A7A60);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    *(void *)&v5[v7[5]] = *(void *)&v6[v7[5]];
    *(_OWORD *)&v5[v7[6]] = *(_OWORD *)&v6[v7[6]];
    uint64_t v11 = v7[7];
    int v12 = &v5[v11];
    uint64_t v13 = &v6[v11];
    v12[8] = v13[8];
    *(void *)int v12 = *(void *)v13;
    (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_100022AEC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v8 = *((void *)v7 - 1);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, int *))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (v11)
    {
      sub_100020EB8((uint64_t)v5, type metadata accessor for NearbyEntryContent.ResolvedContent);
      goto LABEL_6;
    }
    uint64_t v18 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v5, v6, v18);
    *(void *)&v5[v7[5]] = *(void *)&v6[v7[5]];
    swift_bridgeObjectRelease();
    uint64_t v19 = v7[6];
    uint64_t v20 = &v5[v19];
    uint64_t v21 = &v6[v19];
    id v22 = *(void **)&v5[v19];
    if (v22 != (void *)1)
    {
      if (*(void *)v21 != 1)
      {
        *(void *)uint64_t v20 = *(void *)v21;

        uint64_t v23 = (void *)*((void *)v20 + 1);
        *((void *)v20 + 1) = *((void *)v21 + 1);

        goto LABEL_13;
      }
      sub_10001B23C((uint64_t)v20);
    }
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
LABEL_13:
    uint64_t v24 = v7[7];
    uint64_t v25 = &v5[v24];
    id v26 = &v6[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    return a1;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_100002874(&qword_1000A7A60);
    memcpy(v5, v6, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
  *(void *)&v5[v7[5]] = *(void *)&v6[v7[5]];
  *(_OWORD *)&v5[v7[6]] = *(_OWORD *)&v6[v7[6]];
  uint64_t v13 = v7[7];
  uint64_t v14 = &v5[v13];
  uint64_t v15 = &v6[v13];
  v14[8] = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_100022D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100022D80);
}

uint64_t sub_100022D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100022DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100022E00);
}

uint64_t sub_100022E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100022E70()
{
  uint64_t result = type metadata accessor for NearbyEntryContent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100022F00()
{
  unint64_t result = qword_1000A8448;
  if (!qword_1000A8448)
  {
    sub_1000028B8(&qword_1000A8450);
    sub_100020E3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8448);
  }
  return result;
}

uint64_t sub_100022F7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100022F98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100022FB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for NearbyButtonActionLink(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A8658);
}

uint64_t sub_100022FF0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100023028@<X0>(uint64_t a1@<X8>)
{
  return sub_10001FC20(*(void *)(v1 + 16), type metadata accessor for NearbyLargeWidgetView, a1);
}

uint64_t sub_100023058(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000230D0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001FA58(a1, v2, a2);
}

unint64_t sub_1000230D8()
{
  unint64_t result = qword_1000A8500;
  if (!qword_1000A8500)
  {
    sub_1000028B8(&qword_1000A84F0);
    sub_100023154();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8500);
  }
  return result;
}

unint64_t sub_100023154()
{
  unint64_t result = qword_1000A8508;
  if (!qword_1000A8508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8508);
  }
  return result;
}

uint64_t sub_1000231A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10001CA94(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000231B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10001FC20(*(void *)(v1 + 16), type metadata accessor for NearbyMediumWidgetView, a1);
}

char *sub_1000231E0(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v9 = a2[1];
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = v9;
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = a2[3];
    uint64_t v10 = *(int *)(type metadata accessor for NearbyButtonContent(0) + 24);
    int v11 = &v7[v10];
    uint64_t v12 = (uint64_t)a2 + v10;
    type metadata accessor for NearbyButtonAction(0);
    uint64_t v13 = v4;
    uint64_t v14 = v9;
    swift_bridgeObjectRetain();
    swift_getEnumCaseMultiPayload();
    uint64_t v15 = sub_100082D90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12, v15);
    swift_storeEnumTagMultiPayload();
    *(void *)&v7[*(int *)(a3 + 20)] = *(char **)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return v7;
}

uint64_t sub_10002332C(id *a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for NearbyButtonContent(0) + 24);
  type metadata accessor for NearbyButtonAction(0);
  uint64_t v3 = sub_100082D90();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_release();
}

void *sub_1000233D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v9 = *(int *)(type metadata accessor for NearbyButtonContent(0) + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = a2 + v9;
  type metadata accessor for NearbyButtonAction(0);
  id v12 = v6;
  id v13 = v7;
  swift_bridgeObjectRetain();
  swift_getEnumCaseMultiPayload();
  uint64_t v14 = sub_100082D90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v11, v14);
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_1000234D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  id v11 = v10;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for NearbyButtonContent(0);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(v12 + 24);
    uint64_t v14 = a2 + v13;
    uint64_t v15 = a1 + v13;
    sub_100020EB8(a1 + v13, type metadata accessor for NearbyButtonAction);
    type metadata accessor for NearbyButtonAction(0);
    swift_getEnumCaseMultiPayload();
    uint64_t v16 = sub_100082D90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100023620(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for NearbyButtonContent(0) + 24);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  type metadata accessor for NearbyButtonAction(0);
  swift_getEnumCaseMultiPayload();
  uint64_t v10 = sub_100082D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void **sub_1000236F8(void **a1, void **a2, uint64_t a3)
{
  long long v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a1[1];
  a1[1] = a2[1];

  id v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for NearbyButtonContent(0);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(v9 + 24);
    id v11 = (char *)a2 + v10;
    uint64_t v12 = (char *)a1 + v10;
    sub_100020EB8((uint64_t)a1 + v10, type metadata accessor for NearbyButtonAction);
    type metadata accessor for NearbyButtonAction(0);
    swift_getEnumCaseMultiPayload();
    uint64_t v13 = sub_100082D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v12, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_100023824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100023838);
}

uint64_t sub_100023838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NearbyButtonContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    id v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000238F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002390C);
}

uint64_t sub_10002390C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for NearbyButtonContent(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1000239C8()
{
  uint64_t result = type metadata accessor for NearbyButtonContent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100023A60(uint64_t a1)
{
  return sub_100023A98(a1, &qword_1000A8460, &qword_1000A8458, &qword_1000A8480);
}

uint64_t sub_100023A7C(uint64_t a1)
{
  return sub_100023A98(a1, &qword_1000A8540, &qword_1000A8548, &qword_1000A8550);
}

uint64_t sub_100023A98(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100023B94(uint64_t a1)
{
  return sub_100023A98(a1, &qword_1000A8560, &qword_1000A8558, &qword_1000A8570);
}

uint64_t sub_100023BB0()
{
  return sub_100020D48(&qword_1000A8690, (void (*)(uint64_t))&type metadata accessor for URL);
}

uint64_t sub_100023BF8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100023C14()
{
  unint64_t result = qword_1000A86B0;
  if (!qword_1000A86B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A86B0);
  }
  return result;
}

unint64_t sub_100023C68()
{
  unint64_t result = qword_1000A86B8;
  if (!qword_1000A86B8)
  {
    sub_1000028B8(&qword_1000A86A0);
    sub_100023D08();
    sub_100023D5C(&qword_1000A86C8, &qword_1000A8698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A86B8);
  }
  return result;
}

unint64_t sub_100023D08()
{
  unint64_t result = qword_1000A86C0;
  if (!qword_1000A86C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A86C0);
  }
  return result;
}

uint64_t sub_100023D5C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100023DA0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

ValueMetadata *type metadata accessor for NearbyButtonActionLink.IconImage()
{
  return &type metadata for NearbyButtonActionLink.IconImage;
}

uint64_t sub_100023DC0()
{
  return sub_100023EE8(&qword_1000A86D0, &qword_1000A86D8, (void (*)(void))sub_100023C68);
}

uint64_t sub_100023DFC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100023E18()
{
  unint64_t result = qword_1000A8708;
  if (!qword_1000A8708)
  {
    sub_1000028B8(&qword_1000A8700);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8708);
  }
  return result;
}

uint64_t sub_100023EAC()
{
  return sub_100023EE8(&qword_1000A8710, &qword_1000A8718, (void (*)(void))sub_100023E18);
}

uint64_t sub_100023EE8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    a3();
    sub_100020D48(&qword_1000A86E0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ColorSchemeSpecificImageSet(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ColorSchemeSpecificImageSet(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for ColorSchemeSpecificImageSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for ColorSchemeSpecificImageSet(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ColorSchemeSpecificImageSet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorSchemeSpecificImageSet(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeSpecificImageSet()
{
  return &type metadata for ColorSchemeSpecificImageSet;
}

uint64_t sub_100024164()
{
  uint64_t result = (uint64_t)[v0 destination];
  if (result)
  {
    uint64_t v2 = (void *)result;
    id v3 = [(id)result mapItemStorage];

    if (v3)
    {
      id v4 = [objc_allocWithZone((Class)MKMapItem) initWithGeoMapItem:v3 isPlaceHolderPlace:0];
      if (v4)
      {
        id v5 = v4;
        id v6 = [v4 _styleAttributes];
        id v7 = sub_1000248A4((uint64_t)v6, 3);

        return (uint64_t)v7;
      }
    }
    return 1;
  }
  __break(1u);
  return result;
}

id sub_100024248()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_100082FF0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_100002874(&qword_1000A8720);
  __chkstk_darwin(v9 - 8);
  id v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v11 = swift_getKeyPath();
  sub_100002874(&qword_1000A8728);
  swift_storeEnumTagMultiPayload();
  if ([v0 type] != (id)24) {
    goto LABEL_7;
  }
  id v12 = [v0 dataForKey:@"MapsSuggestionsContactAsDataKey"];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v29 = v3;
    uint64_t v14 = sub_100082DB0();
    unint64_t v16 = v15;

    sub_1000188D8(0, &qword_1000A8730);
    sub_1000188D8(0, &qword_1000A8738);
    id v20 = (id)sub_100083950();
    sub_1000191EC(v14, v16);
    uint64_t v3 = v29;
    if (v20) {
      goto LABEL_9;
    }
  }
  NSString v17 = [v1 stringForKey:@"MapsSuggestionsContactLikelyAppleIDKey" v28];
  if (v17)
  {
    sub_100083870();

    NSString v17 = sub_100083850();
    swift_bridgeObjectRelease();
  }
  id v20 = [self contactWithDisplayName:0 emailOrPhoneNumber:v17];

  if (v20)
  {
LABEL_9:
    id v21 = v20;
    id v22 = [self mainScreen];
    [v22 scale];
    double v24 = v23;

    sub_1000684D4((uint64_t)v8);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for LayoutDirection.rightToLeft(_:), v2);
    LOBYTE(v22) = sub_100082FE0();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v6, v2);
    v25(v8, v2);
    id v19 = [v21 avatarImageWithSize:v22 & 1 scale:128.0 rightToLeft:128.0 v24];

    sub_100024AC0((uint64_t)v11);
    id v26 = v19;
  }
  else
  {
LABEL_7:
    id v18 = [v1 styleAttributes];
    id v19 = sub_1000248A4((uint64_t)v18, 3);

    sub_100024AC0((uint64_t)v11);
  }
  return v19;
}

uint64_t sub_1000246F8(uint64_t a1)
{
  uint64_t v2 = sub_100082FF0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000830D0();
}

void sub_1000247C0()
{
  NSString v0 = sub_100083850();
  id v1 = [self imageNamed:v0];

  if (v1) {
    qword_1000ACB58 = (uint64_t)v1;
  }
  else {
    __break(1u);
  }
}

id sub_100024838()
{
  if (qword_1000A7998 != -1) {
    swift_once();
  }
  qword_1000ACB60 = qword_1000ACB58;
  *(void *)algn_1000ACB68 = qword_1000ACB58;
  id v0 = (id)qword_1000ACB58;

  return v0;
}

id sub_1000248A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  id v5 = [v4 mainScreen];
  [v5 scale];
  double v7 = v6;

  if (!a1
    || (id v8 = [self imageForStyle:a1 size:a2 forScale:0 format:0 nightMode:v7]) == 0)
  {
    uint64_t v9 = self;
    id v10 = [self markerStyleAttributes];
    id v8 = [v9 imageForStyle:v10 size:a2 forScale:0 format:0 nightMode:v7];
  }
  id v11 = [v4 mainScreen];
  [v11 scale];
  double v13 = v12;

  if (!a1
    || ![self imageForStyle:a1 size:a2 forScale:0 format:1 nightMode:v13])
  {
    uint64_t v14 = self;
    id v15 = [self markerStyleAttributes];
    [v14 imageForStyle:v15 size:a2 forScale:0 format:1 nightMode:v13];
  }
  return v8;
}

uint64_t sub_100024A98()
{
  return sub_1000830C0();
}

uint64_t sub_100024AC0(uint64_t a1)
{
  uint64_t v2 = sub_100002874(&qword_1000A8720);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100024B24()
{
  uint64_t result = sub_1000834E0();
  qword_1000ACB70 = result;
  return result;
}

void sub_100024B60(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_location] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_error] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_waitForLocationGroup] = 0;
  NSString v3 = sub_100083850();
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for GeneralMapsLocationUpdater();
  id v4 = [super initWithName:v3 queue:a1];

  uint64_t v5 = qword_1000A7A08;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = objc_allocWithZone((Class)CLLocationManager);
  id v8 = (char *)v6;
  swift_bridgeObjectRetain();
  id v9 = a1;
  NSString v10 = sub_100083850();
  swift_bridgeObjectRelease();
  id v11 = [v7 initWithEffectiveBundleIdentifier:v10 delegate:v8 onQueue:v9];

  uint64_t v12 = OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager;
  double v13 = *(void **)&v8[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager];
  *(void *)&v8[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager] = v11;

  uint64_t v14 = *(void **)&v8[v12];
  if (v14)
  {
    id v15 = v14;
    [v15 setDesiredAccuracy:kCLLocationAccuracyHundredMeters];
  }
  else
  {
    __break(1u);
  }
}

id sub_100024D28()
{
  uint64_t v1 = sub_100083610();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100083630();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = *(void **)&v0[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager];
  if (v10)
  {
    uint64_t v20 = v7;
    id v11 = v10;
    id v12 = [v0 dispatchQueue];
    id v21 = v0;
    id v13 = v12;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v11;
    aBlock[4] = sub_10002707C;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100068EDC;
    void aBlock[3] = &unk_10009E870;
    id v15 = _Block_copy(aBlock);
    id v16 = v11;
    sub_100083620();
    id v22 = &_swiftEmptyArrayStorage;
    sub_100018A68();
    sub_100002874((uint64_t *)&unk_1000A7F80);
    sub_100018AC0();
    sub_100083A40();
    sub_1000839B0();
    _Block_release(v15);

    id v0 = v21;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v20);
    swift_release();
  }
  NSString v17 = (objc_class *)type metadata accessor for GeneralMapsLocationUpdater();
  v24.receiver = v0;
  v24.super_class = v17;
  [super dealloc];
}

uint64_t sub_100025078(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100083610();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100083630();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [v3 dispatchQueue];
  id v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_100026C30;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009E7D0;
  id v16 = _Block_copy(aBlock);
  id v17 = v3;
  swift_retain();
  sub_100083620();
  v19[1] = &_swiftEmptyArrayStorage;
  sub_100018A68();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  sub_100083A40();
  sub_1000839B0();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

NSObject *sub_10002530C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v4 = sub_100083610();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100083630();
  uint64_t v8 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000836A0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v14 = [v3 dispatchQueue];
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  char v15 = sub_1000836C0();
  id v17 = *(void (**)(void *, uint64_t))(v12 + 8);
  uint64_t v16 = v12 + 8;
  v17(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v16 = OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_waitForLocationGroup;
  id v18 = *(void **)&v3[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_waitForLocationGroup];
  if (v18)
  {
LABEL_9:
    id v26 = v18;
    id v27 = [v3 dispatchQueue];
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v29 = v33;
    void v28[2] = v32;
    v28[3] = v29;
    v28[4] = v3;
    aBlock[4] = sub_100026BCC;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100068EDC;
    void aBlock[3] = &unk_10009E780;
    id v30 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v31 = v3;
    sub_100083620();
    id v35 = &_swiftEmptyArrayStorage;
    sub_100018A68();
    sub_100002874((uint64_t *)&unk_1000A7F80);
    sub_100018AC0();
    sub_100083A40();
    sub_100083960();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v34);
    return swift_release();
  }
  dispatch_group_t v19 = dispatch_group_create();
  uint64_t v20 = *(void **)&v3[v16];
  *(void *)&v3[v16] = v19;

  uint64_t result = *(NSObject **)&v3[v16];
  if (!result)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  dispatch_group_enter(result);
  if (qword_1000A7A00 != -1) {
    goto LABEL_11;
  }
LABEL_5:
  uint64_t v22 = sub_100082F00();
  sub_10001859C(v22, (uint64_t)qword_1000ACBA8);
  double v23 = sub_100082EE0();
  os_log_type_t v24 = sub_100083920();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "GeneralMapsLocationUpdater: singleLocationUpdate BEGIN", v25, 2u);
    swift_slowDealloc();
  }

  uint64_t result = *(NSObject **)&v3[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager];
  if (!result) {
    goto LABEL_13;
  }
  uint64_t result = [result requestLocation];
  id v18 = *(void **)&v3[v16];
  if (v18) {
    goto LABEL_9;
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_1000257A4(void (*a1)(id, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  id v8 = sub_100025838();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(a3 + OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_error);
  swift_errorRetain();
  a1(v8, v6, v7);
  swift_errorRelease();
}

void *sub_100025838()
{
  uint64_t v1 = sub_1000836A0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v4 = [v0 dispatchQueue];
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  char v5 = sub_1000836C0();
  uint64_t result = (void *)(*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_location];
    if (!v7) {
      return sub_1000259C0();
    }
    id v8 = *(void **)&v0[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager];
    if (v8)
    {
      id v9 = v7;
      id v10 = [v8 accuracyAuthorization];
      uint64_t v11 = (void *)qword_1000A8740;
      qword_1000A8740 = (uint64_t)v7;
      qword_1000A8748 = (uint64_t)v10;
      id v12 = v9;

      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1000259C0()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  char v5 = (char *)&v43[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v3);
  id v8 = (char *)&v43[-1] - v7;
  uint64_t v9 = qword_1000A8740;
  if (!qword_1000A8740)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_100082F00();
    sub_10001859C(v27, (uint64_t)qword_1000ACBA8);
    uint64_t v13 = sub_100082EE0();
    os_log_type_t v28 = sub_100083910();
    if (os_log_type_enabled(v13, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v28, "GeneralMapsLocationUpdater: previousLocationInfo: no previous location data available", v29, 2u);
      swift_slowDealloc();
    }
    goto LABEL_26;
  }
  uint64_t v10 = OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager;
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_locationManager);
  if (v11)
  {
    id v12 = (id)qword_1000A8748;
    uint64_t v13 = (id)qword_1000A8740;
    if ([v11 authorizationStatus] - 3 > 1)
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_100082F00();
      sub_10001859C(v30, (uint64_t)qword_1000ACBA8);
      uint64_t v31 = sub_100082EE0();
      os_log_type_t v32 = sub_100083910();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        uint64_t v34 = "GeneralMapsLocationUpdater: previousLocationInfo: previous location authorization revoked";
LABEL_23:
        _os_log_impl((void *)&_mh_execute_header, v31, v32, v34, v33, 2u);
LABEL_24:
        swift_slowDealloc();

        return 0;
      }
LABEL_25:

      goto LABEL_26;
    }
    uint64_t result = *(void **)(v0 + v10);
    if (result)
    {
      if (v12 == [result accuracyAuthorization])
      {
        sub_100082E30();
        id v14 = [v13 timestamp];
        sub_100082E20();

        sub_100082DC0();
        double v16 = v15;
        id v17 = *(void (**)(char *, uint64_t))(v2 + 8);
        v17(v5, v1);
        v17(v8, v1);
        if (v16 < 3600.0)
        {
          if (qword_1000A7A00 != -1) {
            swift_once();
          }
          uint64_t v18 = sub_100082F00();
          sub_10001859C(v18, (uint64_t)qword_1000ACBA8);
          dispatch_group_t v19 = v13;
          uint64_t v20 = sub_100082EE0();
          os_log_type_t v21 = sub_100083910();
          if (os_log_type_enabled(v20, v21))
          {
            uint64_t v22 = (uint8_t *)swift_slowAlloc();
            uint64_t v23 = swift_slowAlloc();
            v43[1] = (uint64_t)v12;
            uint64_t v44 = v23;
            *(_DWORD *)uint64_t v22 = 136380675;
            v43[0] = (uint64_t)v19;
            os_log_type_t v24 = v19;
            uint64_t v25 = sub_100083890();
            v43[0] = sub_10006863C(v25, v26, &v44);
            sub_100083A00();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v20, v21, "GeneralMapsLocationUpdater: previousLocationInfo: using previous location (%{private}s)", v22, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          return (void *)v9;
        }
        if (qword_1000A7A00 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_100082F00();
        sub_10001859C(v36, (uint64_t)qword_1000ACBA8);
        uint64_t v13 = v13;
        uint64_t v31 = sub_100082EE0();
        os_log_type_t v37 = sub_100083910();
        if (os_log_type_enabled(v31, v37))
        {
          id v38 = (uint8_t *)swift_slowAlloc();
          v43[0] = swift_slowAlloc();
          *(_DWORD *)id v38 = 136446210;
          id v39 = [v13 timestamp];
          sub_100082E20();

          uint64_t v40 = sub_100083890();
          uint64_t v44 = sub_10006863C(v40, v41, v43);
          sub_100083A00();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v31, v37, "GeneralMapsLocationUpdater: previousLocationInfo: previous location is too old (%{public}s)", v38, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          goto LABEL_24;
        }

LABEL_26:
        return 0;
      }
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_100082F00();
      sub_10001859C(v35, (uint64_t)qword_1000ACBA8);
      uint64_t v31 = sub_100082EE0();
      os_log_type_t v32 = sub_100083910();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        uint64_t v34 = "GeneralMapsLocationUpdater: previousLocationInfo: previous location accuracy authorization changed";
        goto LABEL_23;
      }
      goto LABEL_25;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100026094()
{
  uint64_t v1 = sub_100083610();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100083630();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [v0 dispatchQueue];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_100027058;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009E820;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  sub_100083620();
  v14[1] = &_swiftEmptyArrayStorage;
  sub_100018A68();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  sub_100083A40();
  sub_1000839B0();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void sub_10002635C(void *a1, unint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_1000836A0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = ((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10->Class isa = (Class)[v4 dispatchQueue];
  (*(void (**)(NSObject *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = sub_1000836C0();
  (*(void (**)(NSObject *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v3 = OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_waitForLocationGroup;
  id v12 = *(void **)&v4[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_waitForLocationGroup];
  if (v12)
  {
    uint64_t v10 = v12;
    [v4 considerMyAllowanceAsLimited:[a1 accuracyAuthorization] != 0];
    if (!(a2 >> 62))
    {
      uint64_t v13 = *(char **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13) {
        goto LABEL_5;
      }
      goto LABEL_21;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v13 = (char *)sub_100083B80();
    if (v13)
    {
LABEL_5:
      id v14 = v13 - 1;
      if (__OFSUB__(v13, 1))
      {
        __break(1u);
      }
      else if ((a2 & 0xC000000000000001) == 0)
      {
        if (((unint64_t)v14 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v14 < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          double v15 = (char *)*(id *)(a2 + 8 * (void)v14 + 32);
          goto LABEL_10;
        }
        __break(1u);
        goto LABEL_31;
      }
      double v15 = (char *)sub_100083AB0();
LABEL_10:
      uint64_t v13 = v15;
      swift_bridgeObjectRelease();
      if (qword_1000A7A00 == -1)
      {
LABEL_11:
        uint64_t v16 = sub_100082F00();
        sub_10001859C(v16, (uint64_t)qword_1000ACBA8);
        id v17 = v13;
        uint64_t v18 = sub_100082EE0();
        os_log_type_t v19 = sub_100083920();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = swift_slowAlloc();
          uint64_t v36 = v10;
          os_log_type_t v21 = (uint8_t *)v20;
          uint64_t v22 = swift_slowAlloc();
          uint64_t v37 = (uint64_t)v17;
          uint64_t v38 = v22;
          *(_DWORD *)os_log_type_t v21 = 136380675;
          uint64_t v35 = v21 + 4;
          sub_100026B4C();
          uint64_t v23 = v17;
          uint64_t v24 = sub_100083890();
          uint64_t v37 = sub_10006863C(v24, v25, &v38);
          sub_100083A00();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v18, v19, "GeneralMapsLocationUpdater: singleLocationUpdate END (location: %{private}s)", v21, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v10 = v36;
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v29 = *(void **)&v4[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_location];
        *(void *)&v4[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_location] = v17;
        uint64_t v30 = v17;

        [v4 considerMyNewLocation:v30];
LABEL_25:

        uint64_t v34 = *(void **)&v4[v3];
        *(void *)&v4[v3] = 0;

        dispatch_group_leave(v10);
        goto LABEL_26;
      }
LABEL_31:
      swift_once();
      goto LABEL_11;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_100082F00();
    sub_10001859C(v31, (uint64_t)qword_1000ACBA8);
    uint64_t v30 = sub_100082EE0();
    os_log_type_t v32 = sub_100083930();
    if (os_log_type_enabled(v30, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v32, "GeneralMapsLocationUpdater: singleLocationUpdate END (no location)", v33, 2u);
      swift_slowDealloc();
    }
    goto LABEL_25;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_100082F00();
  sub_10001859C(v26, (uint64_t)qword_1000ACBA8);
  uint64_t v10 = sub_100082EE0();
  os_log_type_t v27 = sub_100083930();
  if (os_log_type_enabled(v10, v27))
  {
    os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v27, "GeneralMapsLocationUpdater: locationManager:didUpdateLocations: was called when not expected", v28, 2u);
    swift_slowDealloc();
  }
LABEL_26:
}

uint64_t type metadata accessor for GeneralMapsLocationUpdater()
{
  return self;
}

unint64_t sub_100026B4C()
{
  unint64_t result = qword_1000A87F8;
  if (!qword_1000A87F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A87F8);
  }
  return result;
}

uint64_t sub_100026B8C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100026BCC()
{
  sub_1000257A4(*(void (**)(id, uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100026BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100026BE8()
{
  return swift_release();
}

uint64_t sub_100026BF0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

NSObject *sub_100026C30()
{
  return sub_10002530C(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_100026C5C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000836A0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = ((char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8->Class isa = (Class)[v3 dispatchQueue];
  (*(void (**)(NSObject *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v9 = sub_1000836C0();
  (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v2 = OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_waitForLocationGroup;
  uint64_t v10 = *(void **)&v3[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_waitForLocationGroup];
  if (v10)
  {
    uint64_t v11 = qword_1000A7A00;
    uint64_t v8 = v10;
    if (v11 == -1)
    {
LABEL_4:
      uint64_t v12 = sub_100082F00();
      sub_10001859C(v12, (uint64_t)qword_1000ACBA8);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v13 = sub_100082EE0();
      os_log_type_t v14 = sub_100083930();
      if (os_log_type_enabled(v13, v14))
      {
        double v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        uint64_t v24 = a1;
        uint64_t v25 = v16;
        *(_DWORD *)double v15 = 136446210;
        v23[1] = v15 + 4;
        swift_errorRetain();
        sub_100002874(&qword_1000A7F98);
        uint64_t v17 = sub_100083890();
        uint64_t v24 = sub_10006863C(v17, v18, &v25);
        sub_100083A00();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "GeneralMapsLocationUpdater: singleLocationUpdate END (error: %{public}s)", v15, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      *(void *)&v3[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_error] = a1;
      swift_errorRetain();
      swift_errorRelease();
      uint64_t v22 = *(void **)&v3[v2];
      *(void *)&v3[v2] = 0;

      dispatch_group_leave(v8);
      goto LABEL_12;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100082F00();
  sub_10001859C(v19, (uint64_t)qword_1000ACBA8);
  uint64_t v8 = sub_100082EE0();
  os_log_type_t v20 = sub_100083930();
  if (os_log_type_enabled(v8, v20))
  {
    os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v20, "GeneralMapsLocationUpdater: locationManager:didFailWithError: was called when not expected", v21, 2u);
    swift_slowDealloc();
  }
LABEL_12:
}

uint64_t sub_100027020()
{
  return _swift_deallocObject(v0, 24, 7);
}

char *sub_100027058()
{
  unint64_t result = *(char **)(v0 + 16);
  if (*(void *)&result[OBJC_IVAR____TtC17GeneralMapsWidget26GeneralMapsLocationUpdater_location]) {
    return (char *)[result considerMyNewLocation:];
  }
  return result;
}

id sub_10002707C()
{
  return [*(id *)(v0 + 16) stopUpdatingLocation];
}

void *initializeBufferWithCopyOfBuffer for GeneralMapsLocationUpdater.LocationInfo(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

void destroy for GeneralMapsLocationUpdater.LocationInfo(id *a1)
{
}

uint64_t assignWithCopy for GeneralMapsLocationUpdater.LocationInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for GeneralMapsLocationUpdater.LocationInfo(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneralMapsLocationUpdater.LocationInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneralMapsLocationUpdater.LocationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeneralMapsLocationUpdater.LocationInfo()
{
  return &type metadata for GeneralMapsLocationUpdater.LocationInfo;
}

uint64_t sub_100027204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_10002720C()
{
  sub_100029B6C(319, (unint64_t *)&unk_1000A82F8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100029B6C(319, &qword_1000A8898, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      sub_100029B6C(319, &qword_1000A88A0, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
      if (v2 <= 0x3F)
      {
        swift_checkMetadataState();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *sub_1000273AC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v59 = sub_100082F80();
  uint64_t v5 = *(void *)(v59 - 8);
  uint64_t v6 = 8;
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v59 - 8) + 64);
  }
  uint64_t v8 = sub_1000836F0();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  int v9 = *(_DWORD *)(v60 + 80);
  uint64_t v10 = v9 & 0xF8 | 7;
  uint64_t v62 = v7 + v10 + 1;
  unint64_t v11 = *(void *)(v60 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  unint64_t v63 = v11;
  unint64_t v12 = v11 + 1;
  uint64_t v13 = sub_100083040();
  int v14 = *(_DWORD *)(*(void *)(v13 - 8) + 80);
  uint64_t v15 = v14 & 0xF8 | 7;
  unint64_t v64 = v12;
  if (*(void *)(*(void *)(v13 - 8) + 64) > 8uLL) {
    uint64_t v6 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(_DWORD *)(v17 + 80);
  int v19 = v14 | v9 | *(_DWORD *)(v5 + 80);
  unsigned int v20 = v19 & 0xF8 | v18;
  int v21 = (v19 | *(_DWORD *)(v17 + 80)) & 0x100000;
  if (*(void *)(v17 + 64) + ((v6 + 1 + v18 + ((v12 + v15 + (v62 & ~v10)) & ~v15)) & ~v18) + 1 > 0x18
    || v21 != 0
    || v20 > 7)
  {
    uint64_t v24 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v25 = v24 + (((v20 | 7) + 16) & ~(unint64_t)(v20 | 7));
    swift_retain();
  }
  else
  {
    unsigned int v26 = a2[v7];
    unsigned int v27 = v26 - 2;
    if (v26 < 2)
    {
      uint64_t v29 = a1;
    }
    else
    {
      if (v7 <= 3) {
        uint64_t v28 = v7;
      }
      else {
        uint64_t v28 = 4;
      }
      uint64_t v29 = a1;
      switch(v28)
      {
        case 1:
          int v30 = *a2;
          if (v7 < 4) {
            goto LABEL_28;
          }
          goto LABEL_30;
        case 2:
          int v30 = *(unsigned __int16 *)a2;
          if (v7 >= 4) {
            goto LABEL_30;
          }
          goto LABEL_28;
        case 3:
          int v30 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v7 < 4) {
            goto LABEL_28;
          }
          goto LABEL_30;
        case 4:
          int v30 = *(_DWORD *)a2;
          if (v7 < 4) {
LABEL_28:
          }
            unsigned int v26 = (v30 | (v27 << (8 * v7))) + 2;
          else {
LABEL_30:
          }
            unsigned int v26 = v30 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v53 = v13;
    uint64_t v54 = *(void *)(v13 - 8);
    uint64_t v55 = *(void *)(v17 + 64);
    uint64_t v56 = v6 + 1;
    uint64_t v57 = *(void *)(v16 - 8);
    uint64_t v58 = v16;
    uint64_t v31 = ~v10;
    if (v26 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(v29, a2, v59);
      char v32 = 1;
    }
    else
    {
      void *v29 = *(void *)a2;
      swift_retain();
      char v32 = 0;
    }
    *((unsigned char *)v29 + v7) = v32;
    uint64_t v33 = (void *)(((unint64_t)v29 + v62) & v31);
    uint64_t v34 = (unsigned __int8 *)((unint64_t)&a2[v62] & v31);
    unsigned int v35 = v34[v63];
    unsigned int v36 = v35 - 2;
    if (v35 >= 2)
    {
      if (v63 <= 3) {
        uint64_t v37 = v63;
      }
      else {
        uint64_t v37 = 4;
      }
      switch(v37)
      {
        case 1:
          int v38 = *v34;
          goto LABEL_43;
        case 2:
          int v38 = *(unsigned __int16 *)v34;
          goto LABEL_43;
        case 3:
          int v38 = *(unsigned __int16 *)v34 | (v34[2] << 16);
          goto LABEL_43;
        case 4:
          int v38 = *(_DWORD *)v34;
LABEL_43:
          int v39 = (v38 | (v36 << (8 * v63))) + 2;
          unsigned int v35 = v38 + 2;
          if (v63 < 4) {
            unsigned int v35 = v39;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v40 = ~v15;
    if (v35 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v60 + 16))(v33, v34, v61);
      char v41 = 1;
    }
    else
    {
      *uint64_t v33 = *(void *)v34;
      swift_retain();
      char v41 = 0;
    }
    *((unsigned char *)v33 + v63) = v41;
    uint64_t v42 = (void *)(((unint64_t)v33 + v64 + v15) & v40);
    uint64_t v43 = (unsigned __int8 *)((unint64_t)&v34[v64 + v15] & v40);
    unsigned int v44 = v43[v6];
    unsigned int v45 = v44 - 2;
    if (v44 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v46 = v6;
      }
      else {
        uint64_t v46 = 4;
      }
      switch(v46)
      {
        case 1:
          int v47 = *v43;
          goto LABEL_57;
        case 2:
          int v47 = *(unsigned __int16 *)v43;
          goto LABEL_57;
        case 3:
          int v47 = *(unsigned __int16 *)v43 | (v43[2] << 16);
          goto LABEL_57;
        case 4:
          int v47 = *(_DWORD *)v43;
LABEL_57:
          int v48 = (v47 | (v45 << (8 * v6))) + 2;
          unsigned int v44 = v47 + 2;
          if (v6 < 4) {
            unsigned int v44 = v48;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v49 = ~v18;
    if (v44 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v54 + 16))(v42, v43, v53);
      char v50 = 1;
    }
    else
    {
      void *v42 = *(void *)v43;
      swift_retain();
      char v50 = 0;
    }
    *((unsigned char *)v42 + v6) = v50;
    unint64_t v51 = ((unint64_t)v42 + v56 + v18) & v49;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v57 + 16))(v51, (unint64_t)&v43[v56 + v18] & v49, v58);
    *(unsigned char *)(v51 + v55) = *(unsigned char *)(((unint64_t)&v43[v56 + v18] & v49) + v55);
    return a1;
  }
  return (void *)v25;
}

uint64_t sub_100027920(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_100082F80();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        if (v5 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        if (v5 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v5 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v9 = *(_DWORD *)a1;
        if (v5 < 4)
        {
LABEL_14:
          unsigned int v6 = (v9 | (v7 << (8 * v5))) + 2;
          break;
        }
LABEL_18:
        if (v9 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v6 == 1) {
LABEL_16:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  else {
LABEL_19:
  }
    swift_release();
  uint64_t v10 = sub_1000836F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  uint64_t v13 = (unsigned __int8 *)((unint64_t)&a1[v5 + 1 + v12] & ~v12);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  unsigned int v15 = v13[v14];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *v13;
        goto LABEL_32;
      case 2:
        int v18 = *(unsigned __int16 *)v13;
        goto LABEL_32;
      case 3:
        int v18 = *(unsigned __int16 *)v13 | (v13[2] << 16);
        goto LABEL_32;
      case 4:
        int v18 = *(_DWORD *)v13;
LABEL_32:
        int v19 = (v18 | (v16 << (8 * v14))) + 2;
        unsigned int v15 = v18 + 2;
        if (v14 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v11 + 8))(v13, v10);
  }
  else {
    swift_release();
  }
  uint64_t v20 = sub_100083040();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  uint64_t v23 = (unsigned __int8 *)((unint64_t)&v13[v14 + 1 + v22] & ~v22);
  if (*(void *)(v21 + 64) <= 8uLL) {
    uint64_t v24 = 8;
  }
  else {
    uint64_t v24 = *(void *)(v21 + 64);
  }
  unsigned int v25 = v23[v24];
  unsigned int v26 = v25 - 2;
  if (v25 >= 2)
  {
    if (v24 <= 3) {
      uint64_t v27 = v24;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        int v28 = *v23;
        goto LABEL_49;
      case 2:
        int v28 = *(unsigned __int16 *)v23;
        goto LABEL_49;
      case 3:
        int v28 = *(unsigned __int16 *)v23 | (v23[2] << 16);
        goto LABEL_49;
      case 4:
        int v28 = *(_DWORD *)v23;
LABEL_49:
        int v29 = (v28 | (v26 << (8 * v24))) + 2;
        unsigned int v25 = v28 + 2;
        if (v24 < 4) {
          unsigned int v25 = v29;
        }
        break;
      default:
        break;
    }
  }
  if (v25 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(v23, v20);
  }
  else {
    swift_release();
  }
  uint64_t v30 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v31 = *(uint64_t (**)(unint64_t))(v30 + 8);
  unint64_t v32 = (unint64_t)&v23[v24 + 1 + *(unsigned __int8 *)(v30 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);

  return v31(v32);
}

void *sub_100027D1C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_100082F80();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    *a1 = *(void *)a2;
    swift_retain();
    char v12 = 0;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = sub_1000836F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  uint64_t v16 = v7 + v15 + 1;
  uint64_t v17 = (void *)(((unint64_t)a1 + v16) & ~v15);
  int v18 = (unsigned __int8 *)((unint64_t)&a2[v16] & ~v15);
  if (*(void *)(v14 + 64) <= 8uLL) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = *(void *)(v14 + 64);
  }
  unsigned int v20 = v18[v19];
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *v18;
        goto LABEL_32;
      case 2:
        int v23 = *(unsigned __int16 *)v18;
        goto LABEL_32;
      case 3:
        int v23 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        goto LABEL_32;
      case 4:
        int v23 = *(_DWORD *)v18;
LABEL_32:
        int v24 = (v23 | (v21 << (8 * v19))) + 2;
        unsigned int v20 = v23 + 2;
        if (v19 < 4) {
          unsigned int v20 = v24;
        }
        break;
      default:
        break;
    }
  }
  if (v20 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v14 + 16))(v17, v18, v13);
    char v25 = 1;
  }
  else
  {
    *uint64_t v17 = *(void *)v18;
    swift_retain();
    char v25 = 0;
  }
  *((unsigned char *)v17 + v19) = v25;
  uint64_t v26 = v19 + 1;
  uint64_t v27 = sub_100083040();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(_DWORD *)(v28 + 80) & 0xF8 | 7;
  uint64_t v30 = (void *)(((unint64_t)v17 + v26 + v29) & ~v29);
  uint64_t v31 = (unsigned __int8 *)((unint64_t)&v18[v26 + v29] & ~v29);
  if (*(void *)(v28 + 64) <= 8uLL) {
    uint64_t v32 = 8;
  }
  else {
    uint64_t v32 = *(void *)(v28 + 64);
  }
  unsigned int v33 = v31[v32];
  unsigned int v34 = v33 - 2;
  if (v33 >= 2)
  {
    if (v32 <= 3) {
      uint64_t v35 = v32;
    }
    else {
      uint64_t v35 = 4;
    }
    switch(v35)
    {
      case 1:
        int v36 = *v31;
        goto LABEL_49;
      case 2:
        int v36 = *(unsigned __int16 *)v31;
        goto LABEL_49;
      case 3:
        int v36 = *(unsigned __int16 *)v31 | (v31[2] << 16);
        goto LABEL_49;
      case 4:
        int v36 = *(_DWORD *)v31;
LABEL_49:
        int v37 = (v36 | (v34 << (8 * v32))) + 2;
        unsigned int v33 = v36 + 2;
        if (v32 < 4) {
          unsigned int v33 = v37;
        }
        break;
      default:
        break;
    }
  }
  if (v33 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v28 + 16))(v30, v31, v27);
    char v38 = 1;
  }
  else
  {
    void *v30 = *(void *)v31;
    swift_retain();
    char v38 = 0;
  }
  *((unsigned char *)v30 + v32) = v38;
  uint64_t v39 = v32 + 1;
  uint64_t v40 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v41 = v40 + 16;
  uint64_t v42 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v43 = v39 + v42;
  unint64_t v44 = ((unint64_t)v30 + v43) & ~v42;
  unint64_t v45 = (unint64_t)&v31[v43] & ~v42;
  (*(void (**)(unint64_t, unint64_t))(v40 + 16))(v44, v45);
  *(unsigned char *)(v44 + *(void *)(v41 + 48)) = *(unsigned char *)(v45 + *(void *)(v41 + 48));
  return a1;
}

unsigned __int8 *sub_100028184(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_100082F80();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(sub_100082F80() - 8) + 64);
  uint64_t v18 = 8;
  if (v17 <= 8) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = v17;
  }
  uint64_t v20 = sub_1000836F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  uint64_t v23 = v19 + v22 + 1;
  int v24 = (unsigned __int8 *)((unint64_t)&a1[v23] & ~v22);
  char v25 = (unsigned __int8 *)((unint64_t)&a2[v23] & ~v22);
  if (*(void *)(v21 + 64) > 8uLL) {
    uint64_t v18 = *(void *)(v21 + 64);
  }
  if (v24 != v25)
  {
    uint64_t v26 = v20;
    unsigned int v27 = v24[v18];
    unsigned int v28 = v27 - 2;
    if (v27 >= 2)
    {
      if (v18 <= 3) {
        uint64_t v29 = v18;
      }
      else {
        uint64_t v29 = 4;
      }
      switch(v29)
      {
        case 1:
          int v30 = *v24;
          goto LABEL_52;
        case 2:
          int v30 = *(unsigned __int16 *)v24;
          goto LABEL_52;
        case 3:
          int v30 = *(unsigned __int16 *)v24 | (v24[2] << 16);
          goto LABEL_52;
        case 4:
          int v30 = *(_DWORD *)v24;
LABEL_52:
          int v31 = (v30 | (v28 << (8 * v18))) + 2;
          unsigned int v27 = v30 + 2;
          if (v18 < 4) {
            unsigned int v27 = v31;
          }
          break;
        default:
          break;
      }
    }
    if (v27 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(v24, v20);
    }
    else {
      swift_release();
    }
    unsigned int v32 = v25[v18];
    unsigned int v33 = v32 - 2;
    if (v32 >= 2)
    {
      if (v18 <= 3) {
        uint64_t v34 = v18;
      }
      else {
        uint64_t v34 = 4;
      }
      switch(v34)
      {
        case 1:
          int v35 = *v25;
          goto LABEL_66;
        case 2:
          int v35 = *(unsigned __int16 *)v25;
          goto LABEL_66;
        case 3:
          int v35 = *(unsigned __int16 *)v25 | (v25[2] << 16);
          goto LABEL_66;
        case 4:
          int v35 = *(_DWORD *)v25;
LABEL_66:
          int v36 = (v35 | (v33 << (8 * v18))) + 2;
          unsigned int v32 = v35 + 2;
          if (v18 < 4) {
            unsigned int v32 = v36;
          }
          break;
        default:
          break;
      }
    }
    if (v32 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v21 + 16))(v24, v25, v26);
      v24[v18] = 1;
    }
    else
    {
      *(void *)int v24 = *(void *)v25;
      v24[v18] = 0;
      swift_retain();
    }
  }
  uint64_t v37 = sub_100083040();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(_DWORD *)(v38 + 80) & 0xF8 | 7;
  uint64_t v40 = v18 + v39 + 1;
  uint64_t v41 = (unsigned __int8 *)((unint64_t)&v24[v40] & ~v39);
  uint64_t v42 = (unsigned __int8 *)((unint64_t)&v25[v40] & ~v39);
  if (*(void *)(v38 + 64) <= 8uLL) {
    uint64_t v43 = 8;
  }
  else {
    uint64_t v43 = *(void *)(v38 + 64);
  }
  if (v41 != v42)
  {
    uint64_t v44 = v37;
    unsigned int v45 = v41[v43];
    unsigned int v46 = v45 - 2;
    if (v45 >= 2)
    {
      if (v43 <= 3) {
        uint64_t v47 = v43;
      }
      else {
        uint64_t v47 = 4;
      }
      switch(v47)
      {
        case 1:
          int v48 = *v41;
          goto LABEL_84;
        case 2:
          int v48 = *(unsigned __int16 *)v41;
          goto LABEL_84;
        case 3:
          int v48 = *(unsigned __int16 *)v41 | (v41[2] << 16);
          goto LABEL_84;
        case 4:
          int v48 = *(_DWORD *)v41;
LABEL_84:
          int v49 = (v48 | (v46 << (8 * v43))) + 2;
          unsigned int v45 = v48 + 2;
          if (v43 < 4) {
            unsigned int v45 = v49;
          }
          break;
        default:
          break;
      }
    }
    if (v45 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v38 + 8))(v41, v37);
    }
    else {
      swift_release();
    }
    unsigned int v50 = v42[v43];
    unsigned int v51 = v50 - 2;
    if (v50 >= 2)
    {
      if (v43 <= 3) {
        uint64_t v52 = v43;
      }
      else {
        uint64_t v52 = 4;
      }
      switch(v52)
      {
        case 1:
          int v53 = *v42;
          goto LABEL_98;
        case 2:
          int v53 = *(unsigned __int16 *)v42;
          goto LABEL_98;
        case 3:
          int v53 = *(unsigned __int16 *)v42 | (v42[2] << 16);
          goto LABEL_98;
        case 4:
          int v53 = *(_DWORD *)v42;
LABEL_98:
          int v54 = (v53 | (v51 << (8 * v43))) + 2;
          unsigned int v50 = v53 + 2;
          if (v43 < 4) {
            unsigned int v50 = v54;
          }
          break;
        default:
          break;
      }
    }
    if (v50 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v38 + 16))(v41, v42, v44);
      v41[v43] = 1;
    }
    else
    {
      *(void *)uint64_t v41 = *(void *)v42;
      v41[v43] = 0;
      swift_retain();
    }
  }
  uint64_t v55 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v56 = v55 + 24;
  uint64_t v57 = *(unsigned __int8 *)(v55 + 80);
  uint64_t v58 = v43 + v57 + 1;
  unint64_t v59 = (unint64_t)&v41[v58] & ~v57;
  unint64_t v60 = (unint64_t)&v42[v58] & ~v57;
  (*(void (**)(unint64_t, unint64_t))(v55 + 24))(v59, v60);
  *(unsigned char *)(*(void *)(v56 + 40) + v59) = *(unsigned char *)(*(void *)(v56 + 40) + v60);
  return a1;
}

void *sub_10002888C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_100082F80();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    char v12 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = sub_1000836F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  uint64_t v16 = v7 + v15 + 1;
  unint64_t v17 = (void *)(((unint64_t)a1 + v16) & ~v15);
  uint64_t v18 = (unsigned __int8 *)((unint64_t)&a2[v16] & ~v15);
  if (*(void *)(v14 + 64) <= 8uLL) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = *(void *)(v14 + 64);
  }
  unsigned int v20 = v18[v19];
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *v18;
        goto LABEL_32;
      case 2:
        int v23 = *(unsigned __int16 *)v18;
        goto LABEL_32;
      case 3:
        int v23 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        goto LABEL_32;
      case 4:
        int v23 = *(_DWORD *)v18;
LABEL_32:
        int v24 = (v23 | (v21 << (8 * v19))) + 2;
        unsigned int v20 = v23 + 2;
        if (v19 < 4) {
          unsigned int v20 = v24;
        }
        break;
      default:
        break;
    }
  }
  if (v20 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v14 + 32))(v17, v18, v13);
    char v25 = 1;
  }
  else
  {
    char v25 = 0;
    *unint64_t v17 = *(void *)v18;
  }
  *((unsigned char *)v17 + v19) = v25;
  uint64_t v26 = v19 + 1;
  uint64_t v27 = sub_100083040();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(_DWORD *)(v28 + 80) & 0xF8 | 7;
  int v30 = (void *)(((unint64_t)v17 + v26 + v29) & ~v29);
  int v31 = (unsigned __int8 *)((unint64_t)&v18[v26 + v29] & ~v29);
  if (*(void *)(v28 + 64) <= 8uLL) {
    uint64_t v32 = 8;
  }
  else {
    uint64_t v32 = *(void *)(v28 + 64);
  }
  unsigned int v33 = v31[v32];
  unsigned int v34 = v33 - 2;
  if (v33 >= 2)
  {
    if (v32 <= 3) {
      uint64_t v35 = v32;
    }
    else {
      uint64_t v35 = 4;
    }
    switch(v35)
    {
      case 1:
        int v36 = *v31;
        goto LABEL_49;
      case 2:
        int v36 = *(unsigned __int16 *)v31;
        goto LABEL_49;
      case 3:
        int v36 = *(unsigned __int16 *)v31 | (v31[2] << 16);
        goto LABEL_49;
      case 4:
        int v36 = *(_DWORD *)v31;
LABEL_49:
        int v37 = (v36 | (v34 << (8 * v32))) + 2;
        unsigned int v33 = v36 + 2;
        if (v32 < 4) {
          unsigned int v33 = v37;
        }
        break;
      default:
        break;
    }
  }
  if (v33 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v28 + 32))(v30, v31, v27);
    char v38 = 1;
  }
  else
  {
    char v38 = 0;
    void *v30 = *(void *)v31;
  }
  *((unsigned char *)v30 + v32) = v38;
  uint64_t v39 = v32 + 1;
  uint64_t v40 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v41 = v40 + 32;
  uint64_t v42 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v43 = v39 + v42;
  unint64_t v44 = ((unint64_t)v30 + v43) & ~v42;
  unint64_t v45 = (unint64_t)&v31[v43] & ~v42;
  (*(void (**)(unint64_t, unint64_t))(v40 + 32))(v44, v45);
  *(unsigned char *)(v44 + *(void *)(v41 + 32)) = *(unsigned char *)(v45 + *(void *)(v41 + 32));
  return a1;
}

unsigned __int8 *sub_100028CE8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_100082F80();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(sub_100082F80() - 8) + 64);
  uint64_t v19 = 8;
  if (v18 <= 8) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = v18;
  }
  uint64_t v21 = sub_1000836F0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  uint64_t v24 = v20 + v23 + 1;
  char v25 = (unsigned __int8 *)((unint64_t)&a1[v24] & ~v23);
  uint64_t v26 = (unsigned __int8 *)((unint64_t)&a2[v24] & ~v23);
  if (*(void *)(v22 + 64) > 8uLL) {
    uint64_t v19 = *(void *)(v22 + 64);
  }
  if (v25 != v26)
  {
    uint64_t v27 = v21;
    unsigned int v28 = v25[v19];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v19 <= 3) {
        uint64_t v30 = v19;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *v25;
          goto LABEL_53;
        case 2:
          int v31 = *(unsigned __int16 *)v25;
          goto LABEL_53;
        case 3:
          int v31 = *(unsigned __int16 *)v25 | (v25[2] << 16);
          goto LABEL_53;
        case 4:
          int v31 = *(_DWORD *)v25;
LABEL_53:
          int v32 = (v31 | (v29 << (8 * v19))) + 2;
          unsigned int v28 = v31 + 2;
          if (v19 < 4) {
            unsigned int v28 = v32;
          }
          break;
        default:
          break;
      }
    }
    if (v28 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v22 + 8))(v25, v21);
    }
    else {
      swift_release();
    }
    unsigned int v33 = v26[v19];
    unsigned int v34 = v33 - 2;
    if (v33 >= 2)
    {
      if (v19 <= 3) {
        uint64_t v35 = v19;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *v26;
          goto LABEL_67;
        case 2:
          int v36 = *(unsigned __int16 *)v26;
          goto LABEL_67;
        case 3:
          int v36 = *(unsigned __int16 *)v26 | (v26[2] << 16);
          goto LABEL_67;
        case 4:
          int v36 = *(_DWORD *)v26;
LABEL_67:
          int v37 = (v36 | (v34 << (8 * v19))) + 2;
          unsigned int v33 = v36 + 2;
          if (v19 < 4) {
            unsigned int v33 = v37;
          }
          break;
        default:
          break;
      }
    }
    if (v33 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v22 + 32))(v25, v26, v27);
      char v38 = 1;
    }
    else
    {
      char v38 = 0;
      *(void *)char v25 = *(void *)v26;
    }
    v25[v19] = v38;
  }
  uint64_t v39 = sub_100083040();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(_DWORD *)(v40 + 80) & 0xF8 | 7;
  uint64_t v42 = v19 + v41 + 1;
  uint64_t v43 = (unsigned __int8 *)((unint64_t)&v25[v42] & ~v41);
  unint64_t v44 = (unsigned __int8 *)((unint64_t)&v26[v42] & ~v41);
  if (*(void *)(v40 + 64) <= 8uLL) {
    uint64_t v45 = 8;
  }
  else {
    uint64_t v45 = *(void *)(v40 + 64);
  }
  if (v43 != v44)
  {
    uint64_t v46 = v39;
    unsigned int v47 = v43[v45];
    unsigned int v48 = v47 - 2;
    if (v47 >= 2)
    {
      if (v45 <= 3) {
        uint64_t v49 = v45;
      }
      else {
        uint64_t v49 = 4;
      }
      switch(v49)
      {
        case 1:
          int v50 = *v43;
          goto LABEL_86;
        case 2:
          int v50 = *(unsigned __int16 *)v43;
          goto LABEL_86;
        case 3:
          int v50 = *(unsigned __int16 *)v43 | (v43[2] << 16);
          goto LABEL_86;
        case 4:
          int v50 = *(_DWORD *)v43;
LABEL_86:
          int v51 = (v50 | (v48 << (8 * v45))) + 2;
          unsigned int v47 = v50 + 2;
          if (v45 < 4) {
            unsigned int v47 = v51;
          }
          break;
        default:
          break;
      }
    }
    if (v47 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v40 + 8))(v43, v39);
    }
    else {
      swift_release();
    }
    unsigned int v52 = v44[v45];
    unsigned int v53 = v52 - 2;
    if (v52 >= 2)
    {
      if (v45 <= 3) {
        uint64_t v54 = v45;
      }
      else {
        uint64_t v54 = 4;
      }
      switch(v54)
      {
        case 1:
          int v55 = *v44;
          goto LABEL_100;
        case 2:
          int v55 = *(unsigned __int16 *)v44;
          goto LABEL_100;
        case 3:
          int v55 = *(unsigned __int16 *)v44 | (v44[2] << 16);
          goto LABEL_100;
        case 4:
          int v55 = *(_DWORD *)v44;
LABEL_100:
          int v56 = (v55 | (v53 << (8 * v45))) + 2;
          unsigned int v52 = v55 + 2;
          if (v45 < 4) {
            unsigned int v52 = v56;
          }
          break;
        default:
          break;
      }
    }
    if (v52 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v40 + 32))(v43, v44, v46);
      char v57 = 1;
    }
    else
    {
      char v57 = 0;
      *(void *)uint64_t v43 = *(void *)v44;
    }
    v43[v45] = v57;
  }
  uint64_t v58 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v59 = v58 + 40;
  uint64_t v60 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v61 = v45 + v60 + 1;
  unint64_t v62 = (unint64_t)&v43[v61] & ~v60;
  unint64_t v63 = (unint64_t)&v44[v61] & ~v60;
  (*(void (**)(unint64_t, unint64_t))(v58 + 40))(v62, v63);
  *(unsigned char *)(*(void *)(v59 + 24) + v62) = *(unsigned char *)(*(void *)(v59 + 24) + v63);
  return a1;
}

uint64_t sub_1000293E4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_100082F80() - 8) + 64);
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(sub_1000836F0() - 8);
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = *(void *)(v8 + 64);
  }
  uint64_t v10 = *(void *)(sub_100083040() - 8);
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = *(void *)(v10 + 64);
  }
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  int v14 = *(_DWORD *)(v10 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  if (v13 <= 0xFE) {
    unsigned int v16 = 254;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v12 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v18 = v7 + v17 + 1;
  uint64_t v19 = v9 + 1;
  uint64_t v20 = v14 & 0xF8 | 7;
  uint64_t v21 = v11 + v15 + 1;
  if (a2 <= v16) {
    goto LABEL_34;
  }
  uint64_t v22 = *(void *)(v12 + 64) + ((v21 + ((v19 + v20 + (v18 & ~v17)) & ~v20)) & ~v15) + 1;
  char v23 = 8 * v22;
  if (v22 <= 3)
  {
    unsigned int v26 = ((a2 - v16 + ~(-1 << v23)) >> v23) + 1;
    if (HIWORD(v26))
    {
      int v24 = *(_DWORD *)((char *)a1 + v22);
      if (!v24) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v26 > 0xFF)
    {
      int v24 = *(unsigned __int16 *)((char *)a1 + v22);
      if (!*(unsigned __int16 *)((char *)a1 + v22)) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v26 < 2)
    {
LABEL_34:
      if (v13 > 0xFE)
      {
        int v31 = *(uint64_t (**)(unint64_t))(v12 + 48);
        return v31((v21 + (((((unint64_t)a1 + v18) & ~v17) + v19 + v20) & ~v20)) & ~v15);
      }
      else
      {
        unsigned int v30 = *((unsigned __int8 *)a1 + v7);
        if (v30 >= 2) {
          return (v30 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v24 = *((unsigned __int8 *)a1 + v22);
  if (!*((unsigned char *)a1 + v22)) {
    goto LABEL_34;
  }
LABEL_24:
  int v27 = (v24 - 1) << v23;
  if (v22 > 3) {
    int v27 = 0;
  }
  if (v22)
  {
    if (v22 <= 3) {
      int v28 = v22;
    }
    else {
      int v28 = 4;
    }
    switch(v28)
    {
      case 2:
        int v29 = *a1;
        break;
      case 3:
        int v29 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v29 = *(_DWORD *)a1;
        break;
      default:
        int v29 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v29 = 0;
  }
  return v16 + (v29 | v27) + 1;
}

void sub_100029708(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(sub_100082F80() - 8) + 64);
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(sub_1000836F0() - 8);
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = *(void *)(v10 + 64);
  }
  uint64_t v12 = *(void *)(sub_100083040() - 8);
  if (*(void *)(v12 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v12 + 64);
  }
  uint64_t v14 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v15 = *(_DWORD *)(v14 + 84);
  int v16 = *(_DWORD *)(v12 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  if (v15 <= 0xFE) {
    unsigned int v18 = 254;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v14 + 84);
  }
  size_t v19 = v9 + 1;
  uint64_t v20 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v21 = v9 + 1 + v20;
  uint64_t v22 = v16 & 0xF8 | 7;
  uint64_t v23 = v13 + v17 + 1;
  size_t v24 = *(void *)(v14 + 64) + ((v23 + ((v11 + 1 + v22 + (v21 & ~v20)) & ~v22)) & ~v17) + 1;
  if (a3 <= v18)
  {
    int v25 = 0;
  }
  else if (v24 <= 3)
  {
    unsigned int v29 = ((a3 - v18 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
    if (HIWORD(v29))
    {
      int v25 = 4;
    }
    else if (v29 >= 0x100)
    {
      int v25 = 2;
    }
    else
    {
      int v25 = v29 > 1;
    }
  }
  else
  {
    int v25 = 1;
  }
  if (v18 < a2)
  {
    unsigned int v26 = ~v18 + a2;
    if (v24 < 4)
    {
      int v27 = (v26 >> (8 * v24)) + 1;
      if (*(_DWORD *)(v14 + 64)
         + ((v23 + ((v11 + 1 + v22 + (v21 & ~v20)) & ~v22)) & ~v17) != -1)
      {
        int v30 = v26 & ~(-1 << (8 * v24));
        bzero(a1, v24);
        if (v24 == 3)
        {
          *(_WORD *)a1 = v30;
          a1[2] = BYTE2(v30);
        }
        else if (v24 == 2)
        {
          *(_WORD *)a1 = v30;
        }
        else
        {
          *a1 = v30;
        }
      }
    }
    else
    {
      bzero(a1, v24);
      *(_DWORD *)a1 = v26;
      int v27 = 1;
    }
    switch(v25)
    {
      case 1:
        a1[v24] = v27;
        return;
      case 2:
        *(_WORD *)&a1[v24] = v27;
        return;
      case 3:
        goto LABEL_61;
      case 4:
        *(_DWORD *)&a1[v24] = v27;
        return;
      default:
        return;
    }
  }
  uint64_t v28 = ~v17;
  switch(v25)
  {
    case 1:
      a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_61:
      __break(1u);
      JUMPOUT(0x100029B1CLL);
    case 4:
      *(_DWORD *)&a1[v24] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v15 > 0xFE)
        {
          int v31 = *(void (**)(unint64_t, uint64_t))(v14 + 56);
          v31((v23 + ((((unint64_t)&a1[v21] & ~v20) + v11 + 1 + v22) & ~v22)) & v28, a2);
        }
        else if (a2 > 0xFE)
        {
          if (v19 <= 3) {
            int v32 = ~(-1 << (8 * v19));
          }
          else {
            int v32 = -1;
          }
          if (v9 != -1)
          {
            int v33 = v32 & (a2 - 255);
            if (v19 <= 3) {
              int v34 = v9 + 1;
            }
            else {
              int v34 = 4;
            }
            bzero(a1, v19);
            switch(v34)
            {
              case 2:
                *(_WORD *)a1 = v33;
                break;
              case 3:
                *(_WORD *)a1 = v33;
                a1[2] = BYTE2(v33);
                break;
              case 4:
                *(_DWORD *)a1 = v33;
                break;
              default:
                *a1 = v33;
                break;
            }
          }
        }
        else
        {
          a1[v9] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for MapSnapshotImage()
{
  return sub_10002B2AC();
}

void sub_100029B6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100082F90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100029BC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100029C04(char a1)
{
  if ((a1 & 0xFE) == 2) {
    return 0;
  }
  if (a1)
  {
    if (qword_1000A7A10 != -1) {
      swift_once();
    }
    v2.super.Class isa = (Class)qword_1000ACBD0;
    v3._countAndFlagsBits = 0xD000000000000030;
    v6._countAndFlagsBits = 0x80000001000958F0;
    v3._object = (void *)0x8000000100095890;
    v5._object = (void *)0x80000001000958D0;
    v4.value._countAndFlagsBits = 0;
    v4.value._object = 0;
    v5._countAndFlagsBits = 0xD000000000000017;
  }
  else
  {
    if (qword_1000A7A10 != -1) {
      swift_once();
    }
    v2.super.Class isa = (Class)qword_1000ACBD0;
    v3._countAndFlagsBits = 0xD000000000000033;
    v6._countAndFlagsBits = 0x8000000100095840;
    v3._object = (void *)0x8000000100095800;
    v4.value._countAndFlagsBits = 0;
    v4.value._object = 0;
    v5._countAndFlagsBits = 7364941;
    v5._object = (void *)0xE300000000000000;
  }
  return sub_100082D70(v3, v4, v2, v5, v6);
}

uint64_t sub_100029D4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_1000835D0();
  a2[1] = v5;
  uint64_t v6 = sub_100002874(&qword_1000A88A8);
  return sub_100029DA0(v2, *(void *)(a1 + 16), *(void *)(a1 + 24), (uint64_t)a2 + *(int *)(v6 + 44));
}

uint64_t sub_100029DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v137 = a4;
  uint64_t v138 = type metadata accessor for PlaceholderBackgroundView(0);
  uint64_t v7 = __chkstk_darwin(v138);
  uint64_t v128 = (uint64_t *)((char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v129 = (uint64_t)&v101 - v9;
  uint64_t v135 = sub_100002874(&qword_1000A88B0);
  __chkstk_darwin(v135);
  uint64_t v136 = (uint64_t)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002874(&qword_1000A86E8);
  __chkstk_darwin(v11 - 8);
  uint64_t v103 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100002874(&qword_1000A86F8);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v118 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100002874(&qword_1000A88B8);
  __chkstk_darwin(v104);
  uint64_t v107 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100002874(&qword_1000A88C0);
  __chkstk_darwin(v105);
  uint64_t v106 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100002874(&qword_1000A88C8);
  __chkstk_darwin(v111);
  uint64_t v110 = (uint64_t)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100002874(&qword_1000A88D0);
  uint64_t v17 = __chkstk_darwin(v134);
  double v113 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v112 = (char *)&v101 - v20;
  __chkstk_darwin(v19);
  uint64_t v114 = (uint64_t)&v101 - v21;
  uint64_t v119 = sub_100082F80();
  uint64_t v122 = *(void *)(v119 - 8);
  uint64_t v22 = __chkstk_darwin(v119);
  unsigned int v117 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  double v115 = (char *)&v101 - v25;
  __chkstk_darwin(v24);
  uint64_t v116 = (uint64_t)&v101 - v26;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v121 = sub_1000839F0();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v124 = (char *)&v101 - v27;
  uint64_t v28 = sub_1000836F0();
  uint64_t v131 = *(void **)(v28 - 8);
  uint64_t v132 = (void (*)(void, void, void))v28;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v130 = (char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  int v32 = (char *)&v101 - v31;
  uint64_t v33 = sub_100083040();
  uint64_t v123 = *(void *)(v33 - 8);
  uint64_t v34 = __chkstk_darwin(v33);
  int v36 = (char *)&v101 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  char v38 = (char *)&v101 - v37;
  uint64_t v126 = a3;
  uint64_t v127 = a2;
  uint64_t v39 = type metadata accessor for MapSnapshotImage();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v101 - v42;
  uint64_t v102 = *(int *)(v41 + 48);
  LODWORD(a3) = *(unsigned __int8 *)(a1 + v102);
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v133 = a1;
  v44((char *)&v101 - v42, a1, v39);
  if (a3 == 2)
  {
    sub_10006854C((uint64_t)v38);
    sub_100083030();
    sub_10002B264(&qword_1000A8910, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v45 = sub_100083A30();
    uint64_t v46 = *(void (**)(char *, uint64_t))(v123 + 8);
    v46(v36, v33);
    v46(v38, v33);
  }
  else
  {
    char v45 = 0;
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v39);
  uint64_t v47 = v133;
  sub_100068514((uint64_t)v32);
  unsigned int v48 = v130;
  sub_1000836E0();
  LODWORD(v123) = sub_1000836D0();
  uint64_t v49 = (void (*)(void, void))v131[1];
  int v50 = v48;
  int v51 = v132;
  v49(v50, v132);
  v49(v32, v51);
  if (v45) {
    goto LABEL_13;
  }
  unsigned int v52 = v124;
  (*(void (**)(uint64_t, uint64_t))(v126 + 24))(v127, v126);
  uint64_t v53 = AssociatedTypeWitness;
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v52, v121);
LABEL_13:
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v80 = (uint64_t)v128;
    uint64_t *v128 = KeyPath;
    sub_100002874(&qword_1000A8498);
    swift_storeEnumTagMultiPayload();
    uint64_t v81 = v129;
    sub_10002AD88(v80, v129);
    sub_10002ADEC(v81, v136);
    swift_storeEnumTagMultiPayload();
    sub_10002AE50();
    sub_10002B264(&qword_1000A8908, (void (*)(uint64_t))type metadata accessor for PlaceholderBackgroundView);
    sub_100083230();
    return sub_10002B08C(v81);
  }
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  int v56 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v53, AssociatedConformanceWitness);
  uint64_t v58 = v57;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
  if (v56 == (void *)1) {
    goto LABEL_13;
  }
  uint64_t v59 = v116;
  sub_1000681A4(v116);
  uint64_t v60 = v122;
  uint64_t v61 = v115;
  uint64_t v62 = v119;
  uint64_t v132 = *(void (**)(void, void, void))(v122 + 16);
  v132(v115, v59, v119);
  int v63 = (*(uint64_t (**)(char *, uint64_t))(v60 + 88))(v61, v62);
  unint64_t v64 = v56;
  if (v63 == enum case for ColorScheme.light(_:) || (unint64_t v64 = v58, v63 == enum case for ColorScheme.dark(_:)))
  {
    id v65 = v64;

    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
    v66(v59, v62);
    uint64_t v67 = (uint64_t)v117;
    if (!v64) {
      goto LABEL_13;
    }
    uint64_t v130 = (char *)v66;
    uint64_t v68 = v65;
    sub_100083500();
    uint64_t v69 = (uint64_t)v103;
    sub_100083710();
    uint64_t v70 = sub_100083720();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 0, 1, v70);
    sub_100083550();
    swift_release();
    sub_100019138(v69, &qword_1000A86E8);
    uint64_t v131 = v68;
    if (v123)
    {
      uint64_t v71 = v67;
      uint64_t v72 = v67;
      uint64_t v73 = v119;
      (*(void (**)(uint64_t, void, uint64_t))(v122 + 104))(v71, enum case for ColorScheme.dark(_:), v119);
      double v74 = 1.0;
      unint64_t v75 = 0xBFB999999999999ALL;
      uint64_t v76 = v111;
      uint64_t v77 = v109;
      uint64_t v78 = v104;
    }
    else
    {
      sub_1000681A4(v67);
      unint64_t v75 = 0;
      double v74 = 0.0;
      uint64_t v76 = v111;
      uint64_t v77 = v109;
      uint64_t v78 = v104;
      uint64_t v72 = v67;
      uint64_t v73 = v119;
    }
    uint64_t v83 = swift_getKeyPath();
    uint64_t v84 = (uint64_t)v107;
    uint64_t v85 = (uint64_t *)&v107[*(int *)(v78 + 36)];
    uint64_t v86 = sub_100002874(&qword_1000A8900);
    v132((char *)v85 + *(int *)(v86 + 28), v72, v73);
    *uint64_t v85 = v83;
    uint64_t v87 = v108;
    int v88 = v118;
    (*(void (**)(uint64_t, char *, uint64_t))(v108 + 16))(v84, v118, v77);
    ((void (*)(uint64_t, uint64_t))v130)(v72, v73);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v77);
    uint64_t v89 = v106;
    sub_10001A720(v84, v106, &qword_1000A88B8);
    *(double *)(v89 + *(int *)(v105 + 36)) = v74;
    sub_100019138(v84, &qword_1000A88B8);
    uint64_t v90 = v110;
    sub_10001A720(v89, v110, &qword_1000A88C0);
    *(void *)(v90 + *(int *)(v76 + 36)) = v75;
    sub_100019138(v89, &qword_1000A88C0);
    uint64_t v91 = v102;
    sub_10002AF58(&qword_1000A88E0, &qword_1000A88C8, (void (*)(void))sub_10002AF28);
    uint64_t v92 = (uint64_t)v113;
    sub_100083470();
    swift_bridgeObjectRelease();
    sub_100019138(v90, &qword_1000A88C8);
    LOBYTE(v91) = *(unsigned char *)(v47 + v91);
    uint64_t v139 = sub_100029C04(v91);
    uint64_t v140 = v93;
    sub_100023C14();
    uint64_t v94 = sub_1000833B0();
    uint64_t v96 = v95;
    char v98 = v97 & 1;
    sub_100029C04(v91);
    swift_bridgeObjectRelease();
    uint64_t v99 = (uint64_t)v112;
    sub_100083010();
    sub_100023DA0(v94, v96, v98);
    swift_bridgeObjectRelease();
    sub_100019138(v92, &qword_1000A88D0);
    uint64_t v100 = v114;
    sub_10002B1FC(v99, v114);
    sub_10001A720(v100, v136, &qword_1000A88D0);
    swift_storeEnumTagMultiPayload();
    sub_10002AE50();
    sub_10002B264(&qword_1000A8908, (void (*)(uint64_t))type metadata accessor for PlaceholderBackgroundView);
    sub_100083230();

    return sub_100019138(v100, &qword_1000A88D0);
  }
  else
  {
    uint64_t result = sub_100083B70();
    __break(1u);
  }
  return result;
}

uint64_t sub_10002AD88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceholderBackgroundView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002ADEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceholderBackgroundView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10002AE50()
{
  unint64_t result = qword_1000A88D8;
  if (!qword_1000A88D8)
  {
    sub_1000028B8(&qword_1000A88D0);
    sub_10002AF58(&qword_1000A88E0, &qword_1000A88C8, (void (*)(void))sub_10002AF28);
    sub_10002B264(&qword_1000A86E0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A88D8);
  }
  return result;
}

uint64_t sub_10002AF28()
{
  return sub_10002AF58(&qword_1000A88E8, &qword_1000A88C0, (void (*)(void))sub_10002AFD4);
}

uint64_t sub_10002AF58(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002AFD4()
{
  unint64_t result = qword_1000A88F0;
  if (!qword_1000A88F0)
  {
    sub_1000028B8(&qword_1000A88B8);
    swift_getOpaqueTypeConformance2();
    sub_100023D5C(&qword_1000A88F8, &qword_1000A8900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A88F0);
  }
  return result;
}

uint64_t sub_10002B08C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlaceholderBackgroundView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002B0E8()
{
  return sub_100083060();
}

uint64_t sub_10002B10C()
{
  return sub_100083060();
}

uint64_t sub_10002B130(uint64_t a1)
{
  uint64_t v2 = sub_100082F80();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_100083070();
}

uint64_t sub_10002B1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000A88D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002B264(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002B2AC()
{
  return swift_getGenericMetadata();
}

uint64_t getEnumTagSinglePayload for MapSnapshotImageType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10002B38CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MapSnapshotImageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10002B474);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10002B49C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_10002B4B8(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapSnapshotImageType()
{
  return &type metadata for MapSnapshotImageType;
}

uint64_t sub_10002B4E0()
{
  return sub_100023D5C(&qword_1000A8918, &qword_1000A8920);
}

uint64_t sub_10002B51C(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  int v4 = (uint64_t *)TupleTypeMetadata;
  unsigned int v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    unsigned int v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        _OWORD *v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_100083600();
}

uint64_t sub_10002B6E0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v33 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A89C8);
  __chkstk_darwin(v3 - 8);
  int v32 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000028B8(&qword_1000A89D0);
  uint64_t v27 = *(void *)(a1 + 16);
  sub_100083020();
  swift_getTupleTypeMetadata2();
  sub_1000835F0();
  v26[1] = swift_getWitnessTable();
  uint64_t v5 = sub_100083590();
  uint64_t v29 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v26 - v6;
  uint64_t v8 = sub_100083020();
  uint64_t v31 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v26 - v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  char v38 = &protocol witness table for _PaddingLayout;
  v26[2] = swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for ContentSizeCategoryLimiter();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v26 - v16;
  uint64_t v18 = *(void *)(v28 + 24);
  uint64_t v34 = v27;
  uint64_t v35 = v18;
  uint64_t v36 = v30;
  sub_1000835D0();
  sub_100083580();
  if (qword_1000A79B8 != -1) {
    swift_once();
  }
  sub_100083480();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v5);
  uint64_t v19 = enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
  uint64_t v20 = sub_1000831B0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v32, v19, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v22, 0, 1, v20);
  sub_10002C74C(v22, v8, (uint64_t)v15);
  sub_100019138(v22, &qword_1000A89C8);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
  swift_getWitnessTable();
  int v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v23(v17, v15, v11);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v15, v11);
  v23(v33, v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v24)(v17, v11);
}

uint64_t sub_10002BBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v88 = a3;
  uint64_t v91 = a4;
  uint64_t v87 = a2;
  uint64_t v5 = sub_100083020();
  uint64_t v92 = *(void *)(v5 - 8);
  uint64_t v93 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v90 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v89 = (char *)&v69 - v8;
  uint64_t v75 = sub_100002874(&qword_1000A89E8);
  __chkstk_darwin(v75);
  uint64_t v77 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100002874(&qword_1000A89F0);
  uint64_t v10 = __chkstk_darwin(v83);
  uint64_t v76 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v78 = (uint64_t)&v69 - v12;
  uint64_t v81 = sub_100002874(&qword_1000A89F8);
  __chkstk_darwin(v81);
  uint64_t v82 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100083290();
  __chkstk_darwin(v14 - 8);
  double v74 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100082F80();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100002874(&qword_1000A8A00);
  uint64_t v17 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100002874(&qword_1000A8A08);
  __chkstk_darwin(v69);
  uint64_t v70 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100002874(&qword_1000A8A10);
  __chkstk_darwin(v79);
  uint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000836F0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v69 - v28;
  uint64_t v84 = sub_100002874(&qword_1000A89D0);
  uint64_t v30 = __chkstk_darwin(v84);
  uint64_t v85 = (uint64_t)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v69 - v32;
  uint64_t v86 = a1;
  sub_100068514((uint64_t)v29);
  sub_1000836E0();
  LOBYTE(a1) = sub_1000836D0();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v24 + 8);
  v34(v27, v23);
  v34(v29, v23);
  if (a1)
  {
    id v35 = [self systemBackgroundColor];
    v97[0] = sub_1000834F0();
    sub_100082F70();
    swift_release();
    uint64_t v36 = v72;
    uint64_t v37 = v71;
    uint64_t v38 = v73;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v71, enum case for ColorScheme.dark(_:), v73);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v40 = (uint64_t)v70;
    uint64_t v41 = (uint64_t *)&v70[*(int *)(v69 + 36)];
    uint64_t v42 = sub_100002874(&qword_1000A8900);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v41 + *(int *)(v42 + 28), v37, v38);
    *uint64_t v41 = KeyPath;
    uint64_t v43 = v80;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v40, v19, v80);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v43);
    sub_100083280();
    sub_1000832E0();
    sub_100019284(v40, (uint64_t)v22, &qword_1000A8A08);
    sub_10001A720((uint64_t)v22, v82, &qword_1000A8A10);
    swift_storeEnumTagMultiPayload();
    sub_10002E68C(&qword_1000A8A18, &qword_1000A8A10, (void (*)(void))sub_10002E5D0);
    sub_10002E68C(&qword_1000A8A28, &qword_1000A89F0, (void (*)(void))sub_10002E708);
    sub_100083230();
    sub_100019138((uint64_t)v22, &qword_1000A8A10);
    unint64_t v44 = v33;
  }
  else
  {
    uint64_t v45 = v82;
    unint64_t v44 = v33;
    uint64_t v46 = v83;
    if (qword_1000A79C0 != -1) {
      swift_once();
    }
    v97[0] = qword_1000A8930;
    sub_100082F70();
    uint64_t v47 = (uint64_t)v77;
    if (qword_1000A79C8 != -1) {
      swift_once();
    }
    uint64_t v48 = qword_1000A8938;
    uint64_t v49 = v80;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v47, v19, v80);
    int v50 = (uint64_t *)(v47 + *(int *)(v75 + 36));
    *int v50 = v48;
    v50[1] = 0x4000000000000000;
    v50[2] = 0;
    v50[3] = 0;
    int v51 = *(void (**)(char *, uint64_t))(v17 + 8);
    swift_retain();
    v51(v19, v49);
    if (qword_1000A79D0 != -1) {
      swift_once();
    }
    uint64_t v52 = qword_1000A8940;
    uint64_t v53 = v76;
    sub_10001A720(v47, v76, &qword_1000A89E8);
    uint64_t v54 = v53 + *(int *)(v46 + 36);
    *(void *)uint64_t v54 = v52;
    *(_OWORD *)(v54 + 8) = xmmword_1000869D0;
    *(void *)(v54 + 24) = 0x3FF8000000000000;
    swift_retain();
    sub_100019138(v47, &qword_1000A89E8);
    uint64_t v55 = v53;
    uint64_t v56 = v78;
    sub_100019284(v55, v78, &qword_1000A89F0);
    sub_10001A720(v56, v45, &qword_1000A89F0);
    swift_storeEnumTagMultiPayload();
    sub_10002E68C(&qword_1000A8A18, &qword_1000A8A10, (void (*)(void))sub_10002E5D0);
    sub_10002E68C(&qword_1000A8A28, &qword_1000A89F0, (void (*)(void))sub_10002E708);
    sub_100083230();
    sub_100019138(v56, &qword_1000A89F0);
  }
  uint64_t v57 = v88;
  type metadata accessor for PlatterView();
  uint64_t v58 = v90;
  sub_100083480();
  v97[2] = v57;
  v97[3] = &protocol witness table for _PaddingLayout;
  uint64_t v59 = v93;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v61 = v92;
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  int v63 = v89;
  v62(v89, v58, v59);
  unint64_t v64 = *(void (**)(char *, uint64_t))(v61 + 8);
  v64(v58, v59);
  uint64_t v65 = (uint64_t)v44;
  uint64_t v66 = (uint64_t)v44;
  uint64_t v67 = v85;
  sub_10001A720(v65, v85, &qword_1000A89D0);
  v97[0] = v67;
  v62(v58, v63, v59);
  v97[1] = v58;
  v96[0] = v84;
  v96[1] = v59;
  unint64_t v94 = sub_10002E7B4();
  uint64_t v95 = WitnessTable;
  sub_10002B51C((uint64_t)v97, 2uLL, (uint64_t)v96);
  v64(v63, v59);
  sub_100019138(v66, &qword_1000A89D0);
  v64(v58, v59);
  return sub_100019138(v67, &qword_1000A89D0);
}

uint64_t sub_10002C74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100002874(&qword_1000A89D8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a2 - 8);
  __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002874(&qword_1000A89C8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A720(a1, (uint64_t)v17, &qword_1000A89C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v4, a2);
  sub_10002E490(v11);
  return sub_10002E4E8((uint64_t)v17, (uint64_t)v11, (uint64_t)v14, a2, a3);
}

void sub_10002C8FC()
{
  qword_1000ACB78 = 0x4022000000000000;
}

void sub_10002C90C()
{
  qword_1000A8928 = 0x4020000000000000;
}

uint64_t sub_10002C91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

void sub_10002C924()
{
  sub_1000302AC(319, &qword_1000A8898, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10002CA2C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000836F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unsigned int v12 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (((v8 & 0xFFFFFFFFFFFFFFF8) + v11 + 16) & ~v11) + *(void *)(*(void *)(v9 - 8) + 64) > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v8];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v18 = v8;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v8 < 4) {
LABEL_23:
          }
            unsigned int v16 = (v19 | (v17 << (8 * v8))) + 2;
          else {
LABEL_25:
          }
            unsigned int v16 = v19 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v20 = v8 + 1;
    if (v16 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v21 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v21 = 0;
    }
    *((unsigned char *)a1 + v8) = v21;
    uint64_t v22 = (void *)(((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)((unint64_t)&a2[v20 + 7] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v22 = *v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)v22 + v11 + 8) & ~v11, ((unint64_t)v23 + v11 + 8) & ~v11, v9);
  }
  return a1;
}

uint64_t sub_10002CCA8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000836F0();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    swift_release();
  }
  uint64_t v11 = *(void *)(*(void *)(a2 + 16) - 8);
  unsigned int v12 = *(uint64_t (**)(unint64_t))(v11 + 8);
  unint64_t v13 = (((unint64_t)&a1[v5 + 8] & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);

  return v12(v13);
}

void *sub_10002CE38(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000836F0();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v13 = 0;
  }
  *((unsigned char *)a1 + v7) = v13;
  uint64_t v14 = (void *)(((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  uint64_t v16 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 16))(((unint64_t)v14 + *(unsigned __int8 *)(v16 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), ((unint64_t)v15 + *(unsigned __int8 *)(v16 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

unsigned __int8 *sub_10002CFF0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1000836F0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(sub_1000836F0() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  unint64_t v18 = v17 + 8;
  int v19 = (void *)((unint64_t)&a1[v18] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((unint64_t)&a2[v18] & 0xFFFFFFFFFFFFFFF8);
  void *v19 = *v20;
  uint64_t v21 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 24))(((unint64_t)v19 + *(unsigned __int8 *)(v21 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), ((unint64_t)v20 + *(unsigned __int8 *)(v21 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

void *sub_10002D2D8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000836F0();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v13;
  unsigned int v14 = (void *)(((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8);
  void *v14 = *v15;
  uint64_t v16 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 32))(((unint64_t)v14 + *(unsigned __int8 *)(v16 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), ((unint64_t)v15 + *(unsigned __int8 *)(v16 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

unsigned __int8 *sub_10002D48C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1000836F0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(sub_1000836F0() - 8) + 64);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  unint64_t v19 = v18 + 8;
  uint64_t v20 = (void *)((unint64_t)&a1[v19] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)((unint64_t)&a2[v19] & 0xFFFFFFFFFFFFFFF8);
  void *v20 = *v21;
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v22 + 40))(((unint64_t)v20 + *(unsigned __int8 *)(v22 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80), ((unint64_t)v21 + *(unsigned __int8 *)(v22 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  return a1;
}

uint64_t sub_10002D770(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_1000836F0() - 8) + 64);
  uint64_t v7 = 8;
  if (v6 > 8) {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= 0xFE) {
    unsigned int v11 = 254;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v11) {
    goto LABEL_27;
  }
  unint64_t v12 = (((v7 & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10) + *(void *)(v8 + 64);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((a2 - v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 < 2)
    {
LABEL_27:
      if (v9 > 0xFE)
      {
        uint64_t v21 = *(uint64_t (**)(unint64_t))(v8 + 48);
        return v21(((((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10);
      }
      else
      {
        unsigned int v20 = *((unsigned __int8 *)a1 + v7);
        if (v20 >= 2) {
          return (v20 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_27;
  }
LABEL_17:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 <= 3) {
      int v18 = v12;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v11 + (v19 | v17) + 1;
}

void sub_10002D998(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(sub_1000836F0() - 8) + 64);
  uint64_t v9 = 8;
  if (v8 > 8) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0xFE) {
    unsigned int v13 = 254;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  size_t v14 = (((v9 & 0xFFFFFFFFFFFFFFF8) + v12 + 16) & ~v12) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v19 = ((a3 - v13 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v19))
    {
      int v15 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v19 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v16 = ~v13 + a2;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v14)
      {
        int v20 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        return;
      default:
        return;
    }
  }
  size_t v18 = v9 + 1;
  switch(v15)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x10002DCC0);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v11 > 0xFE)
        {
          uint64_t v21 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v21((((unint64_t)&a1[v18 + 7] & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12, a2);
        }
        else if (a2 > 0xFE)
        {
          if (v18 <= 3) {
            int v22 = ~(-1 << (8 * v18));
          }
          else {
            int v22 = -1;
          }
          if (v9 != -1)
          {
            int v23 = v22 & (a2 - 255);
            if (v18 <= 3) {
              int v24 = v9 + 1;
            }
            else {
              int v24 = 4;
            }
            bzero(a1, v18);
            switch(v24)
            {
              case 2:
                *(_WORD *)a1 = v23;
                break;
              case 3:
                *(_WORD *)a1 = v23;
                a1[2] = BYTE2(v23);
                break;
              case 4:
                *(_DWORD *)a1 = v23;
                break;
              default:
                *a1 = v23;
                break;
            }
          }
        }
        else
        {
          a1[v9] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for PlatterView()
{
  return sub_10002B2AC();
}

uint64_t sub_10002DD10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ContentSizeCategoryLimiter()
{
  return sub_10002B2AC();
}

uint64_t sub_10002DD6C@<X0>(uint64_t a1@<X8>)
{
  return sub_10002BBCC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10002DD78()
{
  uint64_t result = sub_1000834E0();
  qword_1000A8930 = result;
  return result;
}

uint64_t sub_10002DDB4()
{
  uint64_t result = sub_1000834E0();
  qword_1000A8938 = result;
  return result;
}

uint64_t sub_10002DDF8()
{
  uint64_t result = sub_1000834E0();
  qword_1000A8940 = result;
  return result;
}

uint64_t sub_10002DE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100002874(&qword_1000A89C8);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000831B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unsigned int v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int v15 = (char *)&v27 - v14;
  sub_10001A720(v3, (uint64_t)v8, &qword_1000A89C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100019138((uint64_t)v8, &qword_1000A89C8);
  }
  else
  {
    uint64_t v30 = a2;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v28(v15, v8, v9);
    uint64_t v29 = a1;
    sub_100068584((uint64_t)v13);
    uint64_t v16 = sub_1000831A0();
    uint64_t v17 = sub_10002E88C((uint64_t)v13, v16);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      uint64_t v20 = 0;
    }
    else {
      uint64_t v20 = v17;
    }
    uint64_t v21 = sub_1000831A0();
    uint64_t v22 = sub_10002E88C((uint64_t)v15, v21);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if (v24) {
      uint64_t v22 = 0;
    }
    uint64_t v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25(v13, v9);
    if (v22 < v20) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v30, v15, v9);
    }
    v25(v15, v9);
    a2 = v30;
  }
  return sub_100068584(a2);
}

uint64_t sub_10002E0B0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_1000831B0();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v9 = v24;
  __chkstk_darwin(v5);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000028B8(&qword_1000A8AD0);
  uint64_t v12 = sub_100083020();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v18 = (char *)&v24 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2 + *(int *)(a1 + 40), v8);
  swift_getKeyPath();
  sub_10002DE34(a1, (uint64_t)v7);
  uint64_t v19 = *(void *)(a1 + 24);
  sub_100083410();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v8);
  uint64_t v20 = sub_10003048C(&qword_1000A8AD8, &qword_1000A8AD0);
  uint64_t v28 = v19;
  uint64_t v29 = v20;
  swift_getWitnessTable();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v21(v18, v16, v12);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v16, v12);
  v21(v27, v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v22)(v18, v12);
}

uint64_t sub_10002E3C8(uint64_t a1)
{
  uint64_t v2 = sub_1000831B0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_100083090();
}

uint64_t sub_10002E490@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_100002874(&qword_1000A89E0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10002E4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_100019284(a1, a5, &qword_1000A89C8);
  uint64_t v9 = type metadata accessor for ContentSizeCategoryLimiter();
  sub_100019284(a2, a5 + *(int *)(v9 + 36), &qword_1000A89D8);
  uint64_t v10 = a5 + *(int *)(v9 + 40);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);

  return v11(v10, a3, a4);
}

uint64_t sub_10002E5A8()
{
  return sub_100083080();
}

unint64_t sub_10002E5D0()
{
  unint64_t result = qword_1000A8A20;
  if (!qword_1000A8A20)
  {
    sub_1000028B8(&qword_1000A8A08);
    swift_getOpaqueTypeConformance2();
    sub_10003048C(&qword_1000A88F8, &qword_1000A8900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8A20);
  }
  return result;
}

uint64_t sub_10002E68C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002E708()
{
  unint64_t result = qword_1000A8A30;
  if (!qword_1000A8A30)
  {
    sub_1000028B8(&qword_1000A89E8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8A30);
  }
  return result;
}

unint64_t sub_10002E7B4()
{
  unint64_t result = qword_1000A8A38[0];
  if (!qword_1000A8A38[0])
  {
    sub_1000028B8(&qword_1000A89D0);
    sub_10002E68C(&qword_1000A8A18, &qword_1000A8A10, (void (*)(void))sub_10002E5D0);
    sub_10002E68C(&qword_1000A8A28, &qword_1000A89F0, (void (*)(void))sub_10002E708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000A8A38);
  }
  return result;
}

uint64_t sub_10002E88C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(sub_1000831B0() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_1000304DC();
  uint64_t v7 = 0;
  while ((sub_100083840() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

void sub_10002E988()
{
  sub_1000302AC(319, &qword_1000A8AC0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_1000302AC(319, &qword_1000A8AC8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_10002EAF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000831B0();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  unint64_t v9 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v10 = *(void *)(v7 + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  uint64_t v11 = v8 & 0xF8 | 7;
  size_t v12 = v10 + v11;
  if (v9 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v7 + 64);
  }
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  int v16 = (*(_DWORD *)(v14 + 80) | v8) & 0x100000;
  if ((v15 | v11) != 7 || v16 != 0 || ((v13 + 1 + v15 + ((v10 + v11) & ~v11)) & ~v15) + *(void *)(v14 + 64) > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + (((v15 | v11) + 16) & ~(v15 | v11)));
    swift_retain();
  }
  else
  {
    uint64_t v30 = *(void *)(a3 + 16);
    uint64_t v20 = ~v11;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, v10);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v21 = (void *)(((unint64_t)a1 + v12) & v20);
    uint64_t v22 = (unsigned __int8 *)(((unint64_t)a2 + v12) & v20);
    unsigned int v23 = v22[v13];
    unsigned int v24 = v23 - 2;
    if (v23 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v25 = v13;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *v22;
          goto LABEL_28;
        case 2:
          int v26 = *(unsigned __int16 *)v22;
          goto LABEL_28;
        case 3:
          int v26 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_28;
        case 4:
          int v26 = *(_DWORD *)v22;
LABEL_28:
          int v27 = (v26 | (v24 << (8 * v13))) + 2;
          unsigned int v23 = v26 + 2;
          if (v13 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v23 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(v21, v22, v6);
      char v28 = 1;
    }
    else
    {
      void *v21 = *(void *)v22;
      swift_retain();
      char v28 = 0;
    }
    *((unsigned char *)v21 + v13) = v28;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))(((unint64_t)v21 + v13 + v15 + 1) & ~v15, (unint64_t)&v22[v13 + 1 + v15] & ~v15, v30);
  }
  return a1;
}

uint64_t sub_10002EDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000831B0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v8 = v6 + a1;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v8;
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  unint64_t v9 = (unsigned __int8 *)((v8 + v7) & ~v7);
  if (v6 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = *(void *)(v5 + 64);
  }
  unsigned int v11 = v9[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *v9;
        goto LABEL_17;
      case 2:
        int v14 = *(unsigned __int16 *)v9;
        goto LABEL_17;
      case 3:
        int v14 = *(unsigned __int16 *)v9 | (v9[2] << 16);
        goto LABEL_17;
      case 4:
        int v14 = *(_DWORD *)v9;
LABEL_17:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(v9, v4);
  }
  else {
    swift_release();
  }
  uint64_t v16 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v17 = *(uint64_t (**)(unint64_t))(v16 + 8);
  unint64_t v18 = (unint64_t)&v9[v10 + 1 + *(unsigned __int8 *)(v16 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);

  return v17(v18);
}

void *sub_10002EFDC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000831B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    unint64_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = *(void *)(v7 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v7 + 84);
    unint64_t v9 = *(void *)(v7 + 64);
  }
  if (v8) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = v9 + 1;
  }
  uint64_t v12 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  unint64_t v13 = v11 + v12;
  int v14 = (void *)(((unint64_t)a1 + v13) & ~v12);
  int v15 = (unsigned __int8 *)(((unint64_t)a2 + v13) & ~v12);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  unsigned int v16 = v15[v9];
  unsigned int v17 = v16 - 2;
  if (v16 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v18 = v9;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *v15;
        goto LABEL_21;
      case 2:
        int v19 = *(unsigned __int16 *)v15;
        goto LABEL_21;
      case 3:
        int v19 = *(unsigned __int16 *)v15 | (v15[2] << 16);
        goto LABEL_21;
      case 4:
        int v19 = *(_DWORD *)v15;
LABEL_21:
        int v20 = (v19 | (v17 << (8 * v9))) + 2;
        unsigned int v16 = v19 + 2;
        if (v9 < 4) {
          unsigned int v16 = v20;
        }
        break;
      default:
        break;
    }
  }
  if (v16 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(v14, v15, v6);
    char v21 = 1;
  }
  else
  {
    void *v14 = *(void *)v15;
    swift_retain();
    char v21 = 0;
  }
  *((unsigned char *)v14 + v9) = v21;
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v22 + 16))(((unint64_t)v14 + v9 + *(unsigned __int8 *)(v22 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80), (unint64_t)&v15[v9 + 1 + *(unsigned __int8 *)(v22 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  return a1;
}

void *sub_10002F248(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000831B0();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  unint64_t v14 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    unint64_t v15 = *(void *)(v7 + 64);
  }
  else {
    unint64_t v15 = v14 + 1;
  }
  uint64_t v16 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  unint64_t v17 = v15 + v16;
  uint64_t v18 = (unsigned __int8 *)(((unint64_t)a1 + v17) & ~v16);
  int v19 = (unsigned __int8 *)(((unint64_t)a2 + v17) & ~v16);
  if (v14 <= 8) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v7 + 64);
  }
  if (v18 != v19)
  {
    unsigned int v21 = v18[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v18;
          goto LABEL_28;
        case 2:
          int v24 = *(unsigned __int16 *)v18;
          goto LABEL_28;
        case 3:
          int v24 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_28;
        case 4:
          int v24 = *(_DWORD *)v18;
LABEL_28:
          int v25 = (v24 | (v22 << (8 * v20))) + 2;
          unsigned int v21 = v24 + 2;
          if (v20 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(v18, v6);
    }
    else {
      swift_release();
    }
    unsigned int v26 = v19[v20];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v28 = v20;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v19;
          goto LABEL_42;
        case 2:
          int v29 = *(unsigned __int16 *)v19;
          goto LABEL_42;
        case 3:
          int v29 = *(unsigned __int16 *)v19 | (v19[2] << 16);
          goto LABEL_42;
        case 4:
          int v29 = *(_DWORD *)v19;
LABEL_42:
          int v30 = (v29 | (v27 << (8 * v20))) + 2;
          unsigned int v26 = v29 + 2;
          if (v20 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(v18, v19, v6);
      v18[v20] = 1;
    }
    else
    {
      *(void *)uint64_t v18 = *(void *)v19;
      v18[v20] = 0;
      swift_retain();
    }
  }
  uint64_t v31 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v31 + 24))((unint64_t)&v18[v20 + 1 + *(unsigned __int8 *)(v31 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v31 + 80), (unint64_t)&v19[v20 + 1 + *(unsigned __int8 *)(v31 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  return a1;
}

void *sub_10002F5E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000831B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    int v8 = *(_DWORD *)(v7 + 84);
    unint64_t v9 = *(void *)(v7 + 64);
    if (v8) {
      size_t v10 = *(void *)(v7 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    int v8 = *(_DWORD *)(v7 + 84);
    unint64_t v9 = *(void *)(v7 + 64);
  }
  if (v8) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = v9 + 1;
  }
  uint64_t v12 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  unint64_t v13 = v11 + v12;
  unint64_t v14 = (void *)(((unint64_t)a1 + v13) & ~v12);
  unint64_t v15 = (unsigned __int8 *)(((unint64_t)a2 + v13) & ~v12);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  unsigned int v16 = v15[v9];
  unsigned int v17 = v16 - 2;
  if (v16 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v18 = v9;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *v15;
        goto LABEL_21;
      case 2:
        int v19 = *(unsigned __int16 *)v15;
        goto LABEL_21;
      case 3:
        int v19 = *(unsigned __int16 *)v15 | (v15[2] << 16);
        goto LABEL_21;
      case 4:
        int v19 = *(_DWORD *)v15;
LABEL_21:
        int v20 = (v19 | (v17 << (8 * v9))) + 2;
        unsigned int v16 = v19 + 2;
        if (v9 < 4) {
          unsigned int v16 = v20;
        }
        break;
      default:
        break;
    }
  }
  if (v16 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(v14, v15, v6);
    char v21 = 1;
  }
  else
  {
    char v21 = 0;
    void *v14 = *(void *)v15;
  }
  *((unsigned char *)v14 + v9) = v21;
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v22 + 32))(((unint64_t)v14 + v9 + *(unsigned __int8 *)(v22 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80), (unint64_t)&v15[v9 + 1 + *(unsigned __int8 *)(v22 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  return a1;
}

void *sub_10002F84C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000831B0();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  unint64_t v14 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    unint64_t v15 = *(void *)(v7 + 64);
  }
  else {
    unint64_t v15 = v14 + 1;
  }
  uint64_t v16 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  unint64_t v17 = v15 + v16;
  uint64_t v18 = (unsigned __int8 *)(((unint64_t)a1 + v17) & ~v16);
  int v19 = (unsigned __int8 *)(((unint64_t)a2 + v17) & ~v16);
  if (v14 <= 8) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v7 + 64);
  }
  if (v18 != v19)
  {
    unsigned int v21 = v18[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v18;
          goto LABEL_28;
        case 2:
          int v24 = *(unsigned __int16 *)v18;
          goto LABEL_28;
        case 3:
          int v24 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_28;
        case 4:
          int v24 = *(_DWORD *)v18;
LABEL_28:
          int v25 = (v24 | (v22 << (8 * v20))) + 2;
          unsigned int v21 = v24 + 2;
          if (v20 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(v18, v6);
    }
    else {
      swift_release();
    }
    unsigned int v26 = v19[v20];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v28 = v20;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v19;
          goto LABEL_42;
        case 2:
          int v29 = *(unsigned __int16 *)v19;
          goto LABEL_42;
        case 3:
          int v29 = *(unsigned __int16 *)v19 | (v19[2] << 16);
          goto LABEL_42;
        case 4:
          int v29 = *(_DWORD *)v19;
LABEL_42:
          int v30 = (v29 | (v27 << (8 * v20))) + 2;
          unsigned int v26 = v29 + 2;
          if (v20 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(v18, v19, v6);
      char v31 = 1;
    }
    else
    {
      char v31 = 0;
      *(void *)uint64_t v18 = *(void *)v19;
    }
    v18[v20] = v31;
  }
  uint64_t v32 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v32 + 40))((unint64_t)&v18[v20 + 1 + *(unsigned __int8 *)(v32 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v32 + 80), (unint64_t)&v19[v20 + 1 + *(unsigned __int8 *)(v32 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  return a1;
}

uint64_t sub_10002FBE4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_1000831B0() - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 80);
  unsigned int v9 = *(_DWORD *)(v6 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  unint64_t v11 = *(void *)(v6 + 64);
  if (v11 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(v6 + 64);
  }
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  if (v10 <= v14) {
    unsigned int v16 = *(_DWORD *)(v13 + 84);
  }
  else {
    unsigned int v16 = v10;
  }
  if (v16 <= 0xFE) {
    unsigned int v17 = 254;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v9) {
    unint64_t v18 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v18 = v11 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v8 & 0xF8 | 7;
  unint64_t v20 = v18 + v19;
  uint64_t v21 = v12 + v15 + 1;
  if (a2 > v17)
  {
    uint64_t v22 = ((v21 + (v20 & ~v19)) & ~v15) + *(void *)(v13 + 64);
    char v23 = 8 * v22;
    if (v22 > 3) {
      goto LABEL_19;
    }
    unsigned int v25 = ((a2 - v17 + ~(-1 << v23)) >> v23) + 1;
    if (HIWORD(v25))
    {
      int v24 = *(_DWORD *)((char *)a1 + v22);
      if (!v24) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v25 > 0xFF)
    {
      int v24 = *(unsigned __int16 *)((char *)a1 + v22);
      if (!*(unsigned __int16 *)((char *)a1 + v22)) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v25 >= 2)
    {
LABEL_19:
      int v24 = *((unsigned __int8 *)a1 + v22);
      if (!*((unsigned char *)a1 + v22)) {
        goto LABEL_36;
      }
LABEL_26:
      int v26 = (v24 - 1) << v23;
      if (v22 > 3) {
        int v26 = 0;
      }
      if (v22)
      {
        if (v22 <= 3) {
          int v27 = ((v21 + (v20 & ~v19)) & ~v15) + *(_DWORD *)(v13 + 64);
        }
        else {
          int v27 = 4;
        }
        switch(v27)
        {
          case 2:
            int v28 = *a1;
            break;
          case 3:
            int v28 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)a1;
            break;
          default:
            int v28 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v28 = 0;
      }
      return v17 + (v28 | v26) + 1;
    }
  }
LABEL_36:
  if (v10 == v17)
  {
    if (v9 < 2) {
      return 0;
    }
    unsigned int v32 = (*(uint64_t (**)(unsigned __int16 *))(v7 + 48))(a1);
    if (v32 >= 2) {
      return v32 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v30 = ((unint64_t)a1 + v20) & ~v19;
    if (v16 > 0xFE)
    {
      uint64_t v33 = *(uint64_t (**)(unint64_t, uint64_t))(v13 + 48);
      return v33((v21 + v30) & ~v15, v14);
    }
    else
    {
      unsigned int v31 = *(unsigned __int8 *)(v30 + v12);
      if (v31 >= 2) {
        return (v31 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
}

void sub_10002FEA4(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v8 = 0;
  uint64_t v9 = *(void *)(sub_1000831B0() - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  unint64_t v12 = *(void *)(v9 + 64);
  if (v12 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v9 + 64);
  }
  uint64_t v14 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  if (v11 <= v15) {
    unsigned int v17 = *(_DWORD *)(v14 + 84);
  }
  else {
    unsigned int v17 = v11;
  }
  if (v17 <= 0xFE) {
    unsigned int v18 = 254;
  }
  else {
    unsigned int v18 = v17;
  }
  if (!v10) {
    ++v12;
  }
  uint64_t v19 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  unint64_t v20 = v12 + v19;
  unint64_t v21 = (v12 + v19) & ~v19;
  size_t v22 = v13 + 1;
  uint64_t v23 = v13 + 1 + v16;
  size_t v24 = ((v23 + v21) & ~v16) + *(void *)(v14 + 64);
  if (a3 <= v18) {
    goto LABEL_23;
  }
  if (v24 <= 3)
  {
    unsigned int v25 = ((a3 - v18 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
    if (HIWORD(v25))
    {
      int v8 = 4;
      if (v18 >= a2) {
        goto LABEL_31;
      }
      goto LABEL_24;
    }
    if (v25 >= 0x100) {
      int v8 = 2;
    }
    else {
      int v8 = v25 > 1;
    }
LABEL_23:
    if (v18 >= a2) {
      goto LABEL_31;
    }
    goto LABEL_24;
  }
  int v8 = 1;
  if (v18 >= a2)
  {
LABEL_31:
    uint64_t v29 = ~v16;
    switch(v8)
    {
      case 1:
        a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_36;
      case 2:
        *(_WORD *)&a1[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_36;
      case 3:
        goto LABEL_67;
      case 4:
        *(_DWORD *)&a1[v24] = 0;
        goto LABEL_35;
      default:
LABEL_35:
        if (a2)
        {
LABEL_36:
          if (v11 == v18)
          {
            unint64_t v30 = *(void (**)(unsigned char *, void))(v9 + 56);
            v30(a1, (a2 + 1));
          }
          else
          {
            unsigned int v31 = (unsigned char *)((unint64_t)&a1[v20] & ~v19);
            if (v17 > 0xFE)
            {
              unint64_t v32 = (unint64_t)&v31[v23] & v29;
              uint64_t v33 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 56);
              v33(v32, a2, v15);
            }
            else if (a2 > 0xFE)
            {
              if (v22 <= 3) {
                int v34 = ~(-1 << (8 * v22));
              }
              else {
                int v34 = -1;
              }
              if (v13 != -1)
              {
                int v35 = v34 & (a2 - 255);
                if (v22 <= 3) {
                  int v36 = v13 + 1;
                }
                else {
                  int v36 = 4;
                }
                bzero(v31, v22);
                switch(v36)
                {
                  case 2:
                    *(_WORD *)unsigned int v31 = v35;
                    break;
                  case 3:
                    *(_WORD *)unsigned int v31 = v35;
                    v31[2] = BYTE2(v35);
                    break;
                  case 4:
                    *(_DWORD *)unsigned int v31 = v35;
                    break;
                  default:
                    unsigned char *v31 = v35;
                    break;
                }
              }
            }
            else
            {
              v31[v13] = -(char)a2;
            }
          }
        }
        break;
    }
    return;
  }
LABEL_24:
  unsigned int v26 = ~v18 + a2;
  if (v24 < 4)
  {
    int v27 = (v26 >> (8 * v24)) + 1;
    if (v24)
    {
      int v28 = v26 & ~(-1 << (8 * v24));
      bzero(a1, v24);
      if (v24 == 3)
      {
        *(_WORD *)a1 = v28;
        a1[2] = BYTE2(v28);
      }
      else if (v24 == 2)
      {
        *(_WORD *)a1 = v28;
      }
      else
      {
        *a1 = v28;
      }
    }
  }
  else
  {
    bzero(a1, v24);
    *(_DWORD *)a1 = v26;
    int v27 = 1;
  }
  switch(v8)
  {
    case 1:
      a1[v24] = v27;
      break;
    case 2:
      *(_WORD *)&a1[v24] = v27;
      break;
    case 3:
LABEL_67:
      __break(1u);
      JUMPOUT(0x100030274);
    case 4:
      *(_DWORD *)&a1[v24] = v27;
      break;
    default:
      return;
  }
}

void sub_1000302AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100030310()
{
  return swift_getWitnessTable();
}

uint64_t sub_100030448()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003048C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000304DC()
{
  unint64_t result = qword_1000A8AE0;
  if (!qword_1000A8AE0)
  {
    sub_1000831B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8AE0);
  }
  return result;
}

uint64_t sub_100030534()
{
  return swift_getWitnessTable();
}

void *sub_1000305BC(uint64_t a1)
{
  uint64_t v6 = &_swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100083AF0();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_100034C08(i, (uint64_t)v5);
    sub_1000188D8(0, &qword_1000A8D18);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_100083AD0();
    sub_100083B00();
    sub_100083B10();
    sub_100083AE0();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

void *sub_1000306D8(uint64_t a1)
{
  uint64_t v6 = &_swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100083AF0();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_100034C08(i, (uint64_t)v5);
    type metadata accessor for MapSnapshotter.Context();
    if (!swift_dynamicCast()) {
      break;
    }
    sub_100083AD0();
    sub_100083B00();
    sub_100083B10();
    sub_100083AE0();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_1000307D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v22 = a1;
  uint64_t v5 = sub_100083610();
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100083630();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  int v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002874(&qword_1000A7F30);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t v15 = (void *)sub_1000839A0();
  sub_10001A720(v22, (uint64_t)v14, &qword_1000A7F30);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unsigned int v17 = (void *)swift_allocObject();
  uint64_t v18 = v23;
  uint64_t v19 = v24;
  v17[2] = v4;
  v17[3] = v18;
  v17[4] = v19;
  sub_100036F58((uint64_t)v14, (uint64_t)v17 + v16);
  aBlock[4] = sub_100036FC0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009EBF0;
  unint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  sub_100083620();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_1000370BC((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  sub_100083A40();
  sub_1000839B0();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v26);
}

void *sub_100030B50(uint64_t *a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100002874(&qword_1000A7F30);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082E40();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[3] == 1)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    unint64_t v16 = (char **)(a1 + 9);
    swift_beginAccess();
    unsigned int v17 = (char *)a1[9];
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a1[9] = (uint64_t)v17;
    uint64_t v31 = a4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unsigned int v17 = sub_100074C50(0, *((void *)v17 + 2) + 1, 1, v17);
      char *v16 = v17;
    }
    unint64_t v20 = *((void *)v17 + 2);
    unint64_t v19 = *((void *)v17 + 3);
    if (v20 >= v19 >> 1)
    {
      unsigned int v17 = sub_100074C50((char *)(v19 > 1), v20 + 1, 1, v17);
      char *v16 = v17;
    }
    *((void *)v17 + 2) = v20 + 1;
    unint64_t v21 = &v17[16 * v20];
    *((void *)v21 + 4) = sub_10003702C;
    *((void *)v21 + 5) = v15;
    uint64_t v22 = *v16;
    unint64_t result = (void *)swift_endAccess();
    if (*((void *)v22 + 2) == 1)
    {
      sub_10001A720(v31, (uint64_t)v10, &qword_1000A7F30);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        sub_100019138((uint64_t)v10, &qword_1000A7F30);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
        sub_100030FA0();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      }
      return sub_100031B2C();
    }
  }
  else
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100082F00();
    sub_10001859C(v24, (uint64_t)qword_1000ACBA8);
    swift_retain_n();
    uint64_t v25 = sub_100082EE0();
    os_log_type_t v26 = sub_100083920();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      v32[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t v33 = *a1;
      sub_100002874(&qword_1000A8CD8);
      uint64_t v28 = sub_100083880();
      uint64_t v33 = sub_10006863C(v28, v29, v32);
      sub_100083A00();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s: using previously-generated snapshot", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    return (void *)a2(a1);
  }
  return result;
}

void sub_100030FA0()
{
  uint64_t v1 = v0;
  uint64_t v34 = sub_100083650();
  uint64_t v2 = *(void *)(v34 - 8);
  uint64_t v3 = __chkstk_darwin(v34);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v31 - v6;
  uint64_t v8 = sub_100083610();
  __chkstk_darwin(v8);
  int v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082E10();
  double v12 = v11 + -5.0;
  if (v11 + -5.0 <= 0.0)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_100082F00();
    sub_10001859C(v20, (uint64_t)qword_1000ACBA8);
    swift_retain_n();
    unint64_t v21 = sub_100082EE0();
    os_log_type_t v22 = sub_100083930();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446210;
      double v35 = *(double *)v1;
      aBlock[0] = v24;
      sub_100002874(&qword_1000A8CD8);
      uint64_t v25 = sub_100083880();
      double v35 = COERCE_DOUBLE(sub_10006863C(v25, v26, aBlock));
      sub_100083A00();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: could not schedule snapshot cancellation", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v33 = v10;
    uint64_t v13 = sub_100082F00();
    sub_10001859C(v13, (uint64_t)qword_1000ACBA8);
    swift_retain_n();
    uint64_t v14 = sub_100082EE0();
    os_log_type_t v15 = sub_100083920();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v31[1] = v17;
      *(_DWORD *)uint64_t v16 = 136446466;
      v31[0] = v16 + 4;
      double v35 = *(double *)v1;
      aBlock[0] = v17;
      sub_100002874(&qword_1000A8CD8);
      uint64_t v18 = sub_100083880();
      unint64_t v32 = v5;
      double v35 = COERCE_DOUBLE(sub_10006863C(v18, v19, aBlock));
      sub_100083A00();
      swift_release_n();
      uint64_t v5 = v32;
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2050;
      double v35 = v12;
      sub_100083A00();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s: scheduled snapshot cancellation in %{public}f seconds", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = (uint64_t)sub_100036E20;
    aBlock[5] = v27;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100068EDC;
    void aBlock[3] = (uint64_t)&unk_10009EBA0;
    _Block_copy(aBlock);
    double v35 = COERCE_DOUBLE(&_swiftEmptyArrayStorage);
    sub_1000370BC((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    swift_retain();
    sub_100002874((uint64_t *)&unk_1000A7F80);
    sub_100018AC0();
    sub_100083A40();
    sub_100083690();
    swift_allocObject();
    uint64_t v28 = sub_100083660();
    swift_release();
    swift_release();
    *(void *)(v1 + 64) = v28;
    swift_release();
    sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
    unint64_t v29 = (void *)sub_1000839A0();
    sub_100083640();
    sub_1000836B0();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v2 + 8);
    v30(v5, v34);
    if (*(void *)(v1 + 64))
    {
      swift_retain();
      sub_100083980();

      swift_release();
      v30(v7, v34);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100031644()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10003169C();
    return swift_release();
  }
  return result;
}

uint64_t sub_10003169C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_1000836A0();
  unint64_t v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v6 = v0[7];
  uint64_t v7 = qword_1000A7A00;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    goto LABEL_29;
  }
  while (1)
  {
    uint64_t v8 = sub_100082F00();
    sub_10001859C(v8, (uint64_t)qword_1000ACBA8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v9 = sub_100082EE0();
    os_log_type_t v10 = sub_100083930();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v27[1] = v12;
      *(_DWORD *)uint64_t v11 = 136446466;
      uint64_t v29 = *v1;
      uint64_t v30 = v12;
      sub_100002874(&qword_1000A8CD8);
      uint64_t v28 = v2;
      uint64_t v13 = sub_100083880();
      uint64_t v29 = sub_10006863C(v13, v14, &v30);
      sub_100083A00();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2050;
      uint64_t v15 = *(void *)(v6 + 16);
      swift_bridgeObjectRelease();
      uint64_t v29 = v15;
      uint64_t v2 = v28;
      sub_100083A00();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s: will cancel %{public}ld snapshots", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
    *uint64_t v5 = sub_1000839A0();
    (*(void (**)(uint64_t *, void, void *))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    char v16 = sub_1000836C0();
    uint64_t result = (*(uint64_t (**)(uint64_t *, void *))(v3 + 8))(v5, v2);
    if ((v16 & 1) == 0) {
      break;
    }
    uint64_t v18 = 0;
    uint64_t v5 = (uint64_t *)(v6 + 64);
    uint64_t v19 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v20 = -1;
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    unint64_t v3 = v20 & *(void *)(v6 + 64);
    uint64_t v1 = (uint64_t *)((unint64_t)(v19 + 63) >> 6);
    while (1)
    {
      if (v3)
      {
        unint64_t v21 = __clz(__rbit64(v3));
        v3 &= v3 - 1;
        unint64_t v22 = v21 | (v18 << 6);
        goto LABEL_10;
      }
      uint64_t v24 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        goto LABEL_28;
      }
      if (v24 >= (uint64_t)v1) {
        return swift_release();
      }
      unint64_t v25 = v5[v24];
      ++v18;
      if (!v25)
      {
        uint64_t v18 = v24 + 1;
        if (v24 + 1 >= (uint64_t)v1) {
          return swift_release();
        }
        unint64_t v25 = v5[v18];
        if (!v25)
        {
          uint64_t v18 = v24 + 2;
          if (v24 + 2 >= (uint64_t)v1) {
            return swift_release();
          }
          unint64_t v25 = v5[v18];
          if (!v25) {
            break;
          }
        }
      }
LABEL_25:
      unint64_t v3 = (v25 - 1) & v25;
      unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_10:
      uint64_t v23 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v6 + 56) + 16 * v22);
      uint64_t v2 = *(id *)(*(void *)(v6 + 48) + 8 * v22);
      swift_retain();
      [v2 cancel];
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      v23(&v30, &v29);

      swift_release();
    }
    uint64_t v26 = v24 + 3;
    if (v26 >= (uint64_t)v1) {
      return swift_release();
    }
    unint64_t v25 = v5[v26];
    if (v25)
    {
      uint64_t v18 = v26;
      goto LABEL_25;
    }
    while (1)
    {
      uint64_t v18 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        break;
      }
      if (v18 >= (uint64_t)v1) {
        return swift_release();
      }
      unint64_t v25 = v5[v18];
      ++v26;
      if (v25) {
        goto LABEL_25;
      }
    }
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
  }
  __break(1u);
  return result;
}

void *sub_100031B2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100083610();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100083630();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  __chkstk_darwin(v4);
  unint64_t v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100082E40();
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v7 = __chkstk_darwin(v45);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1000836A0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100082F00();
  sub_10001859C(v16, (uint64_t)qword_1000ACBA8);
  swift_retain_n();
  uint64_t v17 = sub_100082EE0();
  os_log_type_t v18 = sub_100083920();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v41 = v9;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v40 = v12;
    aBlock[0] = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    uint64_t v39 = v20 + 4;
    id v52 = *(id *)v1;
    sub_100002874(&qword_1000A8CD8);
    uint64_t v22 = sub_100083880();
    id v52 = (id)sub_10006863C(v22, v23, aBlock);
    sub_100083A00();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s: generateSnapshot BEGIN", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v40;
    swift_slowDealloc();
    uint64_t v9 = v41;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t *v15 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v24 = sub_1000836C0();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v24)
  {
    sub_100082E30();
    uint64_t result = *(void **)(v1 + 16);
    if (result)
    {
      [result copy];
      sub_100083A20();
      swift_unknownObjectRelease();
      sub_1000188D8(0, &qword_1000A8D10);
      swift_dynamicCast();
      id v26 = v52;
      [v52 _setAllowsSimultaneousLightDarkSnapshots:1];
      id v27 = [self traitCollectionWithUserInterfaceStyle:0];
      [v26 setTraitCollection:v27];

      uint64_t v28 = (char *)[objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v26];
      uint64_t v41 = v28;

      swift_retain();
      sub_1000327F4(v28, (uint64_t)sub_100036C78, v1);
      swift_release();
      uint64_t v40 = *(void *)(v1 + 40);
      uint64_t v29 = (void *)sub_1000839A0();
      uint64_t v30 = v43;
      uint64_t v31 = v45;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v9, v11, v45);
      unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v1;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v33 + v32, v9, v31);
      aBlock[4] = (uint64_t)sub_100036D84;
      aBlock[5] = v33;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100068EDC;
      void aBlock[3] = (uint64_t)&unk_10009EB50;
      uint64_t v34 = _Block_copy(aBlock);
      swift_retain();
      double v35 = v44;
      sub_100083620();
      id v52 = &_swiftEmptyArrayStorage;
      sub_1000370BC((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100002874((uint64_t *)&unk_1000A7F80);
      sub_100018AC0();
      int v36 = v48;
      uint64_t v37 = v11;
      uint64_t v38 = v50;
      sub_100083A40();
      sub_100083960();
      _Block_release(v34);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v38);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v46);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v37, v31);
      return (void *)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000322D4(uint64_t *a1, void *a2)
{
  id v44 = a2;
  uint64_t v3 = sub_100082E40();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v43 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v8 = &v39[-v7];
  if (a1[8])
  {
    swift_retain();
    sub_100083670();
    swift_release();
  }
  uint64_t v9 = (void *)a1[6];
  if (v9)
  {
    id v10 = [v9 image];
    id v11 = [v10 imageAsset];
  }
  else
  {
    id v11 = 0;
  }
  uint64_t v12 = self;
  id v13 = [v12 traitCollectionWithUserInterfaceStyle:1];
  id v14 = [v12 traitCollectionWithUserInterfaceStyle:2];
  if (v11)
  {
    id v15 = [v11 imageWithTraitCollection:v13];
    id v16 = [v11 imageWithTraitCollection:v14];
  }
  else
  {
    id v16 = 0;
    id v15 = 0;
  }
  uint64_t v17 = (void *)a1[3];
  os_log_type_t v18 = (void *)a1[4];
  a1[3] = (uint64_t)v15;
  a1[4] = (uint64_t)v16;
  id v46 = v16;
  id v45 = v15;
  sub_100034C64(v17, v18);
  [v11 unregisterImageWithTraitCollection:v13];
  [v11 unregisterImageWithTraitCollection:v14];
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100082F00();
  sub_10001859C(v19, (uint64_t)qword_1000ACBA8);
  uint64_t v20 = v8;
  (*(void (**)(unsigned char *, id, uint64_t))(v4 + 16))(v8, v44, v3);
  swift_retain_n();
  uint64_t v21 = sub_100082EE0();
  os_log_type_t v22 = sub_100083920();
  int v23 = v22;
  BOOL v24 = os_log_type_enabled(v21, v22);
  id v47 = v14;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    id v44 = v13;
    uint64_t v26 = v25;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v41 = v27;
    *(_DWORD *)uint64_t v26 = 136446466;
    int v40 = v23;
    uint64_t v48 = *a1;
    v49[0] = v27;
    sub_100002874(&qword_1000A8CD8);
    uint64_t v28 = sub_100083880();
    id v42 = v11;
    uint64_t v48 = sub_10006863C(v28, v29, v49);
    sub_100083A00();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2050;
    uint64_t v30 = v43;
    sub_100082E30();
    sub_100082DC0();
    uint64_t v32 = v31;
    uint64_t v33 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
    v33(v30, v3);
    uint64_t v48 = v32;
    sub_100083A00();
    id v11 = v42;
    v33(v20, v3);
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v40, "%{public}s: generateSnapshot END (%{public}f seconds elapsed)", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v13 = v44;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v20, v3);
  }

  swift_beginAccess();
  uint64_t v34 = a1[9];
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = v34 + 40;
    do
    {
      uint64_t v37 = *(void (**)(uint64_t *))(v36 - 8);
      uint64_t v48 = (uint64_t)a1;
      swift_retain();
      v37(&v48);
      swift_release();
      v36 += 16;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
  }
  a1[9] = (uint64_t)&_swiftEmptyArrayStorage;

  return swift_bridgeObjectRelease();
}

void sub_1000327F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  dispatch_group_enter(*(dispatch_group_t *)(v4 + 40));
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v4;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100034CF0;
  *(void *)(v9 + 24) = v8;
  swift_beginAccess();
  id v10 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v4 + 56);
  *(void *)(v4 + 56) = 0x8000000000000000;
  sub_1000360CC((uint64_t)sub_100034D34, v9, v10, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 56) = v15;

  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t v12 = (void *)sub_1000839A0();
  aBlock[4] = sub_100034CF0;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100017854;
  void aBlock[3] = &unk_10009EB00;
  id v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v10 startWithQueue:v12 completionHandler:v13];
  _Block_release(v13);
  swift_release();
}

void sub_1000329E8(void *a1, uint64_t a2, dispatch_group_t *a3, void *a4, void (*a5)(id))
{
  swift_beginAccess();
  id v9 = a4;
  uint64_t v10 = sub_100034D64((uint64_t)v9);
  swift_endAccess();

  sub_100036A80(v10);
  if (a1)
  {
    Class isa = (void (*)(void))(*a3)[39].isa;
    id v12 = a1;
    isa();
    a5(v12);
    dispatch_group_leave(a3[5]);
  }
  else
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100082F00();
    sub_10001859C(v13, (uint64_t)qword_1000ACBA8);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    id v14 = sub_100082EE0();
    os_log_type_t v15 = sub_100083930();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      v22[0] = v17;
      sub_100002874(&qword_1000A8CD8);
      uint64_t v18 = sub_100083880();
      sub_10006863C(v18, v19, v22);
      sub_100083A00();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2082;
      swift_errorRetain();
      sub_100002874(&qword_1000A7F48);
      uint64_t v20 = sub_100083890();
      sub_10006863C(v20, v21, v22);
      sub_100083A00();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s: error: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    dispatch_group_leave(a3[5]);
  }
}

id *sub_100032D14()
{
  sub_100034C64(v0[3], v0[4]);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100032D64()
{
  sub_100032D14();

  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for MapSnapshotter()
{
  return self;
}

BOOL sub_100032DBC(uint64_t a1)
{
  sub_10001A720(a1, (uint64_t)v3, &qword_1000A7F40);
  if (v3[3])
  {
    type metadata accessor for MapSnapshotter.Context();
    if (swift_dynamicCast())
    {
      if (sub_100082E50())
      {
        sub_100083730();
        sub_1000370BC(&qword_1000A8CF0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
        sub_1000838B0();
        sub_1000838B0();

        return v3[0] == (void)v2;
      }
    }
  }
  else
  {
    sub_100019138((uint64_t)v3, &qword_1000A7F40);
  }
  return 0;
}

id sub_1000330D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapSnapshotter.Context();
  return [super dealloc];
}

uint64_t sub_1000331C4()
{
  return type metadata accessor for MapSnapshotter.Context();
}

uint64_t type metadata accessor for MapSnapshotter.Context()
{
  uint64_t result = qword_1000A8CC8;
  if (!qword_1000A8CC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100033218()
{
  uint64_t result = sub_100082E70();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100083730();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

id sub_1000332E4()
{
  id result = [self strongToWeakObjectsMapTable];
  qword_1000A8AE8 = (uint64_t)result;
  return result;
}

id sub_100033320(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = a2;
  uint64_t v69 = sub_100083730();
  uint64_t v71 = *(void *)(v69 - 8);
  uint64_t v3 = __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v58 - v5;
  uint64_t v7 = sub_100002874(&qword_1000A8D20);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100082E70();
  id v11 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v58 - v15;
  __chkstk_darwin(v14);
  uint64_t v70 = (char *)&v58 - v17;
  uint64_t v18 = (void (*)(id, uint64_t))sub_1000836A0();
  uint64_t v19 = *((void *)v18 - 1);
  __chkstk_darwin(v18);
  unint64_t v21 = (uint64_t *)((char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t *v21 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, void (*)(id, uint64_t)))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  uint64_t v22 = sub_1000836C0();
  (*(void (**)(uint64_t *, void *))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_5;
  }
  sub_10001A720(a1, (uint64_t)v9, &qword_1000A8D20);
  if (v11[6](v9, 1, v10) == 1)
  {
    sub_100019138((uint64_t)v9, &qword_1000A8D20);
    return 0;
  }
  BOOL v24 = v70;
  v11[4](v70, (uint64_t)v9, v10);
  uint64_t v25 = v16;
  uint64_t v26 = v10;
  uint64_t v28 = (char *)(v11 + 2);
  uint64_t v27 = v11[2];
  v27(v25, (uint64_t)v24, v26);
  uint64_t v29 = v71;
  uint64_t v30 = v6;
  id v64 = v6;
  uint64_t v65 = (char *)v11;
  uint64_t v31 = v71 + 16;
  uint64_t v32 = *(NSObject **)(v71 + 16);
  uint64_t v33 = v69;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v30, v68, v69);
  uint64_t v34 = (objc_class *)type metadata accessor for MapSnapshotter.Context();
  uint64_t v35 = (char *)objc_allocWithZone(v34);
  int v63 = v27;
  uint64_t v61 = v28;
  v27(&v35[OBJC_IVAR____TtCC17GeneralMapsWidget14MapSnapshotterP33_D3522C9343D4C44065DB06BAD982882A7Context_identifier], (uint64_t)v25, v26);
  id v36 = v64;
  uint64_t v62 = v32;
  uint64_t v60 = v31;
  ((void (*)(char *, id, uint64_t))v32)(&v35[OBJC_IVAR____TtCC17GeneralMapsWidget14MapSnapshotterP33_D3522C9343D4C44065DB06BAD982882A7Context_family], v64, v33);
  v74.receiver = v35;
  v74.super_class = v34;
  uint64_t v22 = [super init];
  uint64_t v18 = *(void (**)(id, uint64_t))(v29 + 8);
  uint64_t v37 = v65;
  uint64_t v71 = v29 + 8;
  v18(v36, v33);
  uint64_t v16 = (char *)*((void *)v37 + 1);
  uint64_t v10 = v26;
  uint64_t v38 = v26;
  id v9 = v37 + 8;
  ((void (*)(char *, uint64_t))v16)(v25, v38);
  if (qword_1000A79D8 != -1) {
    goto LABEL_14;
  }
LABEL_5:
  id v23 = [(id)qword_1000A8AE8 objectForKey:v22];
  uint64_t v39 = v67;
  if (v23)
  {
    uint64_t v59 = (void (*)(char *, uint64_t))v18;
    id v64 = (id)v22;
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_100082F00();
    sub_10001859C(v40, (uint64_t)qword_1000ACBA8);
    uint64_t v41 = v69;
    ((void (*)(char *, uint64_t, uint64_t))v62)(v39, v68, v69);
    id v42 = v66;
    uint64_t v43 = v70;
    v63(v66, (uint64_t)v70, v10);
    id v44 = sub_100082EE0();
    os_log_type_t v45 = sub_100083920();
    int v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v47 = swift_slowAlloc();
      int v63 = (unsigned int (*)(char *, uint64_t, uint64_t))v16;
      uint64_t v65 = v9;
      uint64_t v48 = v47;
      uint64_t v68 = swift_slowAlloc();
      uint64_t v73 = v68;
      *(_DWORD *)uint64_t v48 = 136446722;
      uint64_t v62 = v44;
      uint64_t v72 = sub_100002874(&qword_1000A8CD8);
      sub_100002874(&qword_1000A8CE0);
      uint64_t v49 = sub_100083880();
      uint64_t v72 = sub_10006863C(v49, v50, &v73);
      LODWORD(v61) = v46;
      sub_100083A00();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2082;
      sub_1000370BC((unint64_t *)&qword_1000A8CE8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      uint64_t v51 = sub_100083BF0();
      uint64_t v72 = sub_10006863C(v51, v52, &v73);
      sub_100083A00();
      swift_bridgeObjectRelease();
      v59(v39, v41);
      *(_WORD *)(v48 + 22) = 2082;
      sub_1000370BC(&qword_1000A8D28, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v53 = sub_100083BF0();
      uint64_t v72 = sub_10006863C(v53, v54, &v73);
      sub_100083A00();
      swift_bridgeObjectRelease();
      uint64_t v55 = v63;
      ((void (*)(char *, uint64_t))v63)(v42, v10);
      os_log_t v56 = v62;
      _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v61, "%{public}s: using existing snapshotter for %{public}s: %{public}s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v55)(v70, v10);
    }
    else
    {

      ((void (*)(char *, uint64_t))v16)(v42, v10);
      v59(v39, v41);

      ((void (*)(char *, uint64_t))v16)(v43, v10);
    }
  }
  else
  {
    ((void (*)(char *, uint64_t))v16)(v70, v10);
  }
  return v23;
}

uint64_t sub_100033B68(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v66 = a1;
  uint64_t v67 = a3;
  uint64_t v69 = sub_100083730();
  uint64_t v4 = *(void *)(v69 - 8);
  uint64_t v5 = __chkstk_darwin(v69);
  uint64_t v65 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v63 = (char *)&v53 - v7;
  uint64_t v8 = sub_100002874(&qword_1000A8D20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082E70();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v64 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v53 - v16;
  __chkstk_darwin(v15);
  uint64_t v68 = (char *)&v53 - v18;
  uint64_t v19 = sub_1000836A0();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  *uint64_t v22 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  char v23 = sub_1000836C0();
  (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_5;
  }
  sub_10001A720(a2, (uint64_t)v10, &qword_1000A8D20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_100019138((uint64_t)v10, &qword_1000A8D20);
  }
  a2 = (uint64_t)v68;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v68, v10, v11);
  if (qword_1000A7A00 != -1) {
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v25 = sub_100082F00();
  sub_10001859C(v25, (uint64_t)qword_1000ACBA8);
  uint64_t v26 = v63;
  uint64_t v27 = v67;
  uint64_t v28 = v69;
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v62 = v4 + 16;
  v61(v63, v67, v69);
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v60(v17, a2, v11);
  uint64_t v29 = sub_100082EE0();
  os_log_type_t v30 = sub_100083920();
  int v56 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v71 = v55;
    *(_DWORD *)uint64_t v31 = 136446722;
    os_log_t v54 = v29;
    uint64_t v70 = sub_100002874(&qword_1000A8CD8);
    sub_100002874(&qword_1000A8CE0);
    uint64_t v32 = sub_100083880();
    uint64_t v70 = sub_10006863C(v32, v33, &v71);
    sub_100083A00();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    sub_1000370BC((unint64_t *)&qword_1000A8CE8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v34 = sub_100083BF0();
    uint64_t v70 = sub_10006863C(v34, v35, &v71);
    sub_100083A00();
    swift_bridgeObjectRelease();
    id v36 = *(char **)(v4 + 8);
    uint64_t v59 = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v27 = v67;
    int v63 = v36;
    ((void (*)(char *, uint64_t))v36)(v26, v69);
    *(_WORD *)(v31 + 22) = 2082;
    sub_1000370BC(&qword_1000A8D28, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v37 = sub_100083BF0();
    uint64_t v70 = sub_10006863C(v37, v38, &v71);
    a2 = (uint64_t)v68;
    sub_100083A00();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    uint64_t v57 = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v58 = v39;
    v39(v17, v11);
    uint64_t v29 = v54;
    _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v56, "%{public}s: storing snapshotter for %{public}s: %{public}s", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v28 = v69;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v40 = *(char **)(v4 + 8);
    uint64_t v59 = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    int v63 = v40;
    ((void (*)(char *, uint64_t))v40)(v26, v28);
    uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    uint64_t v57 = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v58 = v41;
    v41(v17, v11);
  }

  id v42 = v64;
  uint64_t v43 = v11;
  uint64_t v44 = v11;
  os_log_type_t v45 = (void (*)(char *, char *, uint64_t))v60;
  v60(v64, a2, v43);
  int v46 = v65;
  uint64_t v47 = v27;
  uint64_t v48 = v61;
  v61(v65, v47, v28);
  uint64_t v49 = (objc_class *)type metadata accessor for MapSnapshotter.Context();
  unint64_t v50 = (char *)objc_allocWithZone(v49);
  v45(&v50[OBJC_IVAR____TtCC17GeneralMapsWidget14MapSnapshotterP33_D3522C9343D4C44065DB06BAD982882A7Context_identifier], v42, v44);
  v48(&v50[OBJC_IVAR____TtCC17GeneralMapsWidget14MapSnapshotterP33_D3522C9343D4C44065DB06BAD982882A7Context_family], v46, v28);
  v72.receiver = v50;
  v72.super_class = v49;
  id v51 = [super init];
  ((void (*)(char *, uint64_t))v63)(v46, v28);
  unint64_t v52 = v58;
  v58(v42, v44);
  if (qword_1000A79D8 != -1) {
    swift_once();
  }
  [(id)qword_1000A8AE8 setObject:v66 forKey:v51];

  return v52(v68, v44);
}

uint64_t sub_100034354(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000836A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t *v7 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = sub_1000836C0();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_1000A79D8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  id v9 = [(id)qword_1000A8AE8 keyEnumerator];
  id v10 = [v9 allObjects];

  uint64_t v11 = sub_1000838D0();
  uint64_t v12 = sub_1000306D8(v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v12) {
    return result;
  }
  __chkstk_darwin(result);
  v20[-2] = a1;
  unint64_t v14 = (unint64_t)sub_100034708((uint64_t (*)(id *))sub_1000346E8, &v20[-4], (unint64_t)v12);
  unint64_t v15 = v14;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100083B80();
    uint64_t v16 = result;
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v16)
    {
LABEL_6:
      if (v16 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v17 = 0;
      do
      {
        if ((v15 & 0xC000000000000001) != 0) {
          id v18 = (id)sub_100083AB0();
        }
        else {
          id v18 = *(id *)(v15 + 8 * v17 + 32);
        }
        uint64_t v19 = v18;
        ++v17;
        v20[0] = (uint64_t)v18;
        sub_1000348B4(v20, v2, a1);
      }
      while (v16 != v17);
    }
  }
  return swift_bridgeObjectRelease_n();
}

BOOL sub_100034624()
{
  sub_100083730();
  sub_1000370BC(&qword_1000A8CF0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000838B0();
  sub_1000838B0();
  return v2 == v1;
}

BOOL sub_1000346E8()
{
  return sub_100034624();
}

void *sub_100034708(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = &_swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)sub_100083AB0();
LABEL_9:
        id v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_100083AD0();
          sub_100083B00();
          unint64_t v4 = v15;
          sub_100083B10();
          sub_100083AE0();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_100083B80();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = &_swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1000348B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100083730();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100082F00();
  sub_10001859C(v11, (uint64_t)qword_1000ACBA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  uint64_t v12 = sub_100082EE0();
  os_log_type_t v13 = sub_100083930();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v23 = sub_100002874(&qword_1000A8CD8);
    sub_100002874(&qword_1000A8CE0);
    uint64_t v21 = v10;
    uint64_t v15 = sub_100083880();
    uint64_t v22 = v3;
    uint64_t v23 = sub_10006863C(v15, v16, &v24);
    sub_100083A00();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    sub_1000370BC((unint64_t *)&qword_1000A8CE8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v17 = sub_100083BF0();
    uint64_t v23 = sub_10006863C(v17, v18, &v24);
    uint64_t v10 = v21;
    sub_100083A00();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: removing snapshotter for %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  if (qword_1000A79D8 != -1) {
    swift_once();
  }
  return [(id)qword_1000A8AE8 removeObjectForKey:v10];
}

uint64_t sub_100034C08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_100034C64(void *a1, void *a2)
{
  if (a1 != (void *)1)
  {
  }
}

uint64_t sub_100034CA8()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100034CF0(void *a1, uint64_t a2)
{
  sub_1000329E8(a1, a2, *(dispatch_group_t **)(v2 + 16), *(void **)(v2 + 24), *(void (**)(id))(v2 + 32));
}

uint64_t sub_100034CFC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100034D34(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_100034D64(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1000758E8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000368C0();
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_100035C58(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100034E3C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100002874(&qword_1000A8028);
  int v38 = a2;
  uint64_t result = sub_100083BA0();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v34 = v2;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    id v36 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v35 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v20 >= v35) {
          goto LABEL_34;
        }
        unint64_t v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_34;
          }
          unint64_t v21 = v36[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v36 = -1 << v33;
              }
              uint64_t v3 = v34;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v35) {
                  goto LABEL_34;
                }
                unint64_t v21 = v36[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      Swift::UInt v23 = *(unsigned __int8 *)(*(void *)(v8 + 48) + v19);
      uint64_t v24 = *(void *)(v37 + 72);
      uint64_t v25 = *(void *)(v8 + 56) + v24 * v19;
      if (v38) {
        sub_100018E74(v25, (uint64_t)v7);
      }
      else {
        sub_100018E10(v25, (uint64_t)v7);
      }
      sub_100083C20();
      sub_100083C30(v23);
      uint64_t result = sub_100083C50();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v10 + 48) + v17) = v23;
      uint64_t result = sub_100018E74((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1000351A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100002874(&qword_1000A7F60);
  uint64_t v6 = sub_100083BA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  id v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    Swift::UInt v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    BOOL v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1000839D0(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  Swift::UInt v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100035478(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100002874(&qword_1000A80F8);
  uint64_t v6 = sub_100083BA0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v32 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v15 << 6);
      }
      else
      {
        int64_t v22 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v12) {
          goto LABEL_33;
        }
        unint64_t v23 = v9[v22];
        ++v15;
        if (!v23)
        {
          int64_t v15 = v22 + 1;
          if (v22 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v23 = v9[v15];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v9 = -1 << v31;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v9[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v15 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v23 = v9[v15];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v15 << 6);
      }
      uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
      {
        id v30 = v29;
        swift_retain();
      }
      uint64_t result = sub_1000839D0(*(void *)(v7 + 40));
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v18 == v26;
          if (v18 == v26) {
            unint64_t v18 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v18);
        }
        while (v28 == -1);
        unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v7 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10003574C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100002874(&qword_1000A8100);
  uint64_t v6 = sub_100083BA0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_10001A784((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1000185D4(v25, (uint64_t)&v38);
      sub_100034C08(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_100083A60(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_10001A784(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_100035A64(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_100083A50();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Swift::UInt v9 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
        sub_100083C20();
        sub_100083C30(v9);
        uint64_t result = sub_100083C50();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (unsigned char *)(v11 + v3);
        uint64_t v13 = (unsigned char *)(v11 + v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          unsigned char *v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot() - 8)
                        + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_100035C58(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_100083A50();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = sub_1000839D0(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            int64_t v17 = (void *)(v16 + 8 * v3);
            unint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *int64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            unint64_t v20 = (_OWORD *)(v19 + 16 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              _OWORD *v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_100035E0C(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = a2 & 1;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_100075878(a2 & 1);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1000364C8();
      goto LABEL_7;
    }
    sub_100034E3C(v13, a3 & 1);
    unint64_t v20 = sub_100075878(v7);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_100083C10();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17
        + *(void *)(*(void *)(type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot() - 8)
                    + 72)
        * v10;
    return sub_100037058(a1, v18);
  }
LABEL_13:

  return sub_1000363B4(v10, v7, a1, v16);
}

void sub_100035F58(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_100075828((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100036718();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1000351A4(v12, a3 & 1);
  unint64_t v17 = sub_100075828((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_1000188D8(0, &qword_1000A7F68);
    sub_100083C10();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v15[2] = v22;

  id v23 = a2;
}

id sub_1000360CC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v4;
  unint64_t v11 = sub_1000758E8((uint64_t)a3);
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_1000368C0();
LABEL_7:
    unint64_t v17 = (void *)*v5;
    if (v15)
    {
LABEL_8:
      char v18 = (void *)(v17[7] + 16 * v11);
      id result = (id)swift_release();
      *char v18 = a1;
      v18[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_100035478(v14, a4 & 1);
  unint64_t v20 = sub_1000758E8((uint64_t)a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1000188D8(0, &qword_1000A8D08);
    id result = (id)sub_100083C10();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  unint64_t v17 = (void *)*v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  v17[(v11 >> 6) + 8] |= 1 << v11;
  *(void *)(v17[6] + 8 * v11) = a3;
  uint64_t v22 = (void *)(v17[7] + 16 * v11);
  *uint64_t v22 = a1;
  v22[1] = a2;
  uint64_t v23 = v17[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17[2] = v25;

  return a3;
}

uint64_t sub_100036250(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100036260()
{
  return swift_release();
}

_OWORD *sub_100036268(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_100075938(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100036A90();
      goto LABEL_7;
    }
    sub_10003574C(v13, a3 & 1);
    unint64_t v19 = sub_100075938(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1000185D4(a2, (uint64_t)v21);
      return sub_10003644C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    id result = (_OWORD *)sub_100083C10();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_100037104((uint64_t)v17);

  return sub_10001A784(a1, v17);
}

uint64_t sub_1000363B4(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2 & 1;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  uint64_t result = sub_100018E74(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_10003644C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_10001A784(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

void *sub_1000364C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100002874(&qword_1000A8028);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_100083B90();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v23 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    unint64_t v19 = *(void *)(v24 + 72) * v17;
    sub_100018E10(*(void *)(v5 + 56) + v19, (uint64_t)v4);
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v18;
    uint64_t result = (void *)sub_100018E74((uint64_t)v4, *(void *)(v7 + 56) + v19);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_100036718()
{
  uint64_t v1 = v0;
  sub_100002874(&qword_1000A7F60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100083B90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    char v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000368C0()
{
  uint64_t v1 = v0;
  sub_100002874(&qword_1000A80F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100083B90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id v20 = v17;
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100036A80(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void *sub_100036A90()
{
  uint64_t v1 = v0;
  sub_100002874(&qword_1000A8100);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100083B90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1000185D4(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_100034C08(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_10001A784(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_100036C78(void *a1)
{
  id v3 = *(id *)(v1 + 48);
  *(void *)(v1 + 48) = a1;
  id v2 = a1;
}

uint64_t sub_100036CB8()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100036D84()
{
  uint64_t v1 = *(void *)(sub_100082E40() - 8);
  uint64_t v2 = *(uint64_t **)(v0 + 16);
  uint64_t v3 = (void *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_1000322D4(v2, v3);
}

uint64_t sub_100036DE8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100036E20()
{
  return sub_100031644();
}

uint64_t sub_100036E28()
{
  uint64_t v1 = *(void *)(sub_100002874(&qword_1000A7F30) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  swift_release();
  uint64_t v5 = sub_100082E40();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100036F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000A7F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100036FC0()
{
  uint64_t v1 = *(void *)(sub_100002874(&qword_1000A7F30) - 8);
  uint64_t v2 = (uint64_t *)v0[2];
  uint64_t v3 = (uint64_t (*)(uint64_t *))v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100030B50(v2, v3, v4, v5);
}

uint64_t sub_10003702C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100037058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeneralMapsStateCollector.NearbyCategorySnapshot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000370BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100037104(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

double sub_100037170(double a1, double a2, double a3, double a4)
{
  double v4 = (a2 - a4) * 0.5;
  uint64_t v5 = self;
  id v6 = [v5 mainScreen];
  [v6 scale];
  double v8 = v7;

  id v9 = [v5 mainScreen];
  [v9 scale];

  return 1.0 / v8 * round(v4 / (1.0 / v8));
}

uint64_t sub_100037244()
{
  uint64_t result = sub_1000834E0();
  qword_1000ACB80 = result;
  return result;
}

uint64_t sub_100037280()
{
  [v0 altitude];
  if ([v0 hasPitch])
  {
    [v0 altitude];
    [v0 pitch];
    double v2 = sub_100037358(v1);
    cos(v2);
  }
  [v0 latitude];
  [v0 longitude];
  double v3 = sub_100037358(30.0);
  tan(v3 * 0.5);

  return MKMapRectMakeWithRadialDistance();
}

double sub_100037358(double a1)
{
  return a1 * 0.0174532925;
}

void sub_100037368()
{
  qword_1000A8D30 = 0x4061C00000000000;
}

void sub_10003737C()
{
  qword_1000A8D38 = 0x4052400000000000;
}

uint64_t sub_100037390()
{
  MKDefaultCoordinateRegion();
  uint64_t result = MKMapRectForCoordinateRegion();
  *(void *)&xmmword_1000ACB88 = v1;
  *((void *)&xmmword_1000ACB88 + 1) = v2;
  qword_1000ACB98 = v3;
  unk_1000ACBA0 = v4;
  return result;
}

void sub_10003744C(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v62 = a5;
  id v65 = a4;
  id v66 = a3;
  uint64_t v11 = sub_100083730();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v62 - v16;
  *(void *)(v7 + 80) = 0;
  *(void *)(v7 + 88) = 0;
  *(unsigned char *)(v7 + 96) = 1;
  *(void *)(v7 + 104) = a2;
  *(_OWORD *)(v7 + 16) = xmmword_100086BB0;
  *(void *)(v7 + 32) = 0;
  id v18 = a2;
  *(void *)(v7 + 40) = dispatch_group_create();
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = sub_100008C94((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(v7 + 64) = 0;
  *(void *)(v7 + 72) = &_swiftEmptyArrayStorage;
  id v19 = objc_allocWithZone((Class)MKMapSnapshotOptions);
  swift_retain_n();
  id v20 = [v19 init];
  int64_t v21 = *(void **)(v7 + 16);
  *(void *)(v7 + 16) = v20;
  swift_release();

  unint64_t v22 = *(void **)(v7 + 16);
  if (!v22)
  {
    __break(1u);
    goto LABEL_24;
  }
  int v63 = v15;
  id v64 = v18;
  [v22 _setShowsAppleLogo:0];
  int64_t v23 = *(void **)(v7 + 16);
  if (!v23)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v24 = v23;
  uint64_t v25 = a1;
  sub_1000837D0();
  [v24 setSize:];

  uint64_t v26 = *(void **)(v7 + 16);
  if (!v26)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_100002874(&qword_1000A8F28);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100086BC0;
  uint64_t v28 = self;
  id v29 = v26;
  *(void *)(v27 + 32) = [v28 customFeatureAnnotationForMapItem:v66 styleAttributes:v65 suppressLabel:1];
  uint64_t v67 = v27;
  sub_1000838E0();
  sub_100002874(&qword_1000A8F30);
  Class isa = sub_1000838C0().super.isa;
  swift_bridgeObjectRelease();
  [v29 _setCustomFeatureAnnotations:isa];

  char v31 = *(void **)(v7 + 16);
  if (!v31)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  [v31 _setSearchResultsType:1];
  uint64_t v32 = v25;
  if (a6)
  {
    BOOL v33 = *(void **)(v7 + 16);
    if (v33)
    {
      id v34 = a6;
      id v35 = v33;
      id v36 = [v34 destination];
      if (v36)
      {
        uint64_t v37 = v36;
        [v36 coordinate];
        double v39 = v38;
        double v41 = v40;
        double v43 = v42;

        nullsub_1(v39, v41, v43);
        CLLocationCoordinate2DFromGEOLocationCoordinate2D();
        sub_100037E8C(v32, v34);
        [v35 setMapRect:];

        sub_1000837E0();
        uint64_t v44 = v63;
        (*(void (**)(char *, void, uint64_t))(v12 + 104))(v63, enum case for WidgetFamily.systemSmall(_:), v11);
        sub_100038120();
        char v45 = sub_100083840();
        int v46 = *(void (**)(char *, uint64_t))(v12 + 8);
        v46(v44, v11);
        v46(v17, v11);
        if ((v45 & 1) == 0)
        {
          uint64_t v47 = *(void **)(v7 + 16);
          if (!v47)
          {
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
          [v47 _setComposedRouteForRouteLine:v34];
        }
        uint64_t v48 = *(void **)(v7 + 16);
        if (v48)
        {
          id v49 = v48;
          [v49 setMapType:[v34 mapType]];

LABEL_22:
          swift_release();
          uint64_t v61 = sub_1000837F0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v32, v61);
          return;
        }
        goto LABEL_29;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v50 = *(void **)(v7 + 16);
  if (!v50)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v51 = v66;
  id v52 = v50;
  sub_1000837D0();
  id v55 = [self cameraLookingAtMapItem:v51 forViewSize:1 allowPitch:v53];

  [v52 setCamera:v55];
  int v56 = *(void **)(v7 + 16);
  if (!v56)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  id v57 = v56;
  sub_100037BC8();
  [v57 _setEdgeInsets:];

  if ((v62 & 0x100000000) != 0)
  {

    goto LABEL_22;
  }
  uint64_t v58 = *(void **)(v7 + 16);
  if (v58)
  {
    if (v62 == 1) {
      uint64_t v59 = 104;
    }
    else {
      uint64_t v59 = 0;
    }
    id v60 = v58;
    [v60 setMapType:v59];

    goto LABEL_22;
  }
LABEL_33:
  __break(1u);
}

void sub_100037A08(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 104);
  if (v2 && *(unsigned char *)(v1 + 96) == 1)
  {
    id v4 = v2;
    id v5 = [a1 image];
    [v5 size];
    CGFloat v7 = v6;
    CGFloat v9 = v8;

    if (qword_1000A7A18 != -1) {
      swift_once();
    }
    v20.origin.CGFloat x = 0.0;
    v20.origin.CGFloat y = 0.0;
    v20.size.CGFloat width = v7;
    v20.size.CGFloat height = v9;
    CGRect v21 = CGRectInset(v20, -*(double *)&qword_1000ACBD8, -*(double *)&qword_1000ACBD8);
    CGFloat x = v21.origin.x;
    CGFloat y = v21.origin.y;
    CGFloat width = v21.size.width;
    CGFloat height = v21.size.height;
    [v4 coordinate];
    [a1 pointForCoordinate:];
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    v22.origin.CGFloat x = x;
    v22.origin.CGFloat y = y;
    v22.size.CGFloat width = width;
    v22.size.CGFloat height = height;
    v19.CGFloat x = v15;
    v19.CGFloat y = v17;
    BOOL v18 = CGRectContainsPoint(v22, v19);

    if (v18)
    {
      *(CGFloat *)(v1 + 80) = v15;
      *(CGFloat *)(v1 + 88) = v17;
      *(unsigned char *)(v1 + 96) = 0;
    }
  }
}

void sub_100037B54()
{
}

uint64_t sub_100037B5C()
{
  uint64_t v0 = sub_100032D14();

  return _swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for SuggestedDestinationSnapshotter()
{
  return self;
}

uint64_t sub_100037BC8()
{
  uint64_t v0 = sub_100083730();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000837E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (result == enum case for WidgetFamily.systemSmall(_:))
  {
    if (qword_1000A79F0 == -1) {
      return result;
    }
    return swift_once();
  }
  if (result == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t result = sub_1000837D0();
    double v6 = v5 * 0.5;
    if (qword_1000A79B8 != -1)
    {
      *(double *)&v7[1] = v6;
      return swift_once();
    }
  }
  else
  {
    if (result != enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t result = sub_100083B70();
      __break(1u);
      return result;
    }
    if (qword_1000A79E8 != -1) {
      return swift_once();
    }
  }
  return result;
}

uint64_t sub_100037E8C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100083730();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000837E0();
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for WidgetFamily.systemSmall(_:))
  {
    MKMapRectMakeWithRadialDistance();
  }
  else
  {
    if (v7 != enum case for WidgetFamily.systemMedium(_:) && v7 != enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t result = sub_100083B70();
      __break(1u);
      return result;
    }
    id v9 = [a2 boundingMapRegion];
    GEOMapRectForMapRegion();
  }
  sub_1000837D0();
  sub_100037BC8();
  return _MKMapRectThatFits();
}

unint64_t sub_100038120()
{
  unint64_t result = qword_1000A8F38;
  if (!qword_1000A8F38)
  {
    sub_100083730();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8F38);
  }
  return result;
}

uint64_t *sub_100038178(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_100002874(&qword_1000A8F40) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = v4;
  uint64_t v7 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
    return a1;
  }
  uint64_t v10 = sub_100082E40();
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
  uint64_t v11 = *(int *)(v7 + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      CGRect v22 = *(void **)v13;
      uint64_t v97 = v15;
      if (*(void *)v13 == 1)
      {
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      }
      else
      {
        double v38 = (void *)*((void *)v13 + 1);
        *(void *)uint64_t v12 = v22;
        *((void *)v12 + 1) = v38;
        id v39 = v22;
        id v40 = v38;
      }
      uint64_t v41 = *((void *)v13 + 3);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = v41;
      *((_DWORD *)v12 + 8) = *((_DWORD *)v13 + 8);
      v12[36] = v13[36];
      uint64_t v42 = *((void *)v13 + 6);
      *((void *)v12 + 5) = *((void *)v13 + 5);
      *((void *)v12 + 6) = v42;
      v12[56] = v13[56];
      uint64_t v43 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      uint64_t v91 = &v13[v43];
      __dsta = &v12[v43];
      uint64_t v44 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v88 = *(void *)(v44 - 8);
      char v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
      uint64_t v46 = v44;
      swift_bridgeObjectRetain();
      BOOL v33 = v91;
      swift_bridgeObjectRetain();
      if (!v45(v91, 1, v46))
      {
        uint64_t v56 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(__dsta, v91, v56);
        uint64_t v57 = *(int *)(v46 + 20);
        uint64_t v58 = &__dsta[v57];
        uint64_t v59 = &v91[v57];
        id v60 = *(void **)&v91[v57];
        uint64_t v15 = v97;
        if (v60 == (void *)1)
        {
          *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
        }
        else
        {
          uint64_t v85 = (void *)*((void *)v59 + 1);
          *(void *)uint64_t v58 = v60;
          *((void *)v58 + 1) = v85;
          id v86 = v60;
          id v87 = v85;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(__dsta, 0, 1, v46);
        goto LABEL_30;
      }
      size_t v36 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A78) - 8) + 64);
      uint64_t v37 = __dsta;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        *(void *)uint64_t v12 = *(void *)v13;
        v12[8] = v13[8];
        uint64_t v23 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
        __dst = &v12[v23];
        id v24 = &v13[v23];
        uint64_t v25 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        uint64_t v26 = *((void *)v25 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
        {
          uint64_t v27 = sub_100002874(&qword_1000A7A60);
          memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          uint64_t v92 = v26;
          uint64_t v98 = v15;
          uint64_t v47 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(__dst, v24, v47);
          *(void *)&__dst[v25[5]] = *(void *)&v24[v25[5]];
          uint64_t v48 = v25[6];
          uint64_t v90 = &__dst[v48];
          id v49 = &v24[v48];
          unint64_t v50 = *(void **)&v24[v48];
          swift_bridgeObjectRetain();
          if (v50 == (void *)1)
          {
            *(_OWORD *)uint64_t v90 = *(_OWORD *)v49;
          }
          else
          {
            uint64_t v61 = (void *)*((void *)v49 + 1);
            *(void *)uint64_t v90 = v50;
            *((void *)v90 + 1) = v61;
            id v62 = v50;
            id v63 = v61;
          }
          uint64_t v15 = v98;
          uint64_t v64 = v25[7];
          id v65 = &__dst[v64];
          id v66 = &v24[v64];
          *(void *)id v65 = *(void *)v66;
          v65[8] = v66[8];
          (*(void (**)(void))(v92 + 56))();
        }
        goto LABEL_30;
      }
      uint64_t v97 = v15;
      uint64_t v18 = *((void *)v13 + 1);
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = v18;
      uint64_t v19 = *((void *)v13 + 3);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = v19;
      uint64_t v20 = *((void *)v13 + 5);
      *((void *)v12 + 4) = *((void *)v13 + 4);
      *((void *)v12 + 5) = v20;
      v12[48] = v13[48];
      CGRect v21 = (void *)*((void *)v13 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21 == (void *)1)
      {
        *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
      }
      else
      {
        uint64_t v28 = (void *)*((void *)v13 + 8);
        *((void *)v12 + 7) = v21;
        *((void *)v12 + 8) = v28;
        id v29 = v21;
        id v30 = v28;
      }
      *((_DWORD *)v12 + 18) = *((_DWORD *)v13 + 18);
      v12[76] = v13[76];
      uint64_t v31 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      uint64_t v32 = &v12[v31];
      BOOL v33 = &v13[v31];
      id v34 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v35 = *((void *)v34 - 1);
      if (!(*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v51 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v32, v33, v51);
        uint64_t v52 = v34[5];
        double v53 = &v32[v52];
        double v54 = &v33[v52];
        id v55 = *(void **)&v33[v52];
        __dstb = v32;
        uint64_t v89 = v35;
        if (v55 == (void *)1)
        {
          *(_OWORD *)double v53 = *(_OWORD *)v54;
        }
        else
        {
          objc_super v74 = (void *)*((void *)v54 + 1);
          *(void *)double v53 = v55;
          *((void *)v53 + 1) = v74;
          id v75 = v55;
          id v76 = v74;
          uint64_t v32 = __dstb;
        }
        uint64_t v77 = v34[6];
        uint64_t v78 = &v32[v77];
        uint64_t v79 = &v33[v77];
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        v78[16] = v79[16];
        uint64_t v80 = v34[7];
        uint64_t v93 = &v32[v80];
        uint64_t v81 = &v33[v80];
        uint64_t v82 = sub_100082D90();
        uint64_t v83 = *(void *)(v82 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
        {
          uint64_t v84 = sub_100002874(&qword_1000A7A68);
          memcpy(v93, v81, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v93, v81, v82);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v93, 0, 1, v82);
        }
        (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(__dstb, 0, 1, v34);
        uint64_t v15 = v97;
        goto LABEL_30;
      }
      size_t v36 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
      uint64_t v37 = v32;
    }
    memcpy(v37, v33, v36);
    uint64_t v15 = v97;
LABEL_30:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    goto LABEL_31;
  }
  uint64_t v16 = sub_100002874(&qword_1000A7B28);
  memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_31:
  uint64_t v67 = *(int *)(v7 + 24);
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  uint64_t v70 = sub_1000837C0();
  uint64_t v71 = *(void *)(v70 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    uint64_t v72 = sub_100002874(&qword_1000A7B30);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_100038AD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (result) {
    return result;
  }
  uint64_t v4 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(v2 + 20);
  uint64_t v6 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)) {
    goto LABEL_3;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      if (*(void *)v5 != 1)
      {
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      uint64_t v15 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v10, 1, v15)) {
        break;
      }
      uint64_t v16 = sub_1000837F0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v10, v16);
      uint64_t v13 = *(int *)(v15 + 20);
      goto LABEL_17;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void **)(v5 + 56);
      if (v18 != (void *)1)
      {
      }
      uint64_t v19 = v5 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      uint64_t v20 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
      {
        uint64_t v21 = sub_1000837F0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
        CGRect v22 = (id *)(v19 + *(int *)(v20 + 20));
        if (*v22 != (id)1)
        {
        }
        uint64_t v23 = v19 + *(int *)(v20 + 28);
        uint64_t v24 = sub_100082D90();
        uint64_t v25 = *(void *)(v24 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
        }
      }
      break;
    case 0:
      uint64_t v10 = v5 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      uint64_t v11 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
      {
        uint64_t v12 = sub_1000837F0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
        swift_bridgeObjectRelease();
        uint64_t v13 = *(int *)(v11 + 24);
LABEL_17:
        CGFloat v17 = (id *)(v10 + v13);
        if (*v17 != (id)1)
        {
        }
      }
      break;
  }
LABEL_3:
  uint64_t v7 = a1 + *(int *)(v2 + 24);
  uint64_t v8 = sub_1000837C0();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    return v14(v7, v8);
  }
  return result;
}

char *sub_100038F90(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100002874(&qword_1000A8F40);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    return a1;
  }
  uint64_t v7 = sub_100082E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = *(int *)(v4 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v19 = *(void **)v10;
      uint64_t v94 = v12;
      if (*(void *)v10 == 1)
      {
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
      else
      {
        uint64_t v35 = (void *)*((void *)v10 + 1);
        *(void *)uint64_t v9 = v19;
        *((void *)v9 + 1) = v35;
        id v36 = v19;
        id v37 = v35;
      }
      uint64_t v38 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v38;
      *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
      v9[36] = v10[36];
      uint64_t v39 = *((void *)v10 + 6);
      *((void *)v9 + 5) = *((void *)v10 + 5);
      *((void *)v9 + 6) = v39;
      v9[56] = v10[56];
      uint64_t v40 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      uint64_t v88 = &v9[v40];
      __dsta = &v10[v40];
      uint64_t v41 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v85 = *(void *)(v41 - 8);
      uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
      uint64_t v43 = v41;
      swift_bridgeObjectRetain();
      id v30 = __dsta;
      swift_bridgeObjectRetain();
      if (!v42(__dsta, 1, v43))
      {
        uint64_t v53 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v88, __dsta, v53);
        uint64_t v54 = *(int *)(v43 + 20);
        id v55 = &v88[v54];
        uint64_t v56 = &__dsta[v54];
        uint64_t v57 = *(void **)&__dsta[v54];
        uint64_t v12 = v94;
        if (v57 == (void *)1)
        {
          *(_OWORD *)id v55 = *(_OWORD *)v56;
        }
        else
        {
          uint64_t v82 = (void *)*((void *)v56 + 1);
          *(void *)id v55 = v57;
          *((void *)v55 + 1) = v82;
          id v83 = v57;
          id v84 = v82;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v88, 0, 1, v43);
        goto LABEL_28;
      }
      size_t v33 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A78) - 8) + 64);
      id v34 = v88;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        *(void *)uint64_t v9 = *(void *)v10;
        v9[8] = v10[8];
        uint64_t v20 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
        __dst = &v9[v20];
        uint64_t v21 = &v10[v20];
        CGRect v22 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        uint64_t v23 = (unsigned int (**)(const void *, uint64_t, int *))*((void *)v22 - 1);
        if (v23[6](v21, 1, v22))
        {
          uint64_t v24 = sub_100002874(&qword_1000A7A60);
          memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v89 = (void (**)(void))v23;
          uint64_t v95 = v12;
          uint64_t v44 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(__dst, v21, v44);
          *(void *)&__dst[v22[5]] = *(void *)&v21[v22[5]];
          uint64_t v45 = v22[6];
          id v87 = &__dst[v45];
          uint64_t v46 = &v21[v45];
          uint64_t v47 = *(void **)&v21[v45];
          swift_bridgeObjectRetain();
          if (v47 == (void *)1)
          {
            *(_OWORD *)id v87 = *(_OWORD *)v46;
          }
          else
          {
            uint64_t v58 = (void *)*((void *)v46 + 1);
            *(void *)id v87 = v47;
            *((void *)v87 + 1) = v58;
            id v59 = v47;
            id v60 = v58;
          }
          uint64_t v12 = v95;
          uint64_t v61 = v22[7];
          id v62 = &__dst[v61];
          id v63 = &v21[v61];
          *(void *)id v62 = *(void *)v63;
          v62[8] = v63[8];
          v89[7]();
        }
        goto LABEL_28;
      }
      uint64_t v94 = v12;
      uint64_t v15 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v15;
      uint64_t v16 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v16;
      uint64_t v17 = *((void *)v10 + 5);
      *((void *)v9 + 4) = *((void *)v10 + 4);
      *((void *)v9 + 5) = v17;
      v9[48] = v10[48];
      uint64_t v18 = (void *)*((void *)v10 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 == (void *)1)
      {
        *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
      }
      else
      {
        uint64_t v25 = (void *)*((void *)v10 + 8);
        *((void *)v9 + 7) = v18;
        *((void *)v9 + 8) = v25;
        id v26 = v18;
        id v27 = v25;
      }
      *((_DWORD *)v9 + 18) = *((_DWORD *)v10 + 18);
      v9[76] = v10[76];
      uint64_t v28 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      id v29 = &v9[v28];
      id v30 = &v10[v28];
      uint64_t v31 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v32 = *((void *)v31 - 1);
      if (!(*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
      {
        uint64_t v48 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v29, v30, v48);
        uint64_t v49 = v31[5];
        unint64_t v50 = &v29[v49];
        uint64_t v51 = &v30[v49];
        uint64_t v52 = *(void **)&v30[v49];
        __dstb = v29;
        uint64_t v86 = v32;
        if (v52 == (void *)1)
        {
          *(_OWORD *)unint64_t v50 = *(_OWORD *)v51;
        }
        else
        {
          uint64_t v71 = (void *)*((void *)v51 + 1);
          *(void *)unint64_t v50 = v52;
          *((void *)v50 + 1) = v71;
          id v72 = v52;
          id v73 = v71;
          id v29 = __dstb;
        }
        uint64_t v74 = v31[6];
        id v75 = &v29[v74];
        id v76 = &v30[v74];
        *(_OWORD *)id v75 = *(_OWORD *)v76;
        v75[16] = v76[16];
        uint64_t v77 = v31[7];
        uint64_t v90 = &v29[v77];
        uint64_t v78 = &v30[v77];
        uint64_t v79 = sub_100082D90();
        uint64_t v80 = *(void *)(v79 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
        {
          uint64_t v81 = sub_100002874(&qword_1000A7A68);
          memcpy(v90, v78, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v90, v78, v79);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v90, 0, 1, v79);
        }
        (*(void (**)(char *, void, uint64_t, int *))(v86 + 56))(__dstb, 0, 1, v31);
        uint64_t v12 = v94;
        goto LABEL_28;
      }
      size_t v33 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
      id v34 = v29;
    }
    memcpy(v34, v30, v33);
    uint64_t v12 = v94;
LABEL_28:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    goto LABEL_29;
  }
  uint64_t v13 = sub_100002874(&qword_1000A7B28);
  memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_29:
  uint64_t v64 = *(int *)(v4 + 24);
  id v65 = &a1[v64];
  id v66 = &a2[v64];
  uint64_t v67 = sub_1000837C0();
  uint64_t v68 = *(void *)(v67 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    uint64_t v69 = sub_100002874(&qword_1000A7B30);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1000398B0(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6((uint64_t)a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_10003EA10(a1, type metadata accessor for GeneralMapsTimelineEntry);
      goto LABEL_7;
    }
    uint64_t v18 = sub_100082E40();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 24))(a1, a2, v18);
    uint64_t v19 = *(int *)(v4 + 20);
    uint64_t v20 = (char *)(a1 + v19);
    uint64_t v21 = &a2[v19];
    uint64_t v22 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    int v25 = v24(v20, 1, v22);
    int v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          id v63 = *(void **)v21;
          if (*(void *)v21 == 1)
          {
            *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
          }
          else
          {
            *(void *)uint64_t v20 = v63;
            uint64_t v96 = (void *)*((void *)v21 + 1);
            *((void *)v20 + 1) = v96;
            id v97 = v63;
            id v98 = v96;
          }
          *((void *)v20 + 2) = *((void *)v21 + 2);
          *((void *)v20 + 3) = *((void *)v21 + 3);
          int v99 = *((_DWORD *)v21 + 8);
          v20[36] = v21[36];
          *((_DWORD *)v20 + 8) = v99;
          *((void *)v20 + 5) = *((void *)v21 + 5);
          *((void *)v20 + 6) = *((void *)v21 + 6);
          v20[56] = v21[56];
          uint64_t v100 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
          __dstc = &v20[v100];
          uint64_t v258 = &v21[v100];
          uint64_t v101 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
          uint64_t v243 = *(void *)(v101 - 8);
          uint64_t v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v243 + 48);
          uint64_t v103 = v101;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!v102(v258, 1, v103))
          {
            uint64_t v150 = sub_1000837F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(__dstc, v258, v150);
            uint64_t v151 = *(int *)(v103 + 20);
            id v152 = &__dstc[v151];
            uint64_t v153 = &v258[v151];
            v154 = *(void **)&v258[v151];
            if (v154 == (void *)1)
            {
              *(_OWORD *)id v152 = *(_OWORD *)v153;
            }
            else
            {
              *(void *)id v152 = v154;
              uint64_t v194 = (void *)*((void *)v153 + 1);
              *((void *)v152 + 1) = v194;
              id v195 = v154;
              id v196 = v194;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v243 + 56))(__dstc, 0, 1, v103);
            goto LABEL_102;
          }
          size_t v93 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A78) - 8) + 64);
          uint64_t v94 = __dstc;
          uint64_t v95 = v258;
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            uint64_t v64 = *(void **)v21;
            v20[8] = v21[8];
            *(void *)uint64_t v20 = v64;
            uint64_t v65 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
            unint64_t v257 = &v20[v65];
            id v66 = &v21[v65];
            uint64_t v67 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
            uint64_t v68 = (unsigned int (**)(const void *, uint64_t, int *))*((void *)v67 - 1);
            if (v68[6](v66, 1, v67))
            {
              uint64_t v69 = sub_100002874(&qword_1000A7A60);
              memcpy(v257, v66, *(void *)(*(void *)(v69 - 8) + 64));
            }
            else
            {
              __dstd = (void (**)(void))v68;
              uint64_t v141 = sub_1000837F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v257, v66, v141);
              *(void *)&v257[v67[5]] = *(void *)&v66[v67[5]];
              uint64_t v142 = v67[6];
              uint64_t v248 = &v257[v142];
              uint64_t v143 = &v66[v142];
              unint64_t v144 = *(void **)&v66[v142];
              swift_bridgeObjectRetain();
              if (v144 == (void *)1)
              {
                *(_OWORD *)uint64_t v248 = *(_OWORD *)v143;
              }
              else
              {
                *(void *)uint64_t v248 = v144;
                v175 = (void *)*((void *)v143 + 1);
                *((void *)v248 + 1) = v175;
                id v176 = v144;
                id v177 = v175;
              }
              uint64_t v178 = v67[7];
              v179 = &v257[v178];
              v180 = &v66[v178];
              uint64_t v181 = *(void *)v180;
              v179[8] = v180[8];
              *(void *)v179 = v181;
              __dstd[7]();
            }
            goto LABEL_102;
          }
          *(void *)uint64_t v20 = *(void *)v21;
          *((void *)v20 + 1) = *((void *)v21 + 1);
          *((void *)v20 + 2) = *((void *)v21 + 2);
          *((void *)v20 + 3) = *((void *)v21 + 3);
          *((void *)v20 + 4) = *((void *)v21 + 4);
          uint64_t v28 = *((void *)v21 + 5);
          v20[48] = v21[48];
          *((void *)v20 + 5) = v28;
          id v29 = (void *)*((void *)v21 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v29 == (void *)1)
          {
            *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
          }
          else
          {
            *((void *)v20 + 7) = v29;
            id v84 = (void *)*((void *)v21 + 8);
            *((void *)v20 + 8) = v84;
            id v85 = v29;
            id v86 = v84;
          }
          int v87 = *((_DWORD *)v21 + 18);
          v20[76] = v21[76];
          *((_DWORD *)v20 + 18) = v87;
          uint64_t v88 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
          uint64_t v89 = &v20[v88];
          uint64_t v90 = &v21[v88];
          uint64_t v91 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
          uint64_t v92 = *((void *)v91 - 1);
          if (!(*(unsigned int (**)(char *, uint64_t, int *))(v92 + 48))(v90, 1, v91))
          {
            uint64_t v145 = sub_1000837F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v89, v90, v145);
            uint64_t v146 = v91[5];
            NSString v147 = &v89[v146];
            id v148 = &v90[v146];
            uint64_t v149 = *(void **)&v90[v146];
            uint64_t v259 = v89;
            uint64_t v244 = v92;
            if (v149 == (void *)1)
            {
              *(_OWORD *)NSString v147 = *(_OWORD *)v148;
            }
            else
            {
              *(void *)NSString v147 = v149;
              unint64_t v182 = (void *)*((void *)v148 + 1);
              *((void *)v147 + 1) = v182;
              id v183 = v149;
              id v184 = v182;
              uint64_t v89 = v259;
            }
            uint64_t v185 = v91[6];
            v186 = &v89[v185];
            id v187 = &v90[v185];
            long long v188 = *(_OWORD *)v187;
            v186[16] = v187[16];
            *(_OWORD *)v186 = v188;
            uint64_t v189 = v91[7];
            __dste = &v89[v189];
            os_log_type_t v190 = &v90[v189];
            uint64_t v191 = sub_100082D90();
            uint64_t v192 = *(void *)(v191 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48))(v190, 1, v191))
            {
              uint64_t v193 = sub_100002874(&qword_1000A7A68);
              memcpy(__dste, v190, *(void *)(*(void *)(v193 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v192 + 16))(__dste, v190, v191);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v192 + 56))(__dste, 0, 1, v191);
            }
            (*(void (**)(char *, void, uint64_t, int *))(v244 + 56))(v259, 0, 1, v91);
            goto LABEL_102;
          }
          size_t v93 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
          uint64_t v94 = v89;
          uint64_t v95 = v90;
        }
        memcpy(v94, v95, v93);
LABEL_102:
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        goto LABEL_103;
      }
    }
    else
    {
      if (!v26)
      {
        if ((char *)a1 != a2)
        {
          sub_10003EA10((uint64_t)v20, type metadata accessor for GeneralMapsTimelineEntryContent);
          int v41 = swift_getEnumCaseMultiPayload();
          if (v41 == 2)
          {
            uint64_t v133 = *(void **)v21;
            if (*(void *)v21 == 1)
            {
              *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
            }
            else
            {
              *(void *)uint64_t v20 = v133;
              v165 = (void *)*((void *)v21 + 1);
              *((void *)v20 + 1) = v165;
              id v166 = v133;
              id v167 = v165;
            }
            *((void *)v20 + 2) = *((void *)v21 + 2);
            *((void *)v20 + 3) = *((void *)v21 + 3);
            int v168 = *((_DWORD *)v21 + 8);
            v20[36] = v21[36];
            *((_DWORD *)v20 + 8) = v168;
            *((void *)v20 + 5) = *((void *)v21 + 5);
            *((void *)v20 + 6) = *((void *)v21 + 6);
            v20[56] = v21[56];
            uint64_t v169 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
            v260 = &v21[v169];
            v262 = &v20[v169];
            uint64_t v170 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
            uint64_t v171 = *(void *)(v170 - 8);
            uint64_t v172 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48);
            uint64_t v173 = v170;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v172(v260, 1, v173))
            {
              uint64_t v174 = sub_100002874(&qword_1000A7A78);
              memcpy(v262, v260, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              uint64_t v206 = sub_1000837F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16))(v262, v260, v206);
              uint64_t v207 = *(int *)(v173 + 20);
              uint64_t v208 = &v262[v207];
              uint64_t v209 = &v260[v207];
              v210 = *(void **)&v260[v207];
              if (v210 == (void *)1)
              {
                *(_OWORD *)uint64_t v208 = *(_OWORD *)v209;
              }
              else
              {
                *(void *)uint64_t v208 = v210;
                v237 = (void *)*((void *)v209 + 1);
                *((void *)v208 + 1) = v237;
                id v238 = v210;
                id v239 = v237;
              }
              (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v262, 0, 1, v173);
            }
          }
          else if (v41 == 1)
          {
            *(void *)uint64_t v20 = *(void *)v21;
            *((void *)v20 + 1) = *((void *)v21 + 1);
            *((void *)v20 + 2) = *((void *)v21 + 2);
            *((void *)v20 + 3) = *((void *)v21 + 3);
            *((void *)v20 + 4) = *((void *)v21 + 4);
            uint64_t v42 = *((void *)v21 + 5);
            v20[48] = v21[48];
            *((void *)v20 + 5) = v42;
            uint64_t v43 = (void *)*((void *)v21 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v43 == (void *)1)
            {
              *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
            }
            else
            {
              *((void *)v20 + 7) = v43;
              char v155 = (void *)*((void *)v21 + 8);
              *((void *)v20 + 8) = v155;
              id v156 = v43;
              id v157 = v155;
            }
            int v158 = *((_DWORD *)v21 + 18);
            v20[76] = v21[76];
            *((_DWORD *)v20 + 18) = v158;
            uint64_t v159 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
            uint64_t v160 = &v20[v159];
            v161 = &v21[v159];
            char v162 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
            uint64_t v163 = *((void *)v162 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v163 + 48))(v161, 1, v162))
            {
              uint64_t v164 = sub_100002874(&qword_1000A7A70);
              memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              uint64_t v201 = sub_1000837F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(v160, v161, v201);
              uint64_t v202 = v162[5];
              uint64_t v203 = &v160[v202];
              v204 = &v161[v202];
              uint64_t v205 = *(void **)&v161[v202];
              if (v205 == (void *)1)
              {
                *(_OWORD *)uint64_t v203 = *(_OWORD *)v204;
              }
              else
              {
                *(void *)uint64_t v203 = v205;
                v225 = (void *)*((void *)v204 + 1);
                *((void *)v203 + 1) = v225;
                id v226 = v205;
                id v227 = v225;
              }
              uint64_t v228 = v162[6];
              unint64_t v229 = &v160[v228];
              os_log_type_t v230 = &v161[v228];
              long long v231 = *(_OWORD *)v230;
              v229[16] = v230[16];
              *(_OWORD *)unint64_t v229 = v231;
              uint64_t v232 = v162[7];
              __dstf = v160;
              uint64_t v264 = &v160[v232];
              uint64_t v233 = &v161[v232];
              uint64_t v234 = sub_100082D90();
              uint64_t v235 = *(void *)(v234 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v235 + 48))(v233, 1, v234))
              {
                uint64_t v236 = sub_100002874(&qword_1000A7A68);
                memcpy(v264, v233, *(void *)(*(void *)(v236 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v264, v233, v234);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56))(v264, 0, 1, v234);
              }
              (*(void (**)(char *, void, uint64_t, int *))(v163 + 56))(__dstf, 0, 1, v162);
            }
          }
          else
          {
            uint64_t v134 = *(void **)v21;
            v20[8] = v21[8];
            *(void *)uint64_t v20 = v134;
            uint64_t v135 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
            uint64_t v136 = &v20[v135];
            uint64_t v137 = &v21[v135];
            uint64_t v138 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
            uint64_t v139 = *((void *)v138 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v139 + 48))(v137, 1, v138))
            {
              uint64_t v140 = sub_100002874(&qword_1000A7A60);
              memcpy(v136, v137, *(void *)(*(void *)(v140 - 8) + 64));
            }
            else
            {
              uint64_t v197 = sub_1000837F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v136, v137, v197);
              *(void *)&v136[v138[5]] = *(void *)&v137[v138[5]];
              uint64_t v198 = v138[6];
              uint64_t v261 = &v136[v198];
              v263 = v136;
              uint64_t v199 = &v137[v198];
              uint64_t v200 = *(void **)&v137[v198];
              swift_bridgeObjectRetain();
              if (v200 == (void *)1)
              {
                *(_OWORD *)uint64_t v261 = *(_OWORD *)v199;
              }
              else
              {
                *(void *)uint64_t v261 = v200;
                v218 = (void *)*((void *)v199 + 1);
                *((void *)v261 + 1) = v218;
                id v219 = v200;
                id v220 = v218;
              }
              uint64_t v221 = v138[7];
              v222 = &v263[v221];
              v223 = &v137[v221];
              uint64_t v224 = *(void *)v223;
              v222[8] = v223[8];
              *(void *)v222 = v224;
              (*(void (**)(void))(v139 + 56))();
            }
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_103;
      }
      sub_10003EA10((uint64_t)v20, type metadata accessor for GeneralMapsTimelineEntryContent);
    }
    uint64_t v33 = sub_100002874(&qword_1000A7B28);
    memcpy(v20, v21, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_103:
    uint64_t v211 = *(int *)(v4 + 24);
    v212 = (void *)(a1 + v211);
    a2 += v211;
    uint64_t v213 = sub_1000837C0();
    uint64_t v214 = *(void *)(v213 - 8);
    v215 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v214 + 48);
    int v216 = v215(v212, 1, v213);
    int v217 = v215(a2, 1, v213);
    if (v216)
    {
      if (!v217)
      {
        (*(void (**)(void *, char *, uint64_t))(v214 + 16))(v212, a2, v213);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v214 + 56))(v212, 0, 1, v213);
        return a1;
      }
    }
    else
    {
      if (!v217)
      {
        (*(void (**)(void *, char *, uint64_t))(v214 + 24))(v212, a2, v213);
        return a1;
      }
      (*(void (**)(void *, uint64_t))(v214 + 8))(v212, v213);
    }
    size_t v16 = *(void *)(*(void *)(sub_100002874(&qword_1000A7B30) - 8) + 64);
    uint64_t v17 = v212;
    goto LABEL_8;
  }
  if (v8)
  {
LABEL_7:
    size_t v16 = *(void *)(*(void *)(sub_100002874(&qword_1000A8F40) - 8) + 64);
    uint64_t v17 = (void *)a1;
LABEL_8:
    memcpy(v17, a2, v16);
    return a1;
  }
  uint64_t v9 = sub_100082E40();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  uint64_t v10 = *(int *)(v4 + 20);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v14 = *(void **)(v13 - 8);
  if (!(*((unsigned int (**)(char *, uint64_t, uint64_t))v14 + 6))(v12, 1, v13))
  {
    int v30 = swift_getEnumCaseMultiPayload();
    if (v30 == 2)
    {
      id v34 = *(void **)v12;
      unint64_t v256 = v14;
      if (*(void *)v12 == 1)
      {
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      }
      else
      {
        *(void *)uint64_t v11 = v34;
        id v55 = (void *)*((void *)v12 + 1);
        *((void *)v11 + 1) = v55;
        id v56 = v34;
        id v57 = v55;
      }
      *((void *)v11 + 2) = *((void *)v12 + 2);
      *((void *)v11 + 3) = *((void *)v12 + 3);
      int v58 = *((_DWORD *)v12 + 8);
      v11[36] = v12[36];
      *((_DWORD *)v11 + 8) = v58;
      *((void *)v11 + 5) = *((void *)v12 + 5);
      *((void *)v11 + 6) = *((void *)v12 + 6);
      v11[56] = v12[56];
      uint64_t v59 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      v245 = &v11[v59];
      __dsta = &v12[v59];
      uint64_t v60 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v240 = *(void *)(v60 - 8);
      uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v240 + 48);
      uint64_t v62 = v60;
      swift_bridgeObjectRetain();
      unint64_t v50 = __dsta;
      swift_bridgeObjectRetain();
      if (!v61(__dsta, 1, v62))
      {
        uint64_t v79 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v245, __dsta, v79);
        uint64_t v80 = *(int *)(v62 + 20);
        uint64_t v81 = &v245[v80];
        uint64_t v82 = &__dsta[v80];
        id v83 = *(void **)&__dsta[v80];
        uint64_t v14 = v256;
        if (v83 == (void *)1)
        {
          *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
        }
        else
        {
          *(void *)uint64_t v81 = v83;
          uint64_t v130 = (void *)*((void *)v82 + 1);
          *((void *)v81 + 1) = v130;
          id v131 = v83;
          id v132 = v130;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v240 + 56))(v245, 0, 1, v62);
        goto LABEL_58;
      }
      size_t v53 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A78) - 8) + 64);
      uint64_t v54 = v245;
    }
    else
    {
      if (v30 != 1)
      {
        uint64_t v35 = *(void **)v12;
        v11[8] = v12[8];
        *(void *)uint64_t v11 = v35;
        uint64_t v36 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
        __dst = &v11[v36];
        id v37 = &v12[v36];
        uint64_t v38 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        uint64_t v39 = (unsigned int (**)(const void *, uint64_t, int *))*((void *)v38 - 1);
        if (v39[6](v37, 1, v38))
        {
          uint64_t v40 = sub_100002874(&qword_1000A7A60);
          memcpy(__dst, v37, *(void *)(*(void *)(v40 - 8) + 64));
LABEL_58:
          swift_storeEnumTagMultiPayload();
          (*((void (**)(char *, void, uint64_t, uint64_t))v14 + 7))(v11, 0, 1, v13);
          goto LABEL_59;
        }
        v246 = (void (**)(void))v39;
        unint64_t v256 = v14;
        uint64_t v70 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(__dst, v37, v70);
        *(void *)&__dst[v38[5]] = *(void *)&v37[v38[5]];
        uint64_t v71 = v38[6];
        v242 = &__dst[v71];
        id v72 = &v37[v71];
        id v73 = *(void **)&v37[v71];
        swift_bridgeObjectRetain();
        if (v73 == (void *)1)
        {
          *(_OWORD *)v242 = *(_OWORD *)v72;
        }
        else
        {
          *(void *)v242 = v73;
          uint64_t v104 = (void *)*((void *)v72 + 1);
          *((void *)v242 + 1) = v104;
          id v105 = v73;
          id v106 = v104;
        }
        uint64_t v107 = v38[7];
        uint64_t v108 = &__dst[v107];
        uint64_t v109 = &v37[v107];
        uint64_t v110 = *(void *)v109;
        v108[8] = v109[8];
        *(void *)uint64_t v108 = v110;
        v246[7]();
LABEL_57:
        uint64_t v14 = v256;
        goto LABEL_58;
      }
      unint64_t v256 = v14;
      *(void *)uint64_t v11 = *(void *)v12;
      *((void *)v11 + 1) = *((void *)v12 + 1);
      *((void *)v11 + 2) = *((void *)v12 + 2);
      *((void *)v11 + 3) = *((void *)v12 + 3);
      *((void *)v11 + 4) = *((void *)v12 + 4);
      uint64_t v31 = *((void *)v12 + 5);
      v11[48] = v12[48];
      *((void *)v11 + 5) = v31;
      uint64_t v32 = (void *)*((void *)v12 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 == (void *)1)
      {
        *(_OWORD *)(v11 + 56) = *(_OWORD *)(v12 + 56);
      }
      else
      {
        *((void *)v11 + 7) = v32;
        uint64_t v44 = (void *)*((void *)v12 + 8);
        *((void *)v11 + 8) = v44;
        id v45 = v32;
        id v46 = v44;
      }
      int v47 = *((_DWORD *)v12 + 18);
      v11[76] = v12[76];
      *((_DWORD *)v11 + 18) = v47;
      uint64_t v48 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
      uint64_t v49 = &v11[v48];
      unint64_t v50 = &v12[v48];
      uint64_t v51 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
      uint64_t v52 = *((void *)v51 - 1);
      if (!(*(unsigned int (**)(char *, uint64_t, int *))(v52 + 48))(v50, 1, v51))
      {
        uint64_t v74 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v49, v50, v74);
        uint64_t v75 = v51[5];
        id v76 = &v49[v75];
        uint64_t v77 = &v50[v75];
        uint64_t v78 = *(void **)&v50[v75];
        __dstb = v49;
        uint64_t v241 = v52;
        if (v78 == (void *)1)
        {
          *(_OWORD *)id v76 = *(_OWORD *)v77;
        }
        else
        {
          *(void *)id v76 = v78;
          uint64_t v118 = (void *)*((void *)v77 + 1);
          *((void *)v76 + 1) = v118;
          id v119 = v78;
          id v120 = v118;
          uint64_t v49 = __dstb;
        }
        uint64_t v121 = v51[6];
        uint64_t v122 = &v49[v121];
        uint64_t v123 = &v50[v121];
        long long v124 = *(_OWORD *)v123;
        v122[16] = v123[16];
        *(_OWORD *)uint64_t v122 = v124;
        uint64_t v125 = v51[7];
        v247 = &v49[v125];
        uint64_t v126 = &v50[v125];
        uint64_t v127 = sub_100082D90();
        uint64_t v128 = *(void *)(v127 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
        {
          uint64_t v129 = sub_100002874(&qword_1000A7A68);
          memcpy(v247, v126, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v247, v126, v127);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v247, 0, 1, v127);
        }
        (*(void (**)(char *, void, uint64_t, int *))(v241 + 56))(__dstb, 0, 1, v51);
        uint64_t v14 = v256;
        goto LABEL_58;
      }
      size_t v53 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
      uint64_t v54 = v49;
    }
    memcpy(v54, v50, v53);
    goto LABEL_57;
  }
  uint64_t v15 = sub_100002874(&qword_1000A7B28);
  memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_59:
  uint64_t v111 = *(int *)(v4 + 24);
  uint64_t v112 = (void *)(a1 + v111);
  double v113 = &a2[v111];
  uint64_t v114 = sub_1000837C0();
  uint64_t v115 = *(void *)(v114 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
  {
    uint64_t v116 = sub_100002874(&qword_1000A7B30);
    memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v115 + 16))(v112, v113, v114);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

char *sub_10003B184(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100002874(&qword_1000A8F40);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    return a1;
  }
  uint64_t v7 = sub_100082E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  uint64_t v8 = *(int *)(v4 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v22 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v22;
      *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
      v9[36] = v10[36];
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      v9[56] = v10[56];
      uint64_t v23 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      __dsta = &v9[v23];
      uint64_t v24 = &v10[v23];
      uint64_t v25 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v26 = *(void *)(v25 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        uint64_t v42 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(__dsta, v24, v42);
        *(_OWORD *)&__dsta[*(int *)(v25 + 20)] = *(_OWORD *)&v24[*(int *)(v25 + 20)];
        (*(void (**)(void))(v26 + 56))();
        goto LABEL_18;
      }
      id v27 = &qword_1000A7A78;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v56 = v12;
        long long v15 = *((_OWORD *)v10 + 1);
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        *((_OWORD *)v9 + 1) = v15;
        uint64_t v16 = *((void *)v10 + 5);
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v16;
        v9[48] = v10[48];
        *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
        v9[76] = v10[76];
        *((_DWORD *)v9 + 18) = *((_DWORD *)v10 + 18);
        uint64_t v17 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
        __dst = &v9[v17];
        uint64_t v18 = &v10[v17];
        uint64_t v19 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
        uint64_t v20 = *((void *)v19 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = sub_100002874(&qword_1000A7A70);
          memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
          uint64_t v12 = v56;
        }
        else
        {
          uint64_t v54 = v20;
          uint64_t v32 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(__dst, v18, v32);
          *(_OWORD *)&__dst[v19[5]] = *(_OWORD *)&v18[v19[5]];
          uint64_t v33 = v19[6];
          id v34 = &__dst[v33];
          uint64_t v35 = &v18[v33];
          *(_OWORD *)id v34 = *(_OWORD *)v35;
          v34[16] = v35[16];
          id v55 = v19;
          uint64_t v36 = v19[7];
          id v37 = &__dst[v36];
          uint64_t v38 = &v18[v36];
          uint64_t v39 = sub_100082D90();
          uint64_t v40 = *(void *)(v39 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
          {
            uint64_t v41 = sub_100002874(&qword_1000A7A68);
            memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          uint64_t v12 = v56;
          (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(__dst, 0, 1, v55);
        }
        goto LABEL_18;
      }
      *(void *)uint64_t v9 = *(void *)v10;
      v9[8] = v10[8];
      uint64_t v28 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      __dsta = &v9[v28];
      uint64_t v24 = &v10[v28];
      id v29 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      uint64_t v30 = *((void *)v29 - 1);
      if (!(*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v24, 1, v29))
      {
        uint64_t v43 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(__dsta, v24, v43);
        *(void *)&__dsta[v29[5]] = *(void *)&v24[v29[5]];
        *(_OWORD *)&__dsta[v29[6]] = *(_OWORD *)&v24[v29[6]];
        uint64_t v44 = v29[7];
        id v45 = &__dsta[v44];
        id v46 = &v24[v44];
        v45[8] = v46[8];
        *(void *)id v45 = *(void *)v46;
        (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(__dsta, 0, 1, v29);
        goto LABEL_18;
      }
      id v27 = &qword_1000A7A60;
    }
    uint64_t v31 = sub_100002874(v27);
    memcpy(__dsta, v24, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_18:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    goto LABEL_19;
  }
  uint64_t v13 = sub_100002874(&qword_1000A7B28);
  memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_19:
  uint64_t v47 = *(int *)(v4 + 24);
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  uint64_t v50 = sub_1000837C0();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    uint64_t v52 = sub_100002874(&qword_1000A7B30);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_10003B968(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6((uint64_t)a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_10003EA10(a1, type metadata accessor for GeneralMapsTimelineEntry);
      goto LABEL_7;
    }
    uint64_t v18 = sub_100082E40();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 40))(a1, a2, v18);
    uint64_t v19 = *(int *)(v4 + 20);
    uint64_t v20 = (_OWORD *)(a1 + v19);
    uint64_t v21 = &a2[v19];
    uint64_t v22 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    int v25 = v24((char *)v20, 1, v22);
    int v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          long long v63 = *((_OWORD *)v21 + 1);
          _OWORD *v20 = *(_OWORD *)v21;
          v20[1] = v63;
          *((_DWORD *)v20 + 8) = *((_DWORD *)v21 + 8);
          *((unsigned char *)v20 + 36) = v21[36];
          *(_OWORD *)((char *)v20 + 40) = *(_OWORD *)(v21 + 40);
          *((unsigned char *)v20 + 56) = v21[56];
          uint64_t v64 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
          uint64_t v65 = (char *)v20 + v64;
          id v66 = &v21[v64];
          uint64_t v67 = (int *)type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
          uint64_t v68 = *((void *)v67 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v68 + 48))(v66, 1, v67))
          {
            uint64_t v69 = &qword_1000A7A78;
LABEL_36:
            uint64_t v71 = sub_100002874(v69);
            memcpy(v65, v66, *(void *)(*(void *)(v71 - 8) + 64));
LABEL_56:
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
            goto LABEL_57;
          }
          uint64_t v116 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v65, v66, v116);
          *(_OWORD *)&v65[v67[5]] = *(_OWORD *)&v66[v67[5]];
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            long long v28 = *((_OWORD *)v21 + 1);
            _OWORD *v20 = *(_OWORD *)v21;
            v20[1] = v28;
            uint64_t v29 = *((void *)v21 + 5);
            *((void *)v20 + 4) = *((void *)v21 + 4);
            *((void *)v20 + 5) = v29;
            *((unsigned char *)v20 + 48) = v21[48];
            *(_OWORD *)((char *)v20 + 56) = *(_OWORD *)(v21 + 56);
            *((unsigned char *)v20 + 76) = v21[76];
            *((_DWORD *)v20 + 18) = *((_DWORD *)v21 + 18);
            uint64_t v30 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
            __dst = (char *)v20 + v30;
            uint64_t v31 = &v21[v30];
            uint64_t v32 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
            uint64_t v33 = *((void *)v32 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
            {
              uint64_t v34 = sub_100002874(&qword_1000A7A70);
              memcpy(__dst, v31, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              uint64_t v94 = sub_1000837F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(__dst, v31, v94);
              *(_OWORD *)&__dst[v32[5]] = *(_OWORD *)&v31[v32[5]];
              uint64_t v95 = v32[6];
              uint64_t v96 = &__dst[v95];
              id v97 = &v31[v95];
              *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
              v96[16] = v97[16];
              uint64_t v98 = v32[7];
              unint64_t v144 = v32;
              uint64_t v146 = &__dst[v98];
              int v99 = &v31[v98];
              uint64_t v100 = sub_100082D90();
              uint64_t v101 = *(void *)(v100 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
              {
                uint64_t v102 = sub_100002874(&qword_1000A7A68);
                memcpy(v146, v99, *(void *)(*(void *)(v102 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v146, v99, v100);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v146, 0, 1, v100);
              }
              (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(__dst, 0, 1, v144);
            }
            goto LABEL_56;
          }
          *(void *)uint64_t v20 = *(void *)v21;
          *((unsigned char *)v20 + 8) = v21[8];
          uint64_t v70 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
          uint64_t v65 = (char *)v20 + v70;
          id v66 = &v21[v70];
          uint64_t v67 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
          uint64_t v68 = *((void *)v67 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v68 + 48))(v66, 1, v67))
          {
            uint64_t v69 = &qword_1000A7A60;
            goto LABEL_36;
          }
          uint64_t v117 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v65, v66, v117);
          *(void *)&v65[v67[5]] = *(void *)&v66[v67[5]];
          *(_OWORD *)&v65[v67[6]] = *(_OWORD *)&v66[v67[6]];
          uint64_t v118 = v67[7];
          id v119 = &v65[v118];
          id v120 = &v66[v118];
          char v119[8] = v120[8];
          *(void *)id v119 = *(void *)v120;
        }
        (*(void (**)(char *, void, uint64_t, int *))(v68 + 56))(v65, 0, 1, v67);
        goto LABEL_56;
      }
    }
    else
    {
      if (!v26)
      {
        if ((char *)a1 != a2)
        {
          sub_10003EA10((uint64_t)v20, type metadata accessor for GeneralMapsTimelineEntryContent);
          int v54 = swift_getEnumCaseMultiPayload();
          if (v54 == 2)
          {
            long long v103 = *((_OWORD *)v21 + 1);
            _OWORD *v20 = *(_OWORD *)v21;
            v20[1] = v103;
            *((_DWORD *)v20 + 8) = *((_DWORD *)v21 + 8);
            *((unsigned char *)v20 + 36) = v21[36];
            *(_OWORD *)((char *)v20 + 40) = *(_OWORD *)(v21 + 40);
            *((unsigned char *)v20 + 56) = v21[56];
            uint64_t v104 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
            id v105 = (char *)v20 + v104;
            id v106 = &v21[v104];
            uint64_t v107 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
            uint64_t v108 = *(void *)(v107 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
            {
              uint64_t v109 = sub_100002874(&qword_1000A7A78);
              memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
            }
            else
            {
              uint64_t v137 = sub_1000837F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v105, v106, v137);
              *(_OWORD *)&v105[*(int *)(v107 + 20)] = *(_OWORD *)&v106[*(int *)(v107 + 20)];
              (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
            }
          }
          else if (v54 == 1)
          {
            long long v55 = *((_OWORD *)v21 + 1);
            _OWORD *v20 = *(_OWORD *)v21;
            v20[1] = v55;
            uint64_t v56 = *((void *)v21 + 5);
            *((void *)v20 + 4) = *((void *)v21 + 4);
            *((void *)v20 + 5) = v56;
            *((unsigned char *)v20 + 48) = v21[48];
            *(_OWORD *)((char *)v20 + 56) = *(_OWORD *)(v21 + 56);
            *((unsigned char *)v20 + 76) = v21[76];
            *((_DWORD *)v20 + 18) = *((_DWORD *)v21 + 18);
            uint64_t v57 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
            int v58 = (char *)v20 + v57;
            uint64_t v59 = &v21[v57];
            uint64_t v60 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
            uint64_t v61 = *((void *)v60 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v61 + 48))(v59, 1, v60))
            {
              uint64_t v62 = sub_100002874(&qword_1000A7A70);
              memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
            }
            else
            {
              uint64_t v128 = sub_1000837F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v58, v59, v128);
              *(_OWORD *)&v58[v60[5]] = *(_OWORD *)&v59[v60[5]];
              uint64_t v129 = v60[6];
              uint64_t v130 = &v58[v129];
              id v131 = &v59[v129];
              *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
              v130[16] = v131[16];
              uint64_t v132 = v60[7];
              NSString v147 = v58;
              uint64_t v151 = &v58[v132];
              uint64_t v133 = &v59[v132];
              uint64_t v134 = sub_100082D90();
              uint64_t v135 = *(void *)(v134 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134))
              {
                uint64_t v136 = sub_100002874(&qword_1000A7A68);
                memcpy(v151, v133, *(void *)(*(void *)(v136 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v151, v133, v134);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v151, 0, 1, v134);
              }
              (*(void (**)(char *, void, uint64_t, int *))(v61 + 56))(v147, 0, 1, v60);
            }
          }
          else
          {
            *(void *)uint64_t v20 = *(void *)v21;
            *((unsigned char *)v20 + 8) = v21[8];
            uint64_t v110 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
            uint64_t v111 = (char *)v20 + v110;
            uint64_t v112 = &v21[v110];
            double v113 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
            uint64_t v114 = *((void *)v113 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v114 + 48))(v112, 1, v113))
            {
              uint64_t v115 = sub_100002874(&qword_1000A7A60);
              memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
            }
            else
            {
              uint64_t v138 = sub_1000837F0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v111, v112, v138);
              *(void *)&v111[v113[5]] = *(void *)&v112[v113[5]];
              *(_OWORD *)&v111[v113[6]] = *(_OWORD *)&v112[v113[6]];
              uint64_t v139 = v113[7];
              uint64_t v140 = &v111[v139];
              uint64_t v141 = &v112[v139];
              v140[8] = v141[8];
              *(void *)uint64_t v140 = *(void *)v141;
              (*(void (**)(char *, void, uint64_t, int *))(v114 + 56))(v111, 0, 1, v113);
            }
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_57;
      }
      sub_10003EA10((uint64_t)v20, type metadata accessor for GeneralMapsTimelineEntryContent);
    }
    uint64_t v43 = sub_100002874(&qword_1000A7B28);
    memcpy(v20, v21, *(void *)(*(void *)(v43 - 8) + 64));
LABEL_57:
    uint64_t v121 = *(int *)(v4 + 24);
    uint64_t v122 = (void *)(a1 + v121);
    a2 += v121;
    uint64_t v123 = sub_1000837C0();
    uint64_t v124 = *(void *)(v123 - 8);
    uint64_t v125 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v124 + 48);
    int v126 = v125(v122, 1, v123);
    int v127 = v125(a2, 1, v123);
    if (v126)
    {
      if (!v127)
      {
        (*(void (**)(void *, char *, uint64_t))(v124 + 32))(v122, a2, v123);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v122, 0, 1, v123);
        return a1;
      }
    }
    else
    {
      if (!v127)
      {
        (*(void (**)(void *, char *, uint64_t))(v124 + 40))(v122, a2, v123);
        return a1;
      }
      (*(void (**)(void *, uint64_t))(v124 + 8))(v122, v123);
    }
    size_t v16 = *(void *)(*(void *)(sub_100002874(&qword_1000A7B30) - 8) + 64);
    uint64_t v17 = v122;
    goto LABEL_8;
  }
  if (v8)
  {
LABEL_7:
    size_t v16 = *(void *)(*(void *)(sub_100002874(&qword_1000A8F40) - 8) + 64);
    uint64_t v17 = (void *)a1;
LABEL_8:
    memcpy(v17, a2, v16);
    return a1;
  }
  uint64_t v9 = sub_100082E40();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  uint64_t v10 = *(int *)(v4 + 20);
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v14 = *(void **)(v13 - 8);
  if (!(*((unsigned int (**)(char *, uint64_t, uint64_t))v14 + 6))(v12, 1, v13))
  {
    int v35 = swift_getEnumCaseMultiPayload();
    if (v35 == 2)
    {
      long long v44 = *((_OWORD *)v12 + 1);
      _OWORD *v11 = *(_OWORD *)v12;
      v11[1] = v44;
      *((_DWORD *)v11 + 8) = *((_DWORD *)v12 + 8);
      *((unsigned char *)v11 + 36) = v12[36];
      *(_OWORD *)((char *)v11 + 40) = *(_OWORD *)(v12 + 40);
      *((unsigned char *)v11 + 56) = v12[56];
      uint64_t v45 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
      __dstb = (char *)v11 + v45;
      id v46 = &v12[v45];
      uint64_t v47 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
      uint64_t v48 = *(void *)(v47 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        uint64_t v82 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(__dstb, v46, v82);
        *(_OWORD *)&__dstb[*(int *)(v47 + 20)] = *(_OWORD *)&v46[*(int *)(v47 + 20)];
        (*(void (**)(void))(v48 + 56))();
        goto LABEL_41;
      }
      uint64_t v49 = &qword_1000A7A78;
    }
    else
    {
      if (v35 == 1)
      {
        uint64_t v145 = v14;
        long long v36 = *((_OWORD *)v12 + 1);
        _OWORD *v11 = *(_OWORD *)v12;
        v11[1] = v36;
        uint64_t v37 = *((void *)v12 + 5);
        *((void *)v11 + 4) = *((void *)v12 + 4);
        *((void *)v11 + 5) = v37;
        *((unsigned char *)v11 + 48) = v12[48];
        *(_OWORD *)((char *)v11 + 56) = *(_OWORD *)(v12 + 56);
        *((unsigned char *)v11 + 76) = v12[76];
        *((_DWORD *)v11 + 18) = *((_DWORD *)v12 + 18);
        uint64_t v38 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
        __dsta = (char *)v11 + v38;
        uint64_t v39 = &v12[v38];
        uint64_t v40 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
        uint64_t v41 = *((void *)v40 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v41 + 48))(v39, 1, v40))
        {
          uint64_t v42 = sub_100002874(&qword_1000A7A70);
          memcpy(__dsta, v39, *(void *)(*(void *)(v42 - 8) + 64));
          uint64_t v14 = v145;
        }
        else
        {
          uint64_t v142 = v41;
          uint64_t v72 = sub_1000837F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(__dsta, v39, v72);
          *(_OWORD *)&__dsta[v40[5]] = *(_OWORD *)&v39[v40[5]];
          uint64_t v73 = v40[6];
          uint64_t v74 = &__dsta[v73];
          uint64_t v75 = &v39[v73];
          *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
          v74[16] = v75[16];
          uint64_t v143 = v40;
          uint64_t v76 = v40[7];
          uint64_t v77 = &__dsta[v76];
          uint64_t v78 = &v39[v76];
          uint64_t v79 = sub_100082D90();
          uint64_t v80 = *(void *)(v79 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
          {
            uint64_t v81 = sub_100002874(&qword_1000A7A68);
            memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
          }
          uint64_t v14 = v145;
          (*(void (**)(char *, void, uint64_t, int *))(v142 + 56))(__dsta, 0, 1, v143);
        }
        goto LABEL_41;
      }
      *(void *)uint64_t v11 = *(void *)v12;
      *((unsigned char *)v11 + 8) = v12[8];
      uint64_t v50 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      __dstb = (char *)v11 + v50;
      id v46 = &v12[v50];
      uint64_t v51 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      uint64_t v52 = *((void *)v51 - 1);
      if (!(*(unsigned int (**)(char *, uint64_t, int *))(v52 + 48))(v46, 1, v51))
      {
        uint64_t v83 = sub_1000837F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(__dstb, v46, v83);
        *(void *)&__dstb[v51[5]] = *(void *)&v46[v51[5]];
        *(_OWORD *)&__dstb[v51[6]] = *(_OWORD *)&v46[v51[6]];
        uint64_t v84 = v51[7];
        id v85 = &__dstb[v84];
        id v86 = &v46[v84];
        v85[8] = v86[8];
        *(void *)id v85 = *(void *)v86;
        (*(void (**)(char *, void, uint64_t, int *))(v52 + 56))(__dstb, 0, 1, v51);
        goto LABEL_41;
      }
      uint64_t v49 = &qword_1000A7A60;
    }
    uint64_t v53 = sub_100002874(v49);
    memcpy(__dstb, v46, *(void *)(*(void *)(v53 - 8) + 64));
LABEL_41:
    swift_storeEnumTagMultiPayload();
    (*((void (**)(_OWORD *, void, uint64_t, uint64_t))v14 + 7))(v11, 0, 1, v13);
    goto LABEL_42;
  }
  uint64_t v15 = sub_100002874(&qword_1000A7B28);
  memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_42:
  uint64_t v87 = *(int *)(v4 + 24);
  uint64_t v88 = (void *)(a1 + v87);
  uint64_t v89 = &a2[v87];
  uint64_t v90 = sub_1000837C0();
  uint64_t v91 = *(void *)(v90 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
  {
    uint64_t v92 = sub_100002874(&qword_1000A7B30);
    memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_10003CDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003CDF4);
}

uint64_t sub_10003CDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000A8F40);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10003CE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003CE78);
}

uint64_t sub_10003CE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000A8F40);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WidgetContentView()
{
  uint64_t result = qword_1000A8FA0;
  if (!qword_1000A8FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003CF38()
{
  sub_10003CFC4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10003CFC4()
{
  if (!qword_1000A8FB0)
  {
    type metadata accessor for GeneralMapsTimelineEntry(255);
    unint64_t v0 = sub_1000839F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A8FB0);
    }
  }
}

uint64_t sub_10003D01C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003D038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v149 = a1;
  uint64_t v1 = type metadata accessor for PlaceholderView(0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v130 = (uint64_t *)((char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  uint64_t v132 = (uint64_t)&v109 - v4;
  uint64_t v137 = sub_100002874(&qword_1000A8FE0);
  uint64_t v5 = __chkstk_darwin(v137);
  uint64_t v131 = (uint64_t)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v133 = (uint64_t)&v109 - v7;
  uint64_t v135 = sub_100002874(&qword_1000A8FE8);
  __chkstk_darwin(v135);
  uint64_t v136 = (uint64_t)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100002874(&qword_1000A8FF0);
  __chkstk_darwin(v148);
  uint64_t v138 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for NavigationETAWidgetView(0);
  __chkstk_darwin(v116);
  uint64_t v121 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100002874(&qword_1000A8FF8);
  uint64_t v11 = __chkstk_darwin(v134);
  uint64_t v120 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v123 = (uint64_t)&v109 - v13;
  uint64_t v14 = type metadata accessor for NavigationETAEntryContent(0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v114 = (uint64_t)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v122 = (uint64_t)&v109 - v17;
  uint64_t v113 = type metadata accessor for SuggestedDestinationWidgetView(0);
  __chkstk_darwin(v113);
  uint64_t v117 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_100002874(&qword_1000A9000);
  uint64_t v19 = __chkstk_darwin(v129);
  uint64_t v115 = (uint64_t)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v119 = (uint64_t)&v109 - v21;
  uint64_t v22 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v112 = (uint64_t)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v118 = (uint64_t)&v109 - v25;
  uint64_t v145 = sub_100002874(&qword_1000A9008);
  __chkstk_darwin(v145);
  uint64_t v147 = (uint64_t)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100002874(&qword_1000A9010);
  __chkstk_darwin(v126);
  uint64_t v127 = (uint64_t)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100002874(&qword_1000A9018);
  __chkstk_darwin(v146);
  uint64_t v128 = (char *)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_100083250();
  uint64_t v29 = *(void *)(v140 - 8);
  uint64_t v30 = __chkstk_darwin(v140);
  uint64_t v32 = (char *)&v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v109 - v33;
  uint64_t v35 = sub_100083270();
  uint64_t v142 = *(void *)(v35 - 8);
  uint64_t v143 = v35;
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v141 = (char *)&v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v109 - v38;
  uint64_t v40 = type metadata accessor for NearbyWidgetView(0);
  __chkstk_darwin(v40);
  uint64_t v110 = (char *)&v109 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100002874(&qword_1000A9020);
  uint64_t v42 = __chkstk_darwin(v125);
  uint64_t v109 = (uint64_t)&v109 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v111 = (uint64_t)&v109 - v44;
  uint64_t v45 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v46 = __chkstk_darwin(v45 - 8);
  uint64_t v48 = (char *)&v109 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v124 = (uint64_t)&v109 - v49;
  uint64_t v50 = sub_100002874(&qword_1000A8F40);
  __chkstk_darwin(v50 - 8);
  uint64_t v52 = (char *)&v109 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100002874(&qword_1000A7B28);
  uint64_t v54 = __chkstk_darwin(v53 - 8);
  uint64_t v56 = (char *)&v109 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  int v58 = (char *)&v109 - v57;
  sub_10001A720(v139, (uint64_t)v52, &qword_1000A8F40);
  uint64_t v59 = type metadata accessor for GeneralMapsTimelineEntry(0);
  int v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v52, 1, v59);
  unint64_t v144 = v58;
  if (v60 == 1)
  {
    sub_100019138((uint64_t)v52, &qword_1000A8F40);
    uint64_t v61 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v58, 1, 1, v61);
LABEL_4:
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v64 = (uint64_t)v130;
    uint64_t *v130 = KeyPath;
    sub_100002874(&qword_1000A8170);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = v132;
    sub_10003E940(v64, v132, type metadata accessor for PlaceholderView);
    sub_100083240();
    uint64_t v66 = v140;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v32, v34, v140);
    sub_100083260();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v66);
    uint64_t v67 = v142;
    uint64_t v68 = v143;
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v141, v39, v143);
    sub_10003E834(&qword_1000A9028, (void (*)(uint64_t))&type metadata accessor for BlurReplaceTransition);
    uint64_t v69 = sub_100082FC0();
    uint64_t v70 = v131;
    sub_10003E9A8(v65, v131, type metadata accessor for PlaceholderView);
    *(void *)(v70 + *(int *)(v137 + 36)) = v69;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v68);
    sub_10003EA10(v65, type metadata accessor for PlaceholderView);
    uint64_t v71 = v133;
    sub_100019284(v70, v133, &qword_1000A8FE0);
    sub_10001A720(v71, v136, &qword_1000A8FE0);
    swift_storeEnumTagMultiPayload();
    sub_10003E4EC();
    sub_10003E5F4();
    uint64_t v72 = (uint64_t)v138;
    sub_100083230();
    sub_10001A720(v72, v147, &qword_1000A8FF0);
    swift_storeEnumTagMultiPayload();
    sub_10003E6A0();
    sub_10003E87C();
    sub_100083230();
    sub_100019138(v72, &qword_1000A8FF0);
    sub_100019138(v71, &qword_1000A8FE0);
    return sub_100019138((uint64_t)v144, &qword_1000A7B28);
  }
  sub_10001A720((uint64_t)&v52[*(int *)(v59 + 20)], (uint64_t)v58, &qword_1000A7B28);
  sub_10003EA10((uint64_t)v52, type metadata accessor for GeneralMapsTimelineEntry);
  uint64_t v62 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v58, 1, v62) == 1) {
    goto LABEL_4;
  }
  sub_10001A720((uint64_t)v58, (uint64_t)v56, &qword_1000A7B28);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v74 = v118;
      sub_10003E940((uint64_t)v56, v118, type metadata accessor for SuggestedDestinationEntryContent);
      uint64_t v75 = v112;
      sub_10003E9A8(v74, v112, type metadata accessor for SuggestedDestinationEntryContent);
      uint64_t v76 = swift_getKeyPath();
      uint64_t v77 = (uint64_t)v117;
      *(void *)&v117[*(int *)(v113 + 20)] = v76;
      sub_100002874(&qword_1000A8170);
      swift_storeEnumTagMultiPayload();
      sub_10003E940(v75, v77, type metadata accessor for SuggestedDestinationEntryContent);
      sub_100083240();
      uint64_t v78 = v140;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v32, v34, v140);
      sub_100083260();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v78);
      uint64_t v79 = v142;
      uint64_t v80 = v143;
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v141, v39, v143);
      sub_10003E834(&qword_1000A9028, (void (*)(uint64_t))&type metadata accessor for BlurReplaceTransition);
      uint64_t v81 = sub_100082FC0();
      uint64_t v82 = v115;
      sub_10003E9A8(v77, v115, type metadata accessor for SuggestedDestinationWidgetView);
      *(void *)(v82 + *(int *)(v129 + 36)) = v81;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v39, v80);
      sub_10003EA10(v77, type metadata accessor for SuggestedDestinationWidgetView);
      uint64_t v83 = v119;
      sub_100019284(v82, v119, &qword_1000A9000);
      sub_10001A720(v83, v127, &qword_1000A9000);
      swift_storeEnumTagMultiPayload();
      sub_10003E6DC();
      sub_10003E788();
      uint64_t v84 = (uint64_t)v128;
      sub_100083230();
      sub_10001A720(v84, v147, &qword_1000A9018);
      swift_storeEnumTagMultiPayload();
      sub_10003E6A0();
      sub_10003E87C();
      sub_100083230();
      sub_100019138(v84, &qword_1000A9018);
      sub_100019138(v83, &qword_1000A9000);
      id v85 = type metadata accessor for SuggestedDestinationEntryContent;
    }
    else
    {
      uint64_t v74 = v122;
      sub_10003E940((uint64_t)v56, v122, type metadata accessor for NavigationETAEntryContent);
      uint64_t v98 = v114;
      sub_10003E9A8(v74, v114, type metadata accessor for NavigationETAEntryContent);
      uint64_t v99 = swift_getKeyPath();
      uint64_t v100 = (uint64_t)v121;
      *(void *)&v121[*(int *)(v116 + 20)] = v99;
      sub_100002874(&qword_1000A8170);
      swift_storeEnumTagMultiPayload();
      sub_10003E940(v98, v100, type metadata accessor for NavigationETAEntryContent);
      sub_100083240();
      uint64_t v101 = v140;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v32, v34, v140);
      sub_100083260();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v101);
      uint64_t v102 = v142;
      uint64_t v103 = v143;
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v141, v39, v143);
      sub_10003E834(&qword_1000A9028, (void (*)(uint64_t))&type metadata accessor for BlurReplaceTransition);
      uint64_t v104 = sub_100082FC0();
      uint64_t v105 = v120;
      sub_10003E9A8(v100, v120, type metadata accessor for NavigationETAWidgetView);
      *(void *)(v105 + *(int *)(v134 + 36)) = v104;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v39, v103);
      sub_10003EA10(v100, type metadata accessor for NavigationETAWidgetView);
      uint64_t v106 = v123;
      sub_100019284(v105, v123, &qword_1000A8FF8);
      sub_10001A720(v106, v136, &qword_1000A8FF8);
      swift_storeEnumTagMultiPayload();
      sub_10003E4EC();
      sub_10003E5F4();
      uint64_t v107 = (uint64_t)v138;
      sub_100083230();
      sub_10001A720(v107, v147, &qword_1000A8FF0);
      swift_storeEnumTagMultiPayload();
      sub_10003E6A0();
      sub_10003E87C();
      sub_100083230();
      sub_100019138(v107, &qword_1000A8FF0);
      sub_100019138(v106, &qword_1000A8FF8);
      id v85 = type metadata accessor for NavigationETAEntryContent;
    }
    uint64_t v96 = v85;
    uint64_t v97 = v74;
  }
  else
  {
    uint64_t v86 = v124;
    sub_10003E940((uint64_t)v56, v124, type metadata accessor for NearbyEntryContent);
    sub_10003E9A8(v86, (uint64_t)v48, type metadata accessor for NearbyEntryContent);
    uint64_t v87 = swift_getKeyPath();
    uint64_t v88 = (uint64_t)v110;
    *(void *)&v110[*(int *)(v40 + 20)] = v87;
    sub_100002874(&qword_1000A8170);
    swift_storeEnumTagMultiPayload();
    sub_10003E940((uint64_t)v48, v88, type metadata accessor for NearbyEntryContent);
    sub_100083240();
    uint64_t v89 = v140;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v32, v34, v140);
    sub_100083260();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v89);
    uint64_t v90 = v142;
    uint64_t v91 = v143;
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v141, v39, v143);
    sub_10003E834(&qword_1000A9028, (void (*)(uint64_t))&type metadata accessor for BlurReplaceTransition);
    uint64_t v92 = sub_100082FC0();
    uint64_t v93 = v109;
    sub_10003E9A8(v88, v109, type metadata accessor for NearbyWidgetView);
    *(void *)(v93 + *(int *)(v125 + 36)) = v92;
    (*(void (**)(char *, uint64_t))(v90 + 8))(v39, v91);
    sub_10003EA10(v88, type metadata accessor for NearbyWidgetView);
    uint64_t v94 = v111;
    sub_100019284(v93, v111, &qword_1000A9020);
    sub_10001A720(v94, v127, &qword_1000A9020);
    swift_storeEnumTagMultiPayload();
    sub_10003E6DC();
    sub_10003E788();
    uint64_t v95 = (uint64_t)v128;
    sub_100083230();
    sub_10001A720(v95, v147, &qword_1000A9018);
    swift_storeEnumTagMultiPayload();
    sub_10003E6A0();
    sub_10003E87C();
    sub_100083230();
    sub_100019138(v95, &qword_1000A9018);
    sub_100019138(v94, &qword_1000A9020);
    uint64_t v96 = type metadata accessor for NearbyEntryContent;
    uint64_t v97 = v124;
  }
  sub_10003EA10(v97, v96);
  return sub_100019138((uint64_t)v144, &qword_1000A7B28);
}

unint64_t sub_10003E4EC()
{
  unint64_t result = qword_1000A9030;
  if (!qword_1000A9030)
  {
    sub_1000028B8(&qword_1000A8FF8);
    sub_10003E834(&qword_1000A9038, (void (*)(uint64_t))type metadata accessor for NavigationETAWidgetView);
    sub_10003E598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9030);
  }
  return result;
}

unint64_t sub_10003E598()
{
  unint64_t result = qword_1000A9040;
  if (!qword_1000A9040)
  {
    sub_1000028B8(&qword_1000A9048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9040);
  }
  return result;
}

unint64_t sub_10003E5F4()
{
  unint64_t result = qword_1000A9050;
  if (!qword_1000A9050)
  {
    sub_1000028B8(&qword_1000A8FE0);
    sub_10003E834(&qword_1000A9058, (void (*)(uint64_t))type metadata accessor for PlaceholderView);
    sub_10003E598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9050);
  }
  return result;
}

uint64_t sub_10003E6A0()
{
  return sub_10003E8B8(&qword_1000A9060, &qword_1000A9018, (void (*)(void))sub_10003E6DC, (void (*)(void))sub_10003E788);
}

unint64_t sub_10003E6DC()
{
  unint64_t result = qword_1000A9068;
  if (!qword_1000A9068)
  {
    sub_1000028B8(&qword_1000A9020);
    sub_10003E834(&qword_1000A9070, (void (*)(uint64_t))type metadata accessor for NearbyWidgetView);
    sub_10003E598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9068);
  }
  return result;
}

unint64_t sub_10003E788()
{
  unint64_t result = qword_1000A9078;
  if (!qword_1000A9078)
  {
    sub_1000028B8(&qword_1000A9000);
    sub_10003E834(&qword_1000A9080, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationWidgetView);
    sub_10003E598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9078);
  }
  return result;
}

uint64_t sub_10003E834(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003E87C()
{
  return sub_10003E8B8(&qword_1000A9088, &qword_1000A8FF0, (void (*)(void))sub_10003E4EC, (void (*)(void))sub_10003E5F4);
}

uint64_t sub_10003E8B8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003E940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003E9A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003EA10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003EA70()
{
  return sub_10003E8B8(&qword_1000A9090, &qword_1000A9098, (void (*)(void))sub_10003E6A0, (void (*)(void))sub_10003E87C);
}

uint64_t *sub_10003EAC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000413FC(a1, a2, a3, &qword_1000A8170, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_10003EAE0(uint64_t a1, uint64_t a2)
{
  return sub_10004152C(a1, a2, &qword_1000A8170, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

void *sub_10003EB00(void *a1, void *a2, uint64_t a3)
{
  return sub_1000415F4(a1, a2, a3, &qword_1000A8170, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

void *sub_10003EB20(void *a1, void *a2, uint64_t a3)
{
  return sub_1000416D4(a1, a2, a3, &qword_1000A8170, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

void *sub_10003EB40(void *a1, const void *a2, uint64_t a3)
{
  return sub_1000417CC(a1, a2, a3, &qword_1000A8170, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

void *sub_10003EB60(void *a1, const void *a2, uint64_t a3)
{
  return sub_1000418B4(a1, a2, a3, &qword_1000A8170, (uint64_t (*)(void))&type metadata accessor for WidgetFamily);
}

uint64_t sub_10003EB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003EB94);
}

uint64_t sub_10003EB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000419B4(a1, a2, a3, &qword_1000A8178);
}

uint64_t sub_10003EBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003EBB4);
}

uint64_t sub_10003EBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041A40(a1, a2, a3, a4, &qword_1000A8178);
}

uint64_t type metadata accessor for PlaceholderView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A90F8);
}

void sub_10003EBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10003EC00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003EC1C@<X0>(uint64_t a1@<X8>)
{
  v20[0] = a1;
  uint64_t v1 = sub_1000832D0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100002874(&qword_1000A91D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A91D8);
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v10 = sub_1000835D0();
  v10[1] = v11;
  uint64_t v12 = sub_100041160();
  if (v13)
  {
    uint64_t v17 = sub_100002874(&qword_1000A91E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  }
  else
  {
    uint64_t v14 = v12;
    sub_100082FD0();
    v20[1] = v14;
    char v21 = 1;
    double v22 = v15 * 0.25;
    sub_100041380();
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    sub_100083400();
    uint64_t v16 = sub_100002874(&qword_1000A91E0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 0, 1, v16);
  }
  uint64_t v18 = sub_100002874(&qword_1000A91E8);
  sub_100019284((uint64_t)v7, (uint64_t)v10 + *(int *)(v18 + 44), &qword_1000A91D0);
  sub_1000832C0();
  sub_1000835D0();
  type metadata accessor for PlaceholderBackgroundView(0);
  sub_100023D5C(&qword_1000A91F0, &qword_1000A91D8);
  sub_100041E8C(&qword_1000A8908, (void (*)(uint64_t))type metadata accessor for PlaceholderBackgroundView);
  sub_100083460();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100019138((uint64_t)v10, &qword_1000A91D8);
}

void sub_10003EF58(uint64_t (**a1)@<X0>(uint64_t@<X8>)@<X8>)
{
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100082F00();
  sub_10001859C(v2, (uint64_t)qword_1000ACBA8);
  uint64_t v3 = sub_100082EE0();
  os_log_type_t v4 = sub_100083920();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "PlaceholderSmallWidgetView: body", v5, 2u);
    swift_slowDealloc();
  }

  *a1 = sub_10004115C;
  a1[1] = 0;
}

uint64_t sub_10003F048@<X0>(uint64_t a1@<X8>)
{
  v17[1] = a1;
  v17[0] = sub_1000832D0();
  uint64_t v1 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100002874(&qword_1000A9200);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - v8;
  uint64_t v10 = sub_100002874(&qword_1000A9208);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = sub_1000831C0();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  char v13 = &v12[*(int *)(sub_100002874(&qword_1000A9210) + 44)];
  *(void *)uint64_t v9 = sub_100083130();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v14 = sub_100002874(&qword_1000A9218);
  sub_10003F34C(&v9[*(int *)(v14 + 44)]);
  sub_10001A720((uint64_t)v9, (uint64_t)v7, &qword_1000A9200);
  *(void *)char v13 = 0;
  v13[8] = 1;
  *((void *)v13 + 2) = 0x3FF0000000000000;
  uint64_t v15 = sub_100002874(&qword_1000A9220);
  sub_10001A720((uint64_t)v7, (uint64_t)&v13[*(int *)(v15 + 48)], &qword_1000A9200);
  sub_100019138((uint64_t)v9, &qword_1000A9200);
  sub_100019138((uint64_t)v7, &qword_1000A9200);
  sub_1000832C0();
  sub_1000835D0();
  type metadata accessor for PlaceholderBackgroundView(0);
  sub_100023D5C(&qword_1000A9228, &qword_1000A9208);
  sub_100041E8C(&qword_1000A8908, (void (*)(uint64_t))type metadata accessor for PlaceholderBackgroundView);
  sub_100083460();
  (*(void (**)(char *, void))(v1 + 8))(v3, v17[0]);
  return sub_100019138((uint64_t)v12, &qword_1000A9208);
}

uint64_t sub_10003F34C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_100002874(&qword_1000A9230);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_100002874(&qword_1000A9238);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  if (qword_1000A7980 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1000ACB40;
  *uint64_t v5 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v5 + *(int *)(v2 + 36)) = v15;
  uint64_t v16 = (char *)v5 + *(int *)(v2 + 40);
  *(void *)uint64_t v16 = sub_1000831C0();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v17 = *(int *)(sub_100002874(&qword_1000A9240) + 44);
  if (qword_1000A7990 != -1) {
    swift_once();
  }
  uint64_t v18 = &v16[v17];
  uint64_t v19 = qword_1000ACB50;
  *(void *)uint64_t v18 = sub_100083130();
  *((void *)v18 + 1) = v19;
  v18[16] = 0;
  uint64_t v20 = sub_100002874(&qword_1000A9248);
  sub_10003F6A0((uint64_t)&v18[*(int *)(v20 + 44)]);
  sub_100019284((uint64_t)v5, (uint64_t)v7, &qword_1000A9230);
  sub_100023D5C(&qword_1000A9250, &qword_1000A9230);
  sub_100083400();
  sub_100019138((uint64_t)v7, &qword_1000A9230);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v12, v8);
  char v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v21(v12, v14, v8);
  v21(a1, v12, v8);
  double v22 = &a1[*(int *)(sub_100002874(&qword_1000A9258) + 48)];
  *(void *)double v22 = 0;
  v22[8] = 1;
  *((void *)v22 + 2) = 0x3FF0000000000000;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v23)(v12, v8);
}

uint64_t sub_10003F6A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = sub_100002874(&qword_1000A86E8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100083520();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A86F8);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100002874(&qword_1000A8700);
  __chkstk_darwin(v26);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100002874(&qword_1000A8718);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v26 - v17;
  if (qword_1000A7998 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1000ACB58;
  sub_100083500();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  sub_100083560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100083700();
  uint64_t v20 = sub_100083720();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 0, 1, v20);
  sub_100083550();
  swift_release();
  sub_100019138((uint64_t)v3, &qword_1000A86E8);
  if (qword_1000A7988 != -1) {
    swift_once();
  }
  sub_1000835D0();
  sub_100082FB0();
  uint64_t v22 = v27;
  uint64_t v21 = v28;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v12, v10, v28);
  uint64_t v23 = &v12[*(int *)(v26 + 36)];
  long long v24 = v31;
  *(_OWORD *)uint64_t v23 = v30;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v32;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
  sub_100023E18();
  sub_100083420();
  sub_100019138((uint64_t)v12, &qword_1000A8700);
  sub_100019284((uint64_t)v16, (uint64_t)v18, &qword_1000A8718);
  sub_10001A720((uint64_t)v18, (uint64_t)v16, &qword_1000A8718);
  sub_10001A720((uint64_t)v16, v29, &qword_1000A8718);
  sub_100019138((uint64_t)v18, &qword_1000A8718);
  return sub_100019138((uint64_t)v16, &qword_1000A8718);
}

uint64_t sub_10003FB3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100002874(&qword_1000A91A0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_100002874(&qword_1000A91A8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - v13;
  if (qword_1000A7980 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1000ACB40;
  *uint64_t v5 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v5 + *(int *)(v2 + 36)) = v15;
  uint64_t v16 = (char *)v5 + *(int *)(v2 + 40);
  *(void *)uint64_t v16 = sub_100083130();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v17 = sub_100002874(&qword_1000A91B0);
  sub_10003FE30((uint64_t)&v16[*(int *)(v17 + 44)]);
  sub_100019284((uint64_t)v5, (uint64_t)v7, &qword_1000A91A0);
  sub_100023D5C(&qword_1000A91B8, &qword_1000A91A0);
  sub_100083400();
  sub_100019138((uint64_t)v7, &qword_1000A91A0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v12, v8);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v12, v14, v8);
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0x3FF0000000000000;
  uint64_t v19 = sub_100002874(&qword_1000A91C0);
  v18((char *)(a1 + *(int *)(v19 + 48)), v12, v8);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v12, v8);
}

uint64_t sub_10003FE30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = sub_100002874(&qword_1000A8518);
  uint64_t v43 = *(void *)(v1 - 8);
  uint64_t v44 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v42 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v40 = (char *)&v37 - v4;
  uint64_t v5 = sub_100002874(&qword_1000A86E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100083520();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100002874(&qword_1000A86F8);
  uint64_t v12 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100002874(&qword_1000A8700);
  __chkstk_darwin(v37);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100002874(&qword_1000A8718);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v39 = (uint64_t)&v37 - v21;
  if (qword_1000A7998 != -1) {
    swift_once();
  }
  id v22 = (id)qword_1000ACB58;
  sub_100083500();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v8);
  sub_100083560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_100083700();
  uint64_t v23 = sub_100083720();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 0, 1, v23);
  sub_100083550();
  swift_release();
  sub_100019138((uint64_t)v7, &qword_1000A86E8);
  if (qword_1000A7988 != -1) {
    swift_once();
  }
  sub_1000835D0();
  sub_100082FB0();
  uint64_t v24 = v38;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v38);
  uint64_t v25 = &v16[*(int *)(v37 + 36)];
  long long v26 = v46;
  *(_OWORD *)uint64_t v25 = v45;
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v47;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
  sub_100023E18();
  sub_100083420();
  sub_100019138((uint64_t)v16, &qword_1000A8700);
  uint64_t v27 = v39;
  sub_100019284((uint64_t)v20, v39, &qword_1000A8718);
  sub_100002874(&qword_1000A8528);
  sub_100023D5C(&qword_1000A8530, &qword_1000A8528);
  uint64_t v28 = v40;
  sub_1000835C0();
  sub_10001A720(v27, (uint64_t)v20, &qword_1000A8718);
  long long v30 = v42;
  uint64_t v29 = v43;
  long long v31 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v32 = v44;
  v31(v42, v28, v44);
  uint64_t v33 = v41;
  sub_10001A720((uint64_t)v20, v41, &qword_1000A8718);
  uint64_t v34 = sub_100002874(&qword_1000A91C8);
  v31((char *)(v33 + *(int *)(v34 + 48)), v30, v32);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v29 + 8);
  v35(v28, v32);
  sub_100019138(v27, &qword_1000A8718);
  v35(v30, v32);
  return sub_100019138((uint64_t)v20, &qword_1000A8718);
}

uint64_t sub_100040460@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000404B8()
{
  uint64_t v0 = sub_1000832D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100002874(&qword_1000A9188);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1000831C0();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v7 = sub_100002874(&qword_1000A9190);
  sub_10003FB3C((uint64_t)&v6[*(int *)(v7 + 44)]);
  sub_1000832C0();
  sub_1000835D0();
  type metadata accessor for PlaceholderBackgroundView(0);
  sub_100023D5C(&qword_1000A9198, &qword_1000A9188);
  sub_100041E8C(&qword_1000A8908, (void (*)(uint64_t))type metadata accessor for PlaceholderBackgroundView);
  sub_100083460();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_100019138((uint64_t)v6, &qword_1000A9188);
}

uint64_t sub_1000406D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000836F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  if (qword_1000A79E0 != -1) {
    swift_once();
  }
  sub_100068514((uint64_t)v8);
  sub_1000836E0();
  sub_1000836D0();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v6, v2);
  v9(v8, v2);
  uint64_t result = sub_1000834C0();
  *a1 = result;
  return result;
}

uint64_t sub_100040850()
{
  if (qword_1000A79A8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1000A7988;
  swift_retain();
  if (v0 != -1) {
    swift_once();
  }
  sub_1000835D0();
  sub_100082FB0();
  sub_100002874(&qword_1000A9300);
  sub_100041D30();
  sub_100083420();
  return swift_release();
}

uint64_t sub_100040998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100083730();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000681E0((uint64_t)v5);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for WidgetFamily.systemSmall(_:))
  {
    LOBYTE(v11) = 0;
    goto LABEL_5;
  }
  if (v6 == enum case for WidgetFamily.systemMedium(_:))
  {
    LOBYTE(v11) = 1;
LABEL_5:
    sub_100040E4C();
    sub_100040EA0();
    sub_100083230();
    __int16 v11 = v13;
    sub_100002874(&qword_1000A9138);
    sub_100002874(&qword_1000A9140);
    sub_100040E10();
    sub_100040EF4();
    sub_100083230();
    if (HIBYTE(v13)) {
      __int16 v7 = 256;
    }
    else {
      __int16 v7 = 0;
    }
LABEL_12:
    __int16 v11 = v7 | v13;
    char v12 = 0;
    sub_100002874(&qword_1000A9168);
    sub_100040F70(&qword_1000A9170, &qword_1000A9168, (void (*)(void))sub_100040E10, (void (*)(void))sub_100040EF4);
    uint64_t result = sub_100083230();
    char v9 = v14;
    *(_WORD *)a1 = v13;
    *(unsigned char *)(a1 + 2) = v9;
    return result;
  }
  if (v6 == enum case for WidgetFamily.systemLarge(_:))
  {
    LOBYTE(v11) = 0;
    sub_100040DBC();
    sub_100083230();
    LOBYTE(v11) = v13;
    HIBYTE(v11) = 1;
    sub_100002874(&qword_1000A9138);
    sub_100002874(&qword_1000A9140);
    sub_100040E10();
    sub_100040EF4();
    sub_100083230();
    if (HIBYTE(v13)) {
      __int16 v7 = 256;
    }
    else {
      __int16 v7 = 0;
    }
    goto LABEL_12;
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

unint64_t sub_100040DBC()
{
  unint64_t result = qword_1000A9130;
  if (!qword_1000A9130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9130);
  }
  return result;
}

uint64_t sub_100040E10()
{
  return sub_100040F70(&qword_1000A9148, &qword_1000A9138, (void (*)(void))sub_100040E4C, (void (*)(void))sub_100040EA0);
}

unint64_t sub_100040E4C()
{
  unint64_t result = qword_1000A9150;
  if (!qword_1000A9150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9150);
  }
  return result;
}

unint64_t sub_100040EA0()
{
  unint64_t result = qword_1000A9158;
  if (!qword_1000A9158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9158);
  }
  return result;
}

unint64_t sub_100040EF4()
{
  unint64_t result = qword_1000A9160;
  if (!qword_1000A9160)
  {
    sub_1000028B8(&qword_1000A9140);
    sub_100040DBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9160);
  }
  return result;
}

uint64_t sub_100040F70(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderLargeWidgetView()
{
  return &type metadata for PlaceholderLargeWidgetView;
}

ValueMetadata *type metadata accessor for PlaceholderMediumWidgetView()
{
  return &type metadata for PlaceholderMediumWidgetView;
}

ValueMetadata *type metadata accessor for PlaceholderSmallWidgetView()
{
  return &type metadata for PlaceholderSmallWidgetView;
}

unint64_t sub_10004102C()
{
  unint64_t result = qword_1000A9178;
  if (!qword_1000A9178)
  {
    sub_1000028B8(&qword_1000A9180);
    sub_100040F70(&qword_1000A9170, &qword_1000A9168, (void (*)(void))sub_100040E10, (void (*)(void))sub_100040EF4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9178);
  }
  return result;
}

uint64_t sub_1000410E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000410FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100041118()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for PlaceholderBackgroundView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A92B8);
}

uint64_t sub_100041160()
{
  if (qword_1000A7A08 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100082F30();
  swift_release();
  swift_release();
  uint64_t v0 = v10;
  char v1 = v11;
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100082F00();
  sub_10001859C(v2, (uint64_t)qword_1000ACBA8);
  uint64_t v3 = sub_100082EE0();
  os_log_type_t v4 = sub_100083920();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    char v11 = v1;
    sub_100002874(&qword_1000A95F0);
    uint64_t v6 = sub_100083890();
    uint64_t v10 = sub_10006863C(v6, v7, &v9);
    sub_100083A00();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "PlaceholderSmallWidgetView: locationAccuracyAuthorization %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v0;
}

unint64_t sub_100041380()
{
  unint64_t result = qword_1000A91F8;
  if (!qword_1000A91F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A91F8);
  }
  return result;
}

uint64_t *sub_1000413DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000413FC(a1, a2, a3, &qword_1000A8498, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode);
}

uint64_t *sub_1000413FC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  int v8 = *(_DWORD *)(*(void *)(sub_100002874(a4) - 8) + 80);
  if ((v8 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v8 + 16) & ~(unint64_t)v8));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = a5(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10004150C(uint64_t a1, uint64_t a2)
{
  return sub_10004152C(a1, a2, &qword_1000A8498, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode);
}

uint64_t sub_10004152C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  sub_100002874(a3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = a4(0);
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(a1, v6);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1000415D4(void *a1, void *a2, uint64_t a3)
{
  return sub_1000415F4(a1, a2, a3, &qword_1000A8498, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode);
}

void *sub_1000415F4(void *a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  sub_100002874(a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = a5(0);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000416B4(void *a1, void *a2, uint64_t a3)
{
  return sub_1000416D4(a1, a2, a3, &qword_1000A8498, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode);
}

void *sub_1000416D4(void *a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, a4);
    sub_100002874(a4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = a5(0);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1000417AC(void *a1, const void *a2, uint64_t a3)
{
  return sub_1000417CC(a1, a2, a3, &qword_1000A8498, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode);
}

void *sub_1000417CC(void *a1, const void *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v8 = sub_100002874(a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = a5(0);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_100041894(void *a1, const void *a2, uint64_t a3)
{
  return sub_1000418B4(a1, a2, a3, &qword_1000A8498, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode);
}

void *sub_1000418B4(void *a1, const void *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, a4);
    uint64_t v9 = sub_100002874(a4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = a5(0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100041994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000419A8);
}

uint64_t sub_1000419A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000419B4(a1, a2, a3, &qword_1000A8490);
}

uint64_t sub_1000419B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_100002874(a4);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t sub_100041A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100041A34);
}

uint64_t sub_100041A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100041A40(a1, a2, a3, a4, &qword_1000A8490);
}

uint64_t sub_100041A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_100002874(a5);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

void sub_100041AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100041AD0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_100041B64(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100041B64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100082F90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for PlaceholderImageIcon()
{
  return &type metadata for PlaceholderImageIcon;
}

uint64_t sub_100041BC8(uint64_t a1)
{
  return sub_100041C2C(a1, &qword_1000A9188, &qword_1000A9198);
}

uint64_t sub_100041BDC()
{
  return sub_100023D5C(&qword_1000A92F0, &qword_1000A92F8);
}

uint64_t sub_100041C18(uint64_t a1)
{
  return sub_100041C2C(a1, &qword_1000A9208, &qword_1000A9228);
}

uint64_t sub_100041C2C(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100041CF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100041D14()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100041D30()
{
  unint64_t result = qword_1000A9308;
  if (!qword_1000A9308)
  {
    sub_1000028B8(&qword_1000A9300);
    sub_100023D5C(&qword_1000A9310, &qword_1000A9318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9308);
  }
  return result;
}

void *sub_100041DD0()
{
  return &protocol witness table for Color;
}

unint64_t sub_100041DE0()
{
  unint64_t result = qword_1000A9320;
  if (!qword_1000A9320)
  {
    sub_1000028B8(&qword_1000A9328);
    sub_100041D30();
    sub_100041E8C(&qword_1000A86E0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9320);
  }
  return result;
}

uint64_t sub_100041E8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100041ED4()
{
  uint64_t v0 = sub_100082F00();
  sub_100041F58(v0, qword_1000ACBA8);
  sub_10001859C(v0, (uint64_t)qword_1000ACBA8);
  return sub_100082EF0();
}

uint64_t *sub_100041F58(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *sub_100041FBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    char v11 = (uint64_t *)((char *)a2 + v9);
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100083730();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    char v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void **)((char *)a2 + v13);
    uint64_t v42 = a3;
    if (v16 == (void *)1)
    {
      *(_OWORD *)char v14 = *(_OWORD *)v15;
    }
    else
    {
      uint64_t v17 = (void *)*((void *)v15 + 1);
      *(void *)char v14 = v16;
      *((void *)v14 + 1) = v17;
      id v18 = v16;
      id v19 = v17;
    }
    uint64_t v20 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v20;
    *((_DWORD *)v14 + 8) = *((_DWORD *)v15 + 8);
    v14[36] = v15[36];
    uint64_t v21 = *((void *)v15 + 6);
    *((void *)v14 + 5) = *((void *)v15 + 5);
    *((void *)v14 + 6) = v21;
    v14[56] = v15[56];
    uint64_t v22 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v23 = &v14[v22];
    uint64_t v24 = &v15[v22];
    uint64_t v25 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = sub_100002874(&qword_1000A7A78);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      uint64_t v29 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v23, v24, v29);
      uint64_t v30 = *(int *)(v25 + 20);
      long long v31 = &v23[v30];
      uint64_t v32 = &v24[v30];
      uint64_t v33 = *(void **)&v24[v30];
      if (v33 == (void *)1)
      {
        *(_OWORD *)long long v31 = *(_OWORD *)v32;
      }
      else
      {
        uint64_t v34 = (void *)*((void *)v32 + 1);
        *(void *)long long v31 = v33;
        *((void *)v31 + 1) = v34;
        id v35 = v33;
        id v36 = v34;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v37 = *(int *)(v42 + 28);
    uint64_t v38 = (uint64_t *)((char *)a1 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    void *v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100042340(uint64_t a1, uint64_t a2)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100082F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100083730();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = (id *)(a1 + *(int *)(a2 + 24));
  if (*v7 != (id)1)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = (char *)v7 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v9 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_1000837F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    char v11 = (id *)&v8[*(int *)(v9 + 20)];
    if (*v11 != (id)1)
    {
    }
  }

  return swift_bridgeObjectRelease();
}

void *sub_100042534(void *a1, void *a2, uint64_t a3)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100082F80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100083730();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  char v14 = *(void **)((char *)a2 + v11);
  uint64_t v40 = a3;
  if (v14 == (void *)1)
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  else
  {
    uint64_t v15 = (void *)*((void *)v13 + 1);
    *(void *)uint64_t v12 = v14;
    *((void *)v12 + 1) = v15;
    id v16 = v14;
    id v17 = v15;
  }
  uint64_t v18 = *((void *)v13 + 3);
  *((void *)v12 + 2) = *((void *)v13 + 2);
  *((void *)v12 + 3) = v18;
  *((_DWORD *)v12 + 8) = *((_DWORD *)v13 + 8);
  v12[36] = v13[36];
  uint64_t v19 = *((void *)v13 + 6);
  *((void *)v12 + 5) = *((void *)v13 + 5);
  *((void *)v12 + 6) = v19;
  v12[56] = v13[56];
  uint64_t v20 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v21 = &v12[v20];
  uint64_t v22 = &v13[v20];
  uint64_t v23 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    uint64_t v26 = sub_100002874(&qword_1000A7A78);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v21, v22, v27);
    uint64_t v28 = *(int *)(v23 + 20);
    uint64_t v29 = &v21[v28];
    uint64_t v30 = &v22[v28];
    long long v31 = *(void **)&v22[v28];
    if (v31 == (void *)1)
    {
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    }
    else
    {
      uint64_t v32 = (void *)*((void *)v30 + 1);
      *(void *)uint64_t v29 = v31;
      *((void *)v29 + 1) = v32;
      id v33 = v31;
      id v34 = v32;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v35 = *(int *)(v40 + 28);
  id v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = v37[1];
  *id v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100042868(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100019138((uint64_t)a1 + v7, &qword_1000A8170);
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100083730();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (uint64_t)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  char v14 = *(void **)((char *)a1 + v11);
  uint64_t v15 = *(void **)((char *)a2 + v11);
  if (v14 == (void *)1)
  {
    if (v15 != (void *)1)
    {
      *(void *)uint64_t v12 = v15;
      id v16 = (void *)*((void *)v13 + 1);
      *(void *)(v12 + 8) = v16;
      id v17 = v15;
      id v18 = v16;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (v15 == (void *)1)
  {
    sub_10001B23C(v12);
LABEL_14:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    goto LABEL_16;
  }
  *(void *)uint64_t v12 = v15;
  id v19 = v15;

  uint64_t v20 = *(void **)(v12 + 8);
  uint64_t v21 = (void *)*((void *)v13 + 1);
  *(void *)(v12 + 8) = v21;
  id v22 = v21;

LABEL_16:
  *(void *)(v12 + 16) = *((void *)v13 + 2);
  *(void *)(v12 + 24) = *((void *)v13 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v23 = *((_DWORD *)v13 + 8);
  *(unsigned char *)(v12 + 36) = v13[36];
  *(_DWORD *)(v12 + 32) = v23;
  *(void *)(v12 + 40) = *((void *)v13 + 5);
  *(void *)(v12 + 48) = *((void *)v13 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 56) = v13[56];
  uint64_t v24 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v25 = (char *)(v12 + v24);
  uint64_t v26 = &v13[v24];
  uint64_t v27 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      uint64_t v38 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v25, v26, v38);
      uint64_t v39 = *(int *)(v27 + 20);
      uint64_t v40 = (void **)&v25[v39];
      uint64_t v41 = &v26[v39];
      uint64_t v42 = *v40;
      uint64_t v43 = *(void **)v41;
      if (*v40 == (void *)1)
      {
        if (v43 != (void *)1)
        {
          *uint64_t v40 = v43;
          uint64_t v44 = (void *)*((void *)v41 + 1);
          v40[1] = v44;
          id v45 = v43;
          id v46 = v44;
          goto LABEL_32;
        }
      }
      else
      {
        if (v43 != (void *)1)
        {
          *uint64_t v40 = v43;
          id v50 = v43;

          uint64_t v51 = v40[1];
          uint64_t v52 = (void *)*((void *)v41 + 1);
          v40[1] = v52;
          id v53 = v52;

          goto LABEL_32;
        }
        sub_10001B23C((uint64_t)v40);
      }
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      goto LABEL_32;
    }
    sub_100047148((uint64_t)v25, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_22;
  }
  if (v31)
  {
LABEL_22:
    uint64_t v37 = sub_100002874(&qword_1000A7A78);
    memcpy(v25, v26, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_32;
  }
  uint64_t v32 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v25, v26, v32);
  uint64_t v33 = *(int *)(v27 + 20);
  id v34 = &v25[v33];
  uint64_t v35 = &v26[v33];
  id v36 = *(void **)&v26[v33];
  if (v36 == (void *)1)
  {
    *(_OWORD *)id v34 = *(_OWORD *)v35;
  }
  else
  {
    *(void *)id v34 = v36;
    long long v47 = (void *)*((void *)v35 + 1);
    *((void *)v34 + 1) = v47;
    id v48 = v36;
    id v49 = v47;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_32:
  uint64_t v54 = a3[7];
  uint64_t v55 = (void *)((char *)a1 + v54);
  uint64_t v56 = (void *)((char *)a2 + v54);
  void *v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100042D28(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100082F80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100083730();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  char v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  long long v16 = *(_OWORD *)&a2[v13 + 16];
  *(_OWORD *)char v14 = *(_OWORD *)&a2[v13];
  *((_OWORD *)v14 + 1) = v16;
  *((_DWORD *)v14 + 8) = *(_DWORD *)&a2[v13 + 32];
  v14[36] = a2[v13 + 36];
  *(_OWORD *)(v14 + 40) = *(_OWORD *)&a2[v13 + 40];
  v14[56] = a2[v13 + 56];
  uint64_t v17 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  id v18 = &v14[v17];
  id v19 = &v15[v17];
  uint64_t v20 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100002874(&qword_1000A7A78);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v18, v19, v23);
    *(_OWORD *)&v18[*(int *)(v20 + 20)] = *(_OWORD *)&v19[*(int *)(v20 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_100042FE8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    uint64_t v6 = sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100019138((uint64_t)&a1[v8], &qword_1000A8170);
    uint64_t v11 = sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100083730();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (uint64_t)&a1[v13];
  uint64_t v15 = &a2[v13];
  long long v16 = *(void **)&a1[v13];
  if (v16 == (void *)1) {
    goto LABEL_11;
  }
  if (*(void *)v15 == 1)
  {
    sub_10001B23C(v14);
LABEL_11:
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    goto LABEL_13;
  }
  *(void *)uint64_t v14 = *(void *)v15;

  uint64_t v17 = *(void **)(v14 + 8);
  *(void *)(v14 + 8) = *((void *)v15 + 1);

LABEL_13:
  uint64_t v18 = *((void *)v15 + 3);
  *(void *)(v14 + 16) = *((void *)v15 + 2);
  *(void *)(v14 + 24) = v18;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v14 + 32) = *((_DWORD *)v15 + 8);
  *(unsigned char *)(v14 + 36) = v15[36];
  uint64_t v19 = *((void *)v15 + 6);
  *(void *)(v14 + 40) = *((void *)v15 + 5);
  *(void *)(v14 + 48) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 56) = v15[56];
  uint64_t v20 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v21 = (char *)(v14 + v20);
  uint64_t v22 = &v15[v20];
  uint64_t v23 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      uint64_t v28 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v21, v22, v28);
      *(_OWORD *)&v21[*(int *)(v23 + 20)] = *(_OWORD *)&v22[*(int *)(v23 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v29 = sub_100002874(&qword_1000A7A78);
    memcpy(v21, v22, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  if (v27)
  {
    sub_100047148((uint64_t)v21, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_18;
  }
  uint64_t v36 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v21, v22, v36);
  uint64_t v37 = *(int *)(v23 + 20);
  uint64_t v38 = (void **)&v21[v37];
  uint64_t v39 = (void **)&v22[v37];
  uint64_t v40 = *v38;
  if (*v38 != (void *)1)
  {
    if (*v39 != (void *)1)
    {
      void *v38 = *v39;

      uint64_t v41 = v38[1];
      v38[1] = v39[1];

      goto LABEL_19;
    }
    sub_10001B23C((uint64_t)v38);
  }
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
LABEL_19:
  uint64_t v30 = a3[7];
  int v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v34 = *(void *)v32;
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)int v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10004340C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100043420);
}

uint64_t sub_100043420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8288);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002874(&qword_1000A8178);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for NavigationETAEntryContent(0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_10004358C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000435A0);
}

uint64_t sub_1000435A0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100002874(&qword_1000A8288);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100002874(&qword_1000A8178);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = type metadata accessor for NavigationETAEntryContent(0);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7] + 8) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for NavigationETAMediumLargePlatterContent(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9388);
}

void sub_100043728()
{
  sub_10004386C(319, (unint64_t *)&unk_1000A82F8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_10004386C(319, (unint64_t *)&qword_1000A81E8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F)
    {
      type metadata accessor for NavigationETAEntryContent(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10004386C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100082F90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *sub_1000438C0(char *a1, char **a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)unint64_t v4 = *a2;
    unint64_t v4 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *a2;
    if (*a2 == (char *)1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v8 = a2[1];
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v8;
      uint64_t v9 = v6;
      uint64_t v10 = v8;
    }
    uint64_t v11 = a2[3];
    *((void *)v4 + 2) = a2[2];
    *((void *)v4 + 3) = v11;
    *((_DWORD *)v4 + 8) = *((_DWORD *)a2 + 8);
    v4[36] = *((unsigned char *)a2 + 36);
    uint64_t v12 = a2[6];
    *((void *)v4 + 5) = a2[5];
    *((void *)v4 + 6) = v12;
    v4[56] = *((unsigned char *)a2 + 56);
    uint64_t v13 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v14 = &v4[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_100002874(&qword_1000A7A78);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v15, v20);
      uint64_t v21 = *(int *)(v16 + 20);
      uint64_t v22 = &v14[v21];
      uint64_t v23 = &v15[v21];
      uint64_t v24 = *(void **)&v15[v21];
      if (v24 == (void *)1)
      {
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      }
      else
      {
        uint64_t v25 = (void *)*((void *)v23 + 1);
        *(void *)uint64_t v22 = v24;
        *((void *)v22 + 1) = v25;
        id v26 = v24;
        id v27 = v25;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v28 = *(int *)(a3 + 20);
    uint64_t v29 = &v4[v28];
    uint64_t v30 = (char **)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    *(void *)uint64_t v29 = *v30;
    *((void *)v29 + 1) = v31;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100043B10(id *a1)
{
  if (*a1 != (id)1)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v3 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    uint64_t v4 = sub_1000837F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
    int v5 = (id *)&v2[*(int *)(v3 + 20)];
    if (*v5 != (id)1)
    {
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100043C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(void **)a2;
  if (*(void *)a2 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v6 = *(void **)(a2 + 8);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    id v7 = v5;
    id v8 = v6;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_100002874(&qword_1000A7A78);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
    uint64_t v19 = *(int *)(v14 + 20);
    uint64_t v20 = &v12[v19];
    uint64_t v21 = &v13[v19];
    uint64_t v22 = *(void **)&v13[v19];
    if (v22 == (void *)1)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = (void *)*((void *)v21 + 1);
      *(void *)uint64_t v20 = v22;
      *((void *)v20 + 1) = v23;
      id v24 = v22;
      id v25 = v23;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v26 = *(int *)(a3 + 20);
  id v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  *id v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100043E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  id v7 = *(void **)a2;
  if (*(void *)a1 == 1)
  {
    if (v7 != (void *)1)
    {
      *(void *)a1 = v7;
      id v8 = *(void **)(a2 + 8);
      *(void *)(a1 + 8) = v8;
      id v9 = v7;
      id v10 = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == (void *)1)
  {
    sub_10001B23C(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *(void *)a1 = v7;
  id v11 = v7;

  uint64_t v12 = *(void **)(a1 + 8);
  uint64_t v13 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v13;
  id v14 = v13;

LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v16 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v30 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v17, v18, v30);
      uint64_t v31 = *(int *)(v19 + 20);
      uint64_t v32 = (void **)&v17[v31];
      uint64_t v33 = &v18[v31];
      uint64_t v34 = *v32;
      uint64_t v35 = *(void **)v33;
      if (*v32 == (void *)1)
      {
        if (v35 != (void *)1)
        {
          char *v32 = v35;
          uint64_t v36 = (void *)*((void *)v33 + 1);
          v32[1] = v36;
          id v37 = v35;
          id v38 = v36;
          goto LABEL_24;
        }
      }
      else
      {
        if (v35 != (void *)1)
        {
          char *v32 = v35;
          id v42 = v35;

          uint64_t v43 = v32[1];
          uint64_t v44 = (void *)*((void *)v33 + 1);
          v32[1] = v44;
          id v45 = v44;

          goto LABEL_24;
        }
        sub_10001B23C((uint64_t)v32);
      }
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      goto LABEL_24;
    }
    sub_100047148((uint64_t)v17, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    uint64_t v29 = sub_100002874(&qword_1000A7A78);
    memcpy(v17, v18, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_24;
  }
  uint64_t v24 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v17, v18, v24);
  uint64_t v25 = *(int *)(v19 + 20);
  uint64_t v26 = &v17[v25];
  id v27 = &v18[v25];
  uint64_t v28 = *(void **)&v18[v25];
  if (v28 == (void *)1)
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  else
  {
    *(void *)uint64_t v26 = v28;
    uint64_t v39 = (void *)*((void *)v27 + 1);
    *((void *)v26 + 1) = v39;
    id v40 = v28;
    id v41 = v39;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_24:
  uint64_t v46 = *(int *)(a3 + 20);
  long long v47 = (void *)(a1 + v46);
  id v48 = (void *)(a2 + v46);
  void *v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100044194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  id v8 = (char *)(a1 + v7);
  id v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100002874(&qword_1000A7A78);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100044314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  if (*(void *)a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_10001B23C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

LABEL_6:
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
      *(_OWORD *)&v11[*(int *)(v13 + 20)] = *(_OWORD *)&v12[*(int *)(v13 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v19 = sub_100002874(&qword_1000A7A78);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  if (v17)
  {
    sub_100047148((uint64_t)v11, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_11;
  }
  uint64_t v26 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v11, v12, v26);
  uint64_t v27 = *(int *)(v13 + 20);
  uint64_t v28 = (void **)&v11[v27];
  uint64_t v29 = (void **)&v12[v27];
  uint64_t v30 = *v28;
  if (*v28 != (void *)1)
  {
    if (*v29 != (void *)1)
    {
      void *v28 = *v29;

      uint64_t v31 = v28[1];
      v28[1] = v29[1];

      goto LABEL_12;
    }
    sub_10001B23C((uint64_t)v28);
  }
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
LABEL_12:
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)(a1 + v20);
  int v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000445D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000445E4);
}

uint64_t sub_1000445E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NavigationETAEntryContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000446A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000446BC);
}

uint64_t sub_1000446BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for NavigationETAEntryContent(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for NavigationETASmallPlatterContent(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9420);
}

uint64_t sub_10004479C()
{
  uint64_t result = type metadata accessor for NavigationETAEntryContent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100044830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004484C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A9460);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_100002874(&qword_1000A9468);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int v15 = (char *)&v20 - v14;
  *(void *)int v15 = sub_100083130();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v16 = sub_100002874(&qword_1000A9480);
  sub_100044A40(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  *(void *)uint64_t v9 = sub_100083130();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v17 = sub_100002874(&qword_1000A9488);
  sub_100044CF0(a1, (uint64_t)&v9[*(int *)(v17 + 44)]);
  sub_10001A720((uint64_t)v15, (uint64_t)v13, &qword_1000A9468);
  sub_10001A720((uint64_t)v9, (uint64_t)v7, &qword_1000A9460);
  sub_10001A720((uint64_t)v13, a2, &qword_1000A9468);
  uint64_t v18 = sub_100002874(&qword_1000A9570);
  sub_10001A720((uint64_t)v7, a2 + *(int *)(v18 + 48), &qword_1000A9460);
  sub_100019138((uint64_t)v9, &qword_1000A9460);
  sub_100019138((uint64_t)v15, &qword_1000A9468);
  sub_100019138((uint64_t)v7, &qword_1000A9460);
  return sub_100019138((uint64_t)v13, &qword_1000A9468);
}

uint64_t sub_100044A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A94B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v40 = (char *)&v36 - v6;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v43 = v7;
  uint64_t v44 = v8;
  sub_100023C14();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000833B0();
  uint64_t v37 = v10;
  uint64_t v38 = v9;
  uint64_t v39 = v11;
  char v13 = v12 & 1;
  LODWORD(v43) = sub_1000832A0();
  uint64_t v14 = sub_100083380();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_100083320();
  uint64_t v19 = sub_100083390();
  uint64_t v21 = v20;
  char v23 = v22;
  swift_release();
  char v24 = v23 & 1;
  sub_100023DA0(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_100083330();
  uint64_t v25 = sub_100083370();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  LOBYTE(v14) = v30 & 1;
  sub_100023DA0(v19, v21, v24);
  swift_bridgeObjectRelease();
  sub_100023DA0(v38, v37, v13);
  swift_bridgeObjectRelease();
  uint64_t v43 = v25;
  uint64_t v44 = v27;
  char v45 = v14;
  uint64_t v46 = v29;
  uint64_t v31 = (uint64_t)v40;
  sub_100083420();
  sub_100023DA0(v25, v27, v14);
  swift_bridgeObjectRelease();
  uint64_t v32 = v41;
  sub_10001A720(v31, v41, &qword_1000A94B0);
  uint64_t v33 = v42;
  sub_10001A720(v32, v42, &qword_1000A94B0);
  uint64_t v34 = v33 + *(int *)(sub_100002874(&qword_1000A94B8) + 48);
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  sub_100019138(v31, &qword_1000A94B0);
  return sub_100019138(v32, &qword_1000A94B0);
}

uint64_t sub_100044CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_100083170();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100002874(&qword_1000A9498);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  __chkstk_darwin(v4);
  uint64_t v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100002874(&qword_1000A94A0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v44 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v38 - v11;
  __chkstk_darwin(v10);
  uint64_t v43 = (uint64_t)&v38 - v12;
  sub_100083160();
  v52._countAndFlagsBits = 541152325;
  v52._object = (void *)0xE400000000000000;
  sub_100083150(v52);
  sub_100083140(*(Swift::String *)(a1 + 40));
  v53._countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  sub_100083150(v53);
  sub_100083190();
  uint64_t v13 = sub_1000833A0();
  uint64_t v38 = v14;
  uint64_t v39 = v13;
  uint64_t v40 = v15;
  char v17 = v16 & 1;
  LODWORD(v48) = sub_1000832B0();
  uint64_t v18 = sub_100083380();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_100083340();
  uint64_t v23 = sub_100083390();
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  swift_release();
  sub_100023DA0(v18, v20, v22);
  swift_bridgeObjectRelease();
  sub_100023DA0(v39, v38, v17);
  swift_bridgeObjectRelease();
  id v48 = (void *)v23;
  id v49 = (void *)v25;
  char v50 = v27 & 1;
  uint64_t v51 = v29;
  char v30 = v41;
  sub_1000833C0();
  sub_100023DA0(v23, v25, v27 & 1);
  swift_bridgeObjectRelease();
  id v48 = &type metadata for Text;
  id v49 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = (uint64_t)v42;
  uint64_t v32 = v45;
  sub_100083420();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v32);
  uint64_t v33 = v43;
  sub_100019284(v31, v43, &qword_1000A94A0);
  uint64_t v34 = v44;
  sub_10001A720(v33, v44, &qword_1000A94A0);
  uint64_t v35 = v47;
  sub_10001A720(v34, v47, &qword_1000A94A0);
  uint64_t v36 = v35 + *(int *)(sub_100002874(&qword_1000A94A8) + 48);
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 1;
  sub_100019138(v33, &qword_1000A94A0);
  return sub_100019138(v34, &qword_1000A94A0);
}

uint64_t sub_1000450F4@<X0>(uint64_t a1@<X8>)
{
  return sub_100047080(1, &qword_1000A9568, (uint64_t (*)(uint64_t))sub_10004484C, a1);
}

uint64_t sub_100045118()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100045134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A9460);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_100002874(&qword_1000A9468);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = sub_100002874(&qword_1000A9470);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v21 = (char *)&v30 - v20;
  *(void *)char v21 = sub_100083130();
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  uint64_t v22 = sub_100002874(&qword_1000A9478);
  sub_1000454B0(a1, (uint64_t)&v21[*(int *)(v22 + 44)]);
  sub_1000835D0();
  sub_100082FB0();
  uint64_t v23 = v36;
  int v35 = v37;
  uint64_t v34 = v38;
  int v33 = v39;
  uint64_t v31 = v41;
  uint64_t v32 = v40;
  *(void *)uint64_t v15 = sub_100083130();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v24 = sub_100002874(&qword_1000A9480);
  sub_100046988(a1, (uint64_t)&v15[*(int *)(v24 + 44)]);
  *(void *)uint64_t v9 = sub_100083130();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v25 = sub_100002874(&qword_1000A9488);
  sub_100046C48(a1, (uint64_t)&v9[*(int *)(v25 + 44)]);
  char v30 = v19;
  sub_10001A720((uint64_t)v21, (uint64_t)v19, &qword_1000A9470);
  sub_10001A720((uint64_t)v15, (uint64_t)v13, &qword_1000A9468);
  sub_10001A720((uint64_t)v9, (uint64_t)v7, &qword_1000A9460);
  sub_10001A720((uint64_t)v19, a2, &qword_1000A9470);
  char v26 = (int *)sub_100002874(&qword_1000A9490);
  uint64_t v27 = a2 + v26[12];
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  *(void *)(v27 + 16) = v23;
  *(unsigned char *)(v27 + 24) = v35;
  *(void *)(v27 + 32) = v34;
  *(unsigned char *)(v27 + 40) = v33;
  uint64_t v28 = v31;
  *(void *)(v27 + 48) = v32;
  *(void *)(v27 + 56) = v28;
  sub_10001A720((uint64_t)v13, a2 + v26[16], &qword_1000A9468);
  sub_10001A720((uint64_t)v7, a2 + v26[20], &qword_1000A9460);
  sub_100019138((uint64_t)v9, &qword_1000A9460);
  sub_100019138((uint64_t)v15, &qword_1000A9468);
  sub_100019138((uint64_t)v21, &qword_1000A9470);
  sub_100019138((uint64_t)v7, &qword_1000A9460);
  sub_100019138((uint64_t)v13, &qword_1000A9468);
  return sub_100019138((uint64_t)v30, &qword_1000A9470);
}

uint64_t sub_1000454B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A94C0);
  __chkstk_darwin(v4 - 8);
  id v85 = (uint64_t *)((char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100002874(&qword_1000A94C8);
  uint64_t v101 = *(void *)(v6 - 8);
  uint64_t v102 = v6;
  __chkstk_darwin(v6);
  uint64_t v84 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NavigationETAMediumLargePlatterContent(0);
  __chkstk_darwin(v8);
  uint64_t v99 = (uint64_t)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100002874(&qword_1000A94D0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v103 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v81 - v13;
  uint64_t v14 = sub_100002874(&qword_1000A86E8);
  __chkstk_darwin(v14 - 8);
  uint64_t v90 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100083520();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100002874(&qword_1000A86F8);
  uint64_t v93 = *(void *)(v18 - 8);
  uint64_t v94 = v18;
  __chkstk_darwin(v18);
  uint64_t v89 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100002874(&qword_1000A8700);
  __chkstk_darwin(v92);
  uint64_t v91 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100002874(&qword_1000A8718);
  uint64_t v21 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v88 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100082F80();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v81 - v28;
  uint64_t v30 = sub_100002874(&qword_1000A94D8);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v98 = (uint64_t)&v81 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v97 = (uint64_t)&v81 - v33;
  uint64_t v95 = v8;
  uint64_t v34 = a1 + *(int *)(v8 + 24);
  int v35 = *(void **)v34;
  if (*(void *)v34 == 1)
  {
    uint64_t v36 = 1;
    uint64_t v37 = (uint64_t)v100;
LABEL_8:
    uint64_t v54 = v97;
    goto LABEL_9;
  }
  uint64_t v83 = a2;
  uint64_t v38 = *(void **)(v34 + 8);
  uint64_t v82 = a1;
  sub_1000681A4((uint64_t)v29);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, v23);
  int v39 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v27, v23);
  if (v39 != enum case for ColorScheme.light(_:))
  {
    int v35 = v38;
    if (v39 != enum case for ColorScheme.dark(_:))
    {
      uint64_t result = sub_100083B70();
      __break(1u);
      return result;
    }
  }
  uint64_t v40 = *(void (**)(char *, uint64_t))(v24 + 8);
  id v41 = v35;
  v40(v29, v23);
  if (!v35)
  {
    uint64_t v36 = 1;
    a2 = v83;
    uint64_t v37 = (uint64_t)v100;
    a1 = v82;
    goto LABEL_8;
  }
  id v42 = v41;
  sub_100083500();
  uint64_t v43 = v86;
  uint64_t v44 = v87;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v17, enum case for Image.ResizingMode.stretch(_:), v87);
  sub_100083560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v44);
  uint64_t v45 = (uint64_t)v90;
  sub_100083700();
  uint64_t v46 = sub_100083720();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
  uint64_t v47 = v89;
  sub_100083550();
  swift_release();
  sub_100019138(v45, &qword_1000A86E8);
  sub_1000835D0();
  sub_100082FB0();
  uint64_t v49 = v93;
  uint64_t v48 = v94;
  uint64_t v50 = (uint64_t)v91;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v91, v47, v94);
  uint64_t v51 = (_OWORD *)(v50 + *(int *)(v92 + 36));
  long long v52 = v105;
  *uint64_t v51 = v104;
  v51[1] = v52;
  v51[2] = v106;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v48);
  sub_100023E18();
  uint64_t v53 = (uint64_t)v88;
  sub_100083420();

  sub_100019138(v50, &qword_1000A8700);
  uint64_t v54 = v97;
  sub_100019284(v53, v97, &qword_1000A8718);
  uint64_t v36 = 0;
  a2 = v83;
  uint64_t v37 = (uint64_t)v100;
  a1 = v82;
LABEL_9:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v54, v36, 1, v96);
  int v55 = *(unsigned __int8 *)(v34 + 56);
  uint64_t v56 = v99;
  sub_1000470E4(a1, v99);
  if (v55 == 1)
  {
    uint64_t v57 = v56 + *(int *)(v95 + 24);
    int v58 = *(_DWORD *)(v57 + 32);
    char v59 = *(unsigned char *)(v57 + 36);
    sub_100047148(v56, type metadata accessor for NavigationETAMediumLargePlatterContent);
    uint64_t v60 = 1;
    uint64_t v61 = v102;
    if ((v59 & 1) == 0 && !v58)
    {
      uint64_t v62 = sub_1000831C0();
      uint64_t v63 = (uint64_t)v85;
      *id v85 = v62;
      *(void *)(v63 + 8) = 0;
      *(unsigned char *)(v63 + 16) = 1;
      uint64_t v64 = sub_100002874(&qword_1000A94E8);
      sub_100045F70(v63 + *(int *)(v64 + 44));
      if (qword_1000A79B0 != -1) {
        swift_once();
      }
      char v65 = sub_100083300();
      sub_100082F60();
      uint64_t v67 = v66;
      uint64_t v69 = v68;
      uint64_t v71 = v70;
      uint64_t v73 = v72;
      uint64_t v74 = v84;
      sub_10001A720(v63, v84, &qword_1000A94C0);
      uint64_t v75 = v74 + *(int *)(v61 + 36);
      *(unsigned char *)uint64_t v75 = v65;
      *(void *)(v75 + 8) = v67;
      *(void *)(v75 + 16) = v69;
      *(void *)(v75 + 24) = v71;
      *(void *)(v75 + 32) = v73;
      *(unsigned char *)(v75 + 40) = 0;
      sub_100019138(v63, &qword_1000A94C0);
      sub_100019284(v74, v37, &qword_1000A94C8);
      uint64_t v60 = 0;
    }
  }
  else
  {
    sub_100047148(v56, type metadata accessor for NavigationETAMediumLargePlatterContent);
    uint64_t v60 = 1;
    uint64_t v61 = v102;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56))(v37, v60, 1, v61);
  uint64_t v76 = v98;
  sub_10001A720(v54, v98, &qword_1000A94D8);
  uint64_t v77 = v103;
  sub_10001A720(v37, v103, &qword_1000A94D0);
  sub_10001A720(v76, a2, &qword_1000A94D8);
  uint64_t v78 = sub_100002874(&qword_1000A94E0);
  uint64_t v79 = a2 + *(int *)(v78 + 48);
  *(void *)uint64_t v79 = 0;
  *(unsigned char *)(v79 + 8) = 1;
  sub_10001A720(v77, a2 + *(int *)(v78 + 64), &qword_1000A94D0);
  sub_100019138(v37, &qword_1000A94D0);
  sub_100019138(v54, &qword_1000A94D8);
  sub_100019138(v77, &qword_1000A94D0);
  return sub_100019138(v76, &qword_1000A94D8);
}

uint64_t sub_100045F70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = sub_100083730();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100082D90();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A94F0);
  uint64_t v36 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100002874(&qword_1000A94F8);
  uint64_t v11 = __chkstk_darwin(v35);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v34 = (char *)&v33 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v33 - v19;
  type metadata accessor for NavigationETAMediumLargePlatterContent(0);
  sub_1000681E0((uint64_t)v4);
  sub_10005E820((uint64_t)v4, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_100002874(&qword_1000A9500);
  sub_100047208(&qword_1000A9508, &qword_1000A9500, (void (*)(void))sub_1000471A8);
  sub_100083350();
  if (qword_1000A7A10 != -1) {
    swift_once();
  }
  v21.super.Class isa = (Class)qword_1000ACBD0;
  v40._countAndFlagsBits = 0xD000000000000021;
  v32._countAndFlagsBits = 0x8000000100095D00;
  v40._object = (void *)0x8000000100095CD0;
  v41.value._countAndFlagsBits = 0;
  v41.value._object = 0;
  v42._countAndFlagsBits = 0x5445206572616853;
  v42._object = (void *)0xE900000000000041;
  uint64_t v38 = sub_100082D70(v40, v41, v21, v42, v32);
  uint64_t v39 = v22;
  sub_100023C14();
  uint64_t v23 = sub_1000833B0();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_100023D5C(&qword_1000A9550, &qword_1000A94F0);
  sub_100083430();
  sub_100023DA0(v23, v25, v27);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  uint64_t v28 = (uint64_t)v34;
  sub_100083000();
  sub_100019138((uint64_t)v16, &qword_1000A94F8);
  sub_100019284(v28, (uint64_t)v20, &qword_1000A94F8);
  sub_10001A720((uint64_t)v20, (uint64_t)v13, &qword_1000A94F8);
  uint64_t v29 = v37;
  sub_10001A720((uint64_t)v13, v37, &qword_1000A94F8);
  uint64_t v30 = v29 + *(int *)(sub_100002874(&qword_1000A9558) + 48);
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;
  sub_100019138((uint64_t)v20, &qword_1000A94F8);
  return sub_100019138((uint64_t)v13, &qword_1000A94F8);
}

uint64_t sub_100046438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v1 = sub_100083520();
  uint64_t v47 = *(void *)(v1 - 8);
  uint64_t v48 = v1;
  __chkstk_darwin(v1);
  uint64_t v46 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100002874(&qword_1000A86F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100002874(&qword_1000A9560);
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  __chkstk_darwin(v6);
  uint64_t v45 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A9538);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100002874(&qword_1000A9528);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100002874(&qword_1000A9518) - 8;
  __chkstk_darwin(v49);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100083510();
  uint64_t v18 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v19 = sub_100083540();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v5, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v5, 0, 1, v19);
  sub_100083530();
  swift_release();
  sub_100019138((uint64_t)v5, &qword_1000A86F0);
  NSBundle v21 = v46;
  uint64_t v22 = v47;
  uint64_t v23 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for Image.ResizingMode.stretch(_:), v48);
  uint64_t v24 = sub_100083560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v23);
  *(void *)&long long v53 = v24;
  uint64_t v25 = v45;
  sub_1000833C0();
  swift_release();
  uint64_t v26 = sub_1000834A0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v50;
  uint64_t v28 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v11, v25, v51);
  uint64_t v30 = (uint64_t *)&v11[*(int *)(v9 + 44)];
  uint64_t *v30 = KeyPath;
  v30[1] = v26;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v28);
  sub_10001A720((uint64_t)v11, (uint64_t)v15, &qword_1000A9538);
  uint64_t v31 = &v15[*(int *)(v13 + 44)];
  *(void *)uint64_t v31 = 0;
  *((_WORD *)v31 + 4) = 1;
  sub_100019138((uint64_t)v11, &qword_1000A9538);
  sub_1000835D0();
  sub_100082FB0();
  sub_10001A720((uint64_t)v15, (uint64_t)v17, &qword_1000A9528);
  Swift::String v32 = &v17[*(int *)(v49 + 44)];
  long long v33 = v54;
  *(_OWORD *)Swift::String v32 = v53;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v55;
  sub_100019138((uint64_t)v15, &qword_1000A9528);
  LOBYTE(v9) = sub_100083300();
  sub_100082F60();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v42 = v52;
  sub_10001A720((uint64_t)v17, v52, &qword_1000A9518);
  uint64_t v43 = v42 + *(int *)(sub_100002874(&qword_1000A9500) + 36);
  *(unsigned char *)uint64_t v43 = v9;
  *(void *)(v43 + 8) = v35;
  *(void *)(v43 + 16) = v37;
  *(void *)(v43 + 24) = v39;
  *(void *)(v43 + 32) = v41;
  *(unsigned char *)(v43 + 40) = 0;
  return sub_100019138((uint64_t)v17, &qword_1000A9518);
}

uint64_t sub_100046988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A94B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)&v36 - v6;
  uint64_t v7 = a1 + *(int *)(type metadata accessor for NavigationETAMediumLargePlatterContent(0) + 24);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v43 = *(void *)(v7 + 16);
  uint64_t v44 = v8;
  sub_100023C14();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000833B0();
  uint64_t v37 = v10;
  uint64_t v38 = v9;
  uint64_t v39 = v11;
  char v13 = v12 & 1;
  LODWORD(v43) = sub_1000832A0();
  uint64_t v14 = sub_100083380();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_100083320();
  uint64_t v19 = sub_100083390();
  uint64_t v21 = v20;
  char v23 = v22;
  swift_release();
  char v24 = v23 & 1;
  sub_100023DA0(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_100083330();
  uint64_t v25 = sub_100083370();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  LOBYTE(v14) = v30 & 1;
  sub_100023DA0(v19, v21, v24);
  swift_bridgeObjectRelease();
  sub_100023DA0(v38, v37, v13);
  swift_bridgeObjectRelease();
  uint64_t v43 = v25;
  uint64_t v44 = v27;
  char v45 = v14;
  uint64_t v46 = v29;
  uint64_t v31 = (uint64_t)v40;
  sub_100083420();
  sub_100023DA0(v25, v27, v14);
  swift_bridgeObjectRelease();
  uint64_t v32 = v41;
  sub_10001A720(v31, v41, &qword_1000A94B0);
  uint64_t v33 = v42;
  sub_10001A720(v32, v42, &qword_1000A94B0);
  uint64_t v34 = v33 + *(int *)(sub_100002874(&qword_1000A94B8) + 48);
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  sub_100019138(v31, &qword_1000A94B0);
  return sub_100019138(v32, &qword_1000A94B0);
}

uint64_t sub_100046C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_100083170();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100002874(&qword_1000A9498);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  __chkstk_darwin(v4);
  uint64_t v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100002874(&qword_1000A94A0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v44 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v38 - v11;
  __chkstk_darwin(v10);
  uint64_t v43 = (uint64_t)&v38 - v12;
  sub_100083160();
  v52._countAndFlagsBits = 541152325;
  v52._object = (void *)0xE400000000000000;
  sub_100083150(v52);
  Swift::String v53 = *(Swift::String *)(a1
                         + *(int *)(type metadata accessor for NavigationETAMediumLargePlatterContent(0) + 24)
                         + 40);
  sub_100083140(v53);
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  sub_100083150(v54);
  sub_100083190();
  uint64_t v13 = sub_1000833A0();
  uint64_t v38 = v14;
  uint64_t v39 = v13;
  uint64_t v40 = v15;
  char v17 = v16 & 1;
  LODWORD(v48) = sub_1000832B0();
  uint64_t v18 = sub_100083380();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_100083340();
  uint64_t v23 = sub_100083390();
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  swift_release();
  sub_100023DA0(v18, v20, v22);
  swift_bridgeObjectRelease();
  sub_100023DA0(v39, v38, v17);
  swift_bridgeObjectRelease();
  uint64_t v48 = (void *)v23;
  uint64_t v49 = (void *)v25;
  char v50 = v27 & 1;
  uint64_t v51 = v29;
  char v30 = v41;
  sub_1000833C0();
  sub_100023DA0(v23, v25, v27 & 1);
  swift_bridgeObjectRelease();
  uint64_t v48 = &type metadata for Text;
  uint64_t v49 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = (uint64_t)v42;
  uint64_t v32 = v45;
  sub_100083420();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v32);
  uint64_t v33 = v43;
  sub_100019284(v31, v43, &qword_1000A94A0);
  uint64_t v34 = v44;
  sub_10001A720(v33, v44, &qword_1000A94A0);
  uint64_t v35 = v47;
  sub_10001A720(v34, v47, &qword_1000A94A0);
  uint64_t v36 = v35 + *(int *)(sub_100002874(&qword_1000A94A8) + 48);
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 1;
  sub_100019138(v33, &qword_1000A94A0);
  return sub_100019138(v34, &qword_1000A94A0);
}

uint64_t sub_10004705C@<X0>(uint64_t a1@<X8>)
{
  return sub_100047080(0, &qword_1000A9458, (uint64_t (*)(uint64_t))sub_100045134, a1);
}

uint64_t sub_100047080@<X0>(char a1@<W2>, uint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  *(void *)a4 = sub_1000831C0();
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = a1;
  sub_100002874(a2);
  return a3(v4);
}

uint64_t sub_1000470E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NavigationETAMediumLargePlatterContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100047148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000471A8()
{
  return sub_100047208(&qword_1000A9510, &qword_1000A9518, (void (*)(void))sub_1000471D8);
}

uint64_t sub_1000471D8()
{
  return sub_100047208(&qword_1000A9520, &qword_1000A9528, (void (*)(void))sub_100047284);
}

uint64_t sub_100047208(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100047284()
{
  unint64_t result = qword_1000A9530;
  if (!qword_1000A9530)
  {
    sub_1000028B8(&qword_1000A9538);
    swift_getOpaqueTypeConformance2();
    sub_100023D5C(&qword_1000A9540, &qword_1000A9548);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9530);
  }
  return result;
}

uint64_t sub_100047354@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000830A0();
  *a1 = result;
  return result;
}

uint64_t sub_100047380()
{
  return sub_1000830B0();
}

uint64_t sub_1000473AC()
{
  return sub_100023D5C(&qword_1000A9578, &qword_1000A9580);
}

uint64_t sub_1000473E8()
{
  return sub_100023D5C(&qword_1000A9588, (uint64_t *)&unk_1000A9590);
}

uint64_t sub_100047424()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100082F30();
  swift_release();
  swift_release();
  return v1;
}

id sub_10004749C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for LocationAuthorizationMonitor()) init];
  qword_1000ACBC0 = (uint64_t)result;
  return result;
}

void sub_1000474D0()
{
  uint64_t v1 = sub_100083610();
  uint64_t v30 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100083630();
  uint64_t v4 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000836A0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v0;
  uint64_t v11 = self;
  id v12 = v0;
  if ([v11 isMainThread])
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100082F00();
    sub_10001859C(v13, (uint64_t)qword_1000ACBA8);
    uint64_t v14 = sub_100082EE0();
    os_log_type_t v15 = sub_100083920();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v4 = swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "LocationAuthorizationMonitor: startMonitoring (on main queue)", (uint8_t *)v4, 2u);
      swift_slowDealloc();
    }

    sub_1000484B0();
    uint64_t *v10 = sub_1000839A0();
    (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
    uint64_t v1 = sub_1000836C0();
    (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
    if (v1)
    {
      swift_bridgeObjectRetain();
      char v16 = (void *)sub_1000839A0();
      id v17 = objc_allocWithZone((Class)CLLocationManager);
      uint64_t v18 = (char *)v12;
      NSString v19 = sub_100083850();
      swift_bridgeObjectRelease();
      id v20 = [v17 initWithEffectiveBundleIdentifier:v19 delegate:v18 onQueue:v16];

      char v21 = *(void **)&v18[OBJC_IVAR____TtC17GeneralMapsWidget28LocationAuthorizationMonitor_locationManager];
      *(void *)&v18[OBJC_IVAR____TtC17GeneralMapsWidget28LocationAuthorizationMonitor_locationManager] = v20;
      swift_release();

      return;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (qword_1000A7A00 != -1) {
LABEL_13:
  }
    swift_once();
  uint64_t v22 = sub_100082F00();
  sub_10001859C(v22, (uint64_t)qword_1000ACBA8);
  uint64_t v23 = sub_100082EE0();
  os_log_type_t v24 = sub_100083930();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "LocationAuthorizationMonitor: startMonitoring (on NON-MAIN queue?!?)", v25, 2u);
    swift_slowDealloc();
  }

  sub_1000484B0();
  char v26 = (void *)sub_1000839A0();
  aBlock[4] = sub_1000484A8;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009ECE8;
  char v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_100083620();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100018A68();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  sub_100083A40();
  sub_1000839B0();
  _Block_release(v27);
  swift_release();

  (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v29);
}

void sub_100047A64(void *a1)
{
  uint64_t v2 = sub_1000836A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000484B0();
  *uint64_t v5 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = sub_1000836C0();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1000839A0();
    id v8 = objc_allocWithZone((Class)CLLocationManager);
    uint64_t v9 = a1;
    NSString v10 = sub_100083850();
    swift_bridgeObjectRelease();
    id v11 = [v8 initWithEffectiveBundleIdentifier:v10 delegate:v9 onQueue:v7];

    id v12 = *(void **)&v9[OBJC_IVAR____TtC17GeneralMapsWidget28LocationAuthorizationMonitor_locationManager];
    *(void *)&v9[OBJC_IVAR____TtC17GeneralMapsWidget28LocationAuthorizationMonitor_locationManager] = v11;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100047C08(void *a1)
{
  uint64_t v2 = v1;
  if ([a1 authorizationStatus] - 3 > 1)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_100082F00();
    sub_10001859C(v12, (uint64_t)qword_1000ACBA8);
    uint64_t v13 = sub_100082EE0();
    os_log_type_t v14 = sub_100083920();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "LocationAuthorizationMonitor: not authorized", v15, 2u);
      swift_slowDealloc();
    }

    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v18 = 0;
    char v19 = 1;
    id v16 = v2;
  }
  else
  {
    id v4 = [a1 accuracyAuthorization];
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_100082F00();
    sub_10001859C(v5, (uint64_t)qword_1000ACBA8);
    char v6 = sub_100082EE0();
    os_log_type_t v7 = sub_100083920();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)id v8 = 136446210;
      type metadata accessor for CLAccuracyAuthorization(0);
      uint64_t v9 = sub_100083890();
      sub_10006863C(v9, v10, &v18);
      sub_100083A00();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "LocationAuthorizationMonitor: authorized with %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v18 = (uint64_t)v4;
    char v19 = 0;
    id v11 = v2;
  }
  return sub_100082F40();
}

id sub_100047F68()
{
  uint64_t v1 = sub_100002874(&qword_1000A95F8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC17GeneralMapsWidget28LocationAuthorizationMonitor_locationManager] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC17GeneralMapsWidget28LocationAuthorizationMonitor__accuracyAuthorization];
  uint64_t v11 = 0;
  char v12 = 1;
  char v6 = v0;
  sub_100002874(&qword_1000A95F0);
  sub_100082F20();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  os_log_type_t v7 = &v6[OBJC_IVAR____TtC17GeneralMapsWidget28LocationAuthorizationMonitor_bundleIdentifier];
  strcpy(&v6[OBJC_IVAR____TtC17GeneralMapsWidget28LocationAuthorizationMonitor_bundleIdentifier], "com.apple.Maps");
  v7[15] = -18;

  id v8 = (objc_class *)type metadata accessor for LocationAuthorizationMonitor();
  v10.receiver = v6;
  v10.super_class = v8;
  return [super init];
}

id sub_1000480F0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationAuthorizationMonitor();
  [super dealloc];
}

uint64_t sub_1000481C0()
{
  return type metadata accessor for LocationAuthorizationMonitor();
}

uint64_t type metadata accessor for LocationAuthorizationMonitor()
{
  uint64_t result = qword_1000A95D8;
  if (!qword_1000A95D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100048214()
{
  sub_1000482B8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000482B8()
{
  if (!qword_1000A95E8)
  {
    sub_1000028B8(&qword_1000A95F0);
    unint64_t v0 = sub_100082F50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A95E8);
    }
  }
}

void *sub_100048314()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100048320@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LocationAuthorizationMonitor();
  uint64_t result = sub_100082F10();
  *a1 = result;
  return result;
}

uint64_t sub_100048360@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100082F30();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1000483E8(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_100082F40();
}

uint64_t sub_100048470()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000484A8()
{
  sub_100047A64(*(void **)(v0 + 16));
}

unint64_t sub_1000484B0()
{
  unint64_t result = qword_1000A7F58;
  if (!qword_1000A7F58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000A7F58);
  }
  return result;
}

uint64_t sub_1000484F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100048500()
{
  return swift_release();
}

uint64_t sub_100048508(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = a2 + 7;
    objc_super v10 = (void *)a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 == (void *)1)
    {
      *(_OWORD *)(a1 + 56) = *v11;
    }
    else
    {
      uint64_t v13 = (void *)a2[8];
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v13;
      id v14 = v10;
      id v15 = v13;
    }
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    *(unsigned char *)(a1 + 76) = *((unsigned char *)a2 + 76);
    uint64_t v16 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
    id v17 = (char *)(a1 + v16);
    uint64_t v18 = (char *)a2 + v16;
    char v19 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100002874(&qword_1000A7A70);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
      uint64_t v23 = v19[5];
      os_log_type_t v24 = &v17[v23];
      uint64_t v25 = &v18[v23];
      char v26 = *(void **)&v18[v23];
      if (v26 == (void *)1)
      {
        *(_OWORD *)os_log_type_t v24 = *(_OWORD *)v25;
      }
      else
      {
        char v27 = (void *)*((void *)v25 + 1);
        *(void *)os_log_type_t v24 = v26;
        *((void *)v24 + 1) = v27;
        id v28 = v26;
        id v29 = v27;
      }
      uint64_t v30 = v19[6];
      uint64_t v31 = &v17[v30];
      uint64_t v32 = &v18[v30];
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      v31[16] = v32[16];
      uint64_t v33 = v19[7];
      uint64_t v34 = &v17[v33];
      uint64_t v35 = &v18[v33];
      uint64_t v36 = sub_100082D90();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = sub_100002874(&qword_1000A7A68);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v39 = *(int *)(a3 + 20);
    uint64_t v40 = (void *)(a1 + v39);
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_100083730();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    }
    else
    {
      *uint64_t v40 = *v41;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000488CC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v4 = *(void **)(a1 + 56);
  if (v4 != (void *)1)
  {
  }
  uint64_t v5 = a1 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v6 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    uint64_t v8 = (id *)(v5 + *(int *)(v6 + 20));
    if (*v8 != (id)1)
    {
    }
    uint64_t v9 = v5 + *(int *)(v6 + 28);
    uint64_t v10 = sub_100082D90();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
  }
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_100083730();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    return v14(v12, v13);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100048AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = (_OWORD *)(a2 + 56);
  uint64_t v9 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == (void *)1)
  {
    *(_OWORD *)(a1 + 56) = *v10;
  }
  else
  {
    uint64_t v11 = *(void **)(a2 + 64);
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v11;
    id v12 = v9;
    id v13 = v11;
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v14 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  id v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  id v17 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100002874(&qword_1000A7A70);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
    uint64_t v21 = v17[5];
    uint64_t v22 = &v15[v21];
    uint64_t v23 = &v16[v21];
    os_log_type_t v24 = *(void **)&v16[v21];
    if (v24 == (void *)1)
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
    else
    {
      uint64_t v25 = (void *)*((void *)v23 + 1);
      *(void *)uint64_t v22 = v24;
      *((void *)v22 + 1) = v25;
      id v26 = v24;
      id v27 = v25;
    }
    uint64_t v28 = v17[6];
    id v29 = &v15[v28];
    uint64_t v30 = &v16[v28];
    *(_OWORD *)id v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    uint64_t v31 = v17[7];
    uint64_t v32 = &v15[v31];
    uint64_t v33 = &v16[v31];
    uint64_t v34 = sub_100082D90();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = sub_100002874(&qword_1000A7A68);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_100083730();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  }
  else
  {
    void *v38 = *v39;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100048E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void **)(a2 + 56);
  if (v6 == (void *)1)
  {
    if (v8 != (void *)1)
    {
      *(void *)(a1 + 56) = v8;
      uint64_t v9 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v9;
      id v10 = v8;
      id v11 = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 == (void *)1)
  {
    sub_10001B23C(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(void *)(a1 + 56) = v8;
  id v12 = v8;

  id v13 = *(void **)(a1 + 64);
  uint64_t v14 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v14;
  id v15 = v14;

LABEL_8:
  int v16 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v16;
  uint64_t v17 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (char *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22((uint64_t)v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_10004C328(v18, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
      goto LABEL_14;
    }
    uint64_t v33 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v18, v19, v33);
    uint64_t v34 = v20[5];
    uint64_t v35 = (void *)(v18 + v34);
    uint64_t v36 = &v19[v34];
    uint64_t v37 = *(void **)(v18 + v34);
    uint64_t v38 = *(void **)&v19[v34];
    if (v37 == (void *)1)
    {
      if (v38 != (void *)1)
      {
        void *v35 = v38;
        uint64_t v39 = (void *)*((void *)v36 + 1);
        v35[1] = v39;
        id v40 = v38;
        id v41 = v39;
LABEL_34:
        uint64_t v64 = v20[6];
        uint64_t v65 = v18 + v64;
        uint64_t v66 = &v19[v64];
        long long v67 = *(_OWORD *)v66;
        *(unsigned char *)(v65 + 16) = v66[16];
        *(_OWORD *)uint64_t v65 = v67;
        uint64_t v68 = v20[7];
        uint64_t v69 = (void *)(v18 + v68);
        uint64_t v70 = &v19[v68];
        uint64_t v71 = sub_100082D90();
        uint64_t v72 = *(void *)(v71 - 8);
        uint64_t v73 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
        int v74 = v73(v69, 1, v71);
        int v75 = v73(v70, 1, v71);
        if (v74)
        {
          if (!v75)
          {
            (*(void (**)(void *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
            goto LABEL_24;
          }
        }
        else
        {
          if (!v75)
          {
            (*(void (**)(void *, char *, uint64_t))(v72 + 24))(v69, v70, v71);
            goto LABEL_24;
          }
          (*(void (**)(void *, uint64_t))(v72 + 8))(v69, v71);
        }
        size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
        uint64_t v31 = v69;
        uint64_t v32 = v70;
LABEL_15:
        memcpy(v31, v32, v30);
        goto LABEL_24;
      }
    }
    else
    {
      if (v38 != (void *)1)
      {
        void *v35 = v38;
        id v60 = v38;

        uint64_t v61 = (void *)v35[1];
        uint64_t v62 = (void *)*((void *)v36 + 1);
        v35[1] = v62;
        id v63 = v62;

        goto LABEL_34;
      }
      sub_10001B23C((uint64_t)v35);
    }
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_34;
  }
  if (v24)
  {
LABEL_14:
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v31 = (void *)v18;
    uint64_t v32 = v19;
    goto LABEL_15;
  }
  uint64_t v25 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v18, v19, v25);
  uint64_t v26 = v20[5];
  uint64_t v27 = v18 + v26;
  uint64_t v28 = &v19[v26];
  id v29 = *(void **)&v19[v26];
  if (v29 == (void *)1)
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  else
  {
    *(void *)uint64_t v27 = v29;
    uint64_t v42 = (void *)*((void *)v28 + 1);
    *(void *)(v27 + 8) = v42;
    id v43 = v29;
    id v44 = v42;
  }
  uint64_t v45 = v20[6];
  uint64_t v46 = v18 + v45;
  uint64_t v47 = &v19[v45];
  long long v48 = *(_OWORD *)v47;
  *(unsigned char *)(v46 + 16) = v47[16];
  *(_OWORD *)uint64_t v46 = v48;
  uint64_t v49 = v20[7];
  char v50 = (void *)(v18 + v49);
  uint64_t v51 = &v19[v49];
  uint64_t v52 = sub_100082D90();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    uint64_t v54 = sub_100002874(&qword_1000A7A68);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
LABEL_24:
  if (a1 != a2)
  {
    uint64_t v55 = *(int *)(a3 + 20);
    uint64_t v56 = (void *)(a1 + v55);
    uint64_t v57 = (void *)(a2 + v55);
    sub_100019138(a1 + v55, &qword_1000A8170);
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = sub_100083730();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    }
    else
    {
      *uint64_t v56 = *v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000494A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v8 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v9 = (char *)(a1 + v8);
  id v10 = (char *)(a2 + v8);
  id v11 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002874(&qword_1000A7A70);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v9, v10, v14);
    *(_OWORD *)&v9[v11[5]] = *(_OWORD *)&v10[v11[5]];
    uint64_t v15 = v11[6];
    int v16 = &v9[v15];
    uint64_t v17 = &v10[v15];
    *(_OWORD *)int v16 = *(_OWORD *)v17;
    v16[16] = v17[16];
    uint64_t v18 = v11[7];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = sub_100082D90();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_100002874(&qword_1000A7A68);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = sub_100083730();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000497B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void **)(a1 + 56);
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (v9 == (void *)1) {
    goto LABEL_4;
  }
  if (v8 == 1)
  {
    sub_10001B23C(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = v8;

  id v11 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

LABEL_6:
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v12 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17((uint64_t)v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      uint64_t v20 = sub_1000837F0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v13, v14, v20);
      *(_OWORD *)(v13 + v15[5]) = *(_OWORD *)&v14[v15[5]];
      uint64_t v21 = v15[6];
      uint64_t v22 = v13 + v21;
      uint64_t v23 = &v14[v21];
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *(unsigned char *)(v22 + 16) = v23[16];
      uint64_t v24 = v15[7];
      uint64_t v25 = (void *)(v13 + v24);
      uint64_t v26 = &v14[v24];
      uint64_t v27 = sub_100082D90();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_100002874(&qword_1000A7A68);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      (*(void (**)(uint64_t, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_20;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_10004C328(v13, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
LABEL_12:
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v31 = (void *)v13;
    uint64_t v32 = v14;
LABEL_13:
    memcpy(v31, v32, v30);
    goto LABEL_20;
  }
  uint64_t v33 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v13, v14, v33);
  uint64_t v34 = v15[5];
  uint64_t v35 = v13 + v34;
  uint64_t v36 = &v14[v34];
  uint64_t v37 = *(void **)(v13 + v34);
  if (v37 == (void *)1) {
    goto LABEL_17;
  }
  if (*(void *)v36 == 1)
  {
    sub_10001B23C(v35);
LABEL_17:
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_26;
  }
  *(void *)uint64_t v35 = *(void *)v36;

  id v44 = *(void **)(v35 + 8);
  *(void *)(v35 + 8) = *((void *)v36 + 1);

LABEL_26:
  uint64_t v45 = v15[6];
  uint64_t v46 = v13 + v45;
  uint64_t v47 = &v14[v45];
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *(unsigned char *)(v46 + 16) = v47[16];
  uint64_t v48 = v15[7];
  uint64_t v49 = (void *)(v13 + v48);
  char v50 = &v14[v48];
  uint64_t v51 = sub_100082D90();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      goto LABEL_20;
    }
LABEL_31:
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
    uint64_t v31 = v49;
    uint64_t v32 = v50;
    goto LABEL_13;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v52 + 40))(v49, v50, v51);
LABEL_20:
  if (a1 != a2)
  {
    uint64_t v38 = *(int *)(a3 + 20);
    uint64_t v39 = (void *)(a1 + v38);
    id v40 = (const void *)(a2 + v38);
    sub_100019138(a1 + v38, &qword_1000A8170);
    uint64_t v41 = sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_100083730();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100049D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100049D74);
}

uint64_t sub_100049D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100002874(&qword_1000A8178);
    id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100049E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100049E84);
}

uint64_t sub_100049E84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100002874(&qword_1000A8178);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SuggestedDestinationWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9658);
}

void sub_100049FAC()
{
  type metadata accessor for SuggestedDestinationEntryContent(319);
  if (v0 <= 0x3F)
  {
    sub_10004A074();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10004A074()
{
  if (!qword_1000A81E8)
  {
    sub_100083730();
    unint64_t v0 = sub_100082F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000A81E8);
    }
  }
}

uint64_t sub_10004A0CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004A0E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v2 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100002874(&qword_1000A7A70);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000832D0();
  uint64_t v7 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100002874(&qword_1000A9920);
  __chkstk_darwin(v39);
  id v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100002874(&qword_1000A9928);
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100002874(&qword_1000A9930);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  size_t v30 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v11 = sub_1000831C0();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v16 = (uint64_t)&v11[*(int *)(sub_100002874(&qword_1000A9938) + 44)];
  uint64_t v38 = v1;
  sub_10004A5E8(v1, v16);
  sub_1000832C0();
  uint64_t v41 = v1;
  sub_1000835D0();
  uint64_t v17 = sub_100002874(&qword_1000A98F0);
  uint64_t v18 = sub_100023D5C(&qword_1000A9940, &qword_1000A9920);
  uint64_t v19 = sub_100023D5C(&qword_1000A9900, &qword_1000A98F0);
  uint64_t v32 = v14;
  uint64_t v20 = v17;
  uint64_t v21 = v39;
  sub_100083460();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v40);
  sub_100019138((uint64_t)v11, &qword_1000A9920);
  uint64_t v22 = type metadata accessor for SuggestedDestinationEntryContent(0);
  sub_10001A720(v38 + *(int *)(v22 + 40), (uint64_t)v6, &qword_1000A7A70);
  uint64_t v23 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v6, 1, v23);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v25 = v36;
    sub_10001A720((uint64_t)&v6[*(int *)(v23 + 28)], v36, &qword_1000A7A68);
    sub_10004C328((uint64_t)v6, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
    uint64_t v42 = v21;
    uint64_t v43 = v20;
    uint64_t v44 = v18;
    uint64_t v45 = v19;
    swift_getOpaqueTypeConformance2();
    uint64_t v26 = v30;
    uint64_t v27 = v35;
    uint64_t v28 = v32;
    sub_1000833D0();
    sub_100019138(v25, &qword_1000A7A68);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v27);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v37, v26, v33);
  }
  return result;
}

uint64_t sub_10004A5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A9948);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  if (qword_1000A79B0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1000ACB78;
  uint64_t *v7 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v7 + *(int *)(v4 + 36)) = v10;
  sub_10004C074(a1, (uint64_t)v7 + *(int *)(v4 + 40), type metadata accessor for SuggestedDestinationEntryContent);
  sub_100019284((uint64_t)v7, (uint64_t)v9, &qword_1000A9948);
  sub_10001A720((uint64_t)v9, (uint64_t)v7, &qword_1000A9948);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0x3FF0000000000000;
  uint64_t v11 = sub_100002874(&qword_1000A9950);
  sub_10001A720((uint64_t)v7, a2 + *(int *)(v11 + 48), &qword_1000A9948);
  sub_100019138((uint64_t)v9, &qword_1000A9948);
  return sub_100019138((uint64_t)v7, &qword_1000A9948);
}

uint64_t sub_10004A7A0@<X0>(uint64_t a1@<X8>)
{
  return sub_10004A7CC((uint64_t)sub_10004DCC0, a1);
}

uint64_t sub_10004A7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v3 = v2;
  uint64_t v47 = a2;
  uint64_t v4 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v4 - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100002874(&qword_1000A7A70);
  __chkstk_darwin(v6 - 8);
  uint64_t v49 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000832D0();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002874(&qword_1000A98B8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v48 = sub_100002874(&qword_1000A98C0);
  __chkstk_darwin(v48);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100002874(&qword_1000A98C8);
  uint64_t v44 = *(void *)(v19 - 8);
  uint64_t v45 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100002874(&qword_1000A98D0);
  uint64_t v42 = *(void *)(v22 - 8);
  uint64_t v43 = v22;
  __chkstk_darwin(v22);
  uint64_t v41 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v18 = sub_1000831C0();
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  uint64_t v24 = &v18[*(int *)(sub_100002874(&qword_1000A98D8) + 44)];
  *(void *)uint64_t v16 = sub_100083130();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v25 = sub_100002874(&qword_1000A98E0);
  sub_10004AD8C(v3, (uint64_t)&v16[*(int *)(v25 + 44)]);
  sub_10001A720((uint64_t)v16, (uint64_t)v14, &qword_1000A98B8);
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  *((void *)v24 + 2) = 0x3FF0000000000000;
  uint64_t v26 = sub_100002874(&qword_1000A98E8);
  sub_10001A720((uint64_t)v14, (uint64_t)&v24[*(int *)(v26 + 48)], &qword_1000A98B8);
  sub_100019138((uint64_t)v16, &qword_1000A98B8);
  sub_100019138((uint64_t)v14, &qword_1000A98B8);
  sub_1000832C0();
  uint64_t v53 = v3;
  sub_1000835D0();
  uint64_t v27 = sub_100002874(&qword_1000A98F0);
  uint64_t v28 = sub_100023D5C(&qword_1000A98F8, &qword_1000A98C0);
  uint64_t v29 = sub_100023D5C(&qword_1000A9900, &qword_1000A98F0);
  uint64_t v40 = v21;
  uint64_t v30 = v48;
  sub_100083460();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v51);
  uint64_t v31 = (uint64_t)v49;
  sub_100019138((uint64_t)v18, &qword_1000A98C0);
  uint64_t v32 = type metadata accessor for SuggestedDestinationEntryContent(0);
  sub_10001A720(v3 + *(int *)(v32 + 40), v31, &qword_1000A7A70);
  uint64_t v33 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v31, 1, v33);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v35 = v46;
    sub_10001A720(v31 + *(int *)(v33 + 28), v46, &qword_1000A7A68);
    sub_10004C328(v31, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
    uint64_t v54 = v30;
    uint64_t v55 = v27;
    uint64_t v56 = v28;
    uint64_t v57 = v29;
    swift_getOpaqueTypeConformance2();
    uint64_t v36 = v40;
    uint64_t v37 = v41;
    uint64_t v38 = v45;
    sub_1000833D0();
    sub_100019138(v35, &qword_1000A7A68);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v38);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v47, v37, v43);
  }
  return result;
}

uint64_t sub_10004AD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_1000837F0();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  __chkstk_darwin(v3);
  uint64_t v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100002874(&qword_1000A7A70);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A8288);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = type metadata accessor for SuggestedDestinationEntryContent(0);
  __chkstk_darwin(v49);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100002874(&qword_1000A9908);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v42 = sub_100002874(&qword_1000A9910);
  uint64_t v19 = __chkstk_darwin(v42);
  uint64_t v44 = (uint64_t)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v41 = (uint64_t)&v40 - v22;
  __chkstk_darwin(v21);
  uint64_t v43 = (uint64_t)&v40 - v23;
  if (qword_1000A79B0 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1000ACB78;
  uint64_t *v16 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v16 + *(int *)(v13 + 36)) = v24;
  uint64_t v25 = (uint64_t)v16 + *(int *)(v13 + 40);
  sub_10004C074(a1, (uint64_t)v12, type metadata accessor for SuggestedDestinationEntryContent);
  uint64_t *v10 = swift_getKeyPath();
  sub_100002874(&qword_1000A8250);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = type metadata accessor for SuggestedDestinationMediumLargePlatterContent(0);
  *(void *)(v25 + *(int *)(v27 + 20)) = KeyPath;
  sub_100002874(&qword_1000A84A0);
  swift_storeEnumTagMultiPayload();
  sub_100019284((uint64_t)v10, v25, &qword_1000A8288);
  sub_10004DB28((uint64_t)v12, v25 + *(int *)(v27 + 24));
  sub_100019284((uint64_t)v16, (uint64_t)v18, &qword_1000A9908);
  sub_10001A720(a1 + *(int *)(v49 + 40), (uint64_t)v7, &qword_1000A7A70);
  uint64_t v28 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v7, 1, v28);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v30 = v45;
    uint64_t v31 = v46;
    uint64_t v32 = v47;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v7, v47);
    sub_10004C328((uint64_t)v7, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
    sub_1000837D0();
    if (qword_1000A79B8 != -1) {
      swift_once();
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
    sub_1000835D0();
    sub_100082FB0();
    uint64_t v33 = v41;
    sub_10001A720((uint64_t)v18, v41, &qword_1000A9908);
    uint64_t v34 = (_OWORD *)(v33 + *(int *)(v42 + 36));
    long long v35 = v51;
    _OWORD *v34 = v50;
    v34[1] = v35;
    v34[2] = v52;
    sub_100019138((uint64_t)v18, &qword_1000A9908);
    uint64_t v36 = v43;
    sub_100019284(v33, v43, &qword_1000A9910);
    uint64_t v37 = v44;
    sub_10001A720(v36, v44, &qword_1000A9910);
    uint64_t v38 = v48;
    sub_10001A720(v37, v48, &qword_1000A9910);
    uint64_t v39 = v38 + *(int *)(sub_100002874(&qword_1000A9918) + 48);
    *(void *)uint64_t v39 = 0;
    *(unsigned char *)(v39 + 8) = 1;
    sub_100019138(v36, &qword_1000A9910);
    return sub_100019138(v37, &qword_1000A9910);
  }
  return result;
}

uint64_t sub_10004B370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A8490);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100002874(&qword_1000A8288);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for SuggestedDestinationEntryContent(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004C074(a1, (uint64_t)v12, type metadata accessor for SuggestedDestinationEntryContent);
  uint64_t *v9 = swift_getKeyPath();
  sub_100002874(&qword_1000A8250);
  swift_storeEnumTagMultiPayload();
  *uint64_t v6 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = (int *)sub_100002874(&qword_1000A98F0);
  *(void *)(a2 + v14[10]) = KeyPath;
  sub_100002874(&qword_1000A84A0);
  swift_storeEnumTagMultiPayload();
  sub_100019284((uint64_t)v9, a2, &qword_1000A8288);
  sub_100019284((uint64_t)v6, a2 + v14[9], &qword_1000A8490);
  uint64_t result = sub_10004DB28((uint64_t)v12, a2 + v14[11]);
  *(unsigned char *)(a2 + v14[12]) = 2;
  return result;
}

uint64_t sub_10004B594@<X0>(uint64_t a1@<X8>)
{
  return sub_10004A7CC((uint64_t)sub_10004DAF4, a1);
}

uint64_t sub_10004B5C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v37 = sub_100002874(&qword_1000A9690);
  __chkstk_darwin(v37);
  uint64_t v38 = (uint64_t)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100002874(&qword_1000A9698);
  __chkstk_darwin(v46);
  uint64_t v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SuggestedDestinationLargeWidgetView(0);
  __chkstk_darwin(v36);
  uint64_t v40 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for SuggestedDestinationMediumWidgetView(0);
  __chkstk_darwin(v44);
  uint64_t v41 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100002874(&qword_1000A96A0);
  __chkstk_darwin(v50);
  uint64_t v45 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100002874(&qword_1000A96A8);
  __chkstk_darwin(v47);
  uint64_t v43 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100002874(&qword_1000A96B0);
  __chkstk_darwin(v42);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100002874(&qword_1000A96B8);
  __chkstk_darwin(v48);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100002874(&qword_1000A96C0);
  __chkstk_darwin(v49);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SuggestedDestinationSmallWidgetView(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100083730();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SuggestedDestinationWidgetView(0);
  sub_1000681E0((uint64_t)v20);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_10004C074(v1, (uint64_t)v16, type metadata accessor for SuggestedDestinationEntryContent);
    sub_10004C074((uint64_t)v16, (uint64_t)v9, type metadata accessor for SuggestedDestinationSmallWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_10004C1B8(&qword_1000A96D8, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationSmallWidgetView);
    sub_10004C1B8(&qword_1000A96E0, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationMediumWidgetView);
    sub_100083230();
    sub_10001A720((uint64_t)v11, v43, &qword_1000A96B8);
    swift_storeEnumTagMultiPayload();
    sub_10004C0DC();
    sub_10004C200();
    sub_100083230();
    sub_100019138((uint64_t)v11, &qword_1000A96B8);
    sub_10001A720((uint64_t)v13, v45, &qword_1000A96C0);
    swift_storeEnumTagMultiPayload();
    sub_10004C2AC();
    sub_100083230();
    sub_100019138((uint64_t)v13, &qword_1000A96C0);
    uint64_t v22 = type metadata accessor for SuggestedDestinationSmallWidgetView;
    uint64_t v23 = (uint64_t)v16;
    return sub_10004C328(v23, v22);
  }
  uint64_t v24 = (uint64_t)v9;
  uint64_t v25 = v43;
  long long v35 = v13;
  uint64_t v26 = v45;
  if (v21 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v27 = v41;
    sub_10004C074(v1, v41, type metadata accessor for SuggestedDestinationEntryContent);
    sub_10004C074(v27, v24, type metadata accessor for SuggestedDestinationMediumWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_10004C1B8(&qword_1000A96D8, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationSmallWidgetView);
    sub_10004C1B8(&qword_1000A96E0, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationMediumWidgetView);
    sub_100083230();
    sub_10001A720((uint64_t)v11, v25, &qword_1000A96B8);
    swift_storeEnumTagMultiPayload();
    sub_10004C0DC();
    sub_10004C200();
    uint64_t v28 = (uint64_t)v35;
    sub_100083230();
    sub_100019138((uint64_t)v11, &qword_1000A96B8);
    sub_10001A720(v28, v26, &qword_1000A96C0);
    swift_storeEnumTagMultiPayload();
    sub_10004C2AC();
    sub_100083230();
    sub_100019138(v28, &qword_1000A96C0);
    uint64_t v22 = type metadata accessor for SuggestedDestinationMediumWidgetView;
    uint64_t v23 = v41;
    return sub_10004C328(v23, v22);
  }
  if (v21 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v29 = v45;
    uint64_t v30 = v40;
    sub_10004C074(v1, v40, type metadata accessor for SuggestedDestinationEntryContent);
    sub_10004C074(v30, v38, type metadata accessor for SuggestedDestinationLargeWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_10004C1B8(&qword_1000A96C8, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationLargeWidgetView);
    uint64_t v31 = (uint64_t)v39;
    sub_100083230();
    sub_10001A720(v31, v25, &qword_1000A9698);
    swift_storeEnumTagMultiPayload();
    sub_10004C0DC();
    sub_10004C200();
    uint64_t v32 = (uint64_t)v35;
    sub_100083230();
    sub_100019138(v31, &qword_1000A9698);
    sub_10001A720(v32, v29, &qword_1000A96C0);
    swift_storeEnumTagMultiPayload();
    sub_10004C2AC();
    sub_100083230();
    sub_100019138(v32, &qword_1000A96C0);
    uint64_t v22 = type metadata accessor for SuggestedDestinationLargeWidgetView;
    uint64_t v23 = v30;
    return sub_10004C328(v23, v22);
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SuggestedDestinationLargeWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9750);
}

uint64_t type metadata accessor for SuggestedDestinationMediumWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A97E0);
}

uint64_t type metadata accessor for SuggestedDestinationSmallWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9870);
}

uint64_t sub_10004C074(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10004C0DC()
{
  unint64_t result = qword_1000A96D0;
  if (!qword_1000A96D0)
  {
    sub_1000028B8(&qword_1000A96B8);
    sub_10004C1B8(&qword_1000A96D8, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationSmallWidgetView);
    sub_10004C1B8(&qword_1000A96E0, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationMediumWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A96D0);
  }
  return result;
}

uint64_t sub_10004C1B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004C200()
{
  unint64_t result = qword_1000A96E8;
  if (!qword_1000A96E8)
  {
    sub_1000028B8(&qword_1000A9698);
    sub_10004C1B8(&qword_1000A96C8, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationLargeWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A96E8);
  }
  return result;
}

unint64_t sub_10004C2AC()
{
  unint64_t result = qword_1000A96F0;
  if (!qword_1000A96F0)
  {
    sub_1000028B8(&qword_1000A96C0);
    sub_10004C0DC();
    sub_10004C200();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A96F0);
  }
  return result;
}

uint64_t sub_10004C328(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10004C3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004C3B4);
}

uint64_t sub_10004C3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004C3CC);
}

uint64_t sub_10004C3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004C3E8);
}

uint64_t sub_10004C3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004C400);
}

uint64_t sub_10004C404(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDestinationEntryContent(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v10 = (void *)a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 == (void *)1)
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    }
    else
    {
      uint64_t v12 = (void *)a2[8];
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v12;
      id v13 = v10;
      id v14 = v12;
    }
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    *(unsigned char *)(a1 + 76) = *((unsigned char *)a2 + 76);
    uint64_t v15 = *(int *)(v6 + 40);
    uint64_t v16 = (char *)(a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    uint64_t v19 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_100002874(&qword_1000A7A70);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v21 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
      uint64_t v22 = v18[5];
      uint64_t v23 = &v16[v22];
      uint64_t v24 = &v17[v22];
      uint64_t v25 = *(void **)&v17[v22];
      if (v25 == (void *)1)
      {
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      }
      else
      {
        uint64_t v26 = (void *)*((void *)v24 + 1);
        *(void *)uint64_t v23 = v25;
        *((void *)v23 + 1) = v26;
        id v27 = v25;
        id v28 = v26;
      }
      uint64_t v29 = v18[6];
      uint64_t v30 = &v16[v29];
      uint64_t v31 = &v17[v29];
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      unsigned char v30[16] = v31[16];
      uint64_t v32 = v18[7];
      uint64_t v33 = &v16[v32];
      uint64_t v34 = &v17[v32];
      uint64_t v35 = sub_100082D90();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        uint64_t v37 = sub_100002874(&qword_1000A7A68);
        memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  return a1;
}

uint64_t sub_10004C728(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2 != (void *)1)
  {
  }
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v4 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
  if (!result)
  {
    uint64_t v6 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
    uint64_t v7 = (id *)(v3 + *(int *)(v4 + 20));
    if (*v7 != (id)1)
    {
    }
    uint64_t v8 = v3 + *(int *)(v4 + 28);
    uint64_t v9 = sub_100082D90();
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9);
    if (!result)
    {
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      return v10(v8, v9);
    }
  }
  return result;
}

uint64_t sub_10004C8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = (_OWORD *)(a2 + 56);
  uint64_t v7 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == (void *)1)
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  else
  {
    uint64_t v9 = *(void **)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v9;
    id v10 = v7;
    id v11 = v9;
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v12 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  id v13 = (char *)(a1 + v12);
  id v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100002874(&qword_1000A7A70);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
    uint64_t v19 = v15[5];
    uint64_t v20 = &v13[v19];
    uint64_t v21 = &v14[v19];
    uint64_t v22 = *(void **)&v14[v19];
    if (v22 == (void *)1)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = (void *)*((void *)v21 + 1);
      *(void *)uint64_t v20 = v22;
      *((void *)v20 + 1) = v23;
      id v24 = v22;
      id v25 = v23;
    }
    uint64_t v26 = v15[6];
    id v27 = &v13[v26];
    id v28 = &v14[v26];
    *(_OWORD *)id v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    uint64_t v29 = v15[7];
    uint64_t v30 = &v13[v29];
    uint64_t v31 = &v14[v29];
    uint64_t v32 = sub_100082D90();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = sub_100002874(&qword_1000A7A68);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_10004CBB0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 56);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void **)(a2 + 56);
  if (v4 == (void *)1)
  {
    if (v6 != (void *)1)
    {
      *(void *)(a1 + 56) = v6;
      uint64_t v7 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v7;
      id v8 = v6;
      id v9 = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == (void *)1)
  {
    sub_10001B23C(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(void *)(a1 + 56) = v6;
  id v10 = v6;

  id v11 = *(void **)(a1 + 64);
  uint64_t v12 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v12;
  id v13 = v12;

LABEL_8:
  int v14 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v14;
  uint64_t v15 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20((uint64_t)v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_10004C328(v16, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
      goto LABEL_14;
    }
    uint64_t v31 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v16, v17, v31);
    uint64_t v32 = v18[5];
    uint64_t v33 = (void *)(v16 + v32);
    uint64_t v34 = &v17[v32];
    uint64_t v35 = *(void **)(v16 + v32);
    uint64_t v36 = *(void **)&v17[v32];
    if (v35 == (void *)1)
    {
      if (v36 != (void *)1)
      {
        *uint64_t v33 = v36;
        uint64_t v37 = (void *)*((void *)v34 + 1);
        v33[1] = v37;
        id v38 = v36;
        id v39 = v37;
LABEL_29:
        uint64_t v58 = v18[6];
        uint64_t v59 = v16 + v58;
        id v60 = &v17[v58];
        long long v61 = *(_OWORD *)v60;
        *(unsigned char *)(v59 + 16) = v60[16];
        *(_OWORD *)uint64_t v59 = v61;
        uint64_t v62 = v18[7];
        id v63 = (void *)(v16 + v62);
        uint64_t v64 = &v17[v62];
        uint64_t v65 = sub_100082D90();
        uint64_t v66 = *(void *)(v65 - 8);
        long long v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
        int v68 = v67(v63, 1, v65);
        int v69 = v67(v64, 1, v65);
        if (v68)
        {
          if (!v69)
          {
            (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
            return a1;
          }
        }
        else
        {
          if (!v69)
          {
            (*(void (**)(void *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v66 + 8))(v63, v65);
        }
        size_t v28 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
        uint64_t v29 = v63;
        uint64_t v30 = v64;
        goto LABEL_15;
      }
    }
    else
    {
      if (v36 != (void *)1)
      {
        *uint64_t v33 = v36;
        id v54 = v36;

        uint64_t v55 = (void *)v33[1];
        uint64_t v56 = (void *)*((void *)v34 + 1);
        v33[1] = v56;
        id v57 = v56;

        goto LABEL_29;
      }
      sub_10001B23C((uint64_t)v33);
    }
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    goto LABEL_29;
  }
  if (v22)
  {
LABEL_14:
    size_t v28 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v29 = (void *)v16;
    uint64_t v30 = v17;
LABEL_15:
    memcpy(v29, v30, v28);
    return a1;
  }
  uint64_t v23 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
  uint64_t v24 = v18[5];
  uint64_t v25 = v16 + v24;
  uint64_t v26 = &v17[v24];
  id v27 = *(void **)&v17[v24];
  if (v27 == (void *)1)
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  }
  else
  {
    *(void *)uint64_t v25 = v27;
    uint64_t v40 = (void *)*((void *)v26 + 1);
    *(void *)(v25 + 8) = v40;
    id v41 = v27;
    id v42 = v40;
  }
  uint64_t v43 = v18[6];
  uint64_t v44 = v16 + v43;
  uint64_t v45 = &v17[v43];
  long long v46 = *(_OWORD *)v45;
  *(unsigned char *)(v44 + 16) = v45[16];
  *(_OWORD *)uint64_t v44 = v46;
  uint64_t v47 = v18[7];
  uint64_t v48 = (void *)(v16 + v47);
  uint64_t v49 = &v17[v47];
  uint64_t v50 = sub_100082D90();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    uint64_t v52 = sub_100002874(&qword_1000A7A68);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_10004D138(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v6 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v7 = (char *)(a1 + v6);
  id v8 = (char *)(a2 + v6);
  id v9 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100002874(&qword_1000A7A70);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    *(_OWORD *)&v7[v9[5]] = *(_OWORD *)&v8[v9[5]];
    uint64_t v13 = v9[6];
    int v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    *(_OWORD *)int v14 = *(_OWORD *)v15;
    v14[16] = v15[16];
    uint64_t v16 = v9[7];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    uint64_t v19 = sub_100082D90();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100002874(&qword_1000A7A68);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_10004D3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void **)(a1 + 56);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (v7 == (void *)1) {
    goto LABEL_4;
  }
  if (v6 == 1)
  {
    sub_10001B23C(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = v6;

  id v9 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

LABEL_6:
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v10 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_10004C328(v11, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
      goto LABEL_12;
    }
    uint64_t v31 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v11, v12, v31);
    uint64_t v32 = v13[5];
    uint64_t v33 = (void *)(v11 + v32);
    uint64_t v34 = &v12[v32];
    uint64_t v35 = *(void **)(v11 + v32);
    if (v35 != (void *)1)
    {
      if (*(void *)v34 != 1)
      {
        *uint64_t v33 = *(void *)v34;

        uint64_t v37 = (void *)v33[1];
        v33[1] = *((void *)v34 + 1);

        goto LABEL_22;
      }
      sub_10001B23C((uint64_t)v33);
    }
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
LABEL_22:
    uint64_t v38 = v13[6];
    uint64_t v39 = v11 + v38;
    uint64_t v40 = &v12[v38];
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *(unsigned char *)(v39 + 16) = v40[16];
    uint64_t v41 = v13[7];
    id v42 = (void *)(v11 + v41);
    uint64_t v43 = &v12[v41];
    uint64_t v44 = sub_100082D90();
    uint64_t v45 = *(void *)(v44 - 8);
    long long v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
    int v47 = v46(v42, 1, v44);
    int v48 = v46(v43, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        return a1;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
        return a1;
      }
      (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
    }
    size_t v28 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
    uint64_t v29 = v42;
    uint64_t v30 = v43;
    goto LABEL_13;
  }
  if (v17)
  {
LABEL_12:
    size_t v28 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v29 = (void *)v11;
    uint64_t v30 = v12;
LABEL_13:
    memcpy(v29, v30, v28);
    return a1;
  }
  uint64_t v18 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
  *(_OWORD *)(v11 + v13[5]) = *(_OWORD *)&v12[v13[5]];
  uint64_t v19 = v13[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = &v12[v19];
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = v21[16];
  uint64_t v22 = v13[7];
  uint64_t v23 = (void *)(v11 + v22);
  uint64_t v24 = &v12[v22];
  uint64_t v25 = sub_100082D90();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_100002874(&qword_1000A7A68);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_10004D888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004D89C);
}

uint64_t sub_10004D8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10004D90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004D920);
}

uint64_t sub_10004D924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10004D994()
{
  uint64_t result = type metadata accessor for SuggestedDestinationEntryContent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10004DA24()
{
  unint64_t result = qword_1000A98A8;
  if (!qword_1000A98A8)
  {
    sub_1000028B8(&qword_1000A98B0);
    sub_10004C2AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A98A8);
  }
  return result;
}

uint64_t sub_10004DAA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004DABC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004DAD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004DAF4@<X0>(uint64_t a1@<X8>)
{
  return sub_10004B370(*(void *)(v1 + 16), a1);
}

uint64_t sub_10004DB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDestinationEntryContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004DB8C(uint64_t a1)
{
  return sub_10004DBC4(a1, &qword_1000A98C8, &qword_1000A98C0, &qword_1000A98F8);
}

uint64_t sub_10004DBA8(uint64_t a1)
{
  return sub_10004DBC4(a1, &qword_1000A9928, &qword_1000A9920, &qword_1000A9940);
}

uint64_t sub_10004DBC4(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  return swift_getOpaqueTypeConformance2();
}

char *sub_10004DCC4(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *a2;
    if (*a2 == (char *)1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v8 = a2[1];
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v8;
      id v9 = v6;
      uint64_t v10 = v8;
    }
    uint64_t v11 = a2[3];
    *((void *)v4 + 2) = a2[2];
    *((void *)v4 + 3) = v11;
    *((_DWORD *)v4 + 8) = *((_DWORD *)a2 + 8);
    v4[36] = *((unsigned char *)a2 + 36);
    uint64_t v12 = a2[6];
    *((void *)v4 + 5) = a2[5];
    *((void *)v4 + 6) = v12;
    v4[56] = *((unsigned char *)a2 + 56);
    uint64_t v13 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v14 = &v4[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_100002874(&qword_1000A7A78);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v15, v20);
      uint64_t v21 = *(int *)(v16 + 20);
      uint64_t v22 = &v14[v21];
      uint64_t v23 = &v15[v21];
      uint64_t v24 = *(void **)&v15[v21];
      if (v24 == (void *)1)
      {
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      }
      else
      {
        uint64_t v25 = (void *)*((void *)v23 + 1);
        *(void *)uint64_t v22 = v24;
        *((void *)v22 + 1) = v25;
        id v26 = v24;
        id v27 = v25;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v28 = *(int *)(a3 + 20);
    uint64_t v29 = &v4[v28];
    uint64_t v30 = (char **)((char *)a2 + v28);
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_100083730();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *(void *)uint64_t v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10004DF94(id *a1, uint64_t a2)
{
  if (*a1 != (id)1)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v5 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1000837F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = (id *)&v4[*(int *)(v5 + 20)];
    if (*v7 != (id)1)
    {
    }
  }
  uint64_t v8 = (char *)a1 + *(int *)(a2 + 20);
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_100083730();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10004E124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  if (*(void *)a2 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v6 = *(void **)(a2 + 8);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    id v7 = v5;
    id v8 = v6;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_100002874(&qword_1000A7A78);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
    uint64_t v19 = *(int *)(v14 + 20);
    uint64_t v20 = &v12[v19];
    uint64_t v21 = &v13[v19];
    uint64_t v22 = *(void **)&v13[v19];
    if (v22 == (void *)1)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = (void *)*((void *)v21 + 1);
      *(void *)uint64_t v20 = v22;
      *((void *)v20 + 1) = v23;
      id v24 = v22;
      id v25 = v23;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v26 = *(int *)(a3 + 20);
  id v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = sub_100083730();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *id v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10004E3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  id v7 = *(void **)a2;
  if (*(void *)a1 == 1)
  {
    if (v7 != (void *)1)
    {
      *(void *)a1 = v7;
      id v8 = *(void **)(a2 + 8);
      *(void *)(a1 + 8) = v8;
      id v9 = v7;
      id v10 = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == (void *)1)
  {
    sub_10001B23C(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *(void *)a1 = v7;
  id v11 = v7;

  uint64_t v12 = *(void **)(a1 + 8);
  uint64_t v13 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v13;
  id v14 = v13;

LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v16 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v30 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v17, v18, v30);
      uint64_t v31 = *(int *)(v19 + 20);
      uint64_t v32 = (void **)&v17[v31];
      uint64_t v33 = &v18[v31];
      uint64_t v34 = *v32;
      uint64_t v35 = *(void **)v33;
      if (*v32 == (void *)1)
      {
        if (v35 != (void *)1)
        {
          char *v32 = v35;
          uint64_t v36 = (void *)*((void *)v33 + 1);
          v32[1] = v36;
          id v37 = v35;
          id v38 = v36;
          if (a1 == a2) {
            return a1;
          }
          goto LABEL_28;
        }
      }
      else
      {
        if (v35 != (void *)1)
        {
          char *v32 = v35;
          id v42 = v35;

          uint64_t v43 = v32[1];
          uint64_t v44 = (void *)*((void *)v33 + 1);
          v32[1] = v44;
          id v45 = v44;

          if (a1 == a2) {
            return a1;
          }
          goto LABEL_28;
        }
        sub_10001B23C((uint64_t)v32);
      }
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      if (a1 == a2) {
        return a1;
      }
LABEL_28:
      uint64_t v46 = *(int *)(a3 + 20);
      int v47 = (void *)(a1 + v46);
      int v48 = (void *)(a2 + v46);
      sub_100019138(a1 + v46, &qword_1000A8170);
      sub_100002874(&qword_1000A8170);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v49 = sub_100083730();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      }
      else
      {
        void *v47 = *v48;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    sub_1000512B4((uint64_t)v17, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
LABEL_14:
    uint64_t v29 = sub_100002874(&qword_1000A7A78);
    memcpy(v17, v18, *(void *)(*(void *)(v29 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_28;
  }
  if (v23) {
    goto LABEL_14;
  }
  uint64_t v24 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v17, v18, v24);
  uint64_t v25 = *(int *)(v19 + 20);
  uint64_t v26 = &v17[v25];
  id v27 = &v18[v25];
  uint64_t v28 = *(void **)&v18[v25];
  if (v28 == (void *)1)
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  else
  {
    *(void *)uint64_t v26 = v28;
    uint64_t v39 = (void *)*((void *)v27 + 1);
    *((void *)v26 + 1) = v39;
    id v40 = v28;
    id v41 = v39;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  if (a1 != a2) {
    goto LABEL_28;
  }
  return a1;
}

uint64_t sub_10004E7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  id v8 = (char *)(a1 + v7);
  id v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100002874(&qword_1000A7A78);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  int v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_100083730();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10004E9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  if (*(void *)a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_10001B23C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

LABEL_6:
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
      *(_OWORD *)&v11[*(int *)(v13 + 20)] = *(_OWORD *)&v12[*(int *)(v13 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v17)
  {
    sub_1000512B4((uint64_t)v11, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
LABEL_11:
    uint64_t v19 = sub_100002874(&qword_1000A7A78);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  uint64_t v26 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v11, v12, v26);
  uint64_t v27 = *(int *)(v13 + 20);
  uint64_t v28 = (void **)&v11[v27];
  uint64_t v29 = &v12[v27];
  uint64_t v30 = *v28;
  if (*v28 == (void *)1) {
    goto LABEL_20;
  }
  if (*(void *)v29 == 1)
  {
    sub_10001B23C((uint64_t)v28);
LABEL_20:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    goto LABEL_12;
  }
  void *v28 = *(void **)v29;

  uint64_t v31 = v28[1];
  v28[1] = (void *)*((void *)v29 + 1);

LABEL_12:
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(a3 + 20);
    uint64_t v21 = (void *)(a1 + v20);
    int v22 = (const void *)(a2 + v20);
    sub_100019138(a1 + v20, &qword_1000A8170);
    uint64_t v23 = sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_100083730();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10004ED14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004ED28);
}

uint64_t sub_10004ED28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NavigationETAEntryContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100002874(&qword_1000A8178);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10004EE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004EE38);
}

uint64_t sub_10004EE38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for NavigationETAEntryContent(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100002874(&qword_1000A8178);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for NavigationETAWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A99B0);
}

void sub_10004EF60()
{
  type metadata accessor for NavigationETAEntryContent(319);
  if (v0 <= 0x3F)
  {
    sub_100021048(319, (unint64_t *)&qword_1000A81E8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10004F044()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004F060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v28 = a1;
  uint64_t v3 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v3 - 8);
  uint64_t v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000832D0();
  uint64_t v5 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A9BD8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002874(&qword_1000A9BE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v25 = v11;
  uint64_t v26 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_1000831C0();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v15 = sub_100002874(&qword_1000A9BE8);
  sub_10004F404(v2, (uint64_t)&v10[*(int *)(v15 + 44)]);
  sub_1000832C0();
  uint64_t v29 = v2;
  sub_1000835D0();
  uint64_t v16 = sub_100002874(&qword_1000A9BA8);
  uint64_t v17 = sub_100023D5C(&qword_1000A9BF0, &qword_1000A9BD8);
  uint64_t v22 = sub_100023D5C(&qword_1000A9BB8, &qword_1000A9BA8);
  sub_100083460();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  sub_100019138((uint64_t)v10, &qword_1000A9BD8);
  uint64_t v18 = sub_100082D90();
  uint64_t v19 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v27, 1, 1, v18);
  uint64_t v30 = v8;
  uint64_t v31 = v16;
  uint64_t v32 = v17;
  uint64_t v33 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = v25;
  sub_1000833D0();
  sub_100019138(v19, &qword_1000A7A68);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v14, v20);
}

uint64_t sub_10004F404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A9BF8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (uint64_t *)((char *)&v23 - v9);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - v11;
  if (qword_1000A79B0 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1000ACB78;
  uint64_t *v10 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v10 + *(int *)(v4 + 36)) = v13;
  uint64_t v14 = (uint64_t)v10 + *(int *)(v4 + 40);
  uint64_t v15 = type metadata accessor for NavigationETASmallWidgetView(0);
  sub_100051000(a1 + *(int *)(v15 + 20), v14, type metadata accessor for NavigationETAEntryContent);
  uint64_t v16 = *(int *)(type metadata accessor for NavigationETASmallPlatterContent(0) + 20);
  if (qword_1000A7A10 != -1) {
    swift_once();
  }
  uint64_t v17 = (uint64_t *)(v14 + v16);
  v18.super.Class isa = (Class)qword_1000ACBD0;
  v22._countAndFlagsBits = 0x8000000100095E70;
  v24._countAndFlagsBits = 0x402520415445;
  v24._object = (void *)0xE600000000000000;
  v25.value._countAndFlagsBits = 0;
  v25.value._object = 0;
  v26._countAndFlagsBits = 0x402520415445;
  v26._object = (void *)0xE600000000000000;
  *uint64_t v17 = sub_100082D70(v24, v25, v18, v26, v22);
  v17[1] = v19;
  sub_100019284((uint64_t)v10, (uint64_t)v12, &qword_1000A9BF8);
  sub_10001A720((uint64_t)v12, (uint64_t)v7, &qword_1000A9BF8);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0x3FF0000000000000;
  uint64_t v20 = sub_100002874(&qword_1000A9C00);
  sub_10001A720((uint64_t)v7, a2 + *(int *)(v20 + 48), &qword_1000A9BF8);
  sub_100019138((uint64_t)v12, &qword_1000A9BF8);
  return sub_100019138((uint64_t)v7, &qword_1000A9BF8);
}

uint64_t sub_10004F684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v35 = a1;
  uint64_t v3 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v3 - 8);
  uint64_t v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000832D0();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A9B78);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = sub_100002874(&qword_1000A9B80);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100002874(&qword_1000A9B88);
  uint64_t v30 = *(void *)(v17 - 8);
  uint64_t v31 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v16 = sub_1000831C0();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v20 = &v16[*(int *)(sub_100002874(&qword_1000A9B90) + 44)];
  *(void *)uint64_t v13 = sub_100083130();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v21 = sub_100002874(&qword_1000A9B98);
  sub_10004FB08(v2, (uint64_t)&v13[*(int *)(v21 + 44)]);
  sub_10001A720((uint64_t)v13, (uint64_t)v11, &qword_1000A9B78);
  *(void *)uint64_t v20 = 0;
  v20[8] = 1;
  *((void *)v20 + 2) = 0x3FF0000000000000;
  uint64_t v22 = sub_100002874(&qword_1000A9BA0);
  sub_10001A720((uint64_t)v11, (uint64_t)&v20[*(int *)(v22 + 48)], &qword_1000A9B78);
  sub_100019138((uint64_t)v13, &qword_1000A9B78);
  sub_100019138((uint64_t)v11, &qword_1000A9B78);
  sub_1000832C0();
  uint64_t v36 = v2;
  sub_1000835D0();
  uint64_t v23 = sub_100002874(&qword_1000A9BA8);
  uint64_t v24 = sub_100023D5C(&qword_1000A9BB0, &qword_1000A9B80);
  uint64_t v29 = sub_100023D5C(&qword_1000A9BB8, &qword_1000A9BA8);
  sub_100083460();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
  sub_100019138((uint64_t)v16, &qword_1000A9B80);
  uint64_t v25 = sub_100082D90();
  uint64_t v26 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v34, 1, 1, v25);
  uint64_t v37 = v14;
  uint64_t v38 = v23;
  uint64_t v39 = v24;
  uint64_t v40 = v29;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v31;
  sub_1000833D0();
  sub_100019138(v26, &qword_1000A7A68);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v19, v27);
}

uint64_t sub_10004FB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_1000837F0();
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  __chkstk_darwin(v3);
  uint64_t v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100002874(&qword_1000A7A78);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A8288);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = type metadata accessor for NavigationETAEntryContent(0);
  __chkstk_darwin(v53);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100002874(&qword_1000A9BC0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v45 - v17;
  uint64_t v46 = sub_100002874(&qword_1000A9BC8);
  uint64_t v18 = __chkstk_darwin(v46);
  uint64_t v48 = (uint64_t)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v45 - v21;
  __chkstk_darwin(v20);
  uint64_t v47 = (uint64_t)&v45 - v23;
  if (qword_1000A79B0 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1000ACB78;
  uint64_t *v16 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v16 + *(int *)(v13 + 36)) = v24;
  uint64_t v25 = (uint64_t)v16 + *(int *)(v13 + 40);
  uint64_t v26 = a1 + *(int *)(type metadata accessor for NavigationETAMediumLargeWidgetView(0) + 20);
  sub_100051000(v26, (uint64_t)v12, type metadata accessor for NavigationETAEntryContent);
  uint64_t *v10 = swift_getKeyPath();
  sub_100002874(&qword_1000A8250);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = (int *)type metadata accessor for NavigationETAMediumLargePlatterContent(0);
  *(void *)(v25 + v28[5]) = KeyPath;
  sub_100002874(&qword_1000A8170);
  swift_storeEnumTagMultiPayload();
  sub_100019284((uint64_t)v10, v25, &qword_1000A8288);
  sub_100050F9C((uint64_t)v12, v25 + v28[6]);
  uint64_t v29 = (uint64_t *)(v25 + v28[7]);
  if (qword_1000A7A10 != -1) {
    swift_once();
  }
  v30.super.Class isa = (Class)qword_1000ACBD0;
  v44._countAndFlagsBits = 0x8000000100095E70;
  v58._countAndFlagsBits = 0x402520415445;
  v58._object = (void *)0xE600000000000000;
  v59.value._countAndFlagsBits = 0;
  v59.value._object = 0;
  v60._countAndFlagsBits = 0x402520415445;
  v60._object = (void *)0xE600000000000000;
  uint64_t *v29 = sub_100082D70(v58, v59, v30, v60, v44);
  v29[1] = v31;
  uint64_t v32 = v54;
  sub_100019284((uint64_t)v16, v54, &qword_1000A9BC0);
  sub_10001A720(v26 + *(int *)(v53 + 36), (uint64_t)v7, &qword_1000A7A78);
  uint64_t v33 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v7, 1, v33);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v35 = v49;
    uint64_t v36 = v50;
    uint64_t v37 = v51;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v49, v7, v51);
    sub_1000512B4((uint64_t)v7, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    sub_1000837D0();
    if (qword_1000A79B8 != -1) {
      swift_once();
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
    sub_1000835D0();
    sub_100082FB0();
    sub_10001A720(v32, (uint64_t)v22, &qword_1000A9BC0);
    uint64_t v38 = &v22[*(int *)(v46 + 36)];
    long long v39 = v56;
    *(_OWORD *)uint64_t v38 = v55;
    *((_OWORD *)v38 + 1) = v39;
    *((_OWORD *)v38 + 2) = v57;
    sub_100019138(v32, &qword_1000A9BC0);
    uint64_t v40 = v47;
    sub_100019284((uint64_t)v22, v47, &qword_1000A9BC8);
    uint64_t v41 = v48;
    sub_10001A720(v40, v48, &qword_1000A9BC8);
    uint64_t v42 = v52;
    sub_10001A720(v41, v52, &qword_1000A9BC8);
    uint64_t v43 = v42 + *(int *)(sub_100002874(&qword_1000A9BD0) + 48);
    *(void *)uint64_t v43 = 0;
    *(unsigned char *)(v43 + 8) = 1;
    sub_100019138(v40, &qword_1000A9BC8);
    return sub_100019138(v41, &qword_1000A9BC8);
  }
  return result;
}

uint64_t sub_10005018C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100002874(&qword_1000A8490);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100002874(&qword_1000A8288);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for NavigationETAEntryContent(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2(0);
  sub_100051000(a1 + *(int *)(v15 + 20), (uint64_t)v14, type metadata accessor for NavigationETAEntryContent);
  uint64_t *v11 = swift_getKeyPath();
  sub_100002874(&qword_1000A8250);
  swift_storeEnumTagMultiPayload();
  uint64_t *v8 = swift_getKeyPath();
  sub_100002874(&qword_1000A8498);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = (int *)sub_100002874(&qword_1000A9BA8);
  *(void *)(a3 + v17[10]) = KeyPath;
  sub_100002874(&qword_1000A84A0);
  swift_storeEnumTagMultiPayload();
  sub_100019284((uint64_t)v11, a3, &qword_1000A8288);
  sub_100019284((uint64_t)v8, a3 + v17[9], &qword_1000A8490);
  uint64_t result = sub_100050F9C((uint64_t)v14, a3 + v17[11]);
  *(unsigned char *)(a3 + v17[12]) = 3;
  return result;
}

uint64_t sub_1000503C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v41 = sub_100002874(&qword_1000A99E8);
  __chkstk_darwin(v41);
  uint64_t v42 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100002874(&qword_1000A99F0);
  __chkstk_darwin(v49);
  uint64_t v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for NavigationETAMediumLargeWidgetView(0);
  __chkstk_darwin(v46);
  Swift::String v44 = (uint64_t *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = sub_100002874(&qword_1000A99F8);
  __chkstk_darwin(v47);
  uint64_t v48 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100002874(&qword_1000A9A00);
  __chkstk_darwin(v52);
  uint64_t v54 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100002874(&qword_1000A9A08);
  __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100002874(&qword_1000A9A10);
  __chkstk_darwin(v53);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100002874(&qword_1000A9A18);
  __chkstk_darwin(v55);
  uint64_t v51 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NavigationETAEntryContent(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NavigationETASmallWidgetView(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_100083730();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NavigationETAWidgetView(0);
  uint64_t v22 = v1;
  sub_1000681E0((uint64_t)v21);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  if (v23 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_100051000(v1, (uint64_t)v14, type metadata accessor for NavigationETAEntryContent);
    *uint64_t v17 = swift_getKeyPath();
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    sub_100050F9C((uint64_t)v14, (uint64_t)v17 + *(int *)(v15 + 20));
    sub_100051000((uint64_t)v17, (uint64_t)v8, type metadata accessor for NavigationETASmallWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_100051144(&qword_1000A9A30, (void (*)(uint64_t))type metadata accessor for NavigationETASmallWidgetView);
    sub_100051144(&qword_1000A9A20, (void (*)(uint64_t))type metadata accessor for NavigationETAMediumLargeWidgetView);
    sub_100083230();
    sub_10001A720((uint64_t)v10, v54, &qword_1000A9A10);
    swift_storeEnumTagMultiPayload();
    sub_100051068();
    sub_10005118C();
    uint64_t v24 = (uint64_t)v51;
    sub_100083230();
    sub_100019138((uint64_t)v10, &qword_1000A9A10);
    sub_10001A720(v24, v48, &qword_1000A9A18);
    swift_storeEnumTagMultiPayload();
    sub_100051238();
    sub_100083230();
    sub_100019138(v24, &qword_1000A9A18);
    uint64_t v25 = type metadata accessor for NavigationETASmallWidgetView;
    uint64_t v26 = (uint64_t)v17;
    return sub_1000512B4(v26, v25);
  }
  uint64_t v40 = v15;
  uint64_t v27 = v46;
  uint64_t v28 = (uint64_t)v8;
  uint64_t v29 = v48;
  if (v23 == enum case for WidgetFamily.systemMedium(_:))
  {
    sub_100051000(v22, (uint64_t)v14, type metadata accessor for NavigationETAEntryContent);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v31 = (uint64_t)v44;
    uint64_t *v44 = KeyPath;
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    sub_100050F9C((uint64_t)v14, v31 + *(int *)(v27 + 20));
    sub_100051000(v31, v28, type metadata accessor for NavigationETAMediumLargeWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_100051144(&qword_1000A9A30, (void (*)(uint64_t))type metadata accessor for NavigationETASmallWidgetView);
    sub_100051144(&qword_1000A9A20, (void (*)(uint64_t))type metadata accessor for NavigationETAMediumLargeWidgetView);
    uint64_t v32 = (uint64_t)v10;
    sub_100083230();
    sub_10001A720((uint64_t)v10, v54, &qword_1000A9A10);
    swift_storeEnumTagMultiPayload();
    sub_100051068();
    sub_10005118C();
    uint64_t v33 = (uint64_t)v51;
    sub_100083230();
    sub_100019138(v32, &qword_1000A9A10);
    sub_10001A720(v33, v29, &qword_1000A9A18);
    swift_storeEnumTagMultiPayload();
    sub_100051238();
    sub_100083230();
    sub_100019138(v33, &qword_1000A9A18);
    uint64_t v25 = type metadata accessor for NavigationETAMediumLargeWidgetView;
    uint64_t v26 = v31;
    return sub_1000512B4(v26, v25);
  }
  if (v23 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v34 = v48;
    sub_100051000(v22, (uint64_t)v14, type metadata accessor for NavigationETAEntryContent);
    uint64_t v35 = swift_getKeyPath();
    uint64_t v36 = (uint64_t)v44;
    uint64_t *v44 = v35;
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    sub_100050F9C((uint64_t)v14, v36 + *(int *)(v27 + 20));
    sub_100051000(v36, v42, type metadata accessor for NavigationETAMediumLargeWidgetView);
    swift_storeEnumTagMultiPayload();
    sub_100051144(&qword_1000A9A20, (void (*)(uint64_t))type metadata accessor for NavigationETAMediumLargeWidgetView);
    uint64_t v37 = (uint64_t)v43;
    sub_100083230();
    sub_10001A720(v37, v54, &qword_1000A99F0);
    swift_storeEnumTagMultiPayload();
    sub_100051068();
    sub_10005118C();
    uint64_t v38 = (uint64_t)v51;
    sub_100083230();
    sub_100019138(v37, &qword_1000A99F0);
    sub_10001A720(v38, v34, &qword_1000A9A18);
    swift_storeEnumTagMultiPayload();
    sub_100051238();
    sub_100083230();
    sub_100019138(v38, &qword_1000A9A18);
    uint64_t v25 = type metadata accessor for NavigationETAMediumLargeWidgetView;
    uint64_t v26 = v36;
    return sub_1000512B4(v26, v25);
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NavigationETAMediumLargeWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9AA0);
}

uint64_t type metadata accessor for NavigationETASmallWidgetView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9B30);
}

uint64_t sub_100050F0C()
{
  return sub_100083060();
}

uint64_t sub_100050F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005287C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100050F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005287C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100050F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NavigationETAEntryContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100051000(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100051068()
{
  unint64_t result = qword_1000A9A28;
  if (!qword_1000A9A28)
  {
    sub_1000028B8(&qword_1000A9A10);
    sub_100051144(&qword_1000A9A30, (void (*)(uint64_t))type metadata accessor for NavigationETASmallWidgetView);
    sub_100051144(&qword_1000A9A20, (void (*)(uint64_t))type metadata accessor for NavigationETAMediumLargeWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9A28);
  }
  return result;
}

uint64_t sub_100051144(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005118C()
{
  unint64_t result = qword_1000A9A38;
  if (!qword_1000A9A38)
  {
    sub_1000028B8(&qword_1000A99F0);
    sub_100051144(&qword_1000A9A20, (void (*)(uint64_t))type metadata accessor for NavigationETAMediumLargeWidgetView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9A38);
  }
  return result;
}

unint64_t sub_100051238()
{
  unint64_t result = qword_1000A9A40;
  if (!qword_1000A9A40)
  {
    sub_1000028B8(&qword_1000A9A18);
    sub_100051068();
    sub_10005118C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9A40);
  }
  return result;
}

uint64_t sub_1000512B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10005132C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100051340);
}

uint64_t sub_100051344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100051358);
}

void sub_100051360()
{
  sub_100021048(319, (unint64_t *)&unk_1000A82F8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    type metadata accessor for NavigationETAEntryContent(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100051444(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void **)((char *)a2 + v9);
    if (v12 == (void *)1)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    }
    else
    {
      uint64_t v13 = (void *)*((void *)v11 + 1);
      *(void *)uint64_t v10 = v12;
      *((void *)v10 + 1) = v13;
      id v14 = v12;
      id v15 = v13;
    }
    uint64_t v16 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v16;
    *((_DWORD *)v10 + 8) = *((_DWORD *)v11 + 8);
    v10[36] = v11[36];
    uint64_t v17 = *((void *)v11 + 6);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *((void *)v10 + 6) = v17;
    v10[56] = v11[56];
    uint64_t v18 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    uint64_t v22 = *(void *)(v21 - 8);
    int v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = sub_100002874(&qword_1000A7A78);
      memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v25 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v19, v20, v25);
      uint64_t v26 = *(int *)(v21 + 20);
      uint64_t v27 = &v19[v26];
      uint64_t v28 = &v20[v26];
      uint64_t v29 = *(void **)&v20[v26];
      if (v29 == (void *)1)
      {
        *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      }
      else
      {
        NSBundle v30 = (void *)*((void *)v28 + 1);
        *(void *)uint64_t v27 = v29;
        *((void *)v27 + 1) = v30;
        id v31 = v29;
        id v32 = v30;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

void sub_100051708(uint64_t a1, uint64_t a2)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100082F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  int v5 = (id *)(a1 + *(int *)(a2 + 20));
  if (*v5 != (id)1)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = (char *)v5 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v7 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_1000837F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    uint64_t v9 = &v6[*(int *)(v7 + 20)];
    if (*(void *)v9 != 1)
    {

      uint64_t v10 = (void *)*((void *)v9 + 1);
    }
  }
}

void *sub_100051884(void *a1, void *a2, uint64_t a3)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100082F80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void **)((char *)a2 + v7);
  if (v10 == (void *)1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = (void *)*((void *)v9 + 1);
    *(void *)uint64_t v8 = v10;
    *((void *)v8 + 1) = v11;
    id v12 = v10;
    id v13 = v11;
  }
  uint64_t v14 = *((void *)v9 + 3);
  *((void *)v8 + 2) = *((void *)v9 + 2);
  *((void *)v8 + 3) = v14;
  *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
  v8[36] = v9[36];
  uint64_t v15 = *((void *)v9 + 6);
  *((void *)v8 + 5) = *((void *)v9 + 5);
  *((void *)v8 + 6) = v15;
  v8[56] = v9[56];
  uint64_t v16 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  uint64_t v19 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    uint64_t v22 = sub_100002874(&qword_1000A7A78);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v17, v18, v23);
    uint64_t v24 = *(int *)(v19 + 20);
    uint64_t v25 = &v17[v24];
    uint64_t v26 = &v18[v24];
    uint64_t v27 = *(void **)&v18[v24];
    if (v27 == (void *)1)
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    }
    else
    {
      uint64_t v28 = (void *)*((void *)v26 + 1);
      *(void *)uint64_t v25 = v27;
      *((void *)v25 + 1) = v28;
      id v29 = v27;
      id v30 = v28;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

void *sub_100051AF8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void **)((char *)a1 + v7);
  uint64_t v11 = *(void **)v9;
  if (v10 == (void *)1)
  {
    if (v11 != (void *)1)
    {
      *(void *)uint64_t v8 = v11;
      id v12 = (void *)*((void *)v9 + 1);
      *(void *)(v8 + 8) = v12;
      id v13 = v11;
      id v14 = v12;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v11 == (void *)1)
  {
    sub_10001B23C(v8);
LABEL_11:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_13;
  }
  *(void *)uint64_t v8 = v11;
  id v15 = v11;

  uint64_t v16 = *(void **)(v8 + 8);
  uint64_t v17 = (void *)*((void *)v9 + 1);
  *(void *)(v8 + 8) = v17;
  id v18 = v17;

LABEL_13:
  *(void *)(v8 + 16) = *((void *)v9 + 2);
  *(void *)(v8 + 24) = *((void *)v9 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v19 = *((_DWORD *)v9 + 8);
  *(unsigned char *)(v8 + 36) = v9[36];
  *(_DWORD *)(v8 + 32) = v19;
  *(void *)(v8 + 40) = *((void *)v9 + 5);
  *(void *)(v8 + 48) = *((void *)v9 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 56) = v9[56];
  uint64_t v20 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v21 = (char *)(v8 + v20);
  uint64_t v22 = &v9[v20];
  uint64_t v23 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      uint64_t v34 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v21, v22, v34);
      uint64_t v35 = *(int *)(v23 + 20);
      uint64_t v36 = (void **)&v21[v35];
      uint64_t v37 = &v22[v35];
      uint64_t v38 = *v36;
      long long v39 = *(void **)v37;
      if (*v36 == (void *)1)
      {
        if (v39 != (void *)1)
        {
          *uint64_t v36 = v39;
          uint64_t v40 = (void *)*((void *)v37 + 1);
          v36[1] = v40;
          id v41 = v39;
          id v42 = v40;
          return a1;
        }
      }
      else
      {
        if (v39 != (void *)1)
        {
          *uint64_t v36 = v39;
          id v46 = v39;

          uint64_t v47 = v36[1];
          uint64_t v48 = (void *)*((void *)v37 + 1);
          v36[1] = v48;
          id v49 = v48;

          return a1;
        }
        sub_10001B23C((uint64_t)v36);
      }
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      return a1;
    }
    sub_1000512B4((uint64_t)v21, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_19;
  }
  if (v27)
  {
LABEL_19:
    uint64_t v33 = sub_100002874(&qword_1000A7A78);
    memcpy(v21, v22, *(void *)(*(void *)(v33 - 8) + 64));
    return a1;
  }
  uint64_t v28 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v21, v22, v28);
  uint64_t v29 = *(int *)(v23 + 20);
  id v30 = &v21[v29];
  id v31 = &v22[v29];
  id v32 = *(void **)&v22[v29];
  if (v32 == (void *)1)
  {
    *(_OWORD *)id v30 = *(_OWORD *)v31;
  }
  else
  {
    *(void *)id v30 = v32;
    uint64_t v43 = (void *)*((void *)v31 + 1);
    *((void *)v30 + 1) = v43;
    id v44 = v32;
    id v45 = v43;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

char *sub_100051EDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100082F80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *(_OWORD *)&a2[v8 + 16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)&a2[v8];
  *((_OWORD *)v9 + 1) = v11;
  *((_DWORD *)v9 + 8) = *(_DWORD *)&a2[v8 + 32];
  v9[36] = a2[v8 + 36];
  *(_OWORD *)(v9 + 40) = *(_OWORD *)&a2[v8 + 40];
  v9[56] = a2[v8 + 56];
  uint64_t v12 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  id v13 = &v9[v12];
  id v14 = &v10[v12];
  uint64_t v15 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100002874(&qword_1000A7A78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
    *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

char *sub_1000520E8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    uint64_t v6 = sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (uint64_t)&a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *(void **)&a1[v8];
  if (v11 == (void *)1) {
    goto LABEL_8;
  }
  if (*(void *)v10 == 1)
  {
    sub_10001B23C(v9);
LABEL_8:
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    goto LABEL_10;
  }
  *(void *)uint64_t v9 = *(void *)v10;

  uint64_t v12 = *(void **)(v9 + 8);
  *(void *)(v9 + 8) = *((void *)v10 + 1);

LABEL_10:
  uint64_t v13 = *((void *)v10 + 3);
  *(void *)(v9 + 16) = *((void *)v10 + 2);
  *(void *)(v9 + 24) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v9 + 32) = *((_DWORD *)v10 + 8);
  *(unsigned char *)(v9 + 36) = v10[36];
  uint64_t v14 = *((void *)v10 + 6);
  *(void *)(v9 + 40) = *((void *)v10 + 5);
  *(void *)(v9 + 48) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 56) = v10[56];
  uint64_t v15 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v16 = (char *)(v9 + v15);
  uint64_t v17 = &v10[v15];
  uint64_t v18 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      uint64_t v23 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v16, v17, v23);
      *(_OWORD *)&v16[*(int *)(v18 + 20)] = *(_OWORD *)&v17[*(int *)(v18 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      return a1;
    }
LABEL_15:
    uint64_t v24 = sub_100002874(&qword_1000A7A78);
    memcpy(v16, v17, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  if (v22)
  {
    sub_1000512B4((uint64_t)v16, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_15;
  }
  uint64_t v26 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v16, v17, v26);
  uint64_t v27 = *(int *)(v18 + 20);
  uint64_t v28 = (void **)&v16[v27];
  uint64_t v29 = (void **)&v17[v27];
  id v30 = *v28;
  if (*v28 != (void *)1)
  {
    if (*v29 != (void *)1)
    {
      void *v28 = *v29;

      id v31 = v28[1];
      v28[1] = v29[1];

      return a1;
    }
    sub_10001B23C((uint64_t)v28);
  }
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  return a1;
}

uint64_t sub_100052438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005244C);
}

uint64_t sub_100052450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8288);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for NavigationETAEntryContent(0);
    long long v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10005254C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100052560);
}

uint64_t sub_100052564(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100002874(&qword_1000A8288);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for NavigationETAEntryContent(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

unint64_t sub_100052670()
{
  unint64_t result = qword_1000A9B68;
  if (!qword_1000A9B68)
  {
    sub_1000028B8(&qword_1000A9B70);
    sub_100051238();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9B68);
  }
  return result;
}

uint64_t sub_1000526EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100052708()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100052724@<X0>(uint64_t a1@<X8>)
{
  return sub_10005018C(*(void *)(v1 + 16), type metadata accessor for NavigationETAMediumLargeWidgetView, a1);
}

uint64_t sub_100052754()
{
  return sub_100083100();
}

uint64_t sub_100052778()
{
  return sub_100083100();
}

uint64_t sub_10005279C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005287C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_1000527C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005287C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_100052808()
{
  return sub_1000830E0();
}

uint64_t sub_10005282C()
{
  return sub_1000830E0();
}

uint64_t sub_100052850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005287C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_10005287C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10005294C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005287C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_100052990@<X0>(uint64_t a1@<X8>)
{
  return sub_10005018C(*(void *)(v1 + 16), type metadata accessor for NavigationETASmallWidgetView, a1);
}

uint64_t sub_1000529C0(uint64_t a1)
{
  return sub_1000529F8(a1, &qword_1000A9B88, &qword_1000A9B80, &qword_1000A9BB0);
}

uint64_t sub_1000529DC(uint64_t a1)
{
  return sub_1000529F8(a1, &qword_1000A9BE0, &qword_1000A9BD8, &qword_1000A9BF0);
}

uint64_t sub_1000529F8(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100052AF4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 56);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void **)(a2 + 56);
  if (v4 == (void *)1)
  {
    if (v6 != (void *)1)
    {
      *(void *)(a1 + 56) = v6;
      uint64_t v7 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v7;
      id v8 = v6;
      id v9 = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == (void *)1)
  {
    sub_10001B23C(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(void *)(a1 + 56) = v6;
  id v10 = v6;

  long long v11 = *(void **)(a1 + 64);
  uint64_t v12 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v12;
  id v13 = v12;

LABEL_8:
  int v14 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v14;
  uint64_t v15 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20((uint64_t)v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_100053068(v16);
      goto LABEL_14;
    }
    uint64_t v31 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v16, v17, v31);
    uint64_t v32 = v18[5];
    uint64_t v33 = (void *)(v16 + v32);
    uint64_t v34 = &v17[v32];
    uint64_t v35 = *(void **)(v16 + v32);
    uint64_t v36 = *(void **)&v17[v32];
    if (v35 == (void *)1)
    {
      if (v36 != (void *)1)
      {
        *uint64_t v33 = v36;
        uint64_t v37 = (void *)*((void *)v34 + 1);
        v33[1] = v37;
        id v38 = v36;
        id v39 = v37;
LABEL_29:
        uint64_t v58 = v18[6];
        uint64_t v59 = v16 + v58;
        Swift::String v60 = &v17[v58];
        long long v61 = *(_OWORD *)v60;
        *(unsigned char *)(v59 + 16) = v60[16];
        *(_OWORD *)uint64_t v59 = v61;
        uint64_t v62 = v18[7];
        id v63 = (void *)(v16 + v62);
        uint64_t v64 = &v17[v62];
        uint64_t v65 = sub_100082D90();
        uint64_t v66 = *(void *)(v65 - 8);
        long long v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
        int v68 = v67(v63, 1, v65);
        int v69 = v67(v64, 1, v65);
        if (v68)
        {
          if (!v69)
          {
            (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
            return a1;
          }
        }
        else
        {
          if (!v69)
          {
            (*(void (**)(void *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v66 + 8))(v63, v65);
        }
        size_t v28 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
        uint64_t v29 = v63;
        id v30 = v64;
        goto LABEL_15;
      }
    }
    else
    {
      if (v36 != (void *)1)
      {
        *uint64_t v33 = v36;
        id v54 = v36;

        uint64_t v55 = (void *)v33[1];
        long long v56 = (void *)*((void *)v34 + 1);
        v33[1] = v56;
        id v57 = v56;

        goto LABEL_29;
      }
      sub_10001B23C((uint64_t)v33);
    }
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    goto LABEL_29;
  }
  if (v22)
  {
LABEL_14:
    size_t v28 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v29 = (void *)v16;
    id v30 = v17;
LABEL_15:
    memcpy(v29, v30, v28);
    return a1;
  }
  uint64_t v23 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
  uint64_t v24 = v18[5];
  uint64_t v25 = v16 + v24;
  uint64_t v26 = &v17[v24];
  uint64_t v27 = *(void **)&v17[v24];
  if (v27 == (void *)1)
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  }
  else
  {
    *(void *)uint64_t v25 = v27;
    uint64_t v40 = (void *)*((void *)v26 + 1);
    *(void *)(v25 + 8) = v40;
    id v41 = v27;
    id v42 = v40;
  }
  uint64_t v43 = v18[6];
  uint64_t v44 = v16 + v43;
  id v45 = &v17[v43];
  long long v46 = *(_OWORD *)v45;
  *(unsigned char *)(v44 + 16) = v45[16];
  *(_OWORD *)uint64_t v44 = v46;
  uint64_t v47 = v18[7];
  uint64_t v48 = (void *)(v16 + v47);
  id v49 = &v17[v47];
  uint64_t v50 = sub_100082D90();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    uint64_t v52 = sub_100002874(&qword_1000A7A68);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_100053068(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000530C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void **)(a1 + 56);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (v7 == (void *)1) {
    goto LABEL_4;
  }
  if (v6 == 1)
  {
    sub_10001B23C(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = v6;

  id v9 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

LABEL_6:
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v10 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (char *)(a2 + v10);
  id v13 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_100053068(v11);
      goto LABEL_12;
    }
    uint64_t v31 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v11, v12, v31);
    uint64_t v32 = v13[5];
    uint64_t v33 = (void *)(v11 + v32);
    uint64_t v34 = &v12[v32];
    uint64_t v35 = *(void **)(v11 + v32);
    if (v35 != (void *)1)
    {
      if (*(void *)v34 != 1)
      {
        *uint64_t v33 = *(void *)v34;

        uint64_t v37 = (void *)v33[1];
        v33[1] = *((void *)v34 + 1);

        goto LABEL_22;
      }
      sub_10001B23C((uint64_t)v33);
    }
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
LABEL_22:
    uint64_t v38 = v13[6];
    uint64_t v39 = v11 + v38;
    uint64_t v40 = &v12[v38];
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *(unsigned char *)(v39 + 16) = v40[16];
    uint64_t v41 = v13[7];
    id v42 = (void *)(v11 + v41);
    uint64_t v43 = &v12[v41];
    uint64_t v44 = sub_100082D90();
    uint64_t v45 = *(void *)(v44 - 8);
    long long v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
    int v47 = v46(v42, 1, v44);
    int v48 = v46(v43, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        return a1;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
        return a1;
      }
      (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
    }
    size_t v28 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
    uint64_t v29 = v42;
    id v30 = v43;
    goto LABEL_13;
  }
  if (v17)
  {
LABEL_12:
    size_t v28 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v29 = (void *)v11;
    id v30 = v12;
LABEL_13:
    memcpy(v29, v30, v28);
    return a1;
  }
  uint64_t v18 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
  *(_OWORD *)(v11 + v13[5]) = *(_OWORD *)&v12[v13[5]];
  uint64_t v19 = v13[6];
  uint64_t v20 = v11 + v19;
  int v21 = &v12[v19];
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = v21[16];
  uint64_t v22 = v13[7];
  uint64_t v23 = (void *)(v11 + v22);
  uint64_t v24 = &v12[v22];
  uint64_t v25 = sub_100082D90();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_100002874(&qword_1000A7A68);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_100053594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000535A8);
}

uint64_t sub_1000535A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100053614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100053628);
}

uint64_t sub_100053628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SuggestedDestinationSmallPlatterContent(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9C60);
}

uint64_t *sub_1000536B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100002874(&qword_1000A84A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100083040();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    *(void *)uint64_t v14 = *(uint64_t *)((char *)a2 + v13);
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v13 + 16);
    uint64_t v18 = *((void *)v15 + 3);
    *((void *)v14 + 2) = v17;
    *((void *)v14 + 3) = v18;
    uint64_t v19 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v19;
    v14[48] = v15[48];
    uint64_t v20 = (void *)*((void *)v15 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 == (void *)1)
    {
      *(_OWORD *)(v14 + 56) = *(_OWORD *)(v15 + 56);
    }
    else
    {
      int v21 = (void *)*((void *)v15 + 8);
      *((void *)v14 + 7) = v20;
      *((void *)v14 + 8) = v21;
      id v22 = v20;
      id v23 = v21;
    }
    *((_DWORD *)v14 + 18) = *((_DWORD *)v15 + 18);
    v14[76] = v15[76];
    uint64_t v24 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
    uint64_t v25 = &v14[v24];
    uint64_t v26 = &v15[v24];
    uint64_t v27 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    uint64_t v28 = *((void *)v27 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_100002874(&qword_1000A7A70);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v30 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v25, v26, v30);
      uint64_t v31 = v27[5];
      uint64_t v32 = &v25[v31];
      uint64_t v33 = &v26[v31];
      uint64_t v34 = *(void **)&v26[v31];
      if (v34 == (void *)1)
      {
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      }
      else
      {
        uint64_t v35 = (void *)*((void *)v33 + 1);
        *(void *)uint64_t v32 = v34;
        *((void *)v32 + 1) = v35;
        id v36 = v34;
        id v37 = v35;
      }
      uint64_t v38 = v27[6];
      uint64_t v39 = &v25[v38];
      uint64_t v40 = &v26[v38];
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      v39[16] = v40[16];
      uint64_t v41 = v27[7];
      id v42 = &v25[v41];
      uint64_t v43 = &v26[v41];
      uint64_t v44 = sub_100082D90();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        uint64_t v46 = sub_100002874(&qword_1000A7A68);
        memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return a1;
}

uint64_t sub_100053B0C(uint64_t a1, uint64_t a2)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100082F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100002874(&qword_1000A84A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100083040();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(v7 + 56);
  if (v8 != (void *)1)
  {
  }
  uint64_t v9 = v7 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v10 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v9, v12);
    uint64_t v13 = (id *)(v9 + *(int *)(v10 + 20));
    if (*v13 != (id)1)
    {
    }
    uint64_t v14 = v9 + *(int *)(v10 + 28);
    uint64_t v15 = sub_100082D90();
    uint64_t v17 = *(void *)(v15 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15);
    if (!result)
    {
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
      return v16(v14, v15);
    }
  }
  return result;
}

void *sub_100053DA0(void *a1, void *a2, uint64_t a3)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100082F80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100002874(&qword_1000A84A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_100083040();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)((char *)a2 + v11);
  *((void *)v12 + 1) = v14;
  uint64_t v15 = *(void *)((char *)a2 + v11 + 16);
  uint64_t v16 = *((void *)v13 + 3);
  *((void *)v12 + 2) = v15;
  *((void *)v12 + 3) = v16;
  uint64_t v17 = *((void *)v13 + 5);
  *((void *)v12 + 4) = *((void *)v13 + 4);
  *((void *)v12 + 5) = v17;
  v12[48] = v13[48];
  uint64_t v18 = (void *)*((void *)v13 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 == (void *)1)
  {
    *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
  }
  else
  {
    uint64_t v19 = (void *)*((void *)v13 + 8);
    *((void *)v12 + 7) = v18;
    *((void *)v12 + 8) = v19;
    id v20 = v18;
    id v21 = v19;
  }
  *((_DWORD *)v12 + 18) = *((_DWORD *)v13 + 18);
  v12[76] = v13[76];
  uint64_t v22 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  id v23 = &v12[v22];
  uint64_t v24 = &v13[v22];
  uint64_t v25 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v26 = *((void *)v25 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_100002874(&qword_1000A7A70);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v23, v24, v28);
    uint64_t v29 = v25[5];
    uint64_t v30 = &v23[v29];
    uint64_t v31 = &v24[v29];
    uint64_t v32 = *(void **)&v24[v29];
    if (v32 == (void *)1)
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    }
    else
    {
      uint64_t v33 = (void *)*((void *)v31 + 1);
      *(void *)uint64_t v30 = v32;
      *((void *)v30 + 1) = v33;
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t v36 = v25[6];
    id v37 = &v23[v36];
    uint64_t v38 = &v24[v36];
    *(_OWORD *)id v37 = *(_OWORD *)v38;
    unsigned char v37[16] = v38[16];
    uint64_t v39 = v25[7];
    uint64_t v40 = &v23[v39];
    uint64_t v41 = &v24[v39];
    uint64_t v42 = sub_100082D90();
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      uint64_t v44 = sub_100002874(&qword_1000A7A68);
      memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

void *sub_1000541A4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100019138((uint64_t)a1 + v7, &qword_1000A84A0);
    sub_100002874(&qword_1000A84A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_100083040();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)((char *)a2 + v11);
  *((void *)v12 + 1) = *(void *)((char *)a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v12 + 2) = *((void *)v13 + 2);
  *((void *)v12 + 3) = *((void *)v13 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v12 + 4) = *((void *)v13 + 4);
  uint64_t v14 = *((void *)v13 + 5);
  v12[48] = v13[48];
  *((void *)v12 + 5) = v14;
  uint64_t v15 = (void *)*((void *)v12 + 7);
  uint64_t v16 = (void *)*((void *)v13 + 7);
  if (v15 == (void *)1)
  {
    if (v16 != (void *)1)
    {
      *((void *)v12 + 7) = v16;
      uint64_t v17 = (void *)*((void *)v13 + 8);
      *((void *)v12 + 8) = v17;
      id v18 = v16;
      id v19 = v17;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (v16 == (void *)1)
  {
    sub_10001B23C((uint64_t)(v12 + 56));
LABEL_14:
    *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
    goto LABEL_16;
  }
  *((void *)v12 + 7) = v16;
  id v20 = v16;

  id v21 = (void *)*((void *)v12 + 8);
  uint64_t v22 = (void *)*((void *)v13 + 8);
  *((void *)v12 + 8) = v22;
  id v23 = v22;

LABEL_16:
  int v24 = *((_DWORD *)v13 + 18);
  v12[76] = v13[76];
  *((_DWORD *)v12 + 18) = v24;
  uint64_t v25 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v26 = (uint64_t)&v12[v25];
  uint64_t v27 = &v13[v25];
  uint64_t v28 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30((uint64_t)v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_100053068(v26);
      goto LABEL_22;
    }
    uint64_t v41 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v41 - 8) + 24))(v26, v27, v41);
    uint64_t v42 = v28[5];
    uint64_t v43 = (void *)(v26 + v42);
    uint64_t v44 = &v27[v42];
    uint64_t v45 = *(void **)(v26 + v42);
    uint64_t v46 = *(void **)&v27[v42];
    if (v45 == (void *)1)
    {
      if (v46 != (void *)1)
      {
        void *v43 = v46;
        int v47 = (void *)*((void *)v44 + 1);
        v43[1] = v47;
        id v48 = v46;
        id v49 = v47;
LABEL_37:
        uint64_t v68 = v28[6];
        uint64_t v69 = v26 + v68;
        uint64_t v70 = &v27[v68];
        long long v71 = *(_OWORD *)v70;
        *(unsigned char *)(v69 + 16) = v70[16];
        *(_OWORD *)uint64_t v69 = v71;
        uint64_t v72 = v28[7];
        uint64_t v73 = (void *)(v26 + v72);
        int v74 = &v27[v72];
        uint64_t v75 = sub_100082D90();
        uint64_t v76 = *(void *)(v75 - 8);
        uint64_t v77 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v76 + 48);
        int v78 = v77(v73, 1, v75);
        int v79 = v77(v74, 1, v75);
        if (v78)
        {
          if (!v79)
          {
            (*(void (**)(void *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
            return a1;
          }
        }
        else
        {
          if (!v79)
          {
            (*(void (**)(void *, char *, uint64_t))(v76 + 24))(v73, v74, v75);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v76 + 8))(v73, v75);
        }
        size_t v38 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
        uint64_t v39 = v73;
        uint64_t v40 = v74;
        goto LABEL_23;
      }
    }
    else
    {
      if (v46 != (void *)1)
      {
        void *v43 = v46;
        id v64 = v46;

        uint64_t v65 = (void *)v43[1];
        uint64_t v66 = (void *)*((void *)v44 + 1);
        v43[1] = v66;
        id v67 = v66;

        goto LABEL_37;
      }
      sub_10001B23C((uint64_t)v43);
    }
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    goto LABEL_37;
  }
  if (v32)
  {
LABEL_22:
    size_t v38 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v39 = (void *)v26;
    uint64_t v40 = v27;
LABEL_23:
    memcpy(v39, v40, v38);
    return a1;
  }
  uint64_t v33 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v26, v27, v33);
  uint64_t v34 = v28[5];
  uint64_t v35 = v26 + v34;
  uint64_t v36 = &v27[v34];
  id v37 = *(void **)&v27[v34];
  if (v37 == (void *)1)
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  }
  else
  {
    *(void *)uint64_t v35 = v37;
    uint64_t v50 = (void *)*((void *)v36 + 1);
    *(void *)(v35 + 8) = v50;
    id v51 = v37;
    id v52 = v50;
  }
  uint64_t v53 = v28[6];
  uint64_t v54 = v26 + v53;
  uint64_t v55 = &v27[v53];
  long long v56 = *(_OWORD *)v55;
  *(unsigned char *)(v54 + 16) = v55[16];
  *(_OWORD *)uint64_t v54 = v56;
  uint64_t v57 = v28[7];
  uint64_t v58 = (void *)(v26 + v57);
  uint64_t v59 = &v27[v57];
  uint64_t v60 = sub_100082D90();
  uint64_t v61 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    uint64_t v62 = sub_100002874(&qword_1000A7A68);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
  return a1;
}

char *sub_100054874(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100082F80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100002874(&qword_1000A84A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100083040();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  long long v16 = *(_OWORD *)&a2[v13 + 16];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)&a2[v13];
  *((_OWORD *)v14 + 1) = v16;
  uint64_t v17 = *(void *)&a2[v13 + 40];
  *((void *)v14 + 4) = *(void *)&a2[v13 + 32];
  *((void *)v14 + 5) = v17;
  v14[48] = a2[v13 + 48];
  *(_OWORD *)(v14 + 56) = *(_OWORD *)&a2[v13 + 56];
  v14[76] = a2[v13 + 76];
  *((_DWORD *)v14 + 18) = *(_DWORD *)&a2[v13 + 72];
  uint64_t v18 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  id v19 = &v14[v18];
  id v20 = &v15[v18];
  id v21 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = sub_100002874(&qword_1000A7A70);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v19, v20, v24);
    *(_OWORD *)&v19[v21[5]] = *(_OWORD *)&v20[v21[5]];
    uint64_t v25 = v21[6];
    uint64_t v26 = &v19[v25];
    uint64_t v27 = &v20[v25];
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    v26[16] = v27[16];
    uint64_t v28 = v21[7];
    uint64_t v29 = &v19[v28];
    uint64_t v30 = &v20[v28];
    uint64_t v31 = sub_100082D90();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_100002874(&qword_1000A7A68);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

char *sub_100054C24(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    uint64_t v6 = sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100019138((uint64_t)&a1[v8], &qword_1000A84A0);
    uint64_t v11 = sub_100002874(&qword_1000A84A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100083040();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void *)&a2[v13 + 8];
  *(void *)uint64_t v14 = *(void *)&a2[v13];
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)v15 + 3);
  *((void *)v14 + 2) = *((void *)v15 + 2);
  *((void *)v14 + 3) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v15 + 5);
  *((void *)v14 + 4) = *((void *)v15 + 4);
  *((void *)v14 + 5) = v18;
  v14[48] = v15[48];
  id v19 = (void *)*((void *)v14 + 7);
  uint64_t v20 = *((void *)v15 + 7);
  if (v19 == (void *)1) {
    goto LABEL_11;
  }
  if (v20 == 1)
  {
    sub_10001B23C((uint64_t)(v14 + 56));
LABEL_11:
    *(_OWORD *)(v14 + 56) = *(_OWORD *)(v15 + 56);
    goto LABEL_13;
  }
  *((void *)v14 + 7) = v20;

  id v21 = (void *)*((void *)v14 + 8);
  *((void *)v14 + 8) = *((void *)v15 + 8);

LABEL_13:
  *((_DWORD *)v14 + 18) = *((_DWORD *)v15 + 18);
  v14[76] = v15[76];
  uint64_t v22 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v23 = (uint64_t)&v14[v22];
  uint64_t v24 = &v15[v22];
  uint64_t v25 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v26 = *((void *)v25 - 1);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27((uint64_t)v24, 1, v25);
  if (!v28)
  {
    if (v29)
    {
      sub_100053068(v23);
      goto LABEL_19;
    }
    uint64_t v43 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v43 - 8) + 40))(v23, v24, v43);
    uint64_t v44 = v25[5];
    uint64_t v45 = (void *)(v23 + v44);
    uint64_t v46 = &v24[v44];
    int v47 = *(void **)(v23 + v44);
    if (v47 != (void *)1)
    {
      if (*(void *)v46 != 1)
      {
        *uint64_t v45 = *(void *)v46;

        id v49 = (void *)v45[1];
        v45[1] = *((void *)v46 + 1);

        goto LABEL_29;
      }
      sub_10001B23C((uint64_t)v45);
    }
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
LABEL_29:
    uint64_t v50 = v25[6];
    uint64_t v51 = v23 + v50;
    id v52 = &v24[v50];
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    *(unsigned char *)(v51 + 16) = v52[16];
    uint64_t v53 = v25[7];
    uint64_t v54 = (void *)(v23 + v53);
    uint64_t v55 = &v24[v53];
    uint64_t v56 = sub_100082D90();
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v57 + 48);
    int v59 = v58(v54, 1, v56);
    int v60 = v58(v55, 1, v56);
    if (v59)
    {
      if (!v60)
      {
        (*(void (**)(void *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
        return a1;
      }
    }
    else
    {
      if (!v60)
      {
        (*(void (**)(void *, char *, uint64_t))(v57 + 40))(v54, v55, v56);
        return a1;
      }
      (*(void (**)(void *, uint64_t))(v57 + 8))(v54, v56);
    }
    size_t v40 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
    uint64_t v41 = v54;
    uint64_t v42 = v55;
    goto LABEL_20;
  }
  if (v29)
  {
LABEL_19:
    size_t v40 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v41 = (void *)v23;
    uint64_t v42 = v24;
LABEL_20:
    memcpy(v41, v42, v40);
    return a1;
  }
  uint64_t v30 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v23, v24, v30);
  *(_OWORD *)(v23 + v25[5]) = *(_OWORD *)&v24[v25[5]];
  uint64_t v31 = v25[6];
  uint64_t v32 = v23 + v31;
  uint64_t v33 = &v24[v31];
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(unsigned char *)(v32 + 16) = v33[16];
  uint64_t v34 = v25[7];
  uint64_t v35 = (void *)(v23 + v34);
  uint64_t v36 = &v24[v34];
  uint64_t v37 = sub_100082D90();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_100002874(&qword_1000A7A68);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_100055260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100055274);
}

uint64_t sub_100055274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8288);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002874(&qword_1000A9C98);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1000553C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000553DC);
}

uint64_t sub_1000553DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100002874(&qword_1000A8288);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100002874(&qword_1000A9C98);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for SuggestedDestinationMediumLargePlatterContent(uint64_t a1)
{
  return sub_100008710(a1, qword_1000A9CF8);
}

void sub_10005555C()
{
  sub_100055698(319, (unint64_t *)&unk_1000A82F8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100055698(319, &qword_1000A88A0, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    if (v1 <= 0x3F)
    {
      type metadata accessor for SuggestedDestinationEntryContent(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100055698(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100082F90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000556EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100055708@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100002874(&qword_1000A9D40);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_100002874(&qword_1000A9D48);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = sub_100083130();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v16 = sub_100002874(&qword_1000A9D50);
  sub_1000558FC(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  *(void *)uint64_t v9 = sub_100083130();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v17 = sub_100002874(&qword_1000A9D58);
  sub_100055C9C((uint64_t)a1, (uint64_t)&v9[*(int *)(v17 + 44)]);
  sub_10001A720((uint64_t)v15, (uint64_t)v13, &qword_1000A9D48);
  sub_10001A720((uint64_t)v9, (uint64_t)v7, &qword_1000A9D40);
  sub_10001A720((uint64_t)v13, a2, &qword_1000A9D48);
  uint64_t v18 = sub_100002874(&qword_1000A9D60);
  sub_10001A720((uint64_t)v7, a2 + *(int *)(v18 + 48), &qword_1000A9D40);
  sub_100019138((uint64_t)v9, &qword_1000A9D40);
  sub_100019138((uint64_t)v15, &qword_1000A9D48);
  sub_100019138((uint64_t)v7, &qword_1000A9D40);
  return sub_100019138((uint64_t)v13, &qword_1000A9D48);
}

uint64_t sub_1000558FC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A9D80);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  uint64_t v48 = v4;
  __chkstk_darwin(v3);
  uint64_t v45 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100002874(&qword_1000A9D88);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v46 = &v40[-v10];
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v50 = v11;
  uint64_t v51 = v12;
  sub_100023C14();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000833B0();
  uint64_t v42 = v14;
  uint64_t v43 = v13;
  uint64_t v44 = v15;
  int v41 = v16 & 1;
  LODWORD(v50) = sub_1000832A0();
  uint64_t v17 = sub_100083380();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_100083320();
  uint64_t v22 = sub_100083390();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  sub_100023DA0(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_100083330();
  uint64_t v27 = sub_100083370();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  sub_100023DA0(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  sub_100023DA0(v43, v42, v41);
  swift_bridgeObjectRelease();
  uint64_t v50 = (void *)v27;
  uint64_t v51 = (void *)v29;
  char v52 = v33;
  uint64_t v53 = v31;
  uint64_t v34 = v45;
  sub_100083450();
  sub_100023DA0(v27, v29, v33);
  swift_bridgeObjectRelease();
  uint64_t v50 = &type metadata for Text;
  uint64_t v51 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v47;
  sub_100083420();
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v34, v35);
  uint64_t v36 = v46;
  sub_100019284((uint64_t)v9, (uint64_t)v46, &qword_1000A9D88);
  sub_10001A720((uint64_t)v36, (uint64_t)v9, &qword_1000A9D88);
  uint64_t v37 = v49;
  sub_10001A720((uint64_t)v9, v49, &qword_1000A9D88);
  uint64_t v38 = v37 + *(int *)(sub_100002874(&qword_1000A9D90) + 48);
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 1;
  sub_100019138((uint64_t)v36, &qword_1000A9D88);
  return sub_100019138((uint64_t)v9, &qword_1000A9D88);
}

uint64_t sub_100055C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A9498);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  uint64_t v50 = v4;
  __chkstk_darwin(v3);
  uint64_t v45 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100002874(&qword_1000A9D68);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  uint64_t v52 = v7;
  __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002874(&qword_1000A9D70);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v47 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v48 = (uint64_t)&v42 - v12;
  uint64_t v13 = *(void **)(a1 + 24);
  uint64_t v54 = *(void **)(a1 + 16);
  uint64_t v55 = v13;
  sub_100023C14();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000833B0();
  uint64_t v42 = v15;
  uint64_t v43 = v14;
  uint64_t v44 = v16;
  char v18 = v17 & 1;
  LODWORD(v54) = sub_1000832B0();
  uint64_t v19 = sub_100083380();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_100083340();
  uint64_t v24 = sub_100083390();
  uint64_t v26 = v25;
  LOBYTE(a1) = v27;
  uint64_t v29 = v28;
  swift_release();
  sub_100023DA0(v19, v21, v23);
  swift_bridgeObjectRelease();
  sub_100023DA0(v43, v42, v18);
  swift_bridgeObjectRelease();
  uint64_t v54 = (void *)v24;
  uint64_t v55 = (void *)v26;
  char v56 = a1 & 1;
  uint64_t v57 = v29;
  uint64_t v30 = v45;
  sub_1000833C0();
  sub_100023DA0(v24, v26, a1 & 1);
  swift_bridgeObjectRelease();
  uint64_t v54 = &type metadata for Text;
  uint64_t v55 = &protocol witness table for Text;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  char v32 = v46;
  char v33 = (void *)v49;
  sub_100083450();
  (*(void (**)(char *, void *))(v50 + 8))(v30, v33);
  uint64_t v54 = v33;
  uint64_t v55 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = (uint64_t)v47;
  uint64_t v35 = v51;
  sub_100083420();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v35);
  uint64_t v36 = v48;
  sub_100019284(v34, v48, &qword_1000A9D70);
  sub_10001A720(v36, v34, &qword_1000A9D70);
  uint64_t v37 = v34;
  uint64_t v38 = v34;
  uint64_t v39 = v53;
  sub_10001A720(v37, v53, &qword_1000A9D70);
  uint64_t v40 = v39 + *(int *)(sub_100002874(&qword_1000A9D78) + 48);
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 1;
  sub_100019138(v36, &qword_1000A9D70);
  return sub_100019138(v38, &qword_1000A9D70);
}

uint64_t sub_1000560DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10005795C(1, &qword_1000A9D38, (uint64_t (*)(uint64_t))sub_100055708, a1);
}

uint64_t sub_100056100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A9D40);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v8 = sub_100002874(&qword_1000A9D48);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v46 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_100082F80();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  char v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = sub_100002874(&qword_1000A9DA0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  char v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v43 - v24;
  uint64_t v26 = a1 + *(int *)(type metadata accessor for SuggestedDestinationMediumLargePlatterContent(0) + 24);
  char v27 = *(void **)(v26 + 56);
  if (v27 == (void *)1) {
    goto LABEL_6;
  }
  uint64_t v45 = v12;
  uint64_t v44 = *(void **)(v26 + 64);
  sub_1000681A4((uint64_t)v19);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  if (v28 == enum case for ColorScheme.light(_:) || (char v27 = v44, v28 == enum case for ColorScheme.dark(_:)))
  {
    uint64_t v29 = *(void (**)(char *, uint64_t))(v14 + 8);
    id v30 = v27;
    v29(v19, v13);
    uint64_t v12 = v45;
    if (v27)
    {
      *(void *)uint64_t v25 = sub_100083130();
      *((void *)v25 + 1) = 0;
      v25[16] = 1;
      uint64_t v31 = sub_100002874(&qword_1000A9DB8);
      sub_100056638(v30, a1, (uint64_t)&v25[*(int *)(v31 + 44)]);

      uint64_t v32 = sub_100002874(&qword_1000A9DA8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v25, 0, 1, v32);
LABEL_7:
      *(void *)uint64_t v12 = sub_100083130();
      *((void *)v12 + 1) = 0;
      v12[16] = 1;
      uint64_t v34 = sub_100002874(&qword_1000A9D50);
      sub_100057138(a1, (uint64_t)&v12[*(int *)(v34 + 44)]);
      *(void *)uint64_t v7 = sub_100083130();
      *((void *)v7 + 1) = 0;
      v7[16] = 1;
      uint64_t v35 = sub_100002874(&qword_1000A9D58);
      sub_1000574E8(a1, (uint64_t)&v7[*(int *)(v35 + 44)]);
      sub_10001A720((uint64_t)v25, (uint64_t)v23, &qword_1000A9DA0);
      uint64_t v36 = (uint64_t)v25;
      uint64_t v37 = (uint64_t)v23;
      uint64_t v38 = v46;
      sub_10001A720((uint64_t)v12, v46, &qword_1000A9D48);
      uint64_t v39 = v48;
      sub_10001A720((uint64_t)v7, v48, &qword_1000A9D40);
      uint64_t v40 = v47;
      sub_10001A720(v37, v47, &qword_1000A9DA0);
      uint64_t v41 = sub_100002874(&qword_1000A9DB0);
      sub_10001A720(v38, v40 + *(int *)(v41 + 48), &qword_1000A9D48);
      sub_10001A720(v39, v40 + *(int *)(v41 + 64), &qword_1000A9D40);
      sub_100019138((uint64_t)v7, &qword_1000A9D40);
      sub_100019138((uint64_t)v12, &qword_1000A9D48);
      sub_100019138(v36, &qword_1000A9DA0);
      sub_100019138(v39, &qword_1000A9D40);
      sub_100019138(v38, &qword_1000A9D48);
      return sub_100019138(v37, &qword_1000A9DA0);
    }
LABEL_6:
    uint64_t v33 = sub_100002874(&qword_1000A9DA8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v25, 1, 1, v33);
    goto LABEL_7;
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

uint64_t sub_100056638@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v99 = a3;
  uint64_t v98 = sub_100002874(&qword_1000A9DC0);
  __chkstk_darwin(v98);
  uint64_t v82 = (uint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100002874(&qword_1000A9DC8);
  __chkstk_darwin(v94);
  uint64_t v97 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100002874(&qword_1000A9DD0);
  __chkstk_darwin(v78);
  uint64_t v80 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100002874(&qword_1000A9DD8);
  uint64_t v7 = __chkstk_darwin(v96);
  uint64_t v79 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v81 = (uint64_t)&v77 - v9;
  uint64_t v90 = sub_100083040();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v10 = __chkstk_darwin(v90);
  uint64_t v89 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v88 = (uint64_t)&v77 - v12;
  uint64_t v13 = sub_100002874(&qword_1000A9DE0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v95 = (uint64_t)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v77 - v16;
  uint64_t v17 = sub_100002874(&qword_1000A86E8);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100083520();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100002874(&qword_1000A86F8);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v25 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100002874(&qword_1000A8700);
  __chkstk_darwin(v83);
  char v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100002874(&qword_1000A9DE8);
  uint64_t v87 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v29 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100002874(&qword_1000A9DF0);
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)&v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = a1;
  sub_100083500();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for Image.ResizingMode.stretch(_:), v20);
  sub_100083560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_100083700();
  uint64_t v34 = sub_100083720();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v19, 0, 1, v34);
  sub_100083550();
  uint64_t v35 = (uint64_t)v32;
  swift_release();
  sub_100019138((uint64_t)v19, &qword_1000A86E8);
  sub_1000835D0();
  sub_100082FB0();
  uint64_t v36 = v84;
  uint64_t v37 = v85;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v27, v25, v85);
  uint64_t v38 = v83;
  uint64_t v39 = &v27[*(int *)(v83 + 36)];
  long long v40 = v103;
  *(_OWORD *)uint64_t v39 = v102;
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v104;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v37);
  unint64_t v41 = sub_100023E18();
  sub_100083450();
  sub_100019138((uint64_t)v27, &qword_1000A8700);
  uint64_t v100 = v38;
  unint64_t v101 = v41;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v86;
  sub_100083420();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v29, v42);
  type metadata accessor for SuggestedDestinationMediumLargePlatterContent(0);
  uint64_t v43 = v88;
  sub_10006854C(v88);
  uint64_t v44 = v89;
  sub_100083030();
  sub_100057B5C(&qword_1000A8910, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  uint64_t v45 = v90;
  LOBYTE(v29) = sub_100083A30();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v91 + 8);
  v46(v44, v45);
  v46((char *)v43, v45);
  if (v29)
  {
    uint64_t v47 = v80;
    sub_10001A720(v35, v80, &qword_1000A9DF0);
    *(_WORD *)(v47 + *(int *)(v78 + 36)) = 256;
    char v48 = sub_100083310();
    sub_100082F60();
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v57 = v79;
    sub_10001A720(v47, v79, &qword_1000A9DD0);
    uint64_t v58 = v57 + *(int *)(v96 + 36);
    *(unsigned char *)uint64_t v58 = v48;
    *(void *)(v58 + 8) = v50;
    *(void *)(v58 + 16) = v52;
    *(void *)(v58 + 24) = v54;
    *(void *)(v58 + 32) = v56;
    *(unsigned char *)(v58 + 40) = 0;
    sub_100019138(v47, &qword_1000A9DD0);
    int v59 = &qword_1000A9DD8;
    uint64_t v60 = v81;
    sub_100019284(v57, v81, &qword_1000A9DD8);
    sub_10001A720(v60, v97, &qword_1000A9DD8);
  }
  else
  {
    char v62 = sub_100083310();
    sub_100082F60();
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v60 = v82;
    sub_10001A720(v35, v82, &qword_1000A9DF0);
    uint64_t v71 = v97;
    uint64_t v72 = v60 + *(int *)(v98 + 36);
    *(unsigned char *)uint64_t v72 = v62;
    *(void *)(v72 + 8) = v64;
    *(void *)(v72 + 16) = v66;
    *(void *)(v72 + 24) = v68;
    *(void *)(v72 + 32) = v70;
    *(unsigned char *)(v72 + 40) = 0;
    int v59 = &qword_1000A9DC0;
    sub_10001A720(v60, v71, &qword_1000A9DC0);
  }
  swift_storeEnumTagMultiPayload();
  sub_100057BA4(&qword_1000A9DF8, &qword_1000A9DD8, (void (*)(void))sub_1000579DC);
  sub_100057BA4(&qword_1000A9E20, &qword_1000A9DC0, (void (*)(void))sub_100057A7C);
  uint64_t v61 = (uint64_t)v93;
  sub_100083230();
  sub_100019138(v60, v59);
  uint64_t v73 = v95;
  sub_10001A720(v61, v95, &qword_1000A9DE0);
  uint64_t v74 = v99;
  sub_10001A720(v73, v99, &qword_1000A9DE0);
  uint64_t v75 = v74 + *(int *)(sub_100002874(&qword_1000A9E28) + 48);
  *(void *)uint64_t v75 = 0;
  *(unsigned char *)(v75 + 8) = 1;
  sub_100019138(v61, &qword_1000A9DE0);
  sub_100019138(v35, &qword_1000A9DF0);
  return sub_100019138(v73, &qword_1000A9DE0);
}

uint64_t sub_100057138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A9D80);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  uint64_t v48 = v4;
  __chkstk_darwin(v3);
  uint64_t v45 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100002874(&qword_1000A9D88);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v46 = &v40[-v10];
  uint64_t v11 = a1 + *(int *)(type metadata accessor for SuggestedDestinationMediumLargePlatterContent(0) + 24);
  uint64_t v12 = *(void **)(v11 + 8);
  uint64_t v50 = *(void **)v11;
  uint64_t v51 = v12;
  sub_100023C14();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000833B0();
  uint64_t v42 = v14;
  uint64_t v43 = v13;
  uint64_t v44 = v15;
  int v41 = v16 & 1;
  LODWORD(v50) = sub_1000832A0();
  uint64_t v17 = sub_100083380();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_100083320();
  uint64_t v22 = sub_100083390();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  sub_100023DA0(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_100083330();
  uint64_t v27 = sub_100083370();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  sub_100023DA0(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  sub_100023DA0(v43, v42, v41);
  swift_bridgeObjectRelease();
  uint64_t v50 = (void *)v27;
  uint64_t v51 = (void *)v29;
  char v52 = v33;
  uint64_t v53 = v31;
  uint64_t v34 = v45;
  sub_100083450();
  sub_100023DA0(v27, v29, v33);
  swift_bridgeObjectRelease();
  uint64_t v50 = &type metadata for Text;
  uint64_t v51 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v47;
  sub_100083420();
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v34, v35);
  uint64_t v36 = v46;
  sub_100019284((uint64_t)v9, (uint64_t)v46, &qword_1000A9D88);
  sub_10001A720((uint64_t)v36, (uint64_t)v9, &qword_1000A9D88);
  uint64_t v37 = v49;
  sub_10001A720((uint64_t)v9, v49, &qword_1000A9D88);
  uint64_t v38 = v37 + *(int *)(sub_100002874(&qword_1000A9D90) + 48);
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 1;
  sub_100019138((uint64_t)v36, &qword_1000A9D88);
  return sub_100019138((uint64_t)v9, &qword_1000A9D88);
}

uint64_t sub_1000574E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = sub_100002874(&qword_1000A9498);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  uint64_t v51 = v4;
  __chkstk_darwin(v3);
  uint64_t v46 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100002874(&qword_1000A9D68);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  uint64_t v53 = v7;
  __chkstk_darwin(v6);
  uint64_t v47 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002874(&qword_1000A9D70);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v48 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v49 = (uint64_t)&v43 - v12;
  uint64_t v13 = a1 + *(int *)(type metadata accessor for SuggestedDestinationMediumLargePlatterContent(0) + 24);
  uint64_t v14 = *(void **)(v13 + 24);
  uint64_t v55 = *(void **)(v13 + 16);
  uint64_t v56 = v14;
  sub_100023C14();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000833B0();
  uint64_t v43 = v16;
  uint64_t v44 = v15;
  uint64_t v45 = v17;
  char v19 = v18 & 1;
  LODWORD(v55) = sub_1000832B0();
  uint64_t v20 = sub_100083380();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_100083340();
  uint64_t v25 = sub_100083390();
  uint64_t v27 = v26;
  LOBYTE(a1) = v28;
  uint64_t v30 = v29;
  swift_release();
  sub_100023DA0(v20, v22, v24);
  swift_bridgeObjectRelease();
  sub_100023DA0(v44, v43, v19);
  swift_bridgeObjectRelease();
  uint64_t v55 = (void *)v25;
  uint64_t v56 = (void *)v27;
  char v57 = a1 & 1;
  uint64_t v58 = v30;
  uint64_t v31 = v46;
  sub_1000833C0();
  sub_100023DA0(v25, v27, a1 & 1);
  swift_bridgeObjectRelease();
  uint64_t v55 = &type metadata for Text;
  uint64_t v56 = &protocol witness table for Text;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  char v33 = v47;
  uint64_t v34 = (void *)v50;
  sub_100083450();
  (*(void (**)(char *, void *))(v51 + 8))(v31, v34);
  uint64_t v55 = v34;
  uint64_t v56 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = (uint64_t)v48;
  uint64_t v36 = v52;
  sub_100083420();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v36);
  uint64_t v37 = v49;
  sub_100019284(v35, v49, &qword_1000A9D70);
  sub_10001A720(v37, v35, &qword_1000A9D70);
  uint64_t v38 = v35;
  uint64_t v39 = v35;
  uint64_t v40 = v54;
  sub_10001A720(v38, v54, &qword_1000A9D70);
  uint64_t v41 = v40 + *(int *)(sub_100002874(&qword_1000A9D78) + 48);
  *(void *)uint64_t v41 = 0;
  *(unsigned char *)(v41 + 8) = 1;
  sub_100019138(v37, &qword_1000A9D70);
  return sub_100019138(v39, &qword_1000A9D70);
}

uint64_t sub_100057938@<X0>(uint64_t a1@<X8>)
{
  return sub_10005795C(0, &qword_1000A9D98, (uint64_t (*)(uint64_t))sub_100056100, a1);
}

uint64_t sub_10005795C@<X0>(char a1@<W2>, uint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  *(void *)a4 = sub_1000831C0();
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = a1;
  sub_100002874(a2);
  return a3(v4);
}

uint64_t sub_1000579C0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000579DC()
{
  unint64_t result = qword_1000A9E00;
  if (!qword_1000A9E00)
  {
    sub_1000028B8(&qword_1000A9DD0);
    sub_100057A7C();
    sub_100023D5C(&qword_1000A9E10, &qword_1000A9E18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9E00);
  }
  return result;
}

unint64_t sub_100057A7C()
{
  unint64_t result = qword_1000A9E08;
  if (!qword_1000A9E08)
  {
    sub_1000028B8(&qword_1000A9DF0);
    sub_1000028B8(&qword_1000A8700);
    sub_100023E18();
    swift_getOpaqueTypeConformance2();
    sub_100057B5C(&qword_1000A86E0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9E08);
  }
  return result;
}

uint64_t sub_100057B5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100057BA4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100057C24()
{
  return sub_100023D5C(&qword_1000A9E30, &qword_1000A9E38);
}

uint64_t sub_100057C60()
{
  return sub_100023D5C(&qword_1000A9E40, &qword_1000A9E48);
}

id sub_100057C9C()
{
  type metadata accessor for StringUtils();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [self bundleForClass:ObjCClassFromMetadata];
  qword_1000ACBD0 = (uint64_t)result;
  return result;
}

uint64_t sub_100057CF0()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for StringUtils()
{
  return self;
}

uint64_t sub_100057D24(uint64_t a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      if (qword_1000A7A10 != -1) {
        swift_once();
      }
      v5.super.Class isa = (Class)qword_1000ACBD0;
      v6._countAndFlagsBits = 0xD000000000000012;
      v11._countAndFlagsBits = 0x80000001000960C0;
      v6._object = (void *)0x80000001000960A0;
      v7.value._countAndFlagsBits = 0;
      v7.value._object = 0;
      v8._countAndFlagsBits = 0x6576697264204025;
      v8._object = (void *)0xE800000000000000;
      break;
    case 1:
      if (qword_1000A7A10 != -1) {
        swift_once();
      }
      v5.super.Class isa = (Class)qword_1000ACBD0;
      v6._countAndFlagsBits = 0xD000000000000012;
      v11._countAndFlagsBits = 0x8000000100096060;
      v6._object = (void *)0x8000000100096040;
      v7.value._countAndFlagsBits = 0;
      v7.value._object = 0;
      v8._countAndFlagsBits = 0x7274207962204025;
      v8._object = (void *)0xED00007469736E61;
      break;
    case 2:
      if (qword_1000A7A10 != -1) {
        swift_once();
      }
      v5.super.Class isa = (Class)qword_1000ACBD0;
      v6._countAndFlagsBits = 0xD000000000000012;
      v11._countAndFlagsBits = 0x8000000100096000;
      v6._object = (void *)0x8000000100095FE0;
      v7.value._countAndFlagsBits = 0;
      v7.value._object = 0;
      v8._countAndFlagsBits = 0x6B6C6177204025;
      goto LABEL_17;
    case 3:
      if (qword_1000A7A10 != -1) {
        swift_once();
      }
      v5.super.Class isa = (Class)qword_1000ACBD0;
      v6._countAndFlagsBits = 0xD000000000000012;
      v11._countAndFlagsBits = 0x8000000100095FA0;
      v6._object = (void *)0x8000000100095F80;
      v7.value._countAndFlagsBits = 0;
      v7.value._object = 0;
      v8._countAndFlagsBits = 0x65646972204025;
LABEL_17:
      v8._object = (void *)0xE700000000000000;
      break;
    default:
      if (qword_1000A7A10 != -1) {
        swift_once();
      }
      v5.super.Class isa = (Class)qword_1000ACBD0;
      v6._countAndFlagsBits = 0xD00000000000001BLL;
      v11._countAndFlagsBits = 0x8000000100095F40;
      v6._object = (void *)0x8000000100095F20;
      v7.value._countAndFlagsBits = 0;
      v7.value._object = 0;
      v8._countAndFlagsBits = 16421;
      v8._object = (void *)0xE200000000000000;
      break;
  }
  sub_100082D70(v6, v7, v5, v8, v11);
  if (a2)
  {
    sub_100002874(&qword_1000A9EE8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100087780;
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 64) = sub_1000580BC();
    *(void *)(v9 + 32) = a1;
    *(void *)(v9 + 40) = a2;
    swift_bridgeObjectRetain();
    a2 = sub_100083860();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return a2;
}

unint64_t sub_1000580BC()
{
  unint64_t result = qword_1000A9EF0;
  if (!qword_1000A9EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A9EF0);
  }
  return result;
}

uint64_t sub_100058110()
{
  return sub_100083870();
}

uint64_t *sub_10005813C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000837F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    Swift::String v11 = *(void **)((char *)a2 + v8);
    if (v11 == (void *)1)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = (void *)*((void *)v10 + 1);
      *(void *)uint64_t v9 = v11;
      *((void *)v9 + 1) = v13;
      id v14 = v11;
      id v15 = v13;
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    char v18 = (char *)a1 + v16;
    char v19 = (char *)a2 + v16;
    *(_OWORD *)char v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    uint64_t v20 = (char *)a1 + v17;
    uint64_t v21 = (char *)a2 + v17;
    uint64_t v22 = sub_100082D90();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_100002874(&qword_1000A7A68);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t sub_100058328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (id *)(a1 + *(int *)(a2 + 20));
  if (*v5 != (id)1)
  {
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_100082D90();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t sub_100058468(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a2 + v7);
  if (v10 == (void *)1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    Swift::String v11 = *(void **)(v9 + 8);
    *(void *)uint64_t v8 = v10;
    *(void *)(v8 + 8) = v11;
    id v12 = v10;
    id v13 = v11;
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  char v18 = (void *)(a1 + v15);
  char v19 = (const void *)(a2 + v15);
  uint64_t v20 = sub_100082D90();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100002874(&qword_1000A7A68);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_100058604(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a1 + v7);
  Swift::String v11 = *(void **)(a2 + v7);
  if (v10 == (void *)1)
  {
    if (v11 != (void *)1)
    {
      void *v8 = v11;
      id v12 = *(void **)(v9 + 8);
      v8[1] = v12;
      id v13 = v11;
      id v14 = v12;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v11 == (void *)1)
  {
    sub_10001B23C((uint64_t)v8);
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  void *v8 = v11;
  id v15 = v11;

  uint64_t v16 = (void *)v8[1];
  uint64_t v17 = *(void **)(v9 + 8);
  v8[1] = v17;
  id v18 = v17;

LABEL_8:
  uint64_t v19 = a3[6];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (long long *)(a2 + v19);
  long long v22 = *v21;
  *(unsigned char *)(v20 + 16) = *((unsigned char *)v21 + 16);
  *(_OWORD *)uint64_t v20 = v22;
  uint64_t v23 = a3[7];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_100082D90();
  uint64_t v27 = *(void *)(v26 - 8);
  char v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_13;
  }
  if (v30)
  {
LABEL_13:
    uint64_t v31 = sub_100002874(&qword_1000A7A68);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_10005884C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  uint64_t v10 = a3[7];
  Swift::String v11 = (void *)(a1 + v10);
  id v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_100082D90();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100002874(&qword_1000A7A68);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_1000589C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a1 + v7);
  if (v10 == (void *)1) {
    goto LABEL_4;
  }
  if (*(void *)v9 == 1)
  {
    sub_10001B23C(v8);
LABEL_4:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  *(void *)uint64_t v8 = *(void *)v9;

  Swift::String v11 = *(void **)(v8 + 8);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);

LABEL_6:
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  uint64_t v16 = (void *)(a1 + v13);
  uint64_t v17 = (void *)(a2 + v13);
  uint64_t v18 = sub_100082D90();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_11;
  }
  if (v22)
  {
LABEL_11:
    uint64_t v23 = sub_100002874(&qword_1000A7A68);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_100058BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100058BF0);
}

uint64_t sub_100058BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000837F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483645)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 - 1) & ~(((int)v10 - 1) >> 31);
  }
  else
  {
    uint64_t v11 = sub_100002874(&qword_1000A7A68);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100058D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100058D3C);
}

uint64_t sub_100058D3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000837F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483645)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 + 1);
  }
  else
  {
    uint64_t v11 = sub_100002874(&qword_1000A7A68);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000A9F50);
}

void sub_100058E90()
{
  sub_1000837F0();
  if (v0 <= 0x3F)
  {
    sub_10005A670(319, (unint64_t *)&unk_1000A9F60, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100058F88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = a2 + 7;
    unint64_t v10 = (void *)a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 == (void *)1)
    {
      *(_OWORD *)(a1 + 56) = *v11;
    }
    else
    {
      uint64_t v13 = (void *)a2[8];
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v13;
      id v14 = v10;
      id v15 = v13;
    }
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    *(unsigned char *)(a1 + 76) = *((unsigned char *)a2 + 76);
    uint64_t v16 = *(int *)(a3 + 40);
    uint64_t v17 = (char *)(a1 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100002874(&qword_1000A7A70);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
      uint64_t v23 = v19[5];
      uint64_t v24 = &v17[v23];
      uint64_t v25 = &v18[v23];
      uint64_t v26 = *(void **)&v18[v23];
      if (v26 == (void *)1)
      {
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      }
      else
      {
        uint64_t v27 = (void *)*((void *)v25 + 1);
        *(void *)uint64_t v24 = v26;
        *((void *)v24 + 1) = v27;
        id v28 = v26;
        id v29 = v27;
      }
      uint64_t v30 = v19[6];
      uint64_t v31 = &v17[v30];
      char v32 = &v18[v30];
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      v31[16] = v32[16];
      uint64_t v33 = v19[7];
      uint64_t v34 = &v17[v33];
      uint64_t v35 = &v18[v33];
      uint64_t v36 = sub_100082D90();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = sub_100002874(&qword_1000A7A68);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_1000592A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 56);
  if (v4 != (void *)1)
  {
  }
  uint64_t v5 = a1 + *(int *)(a2 + 40);
  uint64_t v6 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
    uint64_t v9 = (id *)(v5 + *(int *)(v6 + 20));
    if (*v9 != (id)1)
    {
    }
    uint64_t v10 = v5 + *(int *)(v6 + 28);
    uint64_t v11 = sub_100082D90();
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      return v12(v10, v11);
    }
  }
  return result;
}

uint64_t sub_100059458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = (_OWORD *)(a2 + 56);
  uint64_t v9 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == (void *)1)
  {
    *(_OWORD *)(a1 + 56) = *v10;
  }
  else
  {
    uint64_t v11 = *(void **)(a2 + 64);
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v11;
    id v12 = v9;
    id v13 = v11;
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v14 = *(int *)(a3 + 40);
  id v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100002874(&qword_1000A7A70);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
    uint64_t v21 = v17[5];
    uint64_t v22 = &v15[v21];
    uint64_t v23 = &v16[v21];
    uint64_t v24 = *(void **)&v16[v21];
    if (v24 == (void *)1)
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
    else
    {
      uint64_t v25 = (void *)*((void *)v23 + 1);
      *(void *)uint64_t v22 = v24;
      *((void *)v22 + 1) = v25;
      id v26 = v24;
      id v27 = v25;
    }
    uint64_t v28 = v17[6];
    id v29 = &v15[v28];
    uint64_t v30 = &v16[v28];
    *(_OWORD *)id v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    uint64_t v31 = v17[7];
    char v32 = &v15[v31];
    uint64_t v33 = &v16[v31];
    uint64_t v34 = sub_100082D90();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = sub_100002874(&qword_1000A7A68);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_100059724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void **)(a2 + 56);
  if (v6 == (void *)1)
  {
    if (v8 != (void *)1)
    {
      *(void *)(a1 + 56) = v8;
      uint64_t v9 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v9;
      id v10 = v8;
      id v11 = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 == (void *)1)
  {
    sub_10001B23C(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(void *)(a1 + 56) = v8;
  id v12 = v8;

  id v13 = *(void **)(a1 + 64);
  uint64_t v14 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v14;
  id v15 = v14;

LABEL_8:
  int v16 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v16;
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (char *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22((uint64_t)v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_10005E7C0(v18, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
      goto LABEL_14;
    }
    uint64_t v33 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v18, v19, v33);
    uint64_t v34 = v20[5];
    uint64_t v35 = (void *)(v18 + v34);
    uint64_t v36 = &v19[v34];
    uint64_t v37 = *(void **)(v18 + v34);
    uint64_t v38 = *(void **)&v19[v34];
    if (v37 == (void *)1)
    {
      if (v38 != (void *)1)
      {
        void *v35 = v38;
        uint64_t v39 = (void *)*((void *)v36 + 1);
        v35[1] = v39;
        id v40 = v38;
        id v41 = v39;
LABEL_29:
        uint64_t v60 = v20[6];
        uint64_t v61 = v18 + v60;
        char v62 = &v19[v60];
        long long v63 = *(_OWORD *)v62;
        *(unsigned char *)(v61 + 16) = v62[16];
        *(_OWORD *)uint64_t v61 = v63;
        uint64_t v64 = v20[7];
        uint64_t v65 = (void *)(v18 + v64);
        uint64_t v66 = &v19[v64];
        uint64_t v67 = sub_100082D90();
        uint64_t v68 = *(void *)(v67 - 8);
        uint64_t v69 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v68 + 48);
        int v70 = v69(v65, 1, v67);
        int v71 = v69(v66, 1, v67);
        if (v70)
        {
          if (!v71)
          {
            (*(void (**)(void *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
            return a1;
          }
        }
        else
        {
          if (!v71)
          {
            (*(void (**)(void *, char *, uint64_t))(v68 + 24))(v65, v66, v67);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v68 + 8))(v65, v67);
        }
        size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
        uint64_t v31 = v65;
        char v32 = v66;
        goto LABEL_15;
      }
    }
    else
    {
      if (v38 != (void *)1)
      {
        void *v35 = v38;
        id v56 = v38;

        char v57 = (void *)v35[1];
        uint64_t v58 = (void *)*((void *)v36 + 1);
        v35[1] = v58;
        id v59 = v58;

        goto LABEL_29;
      }
      sub_10001B23C((uint64_t)v35);
    }
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_29;
  }
  if (v24)
  {
LABEL_14:
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v31 = (void *)v18;
    char v32 = v19;
LABEL_15:
    memcpy(v31, v32, v30);
    return a1;
  }
  uint64_t v25 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v18, v19, v25);
  uint64_t v26 = v20[5];
  uint64_t v27 = v18 + v26;
  uint64_t v28 = &v19[v26];
  id v29 = *(void **)&v19[v26];
  if (v29 == (void *)1)
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  else
  {
    *(void *)uint64_t v27 = v29;
    uint64_t v42 = (void *)*((void *)v28 + 1);
    *(void *)(v27 + 8) = v42;
    id v43 = v29;
    id v44 = v42;
  }
  uint64_t v45 = v20[6];
  uint64_t v46 = v18 + v45;
  uint64_t v47 = &v19[v45];
  long long v48 = *(_OWORD *)v47;
  *(unsigned char *)(v46 + 16) = v47[16];
  *(_OWORD *)uint64_t v46 = v48;
  uint64_t v49 = v20[7];
  uint64_t v50 = (void *)(v18 + v49);
  uint64_t v51 = &v19[v49];
  uint64_t v52 = sub_100082D90();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    uint64_t v54 = sub_100002874(&qword_1000A7A68);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_100059CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)(a2 + v6);
  uint64_t v8 = (char *)(a1 + v6);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v9 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v7, 1, v9))
  {
    uint64_t v11 = sub_100002874(&qword_1000A7A70);
    memcpy(v8, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v7, v12);
    *(_OWORD *)&v8[v9[5]] = *(_OWORD *)&v7[v9[5]];
    uint64_t v13 = v9[6];
    uint64_t v14 = &v8[v13];
    id v15 = &v7[v13];
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    v14[16] = v15[16];
    uint64_t v16 = v9[7];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v7[v16];
    uint64_t v19 = sub_100082D90();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100002874(&qword_1000A7A68);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_100059F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void **)(a1 + 56);
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (v9 == (void *)1) {
    goto LABEL_4;
  }
  if (v8 == 1)
  {
    sub_10001B23C(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = v8;

  uint64_t v11 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

LABEL_6:
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (char *)(a2 + v12);
  id v15 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17((uint64_t)v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_10005E7C0(v13, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
      goto LABEL_12;
    }
    uint64_t v33 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v13, v14, v33);
    uint64_t v34 = v15[5];
    uint64_t v35 = (void *)(v13 + v34);
    uint64_t v36 = &v14[v34];
    uint64_t v37 = *(void **)(v13 + v34);
    if (v37 != (void *)1)
    {
      if (*(void *)v36 != 1)
      {
        void *v35 = *(void *)v36;

        uint64_t v39 = (void *)v35[1];
        v35[1] = *((void *)v36 + 1);

        goto LABEL_22;
      }
      sub_10001B23C((uint64_t)v35);
    }
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
LABEL_22:
    uint64_t v40 = v15[6];
    uint64_t v41 = v13 + v40;
    uint64_t v42 = &v14[v40];
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *(unsigned char *)(v41 + 16) = v42[16];
    uint64_t v43 = v15[7];
    id v44 = (void *)(v13 + v43);
    uint64_t v45 = &v14[v43];
    uint64_t v46 = sub_100082D90();
    uint64_t v47 = *(void *)(v46 - 8);
    long long v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
    int v49 = v48(v44, 1, v46);
    int v50 = v48(v45, 1, v46);
    if (v49)
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        return a1;
      }
    }
    else
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v47 + 40))(v44, v45, v46);
        return a1;
      }
      (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
    }
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
    uint64_t v31 = v44;
    char v32 = v45;
    goto LABEL_13;
  }
  if (v19)
  {
LABEL_12:
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v31 = (void *)v13;
    char v32 = v14;
LABEL_13:
    memcpy(v31, v32, v30);
    return a1;
  }
  uint64_t v20 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v13, v14, v20);
  *(_OWORD *)(v13 + v15[5]) = *(_OWORD *)&v14[v15[5]];
  uint64_t v21 = v15[6];
  uint64_t v22 = v13 + v21;
  int v23 = &v14[v21];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = v23[16];
  uint64_t v24 = v15[7];
  uint64_t v25 = (void *)(v13 + v24);
  uint64_t v26 = &v14[v24];
  uint64_t v27 = sub_100082D90();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_100002874(&qword_1000A7A68);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_10005A3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005A3FC);
}

uint64_t sub_10005A3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100002874(&qword_1000A7A70);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10005A4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005A4C4);
}

uint64_t sub_10005A4C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100002874(&qword_1000A7A70);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SuggestedDestinationEntryContent(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000A9FF0);
}

void sub_10005A590()
{
  sub_10005A670(319, (unint64_t *)&unk_1000AA000, (void (*)(uint64_t))type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10005A670(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000839F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

_UNKNOWN **sub_10005A6C4()
{
  return &off_10009ED30;
}

id sub_10005A6D0(uint64_t a1)
{
  unint64_t v2 = (id *)(v1 + *(int *)(a1 + 20));
  id v3 = *v2;
  sub_10005A738(*v2, v2[1]);
  return v3;
}

uint64_t sub_10005A70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001A720(v2 + *(int *)(a1 + 40), a2, &qword_1000A7A70);
}

id sub_10005A738(id result, void *a2)
{
  if (result != (id)1)
  {
    id v4 = result;
    id v3 = a2;
    return v4;
  }
  return result;
}

uint64_t sub_10005A77C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = a2 + 7;
    uint64_t v10 = (void *)a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 == (void *)1)
    {
      *(_OWORD *)(a1 + 56) = *v11;
    }
    else
    {
      uint64_t v13 = (void *)a2[8];
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v13;
      id v14 = v10;
      id v15 = v13;
    }
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    *(unsigned char *)(a1 + 76) = *((unsigned char *)a2 + 76);
    uint64_t v16 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
    uint64_t v17 = (char *)(a1 + v16);
    int v18 = (char *)a2 + v16;
    int v19 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    uint64_t v20 = *((void *)v19 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100002874(&qword_1000A7A70);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
      uint64_t v23 = v19[5];
      uint64_t v24 = &v17[v23];
      uint64_t v25 = &v18[v23];
      uint64_t v26 = *(void **)&v18[v23];
      if (v26 == (void *)1)
      {
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      }
      else
      {
        uint64_t v27 = (void *)*((void *)v25 + 1);
        *(void *)uint64_t v24 = v26;
        *((void *)v24 + 1) = v27;
        id v28 = v26;
        id v29 = v27;
      }
      uint64_t v30 = v19[6];
      uint64_t v31 = &v17[v30];
      char v32 = &v18[v30];
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      v31[16] = v32[16];
      uint64_t v33 = v19[7];
      uint64_t v34 = &v17[v33];
      uint64_t v35 = &v18[v33];
      uint64_t v36 = sub_100082D90();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = sub_100002874(&qword_1000A7A68);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v39 = a3[5];
    uint64_t v40 = a3[6];
    uint64_t v41 = *(void **)((char *)a2 + v39);
    *(void *)(a1 + v39) = v41;
    uint64_t v42 = *(void **)((char *)a2 + v40);
    *(void *)(a1 + v40) = v42;
    uint64_t v43 = a3[7];
    uint64_t v44 = a3[8];
    uint64_t v45 = *(void **)((char *)a2 + v43);
    *(void *)(a1 + v43) = v45;
    uint64_t v46 = *(void **)((char *)a2 + v44);
    *(void *)(a1 + v44) = v46;
    uint64_t v47 = a3[9];
    __dst = (void *)(a1 + v47);
    long long v48 = (char *)a2 + v47;
    uint64_t v49 = sub_100082E70();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    id v52 = v41;
    id v53 = v42;
    id v54 = v45;
    id v55 = v46;
    if (v51(v48, 1, v49))
    {
      uint64_t v56 = sub_100002874(&qword_1000A8D20);
      memcpy(__dst, v48, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v50 + 16))(__dst, v48, v49);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v49);
    }
  }
  return a1;
}

uint64_t sub_10005ABC8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 56);
  if (v4 != (void *)1)
  {
  }
  uint64_t v5 = a1 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v6 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    uint64_t v8 = (id *)(v5 + *(int *)(v6 + 20));
    if (*v8 != (id)1)
    {
    }
    uint64_t v9 = v5 + *(int *)(v6 + 28);
    uint64_t v10 = sub_100082D90();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
  }

  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = sub_100082E70();
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v13);
  if (!result)
  {
    id v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
    return v15(v12, v13);
  }
  return result;
}

uint64_t sub_10005AE3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = (_OWORD *)(a2 + 56);
  uint64_t v9 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == (void *)1)
  {
    *(_OWORD *)(a1 + 56) = *v10;
  }
  else
  {
    uint64_t v11 = *(void **)(a2 + 64);
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v11;
    id v12 = v9;
    id v13 = v11;
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v14 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  id v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100002874(&qword_1000A7A70);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
    uint64_t v21 = v17[5];
    uint64_t v22 = &v15[v21];
    uint64_t v23 = &v16[v21];
    uint64_t v24 = *(void **)&v16[v21];
    if (v24 == (void *)1)
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
    else
    {
      uint64_t v25 = (void *)*((void *)v23 + 1);
      *(void *)uint64_t v22 = v24;
      *((void *)v22 + 1) = v25;
      id v26 = v24;
      id v27 = v25;
    }
    uint64_t v28 = v17[6];
    id v29 = &v15[v28];
    uint64_t v30 = &v16[v28];
    *(_OWORD *)id v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    uint64_t v31 = v17[7];
    char v32 = &v15[v31];
    uint64_t v33 = &v16[v31];
    uint64_t v34 = sub_100082D90();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = sub_100002874(&qword_1000A7A68);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v37 = a3[5];
  uint64_t v38 = a3[6];
  uint64_t v39 = *(void **)(a2 + v37);
  *(void *)(a1 + v37) = v39;
  uint64_t v40 = *(void **)(a2 + v38);
  *(void *)(a1 + v38) = v40;
  uint64_t v41 = a3[7];
  uint64_t v42 = a3[8];
  uint64_t v43 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v43;
  uint64_t v44 = *(void **)(a2 + v42);
  *(void *)(a1 + v42) = v44;
  uint64_t v45 = a3[9];
  __dst = (void *)(a1 + v45);
  uint64_t v46 = (const void *)(a2 + v45);
  uint64_t v47 = sub_100082E70();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48);
  id v50 = v39;
  id v51 = v40;
  id v52 = v43;
  id v53 = v44;
  if (v49(v46, 1, v47))
  {
    uint64_t v54 = sub_100002874(&qword_1000A8D20);
    memcpy(__dst, v46, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(__dst, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
  }
  return a1;
}

uint64_t sub_10005B238(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void **)(a2 + 56);
  if (v6 == (void *)1)
  {
    if (v8 != (void *)1)
    {
      *(void *)(a1 + 56) = v8;
      uint64_t v9 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v9;
      id v10 = v8;
      id v11 = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 == (void *)1)
  {
    sub_10001B23C(a1 + 56);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(void *)(a1 + 56) = v8;
  id v12 = v8;

  id v13 = *(void **)(a1 + 64);
  uint64_t v14 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v14;
  id v15 = v14;

LABEL_8:
  int v16 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v16;
  uint64_t v17 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (char *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22((uint64_t)v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_10005E7C0(v18, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
      goto LABEL_14;
    }
    uint64_t v33 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v18, v19, v33);
    uint64_t v34 = v20[5];
    uint64_t v35 = (void *)(v18 + v34);
    uint64_t v36 = &v19[v34];
    uint64_t v37 = *(void **)(v18 + v34);
    uint64_t v38 = *(void **)&v19[v34];
    if (v37 == (void *)1)
    {
      if (v38 != (void *)1)
      {
        void *v35 = v38;
        uint64_t v39 = (void *)*((void *)v36 + 1);
        v35[1] = v39;
        id v40 = v38;
        id v41 = v39;
LABEL_36:
        uint64_t v85 = v20[6];
        uint64_t v86 = v18 + v85;
        uint64_t v87 = &v19[v85];
        long long v88 = *(_OWORD *)v87;
        *(unsigned char *)(v86 + 16) = v87[16];
        *(_OWORD *)uint64_t v86 = v88;
        uint64_t v89 = v20[7];
        uint64_t v90 = (void *)(v18 + v89);
        uint64_t v91 = &v19[v89];
        uint64_t v92 = sub_100082D90();
        uint64_t v93 = *(void *)(v92 - 8);
        uint64_t v94 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v93 + 48);
        int v95 = v94(v90, 1, v92);
        int v96 = v94(v91, 1, v92);
        if (v95)
        {
          if (!v96)
          {
            (*(void (**)(void *, char *, uint64_t))(v93 + 16))(v90, v91, v92);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
            goto LABEL_24;
          }
        }
        else
        {
          if (!v96)
          {
            (*(void (**)(void *, char *, uint64_t))(v93 + 24))(v90, v91, v92);
            goto LABEL_24;
          }
          (*(void (**)(void *, uint64_t))(v93 + 8))(v90, v92);
        }
        size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
        uint64_t v31 = v90;
        char v32 = v91;
LABEL_15:
        memcpy(v31, v32, v30);
        goto LABEL_24;
      }
    }
    else
    {
      if (v38 != (void *)1)
      {
        void *v35 = v38;
        id v81 = v38;

        uint64_t v82 = (void *)v35[1];
        uint64_t v83 = (void *)*((void *)v36 + 1);
        v35[1] = v83;
        id v84 = v83;

        goto LABEL_36;
      }
      sub_10001B23C((uint64_t)v35);
    }
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_36;
  }
  if (v24)
  {
LABEL_14:
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v31 = (void *)v18;
    char v32 = v19;
    goto LABEL_15;
  }
  uint64_t v25 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v18, v19, v25);
  uint64_t v26 = v20[5];
  uint64_t v27 = v18 + v26;
  uint64_t v28 = &v19[v26];
  id v29 = *(void **)&v19[v26];
  if (v29 == (void *)1)
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  else
  {
    *(void *)uint64_t v27 = v29;
    uint64_t v42 = (void *)*((void *)v28 + 1);
    *(void *)(v27 + 8) = v42;
    id v43 = v29;
    id v44 = v42;
  }
  uint64_t v45 = v20[6];
  uint64_t v46 = v18 + v45;
  uint64_t v47 = &v19[v45];
  long long v48 = *(_OWORD *)v47;
  *(unsigned char *)(v46 + 16) = v47[16];
  *(_OWORD *)uint64_t v46 = v48;
  uint64_t v49 = v20[7];
  id v50 = (void *)(v18 + v49);
  id v51 = &v19[v49];
  uint64_t v52 = sub_100082D90();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    uint64_t v54 = sub_100002874(&qword_1000A7A68);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
LABEL_24:
  uint64_t v55 = a3[5];
  uint64_t v56 = *(void **)(a1 + v55);
  char v57 = *(void **)(a2 + v55);
  *(void *)(a1 + v55) = v57;
  id v58 = v57;

  uint64_t v59 = a3[6];
  uint64_t v60 = *(void **)(a2 + v59);
  uint64_t v61 = *(void **)(a1 + v59);
  *(void *)(a1 + v59) = v60;
  id v62 = v60;

  uint64_t v63 = a3[7];
  uint64_t v64 = *(void **)(a1 + v63);
  uint64_t v65 = *(void **)(a2 + v63);
  *(void *)(a1 + v63) = v65;
  id v66 = v65;

  uint64_t v67 = a3[8];
  uint64_t v68 = *(void **)(a1 + v67);
  uint64_t v69 = *(void **)(a2 + v67);
  *(void *)(a1 + v67) = v69;
  id v70 = v69;

  uint64_t v71 = a3[9];
  uint64_t v72 = (void *)(a1 + v71);
  uint64_t v73 = (void *)(a2 + v71);
  uint64_t v74 = sub_100082E70();
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v76 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v75 + 48);
  int v77 = v76(v72, 1, v74);
  int v78 = v76(v73, 1, v74);
  if (!v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, void *, uint64_t))(v75 + 24))(v72, v73, v74);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v75 + 8))(v72, v74);
    goto LABEL_29;
  }
  if (v78)
  {
LABEL_29:
    uint64_t v79 = sub_100002874(&qword_1000A8D20);
    memcpy(v72, v73, *(void *)(*(void *)(v79 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v75 + 16))(v72, v73, v74);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  return a1;
}

uint64_t sub_10005B960(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v8 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v9 = (char *)(a1 + v8);
  id v10 = (char *)(a2 + v8);
  id v11 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002874(&qword_1000A7A70);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v9, v10, v14);
    *(_OWORD *)&v9[v11[5]] = *(_OWORD *)&v10[v11[5]];
    uint64_t v15 = v11[6];
    int v16 = &v9[v15];
    uint64_t v17 = &v10[v15];
    *(_OWORD *)int v16 = *(_OWORD *)v17;
    v16[16] = v17[16];
    uint64_t v18 = v11[7];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = sub_100082D90();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_100002874(&qword_1000A7A68);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v24 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = sub_100082E70();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_100002874(&qword_1000A8D20);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

uint64_t sub_10005BCD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void **)(a1 + 56);
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (v9 == (void *)1) {
    goto LABEL_4;
  }
  if (v8 == 1)
  {
    sub_10001B23C(a1 + 56);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = v8;

  id v11 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

LABEL_6:
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  uint64_t v12 = *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17((uint64_t)v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_10005E7C0(v13, type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent);
      goto LABEL_12;
    }
    uint64_t v33 = sub_1000837F0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v13, v14, v33);
    uint64_t v34 = v15[5];
    uint64_t v35 = (void *)(v13 + v34);
    uint64_t v36 = &v14[v34];
    uint64_t v37 = *(void **)(v13 + v34);
    if (v37 != (void *)1)
    {
      if (*(void *)v36 != 1)
      {
        void *v35 = *(void *)v36;

        uint64_t v56 = (void *)v35[1];
        v35[1] = *((void *)v36 + 1);

        goto LABEL_29;
      }
      sub_10001B23C((uint64_t)v35);
    }
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
LABEL_29:
    uint64_t v57 = v15[6];
    uint64_t v58 = v13 + v57;
    uint64_t v59 = &v14[v57];
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *(unsigned char *)(v58 + 16) = v59[16];
    uint64_t v60 = v15[7];
    uint64_t v61 = (void *)(v13 + v60);
    id v62 = &v14[v60];
    uint64_t v63 = sub_100082D90();
    uint64_t v64 = *(void *)(v63 - 8);
    uint64_t v65 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v64 + 48);
    int v66 = v65(v61, 1, v63);
    int v67 = v65(v62, 1, v63);
    if (v66)
    {
      if (!v67)
      {
        (*(void (**)(void *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v67)
      {
        (*(void (**)(void *, char *, uint64_t))(v64 + 40))(v61, v62, v63);
        goto LABEL_20;
      }
      (*(void (**)(void *, uint64_t))(v64 + 8))(v61, v63);
    }
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A68) - 8) + 64);
    uint64_t v31 = v61;
    char v32 = v62;
LABEL_13:
    memcpy(v31, v32, v30);
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_12:
    size_t v30 = *(void *)(*(void *)(sub_100002874(&qword_1000A7A70) - 8) + 64);
    uint64_t v31 = (void *)v13;
    char v32 = v14;
    goto LABEL_13;
  }
  uint64_t v20 = sub_1000837F0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v13, v14, v20);
  *(_OWORD *)(v13 + v15[5]) = *(_OWORD *)&v14[v15[5]];
  uint64_t v21 = v15[6];
  uint64_t v22 = v13 + v21;
  uint64_t v23 = &v14[v21];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = v23[16];
  uint64_t v24 = v15[7];
  uint64_t v25 = (void *)(v13 + v24);
  uint64_t v26 = &v14[v24];
  uint64_t v27 = sub_100082D90();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_100002874(&qword_1000A7A68);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_20:
  uint64_t v38 = a3[5];
  uint64_t v39 = *(void **)(a1 + v38);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);

  uint64_t v40 = a3[6];
  id v41 = *(void **)(a1 + v40);
  *(void *)(a1 + v40) = *(void *)(a2 + v40);

  uint64_t v42 = a3[7];
  id v43 = *(void **)(a1 + v42);
  *(void *)(a1 + v42) = *(void *)(a2 + v42);

  uint64_t v44 = a3[8];
  uint64_t v45 = *(void **)(a1 + v44);
  *(void *)(a1 + v44) = *(void *)(a2 + v44);

  uint64_t v46 = a3[9];
  uint64_t v47 = (void *)(a1 + v46);
  long long v48 = (void *)(a2 + v46);
  uint64_t v49 = sub_100082E70();
  uint64_t v50 = *(void *)(v49 - 8);
  id v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (!v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 40))(v47, v48, v49);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
    goto LABEL_25;
  }
  if (v53)
  {
LABEL_25:
    uint64_t v54 = sub_100002874(&qword_1000A8D20);
    memcpy(v47, v48, *(void *)(*(void *)(v54 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 32))(v47, v48, v49);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  return a1;
}

uint64_t sub_10005C34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005C360);
}

uint64_t sub_10005C360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_100002874(&qword_1000A8D20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10005C490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005C4A4);
}

uint64_t sub_10005C4A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_100002874(&qword_1000A8D20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SuggestedDestinationEntryContentResolver(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000AA0D0);
}

void sub_10005C5F4()
{
  type metadata accessor for SuggestedDestinationEntryContent(319);
  if (v0 <= 0x3F)
  {
    sub_10005A670(319, (unint64_t *)&unk_1000AA0E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10005C6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v33 = a1;
  uint64_t v41 = sub_100083610();
  uint64_t v44 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100083630();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v37 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100082E40();
  uint64_t v7 = *(void *)(v32 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v32);
  size_t v30 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SuggestedDestinationEntryContentResolver(0);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v31 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v29 = (uint64_t)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000837F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t v36 = sub_1000839A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v33, v11);
  sub_10005E758(v35, (uint64_t)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SuggestedDestinationEntryContentResolver);
  uint64_t v15 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v32);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v17 = (v13 + *(unsigned __int8 *)(v31 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v18 = (v10 + *(unsigned __int8 *)(v7 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v16, v14, v11);
  sub_10005E098(v29, v19 + v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v18, v30, v15);
  uint64_t v20 = (void *)(v19 + ((v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = v39;
  void *v20 = v38;
  v20[1] = v21;
  aBlock[4] = sub_10005E0FC;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009ED80;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v23 = v37;
  sub_100083620();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100018A68();
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  uint64_t v25 = v40;
  uint64_t v24 = v41;
  sub_100083A40();
  uint64_t v26 = (void *)v36;
  sub_1000839B0();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v23, v43);
}

uint64_t sub_10005CC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v96 = a4;
  uint64_t v97 = a5;
  uint64_t v87 = a3;
  uint64_t v90 = a2;
  uint64_t v6 = sub_1000837F0();
  uint64_t v94 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  __chkstk_darwin(v6);
  uint64_t v92 = v7;
  uint64_t v93 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SuggestedDestinationEntryContentResolver(0);
  uint64_t v86 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v88 = v9;
  uint64_t v89 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100002874(&qword_1000A7F30);
  __chkstk_darwin(v10 - 8);
  uint64_t v98 = (uint64_t)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100002874(&qword_1000A7A68);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v80 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v79 = (char *)&v79 - v15;
  uint64_t v16 = sub_100083730();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v79 - v21;
  uint64_t v85 = swift_allocBox();
  uint64_t v24 = v23;
  uint64_t v25 = sub_100082D90();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v83 = v25;
  uint64_t v84 = v24;
  uint64_t v81 = v26 + 56;
  uint64_t v82 = v27;
  ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v24, 1, 1);
  sub_100002874(&qword_1000AA120);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000877A0;
  uint64_t v103 = sub_100083870();
  uint64_t v104 = v29;
  sub_100083A80();
  uint64_t v91 = a1;
  sub_1000837E0();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  int v30 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v30 == enum case for WidgetFamily.systemSmall(_:))
  {
    int v31 = 94;
  }
  else if (v30 == enum case for WidgetFamily.systemMedium(_:))
  {
    int v31 = 95;
  }
  else
  {
    if (v30 != enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t result = sub_100083B70();
      __break(1u);
      return result;
    }
    int v31 = 96;
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  *(void *)(inited + 96) = &type metadata for Int32;
  *(_DWORD *)(inited + 72) = v31;
  uint64_t v103 = sub_100083870();
  uint64_t v104 = v32;
  sub_100083A80();
  *(void *)(inited + 168) = &type metadata for Int32;
  *(_DWORD *)(inited + 144) = 696;
  uint64_t v103 = sub_100083870();
  uint64_t v104 = v33;
  sub_100083A80();
  uint64_t v34 = v90;
  uint64_t v103 = *(void *)(v90 + 32);
  uint64_t v35 = sub_100083BF0();
  *(void *)(inited + 240) = &type metadata for String;
  *(void *)(inited + 216) = v35;
  *(void *)(inited + 224) = v36;
  unint64_t v37 = sub_100008DB4(inited);
  uint64_t v38 = *(void **)(v34 + *(int *)(v8 + 32));
  if (v38)
  {
    *(void *)&long long v101 = sub_100083870();
    *((void *)&v101 + 1) = v39;
    id v40 = v38;
    sub_100083A80();
    [v40 transportType];
    uint64_t v41 = sub_100058110();
    long long v102 = &type metadata for String;
    *(void *)&long long v101 = v41;
    *((void *)&v101 + 1) = v42;
    sub_10001A784(&v101, v100);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v99 = v37;
    sub_100036268(v100, (uint64_t)&v103, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_100018630((uint64_t)&v103);
    uint64_t v44 = self;
    sub_100002874(&qword_1000AA128);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_100086310;
    id v46 = [v44 mapItemForCurrentLocation];
    uint64_t v47 = sub_1000188D8(0, &qword_1000AA130);
    *(void *)(v45 + 56) = v47;
    *(void *)(v45 + 32) = v46;
    long long v48 = *(void **)(v34 + *(int *)(v8 + 24));
    *(void *)(v45 + 88) = v47;
    *(void *)(v45 + 64) = v48;
    id v49 = v48;
    Class isa = sub_1000838C0().super.isa;
    swift_bridgeObjectRelease();
    Class v51 = sub_100083810().super.isa;
    swift_bridgeObjectRelease();
    id v52 = [v44 urlForMapItems:isa options:v51];

    if (v52)
    {
      uint64_t v53 = (uint64_t)v80;
      sub_100082D80();

      uint64_t v54 = 0;
      id v40 = v52;
      uint64_t v55 = v91;
      uint64_t v56 = v92;
      uint64_t v57 = v88;
      uint64_t v58 = v84;
    }
    else
    {
      uint64_t v54 = 1;
      uint64_t v55 = v91;
      uint64_t v56 = v92;
      uint64_t v57 = v88;
      uint64_t v58 = v84;
      uint64_t v53 = (uint64_t)v80;
    }

    v82(v53, v54, 1, v83);
  }
  else
  {
    uint64_t v59 = self;
    uint64_t v60 = *(void *)(v34 + *(int *)(v8 + 24));
    Class v61 = sub_100083810().super.isa;
    swift_bridgeObjectRelease();
    id v62 = [v59 urlForMapItem:v60 options:v61];

    uint64_t v57 = v88;
    if (v62)
    {
      uint64_t v53 = (uint64_t)v79;
      sub_100082D80();

      uint64_t v55 = v91;
      uint64_t v56 = v92;
      uint64_t v58 = v84;
      v82(v53, 0, 1, v83);
    }
    else
    {
      uint64_t v55 = v91;
      uint64_t v56 = v92;
      uint64_t v58 = v84;
      uint64_t v53 = (uint64_t)v79;
      v82((uint64_t)v79, 1, 1, v83);
    }
  }
  sub_10005E26C(v53, v58);
  uint64_t v63 = v87;
  uint64_t v92 = sub_10005D63C(v55);
  uint64_t v64 = sub_100082E40();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = v98;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v98, v63, v64);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v66, 0, 1, v64);
  uint64_t v67 = v89;
  sub_10005E758(v34, v89, type metadata accessor for SuggestedDestinationEntryContentResolver);
  uint64_t v69 = v93;
  uint64_t v68 = v94;
  uint64_t v70 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v55, v95);
  unint64_t v71 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  unint64_t v72 = (v57 + *(unsigned __int8 *)(v68 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  unint64_t v73 = (v56 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v74 = swift_allocObject();
  sub_10005E098(v67, v74 + v71);
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v74 + v72, v69, v70);
  *(void *)(v74 + v73) = v85;
  uint64_t v75 = (void *)(v74 + ((v73 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v76 = v97;
  *uint64_t v75 = v96;
  v75[1] = v76;
  swift_retain();
  swift_retain();
  uint64_t v77 = v98;
  sub_1000307D4(v98, (uint64_t)sub_10005E648, v74);
  swift_release();
  swift_release();
  sub_100019138(v77, &qword_1000A7F30);
  return swift_release();
}

uint64_t sub_10005D63C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v3 = sub_1000837F0();
  uint64_t v39 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100083730();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000836A0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  *uint64_t v13 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = sub_1000836C0();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v16 = v3;
    uint64_t v17 = type metadata accessor for MapSnapshotter();
    uint64_t v18 = (int *)type metadata accessor for SuggestedDestinationEntryContentResolver(0);
    uint64_t v19 = v2 + v18[9];
    sub_1000837E0();
    uint64_t v38 = v19;
    id v20 = sub_100033320(v19, (uint64_t)v9);
    unint64_t v37 = *(void (**)(char *, uint64_t))(v7 + 8);
    v37(v9, v6);
    if (v20)
    {
      type metadata accessor for SuggestedDestinationSnapshotter();
      uint64_t v21 = swift_dynamicCastClass();
      if (v21) {
        return v21;
      }
      swift_release();
    }
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    uint64_t v39 = v17;
    v22(v5, v40, v16);
    uint64_t v23 = *(void **)(v2 + v18[5]);
    uint64_t v24 = *(void **)(v2 + v18[6]);
    uint64_t v25 = v18[8];
    uint64_t v26 = *(void **)(v2 + v18[7]);
    uint64_t v35 = *(unsigned int *)(v2 + 72);
    uint64_t v36 = v6;
    unsigned __int8 v27 = *(unsigned char *)(v2 + 76);
    uint64_t v28 = *(void **)(v2 + v25);
    type metadata accessor for SuggestedDestinationSnapshotter();
    swift_allocObject();
    id v29 = v28;
    id v30 = v23;
    id v31 = v24;
    id v32 = v26;
    unsigned __int8 v41 = v27;
    sub_10003744C((uint64_t)v5, v23, v31, v26, v35 | ((unint64_t)v27 << 32), v28);
    uint64_t v21 = v33;
    sub_1000837E0();
    sub_100033B68(v21, v38, v9);
    v37(v9, v36);
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005D9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v32 = a6;
  uint64_t v33 = a5;
  uint64_t v31 = a1;
  uint64_t v8 = sub_100002874(&qword_1000A7B28);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  char v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_projectBox();
  type metadata accessor for SuggestedDestinationSnapshotter();
  uint64_t v16 = swift_dynamicCastClassUnconditional();
  id v30 = type metadata accessor for SuggestedDestinationEntryContent;
  sub_10005E758(a2, (uint64_t)v14, type metadata accessor for SuggestedDestinationEntryContent);
  uint64_t v17 = (uint64_t)&v14[*(int *)(v12 + 48)];
  swift_retain();
  sub_100019138(v17, &qword_1000A7A70);
  uint64_t v18 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a3, v18);
  uint64_t v19 = *(void **)(v16 + 24);
  id v20 = *(void **)(v16 + 32);
  uint64_t v21 = *(void *)(v16 + 80);
  uint64_t v22 = *(void *)(v16 + 88);
  char v23 = *(unsigned char *)(v16 + 96);
  swift_beginAccess();
  uint64_t v24 = (int *)type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  sub_10001A720(v15, v17 + v24[7], &qword_1000A7A68);
  uint64_t v25 = (void *)(v17 + v24[5]);
  void *v25 = v19;
  v25[1] = v20;
  uint64_t v26 = v17 + v24[6];
  *(void *)uint64_t v26 = v21;
  *(void *)(v26 + 8) = v22;
  *(unsigned char *)(v26 + 16) = v23;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v24 - 1) + 56))(v17, 0, 1, v24);
  sub_10005E758((uint64_t)v14, (uint64_t)v10, v30);
  uint64_t v27 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 0, 1, v27);
  sub_10005A738(v19, v20);
  v33(v10);
  swift_release();
  sub_100019138((uint64_t)v10, &qword_1000A7B28);
  return sub_10005E7C0((uint64_t)v14, type metadata accessor for SuggestedDestinationEntryContent);
}

uint64_t sub_10005DCB4()
{
  uint64_t v1 = sub_1000837F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v29 + 16) & ~v29;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for SuggestedDestinationEntryContentResolver(0);
  uint64_t v28 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v6 = (v3 + v4 + v28) & ~v28;
  uint64_t v25 = *(void *)(*((void *)v5 - 1) + 64);
  uint64_t v27 = sub_100082E40();
  uint64_t v7 = *(void *)(v27 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = *(void *)(v7 + 64);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v3, v1);
  uint64_t v26 = v6;
  uint64_t v10 = v0 + v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void **)(v0 + v6 + 56);
  if (v11 != (void *)1)
  {
  }
  uint64_t v12 = v10 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v13 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v9(v12, v1);
    char v14 = (id *)(v12 + *(int *)(v13 + 20));
    if (*v14 != (id)1)
    {
    }
    uint64_t v15 = v12 + *(int *)(v13 + 28);
    uint64_t v16 = sub_100082D90();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
  }

  uint64_t v18 = v10 + v5[9];
  uint64_t v19 = sub_100082E70();
  uint64_t v20 = *(void *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  uint64_t v21 = (v26 + v25 + v8) & ~v8;
  unint64_t v22 = (v24 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v21, v27);
  swift_release();

  return _swift_deallocObject(v0, v22 + 16, v29 | v28 | v8 | 7);
}

uint64_t sub_10005E098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedDestinationEntryContentResolver(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E0FC()
{
  uint64_t v1 = *(void *)(sub_1000837F0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for SuggestedDestinationEntryContentResolver(0) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_100082E40() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v0 + v8;
  uint64_t v10 = (uint64_t *)(v0 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return sub_10005CC04(v0 + v2, v0 + v5, v9, v11, v12);
}

uint64_t sub_10005E254(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005E264()
{
  return swift_release();
}

uint64_t sub_10005E26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000A7A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E2D4()
{
  uint64_t v1 = (int *)type metadata accessor for SuggestedDestinationEntryContentResolver(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = sub_1000837F0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = *(void *)(v4 + 64);
  uint64_t v6 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(v6 + 56);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v6 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
  uint64_t v9 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
    uint64_t v10 = (id *)(v8 + *(int *)(v9 + 20));
    if (*v10 != (id)1)
    {
    }
    uint64_t v11 = v8 + *(int *)(v9 + 28);
    uint64_t v12 = sub_100082D90();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
  }

  uint64_t v14 = v6 + v1[9];
  uint64_t v15 = sub_100082E70();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v17 = (((v2 + 16) & ~v2) + v21 + v5) & ~v5;
  unint64_t v18 = (((v20 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v17, v3);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v18 + 16, v2 | v5 | 7);
}

uint64_t sub_10005E648(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SuggestedDestinationEntryContentResolver(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1000837F0() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v1 + v7;
  uint64_t v10 = *(void *)(v1 + v8);
  uint64_t v11 = v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void (**)(char *))v11;
  uint64_t v13 = *(void *)(v11 + 8);

  return sub_10005D9C8(a1, v1 + v4, v9, v10, v12, v13);
}

uint64_t sub_10005E758(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005E7C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10005E820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005E848(a1, 9022, 676, a2);
}

uint64_t sub_10005E834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005E848(a1, 54, 675, a2);
}

uint64_t sub_10005E848@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v24 = a2;
  int v25 = a3;
  uint64_t v27 = a1;
  uint64_t v23 = a4;
  uint64_t v4 = sub_100082D90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = self;
  sub_100002874(&qword_1000AA120);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000878E0;
  uint64_t v28 = sub_100083870();
  uint64_t v29 = v12;
  sub_100083A80();
  *(void *)(inited + 96) = &type metadata for Bool;
  *(unsigned char *)(inited + 72) = 1;
  uint64_t v28 = sub_100083870();
  uint64_t v29 = v13;
  sub_100083A80();
  *(void *)(inited + 168) = &type metadata for Int32;
  *(_DWORD *)(inited + 144) = v24;
  uint64_t v28 = sub_100083870();
  uint64_t v29 = v14;
  sub_100083A80();
  *(void *)(inited + 240) = &type metadata for Int32;
  *(_DWORD *)(inited + 216) = v25;
  uint64_t v28 = sub_100083870();
  uint64_t v29 = v15;
  sub_100083A80();
  sub_100083730();
  sub_10005EBC0();
  uint64_t v16 = sub_100083BF0();
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 288) = v16;
  *(void *)(inited + 296) = v17;
  sub_100008DB4(inited);
  Class isa = sub_100083810().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v26 urlForMapItem:0 options:isa];

  if (v19)
  {
    sub_100082D80();

    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v20(v10, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
    if (result != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v23, v10, v4);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  __break(1u);
  return result;
}

unint64_t sub_10005EBC0()
{
  unint64_t result = qword_1000A8CE8;
  if (!qword_1000A8CE8)
  {
    sub_100083730();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000A8CE8);
  }
  return result;
}

void sub_10005EC18(uint64_t a1, void (*a2)(void *, void *))
{
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  sub_10005A738(v3, v4);
  a2(v3, v4);

  sub_100034C64(v3, v4);
}

uint64_t sub_10005EC7C()
{
  uint64_t v0 = sub_100032D14();

  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for NavigationETASnapshotter()
{
  return self;
}

uint64_t sub_10005ECD0()
{
  uint64_t v0 = sub_100083730();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000837E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (result == enum case for WidgetFamily.systemSmall(_:))
  {
    if (qword_1000A79F0 == -1) {
      return result;
    }
    return swift_once();
  }
  if (result == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t result = sub_1000837D0();
    double v6 = v5 * 0.5;
    if (qword_1000A79B8 != -1)
    {
      *(double *)&v7[1] = v6;
      return swift_once();
    }
  }
  else
  {
    if (result != enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t result = sub_100083B70();
      __break(1u);
      return result;
    }
    if (qword_1000A79E8 != -1) {
      return swift_once();
    }
  }
  return result;
}

uint64_t sub_10005EF94(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100083730();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000837E0();
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for WidgetFamily.systemSmall(_:))
  {
    MKMapRectMakeWithRadialDistance();
LABEL_6:
    sub_1000837D0();
    sub_10005ECD0();
    return _MKMapRectThatFits();
  }
  if (v7 == enum case for WidgetFamily.systemMedium(_:) || v7 == enum case for WidgetFamily.systemLarge(_:))
  {
    id v8 = [a2 boundingMapRegion];
    GEOMapRectForMapRegion();

    goto LABEL_6;
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

id sub_10005F244(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  *(_OWORD *)(v3 + 16) = xmmword_100086BB0;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = dispatch_group_create();
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = sub_100008C94((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = &_swiftEmptyArrayStorage;
  id v6 = objc_allocWithZone((Class)MKMapSnapshotOptions);
  swift_retain();
  id v7 = [v6 init];
  id v8 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v7;

  id result = *(id *)(v3 + 16);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  id result = [result _setShowsAppleLogo:0];
  uint64_t v10 = *(void **)(v3 + 16);
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v11 = v10;
  sub_1000837D0();
  [v11 setSize:];

  [a2 pointAtRouteCoordinate:[a2 endRouteCoordinate]];
  nullsub_1(v12, v13, v14);
  id result = (id)CLLocationCoordinate2DFromGEOLocationCoordinate2D();
  uint64_t v15 = *(void **)(v3 + 16);
  if (!v15)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v16 = v15;
  sub_10005EF94(a1, a2);
  [v16 setMapRect:];

  id result = *(id *)(v3 + 16);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  [result _setComposedRouteForRouteLine:a2];
  uint64_t v17 = *(void **)(v3 + 16);
  id v18 = v17;
  id result = (id)swift_release();
  if (v17)
  {
    [v18 setMapType:[a2 mapType]];

    uint64_t v19 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
    return (id)v3;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10005F43C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v27 = a2;
  uint64_t v30 = a3;
  uint64_t v6 = type metadata accessor for PreciseUserLocationView(0);
  __chkstk_darwin(v6);
  id v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = sub_100002874(&qword_1000AA2F0);
  __chkstk_darwin(v28);
  uint64_t v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100002874(&qword_1000AA2F8);
  __chkstk_darwin(v11);
  double v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = sub_100002874(&qword_1000AA300);
  __chkstk_darwin(v29);
  uint64_t v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100002874(&qword_1000A8288);
  __chkstk_darwin(v16 - 8);
  id v18 = (uint64_t *)&v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = (int *)type metadata accessor for CoarseUserLocationView(0);
  __chkstk_darwin(v19);
  uint64_t v21 = &v26[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1)
  {
    *id v18 = swift_getKeyPath();
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    *(void *)&v8[*(int *)(v6 + 20)] = swift_getKeyPath();
    sub_100002874(&qword_1000A8498);
    swift_storeEnumTagMultiPayload();
    sub_100019284((uint64_t)v18, (uint64_t)v8, &qword_1000A8288);
    v8[*(int *)(v6 + 24)] = v27 & 1;
    uint64_t v22 = type metadata accessor for PreciseUserLocationView;
    sub_100061D30((uint64_t)v8, (uint64_t)v13, type metadata accessor for PreciseUserLocationView);
    swift_storeEnumTagMultiPayload();
    sub_100061C0C(&qword_1000AA308, (void (*)(uint64_t))type metadata accessor for CoarseUserLocationView);
    sub_100061C0C(&qword_1000AA310, (void (*)(uint64_t))type metadata accessor for PreciseUserLocationView);
    sub_100083230();
    sub_10001A720((uint64_t)v15, (uint64_t)v10, &qword_1000AA300);
    swift_storeEnumTagMultiPayload();
    sub_100061C54();
    sub_100083230();
    sub_100019138((uint64_t)v15, &qword_1000AA300);
    uint64_t v23 = (uint64_t)v8;
    return sub_100061D98(v23, v22);
  }
  char v24 = v27;
  if (a1 == 1)
  {
    *id v18 = swift_getKeyPath();
    sub_100002874(&qword_1000A8250);
    swift_storeEnumTagMultiPayload();
    *(void *)&v21[v19[5]] = swift_getKeyPath();
    sub_100002874(&qword_1000A8498);
    swift_storeEnumTagMultiPayload();
    sub_100019284((uint64_t)v18, (uint64_t)v21, &qword_1000A8288);
    v21[v19[6]] = v24 & 1;
    *(double *)&v21[v19[7]] = a4;
    uint64_t v22 = type metadata accessor for CoarseUserLocationView;
    sub_100061D30((uint64_t)v21, (uint64_t)v13, type metadata accessor for CoarseUserLocationView);
    swift_storeEnumTagMultiPayload();
    sub_100061C0C(&qword_1000AA308, (void (*)(uint64_t))type metadata accessor for CoarseUserLocationView);
    sub_100061C0C(&qword_1000AA310, (void (*)(uint64_t))type metadata accessor for PreciseUserLocationView);
    sub_100083230();
    sub_10001A720((uint64_t)v15, (uint64_t)v10, &qword_1000AA300);
    swift_storeEnumTagMultiPayload();
    sub_100061C54();
    sub_100083230();
    sub_100019138((uint64_t)v15, &qword_1000AA300);
    uint64_t v23 = (uint64_t)v21;
    return sub_100061D98(v23, v22);
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

uint64_t sub_10005FA04@<X0>(uint64_t a1@<X8>)
{
  return sub_10005F43C(*(void *)v1, *(unsigned __int8 *)(v1 + 8), a1, *(double *)(v1 + 16));
}

double sub_10005FA14@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000831C0();
  uint64_t v5 = *a1;
  char v6 = *((unsigned char *)a1 + 8);
  double result = *((double *)a1 + 4);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) = 1;
  *(void *)(a2 + 56) = v5;
  *(unsigned char *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 72) = *((_OWORD *)a1 + 1);
  *(double *)(a2 + 88) = result;
  *(void *)(a2 + 96) = 0;
  *(unsigned char *)(a2 + 104) = 1;
  *(void *)(a2 + 112) = 0;
  *(unsigned char *)(a2 + 120) = 1;
  return result;
}

double sub_10005FAA4@<D0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v3;
  uint64_t v11 = *(void *)(v1 + 32);
  uint64_t v4 = sub_100083130();
  sub_10005FA14((uint64_t *)v10, (uint64_t)v12);
  *(_OWORD *)((char *)&v14[4] + 7) = v12[4];
  *(_OWORD *)((char *)&v14[5] + 7) = v12[5];
  *(_OWORD *)((char *)&v14[6] + 7) = v13[0];
  *(_OWORD *)((char *)v14 + 7) = v12[0];
  *(_OWORD *)((char *)&v14[1] + 7) = v12[1];
  *(_OWORD *)((char *)&v14[2] + 7) = v12[2];
  *(_OWORD *)((char *)&v14[3] + 7) = v12[3];
  long long v5 = v14[6];
  *(_OWORD *)(a1 + 129) = *(_OWORD *)((char *)v13 + 9);
  long long v6 = v14[5];
  *(_OWORD *)(a1 + 81) = v14[4];
  *(_OWORD *)(a1 + 97) = v6;
  long long v7 = v14[2];
  *(_OWORD *)(a1 + 65) = v14[3];
  *(_OWORD *)(a1 + 49) = v7;
  long long v9 = v14[0];
  double result = *(double *)&v14[1];
  *(_OWORD *)(a1 + 33) = v14[1];
  *(_OWORD *)(a1 + 17) = v9;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 113) = v5;
  return result;
}

uint64_t sub_10005FB7C(SEL *a1, SEL *a2, SEL *a3)
{
  uint64_t v7 = sub_100082F80();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3, v7);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == enum case for ColorScheme.light(_:))
  {
    id v12 = [self *a3];
    return sub_1000834F0();
  }
  if (v11 == enum case for ColorScheme.dark(_:))
  {
    id v13 = [self *a1];
    [self *a2:1];
    id v15 = [v13 resolvedColorWithTraitCollection:v14];

    return sub_1000834F0();
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

uint64_t sub_10005FD74()
{
  uint64_t v1 = sub_100002874(&qword_1000AA460);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_100002874(&qword_1000AA468);
  __chkstk_darwin(v4);
  long long v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CoarseUserLocationView(0);
  *uint64_t v3 = sub_1000835D0();
  v3[1] = v7;
  uint64_t v8 = sub_100002874(&qword_1000AA470);
  sub_10005FF30(v0, (uint64_t)v3 + *(int *)(v8 + 44));
  sub_1000835D0();
  sub_100082FB0();
  sub_10001A720((uint64_t)v3, (uint64_t)v6, &qword_1000AA460);
  uint64_t v9 = &v6[*(int *)(v4 + 36)];
  long long v10 = v12[1];
  *(_OWORD *)uint64_t v9 = v12[0];
  *((_OWORD *)v9 + 1) = v10;
  *((_OWORD *)v9 + 2) = v12[2];
  sub_100019138((uint64_t)v3, &qword_1000AA460);
  sub_1000634C0();
  sub_100083420();
  return sub_100019138((uint64_t)v6, &qword_1000AA468);
}

uint64_t sub_10005FF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v63 = sub_1000836F0();
  uint64_t v61 = *(void *)(v63 - 8);
  uint64_t v3 = __chkstk_darwin(v63);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v55 - v6;
  uint64_t v69 = sub_100082F80();
  uint64_t v8 = *(void *)(v69 - 8);
  uint64_t v9 = __chkstk_darwin(v69);
  id v62 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v55 - v12;
  __chkstk_darwin(v11);
  id v15 = (char *)&v55 - v14;
  uint64_t v60 = sub_100002874(&qword_1000AA488);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100002874(&qword_1000AA490);
  uint64_t v18 = __chkstk_darwin(v56);
  uint64_t v67 = (uint64_t)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v55 - v21;
  __chkstk_darwin(v20);
  uint64_t v66 = (uint64_t)&v55 - v23;
  sub_1000681A4((uint64_t)v15);
  uint64_t v24 = *(int *)(type metadata accessor for CoarseUserLocationView(0) + 24);
  uint64_t v64 = a1;
  uint64_t v65 = v13;
  if (*(unsigned char *)(a1 + v24) == 1) {
    sub_10005FB7C((SEL *)&selRef_systemGray2Color, (SEL *)&selRef_traitCollectionWithAccessibilityContrast_, (SEL *)&selRef_systemGray2Color);
  }
  else {
    sub_1000834A0();
  }
  uint64_t v25 = sub_1000834C0();
  swift_release();
  id v26 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v27 = v69;
  uint64_t v58 = v8 + 8;
  uint64_t v57 = v26;
  v26((uint64_t)v15, v69);
  char v28 = sub_100083300();
  double v29 = 1.0;
  sub_100082F60();
  double v70 = *(double *)&v25;
  LOWORD(v71) = 256;
  LOBYTE(v72) = v28;
  uint64_t v73 = v30;
  uint64_t v74 = v31;
  uint64_t v75 = v32;
  uint64_t v76 = v33;
  char v77 = 0;
  sub_100002874(&qword_1000AA498);
  sub_100063560();
  sub_1000833C0();
  swift_release();
  sub_100068514((uint64_t)v7);
  sub_1000836E0();
  char v34 = sub_1000836D0();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v61 + 8);
  uint64_t v36 = v63;
  v35(v5, v63);
  v35(v7, v36);
  if (v34) {
    double v29 = 0.8;
  }
  uint64_t v37 = v59;
  uint64_t v38 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v22, v17, v60);
  *(double *)&v22[*(int *)(v56 + 36)] = v29;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v38);
  uint64_t v39 = v66;
  sub_100019284((uint64_t)v22, v66, &qword_1000AA490);
  uint64_t v40 = (uint64_t)v65;
  sub_1000681A4((uint64_t)v65);
  unsigned __int8 v41 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v62, v40, v27);
  int v42 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v41, v27);
  if (v42 == enum case for ColorScheme.light(_:))
  {
    uint64_t v43 = sub_10005FB7C((SEL *)&selRef_systemGray3Color, (SEL *)&selRef_traitCollectionWithUserInterfaceStyle_, (SEL *)&selRef_whiteColor);
LABEL_10:
    v57(v40, v69);
    sub_100082FA0();
    double v44 = v70;
    uint64_t v45 = v72;
    uint64_t v46 = v73;
    uint64_t v47 = v74;
    uint64_t v48 = sub_1000835D0();
    uint64_t v50 = v49;
    uint64_t v51 = v67;
    sub_10001A720(v39, v67, &qword_1000AA490);
    uint64_t v52 = v68;
    sub_10001A720(v51, v68, &qword_1000AA490);
    uint64_t v53 = v52 + *(int *)(sub_100002874(&qword_1000AA4A8) + 48);
    *(double *)uint64_t v53 = v44 * 0.5;
    *(double *)(v53 + 8) = v44;
    *(void *)(v53 + 16) = v71;
    *(void *)(v53 + 24) = v45;
    *(void *)(v53 + 32) = v46;
    *(void *)(v53 + 40) = v47;
    *(void *)(v53 + 48) = v43;
    *(_WORD *)(v53 + 56) = 256;
    *(void *)(v53 + 64) = v48;
    *(void *)(v53 + 72) = v50;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100019138(v39, &qword_1000AA490);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_100019138(v51, &qword_1000AA490);
  }
  if (v42 == enum case for ColorScheme.dark(_:))
  {
    sub_10005FB7C((SEL *)&selRef_systemGray3Color, (SEL *)&selRef_traitCollectionWithUserInterfaceStyle_, (SEL *)&selRef_whiteColor);
    uint64_t v43 = sub_1000834C0();
    swift_release();
    goto LABEL_10;
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

void sub_10006062C()
{
  qword_1000ACBD8 = 0x4036000000000000;
}

uint64_t initializeBufferWithCopyOfBuffer for UserLocationState(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for UserLocationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserLocationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserLocationState()
{
  return &type metadata for UserLocationState;
}

__n128 initializeWithCopy for UserLocationViewLayout(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UserLocationViewLayout(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserLocationViewLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserLocationViewLayout()
{
  return &type metadata for UserLocationViewLayout;
}

uint64_t sub_1000607BC()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 initializeBufferWithCopyOfBuffer for UserLocationView(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for UserLocationView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserLocationView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserLocationView()
{
  return &type metadata for UserLocationView;
}

uint64_t sub_100060894()
{
  return sub_100023D5C(&qword_1000AA2E0, &qword_1000AA2E8);
}

uint64_t sub_1000608D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for PreciseUserLocationView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AA378);
}

uint64_t type metadata accessor for CoarseUserLocationView(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AA410);
}

uint64_t sub_10006092C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002874(&qword_1000AA4B0);
  __chkstk_darwin(v2 - 8);
  BOOL v4 = (uint64_t *)((char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100002874(&qword_1000AA4B8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *BOOL v4 = sub_1000835D0();
  v4[1] = v8;
  uint64_t v9 = sub_100002874(&qword_1000AA4C0);
  sub_100060AFC(v1, (uint64_t)v4 + *(int *)(v9 + 44));
  if (qword_1000A7A18 != -1) {
    swift_once();
  }
  sub_1000835D0();
  sub_100082FB0();
  sub_10001A720((uint64_t)v4, (uint64_t)v7, &qword_1000AA4B0);
  uint64_t v10 = &v7[*(int *)(v5 + 36)];
  long long v11 = v13[1];
  *(_OWORD *)uint64_t v10 = v13[0];
  *((_OWORD *)v10 + 1) = v11;
  *((_OWORD *)v10 + 2) = v13[2];
  sub_100019138((uint64_t)v4, &qword_1000AA4B0);
  sub_100063600();
  sub_100083420();
  return sub_100019138((uint64_t)v7, &qword_1000AA4B8);
}

uint64_t sub_100060AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v157 = a2;
  uint64_t v146 = (void (*)(char *, uint64_t))sub_100083490();
  uint64_t v145 = *((void *)v146 - 1);
  __chkstk_darwin(v146);
  unint64_t v144 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_100002874(&qword_1000AA4D8);
  __chkstk_darwin(v156);
  char v155 = (uint64_t *)((char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v151 = (char *)sub_100002874(&qword_1000AA488);
  uint64_t v140 = *((void *)v151 - 1);
  __chkstk_darwin(v151);
  uint64_t v139 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100002874(&qword_1000AA4E0);
  __chkstk_darwin(v148);
  uint64_t v150 = (uint64_t)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100002874(&qword_1000AA4E8);
  __chkstk_darwin(v149);
  uint64_t v142 = (uint64_t)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100083290();
  __chkstk_darwin(v8 - 8);
  uint64_t v137 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100083050();
  __chkstk_darwin(v10 - 8);
  uint64_t v134 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_1000835E0();
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v132 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082F80();
  uint64_t v159 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v143 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v128 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v128 - v19;
  uint64_t v129 = sub_100002874(&qword_1000AA4F0);
  __chkstk_darwin(v129);
  uint64_t v130 = (char *)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_100002874(&qword_1000AA4F8);
  uint64_t v22 = __chkstk_darwin(v131);
  uint64_t v136 = (uint64_t)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v138 = (char *)&v128 - v24;
  uint64_t v152 = sub_100002874(&qword_1000AA500);
  __chkstk_darwin(v152);
  uint64_t v147 = (char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000836F0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v128 - v31;
  uint64_t v33 = sub_100002874(&qword_1000AA508);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v154 = (uint64_t)&v128 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v153 = (char *)&v128 - v36;
  uint64_t v37 = type metadata accessor for PreciseUserLocationView(0);
  uint64_t v158 = a1;
  sub_100068514((uint64_t)v32);
  sub_1000836E0();
  LOBYTE(a1) = sub_1000836D0();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v27 + 8);
  v38(v30, v26);
  v38(v32, v26);
  if (a1)
  {
    int v39 = *(unsigned __int8 *)(v158 + *(int *)(v37 + 24));
    sub_1000681A4((uint64_t)v20);
    uint64_t v40 = v159;
    unsigned __int8 v41 = (void (**)(char *, uint64_t))(v159 + 8);
    uint64_t v42 = (uint64_t)v20;
    uint64_t v141 = v13;
    if (v39 == 1)
    {
      uint64_t v43 = sub_10005FB7C((SEL *)&selRef_systemGray2Color, (SEL *)&selRef_traitCollectionWithAccessibilityContrast_, (SEL *)&selRef_systemGray2Color);
      uint64_t v146 = *v41;
      v146(v20, v13);
      char v44 = sub_100083300();
      sub_100082F60();
      uint64_t v46 = v45;
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      uint64_t v52 = v51;
      uint64_t v53 = v133;
      uint64_t v54 = v132;
      uint64_t v55 = v135;
      (*(void (**)(char *, void, uint64_t))(v133 + 104))(v132, enum case for BlendMode.destinationOut(_:), v135);
      uint64_t v56 = (uint64_t)v134;
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v134, v54, v55);
      uint64_t v57 = (uint64_t)v130;
      sub_100061D30(v56, (uint64_t)&v130[*(int *)(v129 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
      *(void *)uint64_t v57 = v43;
      *(_WORD *)(v57 + 8) = 256;
      *(unsigned char *)(v57 + 16) = v44;
      *(void *)(v57 + 24) = v46;
      *(void *)(v57 + 32) = v48;
      *(void *)(v57 + 40) = v50;
      *(void *)(v57 + 48) = v52;
      *(unsigned char *)(v57 + 56) = 0;
      swift_retain();
      sub_100061D98(v56, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
      swift_release();
      sub_100083280();
      uint64_t v58 = (uint64_t)v138;
      sub_1000832E0();
      sub_100019284(v57, v58, &qword_1000AA4F0);
      sub_1000681A4(v42);
      uint64_t v59 = sub_10005FB7C((SEL *)&selRef_systemGray2Color, (SEL *)&selRef_traitCollectionWithAccessibilityContrast_, (SEL *)&selRef_systemGray2Color);
      v146((char *)v42, v141);
      LOBYTE(v53) = sub_100083300();
      sub_100082F60();
      uint64_t v61 = v60;
      uint64_t v63 = v62;
      uint64_t v65 = v64;
      uint64_t v67 = v66;
      uint64_t v68 = v136;
      sub_10001A720(v58, v136, &qword_1000AA4F8);
      uint64_t v69 = v142;
      sub_10001A720(v68, v142, &qword_1000AA4F8);
      uint64_t v70 = v69 + *(int *)(sub_100002874(&qword_1000AA538) + 48);
      *(void *)uint64_t v70 = v59;
      *(_WORD *)(v70 + 8) = 256;
      *(unsigned char *)(v70 + 16) = v53;
      *(void *)(v70 + 24) = v61;
      *(void *)(v70 + 32) = v63;
      *(void *)(v70 + 40) = v65;
      *(void *)(v70 + 48) = v67;
      *(unsigned char *)(v70 + 56) = 0;
      *(void *)(v70 + 64) = 0x3FE0000000000000;
      swift_retain();
      sub_100019138(v68, &qword_1000AA4F8);
      sub_10001A720(v69, v150, &qword_1000AA4E8);
      swift_storeEnumTagMultiPayload();
      sub_100023D5C(&qword_1000AA520, &qword_1000AA4E8);
      uint64_t v71 = sub_1000028B8(&qword_1000AA498);
      unint64_t v72 = sub_100063560();
      double v160 = *(double *)&v71;
      unint64_t v161 = v72;
      uint64_t v40 = v159;
      swift_getOpaqueTypeConformance2();
      uint64_t v73 = v147;
      sub_100083230();
      uint64_t v74 = (uint64_t)v73;
      sub_100019138(v69, &qword_1000AA4E8);
      swift_release();
      sub_100019138(v58, &qword_1000AA4F8);
    }
    else
    {
      uint64_t v92 = sub_1000834A0();
      (*v41)(v20, v13);
      char v93 = sub_100083300();
      sub_100082F60();
      double v160 = *(double *)&v92;
      LOWORD(v161) = 256;
      LOBYTE(v162) = v93;
      uint64_t v163 = v94;
      uint64_t v164 = v95;
      uint64_t v165 = v96;
      uint64_t v166 = v97;
      char v167 = 0;
      uint64_t v98 = sub_100002874(&qword_1000AA498);
      unint64_t v99 = sub_100063560();
      uint64_t v100 = v139;
      sub_1000833C0();
      swift_release();
      uint64_t v101 = v140;
      uint64_t v102 = (uint64_t)v151;
      (*(void (**)(uint64_t, char *, char *))(v140 + 16))(v150, v100, v151);
      swift_storeEnumTagMultiPayload();
      sub_100023D5C(&qword_1000AA520, &qword_1000AA4E8);
      double v160 = *(double *)&v98;
      unint64_t v161 = v99;
      swift_getOpaqueTypeConformance2();
      uint64_t v74 = (uint64_t)v147;
      sub_100083230();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
    }
    sub_10001A720(v74, (uint64_t)v155, &qword_1000AA500);
    swift_storeEnumTagMultiPayload();
    sub_100002874(&qword_1000AA510);
    sub_1000636A0();
    sub_100023D5C(&qword_1000AA528, &qword_1000AA510);
    uint64_t v103 = (uint64_t)v153;
    sub_100083230();
    sub_100019138(v74, &qword_1000AA500);
    uint64_t v104 = v141;
LABEL_12:
    sub_1000681A4(v42);
    uint64_t v116 = sub_10005FB7C((SEL *)&selRef_systemGray3Color, (SEL *)&selRef_traitCollectionWithUserInterfaceStyle_, (SEL *)&selRef_whiteColor);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v104);
    sub_100082FA0();
    double v117 = v160;
    uint64_t v118 = v162;
    uint64_t v119 = v163;
    uint64_t v120 = v164;
    uint64_t v121 = sub_1000835D0();
    uint64_t v123 = v122;
    uint64_t v124 = v154;
    sub_10001A720(v103, v154, &qword_1000AA508);
    uint64_t v125 = v157;
    sub_10001A720(v124, v157, &qword_1000AA508);
    uint64_t v126 = v125 + *(int *)(sub_100002874(&qword_1000AA530) + 48);
    *(double *)uint64_t v126 = v117 * 0.5;
    *(double *)(v126 + 8) = v117;
    *(void *)(v126 + 16) = v161;
    *(void *)(v126 + 24) = v118;
    *(void *)(v126 + 32) = v119;
    *(void *)(v126 + 40) = v120;
    *(void *)(v126 + 48) = v116;
    *(_WORD *)(v126 + 56) = 256;
    *(void *)(v126 + 64) = v121;
    *(void *)(v126 + 72) = v123;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100019138(v103, &qword_1000AA508);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_100019138(v124, &qword_1000AA508);
  }
  uint64_t v151 = v20;
  uint64_t v75 = v158;
  sub_1000681A4((uint64_t)v18);
  uint64_t v76 = v159;
  char v77 = v143;
  (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v143, v18, v13);
  int v78 = (*(uint64_t (**)(char *, uint64_t))(v76 + 88))(v77, v13);
  if (v78 == enum case for ColorScheme.light(_:) || v78 == enum case for ColorScheme.dark(_:))
  {
    (*(void (**)(char *, void, void (*)(char *, uint64_t)))(v145 + 104))(v144, enum case for Color.RGBColorSpace.sRGB(_:), v146);
    uint64_t v79 = sub_1000834D0();
    uint64_t v80 = *(void (**)(char *, uint64_t))(v76 + 8);
    v80(v18, v13);
    char v81 = sub_100083300();
    sub_100082F60();
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    int v90 = *(unsigned __int8 *)(v75 + *(int *)(v37 + 24));
    uint64_t v42 = (uint64_t)v151;
    sub_1000681A4((uint64_t)v151);
    if (v90 == 1) {
      uint64_t v91 = sub_10005FB7C((SEL *)&selRef_systemGray2Color, (SEL *)&selRef_traitCollectionWithAccessibilityContrast_, (SEL *)&selRef_systemGray2Color);
    }
    else {
      uint64_t v91 = sub_1000834A0();
    }
    uint64_t v105 = v91;
    uint64_t v104 = v13;
    v80((char *)v42, v13);
    char v106 = sub_100083300();
    sub_100082F60();
    uint64_t v108 = v107;
    uint64_t v110 = v109;
    uint64_t v112 = v111;
    uint64_t v114 = v113;
    LOBYTE(v160) = 0;
    char v168 = 0;
    swift_retain();
    uint64_t v115 = v155;
    *char v155 = v79;
    *(_OWORD *)(v115 + 1) = xmmword_100087930;
    v115[3] = 0x3FF0000000000000;
    *((unsigned char *)v115 + 32) = v81;
    v115[5] = v83;
    v115[6] = v85;
    v115[7] = v87;
    v115[8] = v89;
    *((unsigned char *)v115 + 72) = 0;
    v115[10] = v105;
    *((_WORD *)v115 + 44) = 256;
    *((unsigned char *)v115 + 96) = v106;
    v115[13] = v108;
    v115[14] = v110;
    v115[15] = v112;
    v115[16] = v114;
    *((unsigned char *)v115 + 136) = 0;
    swift_retain();
    swift_storeEnumTagMultiPayload();
    sub_100002874(&qword_1000AA510);
    sub_1000636A0();
    sub_100023D5C(&qword_1000AA528, &qword_1000AA510);
    uint64_t v103 = (uint64_t)v153;
    sub_100083230();
    swift_release();
    swift_release();
    uint64_t v40 = v159;
    goto LABEL_12;
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

uint64_t sub_100061C0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100061C54()
{
  unint64_t result = qword_1000AA318;
  if (!qword_1000AA318)
  {
    sub_1000028B8(&qword_1000AA300);
    sub_100061C0C(&qword_1000AA308, (void (*)(uint64_t))type metadata accessor for CoarseUserLocationView);
    sub_100061C0C(&qword_1000AA310, (void (*)(uint64_t))type metadata accessor for PreciseUserLocationView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA318);
  }
  return result;
}

uint64_t sub_100061D30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100061D98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_100061DF8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_100002874(&qword_1000A8498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000836F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_100061FB4(uint64_t a1, uint64_t a2)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_100082F80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100002874(&qword_1000A8498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000836F0();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1000620C8(void *a1, void *a2, uint64_t a3)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100082F80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100002874(&qword_1000A8498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000836F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_100062234(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100019138((uint64_t)a1 + v7, &qword_1000A8498);
    sub_100002874(&qword_1000A8498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000836F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_1000623C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100082F80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100002874(&qword_1000A8498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1000836F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_100062544(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    uint64_t v6 = sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100019138((uint64_t)&a1[v8], &qword_1000A8498);
    uint64_t v11 = sub_100002874(&qword_1000A8498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000836F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1000626E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000626FC);
}

uint64_t sub_100062700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100062714);
}

void sub_100062718()
{
  sub_100062820(319, (unint64_t *)&unk_1000A82F8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100062820(319, &qword_1000A8898, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100062820(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100082F90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_100062874(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_100002874(&qword_1000A8498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000836F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  }
  return a1;
}

void *sub_100062A38(void *a1, void *a2, int *a3)
{
  sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100082F80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100002874(&qword_1000A8498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000836F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  return a1;
}

void *sub_100062BAC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100082F80();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100019138((uint64_t)a1 + v7, &qword_1000A8498);
    sub_100002874(&qword_1000A8498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000836F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

char *sub_100062D4C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100082F80();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100002874(&qword_1000A8498);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1000836F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  return a1;
}

char *sub_100062ED0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100019138((uint64_t)a1, &qword_1000A8250);
    uint64_t v6 = sub_100002874(&qword_1000A8250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100082F80();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100019138((uint64_t)&a1[v8], &qword_1000A8498);
    uint64_t v11 = sub_100002874(&qword_1000A8498);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000836F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  return a1;
}

uint64_t sub_10006307C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100063090);
}

uint64_t sub_100063094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8288);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_100002874(&qword_1000A8490);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1000631C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000631D4);
}

uint64_t sub_1000631D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100002874(&qword_1000A8288);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100002874(&qword_1000A8490);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1000632F0()
{
  sub_100062820(319, (unint64_t *)&unk_1000A82F8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100062820(319, &qword_1000A8898, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_10006340C()
{
  unint64_t result = qword_1000AA450;
  if (!qword_1000AA450)
  {
    sub_1000028B8(&qword_1000AA458);
    sub_100061C54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA450);
  }
  return result;
}

uint64_t sub_100063488()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000634A4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000634C0()
{
  unint64_t result = qword_1000AA478;
  if (!qword_1000AA478)
  {
    sub_1000028B8(&qword_1000AA468);
    sub_100023D5C(&qword_1000AA480, &qword_1000AA460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA478);
  }
  return result;
}

unint64_t sub_100063560()
{
  unint64_t result = qword_1000AA4A0;
  if (!qword_1000AA4A0)
  {
    sub_1000028B8(&qword_1000AA498);
    sub_100023D5C(&qword_1000A9310, &qword_1000A9318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4A0);
  }
  return result;
}

unint64_t sub_100063600()
{
  unint64_t result = qword_1000AA4C8;
  if (!qword_1000AA4C8)
  {
    sub_1000028B8(&qword_1000AA4B8);
    sub_100023D5C(&qword_1000AA4D0, &qword_1000AA4B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA4C8);
  }
  return result;
}

unint64_t sub_1000636A0()
{
  unint64_t result = qword_1000AA518;
  if (!qword_1000AA518)
  {
    sub_1000028B8(&qword_1000AA500);
    sub_100023D5C(&qword_1000AA520, &qword_1000AA4E8);
    sub_1000028B8(&qword_1000AA498);
    sub_100063560();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AA518);
  }
  return result;
}

uint64_t sub_10006377C()
{
  return sub_1000637F4(&qword_1000AA540, &qword_1000AA548, (void (*)(void))sub_1000634C0);
}

uint64_t sub_1000637B8()
{
  return sub_1000637F4(&qword_1000AA550, &qword_1000AA558, (void (*)(void))sub_100063600);
}

uint64_t sub_1000637F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    a3();
    sub_100061C0C(&qword_1000A86E0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1000638A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000837F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void **)((char *)a2 + v8);
    if (v11 == (void *)1)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = (void *)*((void *)v10 + 1);
      *(void *)uint64_t v9 = v11;
      *((void *)v9 + 1) = v13;
      id v14 = v11;
      id v15 = v13;
    }
  }
  return a1;
}

void sub_100063998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  if (*(void *)v5 != 1)
  {

    uint64_t v6 = *(void **)(v5 + 8);
  }
}

uint64_t sub_100063A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a2 + v7);
  if (v10 == (void *)1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *(void **)(v9 + 8);
    *(void *)uint64_t v8 = v10;
    *(void *)(v8 + 8) = v11;
    id v12 = v10;
    id v13 = v11;
  }
  return a1;
}

uint64_t sub_100063AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a1 + v7);
  uint64_t v11 = *(void **)v9;
  if (v10 != (void *)1)
  {
    if (v11 != (void *)1)
    {
      void *v8 = v11;
      id v15 = v11;

      uint64_t v16 = (void *)v8[1];
      uint64_t v17 = *(void **)(v9 + 8);
      v8[1] = v17;
      id v18 = v17;

      return a1;
    }
    sub_10001B23C((uint64_t)v8);
    goto LABEL_6;
  }
  if (v11 == (void *)1)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  void *v8 = v11;
  id v12 = *(void **)(v9 + 8);
  v8[1] = v12;
  id v13 = v11;
  id v14 = v12;
  return a1;
}

uint64_t sub_100063BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100063C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = *(void **)(a1 + v7);
  if (v10 != (void *)1)
  {
    if (*v9 != 1)
    {
      void *v8 = *v9;

      uint64_t v11 = (void *)v8[1];
      v8[1] = v9[1];

      return a1;
    }
    sub_10001B23C((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  return a1;
}

uint64_t sub_100063CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100063D08);
}

uint64_t sub_100063D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000837F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 - 1) & ~(((int)v10 - 1) >> 31);
  }
}

uint64_t sub_100063DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100063DE0);
}

uint64_t sub_100063DE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000837F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 + 1);
  }
  return result;
}

uint64_t type metadata accessor for NavigationETAEntryContent.ResolvedContent(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AA5B8);
}

uint64_t sub_100063EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100065CF8(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for TimelineProviderContext);
}

char *sub_100063EDC(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    if (*a2 == (char *)1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = a2[1];
      *(void *)a1 = v7;
      *((void *)a1 + 1) = v9;
      unint64_t v10 = v7;
      uint64_t v11 = v9;
    }
    id v12 = a2[3];
    *((void *)v4 + 2) = a2[2];
    *((void *)v4 + 3) = v12;
    *((_DWORD *)v4 + 8) = *((_DWORD *)a2 + 8);
    v4[36] = *((unsigned char *)a2 + 36);
    id v13 = a2[6];
    *((void *)v4 + 5) = a2[5];
    *((void *)v4 + 6) = v13;
    char v14 = *((unsigned char *)a2 + 56);
    uint64_t v15 = *(int *)(a3 + 36);
    uint64_t v16 = (char *)a2 + v15;
    uint64_t v17 = &v4[v15];
    v4[56] = v14;
    uint64_t v18 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v16, 1, v18))
    {
      uint64_t v21 = sub_100002874(&qword_1000A7A78);
      memcpy(v17, v16, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v16, v22);
      uint64_t v23 = *(int *)(v18 + 20);
      uint64_t v24 = &v17[v23];
      uint64_t v25 = &v16[v23];
      uint64_t v26 = *(void **)&v16[v23];
      if (v26 == (void *)1)
      {
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      }
      else
      {
        uint64_t v27 = (void *)*((void *)v25 + 1);
        *(void *)uint64_t v24 = v26;
        *((void *)v24 + 1) = v27;
        id v28 = v26;
        id v29 = v27;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
    }
  }
  return v4;
}

void sub_100064100(id *a1, uint64_t a2)
{
  if (*a1 != (id)1)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1000837F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = &v4[*(int *)(v5 + 20)];
    if (*(void *)v7 != 1)
    {

      uint64_t v8 = (void *)*((void *)v7 + 1);
    }
  }
}

uint64_t sub_100064208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  if (*(void *)a2 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *(void **)(a2 + 8);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    id v8 = v6;
    id v9 = v7;
  }
  uint64_t v10 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  char v12 = *(unsigned char *)(a2 + 56);
  uint64_t v13 = *(int *)(a3 + 36);
  char v14 = (char *)(a2 + v13);
  uint64_t v15 = (char *)(a1 + v13);
  *(unsigned char *)(a1 + 56) = v12;
  uint64_t v16 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v14, 1, v16))
  {
    uint64_t v19 = sub_100002874(&qword_1000A7A78);
    memcpy(v15, v14, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v14, v20);
    uint64_t v21 = *(int *)(v16 + 20);
    uint64_t v22 = &v15[v21];
    uint64_t v23 = &v14[v21];
    uint64_t v24 = *(void **)&v14[v21];
    if (v24 == (void *)1)
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
    else
    {
      uint64_t v25 = (void *)*((void *)v23 + 1);
      *(void *)uint64_t v22 = v24;
      *((void *)v22 + 1) = v25;
      id v26 = v24;
      id v27 = v25;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_1000643DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  if (*(void *)a1 == 1)
  {
    if (v7 != (void *)1)
    {
      *(void *)a1 = v7;
      id v8 = *(void **)(a2 + 8);
      *(void *)(a1 + 8) = v8;
      id v9 = v7;
      id v10 = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == (void *)1)
  {
    sub_10001B23C(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *(void *)a1 = v7;
  id v11 = v7;

  char v12 = *(void **)(a1 + 8);
  uint64_t v13 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v13;
  id v14 = v13;

LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v30 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v17, v18, v30);
      uint64_t v31 = *(int *)(v19 + 20);
      uint64_t v32 = (void **)&v17[v31];
      uint64_t v33 = &v18[v31];
      uint64_t v34 = *v32;
      uint64_t v35 = *(void **)v33;
      if (*v32 == (void *)1)
      {
        if (v35 != (void *)1)
        {
          char *v32 = v35;
          uint64_t v36 = (void *)*((void *)v33 + 1);
          v32[1] = v36;
          id v37 = v35;
          id v38 = v36;
          return a1;
        }
      }
      else
      {
        if (v35 != (void *)1)
        {
          char *v32 = v35;
          id v42 = v35;

          uint64_t v43 = v32[1];
          char v44 = (void *)*((void *)v33 + 1);
          v32[1] = v44;
          id v45 = v44;

          return a1;
        }
        sub_10001B23C((uint64_t)v32);
      }
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      return a1;
    }
    sub_1000667F8((uint64_t)v17, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    uint64_t v29 = sub_100002874(&qword_1000A7A78);
    memcpy(v17, v18, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  uint64_t v24 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v17, v18, v24);
  uint64_t v25 = *(int *)(v19 + 20);
  id v26 = &v17[v25];
  id v27 = &v18[v25];
  id v28 = *(void **)&v18[v25];
  if (v28 == (void *)1)
  {
    *(_OWORD *)id v26 = *(_OWORD *)v27;
  }
  else
  {
    *(void *)id v26 = v28;
    int v39 = (void *)*((void *)v27 + 1);
    *((void *)v26 + 1) = v39;
    id v40 = v28;
    id v41 = v39;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_100064708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)(a2 + v5);
  uint64_t v7 = (char *)(a1 + v5);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = sub_100002874(&qword_1000A7A78);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v6, v11);
    *(_OWORD *)&v7[*(int *)(v8 + 20)] = *(_OWORD *)&v6[*(int *)(v8 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_100064864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  if (*(void *)a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_10001B23C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

LABEL_6:
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (char *)(a1 + v10);
  char v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
      *(_OWORD *)&v11[*(int *)(v13 + 20)] = *(_OWORD *)&v12[*(int *)(v13 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      return a1;
    }
LABEL_11:
    uint64_t v19 = sub_100002874(&qword_1000A7A78);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  if (v17)
  {
    sub_1000667F8((uint64_t)v11, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_11;
  }
  uint64_t v21 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v11, v12, v21);
  uint64_t v22 = *(int *)(v13 + 20);
  int v23 = (void **)&v11[v22];
  uint64_t v24 = (void **)&v12[v22];
  uint64_t v25 = *v23;
  if (*v23 != (void *)1)
  {
    if (*v24 != (void *)1)
    {
      char *v23 = *v24;

      id v26 = v23[1];
      v23[1] = v24[1];

      return a1;
    }
    sub_10001B23C((uint64_t)v23);
  }
  *(_OWORD *)int v23 = *(_OWORD *)v24;
  return a1;
}

uint64_t sub_100064AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100064B08);
}

uint64_t sub_100064B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100002874(&qword_1000A7A78);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100064BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064BD0);
}

uint64_t sub_100064BD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100002874(&qword_1000A7A78);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NavigationETAEntryContent(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000AA648);
}

void sub_100064C9C()
{
  sub_100064D54();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100064D54()
{
  if (!qword_1000AA658)
  {
    type metadata accessor for NavigationETAEntryContent.ResolvedContent(255);
    unint64_t v0 = sub_1000839F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000AA658);
    }
  }
}

_UNKNOWN **sub_100064DAC()
{
  return &off_10009EF58;
}

uint64_t sub_100064DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100064DC8(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_100064DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000A7A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_100064E30(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *a2;
    if (*a2 == (char *)1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v8 = a2[1];
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v8;
      uint64_t v9 = v6;
      uint64_t v10 = v8;
    }
    uint64_t v11 = a2[3];
    *((void *)v4 + 2) = a2[2];
    *((void *)v4 + 3) = v11;
    *((_DWORD *)v4 + 8) = *((_DWORD *)a2 + 8);
    v4[36] = *((unsigned char *)a2 + 36);
    char v12 = a2[6];
    *((void *)v4 + 5) = a2[5];
    *((void *)v4 + 6) = v12;
    v4[56] = *((unsigned char *)a2 + 56);
    uint64_t v13 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v14 = &v4[v13];
    int v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_100002874(&qword_1000A7A78);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v15, v20);
      uint64_t v21 = *(int *)(v16 + 20);
      uint64_t v22 = &v14[v21];
      int v23 = &v15[v21];
      uint64_t v24 = *(void **)&v15[v21];
      if (v24 == (void *)1)
      {
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      }
      else
      {
        uint64_t v25 = (void *)*((void *)v23 + 1);
        *(void *)uint64_t v22 = v24;
        *((void *)v22 + 1) = v25;
        id v26 = v24;
        id v27 = v25;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v28 = *(int *)(a3 + 20);
    uint64_t v29 = *(char **)((char *)a2 + v28);
    *(void *)&v4[v28] = v29;
    id v30 = v29;
  }
  return v4;
}

void sub_100065078(id *a1, uint64_t a2)
{
  if (*a1 != (id)1)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v5 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1000837F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = (id *)&v4[*(int *)(v5 + 20)];
    if (*v7 != (id)1)
    {
    }
  }
  uint64_t v8 = *(id *)((char *)a1 + *(int *)(a2 + 20));
}

uint64_t sub_100065190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  if (*(void *)a2 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v6 = *(void **)(a2 + 8);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    id v7 = v5;
    id v8 = v6;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  char v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_100002874(&qword_1000A7A78);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
    uint64_t v19 = *(int *)(v14 + 20);
    uint64_t v20 = &v12[v19];
    uint64_t v21 = &v13[v19];
    uint64_t v22 = *(void **)&v13[v19];
    if (v22 == (void *)1)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      int v23 = (void *)*((void *)v21 + 1);
      *(void *)uint64_t v20 = v22;
      *((void *)v20 + 1) = v23;
      id v24 = v22;
      id v25 = v23;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v26 = *(int *)(a3 + 20);
  id v27 = *(void **)(a2 + v26);
  *(void *)(a1 + v26) = v27;
  id v28 = v27;
  return a1;
}

uint64_t sub_100065388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  id v7 = *(void **)a2;
  if (*(void *)a1 == 1)
  {
    if (v7 != (void *)1)
    {
      *(void *)a1 = v7;
      id v8 = *(void **)(a2 + 8);
      *(void *)(a1 + 8) = v8;
      id v9 = v7;
      id v10 = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == (void *)1)
  {
    sub_10001B23C(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *(void *)a1 = v7;
  id v11 = v7;

  char v12 = *(void **)(a1 + 8);
  uint64_t v13 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v13;
  id v14 = v13;

LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v16 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v30 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v17, v18, v30);
      uint64_t v31 = *(int *)(v19 + 20);
      uint64_t v32 = (void **)&v17[v31];
      uint64_t v33 = &v18[v31];
      uint64_t v34 = *v32;
      uint64_t v35 = *(void **)v33;
      if (*v32 == (void *)1)
      {
        if (v35 != (void *)1)
        {
          char *v32 = v35;
          uint64_t v36 = (void *)*((void *)v33 + 1);
          v32[1] = v36;
          id v37 = v35;
          id v38 = v36;
          goto LABEL_24;
        }
      }
      else
      {
        if (v35 != (void *)1)
        {
          char *v32 = v35;
          id v42 = v35;

          uint64_t v43 = v32[1];
          char v44 = (void *)*((void *)v33 + 1);
          v32[1] = v44;
          id v45 = v44;

          goto LABEL_24;
        }
        sub_10001B23C((uint64_t)v32);
      }
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      goto LABEL_24;
    }
    sub_1000667F8((uint64_t)v17, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    uint64_t v29 = sub_100002874(&qword_1000A7A78);
    memcpy(v17, v18, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_24;
  }
  uint64_t v24 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v17, v18, v24);
  uint64_t v25 = *(int *)(v19 + 20);
  uint64_t v26 = &v17[v25];
  id v27 = &v18[v25];
  id v28 = *(void **)&v18[v25];
  if (v28 == (void *)1)
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  else
  {
    *(void *)uint64_t v26 = v28;
    int v39 = (void *)*((void *)v27 + 1);
    *((void *)v26 + 1) = v39;
    id v40 = v28;
    id v41 = v39;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_24:
  uint64_t v46 = *(int *)(a3 + 20);
  uint64_t v47 = *(void **)(a2 + v46);
  uint64_t v48 = *(void **)(a1 + v46);
  *(void *)(a1 + v46) = v47;
  id v49 = v47;

  return a1;
}

uint64_t sub_1000656DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  id v8 = (char *)(a1 + v7);
  id v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100002874(&qword_1000A7A78);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10006585C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  if (*(void *)a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_10001B23C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

LABEL_6:
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
      *(_OWORD *)&v11[*(int *)(v13 + 20)] = *(_OWORD *)&v12[*(int *)(v13 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v19 = sub_100002874(&qword_1000A7A78);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  if (v17)
  {
    sub_1000667F8((uint64_t)v11, type metadata accessor for NavigationETAEntryContent.ResolvedContent);
    goto LABEL_11;
  }
  uint64_t v23 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v11, v12, v23);
  uint64_t v24 = *(int *)(v13 + 20);
  uint64_t v25 = (void **)&v11[v24];
  uint64_t v26 = (void **)&v12[v24];
  id v27 = *v25;
  if (*v25 != (void *)1)
  {
    if (*v26 != (void *)1)
    {
      void *v25 = *v26;

      id v28 = v25[1];
      v25[1] = v26[1];

      goto LABEL_12;
    }
    sub_10001B23C((uint64_t)v25);
  }
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
LABEL_12:
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  return a1;
}

uint64_t sub_100065B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100065B24);
}

uint64_t sub_100065B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NavigationETAEntryContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100065BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100065BF8);
}

uint64_t sub_100065BF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for NavigationETAEntryContent(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for NavigationETAEntryContentResolver(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AA720);
}

uint64_t sub_100065CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100065CF8(a1, a2, a3, type metadata accessor for NavigationETAEntryContent);
}

uint64_t sub_100065CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100065D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v38 = a2;
  uint64_t v7 = sub_100002874(&qword_1000A7F30);
  __chkstk_darwin(v7 - 8);
  id v37 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000837F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v34 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = type metadata accessor for NavigationETAEntryContentResolver(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = *(id *)(v5 + *(int *)(__chkstk_darwin(v15 - 8) + 28));
  sub_100066790(v5, (uint64_t)v18, type metadata accessor for NavigationETAEntryContentResolver);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v32(v14, a1, v9);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v20 = (v17 + *(unsigned __int8 *)(v10 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = swift_allocObject();
  sub_1000665D8((uint64_t)v18, v21 + v19);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v21 + v20, v14, v9);
  int v22 = (void *)(v21 + ((v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v23 = v36;
  *int v22 = v35;
  v22[1] = v23;
  uint64_t v24 = (uint64_t)v34;
  v32(v34, a1, v9);
  type metadata accessor for NavigationETASnapshotter();
  swift_allocObject();
  swift_retain();
  id v25 = v33;
  sub_10005F244(v24, v25);

  uint64_t v26 = sub_100082E40();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v37, v38, v26);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_10006663C;
  *(void *)(v29 + 24) = v21;
  swift_retain();
  sub_1000307D4(v28, (uint64_t)sub_100066788, v29);
  swift_release();
  swift_release();
  sub_100019138(v28, &qword_1000A7F30);
  return swift_release();
}

uint64_t sub_100066154(void *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v10 = sub_100002874(&qword_1000A7B28);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NavigationETAEntryContent(0);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100066790(a3, (uint64_t)v16, type metadata accessor for NavigationETAEntryContent);
  uint64_t v17 = (uint64_t)&v16[*(int *)(v14 + 44)];
  sub_100019138(v17, &qword_1000A7A78);
  uint64_t v18 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a4, v18);
  uint64_t v19 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  unint64_t v20 = (void *)(v17 + *(int *)(v19 + 20));
  void *v20 = a1;
  v20[1] = a2;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  sub_100066790((uint64_t)v16, (uint64_t)v12, type metadata accessor for NavigationETAEntryContent);
  uint64_t v21 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 0, 1, v21);
  sub_10005A738(a1, a2);
  a5(v12);
  sub_100019138((uint64_t)v12, &qword_1000A7B28);
  return sub_1000667F8((uint64_t)v16, type metadata accessor for NavigationETAEntryContent);
}

uint64_t sub_1000663AC()
{
  uint64_t v15 = type metadata accessor for NavigationETAEntryContentResolver(0);
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
  uint64_t v2 = (v1 + 16) & ~v1;
  uint64_t v3 = *(void *)(*(void *)(v15 - 8) + 64);
  uint64_t v4 = sub_1000837F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = *(void *)(v5 + 64);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = *(void **)(v0 + v2);
  if (v8 != (void *)1)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v7 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
  uint64_t v10 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
    uint64_t v11 = (id *)(v9 + *(int *)(v10 + 20));
    if (*v11 != (id)1)
    {
    }
  }
  uint64_t v12 = (v2 + v3 + v6) & ~v6;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v12, v4);
  swift_release();

  return _swift_deallocObject(v0, ((v14 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v1 | v6 | 7);
}

uint64_t sub_1000665D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NavigationETAEntryContentResolver(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006663C(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for NavigationETAEntryContentResolver(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1000837F0() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void (**)(char *))(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100066154(a1, a2, v2 + v6, v2 + v9, v10);
}

uint64_t sub_100066750()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100066788(uint64_t a1)
{
  sub_10005EC18(a1, *(void (**)(void *, void *))(v1 + 16));
}

uint64_t sub_100066790(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000667F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100066858@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_100002874(&qword_1000A8170);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (int *)type metadata accessor for GeneralMapsWidget();
  uint64_t v3 = (uint64_t *)((char *)a1 + v2[6]);
  if (qword_1000A7A10 != -1) {
    swift_once();
  }
  uint64_t v4 = (objc_class *)qword_1000ACBD0;
  v15._countAndFlagsBits = 0x8000000100096480;
  v17._object = (void *)0x8000000100096200;
  v17._countAndFlagsBits = 0xD000000000000017;
  v19.value._countAndFlagsBits = 0;
  v19.value._object = 0;
  v5.super.Class isa = (Class)qword_1000ACBD0;
  v21._countAndFlagsBits = 1936744781;
  v21._object = (void *)0xE400000000000000;
  *uint64_t v3 = sub_100082D70(v17, v19, v5, v21, v15);
  v3[1] = v6;
  uint64_t v7 = (uint64_t *)((char *)a1 + v2[7]);
  v22._countAndFlagsBits = 0xD000000000000040;
  v16._countAndFlagsBits = 0x80000001000964F0;
  v18._object = (void *)0x8000000100096220;
  v22._object = (void *)0x80000001000964A0;
  v18._countAndFlagsBits = 0xD000000000000017;
  v20.value._countAndFlagsBits = 0;
  v20.value._object = 0;
  v8.super.Class isa = v4;
  uint64_t *v7 = sub_100082D70(v18, v20, v8, v22, v16);
  v7[1] = v9;
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100082F00();
  sub_10001859C(v10, (uint64_t)qword_1000ACBA8);
  uint64_t v11 = sub_100082EE0();
  os_log_type_t v12 = sub_100083910();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "GeneralMapsWidget: init", v13, 2u);
    swift_slowDealloc();
  }

  if (qword_1000A7A08 != -1) {
    swift_once();
  }
  sub_1000474D0();
  [self configureGEOServiceTraitsAndClientCapabilitiesHardwareIdentifier];
  type metadata accessor for GeneralMapsTimelineProvider(0);
  swift_allocObject();
  uint64_t result = sub_1000690BC();
  *(uint64_t *)((char *)a1 + v2[5]) = result;
  return result;
}

uint64_t sub_100066AEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = a1;
  uint64_t v3 = sub_100002874(&qword_1000A7A40);
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  __chkstk_darwin(v3);
  *(void *)&long long v65 = &v59[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100002874(&qword_1000A7A38);
  uint64_t v69 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v68 = &v59[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = sub_100002874(&qword_1000A7A30);
  uint64_t v71 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v70 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = sub_100002874(&qword_1000A7A28);
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  unint64_t v72 = &v59[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v79 = sub_100002874(&qword_1000A7A20);
  uint64_t v76 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v74 = &v59[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100002874(&qword_1000AA7F8);
  uint64_t v80 = *(void *)(v10 - 8);
  uint64_t v81 = v10;
  __chkstk_darwin(v10);
  int v78 = &v59[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_100083730();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String v15 = &v59[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for GeneralMapsWidget();
  __chkstk_darwin(v16);
  Swift::String v18 = &v59[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100082F00();
  sub_10001859C(v19, (uint64_t)qword_1000ACBA8);
  sub_100068CE0(v1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for GeneralMapsWidget);
  Swift::String_optional v20 = sub_100082EE0();
  os_log_type_t v21 = sub_100083910();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v64 = v5;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v62 = v16;
    uint64_t v84 = v24;
    uint64_t v63 = v1;
    *(_DWORD *)uint64_t v23 = 136446210;
    uint64_t v61 = v23 + 4;
    sub_10006821C(&qword_1000A8170, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v15);
    sub_100068C94((unint64_t *)&qword_1000A8CE8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v25 = sub_100083BF0();
    uint64_t v26 = v12;
    unint64_t v28 = v27;
    uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    uint64_t v30 = v15;
    uint64_t v31 = v13;
    uint64_t v32 = v26;
    v29(v30, v26);
    uint64_t v83 = sub_10006863C(v25, v28, &v84);
    uint64_t v2 = v63;
    sub_100083A00();
    swift_bridgeObjectRelease();
    sub_1000685E0((uint64_t)v18);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "GeneralMapsWidget: Avocado called GeneralMapsWidget 'body' (requesting size %{public}s)", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v62;
    swift_slowDealloc();
    uint64_t v5 = v64;
    swift_slowDealloc();
  }
  else
  {
    sub_1000685E0((uint64_t)v18);

    uint64_t v31 = v13;
    uint64_t v32 = v12;
  }
  uint64_t v84 = *(void *)(v2 + *(int *)(v16 + 20));
  type metadata accessor for WidgetContentView();
  type metadata accessor for GeneralMapsTimelineProvider(0);
  sub_100068C94(&qword_1000AA800, (void (*)(uint64_t))type metadata accessor for WidgetContentView);
  sub_100068C94(&qword_1000AA808, (void (*)(uint64_t))type metadata accessor for GeneralMapsTimelineProvider);
  swift_retain();
  uint64_t v33 = v65;
  sub_100083780();
  unint64_t v34 = sub_100002900();
  uint64_t v36 = v67;
  uint64_t v35 = v68;
  sub_100083200();
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v33, v36);
  sub_100083180();
  uint64_t v84 = v36;
  unint64_t v85 = v34;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = v70;
  sub_100083210();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v35, v5);
  uint64_t v69 = sub_100002874(&qword_1000AA810);
  uint64_t v39 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v63 = *(void *)(v31 + 72);
  uint64_t v40 = v63;
  uint64_t v41 = 2 * v63;
  uint64_t v62 = 2 * v63;
  uint64_t v42 = (v39 + 32) & ~v39;
  uint64_t v66 = v42;
  uint64_t v67 = v39 | 7;
  uint64_t v68 = (unsigned char *)(v42 + 3 * v63);
  uint64_t v43 = swift_allocObject();
  long long v65 = xmmword_1000877A0;
  *(_OWORD *)(v43 + 16) = xmmword_1000877A0;
  uint64_t v44 = v43 + v42;
  LODWORD(v64) = enum case for WidgetFamily.systemSmall(_:);
  id v45 = *(void (**)(uint64_t))(v31 + 104);
  v45(v44);
  LODWORD(v61) = enum case for WidgetFamily.systemMedium(_:);
  v45(v44 + v40);
  unsigned int v60 = enum case for WidgetFamily.systemLarge(_:);
  v45(v44 + v41);
  uint64_t v84 = v5;
  unint64_t v85 = OpaqueTypeConformance2;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = v72;
  uint64_t v47 = v73;
  sub_1000831E0();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v38, v47);
  sub_100083180();
  uint64_t v84 = v47;
  unint64_t v85 = v46;
  uint64_t v49 = swift_getOpaqueTypeConformance2();
  uint64_t v50 = v74;
  uint64_t v51 = v77;
  sub_1000831D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v48, v51);
  uint64_t v84 = v51;
  unint64_t v85 = v49;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v78;
  uint64_t v53 = v79;
  sub_100083220();
  (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v50, v53);
  sub_100002874(&qword_1000AA818);
  sub_100083750();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100087780;
  sub_100083740();
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v65;
  uint64_t v56 = v55 + v66;
  ((void (*)(uint64_t, void, uint64_t))v45)(v55 + v66, v64, v32);
  ((void (*)(uint64_t, void, uint64_t))v45)(v56 + v63, v61, v32);
  ((void (*)(uint64_t, void, uint64_t))v45)(v56 + v62, v60, v32);
  uint64_t v84 = v53;
  unint64_t v85 = v52;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = v81;
  sub_1000831F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v80 + 8))(v54, v57);
}

uint64_t sub_100067728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100068CE0(a1, a2, type metadata accessor for GeneralMapsTimelineEntry);
  uint64_t v3 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 0, 1, v3);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

uint64_t type metadata accessor for GeneralMapsWidget()
{
  uint64_t result = qword_1000AA7B8;
  if (!qword_1000AA7B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100067870(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100083730();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    Swift::String v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000679C4(uint64_t a1)
{
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_100083730();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100067A84(void *a1, void *a2, int *a3)
{
  sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_100083730();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100067B88(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100067CCC((uint64_t)a1);
    sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_100083730();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100067CCC(uint64_t a1)
{
  uint64_t v2 = sub_100002874(&qword_1000A8170);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100067D2C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_100083730();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_100067E14(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100067CCC((uint64_t)a1);
    uint64_t v6 = sub_100002874(&qword_1000A8170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_100083730();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_release();
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  Swift::String v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100067F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100067F4C);
}

uint64_t sub_100067F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100002874(&qword_1000A8178);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100068010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100068024);
}

uint64_t sub_100068024(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100002874(&qword_1000A8178);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1000680E4()
{
  sub_10004A074();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100068188()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000681A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10006821C(&qword_1000A8250, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_1000681E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10006821C(&qword_1000A8170, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_10006821C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_100083120();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002874(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A720(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_100083940();
    os_log_type_t v21 = sub_1000832F0();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_10006863C(v27, v25, &v29);
      sub_100083A00();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100083110();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1000684D4@<X0>(uint64_t a1@<X8>)
{
  return sub_10006821C(&qword_1000A8728, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_100068514@<X0>(uint64_t a1@<X8>)
{
  return sub_10006821C(&qword_1000A8498, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x8000000100096530, a1);
}

uint64_t sub_10006854C@<X0>(uint64_t a1@<X8>)
{
  return sub_10006821C(&qword_1000A84A0, (uint64_t (*)(void))&type metadata accessor for RedactionReasons, 0xD000000000000010, 0x8000000100096510, a1);
}

uint64_t sub_100068584@<X0>(uint64_t a1@<X8>)
{
  return sub_10006821C(&qword_1000A89E0, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x8000000100096550, a1);
}

uint64_t sub_1000685BC()
{
  return sub_1000830F0();
}

uint64_t sub_1000685E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GeneralMapsWidget();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006863C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100068710(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100034C08((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100034C08((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100037104((uint64_t)v12);
  return v7;
}

uint64_t sub_100068710(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_100083A10();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000688CC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_100083AC0();
  if (!v8)
  {
    sub_100083B60();
    __break(1u);
LABEL_17:
    uint64_t result = sub_100083BD0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000688CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100068964(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100068B44(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100068B44(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100068964(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100068ADC(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_100083AA0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_100083B60();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1000838A0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_100083BD0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_100083B60();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100068ADC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100002874(&qword_1000AA820);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100068B44(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100002874(&qword_1000AA820);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_100083BD0();
  __break(1u);
  return result;
}

uint64_t sub_100068C94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100068CE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100068D48()
{
  return sub_1000830F0();
}

uint64_t sub_100068D6C()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100068EE0(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_100075828((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_100083B40();

  if (!v4) {
    return 0;
  }
  sub_1000188D8(0, (unint64_t *)&unk_1000A7F70);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_100068FB8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100068FFC()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_expiration;
  uint64_t v2 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_collector));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_group));
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_1000690BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100083990();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100083970();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_100083630();
  __chkstk_darwin(v7 - 8);
  v15[0] = sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(unsigned char *)(v0 + 96) = 0;
  sub_100083620();
  v15[1] = &_swiftEmptyArrayStorage;
  sub_1000757E0(&qword_1000AAAE0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100002874(&qword_1000AAAE8);
  sub_100074BCC(&qword_1000AAAF0, &qword_1000AAAE8);
  sub_100083A40();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(void *)(v0 + 104) = sub_1000839C0();
  *(void *)(v0 + 112) = 0;
  uint64_t v8 = v0 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_timeline;
  uint64_t v9 = type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_maxTimelineAge) = 0x402E000000000000;
  *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_maxFreshLocationAge) = 0x4072C00000000000;
  *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_pendingRequestCount) = 0;
  *(void *)(v1
            + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider____lazy_storage___briefDateComponentsFormatter) = 0;
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100082F00();
  sub_10001859C(v10, (uint64_t)qword_1000ACBA8);
  size_t v11 = sub_100082EE0();
  os_log_type_t v12 = sub_100083920();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "GeneralMapsTimelineProvider init", v13, 2u);
    swift_slowDealloc();
  }

  return v1;
}

uint64_t sub_100069460()
{
  uint64_t v1 = v0;
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100082F00();
  sub_10001859C(v2, (uint64_t)qword_1000ACBA8);
  uint64_t v3 = sub_100082EE0();
  os_log_type_t v4 = sub_100083920();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "GeneralMapsTimelineProvider deinit", v5, 2u);
    swift_slowDealloc();
  }

  sub_100018854(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72));
  swift_release();
  sub_100019138(v1 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_timeline, &qword_1000AAAF8);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider____lazy_storage___briefDateComponentsFormatter));
  return v1;
}

uint64_t sub_1000695A4()
{
  sub_100069460();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1000695FC()
{
  return type metadata accessor for GeneralMapsTimelineProvider(0);
}

uint64_t type metadata accessor for GeneralMapsTimelineProvider(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000AA878);
}

void sub_100069624()
{
  sub_1000696EC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000696EC()
{
  if (!qword_1000AA888)
  {
    type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline(255);
    unint64_t v0 = sub_1000839F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000AA888);
    }
  }
}

uint64_t type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AAA90);
}

uint64_t sub_100069764()
{
  return type metadata accessor for GeneralMapsTimelineProvider.StateCollectionSession(0);
}

uint64_t type metadata accessor for GeneralMapsTimelineProvider.StateCollectionSession(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AA980);
}

uint64_t sub_10006978C()
{
  uint64_t result = sub_100082E40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10006982C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_100082E40();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100069910(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100082E40();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100069988(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100082E40();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_100069A20(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100082E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_100069AB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100082E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100069B30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100082E40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100069BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100069BD0);
}

uint64_t sub_100069BD0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100082E40();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    size_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100069C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100069C94);
}

void *sub_100069C94(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100082E40();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100069D3C()
{
  uint64_t result = sub_100082E40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100069DD8()
{
  return sub_1000757E0(qword_1000AAAC8, (void (*)(uint64_t))type metadata accessor for GeneralMapsTimelineEntry);
}

uint64_t sub_100069E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v6 = sub_100083610();
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100083630();
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  __chkstk_darwin(v9);
  size_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082E40();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v3 + 104);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18 + v16, v15, v12);
  uint64_t v19 = (void *)(v18 + v17);
  uint64_t v20 = v25;
  void *v19 = v24;
  v19[1] = v20;
  aBlock[4] = sub_100075548;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009F070;
  os_log_type_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_100083620();
  uint64_t v30 = &_swiftEmptyArrayStorage;
  sub_1000757E0((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100074BCC(qword_1000A8810, (uint64_t *)&unk_1000A7F80);
  sub_100083A40();
  sub_1000839B0();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  return swift_release();
}

uint64_t sub_10006A1B8(uint64_t a1, char *a2, void (*a3)(void), uint64_t a4)
{
  unint64_t v99 = a3;
  uint64_t v100 = a2;
  uint64_t v6 = sub_100002874(&qword_1000AAAF8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = (void *)type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline(0);
  uint64_t v9 = *(v92 - 1);
  __chkstk_darwin(v92);
  os_log_t v90 = (os_log_t)((char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100083610();
  uint64_t v97 = *(void *)(v11 - 8);
  uint64_t v98 = v11;
  __chkstk_darwin(v11);
  uint64_t v94 = (char *)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100083630();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  char v93 = (char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100082E40();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  os_log_type_t v21 = (char *)v81 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v81 - v22;
  uint64_t v101 = a1;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24)
  {
    uint64_t v89 = a4;
    swift_retain();
    sub_100082E30();
    uint64_t v91 = v24;
    uint64_t v25 = (char *)(v24
                 + OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_expiration);
    swift_beginAccess();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v88 = v25;
    uint64_t v86 = v26;
    v26(v21, v25, v14);
    LOBYTE(v25) = sub_100082DF0();
    uint64_t v85 = v15;
    uint64_t v27 = *(void (**)(char *, uint64_t))(v15 + 8);
    v27(v21, v14);
    uint64_t v87 = v27;
    v27(v23, v14);
    if (v25)
    {
      if (qword_1000A7A00 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_100082F00();
      sub_10001859C(v28, (uint64_t)qword_1000ACBA8);
      uint64_t v29 = sub_100082EE0();
      os_log_type_t v30 = sub_100083920();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "GeneralMapsTimelineProvider: refreshIfNeeded: was already refreshing", v31, 2u);
        swift_slowDealloc();
      }

      uint64_t v32 = v88;
      uint64_t v33 = v86;
      v86(v23, v88, v14);
      unint64_t v34 = v100;
      char v35 = sub_100082DE0();
      v87(v23, v14);
      if (v35)
      {
        v33(v18, v34, v14);
        swift_retain();
        uint64_t v36 = sub_100082EE0();
        os_log_type_t v37 = sub_100083910();
        LODWORD(v92) = v37;
        if (os_log_type_enabled(v36, v37))
        {
          os_log_t v90 = v36;
          uint64_t v38 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v38 = 134349056;
          uint64_t v84 = v38 + 4;
          v33(v23, v88, v14);
          sub_100082DC0();
          uint64_t v40 = v39;
          uint64_t v41 = v87;
          v87(v23, v14);
          uint64_t aBlock = v40;
          unint64_t v34 = v100;
          sub_100083A00();
          swift_release();
          v41(v18, v14);
          uint64_t v36 = v90;
          _os_log_impl((void *)&_mh_execute_header, v90, (os_log_type_t)v92, "GeneralMapsTimelineProvider: refreshIfNeeded: extending refresh session expiration by %{public}f seconds", v38, 0xCu);
          uint64_t v32 = v88;
          swift_slowDealloc();
        }
        else
        {
          swift_release();
          v87(v18, v14);
        }

        v33(v23, v34, v14);
        swift_beginAccess();
        (*(void (**)(char *, char *, uint64_t))(v85 + 40))(v32, v23, v14);
        swift_endAccess();
      }
      uint64_t v107 = v99;
      uint64_t v108 = v89;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v104 = 1107296256;
      uint64_t v105 = sub_100068EDC;
      char v106 = &unk_10009F0E8;
      uint64_t v77 = _Block_copy(&aBlock);
      swift_retain();
      int v78 = v93;
      sub_100083620();
      uint64_t v109 = &_swiftEmptyArrayStorage;
      sub_1000757E0((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100002874((uint64_t *)&unk_1000A7F80);
      sub_100074BCC(qword_1000A8810, (uint64_t *)&unk_1000A7F80);
      uint64_t v79 = v94;
      uint64_t v80 = v98;
      sub_100083A40();
      sub_100083960();
      _Block_release(v77);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v79, v80);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v78, v96);
      swift_release();
      return swift_release();
    }
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_100082F00();
    sub_10001859C(v42, (uint64_t)qword_1000ACBA8);
    swift_retain_n();
    uint64_t v43 = sub_100082EE0();
    os_log_type_t v44 = sub_100083910();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      LODWORD(v84) = v45;
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = (void **)swift_slowAlloc();
      uint64_t aBlock = v83;
      uint64_t v82 = v46;
      *(_DWORD *)uint64_t v46 = 136446210;
      v81[1] = v46 + 4;
      v86(v23, v88, v14);
      sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v47 = sub_100083BF0();
      unint64_t v49 = v48;
      v87(v23, v14);
      uint64_t v109 = (void *)sub_10006863C(v47, v49, (uint64_t *)&aBlock);
      sub_100083A00();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v84, "GeneralMapsTimelineProvider: refreshIfNeeded: clearing expired refresh session (expired at %{public}s)", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    a4 = v89;
    uint64_t v15 = v85;
    if (*(void *)(v101 + 112))
    {
      swift_retain();
      sub_10000A050();
      swift_release();
    }
    swift_release();
    *(void *)(v101 + 112) = 0;
    swift_release();
  }
  uint64_t v50 = v101 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_timeline;
  swift_beginAccess();
  sub_10001A720(v50, (uint64_t)v8, &qword_1000AAAF8);
  if ((*(unsigned int (**)(char *, uint64_t, void *))(v9 + 48))(v8, 1, v92) == 1)
  {
    sub_100019138((uint64_t)v8, &qword_1000AAAF8);
LABEL_27:
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_100082F00();
    sub_10001859C(v60, (uint64_t)qword_1000ACBA8);
    uint64_t v61 = sub_100082EE0();
    os_log_type_t v62 = sub_100083920();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "GeneralMapsTimelineProvider: refreshIfNeeded: will refresh!", v63, 2u);
      swift_slowDealloc();
    }

    uint64_t v64 = v101;
    long long v65 = *(void **)(v101 + 104);
    id v66 = objc_allocWithZone((Class)type metadata accessor for GeneralMapsStateCollector());
    uint64_t v92 = v65;
    uint64_t v67 = sub_100009260(v92);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v23, v100, v14);
    type metadata accessor for GeneralMapsTimelineProvider.StateCollectionSession(0);
    uint64_t v68 = swift_allocObject();
    uint64_t v69 = v15;
    uint64_t v70 = OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_group;
    uint64_t v71 = v67;
    *(void *)(v68 + v70) = dispatch_group_create();
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v68+ OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_expiration, v23, v14);
    *(void *)(v68
              + OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_collector) = v71;
    *(void *)(v64 + 112) = v68;
    swift_retain();
    swift_release();
    dispatch_group_enter(*(dispatch_group_t *)(v68
                                             + OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_group));
    uint64_t v107 = v99;
    uint64_t v108 = a4;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v104 = 1107296256;
    uint64_t v105 = sub_100068EDC;
    char v106 = &unk_10009F098;
    unint64_t v72 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v73 = v93;
    sub_100083620();
    uint64_t v102 = &_swiftEmptyArrayStorage;
    sub_1000757E0((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100002874((uint64_t *)&unk_1000A7F80);
    sub_100074BCC(qword_1000A8810, (uint64_t *)&unk_1000A7F80);
    uint64_t v74 = v94;
    uint64_t v75 = v98;
    sub_100083A40();
    sub_100083960();
    _Block_release(v72);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v73, v96);
    swift_release();
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = v64;
    *(void *)(v76 + 24) = v68;
    swift_retain();
    swift_retain();
    sub_1000099BC(v100, (uint64_t)sub_10007561C, v76);

    swift_release();
    return swift_release();
  }
  uint64_t v51 = (uint64_t)v8;
  os_log_t v52 = v90;
  sub_100077894(v51, (uint64_t)v90, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
  sub_100082E30();
  sub_100082DC0();
  double v54 = v53;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
  if (v54 >= 15.0)
  {
    sub_100075780((uint64_t)v52, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
    goto LABEL_27;
  }
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v55 = sub_100082F00();
  sub_10001859C(v55, (uint64_t)qword_1000ACBA8);
  uint64_t v56 = sub_100082EE0();
  os_log_type_t v57 = sub_100083920();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v58 = 0;
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "GeneralMapsTimelineProvider: refreshIfNeeded: refresh not needed", v58, 2u);
    swift_slowDealloc();
  }

  v99();
  return sub_100075780((uint64_t)v52, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
}

void sub_10006B19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a2 + 112);
  if (v3) {
    BOOL v4 = v3 == a3;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    char v11 = *(unsigned char *)(a1 + 80);
    uint64_t v12 = *(void *)(a1 + 72);
    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 48);
    uint64_t v15 = *(unsigned int *)(a1 + 16);
    uint64_t v16 = *(void *)(a2 + 16);
    uint64_t v17 = *(void *)(a2 + 24);
    uint64_t v18 = *(void *)(a2 + 32);
    uint64_t v19 = *(void **)(a2 + 40);
    uint64_t v20 = *(void *)(a2 + 48);
    uint64_t v21 = *(void *)(a2 + 56);
    uint64_t v22 = *(void *)(a2 + 64);
    uint64_t v23 = *(void **)(a2 + 72);
    *(_OWORD *)(a2 + 16) = *(_OWORD *)a1;
    *(void *)(a2 + 32) = v15;
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 24);
    *(void *)(a2 + 56) = v14;
    *(void *)(a2 + 64) = v13;
    *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 56);
    *(void *)(a2 + 88) = v12;
    *(unsigned char *)(a2 + 96) = v11;
    sub_100018854(v16, v17, v18, v19, v20, v21, v22, v23);
    sub_100075624(a1);
    sub_10006B34C();
    *(void *)(a2 + 112) = 0;
    swift_release();
    uint64_t v24 = *(NSObject **)(a3
                       + OBJC_IVAR____TtCC17GeneralMapsWidget27GeneralMapsTimelineProviderP33_E134A4B3F820D74145B932C0401CE63122StateCollectionSession_group);
    dispatch_group_leave(v24);
  }
  else
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_100082F00();
    sub_10001859C(v5, (uint64_t)qword_1000ACBA8);
    oslog = sub_100082EE0();
    os_log_type_t v6 = sub_100083930();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "GeneralMapsTimelineProvider: refreshIfNeeded: ignoring expired state collector", v7, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10006B34C()
{
  uint64_t v440 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v1 = __chkstk_darwin(v440);
  uint64_t v439 = (uint64_t)v427 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v442 = (void *)((char *)v427 - v3);
  uint64_t v492 = sub_100082E70();
  uint64_t v448 = *(void *)(v492 - 8);
  uint64_t v4 = __chkstk_darwin(v492);
  unint64_t v6 = (unint64_t)v427 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v491 = (char *)v427 - v7;
  uint64_t v476 = type metadata accessor for SuggestedDestinationEntryContent(0);
  uint64_t v8 = __chkstk_darwin(v476);
  uint64_t v479 = (uint64_t)v427 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v469 = (uint64_t)v427 - v11;
  __chkstk_darwin(v10);
  uint64_t v510 = (uint64_t)v427 - v12;
  uint64_t v465 = sub_100002874(&qword_1000A7F30);
  uint64_t v13 = __chkstk_darwin(v465);
  uint64_t v475 = (uint64_t)v427 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v460 = (uint64_t)v427 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v484 = (uint64_t)v427 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v464 = (uint64_t)v427 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v500 = (char *)v427 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v485 = (char *)v427 - v24;
  __chkstk_darwin(v23);
  *(void *)&long long v511 = (char *)v427 - v25;
  uint64_t v26 = sub_100002874(&qword_1000AAAF8);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)v427 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v487 = sub_100002874(&qword_1000AAB08);
  uint64_t v488 = *(void *)(v487 - 8);
  uint64_t v29 = __chkstk_darwin(v487);
  v435 = (char *)v427 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  v436 = (char *)v427 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v438 = (char *)v427 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v437 = (char *)v427 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v474 = (uint64_t)v427 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v468 = (uint64_t)v427 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v459 = (uint64_t)v427 - v42;
  __chkstk_darwin(v41);
  v503 = (char *)v427 - v43;
  v497 = (int *)type metadata accessor for NavigationETAEntryContent(0);
  __chkstk_darwin(v497);
  v506 = (char *)v427 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100082E40();
  uint64_t v495 = *(void *)(v45 - 8);
  uint64_t v46 = __chkstk_darwin(v45);
  v472 = (char *)v427 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __chkstk_darwin(v46);
  v447 = (char *)v427 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v449 = (char *)v427 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v493 = (char *)v427 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v498 = (char *)v427 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v483 = (char *)v427 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  v471 = (char *)v427 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v509 = (char *)v427 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  v499 = (char *)v427 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  unint64_t v66 = (unint64_t)v427 - v65;
  __chkstk_darwin(v64);
  v490 = (char *)v427 - v67;
  uint64_t v68 = type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline(0);
  uint64_t v461 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  v508 = (void *)((char *)v427 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = (void (*)(char *, char *, uint64_t))sub_1000836A0();
  uint64_t v71 = *((void *)v70 - 1);
  __chkstk_darwin(v70);
  uint64_t v73 = (char *)v427 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = *(void **)(v0 + 104);
  *(void *)uint64_t v73 = v74;
  (*(void (**)(char *, void, void *))(v71 + 104))(v73, enum case for DispatchPredicate.onQueue(_:), v70);
  id v75 = v74;
  uint64_t v76 = sub_1000836C0();
  int v78 = *(void (**)(char *, void *))(v71 + 8);
  uint64_t v77 = (void *)(v71 + 8);
  v78(v73, v70);
  if ((v76 & 1) == 0)
  {
LABEL_121:
    __break(1u);
LABEL_122:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v79 = *(void *)(v0 + 64);
  if (!v79)
  {
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v97 = sub_100082F00();
    sub_10001859C(v97, (uint64_t)qword_1000ACBA8);
    uint64_t v98 = sub_100082EE0();
    os_log_type_t v99 = sub_100083930();
    if (os_log_type_enabled(v98, v99))
    {
      uint64_t v100 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v100 = 0;
      _os_log_impl((void *)&_mh_execute_header, v98, v99, "GeneralMapsTimelineProvider: generateResolvableTimeline (failed: invalid state)", v100, 2u);
      swift_slowDealloc();
    }

    return;
  }
  unint64_t v433 = v6;
  v444 = v28;
  uint64_t v80 = *(void **)(v0 + 16);
  uint64_t v456 = *(void *)(v0 + 24);
  uint64_t v81 = *(void **)(v0 + 40);
  uint64_t v450 = *(void *)(v0 + 32);
  uint64_t v83 = *(void *)(v0 + 48);
  unint64_t v82 = *(void *)(v0 + 56);
  uint64_t v84 = *(void **)(v0 + 72);
  uint64_t v458 = *(void *)(v0 + 80);
  uint64_t v85 = *(void *)(v0 + 88);
  uint64_t v470 = v0;
  int v457 = *(unsigned __int8 *)(v0 + 96);
  uint64_t v443 = v68;
  uint64_t v86 = (char *)v508 + *(int *)(v68 + 20);
  unint64_t *v508 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v478 = v85;
  swift_bridgeObjectRetain();
  uint64_t v477 = (uint64_t)v80;
  id v87 = v80;
  unint64_t v6 = v82;
  id v446 = v87;
  v445 = v81;
  id v429 = v81;
  uint64_t v454 = v83;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v482 = v79;
  swift_bridgeObjectRetain();
  v467 = v84;
  uint64_t v73 = v84;
  sub_100082E30();
  uint64_t v77 = (void *)(v495 + 16);
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v495 + 16);
  uint64_t v76 = (uint64_t)v490;
  v70(v490, v86, v45);
  if (qword_1000A7A00 != -1) {
    goto LABEL_122;
  }
LABEL_4:
  uint64_t v88 = sub_100082F00();
  uint64_t v89 = sub_10001859C(v88, (uint64_t)qword_1000ACBA8);
  v501 = v77;
  v505 = (void (*)(void))v70;
  v70((char *)v66, (char *)v76, v45);
  uint64_t v507 = v89;
  os_log_t v90 = sub_100082EE0();
  os_log_type_t v91 = sub_100083910();
  BOOL v92 = os_log_type_enabled(v90, v91);
  v512 = (void *)v45;
  unint64_t v502 = v6;
  if (v92)
  {
    uint64_t v93 = swift_slowAlloc();
    v496 = v73;
    uint64_t v94 = (uint8_t *)v93;
    *(void *)&long long v515 = swift_slowAlloc();
    *(_DWORD *)uint64_t v94 = 136446210;
    uint64_t v70 = (void (*)(char *, char *, uint64_t))(v94 + 4);
    sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v95 = sub_100083BF0();
    uint64_t v519 = sub_10006863C(v95, v96, (uint64_t *)&v515);
    unint64_t v6 = v502;
    sub_100083A00();
    swift_bridgeObjectRelease();
    v504 = *(void (**)(unint64_t, uint64_t))(v495 + 8);
    v504(v66, v45);
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "GeneralMapsTimelineProvider: generateResolvableTimeline, starting at %{public}s", v94, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v73 = v496;
    swift_slowDealloc();
  }
  else
  {
    v504 = *(void (**)(unint64_t, uint64_t))(v495 + 8);
    v504(v66, v45);
  }

  uint64_t v45 = (uint64_t)v509;
  id v101 = v500;
  if (v467 && v478)
  {
    uint64_t v102 = v73;
    swift_bridgeObjectRetain();
    id v103 = [v102 waypoints];
    uint64_t v104 = v512;
    if (!v103)
    {
      __break(1u);
      return;
    }
    uint64_t v105 = v103;
    sub_1000188D8(0, &qword_1000AAB18);
    unint64_t v106 = sub_1000838D0();

    uint64_t v107 = v490;
    uint64_t v108 = (uint64_t *)v506;
    if (v106 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_100083B80();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v109 = *(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    id v110 = [v102 nextWaypoint];
    id v111 = [v110 name];

    if (v109 < 3)
    {
      if (!v111)
      {
        if (qword_1000A7A10 != -1) {
          swift_once();
        }
        v112.super.Class isa = (Class)qword_1000ACBD0;
        v113._countAndFlagsBits = 0xD00000000000001DLL;
        v426._countAndFlagsBits = 0x80000001000967D0;
        v113._object = (void *)0x80000001000967B0;
        v114.value._countAndFlagsBits = 0;
        v114.value._object = 0;
        v115._countAndFlagsBits = 0x74616E6974736544;
        v115._object = (void *)0xEB000000006E6F69;
        goto LABEL_110;
      }
    }
    else if (!v111)
    {
      if (qword_1000A7A10 != -1) {
        swift_once();
      }
      v112.super.Class isa = (Class)qword_1000ACBD0;
      v426._countAndFlagsBits = 0x8000000100096830;
      v113._object = (void *)0x8000000100096810;
      v113._countAndFlagsBits = 0xD00000000000001BLL;
      v114.value._countAndFlagsBits = 0;
      v114.value._object = 0;
      v115._countAndFlagsBits = 0x6F7453207478654ELL;
      v115._object = (void *)0xE900000000000070;
LABEL_110:
      uint64_t v265 = sub_100082D70(v113, v114, v112, v115, v426);
      uint64_t v267 = v268;
      goto LABEL_111;
    }
    uint64_t v265 = sub_100083870();
    uint64_t v267 = v266;

LABEL_111:
    char v269 = v457 & 1;
    v270 = (char *)v108 + v497[9];
    uint64_t v271 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v271 - 8) + 56))(v270, 1, 1, v271);
    void v108[2] = v265;
    v108[3] = v267;
    uint64_t v272 = v478;
    v108[5] = v458;
    void v108[6] = v272;
    *((unsigned char *)v108 + 56) = v269;
    *uint64_t v108 = sub_100024164();
    v108[1] = v273;
    *((_DWORD *)v108 + 8) = [v102 transportType];
    *((unsigned char *)v108 + 36) = 0;
    uint64_t v274 = v499;
    ((void (*)(char *, char *, void *))v505)(v499, v107, v104);
    v275 = sub_100082EE0();
    os_log_type_t v276 = sub_100083910();
    if (os_log_type_enabled(v275, v276))
    {
      v277 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v515 = swift_slowAlloc();
      *(_DWORD *)v277 = 136446210;
      sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v278 = sub_100083BF0();
      uint64_t v519 = sub_10006863C(v278, v279, (uint64_t *)&v515);
      uint64_t v104 = v512;
      sub_100083A00();
      swift_bridgeObjectRelease();
      v504((unint64_t)v274, (uint64_t)v104);
      _os_log_impl((void *)&_mh_execute_header, v275, v276, "GeneralMapsTimelineProvider: generateResolvableTimeline added NavigationETA entry at %{public}s", v277, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v504((unint64_t)v274, (uint64_t)v104);
    }

    uint64_t v280 = type metadata accessor for NavigationETAEntryContentResolver(0);
    uint64_t v517 = v280;
    v518 = &off_10009EF70;
    uint64_t v281 = sub_100075704((uint64_t *)&v515);
    sub_1000778FC((uint64_t)v108, (uint64_t)v281, type metadata accessor for NavigationETAEntryContent);
    *(uint64_t *)((char *)v281 + *(int *)(v280 + 20)) = (uint64_t)v102;
    uint64_t v282 = (uint64_t)v503;
    v283 = &v503[*(int *)(v487 + 48)];
    v284 = v490;
    ((void (*)(char *, char *, void *))v505)(v503, v490, v104);
    sub_100075768(&v515, (uint64_t)v283);
    v285 = v508;
    unint64_t v286 = *v508;
    uint64_t v287 = v102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v286 = sub_100074D60(0, *(void *)(v286 + 16) + 1, 1, v286);
    }
    unint64_t v289 = *(void *)(v286 + 16);
    unint64_t v288 = *(void *)(v286 + 24);
    if (v289 >= v288 >> 1) {
      unint64_t v286 = sub_100074D60(v288 > 1, v289 + 1, 1, v286);
    }
    *(void *)(v286 + 16) = v289 + 1;
    sub_100019284(v282, v286+ ((*(unsigned __int8 *)(v488 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v488 + 80))+ *(void *)(v488 + 72) * v289, &qword_1000AAB08);
    sub_100018854(v477, v456, v450, v445, v454, v502, v482, v467);

    unint64_t *v285 = v286;
    v504((unint64_t)v284, (uint64_t)v104);
    uint64_t v290 = (uint64_t)v444;
    sub_100077894((uint64_t)v285, (uint64_t)v444, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v461 + 56))(v290, 0, 1, v443);
    uint64_t v291 = v470 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_timeline;
    swift_beginAccess();
    sub_10007569C(v290, v291);
    swift_endAccess();
    sub_100075780((uint64_t)v108, type metadata accessor for NavigationETAEntryContent);
    return;
  }
  uint64_t v77 = v512;
  ((void (*)(void, char *, void *))v505)(v509, v490, v512);
  if (v6)
  {
    if (v6 >> 62) {
      goto LABEL_126;
    }
    uint64_t v73 = *(char **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v73)
    {
      while (1)
      {
        unint64_t v486 = v6 & 0xC000000000000001;
        swift_beginAccess();
        v463 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v495 + 56);
        v466 = &v520;
        v499 = (char *)(v495 + 48);
        v480 = (void (**)(char *, uint64_t, void *))(v495 + 32);
        uint64_t v489 = v495 + 8;
        if (v477) {
          BOOL v117 = v456 == 0;
        }
        else {
          BOOL v117 = 0;
        }
        int v118 = v117;
        int v451 = v118;
        v455 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v448 + 56);
        v434 = (void (**)(char *, char *, uint64_t))(v448 + 16);
        v462 = (void (**)(uint64_t, char *, void *))(v495 + 40);
        v430 = (void (**)(char *, uint64_t))(v448 + 8);
        uint64_t v76 = 4;
        *(void *)&long long v116 = 136380675;
        long long v428 = v116;
        v427[1] = (char *)&type metadata for Any + 8;
        *(void *)&long long v116 = 136381187;
        long long v441 = v116;
        unint64_t v453 = 0x8000000100096750;
        v452 = (void *)0x8000000100096720;
        *(void *)&long long v116 = 136446210;
        long long v432 = v116;
        v473 = v73;
        while (1)
        {
          if (v486) {
            id v119 = (id)sub_100083AB0();
          }
          else {
            id v119 = *(id *)(v6 + 8 * v76);
          }
          unint64_t v6 = (unint64_t)v119;
          if (__OFADD__(v76 - 4, 1))
          {
            __break(1u);
            goto LABEL_121;
          }
          v506 = (char *)(v76 - 3);
          uint64_t v120 = (int *)[v119 MKMapItem];
          if (!v120)
          {
            id v125 = (id)v6;
            uint64_t v126 = sub_100082EE0();
            os_log_type_t v127 = sub_100083910();
            unint64_t v66 = v127;
            if (os_log_type_enabled(v126, v127))
            {
              uint64_t v128 = swift_slowAlloc();
              *(void *)&long long v515 = swift_slowAlloc();
              *(_DWORD *)uint64_t v128 = v428;
              uint64_t v129 = v76;
              id v130 = [v125 undecoratedTitle];
              uint64_t v70 = (void (*)(char *, char *, uint64_t))sub_100083870();
              unint64_t v132 = v131;

              uint64_t v133 = v502;
              *(void *)(v128 + 4) = sub_10006863C((uint64_t)v70, v132, (uint64_t *)&v515);

              id v101 = v500;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v66, "GeneralMapsTimelineProvider: generateResolvableTimeline skipping suggestions entry (%{private}s) because no map item was available", (uint8_t *)v128, 0xCu);
              swift_arrayDestroy();
              uint64_t v45 = (uint64_t)v509;
              swift_slowDealloc();
              uint64_t v73 = v473;
              swift_slowDealloc();

              unint64_t v6 = v133;
              uint64_t v76 = v129;
            }
            else
            {

              unint64_t v6 = v502;
            }
            goto LABEL_33;
          }
          v497 = v120;
          id v121 = [(id)v6 expires];
          if (v121)
          {
            uint64_t v122 = v121;
            uint64_t v70 = (void (*)(char *, char *, uint64_t))v45;
            uint64_t v123 = (uint64_t)v485;
            sub_100082E20();

            uint64_t v124 = 0;
          }
          else
          {
            uint64_t v70 = (void (*)(char *, char *, uint64_t))v45;
            uint64_t v124 = 1;
            uint64_t v123 = (uint64_t)v485;
          }
          uint64_t v494 = v76;
          (*v463)(v123, v124, 1, v77);
          uint64_t v134 = v511;
          sub_100019284(v123, v511, &qword_1000A7F30);
          sub_10001A720(v134, (uint64_t)v101, &qword_1000A7F30);
          id v135 = (id)v6;
          uint64_t v136 = sub_100082EE0();
          os_log_type_t v137 = sub_100083920();
          int v138 = v137;
          if (os_log_type_enabled(v136, v137))
          {
            uint64_t v139 = swift_slowAlloc();
            v503 = (char *)swift_slowAlloc();
            *(void *)&long long v515 = v503;
            *(_DWORD *)uint64_t v139 = v441;
            LODWORD(v496) = v138;
            id v140 = [v135 undecoratedTitle];
            uint64_t v141 = sub_100083870();
            unint64_t v143 = v142;

            unint64_t v144 = (void (*)(char *, char *, uint64_t))v509;
            uint64_t v519 = sub_10006863C(v141, v143, (uint64_t *)&v515);
            sub_100083A00();

            swift_bridgeObjectRelease();
            *(_WORD *)(v139 + 12) = 2082;
            sub_10001A720((uint64_t)v101, v464, &qword_1000A7F30);
            uint64_t v145 = sub_100083880();
            uint64_t v519 = sub_10006863C(v145, v146, (uint64_t *)&v515);
            sub_100083A00();
            swift_bridgeObjectRelease();
            sub_100019138((uint64_t)v101, &qword_1000A7F30);
            *(_WORD *)(v139 + 22) = 2082;
            sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v70 = v144;
            uint64_t v147 = sub_100083BF0();
            uint64_t v519 = sub_10006863C(v147, v148, (uint64_t *)&v515);
            sub_100083A00();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v136, (os_log_type_t)v496, "GeneralMapsTimelineProvider: generateResolvableTimeline suggestions entry (%{private}s) suggestionEnd: %{public}s lastEnd: %{public}s", (uint8_t *)v139, 0x20u);
            swift_arrayDestroy();
            uint64_t v77 = v512;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100019138((uint64_t)v101, &qword_1000A7F30);
          }

          uint64_t v149 = v484;
          uint64_t v150 = v483;
          sub_10001A720(v511, v484, &qword_1000A7F30);
          v496 = *(char **)v499;
          if (((unsigned int (*)(uint64_t, uint64_t, void *))v496)(v149, 1, v77) == 1)
          {
            sub_100019138(v149, &qword_1000A7F30);
            goto LABEL_51;
          }
          unint64_t v66 = (unint64_t)v471;
          (*v480)(v471, v149, v77);
          sub_1000757E0(&qword_1000AAB10, (void (*)(uint64_t))&type metadata accessor for Date);
          uint64_t v45 = (uint64_t)v70;
          if (sub_100083830()) {
            break;
          }
          ((void (*)(char *, unint64_t, void *))v505)(v150, v66, v77);
          id v170 = v135;
          uint64_t v171 = sub_100082EE0();
          os_log_type_t v172 = sub_100083910();
          if (os_log_type_enabled(v171, v172))
          {
            unint64_t v66 = swift_slowAlloc();
            v503 = (char *)swift_slowAlloc();
            *(void *)&long long v515 = v503;
            *(_DWORD *)unint64_t v66 = v441;
            uint64_t v173 = v150;
            id v174 = [v170 undecoratedTitle];
            uint64_t v175 = sub_100083870();
            unint64_t v177 = v176;

            uint64_t v519 = sub_10006863C(v175, v177, (uint64_t *)&v515);
            sub_100083A00();

            swift_bridgeObjectRelease();
            *(_WORD *)(v66 + 12) = 2082;
            sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v178 = sub_100083BF0();
            uint64_t v519 = sub_10006863C(v178, v179, (uint64_t *)&v515);
            sub_100083A00();
            swift_bridgeObjectRelease();
            uint64_t v70 = (void (*)(char *, char *, uint64_t))v504;
            v504((unint64_t)v173, (uint64_t)v512);
            *(_WORD *)(v66 + 22) = 2082;
            v180 = v509;
            uint64_t v181 = sub_100083BF0();
            uint64_t v519 = sub_10006863C(v181, v182, (uint64_t *)&v515);
            uint64_t v45 = (uint64_t)v180;
            sub_100083A00();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v171, v172, "GeneralMapsTimelineProvider: generateResolvableTimeline skipping suggestions entry (%{private}s) ending at %{public}s because timeline already populated up to %{public}s", (uint8_t *)v66, 0x20u);
            swift_arrayDestroy();
            uint64_t v77 = v512;
            swift_slowDealloc();
            swift_slowDealloc();

            ((void (*)(char *, void *))v70)(v471, v77);
            unint64_t v6 = v502;
            sub_100019138(v511, &qword_1000A7F30);
          }
          else
          {

            v222 = v504;
            v504((unint64_t)v150, (uint64_t)v77);

            v222(v66, (uint64_t)v77);
            sub_100019138(v511, &qword_1000A7F30);
            unint64_t v6 = v502;
          }
          id v101 = v500;
LABEL_104:
          uint64_t v73 = v473;
          uint64_t v76 = v494;
LABEL_33:
          ++v76;
          if (v506 == v73) {
            goto LABEL_127;
          }
        }
        v504(v66, (uint64_t)v77);
LABEL_51:
        id v101 = v135;
        uint64_t v151 = (char *)sub_100068EE0(v101, v482);

        id v152 = [v101 undecoratedTitle];
        unint64_t v66 = sub_100083870();
        uint64_t v154 = v153;

        if (qword_1000A7A10 != -1) {
          swift_once();
        }
        v155.super.Class isa = (Class)qword_1000ACBD0;
        v521._countAndFlagsBits = 0xD00000000000002BLL;
        v426._countAndFlagsBits = v453;
        v521._object = v452;
        v522.value._countAndFlagsBits = 0;
        v522.value._object = 0;
        v523._countAndFlagsBits = 45;
        v523._object = (void *)0xE100000000000000;
        uint64_t v157 = sub_100082D70(v521, v522, v155, v523, v426);
        uint64_t v158 = v156;
        v503 = v151;
        if (v151)
        {
          uint64_t v159 = v156;
          swift_bridgeObjectRetain();
          double v160 = v151;
          id v161 = sub_100074714();
          id v162 = [v161 stringFromTimeInterval:[v160 expectedTime]];

          if (v162)
          {
            uint64_t v163 = sub_100083870();
            uint64_t v165 = v164;
          }
          else
          {
            uint64_t v163 = 0;
            uint64_t v165 = 0;
          }
          uint64_t v183 = sub_100057D24(v163, v165, (int)[v160 transportType]);
          uint64_t v185 = v184;

          uint64_t v158 = v159;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v185)
          {
            swift_bridgeObjectRelease();
            uint64_t v157 = v183;
            uint64_t v158 = v185;
          }
          uint64_t v70 = (void (*)(char *, char *, uint64_t))v509;
        }
        else
        {
          swift_bridgeObjectRetain();
          id v166 = [v101 undecoratedSubtitle];
          if (v166)
          {
            char v167 = v166;
            uint64_t v157 = sub_100083870();
            uint64_t v169 = v168;

            swift_bridgeObjectRelease_n();
            uint64_t v158 = v169;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRetain();
        id v186 = [v101 type];
        uint64_t v187 = v510;
        uint64_t v188 = v510 + *(int *)(v476 + 40);
        uint64_t v189 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v189 - 8) + 56))(v188, 1, 1, v189);
        *(void *)uint64_t v187 = v66;
        *(void *)(v187 + 8) = v154;
        *(void *)(v187 + 16) = v157;
        *(void *)(v187 + 24) = v158;
        uint64_t v481 = v158;
        *(void *)(v187 + 32) = v186;
        *(void *)(v187 + 40) = 0;
        *(unsigned char *)(v187 + 48) = 2;
        *(void *)(v187 + 56) = sub_100024248();
        *(void *)(v187 + 64) = v190;
        if (v503)
        {
          LODWORD(v6) = [v503 transportType];
          uint64_t v77 = v512;
          uint64_t v45 = (uint64_t)v70;
          goto LABEL_69;
        }
        unint64_t v6 = GEOTransportTypeFromUserPreference();
        unsigned int v191 = [v101 containsKey:@"MapsSuggestionsTransportTypeKey"];
        uint64_t v77 = v512;
        uint64_t v45 = (uint64_t)v70;
        if (!v191) {
          goto LABEL_69;
        }
        uint64_t v192 = (uint64_t)[v101 integerForKey:@"MapsSuggestionsTransportTypeKey"];
        if (v192 >= (uint64_t)0xFFFFFFFF80000000) {
          break;
        }
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        swift_bridgeObjectRetain_n();
        uint64_t v73 = (char *)sub_100083B80();
        swift_bridgeObjectRelease();
        if (!v73) {
          goto LABEL_127;
        }
      }
      unint64_t v6 = v192;
      if (v192 > 0x7FFFFFFF) {
        goto LABEL_125;
      }
LABEL_69:
      uint64_t v193 = v510;
      *(_DWORD *)(v510 + 72) = v6;
      *(unsigned char *)(v193 + 76) = 0;
      if (!v451)
      {
        uint64_t v207 = v77;
        uint64_t v208 = sub_100082EE0();
        os_log_type_t v209 = sub_100083910();
        if (os_log_type_enabled(v208, v209))
        {
          v210 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v515 = swift_slowAlloc();
          *(_DWORD *)v210 = v432;
          sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
          uint64_t v70 = (void (*)(char *, char *, uint64_t))v509;
          uint64_t v211 = sub_100083BF0();
          uint64_t v519 = sub_10006863C(v211, v212, (uint64_t *)&v515);
          sub_100083A00();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v208, v209, "GeneralMapsTimelineProvider: generateResolvableTimeline added no-location SuggestedDestination entry at %{public}s", v210, 0xCu);
          swift_arrayDestroy();
          uint64_t v77 = v512;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v70 = (void (*)(char *, char *, uint64_t))v509;
          uint64_t v77 = v207;
        }
        uint64_t v213 = (int *)type metadata accessor for SuggestedDestinationEntryContentResolver(0);
        uint64_t v517 = (uint64_t)v213;
        v518 = &off_10009ED48;
        uint64_t v214 = sub_100075704((uint64_t *)&v515);
        sub_1000778FC(v510, (uint64_t)v214, type metadata accessor for SuggestedDestinationEntryContent);
        v215 = v497;
        id v216 = [v101 styleAttributes];
        (*v455)((char *)v214 + v213[9], 1, 1, v492);
        *(uint64_t *)((char *)v214 + v213[5]) = 0;
        *(uint64_t *)((char *)v214 + v213[6]) = (uint64_t)v215;
        *(uint64_t *)((char *)v214 + v213[7]) = (uint64_t)v216;
        id v217 = v503;
        *(uint64_t *)((char *)v214 + v213[8]) = (uint64_t)v503;
        uint64_t v218 = v474 + *(int *)(v487 + 48);
        v505();
        sub_100075768(&v515, v218);
        unint64_t v219 = *v508;
        unint64_t v66 = (unint64_t)v217;
        uint64_t v45 = (uint64_t)v70;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v219 = sub_100074D60(0, *(void *)(v219 + 16) + 1, 1, v219);
        }
        unint64_t v221 = *(void *)(v219 + 16);
        unint64_t v220 = *(void *)(v219 + 24);
        if (v221 >= v220 >> 1) {
          unint64_t v219 = sub_100074D60(v220 > 1, v221 + 1, 1, v219);
        }
        *(void *)(v219 + 16) = v221 + 1;
        sub_100019284(v474, v219+ ((*(unsigned __int8 *)(v488 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v488 + 80))+ *(void *)(v488 + 72) * v221, &qword_1000AAB08);

        swift_bridgeObjectRelease();
        unint64_t *v508 = v219;
        goto LABEL_102;
      }
      ((void (*)(char *, uint64_t, void *))v505)(v498, v45, v77);
      id v194 = v446;
      sub_100082E60();
      swift_beginAccess();
      id v195 = [v194 timestamp];
      id v196 = v493;
      sub_100082E20();

      sub_100082DC0();
      double v198 = v197;
      v504((unint64_t)v196, (uint64_t)v77);
      if (v198 < 300.0)
      {
        uint64_t v199 = v469;
        sub_1000778FC(v510, v469, type metadata accessor for SuggestedDestinationEntryContent);
        *(void *)(v199 + 40) = 0;
        *(unsigned char *)(v199 + 48) = 0;
        uint64_t v200 = sub_100082EE0();
        os_log_type_t v201 = sub_100083910();
        BOOL v202 = os_log_type_enabled(v200, v201);
        id v431 = v194;
        if (v202)
        {
          uint64_t v203 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v515 = swift_slowAlloc();
          *(_DWORD *)uint64_t v203 = v432;
          sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
          v204 = v512;
          uint64_t v205 = sub_100083BF0();
          uint64_t v519 = sub_10006863C(v205, v206, (uint64_t *)&v515);
          id v194 = v431;
          sub_100083A00();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v200, v201, "GeneralMapsTimelineProvider: generateResolvableTimeline added fresh-location SuggestedDestination entry at %{public}s", v203, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          v204 = v512;
        }
        v223 = (int *)type metadata accessor for SuggestedDestinationEntryContentResolver(0);
        uint64_t v517 = (uint64_t)v223;
        v518 = &off_10009ED48;
        uint64_t v224 = sub_100075704((uint64_t *)&v515);
        sub_1000778FC(v469, (uint64_t)v224, type metadata accessor for SuggestedDestinationEntryContent);
        id v225 = v194;
        id v226 = v497;
        unint64_t v66 = (unint64_t)[v101 styleAttributes];
        id v227 = (char *)v224 + v223[9];
        uint64_t v70 = (void (*)(char *, char *, uint64_t))v492;
        (*v434)(v227, v491, v492);
        (*v455)(v227, 0, 1, (uint64_t)v70);
        *(uint64_t *)((char *)v224 + v223[5]) = v477;
        *(uint64_t *)((char *)v224 + v223[6]) = (uint64_t)v226;
        *(uint64_t *)((char *)v224 + v223[7]) = v66;
        uint64_t v228 = v503;
        *(uint64_t *)((char *)v224 + v223[8]) = (uint64_t)v503;
        unint64_t v229 = v228;
        uint64_t v230 = v459 + *(int *)(v487 + 48);
        v505();
        sub_100075768(&v515, v230);
        unint64_t v231 = *v508;
        id v232 = v229;
        uint64_t v77 = v204;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v231 = sub_100074D60(0, *(void *)(v231 + 16) + 1, 1, v231);
        }
        uint64_t v45 = (uint64_t)v509;
        unint64_t v234 = *(void *)(v231 + 16);
        unint64_t v233 = *(void *)(v231 + 24);
        if (v234 >= v233 >> 1) {
          unint64_t v231 = sub_100074D60(v233 > 1, v234 + 1, 1, v231);
        }
        *(void *)(v231 + 16) = v234 + 1;
        sub_100019284(v459, v231+ ((*(unsigned __int8 *)(v488 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v488 + 80))+ *(void *)(v488 + 72) * v234, &qword_1000AAB08);
        unint64_t *v508 = v231;
        id v235 = [v225 timestamp];
        uint64_t v236 = v449;
        sub_100082E20();

        v237 = v493;
        sub_100082E00();
        v504((unint64_t)v236, (uint64_t)v77);
        sub_100075780(v469, type metadata accessor for SuggestedDestinationEntryContent);
        id v238 = v498;
        swift_beginAccess();
        (*v462)((uint64_t)v238, v237, v77);
        id v194 = v431;
      }
      uint64_t v239 = v460;
      sub_10001A720(v511, v460, &qword_1000A7F30);
      if (((unsigned int (*)(uint64_t, uint64_t, void *))v496)(v239, 1, v77) == 1)
      {
        sub_100019138(v239, &qword_1000A7F30);
      }
      else
      {
        uint64_t v240 = v447;
        (*v480)(v447, v239, v77);
        sub_1000757E0(&qword_1000AAB10, (void (*)(uint64_t))&type metadata accessor for Date);
        char v241 = sub_100083830();
        v504((unint64_t)v240, (uint64_t)v77);
        if ((v241 & 1) == 0)
        {
          (*v430)(v491, v492);

          swift_bridgeObjectRelease();
          v504((unint64_t)v498, (uint64_t)v77);
LABEL_102:
          uint64_t v260 = v475;
          sub_100019284(v511, v475, &qword_1000A7F30);
          unsigned int v261 = ((uint64_t (*)(uint64_t, uint64_t, void *))v496)(v260, 1, v77);
          id v101 = v500;
          if (v261 == 1)
          {
            sub_100018854(v477, v456, v450, v445, v454, v502, v482, v467);
            swift_bridgeObjectRelease();
            uint64_t v292 = v504;
            v504((unint64_t)v490, (uint64_t)v77);
            sub_100019138(v260, &qword_1000A7F30);
            uint64_t v293 = (uint64_t)v444;
            sub_100077894((uint64_t)v508, (uint64_t)v444, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v461 + 56))(v293, 0, 1, v443);
            uint64_t v294 = v470 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_timeline;
            swift_beginAccess();
            sub_10007569C(v293, v294);
            swift_endAccess();
            sub_100075780(v510, type metadata accessor for SuggestedDestinationEntryContent);
            v292(v45, (uint64_t)v77);
            return;
          }
          v262 = (void (*)(char *, char *, void *))*v480;
          v263 = v472;
          (*v480)(v472, v260, v77);
          uint64_t v264 = v493;
          v262(v493, v263, v77);
          (*v462)(v45, v264, v77);
          sub_100075780(v510, type metadata accessor for SuggestedDestinationEntryContent);
          unint64_t v6 = v502;
          goto LABEL_104;
        }
      }
      uint64_t v242 = v479;
      sub_1000778FC(v510, v479, type metadata accessor for SuggestedDestinationEntryContent);
      *(void *)(v242 + 40) = 0;
      *(unsigned char *)(v242 + 48) = 1;
      uint64_t v243 = sub_100082EE0();
      os_log_type_t v244 = sub_100083910();
      if (os_log_type_enabled(v243, v244))
      {
        v245 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v515 = swift_slowAlloc();
        *(_DWORD *)v245 = v432;
        v427[0] = v101;
        sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v70 = (void (*)(char *, char *, uint64_t))v512;
        uint64_t v246 = sub_100083BF0();
        uint64_t v519 = sub_10006863C(v246, v247, (uint64_t *)&v515);
        id v101 = (id)v427[0];
        sub_100083A00();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v243, v244, "GeneralMapsTimelineProvider: generateResolvableTimeline added stale-location SuggestedDestination entry at %{public}s", v245, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v70 = (void (*)(char *, char *, uint64_t))v512;
      }
      uint64_t v248 = (int *)type metadata accessor for SuggestedDestinationEntryContentResolver(0);
      uint64_t v517 = (uint64_t)v248;
      v518 = &off_10009ED48;
      unint64_t v249 = sub_100075704((uint64_t *)&v515);
      sub_1000778FC(v479, (uint64_t)v249, type metadata accessor for SuggestedDestinationEntryContent);
      id v250 = v194;
      v251 = v497;
      id v252 = [v101 styleAttributes];
      v253 = (char *)v249 + v248[9];
      uint64_t v254 = v492;
      (*v434)(v253, v491, v492);
      (*v455)(v253, 0, 1, v254);
      *(uint64_t *)((char *)v249 + v248[5]) = v477;
      *(uint64_t *)((char *)v249 + v248[6]) = (uint64_t)v251;
      *(uint64_t *)((char *)v249 + v248[7]) = (uint64_t)v252;
      id v255 = v503;
      *(uint64_t *)((char *)v249 + v248[8]) = (uint64_t)v503;
      uint64_t v256 = v468 + *(int *)(v487 + 48);
      v505();
      sub_100075768(&v515, v256);
      unint64_t v66 = *v508;
      id v257 = v255;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v66 = sub_100074D60(0, *(void *)(v66 + 16) + 1, 1, v66);
      }
      unint64_t v259 = *(void *)(v66 + 16);
      unint64_t v258 = *(void *)(v66 + 24);
      if (v259 >= v258 >> 1) {
        unint64_t v66 = sub_100074D60(v258 > 1, v259 + 1, 1, v66);
      }
      *(void *)(v66 + 16) = v259 + 1;
      sub_100019284(v468, v66+ ((*(unsigned __int8 *)(v488 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v488 + 80))+ *(void *)(v488 + 72) * v259, &qword_1000AAB08);
      swift_bridgeObjectRelease();

      unint64_t *v508 = v66;
      sub_100075780(v479, type metadata accessor for SuggestedDestinationEntryContent);
      (*v430)(v491, v492);
      uint64_t v77 = v512;
      v504((unint64_t)v498, (uint64_t)v512);
      uint64_t v45 = (uint64_t)v509;
      goto LABEL_102;
    }
LABEL_127:
    swift_bridgeObjectRelease();
  }
  v295 = v504;
  if (*(void *)(*v508 + 16))
  {
    v504((unint64_t)v490, (uint64_t)v77);
    sub_100018854(v477, v456, v450, v445, v454, v6, v482, v467);
  }
  else
  {
    if ((v450 - 1) > 3) {
      uint64_t v296 = 0;
    }
    else {
      uint64_t v296 = qword_100087E48[(int)v450 - 1];
    }
    uint64_t v297 = v456;
    if (v477)
    {
      v298 = v442;
      void *v442 = 0;
      *((unsigned char *)v298 + 8) = 2;
      v299 = (char *)v298 + *(int *)(v440 + 20);
      uint64_t v300 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v300 - 8) + 56))(v299, 1, 1, v300);
      id v301 = v446;
      sub_100082E60();
      [v301 coordinate];
      MKMapRectMakeWithRadialDistance();
      uint64_t v303 = v302;
      uint64_t v305 = v304;
      uint64_t v307 = v306;
      uint64_t v309 = v308;
      swift_beginAccess();
      id v310 = [v301 timestamp];
      v311 = v493;
      sub_100082E20();

      sub_100082DC0();
      double v313 = v312;
      *(void *)&long long v511 = v495 + 8;
      v295((unint64_t)v311, (uint64_t)v77);
      uint64_t v510 = v296;
      if (v313 < 300.0)
      {
        uint64_t v314 = v439;
        sub_1000778FC((uint64_t)v298, v439, type metadata accessor for NearbyEntryContent);
        uint64_t v315 = v456;
        *(void *)uint64_t v314 = v456;
        *(unsigned char *)(v314 + 8) = 0;
        v316 = (char *)v301;
        v317 = sub_100082EE0();
        os_log_type_t v318 = sub_100083910();
        BOOL v319 = os_log_type_enabled(v317, v318);
        v506 = v316;
        if (v319)
        {
          uint64_t v320 = swift_slowAlloc();
          v503 = (char *)swift_slowAlloc();
          v514 = v503;
          *(_DWORD *)uint64_t v320 = 136380931;
          *(void *)&long long v515 = v316;
          *((void *)&v515 + 1) = v315;
          v321 = v316;
          uint64_t v322 = sub_100083890();
          *(void *)&long long v515 = sub_10006863C(v322, v323, (uint64_t *)&v514);
          sub_100083A00();

          v324 = v512;
          swift_bridgeObjectRelease();
          *(_WORD *)(v320 + 12) = 2082;
          sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
          v325 = v509;
          uint64_t v326 = sub_100083BF0();
          *(void *)&long long v515 = sub_10006863C(v326, v327, (uint64_t *)&v514);
          sub_100083A00();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v317, v318, "GeneralMapsTimelineProvider: generateResolvableTimeline added Nearby entry (with fresh location: %{private}s) at %{public}s", (uint8_t *)v320, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v328 = (uint64_t)v437;
        }
        else
        {

          v325 = v509;
          uint64_t v328 = (uint64_t)v437;
          v324 = v77;
        }
        v349 = (int *)type metadata accessor for NearbyEntryContentResolver(0);
        uint64_t v517 = (uint64_t)v349;
        v518 = &off_10009F308;
        v350 = sub_100075704((uint64_t *)&v515);
        sub_1000778FC(v439, (uint64_t)v350, type metadata accessor for NearbyEntryContent);
        v351 = (char *)v350 + v349[9];
        uint64_t v352 = v448;
        uint64_t v353 = v492;
        (*(void (**)(char *, unint64_t, uint64_t))(v448 + 16))(v351, v433, v492);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v352 + 56))(v351, 0, 1, v353);
        *(uint64_t *)((char *)v350 + v349[5]) = v477;
        uint64_t v296 = v510;
        *(uint64_t *)((char *)v350 + v349[6]) = v510;
        v354 = (uint64_t *)((char *)v350 + v349[7]);
        void *v354 = v303;
        v354[1] = v305;
        v354[2] = v307;
        v354[3] = v309;
        *(uint64_t *)((char *)v350 + v349[8]) = v454;
        uint64_t v355 = v328 + *(int *)(v487 + 48);
        ((void (*)(uint64_t, char *, void *))v505)(v328, v325, v324);
        sub_100075768(&v515, v355);
        unint64_t v356 = *v508;
        v357 = v506;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v356 = sub_100074D60(0, *(void *)(v356 + 16) + 1, 1, v356);
        }
        unint64_t v359 = *(void *)(v356 + 16);
        unint64_t v358 = *(void *)(v356 + 24);
        v360 = v509;
        if (v359 >= v358 >> 1) {
          unint64_t v356 = sub_100074D60(v358 > 1, v359 + 1, 1, v356);
        }
        *(void *)(v356 + 16) = v359 + 1;
        sub_100019284(v328, v356+ ((*(unsigned __int8 *)(v488 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v488 + 80))+ *(void *)(v488 + 72) * v359, &qword_1000AAB08);
        unint64_t *v508 = v356;
        id v361 = [v357 timestamp];
        v362 = v449;
        sub_100082E20();

        v363 = v493;
        sub_100082E00();
        v364 = v362;
        v365 = v512;
        v504((unint64_t)v364, (uint64_t)v512);
        sub_100075780(v439, type metadata accessor for NearbyEntryContent);
        swift_beginAccess();
        v366 = v360;
        uint64_t v77 = v365;
        (*(void (**)(char *, char *, void *))(v495 + 40))(v366, v363, v365);
        v298 = v442;
      }
      v367 = v77;
      uint64_t v368 = v456;
      void *v298 = v456;
      *((unsigned char *)v298 + 8) = 1;
      id v369 = v301;
      v370 = sub_100082EE0();
      os_log_type_t v371 = sub_100083910();
      if (os_log_type_enabled(v370, v371))
      {
        uint64_t v372 = swift_slowAlloc();
        uint64_t v513 = swift_slowAlloc();
        *(_DWORD *)uint64_t v372 = 136380931;
        *(void *)&long long v515 = v369;
        *((void *)&v515 + 1) = v368;
        id v373 = v369;
        uint64_t v374 = sub_100083890();
        *(void *)&long long v515 = sub_10006863C(v374, v375, &v513);
        sub_100083A00();

        swift_bridgeObjectRelease();
        *(_WORD *)(v372 + 12) = 2082;
        sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
        v376 = v509;
        uint64_t v377 = sub_100083BF0();
        *(void *)&long long v515 = sub_10006863C(v377, v378, &v513);
        v367 = v512;
        sub_100083A00();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v370, v371, "GeneralMapsTimelineProvider: generateResolvableTimeline added Nearby entry (with stale location: %{private}s) at %{public}s", (uint8_t *)v372, 0x16u);
        swift_arrayDestroy();
        uint64_t v296 = v510;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        v376 = v509;
      }
      v379 = (int *)type metadata accessor for NearbyEntryContentResolver(0);
      uint64_t v517 = (uint64_t)v379;
      v518 = &off_10009F308;
      v380 = sub_100075704((uint64_t *)&v515);
      sub_1000778FC((uint64_t)v442, (uint64_t)v380, type metadata accessor for NearbyEntryContent);
      v381 = (char *)v380 + v379[9];
      uint64_t v382 = v448;
      uint64_t v383 = v492;
      (*(void (**)(char *, unint64_t, uint64_t))(v448 + 16))(v381, v433, v492);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v382 + 56))(v381, 0, 1, v383);
      *(uint64_t *)((char *)v380 + v379[5]) = v477;
      *(uint64_t *)((char *)v380 + v379[6]) = v296;
      v384 = (uint64_t *)((char *)v380 + v379[7]);
      void *v384 = v303;
      v384[1] = v305;
      v384[2] = v307;
      v384[3] = v309;
      *(uint64_t *)((char *)v380 + v379[8]) = v454;
      uint64_t v385 = (uint64_t)v438;
      uint64_t v386 = (uint64_t)&v438[*(int *)(v487 + 48)];
      ((void (*)(char *, char *, void *))v505)(v438, v376, v367);
      sub_100075768(&v515, v386);
      unint64_t v387 = *v508;
      id v388 = v369;
      swift_bridgeObjectRetain();
      uint64_t v77 = v367;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v387 = sub_100074D60(0, *(void *)(v387 + 16) + 1, 1, v387);
      }
      unint64_t v390 = *(void *)(v387 + 16);
      unint64_t v389 = *(void *)(v387 + 24);
      uint64_t v45 = (uint64_t)v376;
      if (v390 >= v389 >> 1) {
        unint64_t v387 = sub_100074D60(v389 > 1, v390 + 1, 1, v387);
      }
      *(void *)(v387 + 16) = v390 + 1;
      sub_100019284(v385, v387+ ((*(unsigned __int8 *)(v488 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v488 + 80))+ *(void *)(v488 + 72) * v390, &qword_1000AAB08);
      sub_100018854(v477, v456, v450, v445, v454, v502, v482, v467);

      unint64_t *v508 = v387;
      (*(void (**)(unint64_t, uint64_t))(v448 + 8))(v433, v492);
      sub_100075780((uint64_t)v442, type metadata accessor for NearbyEntryContent);
      v295 = v504;
      v504((unint64_t)v490, (uint64_t)v77);
    }
    else
    {
      uint64_t v329 = v6;
      if (v445)
      {
        v330 = v77;
        *(void *)&long long v511 = v429;
        sub_100037280();
        uint64_t v332 = v331;
        uint64_t v334 = v333;
        uint64_t v336 = v335;
        uint64_t v338 = v337;
        v339 = sub_100082EE0();
        os_log_type_t v340 = sub_100083910();
        if (os_log_type_enabled(v339, v340))
        {
          uint64_t v341 = swift_slowAlloc();
          uint64_t v342 = swift_slowAlloc();
          uint64_t v510 = v296;
          uint64_t v519 = v342;
          *(_DWORD *)uint64_t v341 = 136380931;
          *(void *)&long long v515 = v332;
          *((void *)&v515 + 1) = v334;
          uint64_t v516 = v336;
          uint64_t v517 = v338;
          type metadata accessor for MKMapRect(0);
          uint64_t v343 = sub_100083890();
          *(void *)&long long v515 = sub_10006863C(v343, v344, &v519);
          sub_100083A00();
          swift_bridgeObjectRelease();
          *(_WORD *)(v341 + 12) = 2082;
          v345 = v509;
          swift_beginAccess();
          sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
          v346 = v330;
          uint64_t v347 = sub_100083BF0();
          *(void *)&long long v515 = sub_10006863C(v347, v348, &v519);
          sub_100083A00();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v339, v340, "GeneralMapsTimelineProvider: generateResolvableTimeline added Nearby entry (with map rect: %{private}s) at %{public}s", (uint8_t *)v341, 0x16u);
          swift_arrayDestroy();
          uint64_t v296 = v510;
          uint64_t v329 = v502;
          swift_slowDealloc();
          uint64_t v297 = v456;
          swift_slowDealloc();
        }
        else
        {

          v345 = v509;
          v346 = v330;
        }
        swift_beginAccess();
        v398 = (int *)type metadata accessor for NearbyEntryContentResolver(0);
        uint64_t v517 = (uint64_t)v398;
        v518 = &off_10009F308;
        v399 = sub_100075704((uint64_t *)&v515);
        uint64_t *v399 = 0;
        *((unsigned char *)v399 + 8) = 2;
        v400 = (char *)v399 + *(int *)(v440 + 20);
        uint64_t v401 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v401 - 8) + 56))(v400, 1, 1, v401);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v448 + 56))((char *)v399 + v398[9], 1, 1, v492);
        *(uint64_t *)((char *)v399 + v398[5]) = 0;
        *(uint64_t *)((char *)v399 + v398[6]) = v296;
        v402 = (uint64_t *)((char *)v399 + v398[7]);
        void *v402 = v332;
        v402[1] = v334;
        v402[2] = v336;
        v402[3] = v338;
        *(uint64_t *)((char *)v399 + v398[8]) = v454;
        uint64_t v403 = (uint64_t)v436;
        uint64_t v404 = (uint64_t)&v436[*(int *)(v487 + 48)];
        ((void (*)(char *, char *, void *))v505)(v436, v345, v346);
        sub_100075768(&v515, v404);
        unint64_t v405 = *v508;
        swift_bridgeObjectRetain();
        uint64_t v45 = (uint64_t)v345;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v405 = sub_100074D60(0, *(void *)(v405 + 16) + 1, 1, v405);
        }
        v406 = (void *)v511;
        unint64_t v408 = *(void *)(v405 + 16);
        unint64_t v407 = *(void *)(v405 + 24);
        uint64_t v77 = v330;
        if (v408 >= v407 >> 1) {
          unint64_t v405 = sub_100074D60(v407 > 1, v408 + 1, 1, v405);
        }
        *(void *)(v405 + 16) = v408 + 1;
        sub_100019284(v403, v405+ ((*(unsigned __int8 *)(v488 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v488 + 80))+ *(void *)(v488 + 72) * v408, &qword_1000AAB08);

        sub_100018854(0, v297, v450, v445, v454, v329, v482, v467);
        unint64_t *v508 = v405;
      }
      else
      {
        v391 = sub_100082EE0();
        os_log_type_t v392 = sub_100083910();
        if (os_log_type_enabled(v391, v392))
        {
          v393 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v515 = swift_slowAlloc();
          *(_DWORD *)v393 = 136446210;
          swift_beginAccess();
          sub_1000757E0(&qword_1000AAB00, (void (*)(uint64_t))&type metadata accessor for Date);
          v394 = v77;
          uint64_t v395 = sub_100083BF0();
          uint64_t v519 = sub_10006863C(v395, v396, (uint64_t *)&v515);
          uint64_t v329 = v502;
          sub_100083A00();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v391, v392, "GeneralMapsTimelineProvider: generateResolvableTimeline added Nearby entry (with fallback region) at %{public}s", v393, 0xCu);
          swift_arrayDestroy();
          v397 = v509;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v397 = (char *)v45;
          v394 = v77;
        }

        uint64_t v409 = v440;
        uint64_t v410 = (uint64_t)v435;
        swift_beginAccess();
        v411 = (int *)type metadata accessor for NearbyEntryContentResolver(0);
        uint64_t v517 = (uint64_t)v411;
        v518 = &off_10009F308;
        v412 = sub_100075704((uint64_t *)&v515);
        uint64_t *v412 = 0;
        *((unsigned char *)v412 + 8) = 2;
        v413 = (char *)v412 + *(int *)(v409 + 20);
        uint64_t v414 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v414 - 8) + 56))(v413, 1, 1, v414);
        if (qword_1000A79F8 != -1) {
          swift_once();
        }
        long long v511 = xmmword_1000ACB88;
        uint64_t v415 = qword_1000ACB98;
        uint64_t v416 = unk_1000ACBA0;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v448 + 56))((char *)v412 + v411[9], 1, 1, v492);
        *(uint64_t *)((char *)v412 + v411[5]) = 0;
        *(uint64_t *)((char *)v412 + v411[6]) = v296;
        v417 = (char *)v412 + v411[7];
        *(_OWORD *)v417 = v511;
        *((void *)v417 + 2) = v415;
        *((void *)v417 + 3) = v416;
        *(uint64_t *)((char *)v412 + v411[8]) = 0;
        uint64_t v418 = v410 + *(int *)(v487 + 48);
        uint64_t v419 = (uint64_t)v397;
        uint64_t v77 = v394;
        ((void (*)(uint64_t, char *, void *))v505)(v410, v397, v394);
        sub_100075768(&v515, v418);
        unint64_t v420 = *v508;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v420 = sub_100074D60(0, *(void *)(v420 + 16) + 1, 1, v420);
        }
        uint64_t v421 = v456;
        unint64_t v423 = *(void *)(v420 + 16);
        unint64_t v422 = *(void *)(v420 + 24);
        uint64_t v45 = v419;
        if (v423 >= v422 >> 1) {
          unint64_t v420 = sub_100074D60(v422 > 1, v423 + 1, 1, v420);
        }
        *(void *)(v420 + 16) = v423 + 1;
        sub_100019284(v410, v420+ ((*(unsigned __int8 *)(v488 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v488 + 80))+ *(void *)(v488 + 72) * v423, &qword_1000AAB08);
        sub_100018854(0, v421, v450, 0, v454, v329, v482, v467);
        unint64_t *v508 = v420;
      }
      v295 = v504;
      v504((unint64_t)v490, (uint64_t)v77);
    }
  }
  uint64_t v424 = (uint64_t)v444;
  sub_100077894((uint64_t)v508, (uint64_t)v444, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v461 + 56))(v424, 0, 1, v443);
  uint64_t v425 = v470 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_timeline;
  swift_beginAccess();
  sub_10007569C(v424, v425);
  swift_endAccess();
  v295(v45, (uint64_t)v77);
}

void sub_10006FCE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100083730();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000836A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t *v9 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = sub_1000836C0();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  type metadata accessor for MapSnapshotter();
  sub_1000837E0();
  sub_100034354((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_pendingRequestCount);
  BOOL v12 = __OFSUB__(v11, 1);
  uint64_t v13 = v11 - 1;
  if (v12)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_5;
  }
  *(void *)(v1 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_pendingRequestCount) = v13;
  if (v13) {
    return;
  }
  if (qword_1000A7A00 != -1) {
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v14 = sub_100082F00();
  sub_10001859C(v14, (uint64_t)qword_1000ACBA8);
  uint64_t v15 = sub_100082EE0();
  os_log_type_t v16 = sub_100083910();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "GeneralMapsTimelineProvider: all widget request completions called; purging icon manager",
      v17,
      2u);
    swift_slowDealloc();
  }

  id v18 = [self iconManager];
  if (v18)
  {
    uint64_t v19 = v18;
    [v18 purge];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10006FFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v27 = a2;
  uint64_t v32 = sub_100083610();
  uint64_t v35 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v31 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100083630();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000837F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t v28 = sub_1000839A0();
  sub_1000778FC(v26, (uint64_t)v15, type metadata accessor for GeneralMapsTimelineEntry);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + v17 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v27;
  *(void *)(v19 + 24) = a3;
  sub_100077894((uint64_t)v15, v19 + v16, type metadata accessor for GeneralMapsTimelineEntry);
  *(void *)(v19 + v17) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v18, (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_100078D8C;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009F2C8;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v21 = v29;
  sub_100083620();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_1000757E0((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100074BCC(qword_1000A8810, (uint64_t *)&unk_1000A7F80);
  uint64_t v23 = v31;
  uint64_t v22 = v32;
  sub_100083A40();
  uint64_t v24 = (void *)v28;
  sub_1000839B0();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v21, v34);
}

uint64_t sub_100070470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4;
  uint64_t v29 = a2;
  uint64_t v31 = a3;
  uint64_t v35 = sub_100083610();
  uint64_t v38 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v34 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100083630();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000837F0();
  uint64_t v27 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100002874(&qword_1000AAB28);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t v30 = sub_1000839A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v28, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + v17 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v31;
  *(void *)(v19 + 16) = v29;
  *(void *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v16, v15, v12);
  *(void *)(v19 + v17) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, v11, v27);
  aBlock[4] = sub_100077AD4;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009F1D8;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v22 = v32;
  sub_100083620();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_1000757E0((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100074BCC(qword_1000A8810, (uint64_t *)&unk_1000A7F80);
  uint64_t v24 = v34;
  uint64_t v23 = v35;
  sub_100083A40();
  uint64_t v25 = (void *)v30;
  sub_1000839B0();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v22, v37);
}

uint64_t sub_100070914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v79 = a1;
  uint64_t v7 = sub_100083730();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000837F0();
  uint64_t v10 = *(void *)(v82 - 8);
  uint64_t v11 = __chkstk_darwin(v82);
  uint64_t v81 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v64 - v13;
  uint64_t v15 = sub_100082E40();
  uint64_t v76 = *(void *)(v15 - 8);
  uint64_t v77 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  int v78 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v73 = (char *)v64 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v80 = (uint64_t)v64 - v21;
  uint64_t v74 = v22;
  __chkstk_darwin(v20);
  uint64_t v83 = (char *)v64 - v23;
  uint64_t v24 = sub_1000836A0();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (void *)((char *)v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  *uint64_t v27 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v25 + 104))(v27, enum case for DispatchPredicate.onQueue(_:), v24);
  char v28 = sub_1000836C0();
  (*(void (**)(uint64_t *, uint64_t))(v25 + 8))(v27, v24);
  if (v28)
  {
    uint64_t v29 = *(void *)(v4 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_pendingRequestCount);
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (!v30)
    {
      uint64_t v72 = v4;
      *(void *)(v4 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_pendingRequestCount) = v31;
      sub_100082E30();
      if (qword_1000A7A00 == -1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v32 = sub_100082F00();
  sub_10001859C(v32, (uint64_t)qword_1000ACBA8);
  uint64_t v33 = v10;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v35 = v82;
  v34(v14, v79, v82);
  uint64_t v36 = sub_100082EE0();
  os_log_type_t v37 = sub_100083910();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v69 = v10;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc();
    unint64_t v66 = v34;
    uint64_t v40 = (uint8_t *)v39;
    uint64_t v65 = swift_slowAlloc();
    uint64_t v85 = v65;
    *(_DWORD *)uint64_t v40 = 136446210;
    v64[1] = v40 + 4;
    sub_1000837E0();
    sub_1000757E0((unint64_t *)&qword_1000A8CE8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v64[0] = v14;
    uint64_t v41 = v68;
    uint64_t v42 = sub_100083BF0();
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v9, v41);
    uint64_t v84 = sub_10006863C(v42, v44, &v85);
    sub_100083A00();
    uint64_t v35 = v82;
    swift_bridgeObjectRelease();
    (*(void (**)(void, uint64_t))(v33 + 8))(v64[0], v35);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "GeneralMapsTimelineProvider: 'snapshot' requested (of size %{public}s)", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v34 = v66;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v35);
  }

  uint64_t v45 = v80;
  uint64_t v46 = v83;
  sub_100082E00();
  uint64_t v48 = v76;
  uint64_t v47 = v77;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  uint64_t v50 = v73;
  v49(v73, v46, v77);
  v34(v81, v79, v35);
  v49(v78, (char *)v45, v47);
  uint64_t v51 = *(unsigned __int8 *)(v48 + 80);
  uint64_t v52 = (v51 + 16) & ~v51;
  unint64_t v53 = (v74 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = v69;
  unint64_t v55 = (*(unsigned __int8 *)(v69 + 80) + v53 + 8) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  unint64_t v56 = (v75 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v79 = (v51 + 16 + v56) & ~v51;
  uint64_t v57 = swift_allocObject();
  uint64_t v58 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
  v58(v57 + v52, v50, v47);
  *(void *)(v57 + v53) = v72;
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v57 + v55, v81, v82);
  uint64_t v59 = (void *)(v57 + v56);
  uint64_t v60 = v71;
  void *v59 = v70;
  v59[1] = v60;
  v58(v57 + v79, v78, v47);
  swift_retain();
  swift_retain();
  uint64_t v61 = v80;
  sub_100069E20(v80, (uint64_t)sub_100077F28, v57);
  swift_release();
  uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v62(v61, v47);
  return ((uint64_t (*)(char *, uint64_t))v62)(v83, v47);
}

uint64_t sub_100071074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v80 = a6;
  uint64_t v93 = a4;
  uint64_t v94 = a5;
  uint64_t v97 = a3;
  uint64_t v98 = a2;
  uint64_t v85 = sub_1000837F0();
  uint64_t v79 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v78 = v7;
  uint64_t v84 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082E40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v86 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v11;
  __chkstk_darwin(v10);
  uint64_t v88 = (char *)&v74 - v12;
  uint64_t v82 = sub_100002874(&qword_1000AAB08);
  uint64_t v74 = *(void *)(v82 - 8);
  uint64_t v13 = *(void *)(v74 + 64);
  uint64_t v14 = __chkstk_darwin(v82);
  uint64_t v83 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v75 = (uint64_t)&v74 - v16;
  __chkstk_darwin(v15);
  uint64_t v87 = (uint64_t)&v74 - v17;
  uint64_t v18 = sub_100002874(&qword_1000AAAF8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline(0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v89 = (uint64_t)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v25 = v24 - 8;
  uint64_t v76 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v76 + 64);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v81 = (uint64_t)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v74 - v28;
  uint64_t v92 = v9;
  BOOL v30 = *(void (**)(void))(v9 + 16);
  uint64_t v90 = a1;
  os_log_type_t v91 = v30;
  uint64_t v95 = v8;
  ((void (*)(char *, uint64_t, uint64_t))v30)((char *)&v74 - v28, a1, v8);
  uint64_t v31 = &v29[*(int *)(v25 + 28)];
  uint64_t v32 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
  uint64_t v33 = *(int *)(v25 + 32);
  unint64_t v96 = v29;
  uint64_t v34 = &v29[v33];
  uint64_t v35 = sub_1000837C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  uint64_t v36 = v98 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_timeline;
  swift_beginAccess();
  sub_10001A720(v36, (uint64_t)v20, &qword_1000AAAF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_100019138((uint64_t)v20, &qword_1000AAAF8);
  }
  else
  {
    uint64_t v37 = v89;
    sub_100077894((uint64_t)v20, v89, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
    uint64_t v38 = *(void *)v37;
    if (*(void *)(*(void *)v37 + 16))
    {
      uint64_t v39 = v82;
      uint64_t v40 = v87;
      uint64_t v41 = (void *)(v87 + *(int *)(v82 + 48));
      uint64_t v42 = *(unsigned __int8 *)(v74 + 80);
      uint64_t v43 = v75;
      sub_10001A720(v38 + ((v42 + 32) & ~v42), v75, &qword_1000AAB08);
      unint64_t v44 = (long long *)(v43 + *(int *)(v39 + 48));
      uint64_t v45 = v92 + 32;
      uint64_t v74 = *(void *)(v92 + 32);
      uint64_t v46 = v95;
      ((void (*)(uint64_t, uint64_t, uint64_t))v74)(v40, v43, v95);
      sub_100075768(v44, (uint64_t)v41);
      uint64_t v47 = v41[4];
      uint64_t v92 = v41[3];
      uint64_t v75 = v47;
      uint64_t v86 = (char *)sub_1000773D0(v41, v92);
      uint64_t v48 = v91;
      ((void (*)(char *, uint64_t, uint64_t))v91)(v88, v90, v46);
      uint64_t v49 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v84, v97, v85);
      sub_1000778FC((uint64_t)v96, v81, type metadata accessor for GeneralMapsTimelineEntry);
      uint64_t v50 = v83 + *(int *)(v82 + 48);
      v48();
      sub_100077414((uint64_t)v41, v50);
      unint64_t v51 = (*(unsigned __int8 *)(v45 + 48) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 48);
      unint64_t v52 = (v77 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v53 = (*(unsigned __int8 *)(v49 + 80) + v52 + 8) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      unint64_t v54 = (v78 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v55 = (*(unsigned __int8 *)(v76 + 80) + v54 + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
      os_log_type_t v91 = (void (*)(void))((v26 + v42 + v55) & ~v42);
      uint64_t v56 = swift_allocObject();
      ((void (*)(unint64_t, char *, uint64_t))v74)(v56 + v51, v88, v95);
      *(void *)(v56 + v52) = v98;
      (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v56 + v53, v84, v85);
      uint64_t v57 = (void *)(v56 + v54);
      uint64_t v58 = v94;
      *uint64_t v57 = v93;
      v57[1] = v58;
      sub_100077894(v81, v56 + v55, type metadata accessor for GeneralMapsTimelineEntry);
      sub_100019284(v83, (uint64_t)v91 + v56, &qword_1000AAB08);
      uint64_t v59 = v75;
      uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v75 + 8);
      swift_retain();
      swift_retain();
      v60(v97, v80, sub_10007868C, v56, v92, v59);
      swift_release();
      sub_100075780(v89, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
      sub_100075780((uint64_t)v96, type metadata accessor for GeneralMapsTimelineEntry);
      return sub_100019138(v87, &qword_1000AAB08);
    }
    sub_100075780(v89, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
  }
  uint64_t v62 = v95;
  uint64_t v63 = v90;
  uint64_t v64 = v86;
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_100082F00();
  sub_10001859C(v65, (uint64_t)qword_1000ACBA8);
  ((void (*)(char *, uint64_t, uint64_t))v91)(v64, v63, v62);
  unint64_t v66 = sub_100082EE0();
  os_log_type_t v67 = sub_100083930();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 134349056;
    uint64_t v69 = v88;
    sub_100082E30();
    sub_100082DC0();
    uint64_t v71 = v70;
    uint64_t v72 = *(void (**)(char *, uint64_t))(v92 + 8);
    v72(v69, v62);
    uint64_t v99 = v71;
    sub_100083A00();
    v72(v64, v62);
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "GeneralMapsTimelineProvider: no timeline; will call 'snapshot' completion with empty entry (%{public}f seconds elapsed)",
      v68,
      0xCu);
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v64, v62);
  }

  uint64_t v73 = (uint64_t)v96;
  sub_10006FFDC(v97, v93, v94, (uint64_t)v96);
  return sub_100075780(v73, type metadata accessor for GeneralMapsTimelineEntry);
}

uint64_t sub_100071A64(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v75 = (char *)a7;
  uint64_t v76 = a8;
  uint64_t v84 = a3;
  uint64_t v85 = a6;
  uint64_t v82 = a2;
  uint64_t v83 = a4;
  uint64_t v10 = sub_100002874(&qword_1000A7B30);
  __chkstk_darwin(v10 - 8);
  uint64_t v80 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100002874(&qword_1000AAB08);
  __chkstk_darwin(v73);
  uint64_t v77 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for GeneralMapsTimelineEntry(0);
  __chkstk_darwin(v78);
  uint64_t v79 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = (char *)sub_100082E40();
  uint64_t v14 = *((void *)v86 - 1);
  uint64_t v15 = __chkstk_darwin(v86);
  uint64_t v72 = (char *)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v68 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v68 - v20;
  uint64_t v22 = sub_100002874(&qword_1000A7B28);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v74 = (uint64_t)v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v68 - v25;
  uint64_t v27 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v71 = (uint64_t)v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)v68 - v31;
  sub_10001A720(a1, (uint64_t)v26, &qword_1000A7B28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_100019138((uint64_t)v26, &qword_1000A7B28);
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_100082F00();
    sub_10001859C(v33, (uint64_t)qword_1000ACBA8);
    uint64_t v34 = (uint64_t)v86;
    (*(void (**)(char *, void (*)(void), char *))(v14 + 16))(v21, v82, v86);
    uint64_t v35 = sub_100082EE0();
    os_log_type_t v36 = sub_100083930();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = v85;
    if (v37)
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v81 = a5;
      *(_DWORD *)uint64_t v39 = 134349056;
      uint64_t v40 = v72;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v42 = v41;
      uint64_t v43 = *(void (**)(char *, uint64_t))(v14 + 8);
      v43(v40, v34);
      uint64_t v87 = v42;
      a5 = v81;
      sub_100083A00();
      v43(v21, v34);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "GeneralMapsTimelineProvider: could not resolve content; will call 'snapshot' completion with empty entry (%{publ"
        "ic}f seconds elapsed)",
        v39,
        0xCu);
      uint64_t v38 = v85;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v34);
    }

    return sub_10006FFDC(v83, a5, v38, (uint64_t)v75);
  }
  else
  {
    uint64_t v81 = a5;
    uint64_t v75 = v32;
    sub_100077894((uint64_t)v26, (uint64_t)v32, type metadata accessor for GeneralMapsTimelineEntryContent);
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_100082F00();
    sub_10001859C(v44, (uint64_t)qword_1000ACBA8);
    uint64_t v45 = v82;
    uint64_t v46 = (uint64_t)v86;
    uint64_t v82 = *(void (**)(void))(v14 + 16);
    ((void (*)(char *, void (*)(void), char *))v82)(v19, v45, v86);
    uint64_t v47 = sub_100082EE0();
    os_log_type_t v48 = sub_100083910();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = v19;
      uint64_t v69 = v28;
      unint64_t v51 = v49;
      *(_DWORD *)uint64_t v49 = 134349056;
      v68[1] = v49 + 4;
      unint64_t v52 = v72;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v54 = v53;
      uint64_t v70 = v14;
      unint64_t v55 = *(void (**)(char *, char *))(v14 + 8);
      v55(v52, v86);
      uint64_t v87 = v54;
      uint64_t v46 = (uint64_t)v86;
      sub_100083A00();
      v55(v50, (char *)v46);
      uint64_t v14 = v70;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "GeneralMapsTimelineProvider: will call 'snapshot' completion with entry (%{public}f seconds elapsed)", v51, 0xCu);
      uint64_t v28 = v69;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v46);
    }

    uint64_t v57 = *(int *)(v73 + 48);
    uint64_t v58 = v77;
    uint64_t v59 = (uint64_t)&v77[v57];
    uint64_t v86 = &v77[v57];
    uint64_t v60 = v76 + v57;
    v82(v77);
    sub_100077414(v60, v59);
    uint64_t v62 = v74;
    uint64_t v61 = (uint64_t)v75;
    sub_1000778FC((uint64_t)v75, v74, type metadata accessor for GeneralMapsTimelineEntryContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v62, 0, 1, v27);
    uint64_t v63 = v71;
    sub_1000778FC(v61, v71, type metadata accessor for GeneralMapsTimelineEntryContent);
    swift_getEnumCaseMultiPayload();
    uint64_t v64 = (uint64_t)v80;
    sub_1000837B0();
    sub_100075780(v63, type metadata accessor for GeneralMapsTimelineEntryContent);
    uint64_t v65 = sub_1000837C0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 0, 1, v65);
    uint64_t v66 = (uint64_t)v79;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v79, v58, v46);
    uint64_t v67 = v78;
    sub_100019284(v62, v66 + *(int *)(v78 + 20), &qword_1000A7B28);
    sub_100019284(v64, v66 + *(int *)(v67 + 24), &qword_1000A7B30);
    sub_100037104((uint64_t)v86);
    sub_10006FFDC(v83, v81, v85, v66);
    sub_100075780(v66, type metadata accessor for GeneralMapsTimelineEntry);
    return sub_100075780(v61, type metadata accessor for GeneralMapsTimelineEntryContent);
  }
}

uint64_t sub_1000722D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  v25[1] = a4;
  uint64_t v26 = a2;
  uint64_t v7 = v6;
  uint64_t v28 = a3;
  uint64_t v9 = sub_100083610();
  uint64_t v33 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100083630();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000837F0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t v27 = sub_1000839A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v15);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v19 + v18, (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  uint64_t v20 = (void *)(v19 + ((v17 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = v28;
  void *v20 = v26;
  v20[1] = v21;
  aBlock[4] = v29;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = v30;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  sub_100083620();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_1000757E0((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100074BCC(qword_1000A8810, (uint64_t *)&unk_1000A7F80);
  sub_100083A40();
  uint64_t v23 = (void *)v27;
  sub_1000839B0();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v32);
}

uint64_t sub_100072688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = a3;
  uint64_t v81 = a2;
  uint64_t v86 = a1;
  uint64_t v3 = sub_100083730();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  uint64_t v74 = v4;
  __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000837F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v66 - v10;
  uint64_t v12 = sub_100082E40();
  uint64_t v80 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v80 + 64);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v85 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v84 = (char *)&v66 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v83 = (uint64_t)&v66 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v21 = sub_1000836A0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t *)((char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000188D8(0, (unint64_t *)&qword_1000A7F58);
  uint64_t *v24 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v22 + 104))(v24, enum case for DispatchPredicate.onQueue(_:), v21);
  char v25 = sub_1000836C0();
  (*(void (**)(uint64_t *, uint64_t))(v22 + 8))(v24, v21);
  if (v25)
  {
    uint64_t v26 = *(void *)(v88 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_pendingRequestCount);
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (!v27)
    {
      *(void *)(v88 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_pendingRequestCount) = v28;
      uint64_t v82 = v20;
      sub_100082E30();
      if (qword_1000A7A00 == -1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  uint64_t v29 = sub_100082F00();
  sub_10001859C(v29, (uint64_t)qword_1000ACBA8);
  uint64_t v30 = v11;
  uint64_t v31 = v11;
  uint64_t v32 = v6;
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v77(v31, v86, v6);
  uint64_t v33 = sub_100082EE0();
  os_log_type_t v34 = sub_100083910();
  int v35 = v34;
  BOOL v36 = os_log_type_enabled(v33, v34);
  uint64_t v76 = v7;
  if (v36)
  {
    int v70 = v35;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v71 = v12;
    uint64_t v38 = (uint8_t *)v37;
    uint64_t v69 = swift_slowAlloc();
    uint64_t v90 = v69;
    uint64_t v67 = v30;
    uint64_t v68 = v38;
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v66 = v38 + 4;
    uint64_t v39 = v72;
    sub_1000837E0();
    sub_1000757E0((unint64_t *)&qword_1000A8CE8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v40 = v7;
    uint64_t v41 = v32;
    uint64_t v42 = v73;
    uint64_t v43 = sub_100083BF0();
    unint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v39, v42);
    uint64_t v89 = sub_10006863C(v43, v45, &v90);
    sub_100083A00();
    swift_bridgeObjectRelease();
    uint64_t v46 = v40;
    uint64_t v47 = v41;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v67, v41);
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v70, "GeneralMapsTimelineProvider: 'timeline' requested (of size %{public}s)", v68, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v12 = v71;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v6);

    uint64_t v47 = v6;
  }
  uint64_t v75 = v47;
  os_log_type_t v48 = v82;
  uint64_t v49 = v83;
  sub_100082E00();
  uint64_t v50 = v80;
  unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  v51(v84, v48, v12);
  v77(v87, v86, v47);
  v51(v85, (char *)v49, v12);
  uint64_t v52 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v53 = (v52 + 24) & ~v52;
  uint64_t v54 = v76;
  unint64_t v55 = (v13 + *(unsigned __int8 *)(v76 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  unint64_t v56 = (v78 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v57 = v12;
  uint64_t v58 = (v52 + v56 + 16) & ~v52;
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v88;
  uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
  v60(v59 + v53, v84, v57);
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v59 + v55, v87, v75);
  uint64_t v61 = (void *)(v59 + v56);
  uint64_t v62 = v79;
  void *v61 = v81;
  v61[1] = v62;
  v60(v59 + v58, v85, v57);
  swift_retain();
  swift_retain();
  uint64_t v63 = v83;
  sub_100069E20(v83, (uint64_t)sub_100075420, v59);
  swift_release();
  uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v64(v63, v57);
  return ((uint64_t (*)(char *, uint64_t))v64)(v82, v57);
}

uint64_t sub_100072E10(uint64_t a1, uint8_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v112 = a6;
  uint64_t v102 = a5;
  uint64_t v101 = a4;
  uint64_t v116 = a3;
  uint64_t v100 = a2;
  uint64_t v7 = sub_1000837A0();
  __chkstk_darwin(v7 - 8);
  BOOL v117 = (void *)((char *)v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100002874(&qword_1000AAB28);
  uint64_t isa = (uint64_t)v9[-1].isa;
  dispatch_group_t v119 = v9;
  __chkstk_darwin(v9);
  id v110 = (long long *)((char *)v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v97 = sub_100083610();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v94 = (char *)v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100083630();
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v92 = (char *)v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000837F0();
  uint64_t v91 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v90 = v13;
  uint64_t v98 = (char *)v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100002874(&qword_1000AAB08);
  uint64_t v109 = *(void *)(v114 - 8);
  uint64_t v14 = *(void *)(v109 + 64);
  uint64_t v15 = __chkstk_darwin(v114);
  id v111 = (char *)v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v120 = (uint8_t *)v85 - v17;
  __chkstk_darwin(v16);
  Swift::String v113 = (char *)v85 - v18;
  uint64_t v115 = sub_100082E40();
  uint64_t v19 = *(void *)(v115 - 8);
  uint64_t v20 = __chkstk_darwin(v115);
  uint64_t v22 = (char *)v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v85 - v23;
  uint64_t v25 = sub_100002874(&qword_1000AAAF8);
  __chkstk_darwin(v25 - 8);
  BOOL v27 = (char *)v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline(0);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (void *)((char *)v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = a1;
  uint64_t v32 = a1 + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider_timeline;
  swift_beginAccess();
  sub_10001A720(v32, (uint64_t)v27, &qword_1000AAAF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_100019138((uint64_t)v27, &qword_1000AAAF8);
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_100082F00();
    sub_10001859C(v33, (uint64_t)qword_1000ACBA8);
    uint64_t v34 = v115;
    (*(void (**)(char *, uint8_t *, uint64_t))(v19 + 16))(v24, v100, v115);
    int v35 = sub_100082EE0();
    os_log_type_t v36 = sub_100083930();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 134349056;
      uint64_t v120 = v37 + 4;
      sub_100082E30();
      sub_100082DC0();
      uint64_t v39 = v38;
      uint64_t v40 = *(void (**)(char *, uint64_t))(v19 + 8);
      v40(v22, v34);
      aBlock[0] = v39;
      sub_100083A00();
      v40(v24, v34);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "GeneralMapsTimelineProvider: no timeline; will call 'timeline' completion with empty array (%{public}f seconds elapsed)",
        v37,
        0xCu);
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v34);
    }
    uint64_t v66 = v116;
    uint64_t v67 = v102;

    sub_100083790();
    type metadata accessor for GeneralMapsTimelineEntry(0);
    sub_1000757E0(qword_1000AAAC8, (void (*)(uint64_t))type metadata accessor for GeneralMapsTimelineEntry);
    uint64_t v68 = v110;
    sub_100083800();
    sub_100070470(v66, v101, v67, (uint64_t)v68);
    return (*(uint64_t (**)(long long *, dispatch_group_t))(isa + 8))(v68, v119);
  }
  else
  {
    uint64_t v88 = v22;
    sub_100077894((uint64_t)v27, (uint64_t)v31, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = _swiftEmptyArrayStorage;
    uint64_t v87 = v31;
    uint64_t v42 = *v31;
    swift_bridgeObjectRetain();
    dispatch_group_t v43 = dispatch_group_create();
    uint64_t v44 = *(void *)(v42 + 16);
    uint64_t isa = v41;
    dispatch_group_t v119 = v43;
    if (v44)
    {
      unint64_t v45 = v43;
      uint64_t v46 = (uint64_t)v113;
      uint64_t v47 = v114;
      id v110 = (long long *)&v113[*(int *)(v114 + 48)];
      uint64_t v48 = *(unsigned __int8 *)(v109 + 80);
      uint64_t v49 = (v48 + 32) & ~v48;
      v85[1] = v42;
      uint64_t v50 = v42 + v49;
      uint64_t v108 = (void (**)(uint8_t *, uint64_t, uint64_t))(v19 + 32);
      uint64_t v86 = v19;
      uint64_t v106 = *(void *)(v109 + 72);
      uint64_t v109 = v49;
      uint64_t v105 = v49 + v14;
      uint64_t v104 = v48 | 7;
      uint64_t v107 = (void (**)(char *, uint8_t *, uint64_t))(v19 + 16);
      v85[0] = (v19 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      do
      {
        sub_10001A720(v50, v46, &qword_1000AAB08);
        unint64_t v51 = &v120[*(int *)(v47 + 48)];
        uint64_t v52 = v46;
        uint64_t v53 = v115;
        (*v108)(v120, v52, v115);
        sub_100075768(v110, (uint64_t)v51);
        dispatch_group_enter(v45);
        uint64_t v55 = *((void *)v51 + 3);
        uint64_t v54 = *((void *)v51 + 4);
        BOOL v117 = sub_1000773D0(v51, v55);
        uint64_t v56 = *(int *)(v47 + 48);
        uint64_t v57 = (uint64_t)v111;
        uint64_t v58 = (uint64_t)&v111[v56];
        uint64_t v59 = *v107;
        (*v107)(v111, v120, v53);
        sub_100077414((uint64_t)v51, v58);
        uint64_t v60 = swift_allocObject();
        *(void *)(v60 + 16) = v119;
        *(void *)(v60 + 24) = v41;
        sub_100019284(v57, v60 + v109, &qword_1000AAB08);
        uint64_t v61 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v54 + 8);
        swift_retain();
        uint64_t v62 = v119;
        uint64_t v46 = (uint64_t)v113;
        uint64_t v63 = v54;
        unint64_t v45 = v119;
        v61(v116, v112, sub_10007757C, v60, v55, v63);
        uint64_t v47 = v114;
        uint64_t v41 = isa;
        swift_release();
        sub_100019138((uint64_t)v120, &qword_1000AAB08);
        v50 += v106;
        --v44;
      }
      while (v44);
      swift_bridgeObjectRelease();
      uint64_t v64 = v103;
      uint64_t v65 = v86;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v65 = v19;
      uint64_t v59 = *(void (**)(char *, uint8_t *, uint64_t))(v19 + 16);
      uint64_t v64 = v103;
    }
    uint64_t v120 = *(uint8_t **)(v64 + 104);
    int v70 = v88;
    uint64_t v71 = v115;
    v59(v88, v100, v115);
    uint64_t v72 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v98, v116, v99);
    unint64_t v73 = (*(unsigned __int8 *)(v65 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v74 = (v89 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v75 = (*(unsigned __int8 *)(v72 + 80) + v74 + 8) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    unint64_t v76 = (v90 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = isa;
    (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v77 + v73, v70, v71);
    *(void *)(v77 + v74) = v64;
    (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v77 + v75, v98, v99);
    uint64_t v78 = (void *)(v77 + v76);
    uint64_t v79 = v102;
    *uint64_t v78 = v101;
    v78[1] = v79;
    aBlock[4] = sub_100077784;
    aBlock[5] = v77;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100068EDC;
    void aBlock[3] = &unk_10009F188;
    uint64_t v80 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v81 = v92;
    sub_100083620();
    id v121 = _swiftEmptyArrayStorage;
    sub_1000757E0((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100002874((uint64_t *)&unk_1000A7F80);
    sub_100074BCC(qword_1000A8810, (uint64_t *)&unk_1000A7F80);
    uint64_t v82 = v94;
    uint64_t v83 = v97;
    sub_100083A40();
    dispatch_group_t v84 = v119;
    sub_100083960();
    _Block_release(v80);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v82, v83);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v81, v95);
    sub_100075780((uint64_t)v87, type metadata accessor for GeneralMapsTimelineProvider.ResolvableContentTimeline);
    swift_release();
    return swift_release();
  }
}

void sub_100073B5C(uint64_t a1, NSObject *a2, char *a3, uint64_t a4)
{
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  dispatch_group_t v52 = a2;
  uint64_t v5 = sub_100002874(&qword_1000A7B30);
  __chkstk_darwin(v5 - 8);
  uint64_t v49 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100002874(&qword_1000AAB08);
  __chkstk_darwin(v7);
  unint64_t v51 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v50 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002874(&qword_1000A7B28);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  sub_10001A720(a1, (uint64_t)v16, &qword_1000A7B28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100019138((uint64_t)v16, &qword_1000A7B28);
    if (qword_1000A7A00 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100082F00();
    sub_10001859C(v24, (uint64_t)qword_1000ACBA8);
    uint64_t v25 = sub_100082EE0();
    os_log_type_t v26 = sub_100083930();
    if (os_log_type_enabled(v25, v26))
    {
      BOOL v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "GeneralMapsTimelineProvider: could not resolve content; skipping entry",
        v27,
        2u);
      swift_slowDealloc();
    }

    dispatch_group_leave(v52);
  }
  else
  {
    uint64_t v44 = (unint64_t *)(v46 + 16);
    sub_100077894((uint64_t)v16, (uint64_t)v23, type metadata accessor for GeneralMapsTimelineEntryContent);
    uint64_t v28 = *(int *)(v7 + 48);
    uint64_t v29 = (uint64_t)&v51[v28];
    uint64_t v30 = (uint64_t)v14;
    uint64_t v31 = v51;
    uint64_t v46 = v10;
    uint64_t v32 = v47;
    uint64_t v33 = v47 + v28;
    uint64_t v45 = sub_100082E40();
    uint64_t v34 = *(void *)(v45 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v31, v32, v45);
    sub_100077414(v33, v29);
    sub_1000778FC((uint64_t)v23, v30, type metadata accessor for GeneralMapsTimelineEntryContent);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v30, 0, 1, v17);
    int v35 = v44;
    sub_1000778FC((uint64_t)v23, (uint64_t)v21, type metadata accessor for GeneralMapsTimelineEntryContent);
    swift_getEnumCaseMultiPayload();
    uint64_t v36 = (uint64_t)v49;
    sub_1000837B0();
    sub_100075780((uint64_t)v21, type metadata accessor for GeneralMapsTimelineEntryContent);
    uint64_t v37 = sub_1000837C0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
    uint64_t v38 = (uint64_t)v46;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v46, v51, v45);
    uint64_t v39 = v48;
    sub_100019284(v30, v38 + *(int *)(v48 + 20), &qword_1000A7B28);
    sub_100019284(v36, v38 + *(int *)(v39 + 24), &qword_1000A7B30);
    sub_100037104(v29);
    swift_beginAccess();
    unint64_t v40 = *v35;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v35 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v40 = sub_100074FD0(0, *(void *)(v40 + 16) + 1, 1, v40, &qword_1000AAB30, type metadata accessor for GeneralMapsTimelineEntry, type metadata accessor for GeneralMapsTimelineEntry);
      unint64_t *v35 = v40;
    }
    unint64_t v43 = *(void *)(v40 + 16);
    unint64_t v42 = *(void *)(v40 + 24);
    if (v43 >= v42 >> 1)
    {
      unint64_t v40 = sub_100074FD0(v42 > 1, v43 + 1, 1, v40, &qword_1000AAB30, type metadata accessor for GeneralMapsTimelineEntry, type metadata accessor for GeneralMapsTimelineEntry);
      unint64_t *v35 = v40;
    }
    *(void *)(v40 + 16) = v43 + 1;
    sub_100077894(v38, v40+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v43, type metadata accessor for GeneralMapsTimelineEntry);
    swift_endAccess();
    dispatch_group_leave(v52);
    sub_100075780((uint64_t)v23, type metadata accessor for GeneralMapsTimelineEntryContent);
  }
}

uint64_t sub_1000741FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v10 = sub_1000837A0();
  __chkstk_darwin(v10 - 8);
  int v35 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100002874(&qword_1000AAB28);
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  __chkstk_darwin(v12);
  uint64_t v34 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100082E40();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v33 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v31 - v18;
  swift_beginAccess();
  sub_100074668((unint64_t *)(a1 + 16));
  swift_endAccess();
  if (qword_1000A7A00 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100082F00();
  sub_10001859C(v20, (uint64_t)qword_1000ACBA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, a2, v14);
  swift_retain();
  uint64_t v21 = sub_100082EE0();
  os_log_type_t v22 = sub_100083910();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (_DWORD *)swift_slowAlloc();
    uint64_t v32 = a6;
    uint64_t v24 = v23;
    _DWORD *v23 = 134349312;
    swift_beginAccess();
    uint64_t v40 = *(void *)(*(void *)(a1 + 16) + 16);
    v31[1] = a3;
    sub_100083A00();
    swift_release();
    *((_WORD *)v24 + 6) = 2050;
    v31[0] = (char *)v24 + 14;
    uint64_t v25 = v33;
    sub_100082E30();
    sub_100082DC0();
    uint64_t v27 = v26;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v15 + 8);
    v28(v25, v14);
    uint64_t v40 = v27;
    sub_100083A00();
    v28(v19, v14);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "GeneralMapsTimelineProvider: will call 'timeline' completion with %{public}ld entries (%{public}f seconds elapsed)", (uint8_t *)v24, 0x16u);
    a6 = v32;
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100083790();
  type metadata accessor for GeneralMapsTimelineEntry(0);
  sub_1000757E0(qword_1000AAAC8, (void (*)(uint64_t))type metadata accessor for GeneralMapsTimelineEntry);
  uint64_t v29 = (uint64_t)v34;
  sub_100083800();
  sub_100070470(v38, v39, a6, v29);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v29, v37);
}

Swift::Int sub_100074668(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for GeneralMapsTimelineEntry(0) - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1000770D8(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100075C14(v6);
  *a1 = v3;
  return result;
}

id sub_100074714()
{
  uint64_t v1 = OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider____lazy_storage___briefDateComponentsFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider____lazy_storage___briefDateComponentsFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC17GeneralMapsWidget27GeneralMapsTimelineProvider____lazy_storage___briefDateComponentsFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    [v4 setAllowedUnits:112];
    [v4 setUnitsStyle:2];
    [v4 setMaximumUnitCount:2];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1000747C4@<X0>(uint64_t a1@<X8>)
{
  sub_100082E30();
  uint64_t v2 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + *(int *)(v2 + 24);
  uint64_t v6 = sub_1000837C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, 1, 1, v6);
}

uint64_t sub_100074898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000722D4(a1, a2, a3, (uint64_t)&unk_10009F210, (uint64_t)sub_100077CCC, (uint64_t)&unk_10009F228);
}

uint64_t sub_1000748E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000722D4(a1, a2, a3, (uint64_t)&unk_10009EFE0, (uint64_t)sub_100074B9C, (uint64_t)&unk_10009EFF8);
}

uint64_t sub_100074928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000749DC;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_1000749DC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100074AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100079008;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_100074B84()
{
  return sub_100077BD8((uint64_t (*)(void))&type metadata accessor for TimelineProviderContext);
}

uint64_t sub_100074B9C()
{
  return sub_100077CE4((uint64_t (*)(unint64_t, void, void))sub_100072688);
}

uint64_t sub_100074BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100074BC4()
{
  return swift_release();
}

uint64_t sub_100074BCC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000028B8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100074C1C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100074FD0(a1, a2, a3, a4, &qword_1000AAB58, type metadata accessor for NearbyButtonActionLink, type metadata accessor for NearbyButtonActionLink);
}

char *sub_100074C50(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100002874(&qword_1000AAB40);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100077130(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100074D60(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100002874(&qword_1000AAB20);
  uint64_t v10 = *(void *)(sub_100002874(&qword_1000AAB08) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_100083B60();
    __break(1u);
    return result;
  }
  _OWORD v13[2] = v8;
  _OWORD v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100002874(&qword_1000AAB08) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10007723C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_100074FD0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100002874(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_100083B60();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100078E74(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_100075250(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100074FD0(a1, a2, a3, a4, &qword_1000AAB50, type metadata accessor for NearbyButtonContent, type metadata accessor for NearbyButtonContent);
}

uint64_t sub_100075284()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1000837F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v14 = v3 | v8 | 7;
  unint64_t v10 = (v3 + ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v3;
  swift_release();
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  v12(v0 + v10, v1);

  return _swift_deallocObject(v0, v10 + v5, v14);
}

uint64_t sub_100075420()
{
  uint64_t v1 = *(void *)(sub_100082E40() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(sub_1000837F0() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + v7);
  uint64_t v10 = *(void *)(v0 + v7 + 8);

  return sub_100072E10(v8, (uint8_t *)(v0 + v3), v0 + v6, v9, v10, v0 + ((v2 + v7 + 16) & ~v2));
}

uint64_t sub_100075530()
{
  return sub_100077BD8((uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_100075548()
{
  uint64_t v1 = *(void *)(sub_100082E40() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = (char *)(v0 + v2);
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = *(void (**)(void))v5;
  uint64_t v7 = *(void *)(v5 + 8);

  return sub_10006A1B8(v3, v4, v6, v7);
}

uint64_t sub_1000755DC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10007561C(uint64_t a1)
{
  sub_10006B19C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100075624(uint64_t a1)
{
  unint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v4;
  return a1;
}

uint64_t sub_10007569C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000AAAF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100075704(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100075768(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100075780(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000757E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100075828(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000839D0(*(void *)(v2 + 40));
  return sub_100075A38(a1, v4, &qword_1000A7F68);
}

unint64_t sub_100075878(char a1)
{
  char v2 = a1 & 1;
  sub_100083C20();
  sub_100083C30(a1 & 1);
  Swift::Int v3 = sub_100083C50();

  return sub_10007597C(v2, v3);
}

unint64_t sub_1000758E8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000839D0(*(void *)(v2 + 40));
  return sub_100075A38(a1, v4, &qword_1000A8D08);
}

unint64_t sub_100075938(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_100083A60(*(void *)(v2 + 40));

  return sub_100075B4C(a1, v4);
}

unint64_t sub_10007597C(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100075A38(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1000188D8(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1000839E0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1000839E0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_100075B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000185D4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_100083A70();
      sub_100018630((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

Swift::Int sub_100075C14(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v131 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v128 = (uint64_t)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v139 = (uint64_t)&v122 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v136 = (uint64_t)&v122 - v10;
  __chkstk_darwin(v9);
  uint64_t v135 = (uint64_t)&v122 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_100083BE0(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      return sub_1000766C0(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  Swift::Int v124 = result;
  if (v12 < 2)
  {
    unint64_t v18 = (char *)&_swiftEmptyArrayStorage;
    unint64_t v130 = (unint64_t)&_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
    uint64_t v123 = &_swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_106:
      uint64_t v115 = v18;
      if (v20 >= 2)
      {
        uint64_t v116 = *a1;
        do
        {
          unint64_t v117 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_135;
          }
          if (!v116) {
            goto LABEL_147;
          }
          uint64_t v118 = *(void *)&v115[16 * v117 + 32];
          uint64_t v119 = *(void *)&v115[16 * v20 + 24];
          sub_10007697C(v116 + *(void *)(v131 + 72) * v118, v116 + *(void *)(v131 + 72) * *(void *)&v115[16 * v20 + 16], v116 + *(void *)(v131 + 72) * v119, v130);
          if (v2) {
            break;
          }
          if (v119 < v118) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_1000770C4((uint64_t)v115);
          }
          if (v117 >= *((void *)v115 + 2)) {
            goto LABEL_137;
          }
          uint64_t v120 = &v115[16 * v117 + 32];
          *(void *)uint64_t v120 = v118;
          *((void *)v120 + 1) = v119;
          unint64_t v121 = *((void *)v115 + 2);
          if (v20 > v121) {
            goto LABEL_138;
          }
          memmove(&v115[16 * v20 + 16], &v115[16 * v20 + 32], 16 * (v121 - v20));
          *((void *)v115 + 2) = v121 - 1;
          unint64_t v20 = v121 - 1;
        }
        while (v121 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v123[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1000838F0();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v131 + 80);
    uint64_t v123 = (void *)v16;
    unint64_t v130 = v16 + ((v17 + 32) & ~v17);
  }
  Swift::Int v19 = 0;
  unint64_t v18 = (char *)&_swiftEmptyArrayStorage;
  os_log_type_t v137 = a1;
  while (1)
  {
    Swift::Int v21 = v19;
    Swift::Int v22 = v19 + 1;
    Swift::Int v129 = v19;
    if (v19 + 1 >= v12)
    {
      Swift::Int v39 = v19 + 1;
      Swift::Int v38 = v19;
      goto LABEL_58;
    }
    uint64_t v126 = v2;
    uint64_t v23 = *a1;
    Swift::Int v24 = *(void *)(v131 + 72);
    uint64_t v25 = v135;
    sub_1000778FC(*a1 + v24 * v22, v135, type metadata accessor for GeneralMapsTimelineEntry);
    uint64_t v134 = v23;
    Swift::Int v138 = v12;
    uint64_t v26 = v136;
    sub_1000778FC(v23 + v24 * v21, v136, type metadata accessor for GeneralMapsTimelineEntry);
    int v27 = sub_100082DF0();
    uint64_t v28 = v26;
    Swift::Int v29 = v138;
    sub_100075780(v28, type metadata accessor for GeneralMapsTimelineEntry);
    sub_100075780(v25, type metadata accessor for GeneralMapsTimelineEntry);
    Swift::Int v30 = v24;
    Swift::Int v140 = v24;
    if (v21 + 2 >= v29)
    {
      Swift::Int v33 = v21 + 2;
      Swift::Int v38 = v129;
      if ((v27 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      id v125 = v18;
      uint64_t v31 = v24 * v22;
      uint64_t v32 = v134;
      Swift::Int v33 = v21 + 2;
      uint64_t v34 = v30 * (v21 + 2);
      do
      {
        uint64_t v35 = v135;
        sub_1000778FC(v32 + v34, v135, type metadata accessor for GeneralMapsTimelineEntry);
        uint64_t v36 = v136;
        sub_1000778FC(v32 + v31, v136, type metadata accessor for GeneralMapsTimelineEntry);
        int v37 = sub_100082DF0();
        sub_100075780(v36, type metadata accessor for GeneralMapsTimelineEntry);
        sub_100075780(v35, type metadata accessor for GeneralMapsTimelineEntry);
        if ((v27 ^ v37))
        {
          a1 = v137;
          Swift::Int v29 = v138;
          unint64_t v18 = v125;
          Swift::Int v30 = v140;
          Swift::Int v38 = v129;
          if ((v27 & 1) == 0) {
            goto LABEL_37;
          }
          goto LABEL_24;
        }
        Swift::Int v30 = v140;
        v32 += v140;
        ++v33;
        Swift::Int v29 = v138;
      }
      while (v138 != v33);
      Swift::Int v33 = v138;
      a1 = v137;
      unint64_t v18 = v125;
      Swift::Int v38 = v129;
      if ((v27 & 1) == 0)
      {
LABEL_37:
        Swift::Int v39 = v33;
        break;
      }
    }
LABEL_24:
    if (v33 < v38) {
      goto LABEL_141;
    }
    Swift::Int v39 = v33;
    if (v38 >= v33) {
      break;
    }
    id v125 = v18;
    uint64_t v40 = 0;
    uint64_t v41 = v30 * (v33 - 1);
    Swift::Int v42 = v38;
    Swift::Int v43 = v33 * v30;
    Swift::Int v44 = v42;
    uint64_t v45 = v42 * v30;
    uint64_t v46 = v134;
    do
    {
      if (v44 != v39 + v40 - 1)
      {
        if (!v46) {
          goto LABEL_146;
        }
        sub_100077894(v46 + v45, v128, type metadata accessor for GeneralMapsTimelineEntry);
        if (v45 < v41 || v46 + v45 >= (unint64_t)(v46 + v43))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v45 != v41)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_100077894(v128, v46 + v41, type metadata accessor for GeneralMapsTimelineEntry);
        Swift::Int v39 = v33;
        Swift::Int v30 = v140;
      }
      ++v44;
      --v40;
      v41 -= v30;
      v43 -= v30;
      v45 += v30;
    }
    while (v44 < v39 + v40);
    a1 = v137;
    Swift::Int v29 = v138;
    unint64_t v18 = v125;
    uint64_t v2 = v126;
    Swift::Int v38 = v129;
    if (v39 < v138) {
      goto LABEL_41;
    }
LABEL_58:
    if (v39 < v38) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v138 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v18 = sub_100076E88(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v64 = *((void *)v18 + 2);
    unint64_t v63 = *((void *)v18 + 3);
    unint64_t v20 = v64 + 1;
    if (v64 >= v63 >> 1) {
      unint64_t v18 = sub_100076E88((char *)(v63 > 1), v64 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    uint64_t v65 = v18 + 32;
    uint64_t v66 = &v18[16 * v64 + 32];
    Swift::Int v67 = v138;
    *(void *)uint64_t v66 = v129;
    *((void *)v66 + 1) = v67;
    if (v64)
    {
      while (1)
      {
        unint64_t v68 = v20 - 1;
        if (v20 >= 4)
        {
          unint64_t v73 = &v65[16 * v20];
          uint64_t v74 = *((void *)v73 - 8);
          uint64_t v75 = *((void *)v73 - 7);
          BOOL v79 = __OFSUB__(v75, v74);
          uint64_t v76 = v75 - v74;
          if (v79) {
            goto LABEL_123;
          }
          uint64_t v78 = *((void *)v73 - 6);
          uint64_t v77 = *((void *)v73 - 5);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v71 = v77 - v78;
          char v72 = v79;
          if (v79) {
            goto LABEL_124;
          }
          unint64_t v80 = v20 - 2;
          uint64_t v81 = &v65[16 * v20 - 32];
          uint64_t v83 = *(void *)v81;
          uint64_t v82 = *((void *)v81 + 1);
          BOOL v79 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v79) {
            goto LABEL_126;
          }
          BOOL v79 = __OFADD__(v71, v84);
          uint64_t v85 = v71 + v84;
          if (v79) {
            goto LABEL_129;
          }
          if (v85 >= v76)
          {
            uint64_t v103 = &v65[16 * v68];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v79 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v79) {
              goto LABEL_133;
            }
            BOOL v96 = v71 < v106;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v97 = *((void *)v18 + 4);
            uint64_t v98 = *((void *)v18 + 5);
            BOOL v79 = __OFSUB__(v98, v97);
            uint64_t v90 = v98 - v97;
            char v91 = v79;
            goto LABEL_89;
          }
          uint64_t v70 = *((void *)v18 + 4);
          uint64_t v69 = *((void *)v18 + 5);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
        }
        if (v72) {
          goto LABEL_125;
        }
        unint64_t v80 = v20 - 2;
        uint64_t v86 = &v65[16 * v20 - 32];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v89 = __OFSUB__(v87, v88);
        uint64_t v90 = v87 - v88;
        char v91 = v89;
        if (v89) {
          goto LABEL_128;
        }
        uint64_t v92 = &v65[16 * v68];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v79 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v79) {
          goto LABEL_131;
        }
        if (__OFADD__(v90, v95)) {
          goto LABEL_132;
        }
        if (v90 + v95 >= v71)
        {
          BOOL v96 = v71 < v95;
LABEL_95:
          if (v96) {
            unint64_t v68 = v80;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v91) {
          goto LABEL_127;
        }
        uint64_t v99 = &v65[16 * v68];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_130;
        }
        if (v102 < v90) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v107 = v68 - 1;
        if (v68 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v108 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v109 = v18;
        id v110 = &v65[16 * v107];
        uint64_t v111 = *(void *)v110;
        uint64_t v112 = &v65[16 * v68];
        uint64_t v113 = *((void *)v112 + 1);
        sub_10007697C(v108 + *(void *)(v131 + 72) * *(void *)v110, v108 + *(void *)(v131 + 72) * *(void *)v112, v108 + *(void *)(v131 + 72) * v113, v130);
        if (v2) {
          goto LABEL_117;
        }
        if (v113 < v111) {
          goto LABEL_120;
        }
        if (v68 > *((void *)v109 + 2)) {
          goto LABEL_121;
        }
        *(void *)id v110 = v111;
        *(void *)&v65[16 * v107 + 8] = v113;
        unint64_t v114 = *((void *)v109 + 2);
        if (v68 >= v114) {
          goto LABEL_122;
        }
        unint64_t v18 = v109;
        unint64_t v20 = v114 - 1;
        memmove(&v65[16 * v68], v112 + 16, 16 * (v114 - 1 - v68));
        *((void *)v109 + 2) = v114 - 1;
        a1 = v137;
        if (v114 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    Swift::Int v12 = a1[1];
    Swift::Int v19 = v138;
    if (v138 >= v12) {
      goto LABEL_106;
    }
  }
  uint64_t v2 = v126;
  if (v39 >= v29) {
    goto LABEL_58;
  }
LABEL_41:
  if (__OFSUB__(v39, v38)) {
    goto LABEL_139;
  }
  if (v39 - v38 >= v124) {
    goto LABEL_58;
  }
  if (__OFADD__(v38, v124)) {
    goto LABEL_142;
  }
  if (v38 + v124 >= v29) {
    Swift::Int v47 = v29;
  }
  else {
    Swift::Int v47 = v38 + v124;
  }
  if (v47 >= v38)
  {
    if (v39 != v47)
    {
      id v125 = v18;
      uint64_t v126 = v2;
      uint64_t v48 = *(void *)(v131 + 72);
      uint64_t v49 = v48 * (v39 - 1);
      uint64_t v133 = v48;
      Swift::Int v50 = v39 * v48;
      Swift::Int v127 = v47;
      do
      {
        uint64_t v52 = 0;
        Swift::Int v138 = v39;
        uint64_t v134 = v50;
        while (1)
        {
          Swift::Int v140 = v38;
          uint64_t v53 = *a1;
          uint64_t v54 = v50 + v52 + *a1;
          uint64_t v55 = v135;
          sub_1000778FC(v54, v135, type metadata accessor for GeneralMapsTimelineEntry);
          uint64_t v56 = v49;
          uint64_t v57 = v49 + v52 + v53;
          uint64_t v58 = v136;
          sub_1000778FC(v57, v136, type metadata accessor for GeneralMapsTimelineEntry);
          char v59 = sub_100082DF0();
          sub_100075780(v58, type metadata accessor for GeneralMapsTimelineEntry);
          sub_100075780(v55, type metadata accessor for GeneralMapsTimelineEntry);
          if ((v59 & 1) == 0) {
            break;
          }
          uint64_t v60 = *a1;
          if (!*a1) {
            goto LABEL_144;
          }
          Swift::Int v50 = v134;
          uint64_t v49 = v56;
          uint64_t v61 = v60 + v56 + v52;
          sub_100077894(v60 + v134 + v52, v139, type metadata accessor for GeneralMapsTimelineEntry);
          swift_arrayInitWithTakeFrontToBack();
          sub_100077894(v139, v61, type metadata accessor for GeneralMapsTimelineEntry);
          v52 -= v133;
          Swift::Int v38 = v140 + 1;
          a1 = v137;
          Swift::Int v51 = v138;
          if (v138 == v140 + 1) {
            goto LABEL_51;
          }
        }
        Swift::Int v51 = v138;
        uint64_t v49 = v56;
        Swift::Int v50 = v134;
LABEL_51:
        Swift::Int v39 = v51 + 1;
        v49 += v133;
        v50 += v133;
        Swift::Int v38 = v129;
      }
      while (v39 != v127);
      Swift::Int v39 = v127;
      unint64_t v18 = v125;
      uint64_t v2 = v126;
    }
    goto LABEL_58;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_100083B60();
  __break(1u);
  return result;
}

uint64_t sub_1000766C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v7 = __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v29 - 1);
    uint64_t v28 = v16;
    uint64_t v31 = v16 * v29;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      Swift::Int v19 = a4;
      uint64_t v20 = *a4;
      sub_1000778FC(v31 + v17 + v20, (uint64_t)v15, type metadata accessor for GeneralMapsTimelineEntry);
      sub_1000778FC(v32 + v17 + v20, (uint64_t)v11, type metadata accessor for GeneralMapsTimelineEntry);
      char v21 = sub_100082DF0();
      sub_100075780((uint64_t)v11, type metadata accessor for GeneralMapsTimelineEntry);
      a4 = v19;
      uint64_t result = sub_100075780((uint64_t)v15, type metadata accessor for GeneralMapsTimelineEntry);
      if ((v21 & 1) == 0)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *v19;
      if (!*v19) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_100077894(v22 + v31 + v17, v30, type metadata accessor for GeneralMapsTimelineEntry);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100077894(v30, v23, type metadata accessor for GeneralMapsTimelineEntry);
      v17 -= v28;
      ++v18;
      a4 = v19;
      if (v29 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10007697C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v8 = __chkstk_darwin(v44);
  uint64_t v45 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v28 = -v13;
        unint64_t v42 = a4;
        unint64_t v43 = a1;
        do
        {
          unint64_t v29 = a3 + v28;
          sub_1000778FC(v26 + v28, (uint64_t)v11, type metadata accessor for GeneralMapsTimelineEntry);
          unint64_t v30 = a2 + v28;
          unint64_t v31 = a3;
          uint64_t v32 = (uint64_t)v11;
          uint64_t v33 = v45;
          sub_1000778FC(a2 + v28, v45, type metadata accessor for GeneralMapsTimelineEntry);
          char v34 = sub_100082DF0();
          uint64_t v35 = v33;
          uint64_t v11 = (char *)v32;
          sub_100075780(v35, type metadata accessor for GeneralMapsTimelineEntry);
          sub_100075780(v32, type metadata accessor for GeneralMapsTimelineEntry);
          if (v34)
          {
            if (v31 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              BOOL v36 = v31 == a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
              if (!v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v48 += v28;
          }
          else
          {
            unint64_t v39 = v46;
            v46 += v28;
            if (v31 < v39 || v29 >= v39)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v30 = a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              unint64_t v38 = v43;
              if (v31 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v30 = a2;
              unint64_t v37 = v42;
            }
          }
          unint64_t v26 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v30;
          a3 = v29;
        }
        while (v30 > v38);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_1000778FC(a2, (uint64_t)v11, type metadata accessor for GeneralMapsTimelineEntry);
        uint64_t v21 = v45;
        sub_1000778FC(a4, v45, type metadata accessor for GeneralMapsTimelineEntry);
        char v22 = sub_100082DF0();
        sub_100075780(v21, type metadata accessor for GeneralMapsTimelineEntry);
        sub_100075780((uint64_t)v11, type metadata accessor for GeneralMapsTimelineEntry);
        unint64_t v23 = v48;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v48 < a2 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v47 + v13;
          if (v48 < v47 || v48 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v47 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v48 = v23 + v13;
        a4 = v47;
        if (v47 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_100076F84(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_100083BD0();
  __break(1u);
  return result;
}

char *sub_100076E88(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100002874(&qword_1000AAB38);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100076F84(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_100083BD0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1000770C4(uint64_t a1)
{
  return sub_100076E88(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000770D8(unint64_t a1)
{
  return sub_100074FD0(0, *(void *)(a1 + 16), 0, a1, &qword_1000AAB30, type metadata accessor for GeneralMapsTimelineEntry, type metadata accessor for GeneralMapsTimelineEntry);
}

uint64_t sub_100077130(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100002874(&qword_1000AAB48);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100083BD0();
  __break(1u);
  return result;
}

uint64_t sub_10007723C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100002874(&qword_1000AAB08) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_100083BD0();
  __break(1u);
  return result;
}

uint64_t sub_100077398()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_1000773D0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100077414(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100077478()
{
  uint64_t v1 = (int *)(sub_100002874(&qword_1000AAB08) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_100037104(v6 + v1[14]);

  return _swift_deallocObject(v0, v4, v5);
}

void sub_10007757C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100002874(&qword_1000AAB08) - 8);
  uint64_t v4 = *(NSObject **)(v1 + 16);
  uint64_t v5 = *(char **)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100073B5C(a1, v4, v5, v6);
}

uint64_t sub_1000775F4()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_1000837F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();

  return _swift_deallocObject(v0, v10, v12);
}

uint64_t sub_100077784()
{
  uint64_t v1 = *(void *)(sub_100082E40() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_1000837F0() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + v3);
  uint64_t v8 = v0 + v5;
  uint64_t v9 = (uint64_t *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  return sub_1000741FC(v6, v0 + v2, v7, v8, v10, v11);
}

uint64_t sub_100077894(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000778FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100077964()
{
  uint64_t v1 = sub_100002874(&qword_1000AAB28);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_1000837F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_100077AD4()
{
  uint64_t v1 = *(void *)(sub_100002874(&qword_1000AAB28) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000837F0();
  (*(void (**)(unint64_t))(v0 + 16))(v0 + v2);
  sub_10006FCE0();
}

uint64_t sub_100077BC0()
{
  return sub_100077BD8((uint64_t (*)(void))&type metadata accessor for TimelineProviderContext);
}

uint64_t sub_100077BD8(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();

  return _swift_deallocObject(v1, v7, v6);
}

uint64_t sub_100077CCC()
{
  return sub_100077CE4((uint64_t (*)(unint64_t, void, void))sub_100070914);
}

uint64_t sub_100077CE4(uint64_t (*a1)(unint64_t, void, void))
{
  uint64_t v3 = *(void *)(sub_1000837F0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a1(v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v5 + 8));
}

uint64_t sub_100077D80()
{
  uint64_t v14 = sub_100082E40();
  uint64_t v1 = *(void *)(v14 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v12 = sub_1000837F0();
  uint64_t v5 = *(void *)(v12 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6;
  uint64_t v13 = v2 | v6 | 7;
  unint64_t v8 = (v2 + 16 + ((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v2;
  uint64_t v9 = v0 + v3;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v10(v9, v14);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v7, v12);
  swift_release();
  v10(v0 + v8, v14);

  return _swift_deallocObject(v0, v8 + v4, v13);
}

uint64_t sub_100077F28()
{
  uint64_t v1 = *(void *)(sub_100082E40() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_1000837F0() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + v4);
  uint64_t v9 = *(void *)(v0 + v7);
  uint64_t v10 = *(void *)(v0 + v7 + 8);

  return sub_100071074(v0 + v3, v8, v0 + v6, v9, v10, v0 + ((v2 + 16 + v7) & ~v2));
}

uint64_t sub_100078048()
{
  uint64_t v1 = sub_100082E40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v48 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v48 + 16) & ~v48;
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_1000837F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v47 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v7 = (v4 + v47 + 8) & ~v47;
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v46 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v44 = *(void *)(*(void *)(v9 - 8) + 64);
  uint64_t v45 = sub_100002874(&qword_1000AAB08);
  uint64_t v42 = *(unsigned __int8 *)(*(void *)(v45 - 8) + 80);
  uint64_t v41 = *(void *)(*(void *)(v45 - 8) + 64);
  uint64_t v10 = v0 + v3;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);
  swift_release();
  unint64_t v39 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v40 = v5;
  uint64_t v12 = v5;
  uint64_t v13 = v1;
  v39(v0 + v7, v12);
  uint64_t v14 = (v8 + v46 + 16) & ~v46;
  uint64_t v15 = v9;
  swift_release();
  unint64_t v43 = v11;
  v11(v0 + v14, v13);
  uint64_t v16 = v0 + v14 + *(int *)(v9 + 20);
  uint64_t v17 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17)) {
    goto LABEL_2;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if (*(void *)v16 != 1)
    {
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v16 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v28 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v25, 1, v28))
    {
      v39(v25, v40);
      uint64_t v27 = *(int *)(v28 + 20);
LABEL_16:
      uint64_t v29 = v25 + v27;
      unint64_t v30 = *(void **)(v25 + v27);
      if (v30 != (void *)1)
      {
      }
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_2;
      }
      uint64_t v25 = v16 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      uint64_t v26 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26)) {
        goto LABEL_2;
      }
      v39(v25, v40);
      swift_bridgeObjectRelease();
      uint64_t v27 = *(int *)(v26 + 24);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v31 = *(void **)(v16 + 56);
    if (v31 != (void *)1)
    {
    }
    uint64_t v32 = v16 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
    uint64_t v33 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
    {
      v39(v32, v40);
      char v34 = (id *)(v32 + *(int *)(v33 + 20));
      if (*v34 != (id)1)
      {
      }
      uint64_t v35 = v32 + *(int *)(v33 + 28);
      uint64_t v36 = sub_100082D90();
      uint64_t v37 = *(void *)(v36 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36)) {
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      }
    }
  }
LABEL_2:
  uint64_t v18 = v0 + v14 + *(int *)(v15 + 24);
  uint64_t v19 = sub_1000837C0();
  uint64_t v20 = *(void *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  uint64_t v21 = (v14 + v44 + v42) & ~v42;
  uint64_t v22 = v21 + v41;
  uint64_t v23 = v0 + v21;
  v43(v0 + v21, v13);
  sub_100037104(v23 + *(int *)(v45 + 48));

  return _swift_deallocObject(v0, v22, v48 | v47 | v46 | v42 | 7);
}

uint64_t sub_10007868C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100082E40() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_1000837F0() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(type metadata accessor for GeneralMapsTimelineEntry(0) - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(sub_100002874(&qword_1000AAB08) - 8);
  uint64_t v13 = *(void *)(v1 + v5);
  uint64_t v14 = *(void *)(v1 + v8);
  uint64_t v15 = *(void *)(v1 + v8 + 8);
  uint64_t v16 = v1 + ((v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));

  return sub_100071A64(a1, (void (*)(void))(v1 + v4), v13, v1 + v7, v14, v15, v1 + v10, v16);
}

uint64_t sub_100078850()
{
  uint64_t v1 = type metadata accessor for GeneralMapsTimelineEntry(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v30 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_1000837F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v29 = *(void *)(v5 + 64);
  swift_release();
  uint64_t v7 = sub_100082E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v9 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9)) {
    goto LABEL_2;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    if (*(void *)v8 != 1)
    {
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v8 + *(int *)(type metadata accessor for NavigationETAEntryContent(0) + 36);
    uint64_t v18 = type metadata accessor for NavigationETAEntryContent.ResolvedContent(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v15, 1, v18))
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
      uint64_t v17 = *(int *)(v18 + 20);
LABEL_16:
      uint64_t v19 = (id *)(v15 + v17);
      if (*v19 != (id)1)
      {
      }
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_2;
      }
      uint64_t v15 = v8 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
      uint64_t v16 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16)) {
        goto LABEL_2;
      }
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
      swift_bridgeObjectRelease();
      uint64_t v17 = *(int *)(v16 + 24);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void **)(v8 + 56);
    if (v20 != (void *)1)
    {
    }
    uint64_t v21 = v8 + *(int *)(type metadata accessor for SuggestedDestinationEntryContent(0) + 40);
    uint64_t v22 = type metadata accessor for SuggestedDestinationEntryContent.ResolvedContent(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
      uint64_t v23 = *(void **)(v21 + *(int *)(v22 + 20));
      if (v23 != (void *)1)
      {
        uint64_t v28 = v21 + *(int *)(v22 + 20);
      }
      uint64_t v24 = v21 + *(int *)(v22 + 28);
      uint64_t v25 = sub_100082D90();
      uint64_t v27 = *(void *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25)) {
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v25);
      }
    }
  }
LABEL_2:
  uint64_t v10 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v11 = sub_1000837C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  unint64_t v13 = (((v30 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v4);

  return _swift_deallocObject(v0, v13 + v29, v2 | v6 | 7);
}

void sub_100078D8C()
{
  uint64_t v1 = *(void *)(type metadata accessor for GeneralMapsTimelineEntry(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000837F0();
  (*(void (**)(unint64_t))(v0 + 16))(v0 + v2);
  sub_10006FCE0();
}

uint64_t sub_100078E74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_100083BD0();
  __break(1u);
  return result;
}

void sub_10007900C(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 96);
  if (v2)
  {
    if (*(unsigned char *)(v1 + 88) == 1)
    {
      id v4 = v2;
      [v4 coordinate];
      double v6 = v5;
      double v8 = v7;
      [a1 pointForCoordinate:];
      double v10 = v9;
      [v4 horizontalAccuracy];
      CLLocationDistance v12 = v11;
      [v4 horizontalAccuracy];
      CLLocationDistance v14 = v13;
      v20.latitude = v6;
      v20.longitude = v8;
      MKCoordinateRegion v21 = MKCoordinateRegionMakeWithDistance(v20, v12, v14);
      [a1 pointForCoordinate:v6, v8 + v21.span.longitudeDelta, v21.span.latitudeDelta];
      double v16 = vabdd_f64(v15, v10);
      id v17 = [self mainScreen];
      [v17 scale];
      double v19 = v18;

      *(double *)(v1 + 80) = 1.0 / v19 * round(v16 / (1.0 / v19));
      *(unsigned char *)(v1 + 88) = 0;
    }
  }
}

void sub_100079134()
{
}

uint64_t sub_10007913C()
{
  uint64_t v0 = sub_100032D14();

  return _swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for NearbySnapshotter()
{
  return self;
}

uint64_t sub_1000791A8(uint64_t a1, char a2)
{
  uint64_t v3 = sub_100083730();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000837E0();
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for WidgetFamily.systemSmall(_:)) {
    goto LABEL_2;
  }
  if (v7 == enum case for WidgetFamily.systemMedium(_:))
  {
    if (a2) {
      goto LABEL_2;
    }
    if (qword_1000A7980 != -1) {
      swift_once();
    }
    if (qword_1000A7988 != -1) {
      swift_once();
    }
    if (qword_1000A7990 == -1) {
      goto LABEL_2;
    }
    goto LABEL_17;
  }
  if (v7 == enum case for WidgetFamily.systemLarge(_:))
  {
    if (a2) {
      goto LABEL_2;
    }
    if (qword_1000A7980 != -1) {
      swift_once();
    }
    if (qword_1000A7988 == -1) {
      goto LABEL_2;
    }
LABEL_17:
    swift_once();
LABEL_2:
    sub_1000837D0();
    return _MKMapRectThatFits();
  }
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

id sub_100079530(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  *(void *)(v5 + 80) = 0;
  *(unsigned char *)(v5 + 88) = 1;
  *(void *)(v5 + 96) = a2;
  *(_OWORD *)(v5 + 16) = xmmword_100086BB0;
  *(void *)(v5 + 32) = 0;
  id v9 = a2;
  *(void *)(v5 + 40) = dispatch_group_create();
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = sub_100008C94((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v5 + 64) = 0;
  *(void *)(v5 + 72) = _swiftEmptyArrayStorage;
  id v10 = objc_allocWithZone((Class)MKMapSnapshotOptions);
  swift_retain_n();
  id v11 = [v10 init];
  CLLocationDistance v12 = *(void **)(v5 + 16);
  *(void *)(v5 + 16) = v11;
  swift_release();

  id result = *(id *)(v5 + 16);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id result = [result _setShowsAppleLogo:0];
  CLLocationDistance v14 = *(void **)(v5 + 16);
  if (!v14)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v15 = v14;
  sub_1000837D0();
  [v15 setSize:];

  sub_1000791A8(a1, a4 & 1);
  id result = *(id *)(v5 + 16);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id result = [result setMapRect:];
  double v16 = *(void **)(v5 + 16);
  if (v16)
  {
    id v17 = v16;
    [v17 setMapType:a3];

    swift_release();
    uint64_t v18 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
    return (id)v5;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t *sub_1000796F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000837F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    id v11 = *(void **)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    if (v11 == (void *)1)
    {
      *(_OWORD *)id v9 = *(_OWORD *)v10;
    }
    else
    {
      double v13 = (void *)*((void *)v10 + 1);
      *(void *)id v9 = v11;
      *((void *)v9 + 1) = v13;
      id v14 = v11;
      id v15 = v13;
    }
    uint64_t v16 = a3[7];
    id v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)id v17 = *(void *)v18;
    v17[8] = v18[8];
  }
  return a1;
}

void sub_10007981C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  if (*(void *)v5 != 1)
  {

    double v6 = *(void **)(v5 + 8);
  }
}

uint64_t sub_1000798BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  id v10 = *(void **)(a2 + v7);
  swift_bridgeObjectRetain();
  if (v10 == (void *)1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    id v11 = *(void **)(v9 + 8);
    *(void *)uint64_t v8 = v10;
    *(void *)(v8 + 8) = v11;
    id v12 = v10;
    id v13 = v11;
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  return a1;
}

uint64_t sub_100079990(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  id v10 = *(void **)(a1 + v7);
  id v11 = *(void **)(a2 + v7);
  if (v10 != (void *)1)
  {
    if (v11 != (void *)1)
    {
      void *v8 = v11;
      id v15 = v11;

      uint64_t v16 = (void *)v8[1];
      id v17 = *(void **)(v9 + 8);
      v8[1] = v17;
      id v18 = v17;

      goto LABEL_8;
    }
    sub_10001B23C((uint64_t)v8);
    goto LABEL_6;
  }
  if (v11 == (void *)1)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  void *v8 = v11;
  id v12 = *(void **)(v9 + 8);
  v8[1] = v12;
  id v13 = v11;
  id v14 = v12;
LABEL_8:
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  MKCoordinateRegion v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t sub_100079AB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  return a1;
}

uint64_t sub_100079B58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = *(void **)(a1 + v7);
  if (v10 != (void *)1)
  {
    if (*v9 != 1)
    {
      void *v8 = *v9;

      id v11 = (void *)v8[1];
      v8[1] = v9[1];

      goto LABEL_6;
    }
    sub_10001B23C((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
LABEL_6:
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  return a1;
}

uint64_t sub_100079C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100079C64);
}

uint64_t sub_100079C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000837F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100079D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100079D38);
}

uint64_t sub_100079D38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000837F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for NearbyEntryContent.ResolvedContent(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AADA0);
}

uint64_t sub_100079E14()
{
  uint64_t result = sub_1000837F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100079EC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
    uint64_t v9 = *((void *)v8 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_100002874(&qword_1000A7A60);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
      *(void *)&v6[v8[5]] = *(void *)&v7[v8[5]];
      uint64_t v13 = v8[6];
      uint64_t v14 = &v6[v13];
      id v15 = &v7[v13];
      uint64_t v16 = *(void **)&v7[v13];
      swift_bridgeObjectRetain();
      if (v16 == (void *)1)
      {
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      }
      else
      {
        id v17 = (void *)*((void *)v15 + 1);
        *(void *)uint64_t v14 = v16;
        *((void *)v14 + 1) = v17;
        id v18 = v16;
        id v19 = v17;
      }
      uint64_t v20 = v8[7];
      MKCoordinateRegion v21 = &v6[v20];
      uint64_t v22 = &v7[v20];
      *(void *)MKCoordinateRegion v21 = *(void *)v22;
      v21[8] = v22[8];
      (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

void sub_10007A0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    uint64_t v4 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
    swift_bridgeObjectRelease();
    uint64_t v5 = v2 + *(int *)(v3 + 24);
    if (*(void *)v5 != 1)
    {

      uint64_t v6 = *(void **)(v5 + 8);
    }
  }
}

uint64_t sub_10007A194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v8 = *((void *)v7 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100002874(&qword_1000A7A60);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v5, v6, v10);
    *(void *)&v5[v7[5]] = *(void *)&v6[v7[5]];
    uint64_t v11 = v7[6];
    uint64_t v12 = &v5[v11];
    uint64_t v13 = &v6[v11];
    uint64_t v14 = *(void **)&v6[v11];
    swift_bridgeObjectRetain();
    if (v14 == (void *)1)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      id v15 = (void *)*((void *)v13 + 1);
      *(void *)uint64_t v12 = v14;
      *((void *)v12 + 1) = v15;
      id v16 = v14;
      id v17 = v15;
    }
    uint64_t v18 = v7[7];
    id v19 = &v5[v18];
    uint64_t v20 = &v6[v18];
    *(void *)id v19 = *(void *)v20;
    v19[8] = v20[8];
    (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_10007A334(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, int *))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (v12)
    {
      sub_10007C868((uint64_t)v6, type metadata accessor for NearbyEntryContent.ResolvedContent);
      goto LABEL_7;
    }
    uint64_t v19 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v6, v7, v19);
    *(void *)&v6[v8[5]] = *(void *)&v7[v8[5]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v8[6];
    MKCoordinateRegion v21 = &v6[v20];
    uint64_t v22 = &v7[v20];
    uint64_t v23 = *(void **)&v6[v20];
    uint64_t v24 = *(void **)&v7[v20];
    if (v23 == (void *)1)
    {
      if (v24 != (void *)1)
      {
        *(void *)MKCoordinateRegion v21 = v24;
        uint64_t v25 = (void *)*((void *)v22 + 1);
        *((void *)v21 + 1) = v25;
        id v26 = v24;
        id v27 = v25;
LABEL_17:
        uint64_t v39 = v8[7];
        uint64_t v40 = &v6[v39];
        uint64_t v41 = &v7[v39];
        uint64_t v42 = *(void *)v41;
        v40[8] = v41[8];
        *(void *)uint64_t v40 = v42;
        return a1;
      }
    }
    else
    {
      if (v24 != (void *)1)
      {
        *(void *)MKCoordinateRegion v21 = v24;
        id v35 = v24;

        uint64_t v36 = (void *)*((void *)v21 + 1);
        uint64_t v37 = (void *)*((void *)v22 + 1);
        *((void *)v21 + 1) = v37;
        id v38 = v37;

        goto LABEL_17;
      }
      sub_10001B23C((uint64_t)v21);
    }
    *(_OWORD *)MKCoordinateRegion v21 = *(_OWORD *)v22;
    goto LABEL_17;
  }
  if (v12)
  {
LABEL_7:
    uint64_t v18 = sub_100002874(&qword_1000A7A60);
    memcpy(v6, v7, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  uint64_t v13 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v7, v13);
  *(void *)&v6[v8[5]] = *(void *)&v7[v8[5]];
  uint64_t v14 = v8[6];
  id v15 = &v6[v14];
  id v16 = &v7[v14];
  id v17 = *(void **)&v7[v14];
  swift_bridgeObjectRetain();
  if (v17 == (void *)1)
  {
    *(_OWORD *)id v15 = *(_OWORD *)v16;
  }
  else
  {
    *(void *)id v15 = v17;
    uint64_t v28 = (void *)*((void *)v16 + 1);
    *((void *)v15 + 1) = v28;
    id v29 = v17;
    id v30 = v28;
  }
  uint64_t v31 = v8[7];
  uint64_t v32 = &v6[v31];
  uint64_t v33 = &v7[v31];
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)uint64_t v32 = v34;
  (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t sub_10007A608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v8 = *((void *)v7 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100002874(&qword_1000A7A60);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    *(void *)&v5[v7[5]] = *(void *)&v6[v7[5]];
    *(_OWORD *)&v5[v7[6]] = *(_OWORD *)&v6[v7[6]];
    uint64_t v11 = v7[7];
    int v12 = &v5[v11];
    uint64_t v13 = &v6[v11];
    v12[8] = v13[8];
    *(void *)int v12 = *(void *)v13;
    (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_10007A774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v8 = *((void *)v7 - 1);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, int *))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (v11)
    {
      sub_10007C868((uint64_t)v5, type metadata accessor for NearbyEntryContent.ResolvedContent);
      goto LABEL_6;
    }
    uint64_t v18 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v5, v6, v18);
    *(void *)&v5[v7[5]] = *(void *)&v6[v7[5]];
    swift_bridgeObjectRelease();
    uint64_t v19 = v7[6];
    uint64_t v20 = &v5[v19];
    MKCoordinateRegion v21 = &v6[v19];
    uint64_t v22 = *(void **)&v5[v19];
    if (v22 != (void *)1)
    {
      if (*(void *)v21 != 1)
      {
        *(void *)uint64_t v20 = *(void *)v21;

        uint64_t v23 = (void *)*((void *)v20 + 1);
        *((void *)v20 + 1) = *((void *)v21 + 1);

        goto LABEL_13;
      }
      sub_10001B23C((uint64_t)v20);
    }
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
LABEL_13:
    uint64_t v24 = v7[7];
    uint64_t v25 = &v5[v24];
    id v26 = &v6[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    return a1;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v16 = sub_100002874(&qword_1000A7A60);
    memcpy(v5, v6, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
  *(void *)&v5[v7[5]] = *(void *)&v6[v7[5]];
  *(_OWORD *)&v5[v7[6]] = *(_OWORD *)&v6[v7[6]];
  uint64_t v13 = v7[7];
  uint64_t v14 = &v5[v13];
  id v15 = &v6[v13];
  _OWORD v14[8] = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_10007A9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007A9FC);
}

uint64_t sub_10007A9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 >= 2) {
      int v5 = ((v4 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v5 = -2;
    }
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100002874(&qword_1000A7A60);
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_10007AAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007AAD8);
}

uint64_t sub_10007AAD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *(unsigned char *)(result + 8) = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_100002874(&qword_1000A7A60);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NearbyEntryContent(uint64_t a1)
{
  return sub_100008710(a1, (uint64_t *)&unk_1000AAE38);
}

void sub_10007ABA0()
{
  sub_10007C43C(319, (unint64_t *)&unk_1000AAE48, (void (*)(uint64_t))type metadata accessor for NearbyEntryContent.ResolvedContent);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

_UNKNOWN **sub_10007AC54()
{
  return &off_10009F2F0;
}

uint64_t sub_10007AC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007F178(v2, (uint64_t)v5, type metadata accessor for NearbyButtonAction);
  uint64_t v6 = sub_100082D90();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a2, v5, v6);
}

id sub_10007AD24(uint64_t a1)
{
  uint64_t v2 = (id *)(v1 + *(int *)(a1 + 24));
  id v3 = *v2;
  sub_10005A738(*v2, v2[1]);
  return v3;
}

uint64_t sub_10007AD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007AD70(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_10007AD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100002874(&qword_1000A7A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_10007ADD8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
    uint64_t v11 = *((void *)v10 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100002874(&qword_1000A7A60);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      *(void *)&v8[v10[5]] = *(void *)&v9[v10[5]];
      uint64_t v15 = v10[6];
      uint64_t v16 = &v8[v15];
      id v17 = &v9[v15];
      uint64_t v18 = *(void **)&v9[v15];
      swift_bridgeObjectRetain();
      if (v18 == (void *)1)
      {
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      }
      else
      {
        uint64_t v19 = (void *)*((void *)v17 + 1);
        *(void *)uint64_t v16 = v18;
        *((void *)v16 + 1) = v19;
        id v20 = v18;
        id v21 = v19;
      }
      uint64_t v22 = v10[7];
      uint64_t v23 = &v8[v22];
      uint64_t v24 = &v9[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v25 = a3[5];
    uint64_t v26 = a3[6];
    id v27 = *(void **)((char *)a2 + v25);
    *(void *)((char *)v4 + v25) = v27;
    *(void *)((char *)v4 + v26) = *(uint64_t *)((char *)a2 + v26);
    uint64_t v28 = a3[7];
    uint64_t v29 = a3[8];
    id v30 = (_OWORD *)((char *)v4 + v28);
    uint64_t v31 = (_OWORD *)((char *)a2 + v28);
    long long v32 = v31[1];
    uint64_t v33 = *(uint64_t *)((char *)a2 + v29);
    _OWORD *v30 = *v31;
    v30[1] = v32;
    *(void *)((char *)v4 + v29) = v33;
    uint64_t v34 = a3[9];
    id v35 = (char *)v4 + v34;
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = sub_100082E70();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    id v40 = v27;
    swift_bridgeObjectRetain();
    if (v39(v36, 1, v37))
    {
      uint64_t v41 = sub_100002874(&qword_1000A8D20);
      memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
  }
  return v4;
}

uint64_t sub_10007B0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v5 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1000837F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    swift_bridgeObjectRelease();
    uint64_t v7 = (id *)(v4 + *(int *)(v5 + 24));
    if (*v7 != (id)1)
    {
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 36);
  uint64_t v9 = sub_100082E70();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

uint64_t sub_10007B298(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100002874(&qword_1000A7A60);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
    *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
    uint64_t v13 = v9[6];
    uint64_t v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    uint64_t v16 = *(void **)&v8[v13];
    swift_bridgeObjectRetain();
    if (v16 == (void *)1)
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    }
    else
    {
      id v17 = (void *)*((void *)v15 + 1);
      *(void *)uint64_t v14 = v16;
      *((void *)v14 + 1) = v17;
      id v18 = v16;
      id v19 = v17;
    }
    uint64_t v20 = v9[7];
    id v21 = &v7[v20];
    uint64_t v22 = &v8[v20];
    *(void *)id v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v23 = a3[5];
  uint64_t v24 = a3[6];
  uint64_t v25 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v25;
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v26 = a3[7];
  uint64_t v27 = a3[8];
  uint64_t v28 = (_OWORD *)(a1 + v26);
  uint64_t v29 = (_OWORD *)(a2 + v26);
  long long v30 = v29[1];
  uint64_t v31 = *(void *)(a2 + v27);
  _OWORD *v28 = *v29;
  v28[1] = v30;
  *(void *)(a1 + v27) = v31;
  uint64_t v32 = a3[9];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  uint64_t v35 = sub_100082E70();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  id v38 = v25;
  swift_bridgeObjectRetain();
  if (v37(v34, 1, v35))
  {
    uint64_t v39 = sub_100002874(&qword_1000A8D20);
    memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  return a1;
}

uint64_t sub_10007B564(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_10007C868((uint64_t)v8, type metadata accessor for NearbyEntryContent.ResolvedContent);
      goto LABEL_7;
    }
    uint64_t v21 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v8, v9, v21);
    *(void *)&v8[v10[5]] = *(void *)&v9[v10[5]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v22 = v10[6];
    uint64_t v23 = &v8[v22];
    uint64_t v24 = &v9[v22];
    uint64_t v25 = *(void **)&v8[v22];
    uint64_t v26 = *(void **)&v9[v22];
    if (v25 == (void *)1)
    {
      if (v26 != (void *)1)
      {
        *(void *)uint64_t v23 = v26;
        uint64_t v27 = (void *)*((void *)v24 + 1);
        *((void *)v23 + 1) = v27;
        id v28 = v26;
        id v29 = v27;
LABEL_17:
        uint64_t v41 = v10[7];
        uint64_t v42 = &v8[v41];
        unint64_t v43 = &v9[v41];
        uint64_t v44 = *(void *)v43;
        v42[8] = v43[8];
        *(void *)uint64_t v42 = v44;
        goto LABEL_18;
      }
    }
    else
    {
      if (v26 != (void *)1)
      {
        *(void *)uint64_t v23 = v26;
        id v37 = v26;

        id v38 = (void *)*((void *)v23 + 1);
        uint64_t v39 = (void *)*((void *)v24 + 1);
        *((void *)v23 + 1) = v39;
        id v40 = v39;

        goto LABEL_17;
      }
      sub_10001B23C((uint64_t)v23);
    }
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    goto LABEL_17;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v20 = sub_100002874(&qword_1000A7A60);
    memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_18;
  }
  uint64_t v15 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
  *(void *)&v8[v10[5]] = *(void *)&v9[v10[5]];
  uint64_t v16 = v10[6];
  id v17 = &v8[v16];
  id v18 = &v9[v16];
  id v19 = *(void **)&v9[v16];
  swift_bridgeObjectRetain();
  if (v19 == (void *)1)
  {
    *(_OWORD *)id v17 = *(_OWORD *)v18;
  }
  else
  {
    *(void *)id v17 = v19;
    long long v30 = (void *)*((void *)v18 + 1);
    *((void *)v17 + 1) = v30;
    id v31 = v19;
    id v32 = v30;
  }
  uint64_t v33 = v10[7];
  uint64_t v34 = &v8[v33];
  uint64_t v35 = &v9[v33];
  uint64_t v36 = *(void *)v35;
  v34[8] = v35[8];
  *(void *)uint64_t v34 = v36;
  (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_18:
  uint64_t v45 = a3[5];
  uint64_t v46 = *(void **)(a1 + v45);
  uint64_t v47 = *(void **)((char *)a2 + v45);
  *(void *)(a1 + v45) = v47;
  id v48 = v47;

  *(void *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  uint64_t v49 = a3[7];
  Swift::Int v50 = (void *)(a1 + v49);
  Swift::Int v51 = (uint64_t *)((char *)a2 + v49);
  *Swift::Int v50 = *v51;
  v50[1] = v51[1];
  v50[2] = v51[2];
  v50[3] = v51[3];
  *(void *)(a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[9];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (char *)a2 + v52;
  uint64_t v55 = sub_100082E70();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v53, 1, v55);
  int v59 = v57(v54, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, char *, uint64_t))(v56 + 24))(v53, v54, v55);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v56 + 8))(v53, v55);
    goto LABEL_23;
  }
  if (v59)
  {
LABEL_23:
    uint64_t v60 = sub_100002874(&qword_1000A8D20);
    memcpy(v53, v54, *(void *)(*(void *)(v60 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  return a1;
}

uint64_t sub_10007B9F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100002874(&qword_1000A7A60);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1000837F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
    *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
    uint64_t v13 = v9[7];
    int v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    _OWORD v14[8] = v15[8];
    *(void *)int v14 = *(void *)v15;
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v16 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  id v19 = (_OWORD *)(a1 + v17);
  uint64_t v20 = (long long *)(a2 + v17);
  long long v21 = *v20;
  long long v22 = v20[1];
  uint64_t v23 = *(void *)(a2 + v18);
  _OWORD *v19 = v21;
  v19[1] = v22;
  *(void *)(a1 + v18) = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = sub_100082E70();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_100002874(&qword_1000A8D20);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

uint64_t sub_10007BC7C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1000837F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
      *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
      uint64_t v15 = v9[7];
      uint64_t v16 = &v7[v15];
      uint64_t v17 = &v8[v15];
      v16[8] = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_10007C868((uint64_t)v7, type metadata accessor for NearbyEntryContent.ResolvedContent);
LABEL_6:
    uint64_t v18 = sub_100002874(&qword_1000A7A60);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v35 = sub_1000837F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v7, v8, v35);
  *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
  swift_bridgeObjectRelease();
  uint64_t v36 = v9[6];
  id v37 = &v7[v36];
  id v38 = &v8[v36];
  uint64_t v39 = *(void **)&v7[v36];
  if (v39 != (void *)1)
  {
    if (*(void *)v38 != 1)
    {
      *(void *)id v37 = *(void *)v38;

      id v40 = (void *)*((void *)v37 + 1);
      *((void *)v37 + 1) = *((void *)v38 + 1);

      goto LABEL_20;
    }
    sub_10001B23C((uint64_t)v37);
  }
  *(_OWORD *)id v37 = *(_OWORD *)v38;
LABEL_20:
  uint64_t v41 = v9[7];
  uint64_t v42 = &v7[v41];
  unint64_t v43 = &v8[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
LABEL_7:
  uint64_t v19 = a3[5];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  uint64_t v21 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  long long v22 = (_OWORD *)(a1 + v21);
  uint64_t v23 = (_OWORD *)(a2 + v21);
  long long v24 = v23[1];
  *long long v22 = *v23;
  v22[1] = v24;
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = sub_100082E70();
  uint64_t v29 = *(void *)(v28 - 8);
  long long v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 40))(v26, v27, v28);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    uint64_t v33 = sub_100002874(&qword_1000A8D20);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 32))(v26, v27, v28);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  return a1;
}

uint64_t sub_10007C080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007C094);
}

uint64_t sub_10007C094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_100002874(&qword_1000A8D20);
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 36);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_10007C1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007C1E4);
}

uint64_t sub_10007C1E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for NearbyEntryContent(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  else
  {
    uint64_t v11 = sub_100002874(&qword_1000A8D20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for NearbyEntryContentResolver(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AAF00);
}

void sub_10007C334()
{
  type metadata accessor for NearbyEntryContent(319);
  if (v0 <= 0x3F)
  {
    sub_10007C43C(319, (unint64_t *)&unk_1000AA0E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10007C43C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000839F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *sub_10007C490(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v7 = a2[1];
    uint64_t v6 = a2[2];
    *((void *)a1 + 1) = v7;
    *((void *)a1 + 2) = v6;
    *((void *)a1 + 3) = a2[3];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    type metadata accessor for NearbyButtonAction(0);
    uint64_t v11 = v4;
    uint64_t v12 = v7;
    swift_bridgeObjectRetain();
    swift_getEnumCaseMultiPayload();
    uint64_t v13 = sub_100082D90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t type metadata accessor for NearbyButtonAction(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AB050);
}

uint64_t sub_10007C5E4(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  type metadata accessor for NearbyButtonAction(0);
  uint64_t v5 = sub_100082D90();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10007C674(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = a2 + v7;
  type metadata accessor for NearbyButtonAction(0);
  id v10 = v4;
  id v11 = v5;
  swift_bridgeObjectRetain();
  swift_getEnumCaseMultiPayload();
  uint64_t v12 = sub_100082D90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10007C748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void **)(a1 + 8);
  id v10 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  id v11 = v10;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a2 + v12;
    uint64_t v14 = a1 + v12;
    sub_10007C868(a1 + v12, type metadata accessor for NearbyButtonAction);
    type metadata accessor for NearbyButtonAction(0);
    swift_getEnumCaseMultiPayload();
    uint64_t v15 = sub_100082D90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007C868(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_10007C8C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  type metadata accessor for NearbyButtonAction(0);
  swift_getEnumCaseMultiPayload();
  uint64_t v8 = sub_100082D90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_10007C97C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a1[1];
  a1[1] = a2[1];

  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 24);
    id v10 = (char *)a2 + v9;
    id v11 = (char *)a1 + v9;
    sub_10007C868((uint64_t)a1 + v9, type metadata accessor for NearbyButtonAction);
    type metadata accessor for NearbyButtonAction(0);
    swift_getEnumCaseMultiPayload();
    uint64_t v12 = sub_100082D90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v11, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007CA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007CA98);
}

uint64_t sub_10007CA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for NearbyButtonAction(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10007CB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007CB5C);
}

uint64_t sub_10007CB5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for NearbyButtonAction(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NearbyButtonContent(uint64_t a1)
{
  return sub_100008710(a1, qword_1000AAFA0);
}

uint64_t sub_10007CC24()
{
  uint64_t result = type metadata accessor for NearbyButtonAction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10007CCC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_100082D90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007CDB4(uint64_t a1)
{
  uint64_t v2 = sub_100082D90();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10007CE18(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_100082D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10007CEAC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10007C868(a1, type metadata accessor for NearbyButtonAction);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_100082D90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007CF64(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_100082D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10007CFF8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10007C868(a1, type metadata accessor for NearbyButtonAction);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_100082D90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007D0B0()
{
  uint64_t result = sub_100082D90();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10007D138()
{
  return sub_10007E500(&qword_1000A8690, (void (*)(uint64_t))&type metadata accessor for URL);
}

uint64_t sub_10007D180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a1;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v36 = a2;
  uint64_t v42 = sub_100083610();
  uint64_t v45 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100083630();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  id v38 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100082E40();
  uint64_t v7 = *(void *)(v33 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v33);
  int v32 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000837F0();
  uint64_t v31 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NearbyEntryContentResolver(0);
  uint64_t v30 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v30 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000484B0();
  uint64_t v37 = sub_1000839A0();
  sub_10007F178(v34, (uint64_t)v15, type metadata accessor for NearbyEntryContentResolver);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v35, v9);
  uint64_t v16 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v33);
  unint64_t v17 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v18 = (v14 + *(unsigned __int8 *)(v10 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v19 = (v11 + *(unsigned __int8 *)(v7 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  sub_10007F1E0((uint64_t)v15, v20 + v17, type metadata accessor for NearbyEntryContentResolver);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v20 + v18, v12, v31);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, v32, v16);
  uint64_t v21 = (void *)(v20 + ((v8 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v22 = v40;
  void *v21 = v39;
  v21[1] = v22;
  aBlock[4] = sub_10007E390;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100068EDC;
  void aBlock[3] = &unk_10009F340;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  long long v24 = v38;
  sub_100083620();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007E500((unint64_t *)&qword_1000A8800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100002874((uint64_t *)&unk_1000A7F80);
  sub_100018AC0();
  uint64_t v26 = v41;
  uint64_t v25 = v42;
  sub_100083A40();
  uint64_t v27 = (void *)v37;
  sub_1000839B0();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v24, v44);
}

uint64_t sub_10007D6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v34 = sub_1000837F0();
  uint64_t v8 = *(void *)(v34 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v34);
  int v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NearbyEntryContentResolver(0);
  uint64_t v11 = v10 - 8;
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v30 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100002874(&qword_1000A7F30);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10007E548(*(void *)(a1 + *(int *)(v11 + 40)));
  uint64_t v33 = sub_10007DA28(a2, a3, *(void *)(v31 + 16) < 2uLL);
  uint64_t v17 = sub_100082E40();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a3, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  sub_10007F178(a1, (uint64_t)v13, type metadata accessor for NearbyEntryContentResolver);
  unint64_t v19 = v32;
  uint64_t v20 = a2;
  uint64_t v21 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v32, v20, v34);
  unint64_t v22 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v23 = (v12 + *(unsigned __int8 *)(v8 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v24 = (v9 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  sub_10007F1E0((uint64_t)v13, v25 + v22, type metadata accessor for NearbyEntryContentResolver);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v25 + v23, v19, v21);
  *(void *)(v25 + v24) = v31;
  uint64_t v26 = (void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v27 = v36;
  *uint64_t v26 = v35;
  v26[1] = v27;
  swift_retain();
  sub_1000307D4((uint64_t)v16, (uint64_t)sub_10007F068, v25);
  swift_release();
  swift_release();
  return sub_100019138((uint64_t)v16, &qword_1000A7F30);
}

uint64_t sub_10007DA28(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_1000837F0();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  __chkstk_darwin(v7);
  uint64_t v36 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100083730();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000836A0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)&v31[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000484B0();
  uint64_t *v16 = sub_1000839A0();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  char v17 = sub_1000836C0();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    int v32 = a3;
    uint64_t v19 = v9;
    uint64_t v20 = type metadata accessor for MapSnapshotter();
    uint64_t v21 = (int *)type metadata accessor for NearbyEntryContentResolver(0);
    uint64_t v22 = v4 + v21[9];
    sub_1000837E0();
    id v23 = sub_100033320(v22, (uint64_t)v12);
    unint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v33 = v19;
    v24(v12, v19);
    if (v23)
    {
      type metadata accessor for NearbySnapshotter();
      uint64_t v25 = swift_dynamicCastClass();
      if (v25) {
        return v25;
      }
      swift_release();
    }
    uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v34 + 16);
    uint64_t v34 = v20;
    uint64_t v27 = (uint64_t)v36;
    v26(v36, a1, v35);
    uint64_t v28 = *(void **)(v4 + v21[5]);
    uint64_t v29 = *(void *)(v4 + v21[6]);
    type metadata accessor for NearbySnapshotter();
    swift_allocObject();
    id v30 = v28;
    uint64_t v25 = (uint64_t)sub_100079530(v27, v28, v29, v32 & 1);

    sub_1000837E0();
    sub_100033B68(v25, v22, v12);
    v24(v12, v33);
    return v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007DDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v27 = a6;
  uint64_t v28 = a5;
  uint64_t v9 = sub_100002874(&qword_1000A7B28);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NearbyEntryContent(0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NearbySnapshotter();
  uint64_t v16 = swift_dynamicCastClassUnconditional();
  sub_10007F178(a2, (uint64_t)v15, type metadata accessor for NearbyEntryContent);
  uint64_t v17 = (uint64_t)&v15[*(int *)(v13 + 28)];
  swift_retain();
  sub_100019138(v17, &qword_1000A7A60);
  uint64_t v18 = sub_1000837F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a3, v18);
  uint64_t v19 = *(void **)(v16 + 24);
  uint64_t v20 = *(void **)(v16 + 32);
  uint64_t v21 = *(void *)(v16 + 80);
  LOBYTE(v16) = *(unsigned char *)(v16 + 88);
  uint64_t v22 = (int *)type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  *(void *)(v17 + v22[5]) = a4;
  id v23 = (void *)(v17 + v22[6]);
  void *v23 = v19;
  v23[1] = v20;
  uint64_t v24 = v17 + v22[7];
  *(void *)uint64_t v24 = v21;
  *(unsigned char *)(v24 + 8) = v16;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v22 - 1) + 56))(v17, 0, 1, v22);
  sub_10007F178((uint64_t)v15, (uint64_t)v11, type metadata accessor for NearbyEntryContent);
  uint64_t v25 = type metadata accessor for GeneralMapsTimelineEntryContent(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 0, 1, v25);
  swift_bridgeObjectRetain();
  sub_10005A738(v19, v20);
  v28(v11);
  swift_release();
  sub_100019138((uint64_t)v11, &qword_1000A7B28);
  return sub_10007C868((uint64_t)v15, type metadata accessor for NearbyEntryContent);
}

uint64_t sub_10007E06C()
{
  uint64_t v1 = type metadata accessor for NearbyEntryContentResolver(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v19 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v21 = sub_1000837F0();
  uint64_t v3 = *(void *)(v21 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = *(void *)(v3 + 64);
  uint64_t v20 = sub_100082E40();
  uint64_t v5 = *(void *)(v20 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = *(void *)(v5 + 64);
  uint64_t v7 = v0 + ((v2 + 16) & ~v2);
  uint64_t v8 = v7 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v9 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    uint64_t v10 = (id *)(v8 + *(int *)(v9 + 24));
    if (*v10 != (id)1)
    {
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v11 = v7 + *(int *)(v1 + 36);
  uint64_t v12 = sub_100082E70();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = (((v2 + 16) & ~v2) + v19 + v4) & ~v4;
  uint64_t v15 = (v14 + v18 + v6) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v14, v21);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v15, v20);
  swift_release();

  return _swift_deallocObject(v0, ((v17 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | v4 | v6 | 7);
}

uint64_t sub_10007E390()
{
  uint64_t v1 = *(void *)(type metadata accessor for NearbyEntryContentResolver(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1000837F0() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_100082E40() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v0 + v8;
  uint64_t v10 = (uint64_t *)(v0 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return sub_10007D6C4(v0 + v2, v0 + v5, v9, v11, v12);
}

uint64_t sub_10007E4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007E4F8()
{
  return swift_release();
}

uint64_t sub_10007E500(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007E548(unint64_t a1)
{
  unint64_t v75 = a1;
  uint64_t v72 = sub_100082D90();
  unint64_t v64 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100002874(&qword_1000A7A68);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for NearbyButtonContent(0);
  uint64_t v5 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v78 = (uint64_t *)((char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = (void *)sub_100083730();
  uint64_t v7 = *(v77 - 1);
  uint64_t v8 = __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v62 - v10);
  uint64_t v73 = type metadata accessor for NearbyButtonAction(0);
  uint64_t v12 = __chkstk_darwin(v73);
  uint64_t v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v62 - v14;
  sub_100002874(&qword_1000AAB50);
  uint64_t v16 = *(void *)(v5 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v69 = v16;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100087780;
  uint64_t v79 = v18;
  unint64_t v68 = v17;
  uint64_t v19 = (uint64_t *)(v18 + v17);
  if (qword_1000A79A0 != -1) {
LABEL_27:
  }
    swift_once();
  uint64_t v21 = qword_1000ACB60;
  uint64_t v20 = *(void **)algn_1000ACB68;
  uint64_t v22 = qword_1000A7A10;
  id v23 = (id)qword_1000ACB60;
  id v24 = v20;
  if (v22 != -1) {
    swift_once();
  }
  v25.super.uint64_t isa = (Class)qword_1000ACBD0;
  v61._countAndFlagsBits = 0x8000000100096A30;
  v80._object = (void *)0x8000000100096A10;
  v80._countAndFlagsBits = 0xD000000000000014;
  v81.value._countAndFlagsBits = 0;
  v81.value._object = 0;
  v82._countAndFlagsBits = 0x686372616553;
  v82._object = (void *)0xE600000000000000;
  uint64_t v26 = sub_100082D70(v80, v81, v25, v82, v61);
  uint64_t v28 = v27;
  sub_1000837E0();
  sub_10005E834((uint64_t)v11, (uint64_t)v15);
  uint64_t v29 = v11;
  id v30 = v77;
  (*(void (**)(void *, void *))(v7 + 8))(v29, v77);
  swift_storeEnumTagMultiPayload();
  uint64_t *v19 = v21;
  v19[1] = (uint64_t)v20;
  void v19[2] = v26;
  v19[3] = v28;
  sub_10007F1E0((uint64_t)v15, (uint64_t)v19 + *(int *)(v74 + 24), type metadata accessor for NearbyButtonAction);
  unint64_t v31 = v75;
  if (!v75) {
    return v79;
  }
  swift_bridgeObjectRetain();
  int v32 = v76;
  sub_1000837E0();
  int v33 = (*(uint64_t (**)(char *, void *))(v7 + 88))(v32, v30);
  if (v33 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v34 = 1;
LABEL_11:
    unint64_t v67 = v34;
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_100083B80();
      swift_bridgeObjectRelease();
      if (v35)
      {
LABEL_13:
        uint64_t v11 = v64 + 4;
        uint64_t v65 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 7);
        unint64_t v66 = v31 & 0xC000000000000001;
        unint64_t v63 = (char *)v35;
        v64 += 6;
        uint64_t v7 = 4;
        while (1)
        {
          uint64_t v15 = (char *)(v7 - 4);
          if (v66) {
            id v36 = (id)sub_100083AB0();
          }
          else {
            id v36 = *(id *)(v31 + 8 * v7);
          }
          uint64_t v37 = v36;
          if (__OFADD__(v15, 1))
          {
            __break(1u);
            goto LABEL_27;
          }
          uint64_t v76 = (char *)(v7 - 3);
          id v38 = [v36 styleAttributes];
          id v39 = sub_1000248A4((uint64_t)v38, 4);
          uint64_t v41 = v40;

          id v42 = [v37 shortDisplayString];
          if (!v42) {
            break;
          }
          uint64_t v43 = v42;
          uint64_t v44 = sub_100083870();
          uint64_t v46 = v45;

          uint64_t v77 = v37;
          id v47 = [v37 mapsURL];
          if (!v47) {
            goto LABEL_32;
          }
          id v48 = v47;
          uint64_t v49 = v71;
          sub_100082D80();

          uint64_t v19 = (uint64_t *)*v11;
          Swift::Int v50 = v49;
          uint64_t v51 = v72;
          ((void (*)(char *, char *, uint64_t))*v11)(v4, v50, v72);
          (*v65)(v4, 0, 1, v51);
          if ((*v64)(v4, 1, v51) == 1) {
            goto LABEL_33;
          }
          uint64_t v52 = v11;
          uint64_t v53 = (uint64_t)v70;
          uint64_t v54 = v51;
          uint64_t v55 = v52;
          ((void (*)(char *, char *, uint64_t))v19)(v70, v4, v54);
          swift_storeEnumTagMultiPayload();
          uint64_t v56 = v78;
          *uint64_t v78 = v39;
          v56[1] = v41;
          v56[2] = v44;
          v56[3] = v46;
          sub_10007F1E0(v53, (uint64_t)v56 + *(int *)(v74 + 24), type metadata accessor for NearbyButtonAction);
          uint64_t v57 = v79;
          unint64_t v59 = *(void *)(v79 + 16);
          unint64_t v58 = *(void *)(v79 + 24);
          if (v59 >= v58 >> 1) {
            uint64_t v57 = sub_100075250(v58 > 1, v59 + 1, 1, v79);
          }
          unint64_t v31 = v75;
          *(void *)(v57 + 16) = v59 + 1;
          sub_10007F1E0((uint64_t)v78, v57 + v68 + v59 * v69, type metadata accessor for NearbyButtonContent);

          uint64_t v79 = v57;
          if (*(void *)(v57 + 16) < v67)
          {
            uint64_t v11 = v55;
            ++v7;
            if (v76 != v63) {
              continue;
            }
          }
          goto LABEL_29;
        }
        __break(1u);
LABEL_32:
        (*v65)(v4, 1, 1, v72);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v35 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v35) {
        goto LABEL_13;
      }
    }
LABEL_29:
    swift_bridgeObjectRelease();
    return v79;
  }
  if (v33 == enum case for WidgetFamily.systemMedium(_:))
  {
    uint64_t v34 = 2;
    goto LABEL_11;
  }
  if (v33 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v34 = 4;
    goto LABEL_11;
  }
LABEL_34:
  uint64_t result = sub_100083B70();
  __break(1u);
  return result;
}

uint64_t sub_10007EDC0()
{
  uint64_t v1 = type metadata accessor for NearbyEntryContentResolver(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v18 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_1000837F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = *(void *)(v5 + 64);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + v3 + *(int *)(type metadata accessor for NearbyEntryContent(0) + 20);
  uint64_t v9 = type metadata accessor for NearbyEntryContent.ResolvedContent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
    uint64_t v10 = (id *)(v8 + *(int *)(v9 + 24));
    if (*v10 != (id)1)
    {
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v11 = v7 + *(int *)(v1 + 36);
  uint64_t v12 = sub_100082E70();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = (v3 + v18 + v6) & ~v6;
  unint64_t v15 = (((v17 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v14, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v15 + 16, v2 | v6 | 7);
}

uint64_t sub_10007F068(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for NearbyEntryContentResolver(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_1000837F0() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v1 + v7;
  uint64_t v10 = *(void *)(v1 + v8);
  uint64_t v11 = v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void (**)(char *))v11;
  uint64_t v13 = *(void *)(v11 + 8);

  return sub_10007DDB0(a1, v1 + v4, v9, v10, v12, v13);
}

uint64_t sub_10007F178(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007F1E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_10007F26C()
{
  return sub_10007F418(1);
}

uint64_t sub_10007F274(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_1000ACAE8 == -1)
  {
    if (qword_1000ACAF0) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_1000ACAE8, 0, (dispatch_function_t)sub_10007F410);
    if (qword_1000ACAF0) {
      return _availability_version_check();
    }
  }
  if (qword_1000ACAE0 == -1)
  {
    BOOL v8 = dword_1000ACAD0 < a2;
    if (dword_1000ACAD0 > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_1000ACAE0, 0, (dispatch_function_t)sub_10007F26C);
    BOOL v8 = dword_1000ACAD0 < a2;
    if (dword_1000ACAD0 > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_1000ACAD4 > a3) {
    return 1;
  }
  return dword_1000ACAD4 >= a3 && dword_1000ACAD8 >= a4;
}

uint64_t sub_10007F410()
{
  return sub_10007F418(0);
}

uint64_t sub_10007F418(uint64_t result)
{
  uint64_t v1 = (uint64_t (**)(void))qword_1000ACAF0;
  if (qword_1000ACAF0) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (&__availability_version_check)
    {
      uint64_t v1 = &__availability_version_check;
      qword_1000ACAF0 = (uint64_t)&__availability_version_check;
    }
    if (!v1 || result != 0)
    {
      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        unint64_t v4 = *(unsigned __int8 **)result;
        uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          uint64_t v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            unint64_t v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  uint64_t v10 = (uint64_t (*)(uint64_t))result;
                  uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    uint64_t v11 = (uint64_t (*)(void))result;
                    uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    uint64_t v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      uint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        uint64_t v12 = (FILE *)result;
                        uint64_t result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          uint64_t v13 = (FILE *)result;
                          uint64_t v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            uint64_t v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            uint64_t v16 = malloc(v15);
                            if (v16)
                            {
                              uint64_t v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  uint64_t v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &dword_1000ACAD0, &dword_1000ACAD4, &dword_1000ACAD8);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    uint64_t v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  uint64_t v19 = v13;
                                }
                                uint64_t v16 = v26;
                              }
                              else
                              {
                                uint64_t v16 = v26;
                                uint64_t v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          uint64_t v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1000800DC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  BOOL v2 = (void *)qword_1000ACAF8;
  qword_1000ACAF8 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_1000ACAF8 setLocale:v3];
}

void sub_100080634(id a1)
{
  uint64_t v1 = objc_opt_new();
  BOOL v2 = (void *)qword_1000ACB08;
  qword_1000ACB08 = v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_1000ACB08 setLocale:v3];

  unint64_t v4 = (void *)qword_1000ACB08;

  _[v4 setTimeStyle:1];
}

void sub_10008199C(id a1)
{
  qword_1000ACB18 = objc_opt_new();

  _objc_release_x1();
}

void sub_1000819D8(id a1)
{
  uint64_t v1 = objc_opt_new();
  BOOL v2 = (void *)qword_1000ACB28;
  qword_1000ACB28 = v1;

  id v3 = (void *)qword_1000ACB28;

  [v3 setUnitStyle:3];
}

void sub_100081B74()
{
  if (qword_1000ACB38 != -1) {
    dispatch_once(&qword_1000ACB38, &stru_10009F568);
  }
}

void sub_100081B9C(id a1)
{
  byte_1000AB170 = 1;
  __GEOConfigRegisterStateCaptureFunctions(sub_100081BCC, sub_100081BD8);
}

_UNKNOWN **sub_100081BCC()
{
  return &off_1000A0100;
}

_UNKNOWN **sub_100081BD8()
{
  return &off_1000A0118;
}

id sub_100081BE4(id a1)
{
  return &off_1000A0130;
}

id sub_100081BF0(id a1)
{
  return &off_1000A0148;
}

id sub_100081BFC(id a1)
{
  return &off_1000A0160;
}

id sub_100081C08(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100081C14(id a1)
{
  return &off_1000A0160;
}

void sub_1000826A8(uint64_t a1)
{
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[MKLocationManager sharedLocationManager];
    id v3 = (void *)WeakRetained[1];
    WeakRetained[1] = v2;
  }
  else
  {
    GEOFindOrCreateLog();
    unint64_t v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      unint64_t v6 = "MapsSuggestionsMKLocationManagerAdapter.m";
      __int16 v7 = 1026;
      int v8 = 36;
      __int16 v9 = 2082;
      uint64_t v10 = "-[MapsSuggestionsMKLocationManagerAdapter init]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_100082870(uint64_t a1)
{
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained considerMyAllowanceAsLimited:[WeakRetained[1] isAuthorizedForPreciseLocation] ^ 1];
    [v2[1] startLocationUpdateWithObserver:v2];
    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 addObserver:v2 selector:"locationManagerApprovalDidChange:" name:MKLocationManagerApprovalDidChangeNotification object:0];
  }
  else
  {
    GEOFindOrCreateLog();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      int v5 = "MapsSuggestionsMKLocationManagerAdapter.m";
      __int16 v6 = 1026;
      int v7 = 49;
      __int16 v8 = 2082;
      __int16 v9 = "-[MapsSuggestionsMKLocationManagerAdapter onStartImplementation]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_100082A70(uint64_t a1)
{
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[1] stopLocationUpdateWithObserver:WeakRetained];
    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 removeObserver:v2 name:MKLocationManagerApprovalDidChangeNotification object:0];
  }
  else
  {
    GEOFindOrCreateLog();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      int v5 = "MapsSuggestionsMKLocationManagerAdapter.m";
      __int16 v6 = 1026;
      int v7 = 60;
      __int16 v8 = 2082;
      __int16 v9 = "-[MapsSuggestionsMKLocationManagerAdapter onStopImplementation]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

uint64_t sub_100082D70(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_100082D80()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100082D90()
{
  return type metadata accessor for URL();
}

NSData sub_100082DA0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_100082DB0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100082DC0()
{
  return Date.timeIntervalSince(_:)();
}

NSDate sub_100082DD0()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_100082DE0()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_100082DF0()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_100082E00()
{
  return static Date.+ infix(_:_:)();
}

uint64_t sub_100082E10()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t sub_100082E20()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100082E30()
{
  return Date.init()();
}

uint64_t sub_100082E40()
{
  return type metadata accessor for Date();
}

uint64_t sub_100082E50()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_100082E60()
{
  return UUID.init()();
}

uint64_t sub_100082E70()
{
  return type metadata accessor for UUID();
}

uint64_t sub_100082E80()
{
  return Calendar.isDateInToday(_:)();
}

uint64_t sub_100082E90()
{
  return static Calendar.current.getter();
}

uint64_t sub_100082EA0()
{
  return type metadata accessor for Calendar();
}

NSTimeZone sub_100082EB0()
{
  return TimeZone._bridgeToObjectiveC()();
}

uint64_t sub_100082EC0()
{
  return static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100082ED0()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_100082EE0()
{
  return Logger.logObject.getter();
}

uint64_t sub_100082EF0()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100082F00()
{
  return type metadata accessor for Logger();
}

uint64_t sub_100082F10()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_100082F20()
{
  return Published.init(initialValue:)();
}

uint64_t sub_100082F30()
{
  return static Published.subscript.getter();
}

uint64_t sub_100082F40()
{
  return static Published.subscript.setter();
}

uint64_t sub_100082F50()
{
  return type metadata accessor for Published();
}

uint64_t sub_100082F60()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_100082F70()
{
  return ShapeStyle._fillingContainerShape()();
}

uint64_t sub_100082F80()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_100082F90()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_100082FA0()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_100082FB0()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_100082FC0()
{
  return AnyTransition.init<A>(_:)();
}

uint64_t sub_100082FD0()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_100082FE0()
{
  return static LayoutDirection.== infix(_:_:)();
}

uint64_t sub_100082FF0()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t sub_100083000()
{
  return ModifiedContent<>.accessibility(identifier:)();
}

uint64_t sub_100083010()
{
  return ModifiedContent<>.accessibilityLabel(_:isEnabled:)();
}

uint64_t sub_100083020()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_100083030()
{
  return static RedactionReasons.privacy.getter();
}

uint64_t sub_100083040()
{
  return type metadata accessor for RedactionReasons();
}

uint64_t sub_100083050()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t sub_100083060()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100083070()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_100083080()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100083090()
{
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t sub_1000830A0()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_1000830B0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1000830C0()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1000830D0()
{
  return EnvironmentValues.layoutDirection.setter();
}

uint64_t sub_1000830E0()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1000830F0()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_100083100()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100083110()
{
  return EnvironmentValues.init()();
}

uint64_t sub_100083120()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_100083130()
{
  return static VerticalAlignment.center.getter();
}

void sub_100083140(Swift::String a1)
{
}

void sub_100083150(Swift::String a1)
{
}

uint64_t sub_100083160()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100083170()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t sub_100083180()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_100083190()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t sub_1000831A0()
{
  return static ContentSizeCategory.allCases.getter();
}

uint64_t sub_1000831B0()
{
  return type metadata accessor for ContentSizeCategory();
}

uint64_t sub_1000831C0()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_1000831D0()
{
  return WidgetConfiguration.description(_:)();
}

uint64_t sub_1000831E0()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_1000831F0()
{
  return WidgetConfiguration.disfavoredLocations(_:for:)();
}

uint64_t sub_100083200()
{
  return WidgetConfiguration.supportsAccentedContent()();
}

uint64_t sub_100083210()
{
  return WidgetConfiguration.configurationDisplayName(_:)();
}

uint64_t sub_100083220()
{
  return WidgetConfiguration._containerBackgroundRemovable(_:)();
}

uint64_t sub_100083230()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100083240()
{
  return static BlurReplaceTransition.Configuration.downUp.getter();
}

uint64_t sub_100083250()
{
  return type metadata accessor for BlurReplaceTransition.Configuration();
}

uint64_t sub_100083260()
{
  return BlurReplaceTransition.init(configuration:)();
}

uint64_t sub_100083270()
{
  return type metadata accessor for BlurReplaceTransition();
}

uint64_t sub_100083280()
{
  return static _ForegroundLayerLevel.secondary.getter();
}

uint64_t sub_100083290()
{
  return type metadata accessor for _ForegroundLayerLevel();
}

uint64_t sub_1000832A0()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_1000832B0()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_1000832C0()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_1000832D0()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

uint64_t sub_1000832E0()
{
  return _ForegroundLayerLevelViewModifier.init(level:)();
}

uint64_t sub_1000832F0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_100083300()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_100083310()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_100083320()
{
  return static Font.subheadline.getter();
}

uint64_t sub_100083330()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_100083340()
{
  return static Font.footnote.getter();
}

uint64_t sub_100083350()
{
  return Link.init(destination:label:)();
}

uint64_t sub_100083360()
{
  return Link.init(sensitiveUrl:label:)();
}

uint64_t sub_100083370()
{
  return Text.fontWeight(_:)();
}

uint64_t sub_100083380()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_100083390()
{
  return Text.font(_:)();
}

uint64_t sub_1000833A0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1000833B0()
{
  return Text.init<A>(_:)();
}

uint64_t sub_1000833C0()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_1000833D0()
{
  return View.widgetURL(_:)();
}

uint64_t sub_1000833E0()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_1000833F0()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_100083400()
{
  return View.unredacted()();
}

uint64_t sub_100083410()
{
  return View.environment<A>(_:_:)();
}

uint64_t sub_100083420()
{
  return View.accessibility(identifier:)();
}

uint64_t sub_100083430()
{
  return View.accessibility(label:)();
}

uint64_t sub_100083440()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100083450()
{
  return View.privacySensitive(_:)();
}

uint64_t sub_100083460()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_100083470()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t sub_100083480()
{
  return View.padding(_:)();
}

uint64_t sub_100083490()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t sub_1000834A0()
{
  return static Color.blue.getter();
}

uint64_t sub_1000834B0()
{
  return static Color.clear.getter();
}

uint64_t sub_1000834C0()
{
  return Color.opacity(_:)();
}

uint64_t sub_1000834D0()
{
  return Color.init(_:white:opacity:)();
}

uint64_t sub_1000834E0()
{
  return Color.init(_:bundle:)();
}

uint64_t sub_1000834F0()
{
  return Color.init(_:)();
}

uint64_t sub_100083500()
{
  return Image.init(uiImage:)();
}

uint64_t sub_100083510()
{
  return Image.init(systemName:)();
}

uint64_t sub_100083520()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_100083530()
{
  return Image.renderingMode(_:)();
}

uint64_t sub_100083540()
{
  return type metadata accessor for Image.TemplateRenderingMode();
}

uint64_t sub_100083550()
{
  return Image.widgetAccentedRenderingMode(_:)();
}

uint64_t sub_100083560()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_100083570()
{
  return static Widget.main()();
}

uint64_t sub_100083580()
{
  return ZStack.init(alignment:content:)();
}

uint64_t sub_100083590()
{
  return type metadata accessor for ZStack();
}

uint64_t sub_1000835A0()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1000835B0()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1000835C0()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1000835D0()
{
  return static Alignment.center.getter();
}

uint64_t sub_1000835E0()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_1000835F0()
{
  return type metadata accessor for TupleView();
}

uint64_t sub_100083600()
{
  return TupleView.init(_:)();
}

uint64_t sub_100083610()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_100083620()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_100083630()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_100083640()
{
  return static DispatchTime.now()();
}

uint64_t sub_100083650()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_100083660()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t sub_100083670()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t sub_100083680()
{
  return dispatch thunk of DispatchWorkItem.perform()();
}

uint64_t sub_100083690()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t sub_1000836A0()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t sub_1000836B0()
{
  return + infix(_:_:)();
}

uint64_t sub_1000836C0()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t sub_1000836D0()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_1000836E0()
{
  return static WidgetRenderingMode.accented.getter();
}

uint64_t sub_1000836F0()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_100083700()
{
  return static WidgetAccentedRenderingMode.desaturated.getter();
}

uint64_t sub_100083710()
{
  return static WidgetAccentedRenderingMode.fullColor.getter();
}

uint64_t sub_100083720()
{
  return type metadata accessor for WidgetAccentedRenderingMode();
}

uint64_t sub_100083730()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_100083740()
{
  return static WidgetLocation.iPhoneWidgetsOnMac.getter();
}

uint64_t sub_100083750()
{
  return type metadata accessor for WidgetLocation();
}

uint64_t sub_100083780()
{
  return StaticConfiguration.init<A>(kind:provider:content:)();
}

uint64_t sub_100083790()
{
  return static TimelineReloadPolicy.atEnd.getter();
}

uint64_t sub_1000837A0()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_1000837B0()
{
  return TimelineEntryRelevance.init(score:duration:)();
}

uint64_t sub_1000837C0()
{
  return type metadata accessor for TimelineEntryRelevance();
}

uint64_t sub_1000837D0()
{
  return TimelineProviderContext.displaySize.getter();
}

uint64_t sub_1000837E0()
{
  return TimelineProviderContext.family.getter();
}

uint64_t sub_1000837F0()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_100083800()
{
  return Timeline.init(entries:policy:)();
}

NSDictionary sub_100083810()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100083820()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_100083830()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_100083840()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_100083850()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100083860()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_100083870()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100083880()
{
  return String.init<A>(describing:)();
}

uint64_t sub_100083890()
{
  return String.init<A>(reflecting:)();
}

Swift::Int sub_1000838A0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_1000838B0()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

NSArray sub_1000838C0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1000838D0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000838E0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1000838F0()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

NSSet sub_100083900()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_100083910()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_100083920()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_100083930()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_100083940()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_100083950()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t sub_100083960()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t sub_100083970()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_100083980()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t sub_100083990()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_1000839A0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_1000839B0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_1000839C0()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

Swift::Int sub_1000839D0(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_1000839E0()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1000839F0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_100083A00()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100083A10()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_100083A20()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_100083A30()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t sub_100083A40()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_100083A50()
{
  return _HashTable.previousHole(before:)();
}

Swift::Int sub_100083A60(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_100083A70()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_100083A80()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100083A90()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t sub_100083AA0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_100083AB0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_100083AC0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_100083AD0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_100083AE0()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_100083AF0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_100083B00()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_100083B10()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100083B20()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t sub_100083B30()
{
  return __CocoaDictionary.count.getter();
}

uint64_t sub_100083B40()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t sub_100083B50()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t sub_100083B60()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100083B70()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100083B80()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_100083B90()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_100083BA0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_100083BB0()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t sub_100083BC0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_100083BD0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_100083BE0(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_100083BF0()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_100083C00()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100083C10()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100083C20()
{
  return Hasher.init(_seed:)();
}

void sub_100083C30(Swift::UInt a1)
{
}

Swift::Int sub_100083C40()
{
  return Hasher.finalize()();
}

Swift::Int sub_100083C50()
{
  return Hasher._finalize()();
}

uint64_t sub_100083C60()
{
  return Hasher.init()();
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

uint64_t CLLocationCoordinate2DFromGEOLocationCoordinate2D()
{
  return _CLLocationCoordinate2DFromGEOLocationCoordinate2D();
}

uint64_t GEOCalculateDistance()
{
  return _GEOCalculateDistance();
}

uint64_t GEOConfigGetBOOL()
{
  return _GEOConfigGetBOOL();
}

uint64_t GEOConfigGetDouble()
{
  return _GEOConfigGetDouble();
}

uint64_t GEOConfigGetInteger()
{
  return _GEOConfigGetInteger();
}

uint64_t GEOFindOrCreateLog()
{
  return _GEOFindOrCreateLog();
}

uint64_t GEOGetUserPreferredTransportType()
{
  return _GEOGetUserPreferredTransportType();
}

uint64_t GEOLocationCoordinate2DFromCLLocationCoordinate2D()
{
  return _GEOLocationCoordinate2DFromCLLocationCoordinate2D();
}

uint64_t GEOMapItemFromMapsSuggestionsEntry()
{
  return _GEOMapItemFromMapsSuggestionsEntry();
}

uint64_t GEOMapRectForMapRegion()
{
  return _GEOMapRectForMapRegion();
}

uint64_t GEORoundedMeasurementForDistance()
{
  return _GEORoundedMeasurementForDistance();
}

uint64_t GEOTransportTypeFromUserPreference()
{
  return _GEOTransportTypeFromUserPreference();
}

MKCoordinateRegion MKCoordinateRegionMakeWithDistance(CLLocationCoordinate2D centerCoordinate, CLLocationDistance latitudinalMeters, CLLocationDistance longitudinalMeters)
{
  return _MKCoordinateRegionMakeWithDistance(centerCoordinate, latitudinalMeters, longitudinalMeters);
}

uint64_t MKDefaultCoordinateRegion()
{
  return _MKDefaultCoordinateRegion();
}

uint64_t MKMapRectForCoordinateRegion()
{
  return _MKMapRectForCoordinateRegion();
}

uint64_t MKMapRectMakeWithRadialDistance()
{
  return _MKMapRectMakeWithRadialDistance();
}

uint64_t MSPSharedTripSharingAvailable()
{
  return _MSPSharedTripSharingAvailable();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _MKMapRectThatFits()
{
  return __MKMapRectThatFits();
}

uint64_t _availability_version_check()
{
  return __availability_version_check();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

long double cos(long double __x)
{
  return _cos(__x);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fread(__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return _fseek(a1, a2, a3);
}

uint64_t ftell(FILE *a1)
{
  return _ftell(a1);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void rewind(FILE *a1)
{
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

long double tan(long double __x)
{
  return _tan(__x);
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_MKMapItem(void *a1, const char *a2, ...)
{
  return _[a1 MKMapItem];
}

id objc_msgSend__arrivalTimeStringForEtaDate_timeZone_includingAMPMSymbols_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrivalTimeStringForEtaDate:timeZone:includingAMPMSymbols:");
}

id objc_msgSend__chargeImageAttachmentWithFont_(void *a1, const char *a2, ...)
{
  return [a1 _chargeImageAttachmentWithFont:];
}

id objc_msgSend__computeDistanceProperties(void *a1, const char *a2, ...)
{
  return _[a1 _computeDistanceProperties];
}

id objc_msgSend__computeTimeProperties(void *a1, const char *a2, ...)
{
  return _[a1 _computeTimeProperties];
}

id objc_msgSend__lengthUnitFromUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lengthUnitFromUnit:");
}

id objc_msgSend__maps_addressBookAllowed(void *a1, const char *a2, ...)
{
  return [a1 _maps_addressBookAllowed];
}

id objc_msgSend__navigation_distanceUsesMetricSystem(void *a1, const char *a2, ...)
{
  return [a1 _navigation_distanceUsesMetricSystem];
}

id objc_msgSend__navigation_isEquivalentToTimeZone_forDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_isEquivalentToTimeZone:forDate:");
}

id objc_msgSend__styleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _styleAttributes];
}

id objc_msgSend__unitStyleForUnit_(void *a1, const char *a2, ...)
{
  return [a1 _unitStyleForUnit:];
}

id objc_msgSend_addAttributes_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttributes:range:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_airportStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 airportStyleAttributes];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_arrivalBatteryCharge(void *a1, const char *a2, ...)
{
  return _[a1 arrivalBatteryCharge];
}

id objc_msgSend_arrivalInfo(void *a1, const char *a2, ...)
{
  return _[a1 arrivalInfo];
}

id objc_msgSend_arrivalState(void *a1, const char *a2, ...)
{
  return _[a1 arrivalState];
}

id objc_msgSend_arrivalTimeStringIncludingAMPMSymbols_(void *a1, const char *a2, ...)
{
  return [a1 arrivalTimeStringIncludingAMPMSymbols:];
}

id objc_msgSend_attributedStringWithAttachment_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringWithAttachment:];
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentLocale];
}

id objc_msgSend_avatarImageForContacts_scope_(void *a1, const char *a2, ...)
{
  return [a1 avatarImageForContacts:scope:];
}

id objc_msgSend_avatarImageWithSize_scale_rightToLeft_(void *a1, const char *a2, ...)
{
  return [a1 avatarImageWithSize:scale:rightToLeft:];
}

id objc_msgSend_batteryChargeRemainingAtEndOfLeg(void *a1, const char *a2, ...)
{
  return _[a1 batteryChargeRemainingAtEndOfLeg];
}

id objc_msgSend_calendarEventStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 calendarEventStyleAttributes];
}

id objc_msgSend_capHeight(void *a1, const char *a2, ...)
{
  return _[a1 capHeight];
}

id objc_msgSend_carRentalStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 carRentalStyleAttributes];
}

id objc_msgSend_chargeImageOfSize_batteryLevel_(void *a1, const char *a2, ...)
{
  return [a1 chargeImageOfSize:batteryLevel:];
}

id objc_msgSend_chargingInfo(void *a1, const char *a2, ...)
{
  return _[a1 chargingInfo];
}

id objc_msgSend_chargingStationInfo(void *a1, const char *a2, ...)
{
  return _[a1 chargingStationInfo];
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return [a1 components:fromDate:];
}

id objc_msgSend_considerMyAllowanceAsLimited_(void *a1, const char *a2, ...)
{
  return [a1 considerMyAllowanceAsLimited:];
}

id objc_msgSend_considerMyNewLocation_(void *a1, const char *a2, ...)
{
  return [a1 considerMyNewLocation:];
}

id objc_msgSend_containsKey_(void *a1, const char *a2, ...)
{
  return [a1 containsKey:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingTimeInterval:];
}

id objc_msgSend_dateBySettingHour_minute_second_ofDate_options_(void *a1, const char *a2, ...)
{
  return [a1 dateBySettingHour:minute:second:ofDate:options:];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 defaultTimeZone];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_displayDateForDate_(void *a1, const char *a2, ...)
{
  return [a1 displayDateForDate:];
}

id objc_msgSend_displayETAToEndOfLeg(void *a1, const char *a2, ...)
{
  return _[a1 displayETAToEndOfLeg];
}

id objc_msgSend_displayMinutesForTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 displayMinutesForTimeInterval:];
}

id objc_msgSend_displayRemainingMinutesToEndOfLeg(void *a1, const char *a2, ...)
{
  return _[a1 displayRemainingMinutesToEndOfLeg];
}

id objc_msgSend_distanceRemainingToEndOfLeg(void *a1, const char *a2, ...)
{
  return _[a1 distanceRemainingToEndOfLeg];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_eta(void *a1, const char *a2, ...)
{
  return _[a1 eta];
}

id objc_msgSend_etaDate(void *a1, const char *a2, ...)
{
  return _[a1 etaDate];
}

id objc_msgSend_etaDateStringWithAMPMSymbol_allowTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 etaDateStringWithAMPMSymbol:allowTimeZone:];
}

id objc_msgSend_evChargingInfo(void *a1, const char *a2, ...)
{
  return _[a1 evChargingInfo];
}

id objc_msgSend_feet(void *a1, const char *a2, ...)
{
  return _[a1 feet];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_geoMapItem(void *a1, const char *a2, ...)
{
  return _[a1 geoMapItem];
}

id objc_msgSend_hardwareIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hardwareIdentifier];
}

id objc_msgSend_hasObservers(void *a1, const char *a2, ...)
{
  return _[a1 hasObservers];
}

id objc_msgSend_homeStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 homeStyleAttributes];
}

id objc_msgSend_hotelStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 hotelStyleAttributes];
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return _[a1 hour];
}

id objc_msgSend_iconData(void *a1, const char *a2, ...)
{
  return _[a1 iconData];
}

id objc_msgSend_imageForSize_scale_(void *a1, const char *a2, ...)
{
  return [a1 imageForSize:scale:];
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return [a1 imageWithData:];
}

id objc_msgSend_initWithGeoMapItem_isPlaceHolderPlace_(void *a1, const char *a2, ...)
{
  return [a1 initWithGeoMapItem:isPlaceHolderPlace:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_isArrivedAtEVCharger(void *a1, const char *a2, ...)
{
  return _[a1 isArrivedAtEVCharger];
}

id objc_msgSend_isAuthorizedForPreciseLocation(void *a1, const char *a2, ...)
{
  return _[a1 isAuthorizedForPreciseLocation];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isEtaToFinalDestination(void *a1, const char *a2, ...)
{
  return _[a1 isEtaToFinalDestination];
}

id objc_msgSend_isInArrivalState(void *a1, const char *a2, ...)
{
  return _[a1 isInArrivalState];
}

id objc_msgSend_isInParkingState(void *a1, const char *a2, ...)
{
  return _[a1 isInParkingState];
}

id objc_msgSend_isShortcut(void *a1, const char *a2, ...)
{
  return _[a1 isShortcut];
}

id objc_msgSend_kilometers(void *a1, const char *a2, ...)
{
  return _[a1 kilometers];
}

id objc_msgSend_lastLocation(void *a1, const char *a2, ...)
{
  return _[a1 lastLocation];
}

id objc_msgSend_leg(void *a1, const char *a2, ...)
{
  return _[a1 leg];
}

id objc_msgSend_legIndex(void *a1, const char *a2, ...)
{
  return _[a1 legIndex];
}

id objc_msgSend_legIndexForStepIndex_(void *a1, const char *a2, ...)
{
  return [a1 legIndexForStepIndex:];
}

id objc_msgSend_legInfos(void *a1, const char *a2, ...)
{
  return _[a1 legInfos];
}

id objc_msgSend_legs(void *a1, const char *a2, ...)
{
  return _[a1 legs];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithFormat:];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_markerStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 markerStyleAttributes];
}

id objc_msgSend_meters(void *a1, const char *a2, ...)
{
  return _[a1 meters];
}

id objc_msgSend_miles(void *a1, const char *a2, ...)
{
  return _[a1 miles];
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return _[a1 minute];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nearbyTransitStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 nearbyTransitStyleAttributes];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndex:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_parkedCarStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 parkedCarStyleAttributes];
}

id objc_msgSend_placeholderImageProvider(void *a1, const char *a2, ...)
{
  return _[a1 placeholderImageProvider];
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _[a1 pointSize];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_replaceCharactersInRange_withAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 replaceCharactersInRange:withAttributedString:];
}

id objc_msgSend_restaurantStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 restaurantStyleAttributes];
}

id objc_msgSend_route(void *a1, const char *a2, ...)
{
  return _[a1 route];
}

id objc_msgSend_routeMatch(void *a1, const char *a2, ...)
{
  return _[a1 routeMatch];
}

id objc_msgSend_routeRequestStorageForKey_(void *a1, const char *a2, ...)
{
  return [a1 routeRequestStorageForKey:];
}

id objc_msgSend_schoolStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 schoolStyleAttributes];
}

id objc_msgSend_scopeWithPointSize_scale_rightToLeft_style_(void *a1, const char *a2, ...)
{
  return [a1 scopeWithPointSize:scale:rightToLeft:style:];
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return [a1 setBounds:];
}

id objc_msgSend_setClientCapabilitiesHardwareIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setClientCapabilitiesHardwareIdentifier:];
}

id objc_msgSend_setDefaultTraitsHardwareIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultTraitsHardwareIdentifier];
}

id objc_msgSend_setIconData_(void *a1, const char *a2, ...)
{
  return [a1 setIconData:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return [a1 setLocale:];
}

id objc_msgSend_setLocalizedDateFormatFromTemplate_(void *a1, const char *a2, ...)
{
  return [a1 setLocalizedDateFormatFromTemplate:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 setTimeZone:];
}

id objc_msgSend_setUnitStyle_(void *a1, const char *a2, ...)
{
  return [a1 setUnitStyle:];
}

id objc_msgSend_setUserValues_(void *a1, const char *a2, ...)
{
  return [a1 setUserValues:];
}

id objc_msgSend_sharedLocationManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedLocationManager];
}

id objc_msgSend_sharedLocationStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 sharedLocationStyleAttributes];
}

id objc_msgSend_sharedPlatform(void *a1, const char *a2, ...)
{
  return _[a1 sharedPlatform];
}

id objc_msgSend_sharedService(void *a1, const char *a2, ...)
{
  return _[a1 sharedService];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_startLocationUpdateWithObserver_(void *a1, const char *a2, ...)
{
  return [a1 startLocationUpdateWithObserver:];
}

id objc_msgSend_stepIndex(void *a1, const char *a2, ...)
{
  return _[a1 stepIndex];
}

id objc_msgSend_stopLocationUpdateWithObserver_(void *a1, const char *a2, ...)
{
  return [a1 stopLocationUpdateWithObserver:];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return [a1 stringForKey:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_ticketedEventStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 ticketedEventStyleAttributes];
}

id objc_msgSend_timeZone(void *a1, const char *a2, ...)
{
  return _[a1 timeZone];
}

id objc_msgSend_transportType(void *a1, const char *a2, ...)
{
  return _[a1 transportType];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_undecoratedTitle(void *a1, const char *a2, ...)
{
  return _[a1 undecoratedTitle];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unit(void *a1, const char *a2, ...)
{
  return _[a1 unit];
}

id objc_msgSend_unitStringFromValue_unit_(void *a1, const char *a2, ...)
{
  return [a1 unitStringFromValue:unit:];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_userValues(void *a1, const char *a2, ...)
{
  return _[a1 userValues];
}

id objc_msgSend_waypointDisplayInfoForWaypoint_(void *a1, const char *a2, ...)
{
  return [a1 waypointDisplayInfoForWaypoint:];
}

id objc_msgSend_waypoints(void *a1, const char *a2, ...)
{
  return _[a1 waypoints];
}

id objc_msgSend_workStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 workStyleAttributes];
}

id objc_msgSend_yards(void *a1, const char *a2, ...)
{
  return _[a1 yards];
}