void sub_100877D68(id a1, MapsDebugTableSection *a2)
{
  id v2;

  v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Trail Selection" get:&stru_1012FE170 set:&stru_1012FE190];
}

BOOL sub_100877DA4(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100877DB4(id a1, BOOL a2)
{
}

void sub_100877DC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Use Debug Setting For Hillshade" get:&stru_1012FE1B0 set:&stru_1012FE1D0];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100878064;
  v15[3] = &unk_1012FB138;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  LODWORD(v5) = 1.0;
  id v6 = [v3 addSliderRowWithTitle:@"Hillshade Opacity" subtitleStringFormat:@"%.1f" min:&stru_1012FE1F0 max:v15 get:0.0 set:v5];
  v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472;
  v12 = sub_100878124;
  v13 = &unk_1012FB138;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  LODWORD(v7) = 1.0;
  LODWORD(v8) = 18.0;
  id v9 = [v3 addSliderRowWithTitle:@"Hillshade Blend Mode" subtitleStringFormat:@"%.1f" min:&stru_1012FE210 max:&v10 get:v7 set:v8];
  [v3 setFooter:@" Normal = 0, Multiply = 1, Screen = 2, Overlay = 3, Darken = 4, Lighten = 5, ColorDodge = 6, ColorBur = 7, Difference = 8, Exclusion = 9, HardLight = 10, SoftLight = 11, Hue = 12, Saturation = 13, Color = 14, Luminosity = 15, LinearBurn = 16, LinearDodge = 17, Desaturate = 18", v10, v11, v12, v13];
  objc_destroyWeak(&v14);
  objc_destroyWeak(&v16);
}

void sub_100877F5C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100877F84(id a1)
{
  v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableDebugSettingForHillShade];

  return v2;
}

void sub_100877FC4(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableDebugSettingForHillShade:v2];
}

float sub_10087801C(id a1)
{
  v1 = +[VKDebugSettings sharedSettings];
  [v1 hillshadeOpacity];
  float v3 = v2;

  return v3;
}

void sub_100878064(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setHillshadeOpacity:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

float sub_1008780DC(id a1)
{
  v1 = +[VKDebugSettings sharedSettings];
  [v1 hillshadeBlendMode];
  float v3 = v2;

  return v3;
}

void sub_100878124(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setHillshadeBlendMode:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

void sub_10087819C(id a1, MapsDebugTableSection *a2)
{
  v17 = a2;
  id v2 = [(MapsDebugTableSection *)v17 addSwitchRowWithTitle:@"Do Contour Line Depth Bias" get:&stru_1012FE250 set:&stru_1012FE270];
  if (GEOConfigGetBOOL())
  {
    LODWORD(v3) = -943501440;
    LODWORD(v4) = -2.0;
    id v5 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Contour Line Depth Bias" subtitleStringFormat:@"%.1f" min:&stru_1012FE290 max:&stru_1012FE2B0 get:v3 set:v4];
    LODWORD(v6) = -1010302976;
    LODWORD(v7) = -2.0;
    id v8 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Contour Line Depth Slope Scale" subtitleStringFormat:@"%.1f" min:&stru_1012FE2D0 max:&stru_1012FE2F0 get:v6 set:v7];
  }
  LODWORD(v4) = 1117782016;
  LODWORD(v3) = -1.0;
  id v9 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Pitch Fade Contour Line (degrees)" subtitleStringFormat:@"%.1f" min:&stru_1012FE310 max:&stru_1012FE330 get:v3 set:v4];
  LODWORD(v10) = 1.0;
  id v11 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Contour Line Alpha When Pitched" subtitleStringFormat:@"%.1f" min:&stru_1012FE350 max:&stru_1012FE370 get:0.0 set:v10];
  LODWORD(v12) = -1.0;
  id v13 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Trail/Junction Elevation Offset" subtitleStringFormat:@"%.01f" min:&stru_1012FE390 max:&stru_1012FE3B0 get:v12 set:0.0];
  LODWORD(v14) = 1118437376;
  LODWORD(v15) = -1.0;
  id v16 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Pitch to Disable DaVinci Animation" subtitleStringFormat:@"%.1f" min:&stru_1012FE3D0 max:&stru_1012FE3F0 get:v15 set:v14];
}

BOOL sub_100878370(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100878380(id a1, BOOL a2)
{
}

float sub_100878394(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_1008783BC(id a1, float a2)
{
}

float sub_1008783D0(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_1008783F8(id a1, float a2)
{
}

float sub_10087840C(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100878434(id a1, float a2)
{
}

float sub_100878448(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100878470(id a1, float a2)
{
}

float sub_100878484(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 trailJunctionElevationOffset];
  float v3 = v2;

  return v3;
}

void sub_1008784CC(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setTrailJunctionElevationOffset:v3];
}

float sub_100878524(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_10087854C(id a1, float a2)
{
}

void sub_100878560(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 96);
  double v3 = (char *)[v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      double v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        MapsFeature_RemoveBlockListener();
        ++v6;
      }
      while (v4 != v6);
      id v4 = (char *)[v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained rebuildSections:v8];
}

void sub_100878670(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 96);
  double v3 = (char *)[v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      double v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        MapsFeature_RemoveBlockListener();
        ++v6;
      }
      while (v4 != v6);
      id v4 = (char *)[v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained rebuildSections:v8];
}

void sub_100878780(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 96);
  double v3 = (char *)[v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      double v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        MapsFeature_RemoveBlockListener();
        ++v6;
      }
      while (v4 != v6);
      id v4 = (char *)[v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained rebuildSections:v8];
}

void sub_1008789A4(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3 + 1 < (unint64_t)[*(id *)(a1 + 32) count]) {
      uint64_t v4 = v3 + 1;
    }
    else {
      uint64_t v4 = 0;
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100878A70;
    block[3] = &unk_1012EA9E0;
    uint64_t v9 = v4;
    int8x16_t v6 = *(int8x16_t *)(a1 + 32);
    id v5 = (id)v6.i64[0];
    int8x16_t v8 = vextq_s8(v6, v6, 8uLL);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_100878A70(uint64_t a1)
{
  return [*(id *)(a1 + 32) runNextTourIndex:*(void *)(a1 + 48) withTours:*(void *)(a1 + 40)];
}

void sub_100878ADC(id a1, unint64_t a2)
{
  id v2 = +[GEOTileLoader modernLoader];
  [v2 clearAllCaches];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

void sub_100878E98(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_100878EB4(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  double v7 = WeakRetained;
  if (WeakRetained)
  {
    if (v5) {
      (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
    }
    else {
      [WeakRetained _submitOrEnqueueFeedback:*(void *)(a1 + 32) attachedImages:*(void *)(a1 + 40) resolvedUserInfo:v8 traits:*(void *)(a1 + 48) debugSettings:*(void *)(a1 + 56) uploadPolicy:*(void *)(a1 + 88) feedbackObjectToUpdate:*(void *)(a1 + 64) completion:*(void *)(a1 + 72)];
    }
  }
}

void sub_100879510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100879534(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    uint64_t v9 = sub_100109EF8();
    long long v10 = v9;
    if (v7)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v27 = v7;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed image upload request (handshake) with error %@", buf, 0xCu);
      }

      uint64_t v11 = *(void *)(a1 + 64);
      if (v11) {
        (*(void (**)(uint64_t, id, id))(v11 + 16))(v11, v6, v7);
      }
    }
    else
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Finished image upload request (handshake)", buf, 2u);
      }

      double v12 = [v6 feedbackResult];
      id v13 = [v12 imageUploadResult];
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472;
      v24[2] = sub_1008797D0;
      v24[3] = &unk_1012FE4E8;
      uint64_t v14 = *(void *)(a1 + 32);
      id v25 = *(id *)(a1 + 40);
      [v13 enumerateAndMatchPhotosWithMetadata:v14 withBlock:v24];

      double v15 = [WeakRetained _feedbackUploaderForUploadPolicy:*(void *)(a1 + 80)];
      uint64_t v21 = *(void *)(a1 + 32);
      id v16 = [v6 feedbackResult];
      v17 = [v16 imageUploadResult];
      uint64_t v18 = *(void *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 48);
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      v22[2] = sub_100879874;
      v22[3] = &unk_1012FE510;
      uint64_t v20 = *(void *)(a1 + 56);
      id v23 = *(id *)(a1 + 64);
      [v15 submitPhotosWithMetadata:v21 withImageUploadResult:v17 withCorrectionsRequest:v18 traits:v19 parentProgress:v20 completion:v22];
    }
  }
}

void sub_1008797D0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v9 = [v4 feedbackRequestParameters];
  id v7 = [v9 submissionParameters];
  id v8 = [v6 imageId];

  [v7 appendServerImageId:v8 withMatchingPhoto:v5];
}

uint64_t sub_100879874(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100879BC0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100879CD0;
  block[3] = &unk_1012FE560;
  id v13 = a4;
  id v14 = *(id *)(a1 + 32);
  id v15 = v7;
  id v16 = v8;
  id v17 = *(id *)(a1 + 40);
  id v9 = v8;
  id v10 = v7;
  id v11 = v13;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100879CD0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = sub_100109EF8();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v9 = 138412290;
      uint64_t v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Failed certificate fetch with error %@", (uint8_t *)&v9, 0xCu);
    }
  }
  id v4 = [*(id *)(a1 + 48) copy];
  id v5 = [*(id *)(a1 + 40) tdmUserInfo];
  [v5 setBaaCertificates:v4];

  uint64_t v6 = *(void *)(a1 + 56);
  id v7 = [*(id *)(a1 + 40) tdmUserInfo];
  [v7 setBaaSignature:v6];

  return (*(uint64_t (**)(void))(*(void *)(a1 + 64) + 16))();
}

void sub_100879F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100879F98(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    if (v5) {
      (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    }
    else {
      [WeakRetained _submitOrEnqueueFeedback:*(void *)(a1 + 32) resolvedUserInfo:v8 traits:*(void *)(a1 + 40) debugSettings:*(void *)(a1 + 48) uploadPolicy:*(void *)(a1 + 80) feedbackObjectToUpdate:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
    }
  }
}

uint64_t sub_10087A2D4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10087AB98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10087ABBC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v8 = sub_100109EF8();
    int v9 = v8;
    if (!v5 || v6)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to retrieve Fraud Report Score with error %@ or fraudReportResponse is nil", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        int v10 = 138412290;
        id v11 = v5;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Successfully received Fraud Report: %@", (uint8_t *)&v10, 0xCu);
      }

      [WeakRetained _sendTdmFraudNotificationWithFraudReportResponse:v5 tdmRequestInfo:*(void *)(a1 + 32)];
    }
  }
}

void sub_10087AF5C(id a1, GEORPFeedbackResponse *a2, NSData *a3, NSError *a4)
{
  id v5 = a2;
  id v6 = a4;
  id v7 = sub_100109EF8();
  id v8 = v7;
  if (!v5 || v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v12 = 138412290;
      id v13 = v6;
      int v9 = "Failed to send TDM Notification with error %@ or response is nil";
      int v10 = v8;
      os_log_type_t v11 = OS_LOG_TYPE_ERROR;
      goto LABEL_7;
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    int v12 = 138412290;
    id v13 = v5;
    int v9 = "Successfully send TDM Fraud Notification... response status: %@";
    int v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_DEBUG;
LABEL_7:
    _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, (uint8_t *)&v12, 0xCu);
  }
}

void sub_10087B818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_10087B83C(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  [v7 distance];
  if (v5 <= *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    [v7 distance];
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v6;
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
  }
}

void sub_10087B998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_10087B9BC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (*(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) >= (double)[v5 expectedTime])
  {
    *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = (double)[v5 expectedTime];
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
  }
}

id sub_10087C210(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 _maps_isEqualToComposedRoute:*(void *)(a1 + 32)];
  if (result) {
    *a4 = 1;
  }
  return result;
}

NSUUID *__cdecl sub_10087C29C(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (NSUUID *)[(GEOComposedRoute *)a2 uniqueRouteID];
}

void sub_10087EF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10087EFA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained done];
}

UIColor *__cdecl sub_10087F86C(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

RouteMarkerFormatterInfo *__cdecl sub_10088081C(id a1, GEOComposedRouteLeg *a2, unint64_t a3)
{
  [(GEOComposedRouteLeg *)a2 travelDuration];
  uint64_t v3 = GEOStringForDuration();
  id v4 = [[RouteMarkerFormatterInfo alloc] initWithRouteDescription:v3 etaComparison:0 tollCurrency:0 styleAttributes:0];

  return v4;
}

void sub_100882148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008821B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didTapWebsiteButton];
}

void sub_1008821F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v1 = [WeakRetained actionDelegate];
  [v1 didSelectAllGuidesMenuItem];
}

void sub_10088486C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100884888(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateConstraints];
    id WeakRetained = v2;
  }
}

void sub_100885E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100885E90(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 56) = 0;
  return result;
}

void sub_100885E9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 1;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v16 = _NSConcreteStackBlock;
    uint64_t v17 = 3221225472;
    uint64_t v18 = sub_100886084;
    uint64_t v19 = &unk_1012E73F0;
    uint64_t v20 = WeakRetained;
    uint64_t v21 = &v22;
    geo_isolate_sync_data();
    if (!*((unsigned char *)v23 + 24))
    {
      os_log_type_t v11 = _NSConcreteStackBlock;
      uint64_t v12 = 3221225472;
      id v13 = sub_100886098;
      id v14 = &unk_1012E5D08;
      id v15 = WeakRetained;
      geo_isolate_sync();
      id v5 = [WeakRetained[2] _maps_mapsSceneDelegate];
      uint64_t v6 = [v5 rapPresenter];
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      v9[2] = sub_1008860A4;
      v9[3] = &unk_1012FE788;
      uint64_t v7 = *(void *)(a1 + 40);
      id v8 = *(id *)(a1 + 48);
      v9[4] = WeakRetained;
      id v10 = v8;
      [v6 presentPlacecardImageryRAPWithContext:v7 layoutManager:v3 popoverPresentationBlock:v9 completion:0];
    }
  }

  _Block_object_dispose(&v22, 8);
}

void sub_10088606C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100886084(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 56);
  return result;
}

uint64_t sub_100886098(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 56) = 0;
  return result;
}

void sub_1008860A4(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, void))(v3 + 16))(v3, *(void *)(a1 + 32));
  }
  [v4 setSourceView:*(void *)(*(void *)(a1 + 32) + 24)];
  [*(id *)(*(void *)(a1 + 32) + 24) bounds];
  [v4 setSourceRect:];
  [v4 setPermittedArrowDirections:15];
}

uint64_t sub_1008861A4(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 56) = 1;
  return result;
}

id sub_1008865B0(uint64_t a1, unint64_t a2)
{
  id v4 = sub_1000A930C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    int v6 = 134217984;
    unint64_t v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "AppLaunchNavTraceAlert: button = %ld", (uint8_t *)&v6, 0xCu);
  }

  if (a2 <= 1) {
    GEOConfigSetInteger();
  }
  return [*(id *)(a1 + 32) _alertDidFinishProcessing];
}

void sub_1008869F8(id a1)
{
  uint64_t v1 = +[NSFileManager _maps_globalCachesURL];
  id v2 = [v1 URLByAppendingPathComponent:@"ARTraces"];
  id v5 = [v2 path];

  uint64_t v3 = [v5 stringByAppendingPathComponent:@"ppt_ar_recording.mov"];
  id v4 = (void *)qword_10160FC00;
  qword_10160FC00 = v3;
}

id sub_100886E30(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"showARUI"];
  id v2 = *(void **)(a1 + 32);

  return _[v2 _runARLocalization];
}

void sub_100886F0C(uint64_t a1, void *a2)
{
  id v5 = [a2 object];
  unsigned int v3 = [v5 wasLastLocalizationSuccessful];
  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    [v4 finishedSubTest:@"runARLocalization"];
    [*(id *)(a1 + 32) _displayARElement];
  }
  else
  {
    [v4 failedTestWithReason:@"AR localization failed"];
  }
}

id sub_100887024(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"displayARElement"];
  id v2 = *(void **)(a1 + 32);

  return _[v2 _dismissARUI];
}

void sub_100887160(uint64_t a1)
{
  [*(id *)(a1 + 32) startedSubTest:@"dismissARUI"];
  id v2 = [*(id *)(a1 + 32) testCoordinator];
  [v2 pptTestExitAR];
}

id sub_1008871C0(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"dismissARUI"];
  id v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

void sub_100888190(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"PPTTest_CitySelector_DidDisplaySections" object:*(void *)(a1 + 32)];
}

void sub_100888354(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

id sub_100888388(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  os_log_type_t v11 = [WeakRetained sections];
  uint64_t v12 = [v11 objectAtIndex:[v8 section]];

  if (v12)
  {
    [v12 configuration];
    if (v21)
    {
      [v12 configuration];

      if (v19 != 1)
      {
        id v13 = 0;
        goto LABEL_8;
      }
    }
    else
    {
    }
  }
  id v14 = +[MKPlaceCompactCollectionCell reuseIdentifier];
  id v13 = [v7 dequeueReusableCellWithReuseIdentifier:v14 forIndexPath:v8];

  id v15 = [*(id *)(a1 + 32) logicController];
  id v16 = [v15 compactCollectionAtIndex:[v8 item] sectionIndex:[v8 section]];
  [v13 configureWithModel:v16];

LABEL_8:

  return v13;
}

void sub_100888520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_100888534(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  int v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = [WeakRetained sections];
  id v9 = [v8 objectAtIndex:[v5 section]];

  id v10 = objc_loadWeakRetained(v6);
  os_log_type_t v11 = [v10 logicController];
  uint64_t v12 = [v11 compactCollectionsInSection:[v5 section]];

  if (![v12 count] || v9 && (objc_msgSend(v9, "configuration"), v23, v24))
  {
    id v13 = 0;
  }
  else
  {
    id v14 = objc_loadWeakRetained(v6);
    id v15 = [v14 collectionView];
    id v16 = +[GuidesGenericSectionHeader reuseIdentifier];
    uint64_t v17 = +[GuidesGenericSectionHeader reuseIdentifier];
    id v13 = [v15 dequeueReusableSupplementaryViewOfKind:v16 withReuseIdentifier:v17 forIndexPath:v5];

    id v18 = objc_loadWeakRetained(v6);
    uint64_t v19 = [v18 logicController];
    uint64_t v20 = [v9 sectionTitle];
    uint64_t v21 = [v19 titleForSectionFromTitle:v20];
    [v13 configureWithTitle:v21];
  }

  return v13;
}

void sub_100888804(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  int v6 = v5;
  if (v5)
  {
    [v5 configuration];

    if ((unint64_t)v13 > 1) {
      goto LABEL_9;
    }
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  id v7 = [*(id *)(a1 + 32) logicController:v12 v13];
  id v8 = [v7 compactCollectionsInSection:a3];

  id v9 = [v8 count];
  id v10 = *(void **)(a1 + 40);
  if (v9)
  {
    [v10 appendItemsWithIdentifiers:v8 intoSectionWithIdentifier:v6];
  }
  else
  {
    id v14 = v6;
    os_log_type_t v11 = +[NSArray arrayWithObjects:&v14 count:1];
    [v10 deleteSectionsWithIdentifiers:v11];
  }
LABEL_9:
}

void sub_100888C80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained displayCitySelectorData];
}

void sub_100889360(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFScanningStateMonitor");
  id v2 = (void *)qword_10160FC10;
  qword_10160FC10 = (uint64_t)v1;
}

void sub_10088A500(uint64_t a1)
{
  id v2 = sub_10088A6C4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      int v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = *(void **)(a1 + 32);
    uint64_t v10 = v9[7];
    os_log_type_t v11 = [v9 window];
    long long v12 = [v11 recursiveDescription];
    *(_DWORD *)buf = 138543874;
    id v14 = v8;
    __int16 v15 = 2112;
    uint64_t v16 = v10;
    __int16 v17 = 2112;
    id v18 = v12;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "[%{public}@] Detected top label is truncated (%@): %@", buf, 0x20u);
  }
}

id sub_10088A6C4()
{
  if (qword_10160FC38 != -1) {
    dispatch_once(&qword_10160FC38, &stru_1012FE858);
  }
  v0 = (void *)qword_10160FC30;

  return v0;
}

void sub_10088A718(uint64_t a1)
{
  id v2 = sub_10088A6C4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      int v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = *(void **)(a1 + 32);
    uint64_t v10 = v9[8];
    os_log_type_t v11 = [v9 window];
    long long v12 = [v11 recursiveDescription];
    *(_DWORD *)buf = 138543874;
    id v14 = v8;
    __int16 v15 = 2112;
    uint64_t v16 = v10;
    __int16 v17 = 2112;
    id v18 = v12;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "[%{public}@] Detected bottom label is truncated (%@): %@", buf, 0x20u);
  }
}

void sub_10088B274(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarTwoPartLabel");
  id v2 = (void *)qword_10160FC30;
  qword_10160FC30 = (uint64_t)v1;
}

void sub_10088B30C(id a1)
{
  os_log_t v1 = (void *)qword_10160FC50;
  qword_10160FC50 = (uint64_t)&off_1013AE0A0;
}

void sub_10088B378(id a1)
{
  os_log_t v1 = (void *)qword_10160FC60;
  qword_10160FC60 = (uint64_t)&off_1013AE0B8;
}

void sub_10088B3E4(id a1)
{
  os_log_t v1 = objc_alloc_init(RAPRecordMapsSync);
  id v2 = (void *)qword_10160FC70;
  qword_10160FC70 = (uint64_t)v1;
}

void sub_10088B714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10088B72C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v6)
  {
    NSLog(@"%@", v6);
    id v8 = sub_100576FF4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      os_log_type_t v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to fetch all synced RAP records with error %@", buf, 0xCu);
    }
  }
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObjectsFromArray:v5];
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, void))(v9 + 16))(v9, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
}

void sub_10088B980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10088B9A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v6)
    {
      id v8 = sub_100576FF4();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138412290;
        id v13 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to save synced RAP with error %@", (uint8_t *)&v12, 0xCu);
      }

      uint64_t v9 = *(void *)(a1 + 40);
      if (v9) {
        (*(void (**)(uint64_t, id))(v9 + 16))(v9, v6);
      }
    }
    else
    {
      uint64_t v10 = *(void *)(a1 + 32);
      os_log_type_t v11 = [v5 firstObject];
      [WeakRetained _buildMapsSyncRAPRecord:v10 communityID:v11 completion:*(void *)(a1 + 40)];
    }
  }
}

void sub_10088BD38(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100576FF4();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to save synced RAP with error %@", (uint8_t *)&v9, 0xCu);
    }

    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      id v7 = *(void (**)(void))(v6 + 16);
LABEL_10:
      v7();
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Successfully synced RAP", (uint8_t *)&v9, 2u);
    }

    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      id v7 = *(void (**)(void))(v8 + 16);
      goto LABEL_10;
    }
  }
}

void sub_10088C060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_10088C09C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v6)
    {
      NSLog(@"%@", v6);
      uint64_t v8 = sub_100576FF4();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to fetch all synced RAP records with error %@", buf, 0xCu);
      }
    }
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObjectsFromArray:v5];
    uint64_t v9 = *(void *)(a1 + 32);
    if (v9) {
      (*(void (**)(uint64_t, id))(v9 + 16))(v9, v5);
    }
  }
}

void sub_10088C42C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_10088C468(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4) {
      (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
    }
  }
}

void sub_10088C4D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v6)
  {
    NSLog(@"%@", v6);
    uint64_t v8 = sub_100576FF4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to fetch synced RAPRecord with error %@", buf, 0xCu);
    }

    uint64_t v9 = *(void *)(a1 + 32);
    if (v9) {
      (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v7);
    }
  }
  else
  {
    if ((unint64_t)[v5 count] >= 2)
    {
      id v10 = sub_100576FF4();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "There is more than 1 RAP record in the sync db with the same Record Identifier", buf, 2u);
      }
    }
    uint64_t v11 = [v5 firstObject];
    uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
    id v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setStatus:*(__int16 *)(a1 + 48)];
    id v14 = +[MapsSyncStore sharedStore];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_10088C6D8;
    v15[3] = &unk_1012E76C0;
    id v16 = *(id *)(a1 + 32);
    [v14 saveWithObjects:v5 completionHandler:v15];
  }
}

void sub_10088C6D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100576FF4();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to commit edit to synced RAP status with error %@", (uint8_t *)&v9, 0xCu);
    }

    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      id v7 = *(void (**)(void))(v6 + 16);
LABEL_10:
      v7();
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Successfully updated synced RAP record with status", (uint8_t *)&v9, 2u);
    }

    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      id v7 = *(void (**)(void))(v8 + 16);
      goto LABEL_10;
    }
  }
}

void sub_10088C910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10088C928(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v6)
  {
    NSLog(@"%@", v6);
    uint64_t v8 = sub_100576FF4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to fetch all synced IncidentReports with error %@", buf, 0xCu);
    }
  }
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObjectsFromArray:v5];
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, void))(v9 + 16))(v9, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
}

void sub_10088CBB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100576FF4();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to save synced IncidentReport with error %@", (uint8_t *)&v9, 0xCu);
    }

    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      id v7 = *(void (**)(void))(v6 + 16);
LABEL_10:
      v7();
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Successfully synced IncidentReport!", (uint8_t *)&v9, 2u);
    }

    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      id v7 = *(void (**)(void))(v8 + 16);
      goto LABEL_10;
    }
  }
}

void sub_10088E178(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10088E194(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained startedTest];

  id v3 = objc_loadWeakRetained(v1);
  [v3 finishedTest];
}

id sub_10088E26C(uint64_t a1)
{
  [*(id *)(a1 + 32) startedTest];
  uint64_t v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10088E2F0;
  v4[3] = &unk_1012E5D08;
  v4[4] = v2;
  return [v2 rotateDeviceWithCompletion:v4];
}

id sub_10088E2F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

void sub_10088EE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10088EE58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  __int16 v15 = [[_URLKeyLabel alloc] initWithString:v6 color:v5];

  if (*(uint64_t *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) >= 1
    && (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) & 1) == 0)
  {
    *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = *(double *)(*(void *)(*(void *)(a1 + 48) + 8)
                                                                            + 24)
                                                                + 30.0;
  }
  [(_URLKeyLabel *)v15 frame];
  double v9 = v8;
  double v11 = v10;
  double v12 = *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  double v13 = 20.0;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    [*(id *)(a1 + 32) bounds:20.0];
    double v13 = (v14 + -20.0) * 0.5 + 20.0;
  }
  -[_URLKeyLabel setFrame:](v15, "setFrame:", v13, v12, v9, v11);
  [*(id *)(a1 + 32) addSubview:v15];
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
}

UIViewController *__cdecl sub_10088F6DC(id a1)
{
  return 0;
}

id sub_10088F6E4(uint64_t a1)
{
  uint64_t v2 = +[UIImage systemImageNamed:@"doc.on.doc"];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10088F844;
  v7[3] = &unk_1012EBC40;
  id v8 = *(id *)(a1 + 32);
  id v3 = +[UIAction actionWithTitle:@"Copy" image:v2 identifier:0 handler:v7];

  double v9 = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:&v9 count:1];
  id v5 = +[UIMenu menuWithTitle:&stru_101324E70 children:v4];

  return v5;
}

void sub_10088F844(uint64_t a1)
{
  id v4 = +[UIPasteboard generalPasteboard];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [UTTypeUTF8PlainText identifier];
  [v4 setValue:v2 forPasteboardType:v3];
}

id sub_1008900E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[NSNumber numberWithUnsignedInteger:a2];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 80);
  *(void *)(v4 + 80) = v3;

  id v6 = *(void **)(a1 + 32);

  return [v6 _updateSubmitButton];
}

void sub_100890148(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 88), a2);
  id v4 = a2;
  [*(id *)(a1 + 32) _updateSubmitButton];
}

UIFont *__cdecl sub_1008909D0(id a1)
{
  os_log_t v1 = +[MKFontManager sharedManager];
  uint64_t v2 = [v1 boldBodyFont];
  uint64_t v3 = +[UIFont _maps_cappedFont:v2 withMaxPoint:24.0];

  return (UIFont *)v3;
}

void sub_100890B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100890BAC(double *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = *((void *)a1 + 4);
  double v7 = a1[7];
  double v8 = a1[8];
  id v9 = a2;
  [v9 convertPoint:v6 fromView:v7];
  [v9 hitTest:*((void *)a1 + 5)];
  id obj = (id)objc_claimAutoreleasedReturnValue();

  double v10 = obj;
  if (obj)
  {
    objc_storeStrong((id *)(*(void *)(*((void *)a1 + 6) + 8) + 40), obj);
    double v10 = obj;
    *a4 = 1;
  }
}

id sub_10089100C(uint64_t a1)
{
  double v1 = 1.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v1 = 0.0;
  }
  return [*(id *)(*(void *)(a1 + 32) + 96) setAlpha:v1];
}

id sub_10089112C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:*(double *)(a1 + 40)];
}

void sub_100891F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_100891F84(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained delegate];
    [v5 lookAroundFloatingButtonsViewController:v4 didSelectToggleLabels:v6];
  }
}

void sub_100891FFC(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained delegate];
    [v5 lookAroundFloatingButtonsViewController:v4 didSelectImageryInfo:v6];
  }
}

void sub_100892074(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained delegate];
    [v5 lookAroundFloatingButtonsViewController:v4 didSelectReportAnIssue:v6];
  }
}

void sub_1008933F4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    double v2 = 0.0;
  }
  else {
    double v2 = -10.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 40) _setTouchInsets:-10.0, -10.0, -10.0, v2];
  [*(id *)(*(void *)(a1 + 32) + 24) setActive:*(unsigned __int8 *)(a1 + 48)];
  [*(id *)(*(void *)(a1 + 32) + 32) setActive:*(unsigned char *)(a1 + 48) == 0];
  double v3 = 1.0;
  if (!*(unsigned char *)(a1 + 48)) {
    double v3 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:v3];
  [*(id *)(*(void *)(a1 + 32) + 48) setHidden:0];
  if (*(unsigned char *)(a1 + 48)) {
    double v4 = 0.0;
  }
  else {
    double v4 = -10.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 80) _setTouchInsets:-10.0 v4:-10.0:-10.0];
  [*(id *)(*(void *)(a1 + 32) + 64) setActive:*(unsigned __int8 *)(a1 + 48)];
  [*(id *)(*(void *)(a1 + 32) + 72) setActive:*(unsigned char *)(a1 + 48) == 0];
  [*(id *)(a1 + 32) _setCornerRadiiWithTraitCollection:*(void *)(a1 + 40)];
  id v5 = [*(id *)(a1 + 32) view];
  [v5 layoutIfNeeded];
}

id sub_10089354C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 48) setHidden:*(unsigned char *)(a1 + 40) == 0];
}

uint64_t sub_10089356C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10089357C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100894AA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateState];
}

id sub_100894C70()
{
  if (qword_10160FC98 != -1) {
    dispatch_once(&qword_10160FC98, &stru_1012FECA0);
  }
  v0 = (void *)qword_10160FC90;

  return v0;
}

void sub_10089569C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFPuckAnimationTask");
  double v2 = (void *)qword_10160FC90;
  qword_10160FC90 = (uint64_t)v1;
}

void sub_10089587C(id a1)
{
  os_log_t v1 = (objc_class *)objc_opt_class();
  InstanceMethod = class_getInstanceMethod(v1, "sendEvent:");
  double v3 = (objc_class *)objc_opt_class();
  double v4 = class_getInstanceMethod(v3, "__mapsEventRecorder_sendEvent:");

  method_exchangeImplementations(InstanceMethod, v4);
}

id sub_1008959CC()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_10160FCB0;
  uint64_t v7 = qword_10160FCB0;
  if (!qword_10160FCB0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100897AEC;
    v3[3] = &unk_1012E9390;
    v3[4] = &v4;
    sub_100897AEC((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100895A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100895AB0(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v6 = [a2 description];
    NSLog(@"Screen recording start failed with error: %@", v6);
  }
  else
  {
    [*(id *)(a1 + 32) setRecording:1];
    [*(id *)(a1 + 32) addNavigationBarView];
    id v3 = +[GEOEventRecorderInstrumentation initializeDefaultInstrumentation];
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      (*(void (**)(void))(v4 + 16))();
    }
    id v5 = *(void **)(a1 + 32);
    [v5 hideLoadingIndicator];
  }
}

void sub_100895C58(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  id v6 = v5;
  if (v5)
  {
    uint64_t v7 = [v5 description];
    NSLog(@"Screen recording end failed with error: %@", v7);
  }
  else
  {
    uint64_t v7 = +[GEOEventRecorderInstrumentation defaultInstrumentation];
    [v7 captureEventRecorderScreenVideo];
  }

  double v8 = +[GEOEventRecorderInstrumentation defaultInstrumentation];
  id v9 = [v8 getRecordedFilePaths];

  if ([*(id *)(a1 + 32) tapToRadarEnabled]) {
    [*(id *)(a1 + 32) attachTapToRadarWithPaths:v9];
  }
  [*(id *)(a1 + 32) saveVideoFileToPhotoLibraryWithPaths:v9];
  +[GEOEventRecorderInstrumentation endInstrumentation];
  [*(id *)(a1 + 32) removeNavigationBarView];
  uint64_t v10 = *(void *)(a1 + 40);
  if (v10) {
    (*(void (**)(void))(v10 + 16))();
  }
  [*(id *)(a1 + 32) hideLoadingIndicator];
}

id sub_1008972E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  [WeakRetained safeAreaInsets];
  double v4 = v3;

  id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  [v5 frame];
  double v7 = v6;

  id v8 = [objc_alloc((Class)UIView) initWithFrame:0.0, 0.0, v4, v7];
  [*(id *)(a1 + 32) setNavigationBarView:v8];

  id v9 = +[UIColor colorWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  uint64_t v10 = [*(id *)(a1 + 32) navigationBarView];
  [v10 setBackgroundColor:v9];

  id v11 = [*(id *)(a1 + 32) navigationBarView];
  [v11 setAlpha:0.0];

  id v12 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  double v13 = [*(id *)(a1 + 32) navigationBarView];
  [v12 addSubview:v13];

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10089747C;
  v15[3] = &unk_1012E5D08;
  void v15[4] = *(void *)(a1 + 32);
  return +[UIView animateWithDuration:v15 animations:0.3];
}

void sub_10089747C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) navigationBarView];
  [v1 setAlpha:1.0];
}

id sub_100897538(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100897600;
  v3[3] = &unk_1012E5D08;
  uint64_t v4 = *(void *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100897648;
  v2[3] = &unk_1012E7D28;
  v2[4] = v4;
  return +[UIView animateWithDuration:v3 animations:v2 completion:0.3];
}

void sub_100897600(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) navigationBarView];
  [v1 setAlpha:0.0];
}

id sub_100897648(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) navigationBarView];
  [v2 removeFromSuperview];

  double v3 = *(void **)(a1 + 32);

  return [v3 setNavigationBarView:0];
}

void sub_10089770C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  id v2 = [objc_alloc((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:101];
  [*(id *)(a1 + 32) setLoadingIndicator:v2];

  double v3 = +[UIColor grayColor];
  uint64_t v4 = [*(id *)(a1 + 32) loadingIndicator];
  [v4 setColor:v3];

  [WeakRetained frame];
  double v6 = v5 * 0.5;
  [WeakRetained frame];
  double v8 = v7 * 0.5;
  id v9 = [*(id *)(a1 + 32) loadingIndicator];
  [v9 setCenter:v6, v8];

  id v10 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  id v11 = [*(id *)(a1 + 32) loadingIndicator];
  [v10 addSubview:v11];

  id v12 = [*(id *)(a1 + 32) loadingIndicator];
  [v12 startAnimating];
}

id sub_1008978C0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) loadingIndicator];
  [v2 stopAnimating];

  double v3 = [*(id *)(a1 + 32) loadingIndicator];
  [v3 removeFromSuperview];

  uint64_t v4 = *(void **)(a1 + 32);

  return [v4 setLoadingIndicator:0];
}

Class sub_100897AEC(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10160FCB8)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_100897C40;
    v4[4] = &unk_1012E63F0;
    void v4[5] = v4;
    long long v5 = off_1012FED30;
    uint64_t v6 = 0;
    qword_10160FCB8 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_10160FCB8)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("RPScreenRecorder");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  qword_10160FCB0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100897C40()
{
  uint64_t result = _sl_dlopen();
  qword_10160FCB8 = result;
  return result;
}

void sub_100899CCC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a1;
  id v5 = a3;
  id v6 = v4;
  [v6 UTF8String];
  ct_green_tea_logger_create_static();
  double v7 = getCTGreenTeaOsLogHandle();
  if (v7)
  {
    [v5 UTF8String];
    os_log_with_args();
  }
}

void sub_100899D70()
{
  if (qword_10160FCD8 != -1) {
    dispatch_once(&qword_10160FCD8, &stru_1012FED48);
  }
  v0 = (void *)qword_10160FCC0;
  id v1 = +[NSDate now];
  sub_100899CCC(v0, 0, @"%@ <%@>[Maps][%@] : Reading photos or videos");
}

void sub_100899E0C()
{
  if (qword_10160FCD8 != -1) {
    dispatch_once(&qword_10160FCD8, &stru_1012FED48);
  }
  v0 = (void *)qword_10160FCC0;
  id v1 = +[NSDate now];
  sub_100899CCC(v0, 0, @"%@ <%@>[Maps][%@] : Transmitting photos or videos");
}

void sub_100899EA8(id a1)
{
  id v8 = +[NSBundle mainBundle];
  uint64_t v1 = [v8 bundleIdentifier];
  id v2 = (void *)qword_10160FCC0;
  qword_10160FCC0 = v1;

  uint64_t v3 = [v8 objectForInfoDictionaryKey:@"CFBundleDisplayName"];
  id v4 = (void *)qword_10160FCC8;
  qword_10160FCC8 = v3;

  id v5 = +[NSProcessInfo processInfo];
  uint64_t v6 = [v5 processName];
  double v7 = (void *)qword_10160FCD0;
  qword_10160FCD0 = v6;
}

CFStringRef sub_100899F5C(unint64_t a1)
{
  if (a1 > 2) {
    return @".Unknown";
  }
  else {
    return *(&off_1012FED68 + a1);
  }
}

UIFont *__cdecl sub_10089A34C(id a1)
{
  uint64_t v1 = +[UIFont system15];
  id v2 = [v1 _mapkit_fontByAddingFeaturesForTimeDisplay];

  return (UIFont *)v2;
}

void sub_10089A6D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10089A700(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (!a4 && WeakRetained)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10089A7C4;
    block[3] = &unk_1012E66E0;
    id v9 = v6;
    uint64_t v10 = *(void *)(a1 + 32);
    id v12 = v9;
    uint64_t v13 = v10;
    double v14 = v8;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_10089A7C4(uint64_t a1)
{
  id v2 = [objc_alloc((Class)UIImage) initWithData:*(void *)(a1 + 32)];
  if (v2)
  {
    id v7 = v2;
    uint64_t v3 = [*(id *)(a1 + 40) iconProcessingHandler];

    if (v3)
    {
      id v4 = [*(id *)(a1 + 40) iconProcessingHandler];
      uint64_t v5 = ((void (**)(void, id))v4)[2](v4, v7);

      id v6 = (id)v5;
    }
    else
    {
      id v6 = v7;
    }
  }
  else
  {
    id v6 = 0;
  }
  id v8 = v6;
  [*(id *)(a1 + 48) setArtwork:v6];
}

void sub_10089D418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10089D4C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10089D99C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10089DE98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v3 = *(void **)(v2 + 208);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10089DF14;
  v5[3] = &unk_1012EB010;
  v5[4] = v2;
  return [v3 applyToCollection:v1 completion:v5];
}

void sub_10089DF14(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    id v4 = +[NSBundle mainBundle];
    uint64_t v5 = [v4 localizedStringForKey:@"[Collection] Error" value:@"localized string not found" table:0];
    id v6 = [v3 localizedDescription];

    id v10 = +[UIAlertController alertControllerWithTitle:v5 message:v6 preferredStyle:1];

    id v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"[Collection] Ok" value:@"localized string not found" table:0];
    id v9 = +[UIAlertAction actionWithTitle:v8 style:0 handler:&stru_1012FEDA0];

    [v10 addAction:v9];
    [*(id *)(a1 + 32) presentViewController:v10 animated:1 completion:0];
  }
}

uint64_t sub_10089E07C(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setName:a2];
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_10089E150(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_10160FCE0;
  qword_10160FCE0 = v1;
}

id sub_10089E2A0()
{
  if (qword_10160FD08 != -1) {
    dispatch_once(&qword_10160FD08, &stru_1012FEE00);
  }
  v0 = (void *)qword_10160FD00;

  return v0;
}

void sub_10089F080(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_10160FCF8;
  qword_10160FCF8 = (uint64_t)v1;

  [(id)qword_10160FCF8 setDateFormat:@"yyyy-MM-dd HH:mm:ss.SSSSSSZZZ"];
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_10160FCF8 setLocale:v3];
}

void sub_10089F400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10089F424(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateDebugText];

  id v3 = objc_loadWeakRetained(v1);
  [v3 startDebugInfoRefreshTimer];
}

void sub_10089F5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10089F5D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained composeTTR];
}

void sub_10089F91C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateTintAndIconLabel];

  id v3 = objc_loadWeakRetained(v1);
  [v3 updateDebugText];
}

void sub_10089FA18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ThermalStateFloatingDebugViewController");
  uint64_t v2 = (void *)qword_10160FD00;
  qword_10160FD00 = (uint64_t)v1;
}

void sub_1008A021C(id a1)
{
  id v1 = [objc_alloc((Class)ASCLockupViewGroup) initWithName:@"RoutingApps"];
  uint64_t v2 = (void *)qword_10160FD10;
  qword_10160FD10 = (uint64_t)v1;
}

void sub_1008A09C0(uint64_t a1, void *a2)
{
  id v11 = a2;
  id v3 = *(void **)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) appProxy];
  uint64_t v5 = [v4 bundleIdentifier];
  LODWORD(v3) = [v3 isEqualToString:v5];

  if (v3)
  {
    id v6 = *(void **)(a1 + 40);
    id v7 = [v6 appProxy];
    uint64_t v8 = [v6 _lockupWithAppProxy:v7 appIcon:v11];
    uint64_t v9 = *(void *)(a1 + 40);
    id v10 = *(void **)(v9 + 16);
    *(void *)(v9 + 16) = v8;

    [*(id *)(*(void *)(a1 + 40) + 64) setLockup:*(void *)(*(void *)(a1 + 40) + 16)];
  }
}

void sub_1008A0D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008A0D50(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained delegate];
  id v3 = objc_loadWeakRetained(v1);
  [v2 routingAppSelectionCellRoutePressed:v3];
}

void sub_1008A142C(id a1)
{
  v69[0] = @"MKDirectionsTransportTypeCar";
  v68 = +[NSBundle mainBundle];
  v67 = [v68 localizedStringForKey:@"RoutingMode.Car" value:@"localized string not found" table:0];
  v70[0] = v67;
  v69[1] = @"MKDirectionsTransportTypeBus";
  v66 = +[NSBundle mainBundle];
  v65 = [v66 localizedStringForKey:@"RoutingMode.Bus" value:@"localized string not found" table:0];
  v70[1] = v65;
  v69[2] = @"MKDirectionsTransportTypeTrain";
  v64 = +[NSBundle mainBundle];
  v63 = [v64 localizedStringForKey:@"RoutingMode.Train" value:@"localized string not found" table:0];
  v70[2] = v63;
  v69[3] = @"MKDirectionsTransportTypeSubway";
  v62 = +[NSBundle mainBundle];
  v61 = [v62 localizedStringForKey:@"RoutingMode.Subway" value:@"localized string not found" table:0];
  v70[3] = v61;
  v69[4] = @"MKDirectionsTransportTypeStreetCar";
  v60 = +[NSBundle mainBundle];
  v59 = [v60 localizedStringForKey:@"RoutingMode.StreetCar" value:@"localized string not found" table:0];
  v70[4] = v59;
  v69[5] = @"MKDirectionsTransportTypePlane";
  v58 = +[NSBundle mainBundle];
  v57 = [v58 localizedStringForKey:@"RoutingMode.Plane" value:@"localized string not found" table:0];
  v70[5] = v57;
  v69[6] = @"MKDirectionsTransportTypeBike";
  v56 = +[NSBundle mainBundle];
  v55 = [v56 localizedStringForKey:@"RoutingMode.Bike" value:@"localized string not found" table:0];
  v70[6] = v55;
  v69[7] = @"MKDirectionsTransportTypeFerry";
  v54 = +[NSBundle mainBundle];
  v53 = [v54 localizedStringForKey:@"RoutingMode.Ferry" value:@"localized string not found" table:0];
  v70[7] = v53;
  v69[8] = @"MKDirectionsTransportTypeTaxi";
  v52 = +[NSBundle mainBundle];
  v51 = [v52 localizedStringForKey:@"RoutingMode.Taxi" value:@"localized string not found" table:0];
  v70[8] = v51;
  v69[9] = @"MKDirectionsTransportTypePedestrian";
  v50 = +[NSBundle mainBundle];
  v49 = [v50 localizedStringForKey:@"RoutingMode.Pedestrian" value:@"localized string not found" table:0];
  v70[9] = v49;
  v69[10] = @"MKDirectionsTransportTypeOther";
  v48 = +[NSBundle mainBundle];
  v47 = [v48 localizedStringForKey:@"RoutingMode.Other" value:@"localized string not found" table:0];
  v70[10] = v47;
  v69[11] = @"MKDirectionsModeCar";
  v46 = +[NSBundle mainBundle];
  v45 = [v46 localizedStringForKey:@"RoutingMode.Car" value:@"localized string not found" table:0];
  v70[11] = v45;
  v69[12] = @"MKDirectionsModeBus";
  v44 = +[NSBundle mainBundle];
  v43 = [v44 localizedStringForKey:@"RoutingMode.Bus" value:@"localized string not found" table:0];
  v70[12] = v43;
  v69[13] = @"MKDirectionsModeTrain";
  v42 = +[NSBundle mainBundle];
  v41 = [v42 localizedStringForKey:@"RoutingMode.Train" value:@"localized string not found" table:0];
  v70[13] = v41;
  v69[14] = @"MKDirectionsModeSubway";
  v40 = +[NSBundle mainBundle];
  v39 = [v40 localizedStringForKey:@"RoutingMode.Subway" value:@"localized string not found" table:0];
  v70[14] = v39;
  v69[15] = @"MKDirectionsModeStreetCar";
  v38 = +[NSBundle mainBundle];
  v37 = [v38 localizedStringForKey:@"RoutingMode.StreetCar" value:@"localized string not found" table:0];
  v70[15] = v37;
  v69[16] = @"MKDirectionsModePlane";
  v36 = +[NSBundle mainBundle];
  v35 = [v36 localizedStringForKey:@"RoutingMode.Plane" value:@"localized string not found" table:0];
  v70[16] = v35;
  v69[17] = @"MKDirectionsModeBike";
  v34 = +[NSBundle mainBundle];
  v33 = [v34 localizedStringForKey:@"RoutingMode.Bike" value:@"localized string not found" table:0];
  v70[17] = v33;
  v69[18] = @"MKDirectionsModeFerry";
  v32 = +[NSBundle mainBundle];
  v31 = [v32 localizedStringForKey:@"RoutingMode.Ferry" value:@"localized string not found" table:0];
  v70[18] = v31;
  v69[19] = @"MKDirectionsModeTaxi";
  v30 = +[NSBundle mainBundle];
  v29 = [v30 localizedStringForKey:@"RoutingMode.Taxi" value:@"localized string not found" table:0];
  v70[19] = v29;
  v69[20] = @"MKDirectionsModePedestrian";
  v28 = +[NSBundle mainBundle];
  id v27 = [v28 localizedStringForKey:@"RoutingMode.Pedestrian" value:@"localized string not found" table:0];
  v70[20] = v27;
  v69[21] = @"MKDirectionsModeOther";
  v26 = +[NSBundle mainBundle];
  char v25 = [v26 localizedStringForKey:@"RoutingMode.Other" value:@"localized string not found" table:0];
  v70[21] = v25;
  v69[22] = @"car";
  uint64_t v24 = +[NSBundle mainBundle];
  id v23 = [v24 localizedStringForKey:@"RoutingMode.Car" value:@"localized string not found" table:0];
  v70[22] = v23;
  v69[23] = @"bus";
  uint64_t v22 = +[NSBundle mainBundle];
  uint64_t v21 = [v22 localizedStringForKey:@"RoutingMode.Bus" value:@"localized string not found" table:0];
  v70[23] = v21;
  v69[24] = @"train";
  uint64_t v20 = +[NSBundle mainBundle];
  uint64_t v19 = [v20 localizedStringForKey:@"RoutingMode.Train" value:@"localized string not found" table:0];
  v70[24] = v19;
  v69[25] = @"subway";
  id v18 = +[NSBundle mainBundle];
  __int16 v17 = [v18 localizedStringForKey:@"RoutingMode.Subway" value:@"localized string not found" table:0];
  v70[25] = v17;
  v69[26] = @"streetCar";
  id v16 = +[NSBundle mainBundle];
  __int16 v15 = [v16 localizedStringForKey:@"RoutingMode.StreetCar" value:@"localized string not found" table:0];
  v70[26] = v15;
  v69[27] = @"plane";
  double v14 = +[NSBundle mainBundle];
  uint64_t v13 = [v14 localizedStringForKey:@"RoutingMode.Plane" value:@"localized string not found" table:0];
  v70[27] = v13;
  v69[28] = @"bike";
  id v1 = +[NSBundle mainBundle];
  uint64_t v2 = [v1 localizedStringForKey:@"RoutingMode.Bike" value:@"localized string not found" table:0];
  v70[28] = v2;
  v69[29] = @"ferry";
  id v3 = +[NSBundle mainBundle];
  id v4 = [v3 localizedStringForKey:@"RoutingMode.Ferry" value:@"localized string not found" table:0];
  v70[29] = v4;
  v69[30] = @"taxi";
  uint64_t v5 = +[NSBundle mainBundle];
  id v6 = [v5 localizedStringForKey:@"RoutingMode.Taxi" value:@"localized string not found" table:0];
  v70[30] = v6;
  v69[31] = @"pedestrian";
  id v7 = +[NSBundle mainBundle];
  uint64_t v8 = [v7 localizedStringForKey:@"RoutingMode.Pedestrian" value:@"localized string not found" table:0];
  v70[31] = v8;
  v69[32] = @"other";
  uint64_t v9 = +[NSBundle mainBundle];
  id v10 = [v9 localizedStringForKey:@"RoutingMode.Other" value:@"localized string not found" table:0];
  v70[32] = v10;
  uint64_t v11 = +[NSDictionary dictionaryWithObjects:v70 forKeys:v69 count:33];
  id v12 = (void *)qword_10160FD28;
  qword_10160FD28 = v11;
}

uint64_t sub_1008A2334(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = [*(id *)(a1 + 32) containsObject:v5];
  if (v7 == [*(id *)(a1 + 32) containsObject:v6])
  {
    uint64_t v9 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 40) indexOfObject:v5]);
    id v10 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 40) indexOfObject:v6]);
    uint64_t v8 = (uint64_t)[v9 compare:v10];
  }
  else if (v7)
  {
    uint64_t v8 = -1;
  }
  else
  {
    uint64_t v8 = 1;
  }

  return v8;
}

double sub_1008A289C(id a1, OverlayContainerViewController *a2, double a3)
{
  return 0.0;
}

unint64_t sub_1008A28A4(id a1, OverlayContainerViewController *a2)
{
  return 0;
}

double sub_1008A28AC(id a1, OverlayContainerViewController *a2, double a3)
{
  return 1.0;
}

unint64_t sub_1008A28B4(id a1, OverlayContainerViewController *a2)
{
  return 0;
}

unint64_t sub_1008A28BC(id a1, OverlayContainerViewController *a2)
{
  if ((id)[(ContainerViewController *)a2 containerStyle] == (id)5) {
    return 1;
  }
  else {
    return 2;
  }
}

double sub_1008A28E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 viewIfLoaded];
  UIRoundToViewScale();
  double v6 = v5;

  unsigned int v7 = [v3 currentViewController];
  unint64_t v8 = (unint64_t)[v3 containerStyle];
  if (v8 >= 8 || (double v9 = 0.0, ((0xD9u >> v8) & 1) == 0))
  {
    id v10 = [v7 cardPresentationController];
    unsigned int v11 = [v10 presentedModally];

    if (v11)
    {
      [v7 heightForLayout:5];
      id v12 = [v3 viewIfLoaded];
      UIRoundToViewScale();
      double v14 = v13;

      double v9 = 1.0;
      if ((unint64_t)[v3 layoutModalPresenter] <= 2) {
        double v9 = fmin(fmax((v6 - v14 * 0.5) / (v14 * 0.5), 0.0), 1.0);
      }
    }
    else
    {
      uint64_t v15 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
      if (qword_10160FD38 != -1) {
        dispatch_once(&qword_10160FD38, &stru_1012FF090);
      }
      id v16 = (void *)qword_10160FD30;
      __int16 v17 = +[NSNumber numberWithUnsignedInteger:v15];
      id v18 = [v16 indexOfObject:v17];

      double v9 = 0.0;
      if (v18 == (unsigned char *)0x7FFFFFFFFFFFFFFFLL || v18 == (char *)[(id)qword_10160FD30 count] - 1)
      {
        uint64_t v19 = 0;
      }
      else
      {
        uint64_t v21 = [(id)qword_10160FD30 objectAtIndexedSubscript:v18 + 1];
        uint64_t v19 = v21;
        if (v21)
        {
          [v7 heightForLayout:[v21 unsignedIntegerValue]];
          uint64_t v22 = [v3 viewIfLoaded];
          UIRoundToViewScale();
          double v24 = v23;

          unint64_t v25 = (unint64_t)[v3 containerStyle];
          if (v25 <= 7 && ((1 << v25) & 0xE3) != 0)
          {
            [v7 heightForLayout:v15];
            v26 = [v3 viewIfLoaded];
            UIRoundToViewScale();
            double v28 = v27;

            if (vabdd_f64(v24, v28) > 2.22044605e-16) {
              double v9 = fmin(fmax((v6 - v28) / (v24 - v28), 0.0), 1.0);
            }
          }
          else
          {
            double v9 = sub_1008A2B9C(v3, v24);
          }
        }
      }
    }
  }

  return v9;
}

double sub_1008A2B9C(void *a1, CGFloat a2)
{
  id v2 = a1;
  id v3 = [v2 topContentView];
  [v3 frame];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  id v12 = [v2 containerView];
  [v12 frame];
  CGFloat v36 = v14;
  CGFloat v37 = v13;
  CGFloat v34 = v16;
  CGFloat v35 = v15;

  __int16 v17 = [v2 containerView];
  [v17 frame];
  CGFloat v19 = v18;
  double v21 = v20;
  CGFloat v23 = v22;
  double v25 = v24;

  v42.size.double height = a2;
  v42.origin.y = v21 - (a2 - v25);
  v39.origin.x = v5;
  v39.origin.y = v7;
  v39.size.width = v9;
  v39.size.double height = v11;
  v42.origin.x = v19;
  v42.size.width = v23;
  CGRect v40 = CGRectIntersection(v39, v42);
  double height = v40.size.height;
  v40.origin.x = v5;
  v40.origin.y = v7;
  v40.size.width = v9;
  v40.size.double height = v11;
  v43.origin.y = v36;
  v43.origin.x = v37;
  v43.size.double height = v34;
  v43.size.width = v35;
  CGRect v41 = CGRectIntersection(v40, v43);
  double v27 = 0.0;
  if (v41.size.height > 0.0 && height > 0.0)
  {
    double v28 = [v2 viewIfLoaded:v41.origin.x, v41.origin.y, v41.size.width];
    UIRoundToViewScale();
    double v30 = v29;
    v31 = [v2 viewIfLoaded];
    UIRoundToViewScale();
    double v27 = v30 / v32;
  }
  return v27;
}

DimmingBehaviour *sub_1008A2D08()
{
  v0 = [[DimmingBehaviour alloc] initWithDimming:&stru_1012FF050 threshold:&stru_1012FF070];

  return v0;
}

double sub_1008A2D4C(id a1, OverlayContainerViewController *a2, double a3)
{
  id v3 = a2;
  unint64_t v4 = [(ContainerViewController *)v3 containerStyle];
  if (v4 >= 8 || (double v5 = 0.0, ((0xD9u >> v4) & 1) == 0))
  {
    double v5 = 0.0;
    if ((id)[(ContainerViewController *)v3 containeeLayout] == (id)5)
    {
      unint64_t v6 = [(ContainerViewController *)v3 containerStyle];
      if (v6 >= 8 || ((0xE3u >> v6) & 1) == 0)
      {
        CGFloat v7 = [(ContainerViewController *)v3 currentViewController];
        [v7 heightForLayout:5];
        CGFloat v9 = v8;

        double v5 = sub_1008A2B9C(v3, v9);
      }
    }
  }

  return v5;
}

unint64_t sub_1008A2DFC(id a1, OverlayContainerViewController *a2)
{
  return 0;
}

void sub_1008A2E04(id a1)
{
  id v1 = (void *)qword_10160FD30;
  qword_10160FD30 = (uint64_t)&off_1013AE130;
}

uint64_t sub_1008A655C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a2 == 0);
  }
  return result;
}

id sub_1008A66BC(int a1)
{
  id v2 = objc_opt_new();
  id v3 = v2;
  if (a1)
  {
    [v2 addObject:@"gasoline"];
    if ((a1 & 0x100) == 0)
    {
LABEL_3:
      if ((a1 & 0x10000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a1 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  [v3 addObject:@"diesel"];
  if ((a1 & 0x10000) == 0)
  {
LABEL_4:
    if ((a1 & 0x1000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  [v3 addObject:@"electric"];
  if ((a1 & 0x1000000) != 0) {
LABEL_5:
  }
    [v3 addObject:@"cng"];
LABEL_6:

  return v3;
}

id sub_1008A6760(int a1)
{
  id v1 = sub_1008A66BC(a1);
  id v2 = [v1 componentsJoinedByString:@", "];

  return v2;
}

id sub_1008A67B8(void *a1)
{
  uint64_t v1 = qword_10160FD70;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&qword_10160FD70, &stru_1012FF0D8);
  }
  id v3 = [(id)qword_10160FD68 objectForKeyedSubscript:v2];

  id v4 = [v3 longLongValue];
  return v4;
}

void sub_1008A6834(id a1)
{
  v3[0] = @"gasoline";
  v3[1] = @"diesel";
  v4[0] = &off_1013A90B8;
  v4[1] = &off_1013A90D0;
  v3[2] = @"electric";
  v3[3] = @"cng";
  v4[2] = &off_1013A90E8;
  v4[3] = &off_1013A9100;
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
  id v2 = (void *)qword_10160FD68;
  qword_10160FD68 = v1;
}

id sub_1008A68F8()
{
  v0 = +[NSBundle mainBundle];
  uint64_t v1 = [v0 localizedStringForKey:@"CarPlay_External_Maps" value:@"localized string not found" table:0];

  return v1;
}

void sub_1008A6A68(id a1)
{
  v7[0] = &off_1013A90B8;
  v7[1] = &off_1013A90D0;
  v8[0] = EAVehicleInfoRangeGasolineKey;
  v8[1] = EAVehicleInfoRangeDieselKey;
  v7[2] = &off_1013A90E8;
  v7[3] = &off_1013A9100;
  v8[2] = EAVehicleInfoRangeElectricKey;
  v8[3] = EAVehicleInfoRangeCNGKey;
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:4];
  id v2 = (void *)qword_10160FD78;
  qword_10160FD78 = v1;

  v5[0] = &off_1013A90B8;
  v5[1] = &off_1013A90D0;
  v6[0] = EAVehicleInfoHasLowDistanceRangeGasolineKey;
  v6[1] = EAVehicleInfoHasLowDistanceRangeDieselKey;
  v5[2] = &off_1013A90E8;
  v5[3] = &off_1013A9100;
  v6[2] = EAVehicleInfoHasLowDistanceRangeElectricKey;
  v6[3] = EAVehicleInfoHasLowDistanceRangeCNGKey;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:4];
  id v4 = (void *)qword_10160FD80;
  qword_10160FD80 = v3;
}

void sub_1008A726C(id a1)
{
  uint64_t v1 = (void *)qword_10160FD88;
  qword_10160FD88 = (uint64_t)&off_1013AE148;
}

uint64_t sub_1008A763C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  GEOConfigGetPropertiesForKey();

  return 1;
}

void sub_1008A76D8(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = [*(id *)(a1 + 32) objectForKeyedSubscript:];

  if (!v3 && _GEOConfigHasValue())
  {
    id v4 = +[NSNumber numberWithInteger:GEOConfigGetInteger()];
    [*(id *)(a1 + 32) setObject:v4 forKeyedSubscript:v5];
  }
}

id sub_1008A78B4()
{
  if (qword_10160FDD0 != -1) {
    dispatch_once(&qword_10160FDD0, &stru_1012FF1E8);
  }
  v0 = (void *)qword_10160FDC8;

  return v0;
}

void sub_1008A8078(id a1)
{
  uint64_t v1 = objc_alloc_init(MapsExternalAccessory);
  id v2 = (void *)qword_10160FD98;
  qword_10160FD98 = (uint64_t)v1;
}

void sub_1008A85D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *a13, id *a14, id *a15, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a15);
  objc_destroyWeak(a14);
  objc_destroyWeak(a13);
  objc_destroyWeak((id *)(v16 - 128));
  _Unwind_Resume(a1);
}

void sub_1008A8660(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _accessoryDidConnect:v3];
}

void sub_1008A86BC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _accessoryDidUpdateVehicle:v3];
}

void sub_1008A8718(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _accessoryDidUpdate:v3];
}

void sub_1008A8774(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _accessoryDidDisconnect:v3];
}

void sub_1008A8B70(id a1)
{
  uint64_t v1 = objc_opt_new();
  double v13 = sub_1008A66BC(16843009);
  v25[0] = @"com.apple.maps.FakeExternalAccessory.engine.type";
  v25[1] = @"com.apple.maps.FakeExternalAccessory.engine.low";
  v25[2] = @"com.apple.maps.FakeExternalAccessory.engine.full";
  +[NSArray arrayWithObjects:v25 count:3];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v14 = [obj countByEnumeratingWithState:&v19 objects:v24 count:16];
  if (v14)
  {
    uint64_t v12 = *(void *)v20;
    do
    {
      id v2 = 0;
      do
      {
        if (*(void *)v20 != v12) {
          objc_enumerationMutation(obj);
        }
        uint64_t v3 = *(void *)(*((void *)&v19 + 1) + 8 * (void)v2);
        long long v15 = 0u;
        long long v16 = 0u;
        long long v17 = 0u;
        long long v18 = 0u;
        id v4 = v13;
        id v5 = [v4 countByEnumeratingWithState:&v15 objects:v23 count:16];
        if (v5)
        {
          id v6 = v5;
          uint64_t v7 = *(void *)v16;
          do
          {
            double v8 = 0;
            do
            {
              if (*(void *)v16 != v7) {
                objc_enumerationMutation(v4);
              }
              CGFloat v9 = +[NSString stringWithFormat:@"%@.%@", v3, *(void *)(*((void *)&v15 + 1) + 8 * (void)v8)];
              [v1 addObject:v9];

              double v8 = (char *)v8 + 1;
            }
            while (v6 != v8);
            id v6 = [v4 countByEnumeratingWithState:&v15 objects:v23 count:16];
          }
          while (v6);
        }

        id v2 = (char *)v2 + 1;
      }
      while (v2 != v14);
      id v14 = [obj countByEnumeratingWithState:&v19 objects:v24 count:16];
    }
    while (v14);
  }

  double v10 = (void *)qword_10160FDA8;
  qword_10160FDA8 = (uint64_t)v1;
}

id sub_1008A8DA4(uint64_t a1, void *a2)
{
  return [a2 _handleFake:];
}

void sub_1008A9190(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_10160FDC0;
  qword_10160FDC0 = v1;
}

void sub_1008A9FA4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarExternalAccessory");
  id v2 = (void *)qword_10160FDC8;
  qword_10160FDC8 = (uint64_t)v1;
}

void sub_1008AA03C(id a1)
{
  os_log_t v1 = objc_alloc_init(UserProfileReportHistoryManager);
  id v2 = (void *)qword_10160FDD8;
  qword_10160FDD8 = (uint64_t)v1;
}

void sub_1008AA658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1008AA684(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[NSArray arrayWithArray:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_1008AA6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[NSArray arrayWithArray:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_1008AA73C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _updateReports:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) incidents:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    id WeakRetained = v3;
  }
}

BOOL sub_1008AAB38(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)a1[4];
  id v5 = [v3 countryCodeUponCreation];
  if ([v4 _shouldShowReportOrIncidentCreatedInCountry:v5])
  {
    id v6 = (void *)a1[4];
    uint64_t v7 = [v3 dateOfReportCreation];
    BOOL v8 = (uint64_t)[v6 _daysBetweenDates:v7 currentDate:a1[5]] < a1[6];
  }
  else
  {
    BOOL v8 = 0;
  }

  return v8;
}

id sub_1008AABD8(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 countryCodeUponCreation];
  id v4 = [v2 _shouldShowReportOrIncidentCreatedInCountry:v3];

  return v4;
}

void sub_1008AB074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008AB098(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v36 = a1;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  BOOL v8 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_26;
  }
  double v32 = WeakRetained;
  id v33 = v6;
  if (v6 || (id v9 = [v5 count], v9 != objc_msgSend(*(id *)(v36 + 32), "count")))
  {
    double v10 = sub_100011FD4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      unsigned int v15 = [v5 count];
      unsigned int v16 = [*(id *)(v36 + 32) count];
      *(_DWORD *)buf = 67109634;
      unsigned int v48 = v15;
      __int16 v49 = 1024;
      unsigned int v50 = v16;
      __int16 v51 = 2112;
      id v52 = v6;
      CGFloat v11 = "Only refined %d map items of %d. Error: %@";
      uint64_t v12 = v10;
      os_log_type_t v13 = OS_LOG_TYPE_ERROR;
      uint32_t v14 = 24;
      goto LABEL_8;
    }
  }
  else
  {
    double v10 = sub_100011FD4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 67109120;
      unsigned int v48 = [v5 count];
      CGFloat v11 = "Refined map items for %d RAPs";
      uint64_t v12 = v10;
      os_log_type_t v13 = OS_LOG_TYPE_INFO;
      uint32_t v14 = 8;
LABEL_8:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v11, buf, v14);
    }
  }

  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v34 = v5;
  id obj = v5;
  id v17 = [obj countByEnumeratingWithState:&v41 objects:v46 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v42;
    do
    {
      for (i = 0; i != v18; i = (char *)i + 1)
      {
        if (*(void *)v42 != v19) {
          objc_enumerationMutation(obj);
        }
        long long v21 = *(void **)(*((void *)&v41 + 1) + 8 * i);
        long long v22 = *(void **)(v36 + 40);
        CGFloat v23 = [v21 _identifier];
        double v24 = [v22 objectForKeyedSubscript:v23];

        long long v39 = 0u;
        long long v40 = 0u;
        long long v37 = 0u;
        long long v38 = 0u;
        id v25 = v24;
        id v26 = [v25 countByEnumeratingWithState:&v37 objects:v45 count:16];
        if (v26)
        {
          id v27 = v26;
          uint64_t v28 = *(void *)v38;
          do
          {
            for (j = 0; j != v27; j = (char *)j + 1)
            {
              if (*(void *)v38 != v28) {
                objc_enumerationMutation(v25);
              }
              double v30 = *(void **)(*((void *)&v37 + 1) + 8 * (void)j);
              v31 = [v30 mapItem];

              if (!v31) {
                [v30 setMapItem:v21];
              }
            }
            id v27 = [v25 countByEnumeratingWithState:&v37 objects:v45 count:16];
          }
          while (v27);
        }
      }
      id v18 = [obj countByEnumeratingWithState:&v41 objects:v46 count:16];
    }
    while (v18);
  }

  BOOL v8 = v32;
  [v32[1] reportHistoryManagerDidUpdate:v32];
  id v6 = v33;
  id v5 = v34;
LABEL_26:
}

void sub_1008AB9B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008AB9F0(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    if (a2) {
      [WeakRetained _deleteCollection];
    }
    [v4 _finish];
    id WeakRetained = v4;
  }
}

void sub_1008ABD14(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_1000B944C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error saving changes in editor popover: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1008ABDD4(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_1000B944C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting collection: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1008ACE58(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v82 = 0u;
  long long v83 = 0u;
  long long v84 = 0u;
  long long v85 = 0u;
  id v81 = [v3 countByEnumeratingWithState:&v82 objects:v86 count:16];
  if (v81)
  {
    uint64_t v4 = *(void *)v83;
    id v76 = v3;
    uint64_t v77 = *(void *)v83;
    uint64_t v78 = a1;
    do
    {
      for (i = 0; i != v81; i = (char *)i + 1)
      {
        if (*(void *)v83 != v4) {
          objc_enumerationMutation(v3);
        }
        id v6 = *(void **)(a1 + 32);
        id v7 = *(id *)(*((void *)&v82 + 1) + 8 * i);
        id v8 = v6;
        id v9 = v7;
        id v10 = v8;
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            goto LABEL_61;
          }
          id v79 = v7;
          id v11 = v7;
          uint64_t v12 = [v10 firstObject];
          v80 = [v10 lastObject];
          os_log_type_t v13 = [v11 endWaypoint];
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint32_t v14 = [v10 lastObject];
            objc_opt_class();
            char isKindOfClass = objc_opt_isKindOfClass();

            if (isKindOfClass)
            {
              id v16 = v11;
              id v17 = v10;
              id v18 = [v16 endWaypoint];
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) == 0)
              {
                unsigned __int8 v32 = 0;
                goto LABEL_56;
              }
              v75 = v16;
              [v17 lastObject];
              v20 = uint64_t v19 = v17;
              objc_opt_class();
              char v21 = objc_opt_isKindOfClass();

              if (v21)
              {
                id v18 = [v19 firstObject];
                long long v22 = [v75 startWaypoint];
                id v17 = v19;
                v73 = v22;
                if ([v18 isCurrentLocation]
                  && [v22 isCurrentLocation])
                {
                  CGFloat v23 = [v75 endWaypoint];
                  id v71 = v19;
                  uint64_t v24 = [v19 lastObject];
                  v74 = v23;
                  id v25 = [v23 route];
                  uint64_t v26 = [v25 anchorPoints];

                  v72 = (void *)v24;
                  id v27 = (void *)v24;
                  uint64_t v28 = (void *)v26;
                  double v29 = [v27 route];
                  uint64_t v30 = [v29 anchorPoints];

                  v31 = (void *)v30;
                  v70 = v28;
                  unsigned __int8 v32 = [v28 isEqual:v30];
                  goto LABEL_51;
                }
                uint64_t v61 = [v18 geoMapItem];
                uint64_t v62 = [v22 geoMapItem];
                v63 = (void *)v62;
                unsigned __int8 v32 = 0;
                v74 = (void *)v61;
                if (v61)
                {
                  id v16 = v75;
                  if (v62)
                  {
                    v72 = (void *)v62;
                    if (GEOMapItemIsEqualToMapItemForPurpose())
                    {
                      v64 = [v75 endWaypoint];
                      id v71 = v17;
                      v68 = [v17 lastObject];
                      v70 = v64;
                      v65 = [v64 route];
                      v69 = [v65 anchorPoints];

                      v66 = [v68 route];
                      v67 = [v66 anchorPoints];

                      v31 = v68;
                      unsigned __int8 v32 = [v69 isEqual:v67];

LABEL_51:
                      id v17 = v71;
                      id v16 = v75;
                    }
                    else
                    {
                      unsigned __int8 v32 = 0;
                    }
                    v63 = v72;
                  }
                }
                else
                {
                  id v16 = v75;
                }

LABEL_56:
              }
              else
              {
                unsigned __int8 v32 = 0;
                id v17 = v19;
                id v16 = v75;
              }

              int v60 = 1;
LABEL_58:
              id v9 = v79;

              uint64_t v4 = v77;
              a1 = v78;
              if (v60)
              {

                if ((v32 & 1) == 0) {
                  continue;
                }
                goto LABEL_60;
              }
LABEL_61:

              continue;
            }
          }
          else
          {
          }
          v45 = [v11 startWaypoint];
          v46 = [v45 geoMapItem];
          unsigned __int8 v47 = [v46 isValid];

          if ((v47 & 1) == 0)
          {

            v45 = 0;
          }
          unsigned int v48 = [v11 endWaypoint];
          __int16 v49 = [v48 geoMapItem];
          unsigned __int8 v50 = [v49 isValid];

          if ((v50 & 1) == 0)
          {

            unsigned int v48 = 0;
          }
          __int16 v51 = v80;
          if (v12)
          {
            unsigned int v52 = [v12 isCurrentLocation];
            if (v45) {
              goto LABEL_29;
            }
LABEL_32:
            unsigned int v53 = 1;
          }
          else
          {
            unsigned int v52 = 1;
            if (!v45) {
              goto LABEL_32;
            }
LABEL_29:
            unsigned int v53 = [v45 isCurrentLocation];
          }
          if (v52 & v53)
          {
            int IsEqualToMapItemForPurpose = 1;
          }
          else
          {
            int IsEqualToMapItemForPurpose = 0;
            if (v12 && v45)
            {
              v55 = [v12 geoMapItem];
              v56 = [v45 geoMapItem];
              int IsEqualToMapItemForPurpose = GEOMapItemIsEqualToMapItemForPurpose();

              __int16 v51 = v80;
            }
          }
          if ([v51 isCurrentLocation]
            && ([v51 isCurrentLocation] & 1) != 0)
          {
            int v57 = 1;
          }
          else
          {
            v58 = [v51 geoMapItem];
            v59 = [v48 geoMapItem];
            int v57 = GEOMapItemIsEqualToMapItemForPurpose();

            id v3 = v76;
          }
          int v60 = IsEqualToMapItemForPurpose & v57;

          unsigned __int8 v32 = 1;
          goto LABEL_58;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          goto LABEL_61;
        }
        id v33 = v7;
        id v34 = v7;
        CGFloat v35 = [v34 waypoints];
        id v36 = [v35 count];
        id v37 = [v10 count];

        if (v36 != v37)
        {

          continue;
        }
        if (![v10 count])
        {
LABEL_21:

          id v3 = v76;
          uint64_t v4 = v77;
          a1 = v78;
          id v9 = v33;
LABEL_60:
          [*(id *)(a1 + 40) addObject:v9];
          continue;
        }
        uint64_t v38 = 0;
        while (1)
        {
          long long v39 = [v10 objectAtIndexedSubscript:v38];
          long long v40 = [v34 waypoints];
          long long v41 = [v40 objectAtIndexedSubscript:v38];

          long long v42 = [v39 geoMapItem];
          long long v43 = [v41 geoMapItem];
          char v44 = GEOMapItemIsEqualToMapItemForPurpose();

          if ((v44 & 1) == 0) {
            break;
          }
          if (++v38 >= (unint64_t)[v10 count]) {
            goto LABEL_21;
          }
        }

        id v3 = v76;
        uint64_t v4 = v77;
        a1 = v78;
      }
      id v81 = [v3 countByEnumeratingWithState:&v82 objects:v86 count:16];
    }
    while (v81);
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1008AD748(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 firstObject];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_1008AD8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1008AD90C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1008AE0C4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1008AE0F0(uint64_t a1, void *a2)
{
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  id obj = a2;
  id v3 = [obj countByEnumeratingWithState:&v61 objects:v74 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v62;
    *(void *)&long long v4 = 138412802;
    long long v54 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v62 != v6) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v61 + 1) + 8 * i);
        unsigned __int8 v9 = [v8 isEqual:*(void *)(a1 + 32) v54];
        id v10 = sub_10000AF10();
        BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_INFO);
        if (v9)
        {
          if (v11)
          {
            uint64_t v12 = *(void **)(a1 + 32);
            *(_DWORD *)buf = 138412546;
            v69 = v8;
            __int16 v70 = 2112;
            id v71 = v12;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Not deleting a duplicate item: %@ matching directionItem:%@", buf, 0x16u);
          }
        }
        else
        {
          if (v11)
          {
            os_log_type_t v13 = [*(id *)(a1 + 40) uniqueRouteID];
            uint32_t v14 = [*(id *)(a1 + 40) name];
            *(_DWORD *)buf = v54;
            v69 = v13;
            __int16 v70 = 2112;
            id v71 = v14;
            __int16 v72 = 2112;
            v73 = v8;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Found a duplicate matching routeID (%@ : %@); Deleting item: %@",
              buf,
              0x20u);
          }
          if ([*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) isEqual:v8])
          {
            uint64_t v15 = *(void *)(*(void *)(a1 + 88) + 8);
            id v16 = *(void **)(v15 + 40);
            *(void *)(v15 + 40) = 0;

            id v17 = sub_10000AF10();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "Already deleting the oldDirectionItem so we don't need to clean it up later", buf, 2u);
            }
          }
          id v18 = +[MapsSyncStore sharedStore];
          v67 = v8;
          uint64_t v19 = +[NSArray arrayWithObjects:&v67 count:1];
          v60[0] = _NSConcreteStackBlock;
          v60[1] = 3221225472;
          v60[2] = sub_1008AEA04;
          v60[3] = &unk_1012EB010;
          v60[4] = v8;
          [v18 deleteWithObjects:v19 completionHandler:v60];
        }
      }
      id v5 = [obj countByEnumeratingWithState:&v61 objects:v74 count:16];
    }
    while (v5);
  }
  long long v20 = sub_10000AF10();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    char v21 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v69 = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Adding editBlock for directionItem: %@", buf, 0xCu);
  }

  if (objc_opt_respondsToSelector())
  {
    id v22 = objc_alloc_init((Class)GEOStorageRouteRequestStorage);
    CGFloat v23 = *(void **)(a1 + 48);
    v58[0] = _NSConcreteStackBlock;
    v58[1] = 3221225472;
    v58[2] = sub_1008AEAB0;
    v58[3] = &unk_1012FF310;
    id v24 = v22;
    id v59 = v24;
    [v23 enumerateObjectsUsingBlock:v58];
    [v24 setTransportType:[*(id *)(a1 + 40) transportType]];
    id v25 = [objc_alloc((Class)GEOURLRouteHandle) initWithRoute:*(void *)(a1 + 40)];
    [v24 setRouteHandle:v25];

    uint64_t v26 = [v24 waypoints];
    id v27 = [v26 lastObject];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v28 = [v27 route];
      double v29 = [v28 persistentData];
      [v24 setDestinationRouteData:v29];
    }
    switch([*(id *)(a1 + 40) transportType])
    {
      case 0u:
        uint64_t v30 = [*(id *)(a1 + 40) routeAttributes];
        v31 = [v30 automobileOptions];
        [v24 setAutomobileOptions:v31];
        goto LABEL_29;
      case 1u:
        uint64_t v30 = [*(id *)(a1 + 40) routeAttributes];
        v31 = [v30 transitOptions];
        [v24 setTransitOptions:v31];
        goto LABEL_29;
      case 2u:
        uint64_t v30 = [*(id *)(a1 + 40) routeAttributes];
        v31 = [v30 walkingOptions];
        [v24 setWalkingOptions:v31];
        goto LABEL_29;
      case 3u:
        uint64_t v30 = [*(id *)(a1 + 40) routeAttributes];
        v31 = [v30 cyclingOptions];
        [v24 setCyclingOptions:v31];
LABEL_29:

        break;
      default:
        break;
    }
    [*(id *)(a1 + 32) setRouteRequestStorage:v24];
  }
  if (*(unsigned char *)(a1 + 96))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      unsigned __int8 v32 = *(void **)(a1 + 56);
      id v33 = *(id *)(a1 + 32);
      [v32 batteryPercentageAfterCharging];
      [v33 setRequiredCharge:v34 / 100.0];
      [v33 setVehicleIdentifier:*(void *)(a1 + 64)];
    }
  }
  if (*(unsigned char *)(a1 + 97))
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v35 = *(id *)(a1 + 32);
      id v36 = [v35 routeRequestStorage];
      id v37 = [v36 waypointsCount];

      if (v37) {
        [v35 setRouteProgressWaypointIndex:1];
      }
      uint64_t v38 = [*(id *)(a1 + 40) legs];
      long long v39 = [v38 firstObject];
      long long v40 = [v39 destination];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (*(unsigned char *)(a1 + 98) && (isKindOfClass & 1) != 0)
      {
        [*(id *)(a1 + 56) batteryPercentageAfterCharging];
        long long v43 = +[NSNumber numberWithDouble:v42 / 100.0];
        [v35 setRequiredCharge:v43];

        [v35 setVehicleIdentifier:*(void *)(a1 + 64)];
      }
      [v35 setType:[*(id *)(a1 + 40) isEVRoute]];
    }
  }
  uint64_t v44 = *(void *)(a1 + 72);
  if (v44) {
    (*(void (**)(uint64_t, void))(v44 + 16))(v44, *(void *)(a1 + 32));
  }
  v45 = sub_10000AF10();
  if (os_log_type_enabled(v45, OS_LOG_TYPE_INFO))
  {
    v46 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v69 = v46;
    _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_INFO, "Commiting editBlock for directionItem: %@", buf, 0xCu);
  }

  unsigned __int8 v47 = +[MapsSyncStore sharedStore];
  uint64_t v66 = *(void *)(a1 + 32);
  unsigned int v48 = +[NSArray arrayWithObjects:&v66 count:1];
  v56[0] = _NSConcreteStackBlock;
  v56[1] = 3221225472;
  v56[2] = sub_1008AEC7C;
  v56[3] = &unk_1012E76C0;
  id v57 = *(id *)(a1 + 80);
  [v47 saveWithObjects:v48 completionHandler:v56];

  __int16 v49 = sub_10000AF10();
  if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
  {
    unsigned __int8 v50 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
    *(_DWORD *)buf = 138412290;
    v69 = v50;
    _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_INFO, "Deleting oldDirectionItem: %@", buf, 0xCu);
  }

  __int16 v51 = +[MapsSyncStore sharedStore];
  unsigned int v52 = v51;
  if (*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40))
  {
    uint64_t v65 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
    unsigned int v53 = +[NSArray arrayWithObjects:&v65 count:1];
    [v52 deleteWithObjects:v53 completionHandler:&stru_1012FF330];
  }
  else
  {
    [v51 deleteWithObjects:&__NSArray0__struct completionHandler:&stru_1012FF330];
  }
}

void sub_1008AEA04(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = sub_10000AF10();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting item: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_1008AEAB0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = v5;
  if (a3 && [v5 isCurrentLocation])
  {
    id v7 = sub_10000AF10();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      int v14 = 134217984;
      uint64_t v15 = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "- Converting dynamic current location waypoint %lu into static location", (uint8_t *)&v14, 0xCu);
    }

    uint64_t v8 = [v6 convertToStaticLocation];

    uint64_t v6 = (void *)v8;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    goto LABEL_12;
  }
  unsigned __int8 v9 = [v6 mapItemStorage];
  if (v9)
  {

    goto LABEL_10;
  }
  if ([v6 isCurrentLocation])
  {
LABEL_10:
    id v10 = [v6 findMyHandleID];

    if (v10)
    {
      id v11 = [v6 copy];

      [v11 clearFindMyData];
      uint64_t v6 = v11;
    }
LABEL_12:
    [*(id *)(a1 + 32) addWaypoints:v6];
    goto LABEL_13;
  }
  uint64_t v12 = sub_10000AF10();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    os_log_type_t v13 = [v6 shortDescription];
    int v14 = 138412290;
    uint64_t v15 = v13;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Trying to save waypoint without a mapItem in a HistoryEntry: %@", (uint8_t *)&v14, 0xCu);
  }
LABEL_13:
}

void sub_1008AEC7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = sub_10000AF10();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Failed saveRoute: could not commit edits to new direction item: %@", (uint8_t *)&v6, 0xCu);
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);
  }
}

void sub_1008AED50(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = sub_10000AF10();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      uint64_t v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed saveRoute: could not delete old direction item: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1008AF318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1008AF344(uint64_t a1, void *a2)
{
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id obj = a2;
  id v3 = [obj countByEnumeratingWithState:&v37 objects:v48 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v38;
    *(void *)&long long v4 = 138412290;
    long long v34 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v38 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void **)(*((void *)&v37 + 1) + 8 * i);
        unsigned __int8 v9 = [v8 isEqual:*(void *)(a1 + 32)];
        id v10 = sub_10000AF10();
        BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_INFO);
        if (v9)
        {
          if (v11)
          {
            uint64_t v12 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 138412546;
            uint64_t v44 = v8;
            __int16 v45 = 2112;
            uint64_t v46 = v12;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Not deleting a duplicate item: %@ matching directionItem:%@", buf, 0x16u);
          }
        }
        else
        {
          if (v11)
          {
            *(_DWORD *)buf = v34;
            uint64_t v44 = v8;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Found a duplicate item: %@", buf, 0xCu);
          }

          if ([*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) isEqual:v8])
          {
            uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
            int v14 = *(void **)(v13 + 40);
            *(void *)(v13 + 40) = 0;

            uint64_t v15 = sub_10000AF10();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Already deleting the oldDirectionItem so we don't need to clean it up later", buf, 2u);
            }
          }
          id v10 = +[MapsSyncStore sharedStore];
          unsigned __int8 v47 = v8;
          id v16 = +[NSArray arrayWithObjects:&v47 count:1];
          v36[0] = _NSConcreteStackBlock;
          v36[1] = 3221225472;
          v36[2] = sub_1008AF98C;
          v36[3] = &unk_1012EB010;
          v36[4] = v8;
          [v10 deleteWithObjects:v16 completionHandler:v36];
        }
      }
      id v5 = [obj countByEnumeratingWithState:&v37 objects:v48 count:16];
    }
    while (v5);
  }
  id v17 = sub_10000AF10();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    id v18 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v44 = v18;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "Adding editBlock for directionItem: %@", buf, 0xCu);
  }

  if (objc_opt_respondsToSelector())
  {
    uint64_t v19 = objc_opt_new();
    [v19 addWaypoints:*(void *)(a1 + 40)];
    [v19 addWaypoints:*(void *)(a1 + 48)];
    [v19 setTransportType:[*(id *)(a1 + 56) transportType]];
    id v20 = [objc_alloc((Class)GEOURLRouteHandle) initWithRoute:*(void *)(a1 + 56)];
    [v19 setRouteHandle:v20];

    char v21 = [*(id *)(a1 + 48) route];
    id v22 = [v21 persistentData];
    [v19 setDestinationRouteData:v22];

    switch([*(id *)(a1 + 56) transportType])
    {
      case 0u:
        CGFloat v23 = [*(id *)(a1 + 56) routeAttributes];
        id v24 = [v23 automobileOptions];
        [v19 setAutomobileOptions:v24];
        goto LABEL_26;
      case 1u:
        CGFloat v23 = [*(id *)(a1 + 56) routeAttributes];
        id v24 = [v23 transitOptions];
        [v19 setTransitOptions:v24];
        goto LABEL_26;
      case 2u:
        CGFloat v23 = [*(id *)(a1 + 56) routeAttributes];
        id v24 = [v23 walkingOptions];
        [v19 setWalkingOptions:v24];
        goto LABEL_26;
      case 3u:
        CGFloat v23 = [*(id *)(a1 + 56) routeAttributes];
        id v24 = [v23 cyclingOptions];
        [v19 setCyclingOptions:v24];
LABEL_26:

        break;
      default:
        break;
    }
    [*(id *)(a1 + 32) setRouteRequestStorage:v19];
  }
  id v25 = sub_10000AF10();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
  {
    uint64_t v26 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v44 = v26;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Commiting editBlock for directionItem: %@", buf, 0xCu);
  }

  id v27 = +[MapsSyncStore sharedStore];
  uint64_t v42 = *(void *)(a1 + 32);
  uint64_t v28 = +[NSArray arrayWithObjects:&v42 count:1];
  [v27 saveWithObjects:v28 completionHandler:&stru_1012FF378];

  double v29 = sub_10000AF10();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
  {
    uint64_t v30 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    *(_DWORD *)buf = 138412290;
    uint64_t v44 = v30;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "Deleting oldDirectionItem: %@", buf, 0xCu);
  }

  v31 = +[MapsSyncStore sharedStore];
  unsigned __int8 v32 = v31;
  if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
  {
    uint64_t v41 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    id v33 = +[NSArray arrayWithObjects:&v41 count:1];
    [v32 deleteWithObjects:v33 completionHandler:&stru_1012FF398];
  }
  else
  {
    [v31 deleteWithObjects:&__NSArray0__struct completionHandler:&stru_1012FF398];
  }
}

void sub_1008AF98C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = sub_10000AF10();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting item: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_1008AFA38(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = sub_10000AF10();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      int v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed saveRoute: could not commit edits to new direction item: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1008AFAE8(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = sub_10000AF10();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      int v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed saveRoute: could not delete old direction item: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1008AFC4C(uint64_t a1, void *a2)
{
  id v2 = a2;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v3 = [v2 countByEnumeratingWithState:&v25 objects:v36 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v26;
    id v7 = GEOResultRefinementSort_ptr;
    uint64_t v8 = (mach_header_64 *)&_mh_execute_header;
    unsigned __int8 v9 = "Setting item to not be interrupted: %@";
    *(void *)&long long v4 = 138412802;
    long long v22 = v4;
    uint64_t v23 = *(void *)v26;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v26 != v6) {
          objc_enumerationMutation(v2);
        }
        BOOL v11 = *(void **)(*((void *)&v25 + 1) + 8 * (void)v10);
        objc_opt_class();
        if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
        {
          [v11 setNavigationInterrupted:0 v22];
          uint64_t v12 = sub_10000AF10();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            v31 = v11;
            _os_log_impl(v8, v12, OS_LOG_TYPE_INFO, v9, buf, 0xCu);
          }

          uint64_t v13 = +[MapsSyncStore sharedStore];
          double v29 = v11;
          int v14 = +[NSArray arrayWithObjects:&v29 count:1];
          [v13 saveWithObjects:v14 completionHandler:&stru_1012FF3E0];
        }
        else
        {
          uint64_t v13 = sub_10000AF10();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            [*(id *)(a1 + 32) name];
            uint64_t v15 = v7;
            id v16 = v2;
            id v17 = v9;
            v19 = id v18 = v8;
            id v20 = [*(id *)(a1 + 32) uniqueRouteID];
            *(_DWORD *)buf = v22;
            v31 = v11;
            __int16 v32 = 2112;
            id v33 = v19;
            __int16 v34 = 2112;
            id v35 = v20;
            _os_log_impl(v18, v13, OS_LOG_TYPE_ERROR, "Unhandled history item: %@ for route: %@ (%@)", buf, 0x20u);

            uint64_t v8 = v18;
            unsigned __int8 v9 = v17;
            id v2 = v16;
            id v7 = v15;
            uint64_t v6 = v23;
          }
        }

        id v10 = (char *)v10 + 1;
      }
      while (v5 != v10);
      id v21 = [v2 countByEnumeratingWithState:&v25 objects:v36 count:16];
      id v5 = v21;
    }
    while (v21);
  }
}

void sub_1008AFEF8(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_10000AF10();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Will not mark route as complete because of error: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1008B0048(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[MapsSyncStore sharedStore];
  [v4 deleteWithObjects:v3 error:0];

  id v5 = objc_alloc_init((Class)MSHistoryDirectionsItem);
  id v6 = objc_alloc_init((Class)GEOStorageRouteRequestStorage);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v7 = *(id *)(a1 + 32);
  id v8 = [v7 countByEnumeratingWithState:&v14 objects:v19 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      BOOL v11 = 0;
      do
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        [v6 addWaypoints:*(void *)(*((void *)&v14 + 1) + 8 * (void)v11) v14];
        BOOL v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v14 objects:v19 count:16];
    }
    while (v9);
  }

  [v6 setTransportType:*(unsigned int *)(a1 + 40)];
  [v5 setRouteRequestStorage:v6];
  uint64_t v12 = +[MapsSyncStore sharedStore];
  id v18 = v5;
  uint64_t v13 = +[NSArray arrayWithObjects:&v18 count:1];
  [v12 saveWithObjects:v13 error:0];
}

void sub_1008B02F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[MapsSyncStore sharedStore];
  [v4 deleteWithObjects:v3 error:0];

  id v5 = objc_alloc_init((Class)MSHistoryPlaceItem);
  id v6 = [*(id *)(a1 + 32) _geoMapItem];
  id v7 = +[GEOMapItemStorage mapItemStorageForGEOMapItem:v6];
  [v5 setMapItemStorage:v7];

  [v5 setSupersededSearchId:*(void *)(a1 + 40)];
  id v8 = +[MapsSyncStore sharedStore];
  id v10 = v5;
  id v9 = +[NSArray arrayWithObjects:&v10 count:1];
  [v8 saveWithObjects:v9 error:0];
}

void sub_1008B0500(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v20 objects:v26 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v21;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v21 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v20 + 1) + 8 * (void)v7);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v9 = v8;
          id v10 = [v9 muid];
          if (v10 == [*(id *)(a1 + 32) muid])
          {
            BOOL v11 = +[MapsSyncStore sharedStore];
            id v25 = v9;
            uint64_t v12 = +[NSArray arrayWithObjects:&v25 count:1];
            [v11 deleteWithObjects:v12 error:0];
          }
        }
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v20 objects:v26 count:16];
    }
    while (v5);
  }
  id v13 = objc_alloc_init((Class)MSHistoryTransitItem);
  id v14 = [objc_alloc((Class)MSPTransitStorageLineItem) initWithLineItem:*(void *)(a1 + 32)];
  long long v15 = [v14 data];
  [v13 setTransitLineStorage:v15];

  [v13 setMuid:[*(id *)(a1 + 32) muid]];
  long long v16 = +[MapsSyncStore sharedStore];
  id v24 = v13;
  long long v17 = +[NSArray arrayWithObjects:&v24 count:1];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_1008B0780;
  v18[3] = &unk_1012E76C0;
  id v19 = *(id *)(a1 + 40);
  [v16 saveWithObjects:v17 completionHandler:v18];
}

void sub_1008B0780(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1008B082C;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1008B082C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1008B091C(uint64_t a1, void *a2)
{
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id obj = a2;
  id v2 = [obj countByEnumeratingWithState:&v39 objects:v45 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v40;
    do
    {
      id v5 = 0;
      id v34 = v3;
      do
      {
        if (*(void *)v40 != v4) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v39 + 1) + 8 * (void)v5);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v7 = v6;
          id v8 = [*(id *)(a1 + 32) query];
          id v9 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
          uint64_t v10 = [v8 stringByTrimmingCharactersInSet:v9];
          BOOL v11 = (void *)v10;
          if (v10) {
            uint64_t v12 = (__CFString *)v10;
          }
          else {
            uint64_t v12 = &stru_101324E70;
          }
          id v13 = v12;

          id v14 = [v7 query];
          long long v15 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
          uint64_t v16 = [v14 stringByTrimmingCharactersInSet:v15];
          long long v17 = (void *)v16;
          if (v16) {
            id v18 = (__CFString *)v16;
          }
          else {
            id v18 = &stru_101324E70;
          }
          id v19 = v18;

          id v20 = [(__CFString *)v13 localizedCaseInsensitiveCompare:v19];
          if (!v20)
          {
            long long v21 = +[MapsSyncStore sharedStore];
            id v44 = v7;
            long long v22 = +[NSArray arrayWithObjects:&v44 count:1];
            [v21 deleteWithObjects:v22 error:0];
          }
          id v3 = v34;
        }
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [obj countByEnumeratingWithState:&v39 objects:v45 count:16];
    }
    while (v3);
  }
  id v23 = objc_alloc_init((Class)MSHistorySearchItem);
  id v24 = [*(id *)(a1 + 32) query];
  [v23 setQuery:v24];

  id v25 = [*(id *)(a1 + 32) mapRegion];
  long long v26 = [v25 data];
  [v23 setGeoMapRegion:v26];

  long long v27 = [*(id *)(a1 + 32) languageCode];
  [v23 setLanguage:v27];

  long long v28 = [*(id *)(a1 + 32) locationDisplayString];
  [v23 setLocationDisplay:v28];

  double v29 = +[MapsSyncStore sharedStore];
  id v43 = v23;
  uint64_t v30 = +[NSArray arrayWithObjects:&v43 count:1];
  v36[0] = _NSConcreteStackBlock;
  v36[1] = 3221225472;
  v36[2] = sub_1008B0CB8;
  v36[3] = &unk_1012F1570;
  id v31 = *(id *)(a1 + 40);
  id v37 = v23;
  id v38 = v31;
  id v32 = v23;
  [v29 saveWithObjects:v30 completionHandler:v36];
}

void sub_1008B0CB8(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008B0D7C;
  block[3] = &unk_1012EF330;
  id v8 = *(id *)(a1 + 40);
  id v6 = v3;
  id v7 = *(id *)(a1 + 32);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1008B0D7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  if (v1)
  {
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = [*(id *)(a1 + 40) storageIdentifier];
    (*(void (**)(uint64_t, uint64_t, id))(v1 + 16))(v1, v2, v3);
  }
}

void sub_1008B0EC4(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008B0F88;
  block[3] = &unk_1012E80F0;
  id v5 = a2;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1008B0F88(id *a1)
{
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v2 = a1[4];
  id v3 = [v2 countByEnumeratingWithState:&v21 objects:v27 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v22;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v22 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v21 + 1) + 8 * (void)v6);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v8 = v7;
          id v9 = [v8 curatedCollectionIdentifier];
          uint64_t v10 = [a1[5] collectionIdentifier];
          id v11 = [v10 muid];

          if (v9 == v11)
          {
            uint64_t v12 = +[MapsSyncStore sharedStore];
            id v26 = v8;
            id v13 = +[NSArray arrayWithObjects:&v26 count:1];
            [v12 deleteWithObjects:v13 error:0];
          }
        }
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v21 objects:v27 count:16];
    }
    while (v4);
  }

  id v14 = objc_alloc_init((Class)MSHistoryCuratedCollection);
  long long v15 = [a1[5] collectionIdentifier];
  [v14 setCuratedCollectionIdentifier:[v15 muid]];

  uint64_t v16 = [a1[5] collectionIdentifier];
  [v14 setResultProviderIdentifier:[v16 resultProviderID]];

  long long v17 = +[MapsSyncStore sharedStore];
  id v25 = v14;
  id v18 = +[NSArray arrayWithObjects:&v25 count:1];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1008B1220;
  v19[3] = &unk_1012E76C0;
  id v20 = a1[6];
  [v17 saveWithObjects:v18 completionHandler:v19];
}

void sub_1008B1220(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1008B12CC;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1008B12CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1008B14AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1008B1558;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1008B1558(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_1008B172C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1008B1978(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1008B1990(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1008B1CA4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1008B1CBC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1008B2138(id *a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1008B2210;
  v4[3] = &unk_1012ED778;
  id v5 = a2;
  id v6 = a1[4];
  id v7 = a1[5];
  id v8 = a1[6];
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

uint64_t sub_1008B2210(uint64_t a1)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v16 + 1) + 8 * (void)v6);
        id v8 = *(id *)(a1 + 40);
        id v9 = v7;
        uint64_t v10 = [v9 mapItemStorage:v16];
        id v11 = v10;
        if (v8) {
          BOOL v12 = v10 == 0;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
        }
        else
        {
          id v13 = [v9 mapItemStorage];
          int IsEqualToMapItemForPurpose = GEOMapItemIsEqualToMapItemForPurpose();

          if (IsEqualToMapItemForPurpose) {
            [*(id *)(a1 + 48) addObject:v9];
          }
        }
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v4);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_1008B2430(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MapsSyncStore sharedStore];
  [v4 deleteWithObjects:v3 error:0];

  id v5 = objc_alloc_init((Class)MSHistoryPlaceItem);
  id v6 = +[GEOMapItemStorage mapItemStorageForGEOMapItem:*(void *)(a1 + 32)];
  [v5 setMapItemStorage:v6];

  id v7 = +[MapsSyncStore sharedStore];
  id v9 = v5;
  id v8 = +[NSArray arrayWithObjects:&v9 count:1];
  [v7 saveWithObjects:v8 error:0];
}

void sub_1008B2804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1008B34DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

id sub_1008B3EAC(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    CFStringRef v4 = @" & ";
  }
  else {
    CFStringRef v4 = &stru_101324E70;
  }
  id result = [v3 appendFormat:@"%@%@", v4, a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  return result;
}

void sub_1008B5D0C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_10160FDE8;
  qword_10160FDE8 = (uint64_t)v1;
}

void sub_1008B5DF8(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_1012FF470];
  id v2 = (void *)qword_10160FDF8;
  qword_10160FDF8 = v1;
}

void sub_1008B6B34(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008B6C0C;
  block[3] = &unk_1012EAFE8;
  id v11 = v5;
  id v7 = *(id *)(a1 + 32);
  id v12 = v6;
  id v13 = v7;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1008B6C0C(void *a1)
{
  uint64_t v2 = a1[4];
  id v3 = sub_100011FD4();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v4)
    {
      LOWORD(v7) = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Successfully fetched profile picture from the ProfilePictureStore", (uint8_t *)&v7, 2u);
    }
  }
  else if (v4)
  {
    uint64_t v5 = a1[5];
    int v7 = 138412290;
    uint64_t v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "When fetching profile picture from the ProfilePictureStore, no icon was returned - %@", (uint8_t *)&v7, 0xCu);
  }

  return (*(uint64_t (**)(void))(a1[6] + 16))();
}

void sub_1008B6E14(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (!a3)
  {
    id v11 = v5;
    id v7 = [v5 count];
    id v6 = v11;
    if (v7)
    {
      uint64_t v8 = [v11 firstObject];
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = [v8 _addressFormattedAsCity];
      (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

      id v6 = v11;
    }
  }
}

void sub_1008B6FD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008B6FF4(uint64_t a1, char a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008B70A0;
  block[3] = &unk_1012E9838;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  void block[4] = *(void *)(a1 + 32);
  char v6 = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v5);
}

void sub_1008B70A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = *(unsigned char **)(a1 + 32);
    if (!v3[16] && (*(unsigned char *)(a1 + 48) || ([v3 loggedIn] & 1) == 0))
    {
      BOOL v4 = sub_100011FD4();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "retrieveUserProfilePicture has not been called yet, calling it now.", buf, 2u);
      }

      [WeakRetained _retrieveUserProfilePicture];
      *(unsigned char *)(*(void *)(a1 + 32) + 16) = 1;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (*(void *)(v5 + 8))
    {
      char v6 = sub_100011FD4();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Invalidate current throttle timer", v14, 2u);
      }

      [*(id *)(*(void *)(a1 + 32) + 8) invalidate];
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void **)(v7 + 8);
      *(void *)(v7 + 8) = 0;

      uint64_t v5 = *(void *)(a1 + 32);
    }
    uint64_t v9 = +[NSTimer scheduledTimerWithTimeInterval:v5 target:"_throttledProfilePictureTimerUpdate:" selector:0 userInfo:0 repeats:10.0];
    uint64_t v10 = *(void *)(a1 + 32);
    id v11 = *(void **)(v10 + 8);
    *(void *)(v10 + 8) = v9;

    id v12 = sub_100011FD4();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Create a new timer to throttle the next call to retrieve profile picture by 10 seconds. Retrieving the picture again will only be retried when the 10 second interval has passed without receiving any new notifications that the profile picture has changed.", v13, 2u);
    }
  }
}

void sub_1008B7510(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1008B7548(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      uint64_t v9 = sub_1000519B4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "VehicleListVC - failed to get virtual garage with error: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      [WeakRetained _consumeUpdatedVirtualGarage:v5];
    }
  }
}

void sub_1008B763C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      uint64_t v9 = sub_1000519B4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "VehicleListVC - failed to get unpairedVehicles with error: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      [WeakRetained _consumeUpdatedUnpairedVehicles:v5];
    }
  }
}

void sub_1008B84C8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) savedVehicles];
  uint64_t v3 = [*(id *)(a1 + 40) vehicles];
  id v4 = v2;
  id v5 = v3;
  id v6 = [v4 count];
  if (v6 != [v5 count])
  {

    id v12 = [*(id *)(a1 + 40) vehicles];
    [*(id *)(a1 + 32) setSavedVehicles:v12];

LABEL_6:
    [*(id *)(*(void *)(a1 + 32) + 128) reloadData];
    return;
  }
  unint64_t v7 = (unint64_t)v4;
  unint64_t v8 = (unint64_t)v5;
  if (!(v7 | v8)
    || (uint64_t v9 = (void *)v8,
        unsigned __int8 v10 = [(id)v7 isEqual:v8],
        v9,
        (id)v7,
        (v10 & 1) != 0))
  {

    id v11 = [*(id *)(a1 + 40) vehicles];
    [*(id *)(a1 + 32) setSavedVehicles:v11];

    return;
  }
  id v13 = sub_1008B9B64((void *)v7);
  id v14 = sub_1008B9B64(v9);
  long long v15 = [(id)v7 sortedArrayUsingComparator:&stru_1012FF570];
  [v9 sortedArrayUsingComparator:&stru_1012FF570];
  uint64_t v23 = 0;
  long long v24 = &v23;
  uint64_t v25 = 0x2020000000;
  char v26 = 0;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1008BA1AC;
  v19[3] = &unk_1012FF5D8;
  id v16 = (id)objc_claimAutoreleasedReturnValue();
  id v20 = v16;
  long long v21 = &stru_1012FF5B0;
  long long v22 = &v23;
  [v15 enumerateObjectsUsingBlock:v19];
  int v17 = *((unsigned __int8 *)v24 + 24);

  _Block_object_dispose(&v23, 8);
  long long v18 = [*(id *)(a1 + 40) vehicles];
  [*(id *)(a1 + 32) setSavedVehicles:v18];

  if (v17) {
    goto LABEL_6;
  }
}

void sub_1008B8738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1008B87E8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) unpairedVehicles];
  uint64_t v3 = *(void **)(a1 + 40);
  id v4 = v2;
  id v5 = v3;
  id v6 = [v4 count];
  if (v6 == [v5 count])
  {
    unint64_t v7 = (unint64_t)v4;
    unint64_t v8 = (unint64_t)v5;
    if (!(v7 | v8)
      || (unsigned __int8 v9 = [(id)v7 isEqual:v8],
          (id)v8,
          (id)v7,
          (v9 & 1) != 0))
    {

      unsigned __int8 v10 = *(void **)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      return [v10 setUnpairedVehicles:v11];
    }
    id v14 = sub_1008B9B64((void *)v7);
    long long v15 = sub_1008B9B64((void *)v8);
    unsigned __int8 v16 = [v14 isEqualToSet:v15];

    id result = [*(id *)(a1 + 32) setUnpairedVehicles:*(void *)(a1 + 40)];
    if (v16) {
      return result;
    }
  }
  else
  {

    [*(id *)(a1 + 32) setUnpairedVehicles:*(void *)(a1 + 40)];
  }
  id v13 = *(void **)(*(void *)(a1 + 32) + 128);

  return [v13 reloadData];
}

void sub_1008B8A70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1008B8A8C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if ([v5 isPureElectricVehicle])
  {
    id v6 = +[VGVirtualGarageService sharedService];
    unint64_t v7 = [v5 identifier];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1008B8B90;
    v8[3] = &unk_1012FF4E0;
    v9[1] = a3;
    objc_copyWeak(v9, (id *)(a1 + 32));
    [v6 virtualGarageGetLatestStateOfVehicleWithIdentifier:v7 syncAcrossDevices:1 withReply:v8];

    objc_destroyWeak(v9);
  }
}

void sub_1008B8B7C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1008B8B90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = v6;
  if (!v5 || v6)
  {
    unsigned __int8 v10 = sub_1000519B4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      id v17 = v5;
      __int16 v18 = 2112;
      long long v19 = v7;
      __int16 v20 = 2048;
      uint64_t v21 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to get latest SoC for vehicle: %@ error: %@ index: %lu", buf, 0x20u);
    }

    id v12 = +[MKMapService sharedService];
    [v12 captureUserAction:6094 onTarget:0 eventValue:0];
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1008B8D2C;
    block[3] = &unk_1012F27A8;
    objc_copyWeak(v15, (id *)(a1 + 32));
    id v8 = v5;
    unsigned __int8 v9 = *(void **)(a1 + 40);
    id v14 = v8;
    v15[1] = v9;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(v15);
  }
}

void sub_1008B8D2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateVehicle:*(void *)(a1 + 32) atIndex:*(void *)(a1 + 48)];
}

id sub_1008B9B64(void *a1)
{
  id v1 = a1;
  +[NSMutableSet set];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1008B9C20;
  v4[3] = &unk_1012FF530;
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = v2;
  [v1 enumerateObjectsUsingBlock:v4];

  return v2;
}

void sub_1008B9C20(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 identifier];
  [v2 addObject:v3];
}

int64_t sub_1008B9C78(id a1, VGVehicle *a2, VGVehicle *a3)
{
  id v4 = a3;
  id v5 = [(VGVehicle *)a2 identifier];
  id v6 = [(VGVehicle *)v4 identifier];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

BOOL sub_1008B9CE8(id a1, VGVehicle *a2, VGVehicle *a3)
{
  id v4 = a2;
  id v5 = a3;
  id v6 = [(VGVehicle *)v4 identifier];
  id v7 = [(VGVehicle *)v5 identifier];
  unint64_t v8 = v6;
  unint64_t v9 = v7;
  if (v8 | v9
    && (unsigned int v10 = [(id)v8 isEqual:v9], (id)v9, (id)v8, !v10))
  {
    unsigned __int8 v55 = 1;
  }
  else
  {
    uint64_t v11 = [(VGVehicle *)v4 iapIdentifier];
    id v12 = [(VGVehicle *)v5 iapIdentifier];
    unint64_t v13 = v11;
    unint64_t v14 = v12;
    if (v13 | v14
      && (unsigned int v15 = [(id)v13 isEqual:v14], (id)v14, (id)v13, !v15))
    {
      unsigned __int8 v55 = 1;
    }
    else
    {
      unsigned __int8 v16 = [(VGVehicle *)v4 siriIntentsIdentifier];
      id v17 = [(VGVehicle *)v5 siriIntentsIdentifier];
      unint64_t v18 = v16;
      unint64_t v19 = v17;
      __int16 v70 = (void *)v18;
      if (v18 | v19
        && (unsigned int v20 = [(id)v18 isEqual:v19],
            (id)v19,
            (id)v18,
            !v20))
      {
        unsigned __int8 v55 = 1;
      }
      else
      {
        uint64_t v21 = [(VGVehicle *)v4 displayName];
        long long v22 = [(VGVehicle *)v5 displayName];
        unint64_t v23 = v21;
        unint64_t v24 = v22;
        uint64_t v25 = (void *)v23;
        v69 = (void *)v24;
        if (v23 | v24
          && (unsigned int v26 = [(id)v23 isEqual:v24], v69, v25, !v26))
        {
          unsigned __int8 v55 = 1;
        }
        else
        {
          v67 = v25;
          long long v27 = [(VGVehicle *)v4 manufacturer];
          long long v28 = [(VGVehicle *)v5 manufacturer];
          unint64_t v29 = v27;
          unint64_t v30 = v28;
          v68 = (void *)v29;
          if (v29 | v30
            && (id v31 = (void *)v29,
                unsigned int v32 = [(id)v29 isEqual:v30],
                (id)v30,
                v31,
                !v32))
          {
            unsigned __int8 v55 = 1;
            uint64_t v25 = v67;
          }
          else
          {
            unint64_t v66 = v30;
            id v33 = [(VGVehicle *)v4 model];
            id v34 = [(VGVehicle *)v5 model];
            unint64_t v35 = v33;
            unint64_t v36 = v34;
            long long v64 = (void *)v36;
            uint64_t v65 = (void *)v35;
            if (v35 | v36
              && (id v37 = (void *)v35,
                  id v38 = (void *)v36,
                  unsigned int v39 = [(id)v35 isEqual:v36],
                  v38,
                  v37,
                  !v39))
            {
              unsigned __int8 v55 = 1;
              uint64_t v25 = v67;
            }
            else
            {
              long long v40 = [(VGVehicle *)v4 colorHex];
              long long v41 = [(VGVehicle *)v5 colorHex];
              unint64_t v42 = v40;
              unint64_t v62 = v41;
              long long v63 = (void *)v42;
              if (v42 | v62
                && (unsigned int v43 = [(id)v42 isEqual:v62],
                    (id)v62,
                    v63,
                    !v43))
              {
                unsigned __int8 v55 = 1;
                uint64_t v25 = v67;
              }
              else
              {
                id v44 = [(VGVehicle *)v4 licensePlate];
                __int16 v45 = [(VGVehicle *)v5 licensePlate];
                unint64_t v46 = v44;
                unint64_t v47 = v45;
                long long v61 = (void *)v47;
                if (v46 | v47
                  && (unsigned int v48 = (void *)v47,
                      unsigned int v49 = [(id)v46 isEqual:v47],
                      v48,
                      (id)v46,
                      !v49))
                {
                  unsigned __int8 v55 = 1;
                  uint64_t v25 = v67;
                }
                else
                {
                  unsigned __int8 v50 = [(VGVehicle *)v4 preferredChargingNetworks];
                  __int16 v51 = [(VGVehicle *)v5 preferredChargingNetworks];
                  unint64_t v52 = v50;
                  unint64_t v59 = v51;
                  int v60 = (void *)v52;
                  if ((!(v52 | v59)
                     || (unsigned int v57 = [(id)v52 isEqual:v59],
                         (id)v59,
                         (id)v52,
                         v57))
                    && (id v53 = [(VGVehicle *)v4 supportedConnectors],
                        v53 == [(VGVehicle *)v5 supportedConnectors]))
                  {
                    v58 = [(VGVehicle *)v4 currentVehicleState];
                    long long v54 = [(VGVehicle *)v5 currentVehicleState];
                    unsigned __int8 v55 = [v58 isSignificantlyDifferentFromVehicleState:v54];
                  }
                  else
                  {
                    unsigned __int8 v55 = 1;
                  }
                  uint64_t v25 = v67;
                }
              }
            }
            unint64_t v30 = v66;
          }
        }
      }
    }
  }

  return v55;
}

void sub_1008BA1AC(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = (void *)a1[4];
  id v8 = a2;
  id v9 = [v7 objectAtIndex:a3];
  LODWORD(a3) = (*(uint64_t (**)(void))(a1[5] + 16))();

  if (a3)
  {
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    *a4 = 1;
  }
}

UIFont *__cdecl sub_1008BA258(id a1)
{
  id v1 = +[MKFontManager sharedManager];
  id v2 = [v1 subtitleFont];
  id v3 = +[UIFont _maps_cappedFont:v2 withMaxPoint:22.0];

  return (UIFont *)v3;
}

UIFont *__cdecl sub_1008BA2D8(id a1)
{
  id v1 = +[MKFontManager sharedManager];
  id v2 = [v1 largeTitleFont];
  id v3 = +[UIFont _maps_cappedFont:v2 withMaxPoint:30.0];

  return (UIFont *)v3;
}

void sub_1008BD314(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) view];
  id v4 = v3;
  if (v2)
  {
    [v3 setAlpha:0.0];

    [*(id *)(a1 + 32) didStartHiding];
    id v6 = [*(id *)(a1 + 32) view];
    [v6 layoutIfNeeded];
  }
  else
  {
    [v3 setAlpha:1.0];

    id v5 = *(void **)(a1 + 32);
    [v5 didStartShowing];
  }
}

void sub_1008BD3D4(uint64_t a1)
{
  [*(id *)(a1 + 32) setOpen:0 animated:0];
  if (qword_10160FE18 && [*(id *)(a1 + 32) isVisible])
  {
    +[NSLayoutConstraint deactivateConstraints:qword_10160FE18];
    unsigned int v2 = [*(id *)(a1 + 32) isOpen];
    id v3 = *(void **)(a1 + 32);
    if (v2) {
      [v3 openConstraints];
    }
    else {
    id v4 = [v3 closedConstraints];
    }
    +[NSLayoutConstraint activateConstraints:v4];
  }
  if (*(unsigned char *)(a1 + 48))
  {
    id v5 = [*(id *)(a1 + 32) view];
    [v5 setAlpha:1.0];

    [*(id *)(a1 + 32) setHidden:1];
  }
  [*(id *)(a1 + 32) setUpdateHiddenAnimationActive:0];
  id v6 = [*(id *)(a1 + 32) updateHiddenAnimationCompletionBlocks];
  id v7 = [v6 count];

  if (v7)
  {
    id v8 = [*(id *)(a1 + 32) updateHiddenAnimationCompletionBlocks];
    id v9 = [v8 copy];

    unsigned int v10 = [*(id *)(a1 + 32) updateHiddenAnimationCompletionBlocks];
    [v10 removeAllObjects];

    unsigned int v15 = _NSConcreteStackBlock;
    uint64_t v16 = 3221225472;
    id v17 = sub_1008BD5C0;
    unint64_t v18 = &unk_1012E5F78;
    id v11 = *(id *)(a1 + 40);
    id v19 = v9;
    id v20 = v11;
    id v12 = v9;
    unint64_t v13 = objc_retainBlock(&v15);
  }
  else
  {
    unint64_t v13 = (void ***)objc_retainBlock(*(id *)(a1 + 40));
  }
  unint64_t v14 = *(void **)(a1 + 32);
  if (*(unsigned char *)(a1 + 48)) {
    [v14 didFinishHiding];
  }
  else {
    [v14 didFinishShowing];
  }
  [*(id *)(a1 + 32) updateHiddenAnimated:1 v13, v15, v16, v17, v18];
}

void sub_1008BD5C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8 * (void)v7) + 16))(*(void *)(*((void *)&v8 + 1) + 8 * (void)v7));
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

id sub_1008BD914(uint64_t a1)
{
  [*(id *)(a1 + 32) didChangeConstraints];
  uint64_t v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];

  [*(id *)(a1 + 32) scrollToDisplayedFloorAnimated:0];
  id v3 = *(void **)(a1 + 32);

  return _[v3 updateCloseButtonVisibility];
}

id sub_1008BD974(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 updateShowSelectionWithForceClipCorners:1];
}

id sub_1008BD9BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateShowSelection];
}

id sub_1008BE298(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateVenueAndBuildingsAnimated:1 forced:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1008BE2AC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) floorCollectionView];
  [v2 reloadData];

  id v3 = *(void **)(a1 + 32);

  return [v3 updateFloorOptimalOpenHeightConstraint];
}

id sub_1008BE2F8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) floorCollectionView];
  [v2 layoutIfNeeded];

  id v3 = *(void **)(a1 + 32);

  return _[v3 updateDisplayedFloorAnimated:0];
}

uint64_t sub_1008BE348(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1008BF7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008BF7F4(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    (*(void (**)(void))(WeakRetained[16] + 16))();
    [WeakRetained dismissModal];
  }
}

id sub_1008BFF4C(id a1, NSNumber *a2)
{
  NSInteger v2 = [(NSNumber *)a2 integerValue];
  if (v2 == 2)
  {
    id v3 = +[WelcomeScreenBullet landmarksIn3D];
  }
  else if (v2 == 1)
  {
    id v3 = +[WelcomeScreenBullet transitCards];
  }
  else if (v2)
  {
    id v3 = 0;
  }
  else
  {
    id v3 = +[WelcomeScreenBullet multiStopRouting];
  }

  return v3;
}

double sub_1008C0030(void *a1)
{
  if (!a1) {
    return MKMapRectNull.origin.x;
  }
  id v1 = a1;
  [v1 startGeoCoordinate];
  CLLocationCoordinate2DFromGEOLocationCoordinate2D();
  MKMapPointForCoordinate(v13);
  [v1 endGeoCoordinate];
  CLLocationCoordinate2DFromGEOLocationCoordinate2D();
  MKMapPointForCoordinate(v14);
  MKMapRectBoundingMapPoints();
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  [v1 startGeoCoordinate];
  [v1 endGeoCoordinate];

  GEOCalculateDistance();
  if (v10 < 150.0)
  {
    v15.x = v3 + v7 * 0.5;
    v15.y = v5 + v9 * 0.5;
    MKCoordinateForMapPoint(v15);
    MKMapRectMakeWithRadialDistance();
    return v11;
  }
  return v3;
}

double sub_1008C018C(void *a1)
{
  id v1 = a1;
  double v2 = [v1 composedRoute];
  double v3 = (char *)[v1 stepIndex];
  double v4 = [v2 steps];
  double v5 = (char *)[v4 count] - 1;

  if (v3 == v5)
  {
    double v6 = 0;
  }
  else
  {
    if ([v1 stepIndex]) {
      [v1 getPreviousStep];
    }
    else {
    double v6 = [v1 getNextStep];
    }
  }
  [v2 pointAt:[v1 endPointIndex]];
  if (v3 != v5 && v6) {
    [v2 pointAt:[v6 endPointIndex]];
  }
  CLLocationCoordinate2DFromGEOLocationCoordinate2D();
  MKMapPoint v7 = MKMapPointForCoordinate(v14);
  CLLocationCoordinate2DFromGEOLocationCoordinate2D();
  MKMapPoint v8 = MKMapPointForCoordinate(v15);
  if (v3 == v5
    || (v7.x == v8.x ? (BOOL v9 = v7.y == v8.y) : (BOOL v9 = 0),
        v9
     || (v16.double x = (v7.x + v8.x) * 0.5,
         v16.y = (v7.y + v8.y) * 0.5,
         MKCoordinateForMapPoint(v16),
         GEOCalculateDistance(),
         v10 > 0.0)))
  {
    MKMapRectMakeWithRadialDistance();
    double x = v11;
  }
  else
  {
    double x = MKMapRectNull.origin.x;
  }

  return x;
}

void sub_1008C037C(void *a1, void *a2)
{
  id v3 = a1;
  double v4 = a2;
  double v5 = v4;
  if (v4)
  {
    if (v3)
    {
      [v3 startGeoCoordinate];
      double v7 = v6;
      double v9 = v8;
      double v10 = [v3 endingStop];
      double v11 = [v3 composedRoute];
      id v12 = [v11 getStationForStop:v10];

      if (v12)
      {
        id v13 = objc_alloc_init((Class)GEOMapFeatureAccess);
        [v13 setAllowNetworkTileLoad:1];
        v30[0] = 0;
        v30[1] = v30;
        v30[2] = 0x3032000000;
        v30[3] = sub_1001040B4;
        v30[4] = sub_1001048D8;
        id v31 = 0;
        CLLocationCoordinate2D v14 = dispatch_group_create();
        dispatch_group_enter(v14);
        id v15 = [v12 muid];
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        v26[2] = sub_1008C0678;
        v26[3] = &unk_1012FF6F8;
        long long v27 = v14;
        id v16 = v13;
        id v28 = v16;
        unint64_t v29 = v30;
        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472;
        v24[2] = sub_1008C07A0;
        v24[3] = &unk_1012EB010;
        id v17 = v27;
        uint64_t v25 = v17;
        id v18 = [v16 findTransitPointWithID:v15 near:v26 pointHandler:v24 completionHandler:v7];
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_1008C07A8;
        v19[3] = &unk_1012FF720;
        uint64_t v21 = v30;
        double v22 = v7;
        double v23 = v9;
        id v20 = v5;
        dispatch_group_notify(v17, (dispatch_queue_t)&_dispatch_main_q, v19);

        _Block_object_dispose(v30, 8);
      }
      else
      {
        v5[2](v5, MKMapRectNull.origin.x, MKMapRectNull.origin.y, MKMapRectNull.size.width, MKMapRectNull.size.height);
      }
    }
    else
    {
      v4[2](v4, MKMapRectNull.origin.x, MKMapRectNull.origin.y, MKMapRectNull.size.width, MKMapRectNull.size.height);
    }
  }
}

void sub_1008C0660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1008C0678(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1008C0748;
  v8[3] = &unk_1012FF6D0;
  double v5 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v9 = v3;
  uint64_t v11 = v4;
  id v10 = *(id *)(a1 + 32);
  id v6 = v3;
  id v7 = [v5 findTransitGeometryForPoint:v6 completionHandler:v8];
}

void sub_1008C0748(uint64_t a1)
{
  [*(id *)(a1 + 32) boundingRect];
  if ((GEOMapRectIsNull() & 1) == 0) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(id *)(a1 + 32));
  }
  double v2 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v2);
}

void sub_1008C07A0(uint64_t a1)
{
}

uint64_t sub_1008C07A8(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  id v6 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v6)
  {
    [v6 boundingRect];
    double x = v7;
    double y = v9;
    double width = v11;
    double height = v13;
    CLLocationCoordinate2DFromGEOLocationCoordinate2D();
    MKMapPoint v15 = MKMapPointForCoordinate(v19);
    v20.origin.double x = x;
    v20.origin.double y = y;
    v20.size.double width = width;
    v20.size.double height = height;
    if (!MKMapRectContainsPoint(v20, v15))
    {
      v22.size.double width = 0.0;
      v22.size.double height = 0.0;
      v21.origin.double x = x;
      v21.origin.double y = y;
      v21.size.double width = width;
      v21.size.double height = height;
      v22.origin.double x = v15.x;
      v22.origin.double y = v15.y;
      *(MKMapRect *)a2.n128_u64 = MKMapRectUnion(v21, v22);
      double x = a2.n128_f64[0];
      double y = a3.n128_f64[0];
      double width = a4.n128_f64[0];
      double height = a5.n128_f64[0];
    }
  }
  else
  {
    double x = MKMapRectNull.origin.x;
    double y = MKMapRectNull.origin.y;
    double width = MKMapRectNull.size.width;
    double height = MKMapRectNull.size.height;
  }
  id v16 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(*(void *)(a1 + 32) + 16);
  a2.n128_f64[0] = x;
  a3.n128_f64[0] = y;
  a4.n128_f64[0] = width;
  a5.n128_f64[0] = height;

  return v16(a2, a3, a4, a5);
}

void sub_1008C08AC(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v4)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1008C096C;
    v5[3] = &unk_1012FF748;
    id v6 = v3;
    id v7 = v4;
    sub_1008C037C(v6, v5);
  }
}

uint64_t sub_1008C096C(uint64_t a1, __n128 a2, double a3)
{
  if (a2.n128_f64[0] == MKMapRectNull.origin.x && a3 == MKMapRectNull.origin.y) {
    a2.n128_f64[0] = sub_1008C0030(*(void **)(a1 + 32));
  }
  double v5 = *(uint64_t (**)(__n128))(*(void *)(a1 + 40) + 16);

  return v5(a2);
}

id sub_1008C2644(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_1008C264C(uint64_t a1)
{
  [*(id *)(a1 + 32) setAnimatingToHideLaneGuidanceView:0];
  double v2 = [*(id *)(a1 + 32) laneGuidanceView];
  [v2 setLanes:0];

  id v3 = [*(id *)(a1 + 32) laneGuidanceView];
  [v3 setHidden:1];
}

id sub_1008C28AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_1008C28B4(uint64_t a1)
{
  [*(id *)(a1 + 32) setActive:0];
  [*(id *)(a1 + 40) setAnimatingToHideManeuverView:0];
  id v2 = [*(id *)(a1 + 40) maneuverView];
  [v2 setHidden:1];
}

id sub_1008C2B64(uint64_t a1)
{
  return [*(id *)(a1 + 32) setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

void sub_1008C2B74(uint64_t a1)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1008C2C70;
  v6[3] = &unk_1012E5D58;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v7 = v2;
  uint64_t v8 = v3;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1008C2CD0;
  v4[3] = &unk_1012E7D28;
  id v5 = *(id *)(a1 + 32);
  +[UIView animateWithDuration:v6 animations:v4 completion:0.300000012];
}

void sub_1008C2C70(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  id v2 = [*(id *)(a1 + 40) laneGuidanceView];
  [v2 setAlpha:1.0];
}

id sub_1008C2CD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_1008C3B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008C3B5C(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v5 = [v4 sender];

  [WeakRetained _accessoryButtonTapped:v5 accessoryModel:*(void *)(a1 + 32)];
}

void sub_1008C3C9C(uint64_t a1, void *a2, uint64_t a3)
{
  if ([a2 visibility] == (id)1)
  {
    if ([*(id *)(a1 + 32) isHovering])
    {
      BOOL v5 = 1;
    }
    else
    {
      id v7 = [*(id *)(a1 + 32) cellModel];
      uint64_t v8 = [v7 actionModel];
      BOOL v5 = v8 != 0;
    }
    unsigned __int8 v6 = [*(id *)(a1 + 32) isHovering];
  }
  else
  {
    unsigned __int8 v6 = 1;
    BOOL v5 = 1;
  }
  if ([*(id *)(a1 + 32) useLightForegroundColors]) {
    sub_100A924F0();
  }
  else {
    sub_100A924E4();
  }
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  if ((v6 & 1) == 0)
  {
    uint64_t v9 = +[UIColor clearColor];

    id v12 = (id)v9;
  }
  id v10 = [*(id *)(*(void *)(a1 + 32) + 56) objectAtIndexedSubscript:a3];
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v11 = v10;
      [v11 setTintColor:v12];
      [*(id *)(a1 + 40) addObject:v11];
    }
    else if (v10)
    {
      [v10 setTintColor:v12];
      [*(id *)(a1 + 40) addObject:v10];
    }
  }
}

void sub_1008C4434(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_1012FF7B0];
  id v2 = (void *)qword_10160FE20;
  qword_10160FE20 = v1;
}

void sub_1008C4494(id a1, TwoLinesOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  uint64_t v8 = a2;
  BOOL v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  if ([v5 conformsToProtocol:&OBJC_PROTOCOL___TwoLinesOutlineCellModel]) {
    unsigned __int8 v6 = v5;
  }
  else {
    unsigned __int8 v6 = 0;
  }
  id v7 = v6;

  [(TwoLinesOutlineCell *)v8 setCellModel:v7];
}

uint64_t sub_1008C4744(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1008C49E0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1008C5188(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setImage:a2];
}

void sub_1008C59A0(uint64_t a1)
{
  NSLog(@"UIBackgroundTask reached timeout");
  id v2 = +[UIApplication sharedApplication];
  [v2 endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];

  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = UIBackgroundTaskInvalid;
}

void sub_1008C5A0C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v2 = +[UIApplication sharedApplication];
  [v2 endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = UIBackgroundTaskInvalid;
}

void sub_1008C5C40(uint64_t a1, void *a2)
{
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1008C5DA8;
  v9[3] = &unk_1012E63F0;
  v9[4] = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = [v3 addButtonRowWithTitle:@"Show Venue Notification" action:v9];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1008C5E4C;
  v8[3] = &unk_1012E63F0;
  void v8[4] = *(void *)(a1 + 32);
  id v5 = [v3 addButtonRowWithTitle:@"Show MapsSuggestions Notification" action:v8];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1008C5EF0;
  v7[3] = &unk_1012E63F0;
  void v7[4] = *(void *)(a1 + 32);
  id v6 = [v3 addButtonRowWithTitle:@"Show Low Fuel Notification" action:v7];
  [v3 setFooter:@"WARNING! These toggles produce notifications without exercising most of the logic involved in populating the content of the real world equivilent."];
}

id sub_1008C5DA8(uint64_t a1)
{
  return +[MapsPushdDebugController performAfterDelay:&stru_1012FF7F8 action:*(double *)(a1 + 32)];
}

void sub_1008C5DC4(id a1)
{
  id v2 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  id v1 = [objc_alloc((Class)NSURL) initWithString:@"https://maps.apple.com/?auid=16375256398390226749&lsp=0"];
  [v2 showVenueBulletinWithTitle:@"Welcome to SJC", @"Explore a detailed airport map to quickly find your gate, baggage claim, shops, and more.", v1 message actionURL];
}

id sub_1008C5E4C(uint64_t a1)
{
  return +[MapsPushdDebugController performAfterDelay:&stru_1012FF818 action:*(double *)(a1 + 32)];
}

void sub_1008C5E68(id a1)
{
  id v2 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  id v1 = [objc_alloc((Class)NSURL) initWithString:@"http://maps.apple.com/?daddr=Space+Needle"];
  [v2 showMapsSuggestionsBulletinWithTitle:@"17 min to Space Needle", @"Take Aurora Ave N, traffic is moderate", v1 message actionURL];
}

id sub_1008C5EF0(uint64_t a1)
{
  return +[MapsPushdDebugController performAfterDelay:&stru_1012FF838 action:*(double *)(a1 + 32)];
}

void sub_1008C5F0C(id a1)
{
  id v2 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  id v1 = [objc_alloc((Class)MSPLowFuelDetails) initWithTitle:@"Low EV Battery" subtitle:@"Find an EV Charger" engineType:&off_1013A91A8];
  [v2 showLowFuelAlertBulletinForLowFuelDetails:v1];
}

void sub_1008C5F94(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Clear Current Announcement" action:&stru_1012FF898];
  id v3 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Reset Announcements" action:&stru_1012FF8B8];
}

void sub_1008C6008(id a1)
{
  id v1 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  [v1 clearCurrentAnnouncement];
}

void sub_1008C6050(id a1)
{
  id v1 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  [v1 resetAnnouncements];
}

void sub_1008C6098(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Clear Airport Arrival Notification History" action:&stru_1012FF8F8];
}

void sub_1008C60CC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDictionary);
  GEOConfigSetDictionary();
}

void sub_1008C6120(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)NSData) initWithContentsOfURL:*(void *)(a1 + 32)];
  if (v4 && (id v5 = [objc_alloc((Class)GEOAvailableAnnouncements) initWithData:v4]) != 0)
  {
    id v6 = v5;
    id v22 = v4;
    id v7 = [v5 languageCode];
    id v8 = [v3 addReadOnlyRowWithTitle:@"Language Code" value:v7];

    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    uint64_t v9 = [v6 announcements];
    id v10 = [v9 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v24;
      do
      {
        for (i = 0; i != v11; i = (char *)i + 1)
        {
          if (*(void *)v24 != v12) {
            objc_enumerationMutation(v9);
          }
          CLLocationCoordinate2D v14 = *(void **)(*((void *)&v23 + 1) + 8 * i);
          MKMapPoint v15 = [v14 title];
          id v16 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@ (%u)", v15, [v14 announcementID]);
          id v17 = [v14 userMessage];
          id v18 = [v3 addReadOnlyRowWithTitle:v16 subtitle:v17];
        }
        id v11 = [v9 countByEnumeratingWithState:&v23 objects:v27 count:16];
      }
      while (v11);
    }

    id v4 = v22;
  }
  else if (*(void *)(a1 + 32))
  {
    id v19 = [v3 addReadOnlyRowWithTitle:@"No announcements found" subtitle:@"Path not set"];
  }
  else
  {
    MKMapRect v20 = [0 path];
    id v21 = [v3 addReadOnlyRowWithTitle:@"No announcements found" subtitle:v20];
  }
}

void sub_1008C6804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008C682C(uint64_t a1, CLLocationDegrees a2, CLLocationDegrees a3)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v9.latitude = a2;
    v9.longitude = a3;
    if (CLLocationCoordinate2DIsValid(v9))
    {
      [WeakRetained[6] selectedCoordinate];
      if (vabdd_f64(a2, v6) >= 0.00000000999999994 || vabdd_f64(a3, v5) >= 0.00000000999999994)
      {
        [WeakRetained[6] setSelectedCoordinate:a2, a3];
        [WeakRetained[8] updateCoordinate:a2, a3];
      }
    }
  }
}

void sub_1008C69C0(id a1)
{
  id v1 = +[NSBundle mainBundle];
  id v2 = [v1 bundleIdentifier];
  unsigned int v3 = [v2 isEqualToString:@"com.apple.NanoMaps"];

  if (v3)
  {
    id v4 = +[NSUserDefaults standardUserDefaults];
  }
  else
  {
    id v4 = [objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.NanoMaps"];
  }
  double v5 = (void *)qword_10160FE30;
  qword_10160FE30 = (uint64_t)v4;
}

void sub_1008C6AB4(id a1)
{
  id v1 = +[NSBundle mainBundle];
  id v2 = [v1 bundleIdentifier];
  unsigned int v3 = [v2 isEqualToString:@"com.apple.Maps"];

  if (v3)
  {
    id v4 = +[NSUserDefaults standardUserDefaults];
  }
  else
  {
    id v4 = [objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.Maps"];
  }
  double v5 = (void *)qword_10160FE40;
  qword_10160FE40 = (uint64_t)v4;
}

void sub_1008C6E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1008C6EA4(uint64_t a1, void *a2)
{
}

void sub_1008C9FB4(uint64_t a1)
{
  [*(id *)(a1 + 32) pauseVIOSession];
  id v2 = [*(id *)(a1 + 32) monitors];
  [v2 removeAllObjects];
}

void sub_1008CA080(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) monitors];
  [v1 removeAllObjects];
}

void sub_1008CA15C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) configuration];
  [v1 createMonitorsForConfiguration:v2];
}

id sub_1008CA224(uint64_t a1)
{
  return _[*(id *)(a1 + 32) handleTransportTypeChanged:*(void *)(a1 + 40)];
}

void sub_1008CAD68(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "PresentFlyoverAction resolveMapItem: %@", (uint8_t *)&v11, 0xCu);
    }

    id v8 = 0;
  }
  else
  {
    CLLocationCoordinate2D v9 = [v5 firstObject];
    id v8 = [[Flyover alloc] initWithAnnouncement:a1[4] mapItem:v9 animationID:a1[6]];
  }
  uint64_t v10 = a1[5];
  if (v10) {
    (*(void (**)(uint64_t, Flyover *))(v10 + 16))(v10, v8);
  }
}

void sub_1008CC380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008CC3A4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained && WeakRetained[6] == *(id *)(a1 + 40)) {
    [WeakRetained[2] setImage:v5];
  }
}

id sub_1008CC98C()
{
  v0 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEBUG))
  {
    id v1 = (objc_class *)objc_opt_class();
    id v2 = NSStringFromClass(v1);
    unsigned int v3 = +[CLLocationManager navdLocationBundleSource];
    int v10 = 138478083;
    int v11 = v2;
    __int16 v12 = 2113;
    double v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "initializing a %{private}@ with bundle source: %{private}@", (uint8_t *)&v10, 0x16u);
  }
  id v4 = objc_alloc((Class)MNHybridLocationProvider);
  id v5 = +[CLLocationManager navdLocationBundleSource];
  id v6 = +[NSBundle bundleWithPath:v5];
  id v7 = [v4 initWithEffectiveBundle:v6];
  id v8 = (void *)qword_10160FE70;
  qword_10160FE70 = (uint64_t)v7;

  return [(id)qword_10160FE70 setMode:1];
}

void sub_1008CCAF4(uint64_t a1)
{
  if (qword_10160FE78 != -1) {
    dispatch_once(&qword_10160FE78, *(dispatch_block_t *)(a1 + 32));
  }
}

id sub_1008CD890(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 32)) {
    [a2 keyColor];
  }
  else {
  id v2 = +[UIColor secondaryLabelColor];
  }

  return v2;
}

id sub_1008CD9D4(uint64_t a1, void *a2, void *a3)
{
  id v21 = a2;
  id v22 = a3;
  id v5 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v20 = WeakRetained;
    id v7 = [WeakRetained delegate];
    char v8 = objc_opt_respondsToSelector();

    if (v8)
    {
      CLLocationCoordinate2D v9 = [v20 delegate];
      int v10 = [v9 ticketingSegmentsForRoutePlanningFooterView:*(void *)(a1 + 32)];

      id v11 = [objc_alloc((Class)NSMutableArray) initWithCapacity:[v10 count]];
      long long v26 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      id obj = v10;
      id v12 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
      if (v12)
      {
        uint64_t v13 = *(void *)v27;
        do
        {
          for (i = 0; i != v12; i = (char *)i + 1)
          {
            if (*(void *)v27 != v13) {
              objc_enumerationMutation(obj);
            }
            MKMapPoint v15 = *(void **)(*((void *)&v26 + 1) + 8 * i);
            id v16 = [v15 segmentName];
            v24[0] = _NSConcreteStackBlock;
            v24[1] = 3221225472;
            v24[2] = sub_1008CDCA8;
            v24[3] = &unk_1012E6368;
            objc_copyWeak(&v25, v5);
            void v24[4] = v15;
            id v17 = +[UIAction actionWithTitle:v16 image:0 identifier:0 handler:v24];
            [v11 addObject:v17];

            objc_destroyWeak(&v25);
          }
          id v12 = [obj countByEnumeratingWithState:&v26 objects:v30 count:16];
        }
        while (v12);
      }

      id v18 = +[UIMenu menuWithTitle:&stru_101324E70 children:v11];
    }
    else
    {
      id v18 = 0;
    }
    id WeakRetained = v20;
  }
  else
  {
    id v18 = 0;
  }

  return v18;
}

void sub_1008CDC8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1008CDCA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _didTapTicketingSegmentInfo:*(void *)(a1 + 32)];
}

void sub_1008CEF2C(id a1)
{
  +[RoutePlanningFooterCollectionViewCell _contentViewClass];
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_10160FE88;
  qword_10160FE88 = v1;
}

uint64_t sub_1008CEFB0(void *a1)
{
  uint64_t v1 = [a1 componentsSeparatedByString:@"_"];
  if ([v1 count])
  {
    id v2 = [v1 objectAtIndexedSubscript:0];
    unsigned int v3 = [v2 componentsSeparatedByString:@"_"];
    if ([v3 count])
    {
      id v4 = sub_100109EF8();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        int v8 = 138412290;
        id v9 = v2;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Value is %@", (uint8_t *)&v8, 0xCu);
      }

      id v5 = [v3 objectAtIndexedSubscript:0];
      if ([v5 isEqualToString:@"RAPIMAGEUPLOAD"])
      {
        uint64_t v6 = 1;
      }
      else if ([v5 isEqualToString:@"RAPCORRECTIONSUPLOAD"])
      {
        uint64_t v6 = 2;
      }
      else
      {
        uint64_t v6 = 0;
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT))
    {
      LOWORD(v8) = 0;
      _os_log_fault_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT, "Assertion failed: components.count > 0", (uint8_t *)&v8, 2u);
    }
    uint64_t v6 = 0;
  }

  return v6;
}

uint64_t sub_1008CF164(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = [a1 componentsSeparatedByString:@"_"];
  if ([v9 count] != (id)5)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT))
    {
LABEL_8:
      uint64_t v12 = 0;
      goto LABEL_4;
    }
    __int16 v18 = 0;
    MKMapPoint v15 = "Assertion failed: components.count == 5";
    id v16 = (uint8_t *)&v18;
LABEL_10:
    _os_log_fault_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT, v15, v16, 2u);
    goto LABEL_8;
  }
  int v10 = [v9 objectAtIndexedSubscript:0];
  unsigned __int8 v11 = [v10 isEqualToString:@"RAPIMAGEUPLOAD"];

  if ((v11 & 1) == 0)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT)) {
      goto LABEL_8;
    }
    __int16 v17 = 0;
    MKMapPoint v15 = "Assertion failed: [components[0] isEqualToString:@\"RAPIMAGEUPLOAD\"]";
    id v16 = (uint8_t *)&v17;
    goto LABEL_10;
  }
  uint64_t v12 = 1;
  *a2 = [v9 objectAtIndexedSubscript:1];
  *a3 = [v9 objectAtIndexedSubscript:2];
  *a4 = [v9 objectAtIndexedSubscript:3];
  uint64_t v13 = [v9 objectAtIndexedSubscript:4];
  *a5 = [v13 integerValue];

LABEL_4:
  return v12;
}

uint64_t sub_1008CF2F4(void *a1, void *a2, void *a3)
{
  id v5 = [a1 componentsSeparatedByString:@"_"];
  if ([v5 count] != (id)3)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT))
    {
LABEL_8:
      uint64_t v8 = 0;
      goto LABEL_4;
    }
    __int16 v14 = 0;
    unsigned __int8 v11 = "Assertion failed: components.count == 3";
    uint64_t v12 = (uint8_t *)&v14;
LABEL_10:
    _os_log_fault_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT, v11, v12, 2u);
    goto LABEL_8;
  }
  uint64_t v6 = [v5 objectAtIndexedSubscript:0];
  unsigned __int8 v7 = [v6 isEqualToString:@"RAPCORRECTIONSUPLOAD"];

  if ((v7 & 1) == 0)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT)) {
      goto LABEL_8;
    }
    __int16 v13 = 0;
    unsigned __int8 v11 = "Assertion failed: [components[0] isEqualToString:@\"RAPCORRECTIONSUPLOAD\"]";
    uint64_t v12 = (uint8_t *)&v13;
    goto LABEL_10;
  }
  uint64_t v8 = 1;
  *a2 = [v5 objectAtIndexedSubscript:1];
  id v9 = [v5 objectAtIndexedSubscript:2];
  *a3 = [v9 integerValue];

LABEL_4:
  return v8;
}

id sub_1008CF444(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  id v8 = a2;
  id v9 = a1;
  int v10 = +[NSString stringWithFormat:@"%i", a4];
  v14[0] = @"RAPIMAGEUPLOAD";
  v14[1] = v9;
  v14[2] = v8;
  v14[3] = v7;
  v14[4] = v10;
  unsigned __int8 v11 = +[NSArray arrayWithObjects:v14 count:5];

  uint64_t v12 = [v11 componentsJoinedByString:@"_"];

  return v12;
}

id sub_1008CF55C(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = +[NSString stringWithFormat:@"%i", a2];
  v8[0] = @"RAPCORRECTIONSUPLOAD";
  v8[1] = v3;
  v8[2] = v4;
  id v5 = +[NSArray arrayWithObjects:v8 count:3];

  uint64_t v6 = [v5 componentsJoinedByString:@"_"];

  return v6;
}

void sub_1008D05CC(id a1)
{
  id v3 = +[NSBundle mainBundle];
  uint64_t v1 = [v3 localizedStringForKey:@" · [No Query State view details separator]" value:@"localized string not found" table:0];
  id v2 = (void *)qword_10160FE90;
  qword_10160FE90 = v1;
}

void sub_1008D0FAC(id a1)
{
  v3[0] = UIContentSizeCategoryAccessibilityLarge;
  v3[1] = UIContentSizeCategoryAccessibilityExtraLarge;
  v3[2] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v3[3] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:4];
  id v2 = (void *)qword_10160FEA0;
  qword_10160FEA0 = v1;
}

void sub_1008D3B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 176));
  _Unwind_Resume(a1);
}

void sub_1008D3B84(uint64_t a1, double a2)
{
  double v3 = *(double *)(a1 + 48) + (*(double *)(a1 + 64) - *(double *)(a1 + 48)) * a2;
  double v4 = *(double *)(a1 + 56) + (*(double *)(a1 + 72) - *(double *)(a1 + 56)) * a2;
  id v5 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained frame];
  double v8 = v7;
  double v10 = v9;

  id v11 = objc_loadWeakRetained(v5);
  [v11 setFrame:v8, v10, v3, v4];

  if (*(unsigned char *)(a1 + 80))
  {
    double y = CGRectZero.origin.y;
    __int16 v13 = *(void **)(a1 + 32);
    [v13 setFrame:CGRectZero.origin.x, y, v3, v4];
  }
}

id sub_1008D3C60(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:];
}

id sub_1008D3C68(uint64_t a1, double a2)
{
  return [*(id *)(a1 + 32) setAlpha:1.0 - a2];
}

void sub_1008D3C78(uint64_t a1, double a2)
{
  [*(id *)(a1 + 32) setAlpha:1.0 - a2];
  [*(id *)(a1 + 40) setAlpha:a2];
  double v4 = *(double *)(a1 + 48) + (*(double *)(a1 + 64) - *(double *)(a1 + 48)) * a2;
  double v5 = *(double *)(a1 + 56) + (*(double *)(a1 + 72) - *(double *)(a1 + 56)) * a2;
  id v7 = [*(id *)(a1 + 40) layer];
  [v7 setPosition:v4, v5];
  uint64_t v6 = [*(id *)(a1 + 32) layer];
  [v6 setPosition:v4, v5];
}

void sub_1008D5F80(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  if (!a5 && a4)
  {
    id v6 = [a2 _applicationIconImageForFormat:2 precomposed:1];
    [*(id *)(*(void *)(a1 + 32) + 56) setImage:v6];
  }
}

void sub_1008D7398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1008D73D4(uint64_t a1, int a2)
{
  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1008D7474;
    block[3] = &unk_1012E63F0;
    void block[4] = *(void *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1008D7474(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:off_1015F31C0 object:*(void *)(a1 + 32)];
}

void sub_1008D74D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8);
  id v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = 0;
}

void sub_1008D74E8(uint64_t a1)
{
  +[NSURL URLWithString:@"prefs:root=Privacy&path=CONTACTS"];
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = +[LSApplicationWorkspace defaultWorkspace];
  [v2 openSensitiveURL:v5 withOptions:0];

  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  double v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = 0;
}

void sub_1008D7BC8(uint64_t a1, void *a2, void *a3)
{
  double v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = [v4 appCoordinator];
  [v7 openSearch:v6 andResults:v5];
}

id sub_1008D815C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setLocation:0];
  [v3 setLatLng:0];
  id v4 = *(id *)(*(void *)(a1 + 32) + 72);
  BOOL v5 = v4 == v3;
  id v6 = sub_1008D836C();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    CFStringRef v7 = @"destination";
    if (v4 == v3) {
      CFStringRef v7 = @"source";
    }
    *(_DWORD *)buf = 138543362;
    CFStringRef v17 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Requesting location update for %{public}@.", buf, 0xCu);
  }

  objc_initWeak((id *)buf, *(id *)(a1 + 32));
  double v8 = +[MKLocationManager sharedLocationManager];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1008D83C0;
  v12[3] = &unk_1012FFC40;
  BOOL v15 = v5;
  id v9 = v3;
  id v13 = v9;
  objc_copyWeak(&v14, (id *)buf);
  double v10 = [v8 singleLocationUpdateWithHandler:v12];

  [v10 start];
  objc_destroyWeak(&v14);

  objc_destroyWeak((id *)buf);

  return v10;
}

void sub_1008D8330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1008D836C()
{
  if (qword_10160FEB8 != -1) {
    dispatch_once(&qword_10160FEB8, &stru_1012FFCD8);
  }
  v0 = (void *)qword_10160FEB0;

  return v0;
}

void sub_1008D83C0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    CFStringRef v7 = sub_1008D836C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      if (*(unsigned char *)(a1 + 48)) {
        CFStringRef v8 = @"source";
      }
      else {
        CFStringRef v8 = @"destination";
      }
      int v14 = 138543362;
      CFStringRef v15 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Updated location for %{public}@.", (uint8_t *)&v14, 0xCu);
    }

    id v9 = [objc_alloc((Class)GEOLocation) initWithCLLocation:v5];
    [*(id *)(a1 + 32) setLocation:v9];

    double v10 = [*(id *)(a1 + 32) location];
    id v11 = [v10 latLng];
    [*(id *)(a1 + 32) setLatLng:v11];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _updateSuggestions];
  }
  else
  {
    id v13 = objc_loadWeakRetained((id *)(a1 + 40));
    [v13 _handleSearchResultError:*(unsigned __int8 *)(a1 + 48) error:v6];
  }
}

uint64_t sub_1008D9A60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CFStringRef v7 = *(void **)(a1 + 32);
  id v8 = objc_alloc((Class)NSSet);
  id v9 = [v5 directionsModes];
  id v10 = [v8 initWithArray:v9];
  unsigned int v11 = [v7 intersectsSet:v10];

  uint64_t v12 = *(void **)(a1 + 32);
  id v13 = objc_alloc((Class)NSSet);
  int v14 = [v6 directionsModes];
  id v15 = [v13 initWithArray:v14];
  LODWORD(v12) = [v12 intersectsSet:v15];

  if (v11 == v12)
  {
    CFStringRef v17 = [*(id *)(a1 + 40) suggestedInstalledApps];
    __int16 v18 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v17 indexOfObject:v5]);
    id v19 = [*(id *)(a1 + 40) suggestedInstalledApps];
    id v20 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v19 indexOfObject:v6]);
    uint64_t v16 = (uint64_t)[v18 compare:v20];
  }
  else if (v11)
  {
    uint64_t v16 = -1;
  }
  else
  {
    uint64_t v16 = 1;
  }

  return v16;
}

uint64_t sub_1008D9D38(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CFStringRef v7 = *(void **)(a1 + 32);
  id v8 = objc_alloc((Class)NSSet);
  id v9 = [v5 transitModes];
  id v10 = [v8 initWithArray:v9];
  unsigned int v11 = [v7 intersectsSet:v10];

  uint64_t v12 = *(void **)(a1 + 32);
  id v13 = objc_alloc((Class)NSSet);
  int v14 = [v6 transitModes];
  id v15 = [v13 initWithArray:v14];
  LODWORD(v12) = [v12 intersectsSet:v15];

  if (v11 == v12)
  {
    CFStringRef v17 = [*(id *)(a1 + 40) suggestedStoreApps];
    __int16 v18 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v17 indexOfObject:v5]);
    id v19 = [*(id *)(a1 + 40) suggestedStoreApps];
    id v20 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v19 indexOfObject:v6]);
    uint64_t v16 = (uint64_t)[v18 compare:v20];
  }
  else if (v11)
  {
    uint64_t v16 = -1;
  }
  else
  {
    uint64_t v16 = 1;
  }

  return v16;
}

void sub_1008DA1A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutingAppSelectionController");
  id v2 = (void *)qword_10160FEB0;
  qword_10160FEB0 = (uint64_t)v1;
}

void sub_1008DA418(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    if (qword_10160FEC8 != -1) {
      dispatch_once(&qword_10160FEC8, &stru_1012FFD18);
    }
    id v3 = qword_10160FEC0;
    if (os_log_type_enabled((os_log_t)qword_10160FEC0, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to save shortcut %@. with refined coordinate", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_1008DA62C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008DA648(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v4 = WeakRetained;
    id v3 = objc_loadWeakRetained(WeakRetained + 15);
    [v3 _maps_topMostPresentViewController:*(void *)(a1 + 32) animated:1 completion:0];

    id WeakRetained = v4;
  }
}

void sub_1008DA8B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1008DA8D4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained[7] editOnlyLocation]) {
    [WeakRetained closeViewController:WeakRetained[3]];
  }
  id v1 = WeakRetained[3];
  WeakRetained[3] = 0;
}

void sub_1008DAA08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1008DAA2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _closeLocationRefinement];
}

void sub_1008DAC34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008DAC54(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = objc_loadWeakRetained(WeakRetained + 15);
    [v2 popLastViewControllerFromViewController:v3[5] animated:1 useDefaultContaineeLayout:0];

    id WeakRetained = v3;
    if (!v3[2])
    {
      [v3 endSession];
      id WeakRetained = v3;
    }
  }
}

void sub_1008DB040(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1008DB060(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v1 = objc_loadWeakRetained(WeakRetained + 15);
    [v1 popLastViewControllerFromViewController:WeakRetained[5] animated:1 useDefaultContaineeLayout:0];

    id v2 = objc_loadWeakRetained(WeakRetained + 15);
    if (v2)
    {
      id v3 = WeakRetained[6];

      if (v3)
      {
        id v4 = objc_loadWeakRetained(WeakRetained + 15);
        [v4 presentController:WeakRetained[6] animated:1];
      }
    }
    [WeakRetained endSession];
  }
}

void sub_1008DB120(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained closeViewController:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_1008DB408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008DB424(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained closeViewController:*(void *)(a1 + 32)];
}

void sub_1008DB634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008DB650(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained containerViewController];
    [v3 _maps_topMostPresentViewController:*(void *)(a1 + 32) animated:1 completion:0];

    id WeakRetained = v4;
  }
}

void sub_1008DBC48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1008DBC64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v2 = +[CNContactViewController viewControllerForContact:*(void *)(a1 + 32)];
    [v2 setActions:[v2 actions] | 0x100];
    [v2 setEditMode:2];
    [WeakRetained _showContactCard:v2];
  }
}

uint64_t sub_1008DBCF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1008DC298(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1008DC2A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1008DC5CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1008DC5F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained containerViewController];
    [v3 _maps_topMostPresentViewController:*(void *)(a1 + 32) animated:1 completion:0];

    id WeakRetained = v4;
  }
}

void sub_1008DC99C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

void sub_1008DC9D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _createNewContactCard];
}

void sub_1008DCA18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showContactPicker];
}

void *sub_1008DCA58(void *result)
{
  uint64_t v1 = result[4];
  if (*(void *)(v1 + 80)) {
    return [*(id *)(v1 + 16) resetToMapItemType];
  }
  return result;
}

void sub_1008DCD30(uint64_t a1)
{
  if (*(void *)(a1 + 32) && (uint64_t v2 = *(void *)(a1 + 40)) != 0)
  {
    uint64_t v3 = *(void **)(a1 + 48);
  }
  else
  {
    if (sub_1000BBB44(*(void **)(a1 + 56)) != 5) {
      goto LABEL_7;
    }
    uint64_t v3 = *(void **)(a1 + 48);
    uint64_t v2 = v3[2];
  }
  [v3 closeViewController:v2];
LABEL_7:
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 96);
  if (v4)
  {
    (*(void (**)(void))(v4 + 16))();
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v6 = *(void **)(v5 + 96);
    *(void *)(v5 + 96) = 0;
  }
}

void sub_1008DCF6C(uint64_t a1)
{
  if (*(void *)(a1 + 32) && *(void *)(a1 + 40))
  {
    uint64_t v1 = *(void **)(a1 + 48);
    [v1 closeViewController:];
  }
  else
  {
    uint64_t v2 = *(void **)(a1 + 48);
    uint64_t v3 = v2[10];
    if (v3)
    {
      id v4 = [*(id *)(a1 + 40) contactCardButton];
      [v2 showMeCardWithAddress:v3 from:v4];
    }
  }
}

void sub_1008DD1A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPPersonalPlaceCategory");
  uint64_t v2 = (void *)qword_10160FEC0;
  qword_10160FEC0 = (uint64_t)v1;
}

void sub_1008E0B7C(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithCarPlay:1];
  uint64_t v2 = (void *)qword_10160FEE0;
  qword_10160FEE0 = (uint64_t)v1;
}

id sub_1008E0C94(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) removeAllObjects];
  [*(id *)(*(void *)(a1 + 32) + 16) removeAllObjects];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 24);

  return [v2 removeAllObjects];
}

int64_t sub_1008E2428(id a1, PersonalizedAutocompleteItem *a2, PersonalizedAutocompleteItem *a3)
{
  id v4 = a3;
  id v5 = [(PersonalizedAutocompleteItem *)a2 serverItemIndexInSection];
  id v6 = [(PersonalizedAutocompleteItem *)v4 serverItemIndexInSection];

  if (v5 >= v6) {
    int64_t v7 = 0;
  }
  else {
    int64_t v7 = -1;
  }
  if (v5 > v6) {
    return 1;
  }
  else {
    return v7;
  }
}

BOOL sub_1008E28CC(id a1)
{
  return 1;
}

void sub_1008E28D4(uint64_t a1)
{
  uint64_t v2 = +[MKMapService sharedService];
  [v2 captureUserAction:6020 onTarget:647 eventValue:0];

  uint64_t v3 = +[MKMapService sharedService];
  [v3 captureUserAction:6050 onTarget:647 eventValue:*(void *)(a1 + 32)];

  id v4 = +[MKSystemController sharedInstance];
  [v4 openURL:*(void *)(a1 + 40) completionHandler:0];
}

void sub_1008E2A74(id a1)
{
  id v1 = objc_alloc_init(HydrateGeoMapItemCache);
  uint64_t v2 = (void *)qword_10160FEF0;
  qword_10160FEF0 = (uint64_t)v1;
}

void sub_1008E2B7C(uint64_t a1)
{
  uint64_t v2 = sub_100577FFC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = [*(id *)(a1 + 32) name];
    id v4 = [*(id *)(a1 + 32) identifier];
    *(_DWORD *)buf = 138412546;
    long long v26 = v3;
    __int16 v27 = 2112;
    long long v28 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "resolveRTMapItem %@ %@", buf, 0x16u);
  }
  id v5 = [*(id *)(*(void *)(a1 + 40) + 16) objectForKeyedSubscript:*(void *)(a1 + 32)];

  if (v5)
  {
    id v6 = sub_100577FFC();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int64_t v7 = [*(id *)(a1 + 32) name];
      id v8 = [*(id *)(a1 + 32) identifier];
      *(_DWORD *)buf = 138412546;
      long long v26 = v7;
      __int16 v27 = 2112;
      long long v28 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "resolveRTMapItem in cache %@ %@", buf, 0x16u);
    }
    uint64_t v9 = *(void *)(a1 + 48);
    id v10 = [*(id *)(*(void *)(a1 + 40) + 16) objectForKeyedSubscript:*(void *)(a1 + 32)];
    (*(void (**)(uint64_t, void *, void))(v9 + 16))(v9, v10, 0);
  }
  else
  {
    unsigned int v11 = [*(id *)(*(void *)(a1 + 40) + 8) objectForKeyedSubscript:*(void *)(a1 + 32)];

    if (v11)
    {
      uint64_t v12 = sub_100577FFC();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        id v13 = [*(id *)(a1 + 32) name];
        int v14 = [*(id *)(a1 + 32) identifier];
        *(_DWORD *)buf = 138412546;
        long long v26 = v13;
        __int16 v27 = 2112;
        long long v28 = v14;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "resolveRTMapItem add in progress %@ %@", buf, 0x16u);
      }
      id v10 = [*(id *)(*(void *)(a1 + 40) + 8) objectForKeyedSubscript:*(void *)(a1 + 32)];
      id v15 = objc_retainBlock(*(id *)(a1 + 48));
      [v10 addObject:v15];

      [*(id *)(*(void *)(a1 + 40) + 8) setObject:v10 forKeyedSubscript:*(void *)(a1 + 32)];
    }
    else
    {
      id v16 = objc_retainBlock(*(id *)(a1 + 48));
      id v10 = +[NSMutableArray arrayWithObject:v16];

      [*(id *)(*(void *)(a1 + 40) + 8) setObject:v10 forKeyedSubscript:*(void *)(a1 + 32)];
      CFStringRef v17 = +[GEOMapService sharedService];
      __int16 v18 = [*(id *)(a1 + 32) geoMapItemHandle];
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_1008E2EF4;
      v21[3] = &unk_1012FFE38;
      char v24 = *(unsigned char *)(a1 + 56);
      id v19 = *(id *)(a1 + 32);
      uint64_t v20 = *(void *)(a1 + 40);
      id v22 = v19;
      uint64_t v23 = v20;
      [v17 resolveMapItemFromHandle:v18 completionHandler:v21];
    }
  }
}

void sub_1008E2EF4(uint64_t a1, void *a2, void *a3)
{
  id v18 = a2;
  id v5 = a3;
  if (!v5 && *(unsigned char *)(a1 + 48))
  {
    id v6 = [v18 _clientAttributes];

    if (v6)
    {
      int64_t v7 = v18;
    }
    else
    {
      id v8 = objc_alloc_init((Class)GEOMapItemClientAttributes);
      uint64_t v9 = +[GEOMapItemStorage mapItemStorageForGEOMapItem:v18 clientAttributes:v8];

      int64_t v7 = (void *)v9;
    }
    id v18 = v7;
    id v10 = [v7 _clientAttributes];
    unsigned int v11 = [v10 addressBookAttributes];

    if (!v11)
    {
      id v12 = objc_alloc_init((Class)GEOMapItemAddressBookAttributes);
      id v13 = [v18 _clientAttributes];
      [v13 setAddressBookAttributes:v12];
    }
    int v14 = [*(id *)(a1 + 32) extendedAttributes];
    id v15 = [v14 addressIdentifier];
    id v16 = [v18 _clientAttributes];
    CFStringRef v17 = [v16 addressBookAttributes];
    [v17 setAddressIdentifier:v15];
  }
  [*(id *)(a1 + 40) performCompletionsFor:*(void *)(a1 + 32) mapItem:v18 error:v5];
}

void sub_1008E31B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    [*(id *)(*(void *)(a1 + 40) + 16) setObject:v2 forKeyedSubscript:*(void *)(a1 + 48)];
  }
  uint64_t v3 = [*(id *)(*(void *)(a1 + 40) + 8) objectForKeyedSubscript:*(void *)(a1 + 48)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  [*(id *)(*(void *)(a1 + 40) + 8) setObject:0 forKeyedSubscript:*(void *)(a1 + 48)];
  id v6 = sub_100577FFC();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count];
    id v8 = [*(id *)(a1 + 48) name];
    uint64_t v9 = [*(id *)(a1 + 48) identifier];
    *(_DWORD *)buf = 134218498;
    id v21 = v7;
    __int16 v22 = 2112;
    uint64_t v23 = v8;
    __int16 v24 = 2112;
    id v25 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "resolveRTMapItem perform %ld blocks %@ %@", buf, 0x20u);
  }
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v10 = *(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
  id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v16;
    do
    {
      int v14 = 0;
      do
      {
        if (*(void *)v16 != v13) {
          objc_enumerationMutation(v10);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v15 + 1) + 8 * (void)v14) + 16))(*(void *)(*((void *)&v15 + 1) + 8 * (void)v14));
        int v14 = (char *)v14 + 1;
      }
      while (v12 != v14);
      id v12 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v12);
  }
}

id sub_1008E4BE8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 80) alpha];
}

id sub_1008E4BFC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 80) setAlpha:];
}

id sub_1008E4C10(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 88) alpha];
}

id sub_1008E4C24(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 88) setAlpha:];
}

void sub_1008E54D4(id a1)
{
  id v1 = (void *)qword_10160FF08;
  qword_10160FF08 = (uint64_t)&off_1013AE208;

  v4[0] = &off_1013A9250;
  v4[1] = &off_1013A9268;
  v5[0] = &off_1013AE220;
  v5[1] = &off_1013AE238;
  v4[2] = &off_1013A9280;
  v5[2] = &off_1013AE250;
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:3];
  uint64_t v3 = (void *)qword_10160FF10;
  qword_10160FF10 = v2;
}

void sub_1008E5994(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1008E59CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      uint64_t v9 = sub_1000519B4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to fetch garage with error: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      [WeakRetained _consumeUpdatedVirtualGarage:v5];
    }
  }
}

void sub_1008E5AC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      uint64_t v9 = sub_1000519B4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to fetch unpaired vehicles with error: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      [WeakRetained _consumeUpdatedUnpairedVehicles:v5];
    }
  }
}

void sub_1008E6128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008E6144(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _environmnentNotification];
}

void sub_1008E6550(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 7, *(id *)(a1 + 32));
    [v3 _reloadMyVehiclesVisibility];
    id WeakRetained = v3;
  }
}

void sub_1008E6680(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 8, *(id *)(a1 + 32));
    [v3 _reloadMyVehiclesVisibility];
    id WeakRetained = v3;
  }
}

void sub_1008E7560(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 contentView];
  id v5 = [v4 subviews];
  id v6 = [v5 count];

  if (!v6)
  {
    [v3 setAccessoryType:0];
    [v3 setSelectionStyle:0];
    id v7 = [*(id *)(a1 + 32) mapAttributionButton];
    [v7 setAccessibilityIdentifier:@"MapAttributionButton"];
    id v8 = [v3 contentView];
    [v8 addSubview:v7];

    unsigned int v39 = [v7 leadingAnchor];
    long long v40 = [v3 contentView];
    id v38 = [v40 leadingAnchor];
    id v37 = [v39 constraintEqualToAnchor:v38 constant:16.0];
    v41[0] = v37;
    unint64_t v35 = [v7 trailingAnchor];
    unint64_t v36 = [v3 contentView];
    id v34 = [v36 trailingAnchor];
    id v33 = [v35 constraintLessThanOrEqualToAnchor:v34 constant:-16.0];
    v41[1] = v33;
    id v31 = [v7 centerYAnchor];
    unsigned int v32 = [v3 contentView];
    unint64_t v30 = [v32 centerYAnchor];
    long long v29 = [v31 constraintEqualToAnchor:v30];
    v41[2] = v29;
    __int16 v27 = [v7 topAnchor];
    long long v28 = [v3 contentView];
    long long v26 = [v28 topAnchor];
    id v25 = [v27 constraintGreaterThanOrEqualToAnchor:v26];
    v41[3] = v25;
    __int16 v24 = [v7 bottomAnchor];
    uint64_t v9 = [v3 contentView];
    int v10 = [v9 bottomAnchor];
    id v11 = [v24 constraintLessThanOrEqualToAnchor:v10];
    v41[4] = v11;
    id v12 = [v3 contentView];
    uint64_t v13 = [v12 heightAnchor];
    LODWORD(v14) = 1112276992;
    long long v15 = [v13 constraintEqualToConstant:0.0 priority:v14];
    v41[5] = v15;
    long long v16 = +[NSArray arrayWithObjects:v41 count:6];
    +[NSLayoutConstraint activateConstraints:v16];
  }
  long long v17 = [v3 contentView];
  long long v18 = [v17 subviews];
  id v19 = [v18 firstObject];

  uint64_t v20 = [*(id *)(a1 + 32) settingsController];
  id v21 = [v20 mapAttribution];
  __int16 v22 = [v21 string];
  id v23 = [v22 mutableCopy];
  [v19 setAttributedTitle:v23 forState:0];
}

void sub_1008E7E3C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 32);
  id v4 = a2;
  [v4 setSelectionStyle:v3];
  [v4 setAccessoryType:*(unsigned __int8 *)(a1 + 32)];
  id v5 = [v4 textLabel];
  [v5 setTextAlignment:4];

  id v6 = +[UIFont _maps_systemFontWithSize:16.0];
  id v7 = [v4 textLabel];
  [v7 setFont:v6];

  id v8 = [v4 textLabel];

  [v8 setNumberOfLines:2];
}

id sub_1008E9034()
{
  if (qword_10160FF20 != -1) {
    dispatch_once(&qword_10160FF20, &stru_1012FFF00);
  }
  v0 = (void *)qword_10160FF18;

  return v0;
}

void sub_1008E956C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) previousTopContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = v3;

  id v5 = [*(id *)(a1 + 32) previousTopContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v13 = v6;

  id v7 = [v4 fullscreenViewController];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v8 = v7;
  }
  else {
    id v8 = 0;
  }
  id v9 = v8;

  if (v9)
  {
    id v10 = v7;
  }
  else
  {
    id v11 = [v13 fullscreenViewController];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v12 = v11;
    }
    else {
      id v12 = 0;
    }
    id v10 = v12;
  }
  [v10 setContaineesHidden:1];
}

void sub_1008E99E0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) pedestrianARViewController];
  uint64_t v3 = [v2 mapView];
  uint64_t v4 = [v3 detailedDescription];
  id v5 = (void *)v4;
  if (v4) {
    CFStringRef v6 = (const __CFString *)v4;
  }
  else {
    CFStringRef v6 = &stru_101324E70;
  }
  id v8 = +[MapsRadarTextAttachment attachmentWithFileName:@"PedestrianARVKMapViewDiagnostics.txt" text:v6];

  id v7 = +[MapsRadarKeyword keywordWithName:@"MAPS377" number:1281664];
  [*(id *)(a1 + 40) addAttachment:v8];
  [*(id *)(a1 + 40) addKeyword:v7];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1008E9B00(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARContext");
  uint64_t v2 = (void *)qword_10160FF18;
  qword_10160FF18 = (uint64_t)v1;
}

void sub_1008EA678(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(*(void *)(a1 + 32) + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) updateFromParkedCar:v6];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

id sub_1008EC0B4(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"guidanceEnd"];
  id v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

id sub_1008EC0F8(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"guidanceEnd"];
  id v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

id sub_1008EC13C(uint64_t a1)
{
  [*(id *)(a1 + 32) startedTest];
  id v2 = *(void **)(a1 + 32);

  return [v2 tapOnSearchBar];
}

id sub_1008EC240(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"guidanceStartToFirstStepShown"];
  id v2 = *(void **)(a1 + 32);

  return _[v2 _guidanceOrSteppingDidShowFirstSign];
}

void sub_1008EC48C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1008EC4A8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    if ([WeakRetained[10] isValid])
    {
      [v3[10] invalidate];
      id v2 = v3[10];
      v3[10] = 0;
    }
    [v3 willUpdateNavigationSign];
    id WeakRetained = v3;
  }
}

id sub_1008EC608(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"guidanceMakeTurn"];
  id v2 = *(void **)(a1 + 32);

  return [v2 _doAfterSubTestForShowingSign];
}

id sub_1008EC804(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _steppingSignDidChange];
}

void sub_1008EC80C(uint64_t a1)
{
  [*(id *)(a1 + 32) _subTestNameForGoingToGuidanceStep:*(void *)(a1 + 48) + 1 forSwipeCount:[*(id *)(a1 + 32) swipeCount]];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) startedSubTest:v2];
  [*(id *)(a1 + 40) pptTestMoveToNextStep];
}

void sub_1008EC9E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008ECA00(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained finishedSubTest:*(void *)(a1 + 32)];

  uint64_t v4 = sub_1005765DC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 56);
    int v11 = 134218240;
    uint64_t v12 = v5;
    __int16 v13 = 2048;
    uint64_t v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "MapsAppTestGuidance - _steppingSignDidChange - Fully drawn.  swipeCount: %ld, currentStepIndex: %ld", (uint8_t *)&v11, 0x16u);
  }

  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  if (v8 == v7)
  {
    id v9 = objc_loadWeakRetained(v2);
    [v9 _doAfterSubTestForShowingSign];
  }
  else
  {
    id v10 = objc_loadWeakRetained(v2);
    id v9 = v10;
    if (v8 <= v7) {
      [v10 failedTest];
    }
    else {
      [v10 _gotoNextStepAfterDelay:2.0];
    }
  }
}

id sub_1008ECBB4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _runPlayWithTraySubtest];
}

id sub_1008ECD60(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) canUpdateTrayLayout];
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    id v4 = [v3 collapsedTrayLayout];
    uint64_t v5 = *(void **)(a1 + 32);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1008ECE24;
    v7[3] = &unk_1012E5D08;
    void v7[4] = v5;
    return [v5 updateTrayLayout:v4 withSubtestName:@"NavigationMinimizeTray" animated:1 completion:v7];
  }
  else
  {
    return [v3 failedTest];
  }
}

id sub_1008ECE24(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _endGuidanceNavOrSteppingMode];
}

void sub_1008ED290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008ED2BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008ED38C;
  block[3] = &unk_1012E96B8;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  id v6 = v3;
  id v7 = *(id *)(a1 + 32);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v8);
}

void sub_1008ED38C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _updateAnalyticsWithRideStatus:*(void *)(a1 + 32)];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      id v6 = "RideBookingRequestRideOptionProxy.m";
      __int16 v7 = 1026;
      int v8 = 71;
      __int16 v9 = 2082;
      id v10 = "-[RideBookingRequestRideOptionProxy requestRideWithCompletion:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_1008ED574(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _updateAnalyticsWithRequestRideStatus:*(void *)(a1 + 32)];
    id v4 = objc_loadWeakRetained(v3 + 2);
    [v4 requestRideStatusDidChange:*(void *)(a1 + 32)];
  }
  else
  {
    GEOFindOrCreateLog();
    int v5 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 136446722;
      __int16 v7 = "RideBookingRequestRideOptionProxy.m";
      __int16 v8 = 1026;
      int v9 = 84;
      __int16 v10 = 2082;
      int v11 = "-[RideBookingRequestRideOptionProxy requestRideStatusDidChange:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v6, 0x1Cu);
    }
  }
}

void sub_1008EDB30(id a1)
{
  id v1 = (objc_class *)objc_opt_class();
  long long v26 = NSStringFromClass(v1);
  id v25 = [v26 stringByAppendingString:@".Origin"];
  v27[0] = v25;
  v28[0] = objc_opt_class();
  unsigned int v2 = (objc_class *)objc_opt_class();
  __int16 v24 = NSStringFromClass(v2);
  id v23 = [v24 stringByAppendingString:@".Destination"];
  v27[1] = v23;
  v28[1] = objc_opt_class();
  id v3 = (objc_class *)objc_opt_class();
  id v4 = NSStringFromClass(v3);
  v27[2] = v4;
  v28[2] = objc_opt_class();
  int v5 = (objc_class *)objc_opt_class();
  int v6 = NSStringFromClass(v5);
  v27[3] = v6;
  v28[3] = objc_opt_class();
  __int16 v7 = (objc_class *)objc_opt_class();
  __int16 v8 = NSStringFromClass(v7);
  v27[4] = v8;
  v28[4] = objc_opt_class();
  int v9 = (objc_class *)objc_opt_class();
  __int16 v10 = NSStringFromClass(v9);
  v27[5] = v10;
  v28[5] = objc_opt_class();
  int v11 = (objc_class *)objc_opt_class();
  uint64_t v12 = NSStringFromClass(v11);
  v27[6] = v12;
  v28[6] = objc_opt_class();
  __int16 v13 = (objc_class *)objc_opt_class();
  uint64_t v14 = NSStringFromClass(v13);
  v27[7] = v14;
  v28[7] = objc_opt_class();
  long long v15 = (objc_class *)objc_opt_class();
  long long v16 = NSStringFromClass(v15);
  v27[8] = v16;
  v28[8] = objc_opt_class();
  long long v17 = (objc_class *)objc_opt_class();
  long long v18 = NSStringFromClass(v17);
  v27[9] = v18;
  v28[9] = objc_opt_class();
  id v19 = (objc_class *)objc_opt_class();
  uint64_t v20 = NSStringFromClass(v19);
  v27[10] = v20;
  v28[10] = objc_opt_class();
  uint64_t v21 = +[NSDictionary dictionaryWithObjects:v28 forKeys:v27 count:11];
  __int16 v22 = (void *)qword_10160FF28;
  qword_10160FF28 = v21;
}

id sub_1008EE09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) registerClass:a3 forCellReuseIdentifier:a2];
}

void sub_1008EE188(id a1)
{
  id v1 = (objc_class *)objc_opt_class();
  long long v28 = NSStringFromClass(v1);
  __int16 v27 = [v28 stringByAppendingString:@".Origin"];
  v29[0] = v27;
  v30[0] = objc_opt_class();
  unsigned int v2 = (objc_class *)objc_opt_class();
  long long v26 = NSStringFromClass(v2);
  id v25 = [v26 stringByAppendingString:@".Destination"];
  v29[1] = v25;
  v30[1] = objc_opt_class();
  id v3 = (objc_class *)objc_opt_class();
  id v4 = NSStringFromClass(v3);
  v29[2] = v4;
  v30[2] = objc_opt_class();
  int v5 = (objc_class *)objc_opt_class();
  int v6 = NSStringFromClass(v5);
  v29[3] = v6;
  v30[3] = objc_opt_class();
  __int16 v7 = (objc_class *)objc_opt_class();
  __int16 v8 = NSStringFromClass(v7);
  v29[4] = v8;
  v30[4] = objc_opt_class();
  int v9 = (objc_class *)objc_opt_class();
  __int16 v10 = NSStringFromClass(v9);
  v29[5] = v10;
  void v30[5] = objc_opt_class();
  int v11 = (objc_class *)objc_opt_class();
  uint64_t v12 = NSStringFromClass(v11);
  v29[6] = v12;
  v30[6] = objc_opt_class();
  __int16 v13 = (objc_class *)objc_opt_class();
  uint64_t v14 = NSStringFromClass(v13);
  v29[7] = v14;
  v30[7] = objc_opt_class();
  long long v15 = (objc_class *)objc_opt_class();
  long long v16 = NSStringFromClass(v15);
  v29[8] = v16;
  v30[8] = objc_opt_class();
  long long v17 = (objc_class *)objc_opt_class();
  long long v18 = NSStringFromClass(v17);
  v29[9] = v18;
  v30[9] = objc_opt_class();
  id v19 = (objc_class *)objc_opt_class();
  uint64_t v20 = NSStringFromClass(v19);
  v29[10] = v20;
  v30[10] = objc_opt_class();
  uint64_t v21 = (objc_class *)objc_opt_class();
  __int16 v22 = NSStringFromClass(v21);
  v29[11] = v22;
  v30[11] = objc_opt_class();
  uint64_t v23 = +[NSDictionary dictionaryWithObjects:v30 forKeys:v29 count:12];
  __int16 v24 = (void *)qword_10160FF38;
  qword_10160FF38 = v23;
}

void sub_1008EE5B0(uint64_t a1, void *a2)
{
  unsigned int v2 = *(void **)(a1 + 32);
  id v3 = a2;
  [v2 registerClass:objc_opt_class() forCellWithReuseIdentifier:v3];
}

unsigned char *sub_1008EE914(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = *(void **)(a1 + 32);
  id v6 = a2;
  [v5 setAllRoutingApps:a3];
  __int16 v7 = [*(id *)(a1 + 32) delegate];
  [v7 routingAppSuggestionProvider:*(void *)(a1 + 32) didSuggestInstalledApps:v6];

  *(unsigned char *)(*(void *)(a1 + 32) + 17) = 1;
  uint64_t result = *(unsigned char **)(a1 + 32);
  if (!result[19])
  {
    return [result _suggestFilteredStoreAppsIfReady];
  }
  return result;
}

void sub_1008EEB6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = *(void **)(a1 + 32);
  id v7 = a3;
  [v6 showNetworkActivityIndicator:0];
  if (v7)
  {
    v22[0] = NSLocalizedDescriptionKey;
    v22[1] = NSUnderlyingErrorKey;
    v23[0] = @"Error requesting app metadata.";
    v23[1] = v7;
    __int16 v8 = +[NSDictionary dictionaryWithObjects:v23 forKeys:v22 count:2];
    int v9 = +[NSError storePlatformErrorWithUserInfo:v8];

    __int16 v10 = [*(id *)(a1 + 32) delegate];
    [v10 routingAppSuggestionProvider:*(void *)(a1 + 32) didFailToSuggestStoreApps:v9];
  }
  else
  {
    id v11 = [v5 count];
    sub_100B5AA24(@"Received store platform response with %lu apps", v12, v13, v14, v15, v16, v17, v18, (uint64_t)v11);
    uint64_t v19 = [*(id *)(a1 + 32) sortedAppsWithIds:*(void *)(a1 + 40) appStoreApps:v5];
    uint64_t v20 = *(void *)(a1 + 32);
    uint64_t v21 = *(void **)(v20 + 32);
    *(void *)(v20 + 32) = v19;

    *(unsigned char *)(*(void *)(a1 + 32) + 16) = 1;
    [*(id *)(a1 + 32) _suggestFilteredStoreAppsIfReady];
    int v9 = 0;
  }
}

int64_t sub_1008EEED0(id a1, NSNumber *a2, NSNumber *a3)
{
  return [(NSNumber *)a2 compare:a3];
}

BOOL sub_1008EF05C(id a1, GEOAppleMediaServicesResult *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOAppleMediaServicesResult *)a2 isAppInstalled] ^ 1;
}

id sub_1008EFE04()
{
  if (qword_10160FF50 != -1) {
    dispatch_once(&qword_10160FF50, &stru_101300070);
  }
  v0 = (void *)qword_10160FF48;

  return v0;
}

id sub_1008F0170(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateForCurrentState];
}

void sub_1008F11D0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFScanningInstructionView");
  unsigned int v2 = (void *)qword_10160FF48;
  qword_10160FF48 = (uint64_t)v1;
}

void sub_1008F2E80(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) entryPointsCoordinator];
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 48) session];
  id v4 = [*(id *)(a1 + 56) coordinateSpace];
  [v4 bounds];
  [v7 continueUserActivity:v2 session:v3 windowSize:v5, v6];
}

void sub_1008F31AC(id *a1)
{
  id v8 = [a1[4] entryPointsCoordinator];
  uint64_t v2 = [a1[5] URL];
  id v3 = [a1[6] session];
  id v4 = [a1[5] options];
  double v5 = [a1[7] coordinateSpace];
  [v5 bounds];
  [v8 openURL:v2 session:v3 sceneOptions:v4 mkOptions:0 windowSize:v6, v7];
}

void sub_1008F4444(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = [objc_alloc((Class)IFImage) initWithCGImage:[v3 CGImage] scale:*(double *)(a1 + 40)];
    id v5 = objc_alloc((Class)ISIcon);
    id v11 = v4;
    double v6 = +[NSArray arrayWithObjects:&v11 count:1];
    id v7 = [v5 initWithImages:v6];

    id v8 = [objc_alloc((Class)ISImageDescriptor) initWithSize:*(double *)(a1 + 48) scale:*(double *)(a1 + 56)];
    [v8 setShape:0];
    int v9 = [v7 prepareImageForDescriptor:v8];
    __int16 v10 = +[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", [v9 CGImage]);
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_1008F50B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008F50D8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained[7];
    if (v5 == *(id *)(a1 + 32) || objc_msgSend(v5, "isEqual:")) {
      [v4[5] setImage:v6];
    }
  }
}

void sub_1008F52AC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) options];
  id v3 = [v2 objectForKeyedSubscript:@"testName"];

  if ([v3 isEqualToString:@"VenuesBrowse"])
  {
    [*(id *)(a1 + 32) runBrowseTest];
  }
  else if ([v3 isEqualToString:@"VenuesScrollCategoryResults"])
  {
    [*(id *)(a1 + 32) runScrollCategoryResultsTest];
  }
  else if ([v3 isEqualToString:@"VenuesScrollSearchResultPlacecard"])
  {
    [*(id *)(a1 + 32) runScrollSearchResultPlacecardTest];
  }
}

void sub_1008F55E4(id *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = [a2 firstObject];
  id v6 = (void *)v5;
  if (a3 || !v5)
  {
    [a1[4] failedTest];
  }
  else
  {
    uint64_t v7 = WillStartDisplayBrowseCategories;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    id v15[2] = sub_1008F57DC;
    v15[3] = &unk_1012EEF90;
    id v16 = a1[5];
    +[PPTNotificationCenter addOnceObserverForName:v7 object:0 usingBlock:v15];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1008F57F4;
    v14[3] = &unk_1012E6668;
    v14[4] = a1[4];
    +[PPTNotificationCenter addOnceObserverForName:DidFailDisplayBrowseCategories object:0 usingBlock:v14];
    uint64_t v8 = DidDisplayBrowseCategories;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1008F57FC;
    v11[3] = &unk_1012EEFB8;
    v11[4] = a1[4];
    id v13 = a1[6];
    id v9 = v6;
    id v12 = v9;
    +[PPTNotificationCenter addOnceObserverForName:v8 object:0 usingBlock:v11];
    __int16 v10 = [a1[4] testCoordinator];
    [v10 pptTestPresentPlacecardWithMapItem:v9];
  }
}

uint64_t sub_1008F57DC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1008F57F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest];
}

void sub_1008F57FC(uint64_t a1, void *a2)
{
  id v3 = [a2 object];
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    if (!v4) {
      goto LABEL_6;
    }
    uint64_t v5 = v3;
    (*(void (**)(uint64_t, void))(v4 + 16))(v4, *(void *)(a1 + 40));
  }
  else
  {
    uint64_t v5 = 0;
    [*(id *)(a1 + 32) failedTest];
  }
  id v3 = v5;
LABEL_6:
}

void sub_1008F5974(uint64_t a1, void *a2)
{
  id v3 = [a2 object];
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (!v4) {
      goto LABEL_6;
    }
    uint64_t v5 = v3;
    (*(void (**)(void))(v4 + 16))();
  }
  else
  {
    uint64_t v5 = 0;
    [*(id *)(a1 + 32) failedTest];
  }
  id v3 = v5;
LABEL_6:
}

void sub_1008F5BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008F5C44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) finishedTest];
    id WeakRetained = v3;
  }
}

void sub_1008F5D8C(uint64_t a1, void *a2)
{
  id v3 = [a2 object];
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (!v4) {
      goto LABEL_6;
    }
    uint64_t v5 = v3;
    (*(void (**)(void))(v4 + 16))();
  }
  else
  {
    uint64_t v5 = 0;
    [*(id *)(a1 + 32) failedTest];
  }
  id v3 = v5;
LABEL_6:
}

id sub_1008F5F60(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest];
}

uint64_t sub_1008F5F68(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1008F6040(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"DisplayCategories"];
}

void sub_1008F6050(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  [v5 finishedSubTest:@"DisplayCategories"];
  [*(id *)(a1 + 32) startedSubTest:@"DisplayCategoryResults"];
  uint64_t v8 = *(void **)(a1 + 32);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1008F611C;
  v9[3] = &unk_101300238;
  v9[4] = v8;
  [v8 displayCategoryResultsWithMapItem:v7 searchCategory:v6 completion:v9];
}

void sub_1008F611C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) finishedSubTest:@"DisplayCategoryResults"];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  id v15[2] = sub_1008F62EC;
  v15[3] = &unk_1012E5D58;
  id v4 = v3;
  uint64_t v5 = *(void *)(a1 + 32);
  id v16 = v4;
  uint64_t v17 = v5;
  id v6 = objc_retainBlock(v15);
  id v7 = [v4 dataSource];
  uint64_t v8 = [v7 subcategories];
  if ((unint64_t)[v8 count] <= 1)
  {

    goto LABEL_5;
  }
  id v9 = [v4 dataSource];
  __int16 v10 = [v9 subcategories];
  id v11 = [v10 objectAtIndexedSubscript:1];

  if (!v11)
  {
LABEL_5:
    ((void (*)(void *))v6[2])(v6);
    goto LABEL_6;
  }
  [*(id *)(a1 + 32) startedSubTest:@"SelectSubCategory"];
  id v12 = *(void **)(a1 + 32);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1008F6414;
  v13[3] = &unk_1012E76E8;
  v13[4] = v12;
  uint64_t v14 = v6;
  [v12 selectSubCategory:v11 venueCategoryViewController:v4 completion:v13];

LABEL_6:
}

void sub_1008F62EC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) dataSource];
  id v3 = [v2 content];
  id v4 = [v3 objects];
  uint64_t v5 = [v4 firstObject];

  [*(id *)(a1 + 40) startedSubTest:@"SelectSearchResult"];
  id v6 = *(void **)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1008F63D0;
  v7[3] = &unk_101300210;
  void v7[4] = v6;
  [v6 selectSearchResult:v5 completion:v7];
}

id sub_1008F63D0(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"SelectSearchResult"];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

uint64_t sub_1008F6414(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"SelectSubCategory"];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

id sub_1008F64D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1008F6548;
  void v5[3] = &unk_101300238;
  void v5[4] = v3;
  return [v3 displayCategoryResultsWithMapItem:a2 searchCategory:a3 completion:v5];
}

void sub_1008F6548(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_time_t v4 = dispatch_time(0, 10000000000);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1008F660C;
  v6[3] = &unk_1012E5D58;
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v3;
  id v5 = v3;
  dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, v6);
}

void sub_1008F660C(uint64_t a1)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1008F672C;
  v7[3] = &unk_1012E5D58;
  uint64_t v2 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v2;
  id v3 = objc_retainBlock(v7);
  if ([*(id *)(a1 + 32) canUpdateTrayLayout])
  {
    dispatch_time_t v4 = *(void **)(a1 + 32);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1008F6790;
    void v5[3] = &unk_1012E6EA8;
    id v6 = v3;
    [v4 updateTrayLayout:2 animated:1 completion:v5];
  }
  else
  {
    ((void (*)(void *))v3[2])(v3);
  }
}

void sub_1008F672C(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) dataSource];
  uint64_t v2 = [v3 tableView];
  [v1 performScrollTestOnScrollView:v2];
}

uint64_t sub_1008F6790(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1008F6810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1008F6888;
  void v5[3] = &unk_101300238;
  void v5[4] = v3;
  return [v3 displayCategoryResultsWithMapItem:a2 searchCategory:a3 completion:v5];
}

void sub_1008F6888(uint64_t a1, void *a2)
{
  id v3 = [a2 dataSource];
  dispatch_time_t v4 = [v3 content];
  id v5 = [v4 objects];
  id v6 = [v5 firstObject];

  id v7 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1008F695C;
  void v8[3] = &unk_101300210;
  void v8[4] = v7;
  [v7 selectSearchResult:v6 completion:v8];
}

void sub_1008F695C(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_time_t v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1008F69FC;
  v6[3] = &unk_1012E5D58;
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  [v4 updateTrayLayout:2 animated:1 completion:v6];
}

void sub_1008F69FC(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) view];
  id v3 = [v2 subviews];

  id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v11 != v6) {
        objc_enumerationMutation(v3);
      }
      id v8 = *(void **)(*((void *)&v10 + 1) + 8 * v7);
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        break;
      }
      if (v5 == (id)++v7)
      {
        id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
        if (v5) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }
    id v9 = v8;

    if (!v9) {
      goto LABEL_12;
    }
    [*(id *)(a1 + 40) performScrollTestOnScrollView:v9];
  }
  else
  {
LABEL_9:

LABEL_12:
    [*(id *)(a1 + 40) failedTest];
  }
}

void sub_1008F7CBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 32), *(id *)(a1 + 40));
  id v4 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [*(id *)(a1 + 40) count]);
  if (*(void *)(a1 + 40))
  {
    [*(id *)(a1 + 32) setNeedsRefresh:0];
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v5 = *(id *)(a1 + 40);
    id v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v14;
      do
      {
        id v9 = 0;
        do
        {
          if (*(void *)v14 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = *(void *)(*((void *)&v13 + 1) + 8 * (void)v9);
          long long v11 = [BrowseCategory alloc];
          long long v12 = -[BrowseCategory initWithCategory:](v11, "initWithCategory:", v10, (void)v13);
          [v4 addObject:v12];

          id v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v7);
    }
  }
  [v3 setCategories:v4];
}

id sub_1008F8168()
{
  if (qword_10160FF90 != -1) {
    dispatch_once(&qword_10160FF90, &stru_101300450);
  }
  v0 = (void *)qword_10160FF88;

  return v0;
}

void sub_1008F8230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1008F8348(uint64_t a1)
{
  uint64_t v2 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [*(id *)(a1 + 32) count]);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v15;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v15 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v14 + 1) + 8 * (void)v7);
        id v9 = objc_alloc((Class)GEOSearchCategoryStorage);
        id v10 = [v9 initWithSearchCategory:v8];
        [v2 addObject:v10];

        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v5);
  }

  long long v11 = [*(id *)(a1 + 40) diskCachingKey];
  long long v12 = sub_1008F84E4(v11);

  if (v12)
  {
    long long v13 = [v2 arrayByApplyingSelector:"data"];
    [v13 writeToURL:v12 atomically:1];
  }
}

id sub_1008F84E4(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (qword_10160FFA0 == -1)
  {
    if (v1)
    {
LABEL_3:
      id v3 = [@"cat" stringByAppendingFormat:@"_%@", v2];
      goto LABEL_6;
    }
  }
  else
  {
    dispatch_once(&qword_10160FFA0, &stru_101300470);
    if (v2) {
      goto LABEL_3;
    }
  }
  id v3 = @"cat";
LABEL_6:
  id v4 = [(__CFString *)v3 stringByAppendingPathExtension:@"dat"];

  if (qword_10160FF98)
  {
    id v5 = [(id)qword_10160FF98 URLByAppendingPathComponent:v4];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_1008F9028(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  uint64_t v2 = (void *)qword_10160FF58;
  qword_10160FF58 = (uint64_t)v1;
}

void sub_1008F9420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008F9440(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained _createImageForCategory:*(void *)(a1 + 32) scale:*(void *)(a1 + 40) traits:*(unsigned __int8 *)(a1 + 80) isCarplay:*(unsigned __int8 *)(a1 + 81) nightMode:*(double *)(a1 + 72)];
    if (v4)
    {
      id v5 = [(id)objc_opt_class() sharedImageCache];
      [v5 setObject:v4 forKey:*(void *)(a1 + 48)];
    }
    else
    {
      id v5 = sub_1008F8168();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        uint64_t v6 = [*(id *)(a1 + 32) name];
        uint64_t v7 = *(void *)(a1 + 48);
        int v9 = 138412546;
        id v10 = v6;
        __int16 v11 = 2112;
        uint64_t v12 = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Failed to create image for category %@, key: %@", (uint8_t *)&v9, 0x16u);
      }
    }

    uint64_t v8 = *(void *)(a1 + 56);
    if (v8) {
      (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v4);
    }
  }
}

BOOL sub_1008F9C28(uint64_t a1, double a2, double a3)
{
  return a2 >= *(double *)(a1 + 32) && a3 >= *(double *)(a1 + 40);
}

id sub_1008F9C4C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  while (1)
  {
    LOBYTE(v13) = *(unsigned char *)(a1 + 50);
    uint64_t v8 = +[MKIconManager imageForStyle:*(void *)(a1 + 32) size:a2 forScale:1 format:*(unsigned __int8 *)(a1 + 48) transparent:*(unsigned __int8 *)(a1 + 49) transitMode:a3 isCarplay:a4 nightMode:v13];
    int v9 = v8;
    if (v8)
    {
      if (!*(unsigned char *)(a1 + 51)
        || (uint64_t v10 = *(void *)(a1 + 40),
            [v8 size],
            (*(unsigned int (**)(uint64_t))(v10 + 16))(v10)))
      {
        id v11 = v9;
        goto LABEL_8;
      }
    }
    if (!a2) {
      break;
    }
    --a2;
  }
  id v11 = 0;
LABEL_8:

  return v11;
}

void sub_1008FA7AC(uint64_t a1)
{
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000;
  uint64_t v13 = sub_100104104;
  long long v14 = sub_100104900;
  uint64_t v2 = [BrowseManager alloc];
  id v3 = [*(id *)(a1 + 48) nearbyCacheKeyForTraits:*(void *)(a1 + 32)];
  long long v15 = [(BrowseManager *)v2 initWithCacheKey:v3];

  id v4 = [(id)v11[5] cachedCategoriesForTraits:*(void *)(a1 + 32)];
  id v5 = [v4 count];

  if (v5)
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    uint64_t v6 = (void *)v11[5];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1008FA934;
    v7[3] = &unk_1012F2908;
    int v9 = &v10;
    id v8 = *(id *)(a1 + 40);
    [v6 getCategoriesWithCompletion:v7];
  }
  _Block_object_dispose(&v10, 8);
}

void sub_1008FA91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1008FA934(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = 0;
  id v10 = a3;
  id v7 = a2;

  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = [v7 count];

  (*(void (**)(uint64_t, BOOL, id))(v8 + 16))(v8, v9 != 0, v10);
}

void sub_1008FA9D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    (*(void (**)(void, id, id))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), [*(id *)(a1 + 56) alreadyHasCategoriesForTraits:*(void *)(a1 + 32)], v5);
  }
  else
  {
    +[BrowseManager updateMapRegionInTraits:*(void *)(a1 + 32) withLocation:a2];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_1008FAD28(uint64_t a1, void *a2)
{
  id v3 = [a2 categoryResultsCache];
  [v3 removeObjectForKey:*(void *)(a1 + 32)];
}

void sub_1008FB014(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + 56);
    id v9 = *(void **)(a1 + 32);
    id v10 = a3;
    id v11 = a2;
    uint64_t v12 = [v9 sectionHeader];
    uint64_t v13 = [*(id *)(a1 + 32) boundingRegion];
    (*(void (**)(uint64_t, void, void *, void, void *, id))(v8 + 16))(v8, 0, v12, 0, v13, v7);
  }
  else
  {
    if (a2) {
      long long v14 = a2;
    }
    else {
      long long v14 = a3;
    }
    id v15 = v14;
    long long v16 = *(void **)(a1 + 40);
    id v17 = a3;
    id v18 = a2;
    uint64_t v19 = [v16 contentCache];
    id v25 = _NSConcreteStackBlock;
    uint64_t v26 = 3221225472;
    __int16 v27 = sub_1008FB1FC;
    long long v28 = &unk_1013002A0;
    id v29 = v15;
    id v30 = *(id *)(a1 + 48);
    id v20 = v15;
    [v19 updateCacheWithBlock:&v25];

    uint64_t v21 = *(void *)(a1 + 56);
    __int16 v22 = [*(id *)(a1 + 32) sectionHeader:v25, v26, v27, v28];
    uint64_t v23 = [*(id *)(a1 + 32) searchAutoRedoThreshold];
    __int16 v24 = [*(id *)(a1 + 32) boundingRegion];
    (*(void (**)(uint64_t, id, void *, void *, void *, void))(v21 + 16))(v21, v20, v22, v23, v24, 0);
  }
}

void sub_1008FB1FC(uint64_t a1, void *a2)
{
  id v3 = [a2 categoryResultsCache];
  [v3 setObject:*(void *)(a1 + 32) forKey:*(void *)(a1 + 40)];
}

void sub_1008FB6BC(uint64_t a1)
{
}

uint64_t sub_1008FB6C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1008FB81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a3 != 0);
  }
  return result;
}

id sub_1008FB9B8(uint64_t a1)
{
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);

  return _[v2 prepareImagesForCacheKey:v3 traits:v4 completion:0];
}

uint64_t sub_1008FB9F8(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16))();
  }
  return result;
}

void sub_1008FBCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1008FBD14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) cachedCategories];
  (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v2, 0);
}

void sub_1008FBD74(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) == *(void *)(*(void *)(a1 + 32) + 8))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a1 + 40);
      if (v8) {
        (*(void (**)(uint64_t, void, void *))(v8 + 16))(v8, 0, v7);
      }
    }
    else
    {
      id v9 = sub_1008F8168();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        int v15 = 138412290;
        id v16 = v5;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "The resposne for browse categories: %@", (uint8_t *)&v15, 0xCu);
      }

      id v10 = [*(id *)(a1 + 32) contentCache];
      [v10 setGeoCategories:v5];

      id v11 = [*(id *)(a1 + 32) contentCache];
      [v11 writeCategories];

      [*(id *)(a1 + 32) getBatchNearby];
      uint64_t v12 = *(void *)(a1 + 40);
      if (v12)
      {
        uint64_t v13 = [*(id *)(a1 + 32) cachedCategories];
        (*(void (**)(uint64_t, void *, void))(v12 + 16))(v12, v13, 0);
      }
    }
    long long v14 = +[NSNotificationCenter defaultCenter];
    [v14 postNotificationName:@"BrowseManagerDidUpdateCategories" object:*(void *)(a1 + 32)];
  }
}

void sub_1008FC038(id a1, BrowseManagerContentCache *a2)
{
}

void sub_1008FC22C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "BrowseManager");
  id v2 = (void *)qword_10160FF88;
  qword_10160FF88 = (uint64_t)v1;
}

void sub_1008FC270(id a1)
{
  os_log_t v1 = +[NSFileManager defaultManager];
  uint64_t v2 = [v1 URLForDirectory:13 inDomain:1 appropriateForURL:0 create:1 error:0];
  uint64_t v3 = (void *)qword_10160FF98;
  qword_10160FF98 = v2;

  if (qword_10160FF98)
  {
    uint64_t v4 = [(id)qword_10160FF98 URLByAppendingPathComponent:@"Maps"];
    id v5 = (void *)qword_10160FF98;
    qword_10160FF98 = v4;

    id v6 = +[NSFileManager defaultManager];
    id v7 = [(id)qword_10160FF98 path];
    unsigned __int8 v8 = [v6 fileExistsAtPath:v7];

    if ((v8 & 1) == 0)
    {
      id v9 = +[NSFileManager defaultManager];
      [v9 createDirectoryAtURL:qword_10160FF98 withIntermediateDirectories:1 attributes:0 error:0];
    }
  }
}

void sub_1008FC8DC(id a1, MapsDebugTableSection *a2)
{
  uint64_t v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Order" placeholderText:@"order" inputType:1 defaultsKey:@"AddressBookSearchOrderKey"];
  id v3 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Limit" placeholderText:@"limit" inputType:1 defaultsKey:@"AddressBookSearchLimitKey"];
}

void sub_1008FC968(id a1, MapsDebugTableSection *a2)
{
  uint64_t v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Order" placeholderText:@"order" inputType:1 defaultsKey:@"RecentsSeachOrderKey"];
  id v3 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Limit" placeholderText:@"limit" inputType:1 defaultsKey:@"RecentsSearchLimitKey"];
}

void sub_1008FC9F4(id a1, MapsDebugTableSection *a2)
{
  uint64_t v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Order" placeholderText:@"order" inputType:1 defaultsKey:@"HistorySearchOrderKey"];
  id v3 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Limit" placeholderText:@"limit" inputType:1 defaultsKey:@"HistorySearchLimitKey"];
}

void sub_1008FCA80(id a1, MapsDebugTableSection *a2)
{
  uint64_t v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Request Interval(Cellular)", @"(seconds)", 0, MapKitConfig_SearchCompleteRequestIntervalCellular[0], MapKitConfig_SearchCompleteRequestIntervalCellular[1] placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Request Interval(Other)", @"(seconds)", 0, MapKitConfig_SearchCompleteRequestInterval[0], MapKitConfig_SearchCompleteRequestInterval[1] placeholderText inputType geoConfigKeyDouble];
}

void sub_1008FCB1C(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addButtonRowWithTitle:@"Remove All Local Overrides" action:&stru_101300530];
  [(MapsDebugTableSection *)v3 setFooter:@"This does not reset any network defaults."];
}

void sub_1008FCB80(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"AddressBookSearchOrderKey"];
  [v1 removeObjectForKey:@"AddressBookSearchLimitKey"];
  [v1 removeObjectForKey:@"RecentsSeachOrderKey"];
  [v1 removeObjectForKey:@"RecentsSearchLimitKey"];
  [v1 removeObjectForKey:@"HistorySearchOrderKey"];
  [v1 removeObjectForKey:@"HistorySearchLimitKey"];
}

void sub_1008FD440(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    if (v4)
    {
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
      id v3 = 0;
    }
  }
}

uint64_t sub_1008FD5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void sub_1008FD7A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000A930C();
  unsigned __int8 v8 = v7;
  if (v6)
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    int v14 = 138412290;
    id v15 = v6;
    id v9 = "Prompt to unlock failed: %@";
    id v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_ERROR;
    uint32_t v12 = 12;
  }
  else
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
      goto LABEL_7;
    }
    LOWORD(v14) = 0;
    id v9 = "Prompt to unlock succeeded";
    id v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_INFO;
    uint32_t v12 = 2;
  }
  _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, (uint8_t *)&v14, v12);
LABEL_7:

  uint64_t v13 = *(void *)(a1 + 32);
  if (v13) {
    (*(void (**)(uint64_t, id))(v13 + 16))(v13, v6);
  }
}

void sub_1008FE104(uint64_t a1, char a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1008FE180;
  v2[3] = &unk_1012E6300;
  char v3 = a2;
  v2[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

id sub_1008FE180(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  char v3 = sub_1000A930C();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "AppLaunchAddressCorrectionAlert: presenting alert", buf, 2u);
    }

    *(unsigned char *)(*(void *)(a1 + 32) + 8) = 1;
    return [*(id *)(a1 + 32) _displayAlert];
  }
  else
  {
    if (v4)
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "AppLaunchAddressCorrectionAlert: no need to be displayed", v6, 2u);
    }

    return [*(id *)(a1 + 32) _alertDidFinishProcessing];
  }
}

void sub_1008FE6EC(uint64_t a1)
{
  char BOOL = GEOConfigGetBOOL();
  char v3 = +[MKSystemController sharedInstance];
  if (![v3 isInternalInstall])
  {

LABEL_8:
    if ((BOOL & 1) == 0) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  int HasValue = _GEOConfigHasValue();

  if (!HasValue) {
    goto LABEL_8;
  }
  if ((GEOConfigGetBOOL() & 1) == 0)
  {
LABEL_4:
    id v5 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v5();
    return;
  }
LABEL_9:
  id v6 = objc_alloc_init((Class)ACAccountStore);
  id v7 = [v6 aa_primaryAppleAccount];
  unsigned __int8 v8 = v7;
  if (v7 && !objc_msgSend(v7, "aa_isManagedAppleID"))
  {
    id v9 = objc_alloc_init((Class)RTRoutineManager);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1008FE880;
    v10[3] = &unk_1012E7760;
    id v11 = *(id *)(a1 + 32);
    [v9 fetchRoutineStateWithHandler:v10];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

uint64_t sub_1008FE880(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1008FEAA0(uint64_t a1, unint64_t a2)
{
  BOOL v4 = sub_1000A930C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 134217984;
    unint64_t v21 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "AppLaunchAddressCorrectionAlert: buttonIndedouble x = %ld", buf, 0xCu);
  }

  if (qword_1015F38F8 != a2)
  {
    if ((unint64_t)[*(id *)(a1 + 32) count] <= a2)
    {
      uint64_t v6 = 3;
    }
    else
    {
      id v5 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a2];
      uint64_t v6 = (uint64_t)[v5 unsignedIntegerValue];
    }
    id v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      unint64_t v21 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "AppLaunchAddressCorrectionAlert: outcome = %ld", buf, 0xCu);
    }

    unsigned __int8 v8 = +[NSBundle bundleWithPath:@"/System/Library/LocationBundles/AppGenius.bundle"];
    switch(v6)
    {
      case 3:
        uint64_t v13 = +[OBPrivacyPresenter presenterForPrivacySplashWithIdentifier:@"com.apple.onboarding.improvemaps"];
        int v14 = +[UIApplication sharedMapsDelegate];
        id v15 = [v14 chromeViewController];
        id v16 = [v15 _maps_mapsSceneDelegate];
        id v17 = [v16 topMostPresentedViewController];
        [v13 setPresentingViewController:v17];

        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_1008FEE04;
        v19[3] = &unk_1012E5D08;
        void v19[4] = *(void *)(a1 + 40);
        [v13 setDismissHandler:v19];
        [v13 present];

        break;
      case 2:
        id v18 = +[NSUserDefaults standardUserDefaults];
        [v18 setBool:1 forKey:@"HasAcknowledgedAddressCorrectionAlert2021"];

        GEOConfigSetInteger();
        if (*(unsigned char *)(a1 + 48)) {
          +[CLLocationManager setAuthorizationStatusByType:2 forBundle:v8];
        }
        id v10 = +[MKMapService sharedService];
        id v11 = v10;
        uint64_t v12 = 29;
        goto LABEL_19;
      case 1:
        id v9 = +[NSUserDefaults standardUserDefaults];
        [v9 setBool:1 forKey:@"HasAcknowledgedAddressCorrectionAlert2021"];

        GEOConfigSetInteger();
        if (*(unsigned char *)(a1 + 48)) {
          +[CLLocationManager setAuthorizationStatusByType:3 forBundle:v8];
        }
        id v10 = +[MKMapService sharedService];
        id v11 = v10;
        uint64_t v12 = 28;
LABEL_19:
        [v10 captureUserAction:v12 onTarget:641 eventValue:0];

        [*(id *)(a1 + 40) _alertDidFinishProcessing];
        break;
    }
  }
}

id sub_1008FEE04(uint64_t a1)
{
  return [*(id *)(a1 + 32) _displayAlert];
}

id sub_1008FF764(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setImage:a2];
}

id sub_1008FF770(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setImage:a2];
}

void sub_1008FFBC0(id a1)
{
  uint64_t v1 = objc_opt_new();
  int v2 = (void *)qword_10160FFA8;
  qword_10160FFA8 = v1;

  [(id)qword_10160FFA8 setDateStyle:0];
  char v3 = (void *)qword_10160FFA8;

  [v3 setTimeStyle:1];
}

void sub_100900134(id a1)
{
  uint64_t v1 = objc_opt_new();
  int v2 = (void *)qword_10160FFB8;
  qword_10160FFB8 = v1;
}

void sub_100900170()
{
  if (!qword_10160FFC8)
  {
    uint64_t v0 = +[NSBundle bundleWithIdentifier:@"com.apple.MapsSuggestions"];
    uint64_t v1 = (void *)qword_10160FFC8;
    qword_10160FFC8 = v0;

    if (!qword_10160FFC8)
    {
      int v2 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
      {
        int v3 = 136446978;
        BOOL v4 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Suggestions/MapsSuggestionsDefines.h";
        __int16 v5 = 1024;
        int v6 = 324;
        __int16 v7 = 2082;
        unsigned __int8 v8 = "NSBundle * _Nonnull _MapsSuggestionsBundle(const char * _Nonnull)_block_invoke";
        __int16 v9 = 2082;
        id v10 = "nil == s_bundleWithMapsSuggestionsIdentifier";
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "At %{public}s:%d, %{public}s forbids: %{public}s. Requires bundleWithIdentifier:@\"com.apple.MapsSuggestions\"", (uint8_t *)&v3, 0x26u);
      }
    }
  }
}

void sub_10090242C(id a1)
{
  uint64_t v1 = +[NSCalendar calendarWithIdentifier:NSCalendarIdentifierGregorian];
  int v2 = (void *)qword_10160FFE0;
  qword_10160FFE0 = v1;
}

void sub_100904918(uint64_t a1, void *a2)
{
  int v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 taggedButtonsView];
  [v4 addSubview:v3];
}

BOOL sub_100905354(id a1, CarFocusableButton *a2, unint64_t a3, BOOL *a4)
{
  return [(CarFocusableButton *)a2 canBecomeFocused];
}

void sub_100905A08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100905A30(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!a3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100905AF0;
    v6[3] = &unk_1012E6690;
    objc_copyWeak(&v8, (id *)(a1 + 32));
    id v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }
}

void sub_100905AF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateSuggestions:*(void *)(a1 + 32)];
}

void sub_100905B40(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!a3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100905C00;
    v6[3] = &unk_1012E6690;
    objc_copyWeak(&v8, (id *)(a1 + 32));
    id v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }
}

void sub_100905C00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateSuggestions:*(void *)(a1 + 32)];
}

void sub_100906488(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _passKitLibraryMayHaveChanged];
    id WeakRetained = v2;
  }
}

uint64_t sub_100906538(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

void sub_100906BD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100906BF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    id v3 = [*(id *)(a1 + 32) devicePrimaryPaymentApplication];
    id v4 = [v3 supportedTransitNetworkIdentifiers];
    id v5 = [v4 firstObject];

    if (v5)
    {
      uint64_t v6 = [*(id *)(*(void *)(a1 + 40) + 32) objectForKey:v5];
      if (!v6)
      {
        id v7 = sub_100021338();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "We did not get a localizedDisplayName name for the pass, which is expected if the card is non-DCI. Falling back to localizedDescription", buf, 2u);
        }

        uint64_t v6 = [*(id *)(a1 + 32) localizedDescription];
      }
      CFStringRef v62 = v5;
      id v8 = [*(id *)(a1 + 32) transitProperties];
      __int16 v9 = [v8 displayableBalance];
      long long v61 = [WeakRetained _messageFromBalance:v9 passName:v6];

      long long v66 = 0u;
      long long v67 = 0u;
      long long v64 = 0u;
      long long v65 = 0u;
      id v10 = *(id *)(a1 + 48);
      id v11 = [v10 countByEnumeratingWithState:&v64 objects:v76 count:16];
      long long v63 = (void *)v6;
      if (v11)
      {
        id v59 = WeakRetained;
        uint64_t v12 = *(void *)v65;
        while (2)
        {
          for (i = 0; i != v11; i = (char *)i + 1)
          {
            if (*(void *)v65 != v12) {
              objc_enumerationMutation(v10);
            }
            int v14 = *(void **)(*((void *)&v64 + 1) + 8 * i);
            id v15 = [*(id *)(a1 + 32) devicePrimaryPaymentApplication];
            id v16 = [v15 supportedTransitNetworkIdentifiers];
            id v17 = [v14 identifier];
            unsigned int v18 = [v16 containsObject:v17];

            if (v18)
            {
              id v11 = v14;
              goto LABEL_17;
            }
          }
          id v11 = [v10 countByEnumeratingWithState:&v64 objects:v76 count:16];
          if (v11) {
            continue;
          }
          break;
        }
LABEL_17:
        id WeakRetained = v59;
        uint64_t v6 = (uint64_t)v63;
      }

      uint64_t v19 = sub_100021338();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        unsigned int v20 = [*(id *)(a1 + 32) isRemotePass];
        CFStringRef v21 = @"iPhone";
        if (v20) {
          CFStringRef v21 = @"Apple Watch";
        }
        *(_DWORD *)buf = 138412290;
        CFStringRef v69 = v21;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Showing tip for the device: %@", buf, 0xCu);
      }

      id v22 = objc_alloc((Class)NSString);
      id v23 = v11;
      __int16 v24 = +[NSBundle mainBundle];
      id v25 = [v24 localizedStringForKey:@"MAPS_TRANSIT_PAY_OPEN_WALLET_ACTION_RELOAD" value:@"localized string not found" table:0];

      if (v23)
      {
        switch([v23 addValueNameType])
        {
          case 0u:
          case 1u:
            goto LABEL_31;
          case 2u:
            uint64_t v26 = +[NSBundle mainBundle];
            __int16 v27 = v26;
            CFStringRef v28 = @"MAPS_TRANSIT_PAY_OPEN_WALLET_ACTION_TOP_UP";
            goto LABEL_35;
          case 3u:
            uint64_t v26 = +[NSBundle mainBundle];
            __int16 v27 = v26;
            CFStringRef v28 = @"MAPS_TRANSIT_PAY_OPEN_WALLET_ACTION_REFILL";
            goto LABEL_35;
          case 4u:
            uint64_t v26 = +[NSBundle mainBundle];
            __int16 v27 = v26;
            CFStringRef v28 = @"MAPS_TRANSIT_PAY_OPEN_WALLET_ACTION_LOAD";
LABEL_35:
            id v31 = [v26 localizedStringForKey:v28 value:@"localized string not found" table:0];

            break;
          default:
            id v31 = 0;
            break;
        }
      }
      else
      {
        id v30 = sub_100021338();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, "Could not find an associated payment method for the given pass. This should never happen - using a default \"reload\" string", buf, 2u);
        }

LABEL_31:
        id v31 = v25;
      }

      id v60 = [v22 initWithFormat:v31, v6];
      id v58 = objc_alloc((Class)NSString);
      unsigned int v32 = [*(id *)(a1 + 32) isRemotePass];
      id v33 = v23;
      id v34 = +[NSBundle mainBundle];
      unint64_t v35 = [v34 localizedStringForKey:@"MAPS_TRANSIT_PAY_LOW_BALANCE_SUBTITLE_RELOAD_FOR_IPHONE" value:@"localized string not found" table:0];

      unint64_t v36 = +[NSBundle mainBundle];
      id v37 = [v36 localizedStringForKey:@"MAPS_TRANSIT_PAY_LOW_BALANCE_SUBTITLE_RELOAD_FOR_WATCH" value:@"localized string not found" table:0];

      if (v23)
      {
        switch([v33 addValueNameType])
        {
          case 0u:
          case 1u:
            goto LABEL_42;
          case 2u:
            id v38 = +[NSBundle mainBundle];
            unsigned int v39 = [v38 localizedStringForKey:@"MAPS_TRANSIT_PAY_LOW_BALANCE_SUBTITLE_TOP_UP_FOR_IPHONE" value:@"localized string not found" table:0];

            long long v40 = +[NSBundle mainBundle];
            long long v41 = v40;
            CFStringRef v42 = @"MAPS_TRANSIT_PAY_LOW_BALANCE_SUBTITLE_TOP_UP_FOR_WATCH";
            goto LABEL_49;
          case 3u:
            unint64_t v46 = +[NSBundle mainBundle];
            unsigned int v39 = [v46 localizedStringForKey:@"MAPS_TRANSIT_PAY_LOW_BALANCE_SUBTITLE_REFILL_FOR_IPHONE" value:@"localized string not found" table:0];

            long long v40 = +[NSBundle mainBundle];
            long long v41 = v40;
            CFStringRef v42 = @"MAPS_TRANSIT_PAY_LOW_BALANCE_SUBTITLE_REFILL_FOR_WATCH";
            goto LABEL_49;
          case 4u:
            unint64_t v47 = +[NSBundle mainBundle];
            unsigned int v39 = [v47 localizedStringForKey:@"MAPS_TRANSIT_PAY_LOW_BALANCE_SUBTITLE_LOAD_FOR_IPHONE" value:@"localized string not found" table:0];

            long long v40 = +[NSBundle mainBundle];
            long long v41 = v40;
            CFStringRef v42 = @"MAPS_TRANSIT_PAY_LOW_BALANCE_SUBTITLE_LOAD_FOR_WATCH";
LABEL_49:
            unsigned int v48 = [v40 localizedStringForKey:v42 value:@"localized string not found" table:0];

            if (v32) {
              unsigned int v49 = v48;
            }
            else {
              unsigned int v49 = v39;
            }
            id v45 = v49;

            break;
          default:
            id v45 = 0;
            break;
        }
      }
      else
      {
        unsigned int v43 = sub_100021338();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_INFO, "Could not find an associated payment method for the given pass. This should never happen - using a default \"reload\" string", buf, 2u);
        }

LABEL_42:
        if (v32) {
          id v44 = v37;
        }
        else {
          id v44 = v35;
        }
        id v45 = v44;
      }

      id v50 = [v58 initWithFormat:v45, v63];
      __int16 v51 = [TransitPayModelData alloc];
      uint64_t v52 = [WeakRetained _exclamationMarkImage];
      id v53 = [*(id *)(a1 + 32) uniqueID];
      LOBYTE(v57) = [*(id *)(a1 + 32) isRemotePass];
      long long v54 = [(TransitPayModelData *)v51 initWithTitle:v61 subtitle:v50 actionTitle:v60 image:v52 paymentMethod:v33 topUpPassUniqueID:v53 isForRemoteDevice:v57];

      LOBYTE(v52) = [(TransitPayModelData *)v54 hasAllNeededText];
      unsigned __int8 v55 = sub_100021338();
      BOOL v56 = os_log_type_enabled(v55, OS_LOG_TYPE_INFO);
      if (v52)
      {
        if (v56)
        {
          *(_DWORD *)buf = 138412290;
          CFStringRef v69 = (const __CFString *)v54;
          _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_INFO, "Calling completion() with modelData: %@", buf, 0xCu);
        }

        (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
        id v5 = (__CFString *)v62;
      }
      else
      {
        id v5 = (__CFString *)v62;
        if (v56)
        {
          *(_DWORD *)buf = 138413058;
          CFStringRef v69 = v62;
          __int16 v70 = 2112;
          id v71 = v50;
          __int16 v72 = 2112;
          v73 = v61;
          __int16 v74 = 2112;
          id v75 = v60;
          _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_INFO, "Something is nil in the message. Can't show topup. !\nidentifier:%@\nsubtitle:%@\nmessage:%@\nactionTitle:%@", buf, 0x2Au);
        }

        (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
      }
    }
    else
    {
      id v29 = sub_100021338();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "Pass does not have any transit network identifiers", buf, 2u);
      }

      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
  }
}

BOOL sub_100907498(id a1, PKSecureElementPass *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v6 = a2;
  if ([(PKSecureElementPass *)v6 isTransitPass])
  {
LABEL_21:
    BOOL v9 = 0;
    goto LABEL_22;
  }
  id v7 = [(PKSecureElementPass *)v6 devicePrimaryPaymentApplication];
  id v8 = [v7 state];

  if (v8 != (id)1)
  {
    id v10 = sub_100021338();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      id v11 = v6;
      id v12 = objc_alloc((Class)NSString);
      uint64_t v13 = [(PKSecureElementPass *)v11 localizedDescription];
      int v14 = (void *)v13;
      if (v13)
      {
        int v15 = 0;
        CFStringRef v16 = (const __CFString *)v13;
      }
      else
      {
        uint64_t v17 = [(PKSecureElementPass *)v11 organizationName];
        id v4 = (void *)v17;
        if (v17)
        {
          int v15 = 0;
          CFStringRef v16 = (const __CFString *)v17;
        }
        else
        {
          uint64_t v18 = [(PKSecureElementPass *)v11 localizedName];
          id v5 = (void *)v18;
          if (v18) {
            CFStringRef v16 = (const __CFString *)v18;
          }
          else {
            CFStringRef v16 = @"{pass has no description}";
          }
          int v15 = 1;
        }
      }
      unsigned int v19 = [(PKSecureElementPass *)v11 isRemotePass];
      CFStringRef v20 = @"NO";
      if (v19) {
        CFStringRef v20 = @"YES";
      }
      id v21 = [v12 initWithFormat:@"%@: %@, isRemote: %@", v11, v16, v20];
      if (v15) {

      }
      if (!v14) {
      *(_DWORD *)buf = 138412290;
      }
      id v24 = v21;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Filtering a non-active card: %@", buf, 0xCu);
    }
    goto LABEL_21;
  }
  BOOL v9 = 1;
LABEL_22:

  return v9;
}

BOOL sub_100907C98(id a1, PKSecureElementPass *a2, unint64_t a3, BOOL *a4)
{
  return [(PKSecureElementPass *)a2 isTransitPass];
}

void sub_1009080E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 devicePrimaryPaymentApplication];
  [v4 paymentNetworkIdentifier];
  id v5 = PKLegacyTransitNetworkIdentifierForCredentialType();

  if (v5)
  {
    uint64_t v6 = [v3 localizedDescription];

    if (v6)
    {
      uint64_t v7 = [v3 localizedDescription];
LABEL_6:
      BOOL v9 = (void *)v7;
      [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:v5];

      goto LABEL_7;
    }
    id v8 = [*(id *)(*(void *)(a1 + 40) + 32) objectForKeyedSubscript:v5];

    if (v8)
    {
      uint64_t v7 = [*(id *)(*(void *)(a1 + 40) + 32) objectForKeyedSubscript:v5];
      goto LABEL_6;
    }
    id v10 = sub_100021338();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Pass %@ does not have localizedDescription or localizedDisplayName", (uint8_t *)&v11, 0xCu);
    }

    [*(id *)(a1 + 32) setObject:@"No pass description available" forKeyedSubscript:v5];
  }
LABEL_7:
}

void sub_100908460(uint64_t a1, void *a2)
{
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id obj = a2;
  id v3 = [obj countByEnumeratingWithState:&v21 objects:v26 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v16 = *(void *)v22;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v22 != v16) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v21 + 1) + 8 * (void)v5);
        long long v17 = 0u;
        long long v18 = 0u;
        long long v19 = 0u;
        long long v20 = 0u;
        uint64_t v7 = [v6 identifiers];
        id v8 = [v7 countByEnumeratingWithState:&v17 objects:v25 count:16];
        if (v8)
        {
          id v9 = v8;
          uint64_t v10 = *(void *)v18;
          do
          {
            int v11 = 0;
            do
            {
              if (*(void *)v18 != v10) {
                objc_enumerationMutation(v7);
              }
              uint64_t v12 = *(void *)(*((void *)&v17 + 1) + 8 * (void)v11);
              if (v12)
              {
                uint64_t v13 = [v6 localizedDisplayName];

                if (v13)
                {
                  int v14 = [v6 localizedDisplayName];
                  [*(id *)(*(void *)(a1 + 32) + 32) setObject:v14 forKeyedSubscript:v12];
                }
              }
              int v11 = (char *)v11 + 1;
            }
            while (v9 != v11);
            id v9 = [v7 countByEnumeratingWithState:&v17 objects:v25 count:16];
          }
          while (v9);
        }

        id v5 = (char *)v5 + 1;
      }
      while (v5 != v4);
      id v4 = [obj countByEnumeratingWithState:&v21 objects:v26 count:16];
    }
    while (v4);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100908818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100908834(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 9);
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _fetchAllAvailablePassesFromWallet];
    uint64_t v6 = [a1[4] _userTransitPassesFromLibrary:v3];
    uint64_t v7 = [a1[4] _defaultPaymentCardsFromLibrary:v3];
    if (![v6 count] && !objc_msgSend(v7, "count"))
    {
      (*((void (**)(void))a1[8] + 2))();
      id v8 = sub_100021338();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "Must have transit passes OR a default payment card", buf, 2u);
      }
      goto LABEL_31;
    }
    id v8 = [a1[4] _identifiersForSecurePasses:v6];
    id v9 = a1[4];
    id v10 = [v7 copy];
    int v11 = [v9 _identifiersForSecurePasses:v10];

    id v12 = a1[4];
    id v13 = [v7 copy];
    int v14 = [v12 _defaultPaymentCardExpressStatuses:v13];

    if (![a1[6] count] || !objc_msgSend(a1[7], "count"))
    {
      sub_100021338();
      int v15 = (TransitPayModelDataProvider *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(&v15->super, OS_LOG_TYPE_ERROR))
      {
        id v20 = [a1[6] count];
        id v21 = [a1[7] count];
        *(_DWORD *)buf = 134218240;
        id v33 = v20;
        __int16 v34 = 2048;
        id v35 = v21;
        _os_log_impl((void *)&_mh_execute_header, &v15->super, OS_LOG_TYPE_ERROR, "Either paymentMethods is empty (%lu) or suggestions is empty (%lu).", buf, 0x16u);
      }
      goto LABEL_30;
    }
    CFStringRef v28 = v11;
    int v15 = [[TransitPayModelDataProvider alloc] initWithTransitPaymentMethods:a1[6] suggestions:a1[7] isTourist:*((unsigned __int8 *)a1[4] + 24) defaultPaymentCardsIdentifiers:v11 defaultPaymentCardsExpressStatuses:v14 userClosedLoopIdentifiers:v8 availablePasses:*((void *)a1[4] + 4)];
    if ([v8 count])
    {
      uint64_t v16 = [a1[4] transitSystemsForRoute:a1[5] withSupportedPaymentMethods:a1[6]];
      if ([v16 count])
      {
        __int16 v27 = v14;
        long long v17 = [v5 currencyAmountForRoute:a1[5]];
        long long v18 = [v5 _passForTopUpWithTransitPasses:v6 forRouteTNIs:v16 routeCost:v17];

        if (v18)
        {
          id v19 = a1[6];
          v29[0] = _NSConcreteStackBlock;
          v29[1] = 3221225472;
          v29[2] = sub_100908D20;
          v29[3] = &unk_101300700;
          id v31 = a1[8];
          id v30 = a1[5];
          [v5 _transitTopUpMessageForPass:v18 paymentMethods:v19 completion:v29];

          int v14 = v27;
LABEL_29:

          int v11 = v28;
LABEL_30:

LABEL_31:
          goto LABEL_32;
        }
        long long v22 = sub_100021338();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "Found no pass to top up", buf, 2u);
        }
        int v14 = v27;
      }
      else
      {
        long long v22 = sub_100021338();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "There are no supported transit identifiers for this route", buf, 2u);
        }
      }

      (*((void (**)(void))a1[8] + 2))();
    }
    long long v23 = sub_100021338();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Not top up scenario. Checking to show regular tips.", buf, 2u);
    }

    uint64_t v16 = [(TransitPayModelDataProvider *)v15 modelData];
    unsigned __int8 v24 = [v16 hasAllNeededText];
    if (v16 && (v24 & 1) != 0)
    {
      id v25 = (void (*)(void))*((void *)a1[8] + 2);
    }
    else
    {
      uint64_t v26 = sub_100021338();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "Either title, subtitle or actionTitle is missing. Or modelData is nil. Returning nil from TransitPassManager.", buf, 2u);
      }

      id v25 = (void (*)(void))*((void *)a1[8] + 2);
    }
    v25();
    goto LABEL_29;
  }
LABEL_32:
}

uint64_t sub_100908D20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), a2);
}

void sub_100909514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

id sub_10090956C(uint64_t a1, void *a2)
{
  return _[a2 isContactlessPaymentSupportedForTransitNetworks:*(void *)(a1 + 32)];
}

uint64_t sub_100909578(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = [v3 isRemotePass];
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = [v3 uniqueID];
  if (v4)
  {
    unsigned int v7 = [v5 isExpressModeEnabledForRemotePassUniqueIdentifier:v6];

    if (!v7)
    {
LABEL_3:
      uint64_t v8 = 0;
      goto LABEL_17;
    }
  }
  else
  {
    unsigned __int8 v9 = [v5 isExpressModeEnabledForPassUniqueIdentifier:v6];

    if ((v9 & 1) == 0) {
      goto LABEL_3;
    }
  }
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v10 = [v3 availableActions];
  id v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v19;
    while (2)
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(void *)v19 != v13) {
          objc_enumerationMutation(v10);
        }
        if ([*(id *)(*((void *)&v18 + 1) + 8 * i) type] == (id)1)
        {

          uint64_t v8 = 1;
          goto LABEL_17;
        }
      }
      id v12 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v12) {
        continue;
      }
      break;
    }
  }

  int v15 = sub_100021338();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Wallet does not support top up for this pass", v17, 2u);
  }

  uint64_t v8 = 0;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
LABEL_17:

  return v8;
}

uint64_t sub_100909740(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  uint64_t v6 = [v5 availableActions];
  id v7 = [v6 countByEnumeratingWithState:&v31 objects:v35 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v32;
    while (2)
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v32 != v9) {
          objc_enumerationMutation(v6);
        }
        if ([*(id *)(*((void *)&v31 + 1) + 8 * i) type] == (id)1)
        {
          int v11 = 0;
          goto LABEL_12;
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v31 objects:v35 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }

  uint64_t v6 = sub_100021338();
  int v11 = 1;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Wallet does not support top up for this pass", buf, 2u);
  }
LABEL_12:

  unsigned int v12 = [*(id *)(a1 + 32) _balanceIsLessThanRouteCost:*(void *)(a1 + 40) forPass:v5];
  unsigned int v13 = v12;
  if ((v11 & 1) == 0 && (v12 & 1) == 0)
  {
    int v14 = sub_100021338();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      id v15 = v5;
      id v16 = objc_alloc((Class)NSString);
      uint64_t v17 = [v15 localizedDescription];
      long long v18 = (void *)v17;
      id v29 = a3;
      if (v17)
      {
        int v19 = 0;
        CFStringRef v20 = (const __CFString *)v17;
      }
      else
      {
        uint64_t v21 = [v15 organizationName];
        if (v21)
        {
          int v19 = 0;
          CFStringRef v28 = (void *)v21;
          CFStringRef v20 = (const __CFString *)v21;
        }
        else
        {
          uint64_t v22 = [v15 localizedName];
          __int16 v27 = (void *)v22;
          CFStringRef v28 = 0;
          if (v22) {
            CFStringRef v20 = (const __CFString *)v22;
          }
          else {
            CFStringRef v20 = @"{pass has no description}";
          }
          int v19 = 1;
        }
      }
      unsigned int v23 = [v15 isRemotePass];
      CFStringRef v24 = @"NO";
      if (v23) {
        CFStringRef v24 = @"YES";
      }
      id v25 = [v16 initWithFormat:@"%@: %@, isRemote: %@", v15, v20, v24];
      if (v19) {

      }
      if (!v18) {
      *(_DWORD *)id v35 = 138412290;
      }
      id v36 = v25;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Found pass %@ that has a balance higher than the route cost, suppressing tip", v35, 0xCu);

      a3 = v29;
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    *a3 = 1;
  }

  return v13 & (v11 ^ 1);
}

id sub_10090A318(id a1, PKPass *a2, unint64_t a3)
{
  id v5 = a2;
  id v6 = objc_alloc((Class)NSString);
  uint64_t v7 = [(PKPass *)v5 localizedDescription];
  id v8 = (void *)v7;
  if (v7)
  {
    int v9 = 0;
    CFStringRef v10 = (const __CFString *)v7;
  }
  else
  {
    uint64_t v11 = [(PKPass *)v5 organizationName];
    id v3 = (void *)v11;
    if (v11)
    {
      int v9 = 0;
      CFStringRef v10 = (const __CFString *)v11;
    }
    else
    {
      uint64_t v12 = [(PKPass *)v5 localizedName];
      unsigned __int8 v4 = (void *)v12;
      if (v12) {
        CFStringRef v10 = (const __CFString *)v12;
      }
      else {
        CFStringRef v10 = @"{pass has no description}";
      }
      int v9 = 1;
    }
  }
  unsigned int v13 = [(PKPass *)v5 isRemotePass];
  CFStringRef v14 = @"NO";
  if (v13) {
    CFStringRef v14 = @"YES";
  }
  id v15 = [v6 initWithFormat:@"%@: %@, isRemote: %@", v5, v10, v14];
  if (v9) {

  }
  if (!v8) {

  }
  return v15;
}

void sub_10090A674(uint64_t a1)
{
  uint64_t v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned __int8 v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[EP] will _mergeTasks", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _mergeTasks];
}

void sub_10090A978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10090A99C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10090AA64;
  void v5[3] = &unk_101300808;
  objc_copyWeak(&v8, (id *)(a1 + 48));
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v6 = v3;
  uint64_t v7 = v4;
  [v2 performTaskWithCompletion:v5];

  objc_destroyWeak(&v8);
}

void sub_10090AA50(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10090AA64(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10090AB10;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v7, (id *)(a1 + 48));
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v5 = v2;
  uint64_t v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v7);
}

void sub_10090AB10(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained && [WeakRetained[7] containsObject:*(void *)(a1 + 32)])
  {
    [v3[7] removeObject:*(void *)(a1 + 32)];
    void v3[5] = (char *)v3[5] + 1;
  }
  dispatch_group_leave(*(dispatch_group_t *)(*(void *)(a1 + 40) + 32));
  uint64_t v4 = sub_1000A930C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[EP] addTask dispatch_group_leave task: %@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_10090B1C4(uint64_t a1)
{
  id v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "(tag %@) %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_10090B9DC(uint64_t a1)
{
  id v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__int16 v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[EP] ^processAlerts", v7, 2u);
  }

  uint64_t v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _displayLaunchAlertsIfNecessary];

  id v5 = objc_loadWeakRetained(v3);
  [v5 _configureTips];

  id v6 = objc_loadWeakRetained(v3);
  [v6 _unlockMergeActivities];
}

void sub_10090BA88(uint64_t a1)
{
  id v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[EP] ^processWelcomeAndAlerts", buf, 2u);
  }

  if (+[UIApplication _maps_isAnySceneForegroundForRole:_UIWindowSceneSessionTypeCoverSheet])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained _unlockMergeActivities];

    return;
  }
  id v4 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
  if ([v4 isCarPlayOnlyContext])
  {
  }
  else
  {
    unsigned __int8 v5 = +[UIApplication _maps_isAnySceneForegroundForRole:UIWindowSceneSessionRoleApplication];

    if (v5)
    {
      id v6 = [*(id *)(a1 + 40) scene];
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_10090BC08;
      v7[3] = &unk_1012E6EA8;
      id v8 = *(id *)(a1 + 48);
      +[MapsWelcomeScreenViewController presentWelcomeScreenIfNecessaryInScene:v6 completionBlock:v7];

      return;
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_10090BC08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10090BC18(uint64_t a1)
{
  id v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[EP] ContainerDidPresentContaineeNotification", v6, 2u);
  }

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    uint64_t v3 = +[NSNotificationCenter defaultCenter];
    [v3 removeObserver:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];

    uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
    unsigned __int8 v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = 0;

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

id sub_10090BE98(uint64_t a1)
{
  return [*(id *)(a1 + 32) _openURL:*(void *)(a1 + 40) referringURL:0 sourceApplication:0 session:0 sceneOptions:*(void *)(a1 + 48) mkOptions:*(void *)(a1 + 56) windowSize:*(double *)(a1 + 72) windowSize:*(double *)(a1 + 80)];
}

id sub_10090C510(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_continueUserActivity:session:windowSize:", *(void *)(a1 + 40), *(void *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

void sub_10090CDB0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 56));
  _Unwind_Resume(a1);
}

void sub_10090CDEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v36[0] = _NSConcreteStackBlock;
  v36[1] = 3221225472;
  v36[2] = sub_10090D40C;
  v36[3] = &unk_1012FB070;
  objc_copyWeak(v37, v4);
  [WeakRetained _addNavigationRowWithTitle:@"Visualization" section:v3 handler:v36];

  id v6 = objc_loadWeakRetained(v4);
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472;
  v34[2] = sub_10090D468;
  v34[3] = &unk_1012FB070;
  objc_copyWeak(&v35, v4);
  [v6 _addNavigationRowWithTitle:@"Locations" section:v3 handler:v34];

  id v7 = objc_loadWeakRetained(v4);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_10090D4C4;
  v32[3] = &unk_1012FB070;
  objc_copyWeak(&v33, v4);
  [v7 _addNavigationRowWithTitle:@"Routing" section:v3 handler:v32];

  id v8 = objc_loadWeakRetained(v4);
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_10090D520;
  v30[3] = &unk_1012FB070;
  objc_copyWeak(&v31, v4);
  [v8 _addNavigationRowWithTitle:@"ETA Updates" section:v3 handler:v30];

  id v9 = objc_loadWeakRetained(v4);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  v28[2] = sub_10090D57C;
  v28[3] = &unk_1012FB070;
  objc_copyWeak(&v29, v4);
  [v9 _addNavigationRowWithTitle:@"Audio" section:v3 handler:v28];

  id v10 = objc_loadWeakRetained(v4);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_10090D5D8;
  v26[3] = &unk_1012FB070;
  objc_copyWeak(&v27, v4);
  [v10 _addNavigationRowWithTitle:@"Transit" section:v3 handler:v26];

  id v11 = objc_loadWeakRetained(v4);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_10090D634;
  v24[3] = &unk_1012FB070;
  objc_copyWeak(&v25, v4);
  [v11 _addNavigationRowWithTitle:@"Custom Routes" section:v3 handler:v24];

  id v12 = objc_loadWeakRetained(v4);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10090D690;
  v22[3] = &unk_1012FB070;
  objc_copyWeak(&v23, v4);
  [v12 _addNavigationRowWithTitle:@"Time to Leave" section:v3 handler:v22];

  id v13 = objc_loadWeakRetained(v4);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_10090D6EC;
  v20[3] = &unk_1012FB070;
  objc_copyWeak(&v21, v4);
  [v13 _addNavigationRowWithTitle:@"Navigation Service" section:v3 handler:v20];

  id v14 = objc_loadWeakRetained(v4);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_10090D748;
  v18[3] = &unk_1012FB070;
  objc_copyWeak(&v19, v4);
  [v14 _addNavigationRowWithTitle:@"Preloading" section:v3 handler:v18];

  id v15 = objc_loadWeakRetained(v4);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10090D7A4;
  v16[3] = &unk_1012FB070;
  objc_copyWeak(&v17, v4);
  [v15 _addNavigationRowWithTitle:@"Thermal Mitigations" section:v3 handler:v16];

  objc_destroyWeak(&v17);
  objc_destroyWeak(&v19);
  objc_destroyWeak(&v21);
  objc_destroyWeak(&v23);
  objc_destroyWeak(&v25);
  objc_destroyWeak(&v27);
  objc_destroyWeak(&v29);
  objc_destroyWeak(&v31);
  objc_destroyWeak(&v33);
  objc_destroyWeak(&v35);
  objc_destroyWeak(v37);
}

void sub_10090D358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a11);
  objc_destroyWeak(a12);
  _Unwind_Resume(a1);
}

void sub_10090D3DC()
{
}

void sub_10090D3E4()
{
}

void sub_10090D3EC()
{
}

void sub_10090D3F4()
{
}

void sub_10090D3FC()
{
}

void sub_10090D404()
{
}

void sub_10090D40C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addVisualizationSettings:v3];
}

void sub_10090D468(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addLocationsSettings:v3];
}

void sub_10090D4C4(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addRoutingSettings:v3];
}

void sub_10090D520(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addETAUpdatesSettings:v3];
}

void sub_10090D57C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addAudioSettings:v3];
}

void sub_10090D5D8(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addTransitSettings:v3];
}

void sub_10090D634(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addCustomRoutesSettings:v3];
}

void sub_10090D690(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addTimeToLeaveSettings:v3];
}

void sub_10090D6EC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addNavigationServiceSettings:v3];
}

void sub_10090D748(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addPreloadingSettings:v3];
}

void sub_10090D7A4(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addThermalMitigationsSettings:v3];
}

void sub_10090D800(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_1016123E8 != -1) {
    dispatch_once(&qword_1016123E8, &stru_1012F7EA8);
  }
  if (byte_1016123E0 != 1 || sub_1000D4BB8() || sub_100105DB4())
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    id v15[2] = sub_10090DAC0;
    v15[3] = &unk_1012FB070;
    objc_copyWeak(&v16, (id *)(a1 + 32));
    [WeakRetained _addNavigationRowWithTitle:@"Visual Features" section:v3 handler:v15];

    objc_destroyWeak(&v16);
  }
  unsigned __int8 v5 = (id *)(a1 + 32);
  id v6 = objc_loadWeakRetained(v5);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10090DB1C;
  v13[3] = &unk_1012FB070;
  objc_copyWeak(&v14, v5);
  [v6 _addNavigationRowWithTitle:@"Route Planning Refreshing" section:v3 handler:v13];

  id v7 = objc_loadWeakRetained(v5);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10090DB78;
  v11[3] = &unk_1012FB070;
  objc_copyWeak(&v12, v5);
  [v7 _addNavigationRowWithTitle:@"Mobility and Routing" section:v3 handler:v11];

  id v8 = objc_loadWeakRetained(v5);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_10090DC0C;
  v9[3] = &unk_1012FB070;
  objc_copyWeak(&v10, v5);
  [v8 _addNavigationRowWithTitle:@"Parking" section:v3 handler:v9];

  objc_destroyWeak(&v10);
  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);
}

void sub_10090DA88(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10090DAC0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addVisualFeaturesSettings:v3];
}

void sub_10090DB1C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addRoutePlanningRefreshingSettings:v3];
}

void sub_10090DB78(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addEVRoutingSettings:v3];

  id v5 = objc_loadWeakRetained(v2);
  [v5 _addLicensePlateRestrictionsSettings:v3];

  id v6 = objc_loadWeakRetained(v2);
  [v6 _addManeuverArrowSettings:v3];
}

void sub_10090DC0C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addParkingNavigationSettings:v3];
}

void sub_10090DC68(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10090DD68;
  v6[3] = &unk_1012FB070;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  [WeakRetained _addNavigationRowWithTitle:@"Traces and Simulation" section:v3 handler:v6];

  id v5 = [v3 addSwitchRowWithTitle:@"Disable navigation restore when debugging" geoConfigKey:MapsConfig_NavigationDisableRestoreWhenDebugging off_1015EF8D8];
  objc_destroyWeak(&v7);
}

void sub_10090DD50(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10090DD68(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addTracesAndSimulationSettings:v3];
}

void sub_10090DE8C(uint64_t a1, void *a2)
{
  id v4 = a2;
  [v4 setTitle:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
  }
}

void sub_10090DF60(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Show Raw GPS Position" defaultsKey:@"NavigationShowRawGPSTrail"];
  id v3 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Show Matched Position" defaultsKey:@"NavigationShowMatchedLocationTrail"];
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Draw Preload Misses" defaultsKey:@"NavigationDrawPreloadMisses"];
  id v5 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Draw Full Preload Status" defaultsKey:@"NavigationDrawPreloadStatus"];
  id v6 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Show Maneuver Points" defaultsKey:@"NavigationDrawManeuverPoints"];
}

void sub_10090E034(id a1, MapsDebugTableSection *a2)
{
  id v11 = a2;
  id v2 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"End of route", MapsConfig_Navigation_VisualizeArrivalRegion_EndOfRoute, off_1015EF848 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Arrival points", MapsConfig_Navigation_VisualizeArrivalRegion_ArrivalPoints, off_1015EF858 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"ISSUE_ARRIVAL", MapsConfig_Navigation_VisualizeArrivalRegion_ISSUE_ARRIVAL, off_1015EF868 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"ISSUE_ARRIVAL_OFF_ROUTE", MapsConfig_Navigation_VisualizeArrivalRegion_ISSUE_ARRIVAL_OFF_ROUTE, off_1015EF878 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"END_NAVIGATION_TIMEOUT", MapsConfig_Navigation_VisualizeArrivalRegion_END_NAVIGATION_TIMEOUT, off_1015EF888 geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"PRE_ARRIVAL_MODE", MapsConfig_Navigation_VisualizeArrivalRegion_PRE_ARRIVAL_MODE, off_1015EF898 geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"PARKING_SUGGEST_WALKING", MapsConfig_Navigation_VisualizeArrivalRegion_PARKING_SUGGEST_WALKING, off_1015EF8A8 geoConfigKey];
  id v9 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"INITIATE_APPROACHING", MapsConfig_Navigation_VisualizeArrivalRegion_INITIATE_APPROACHING, off_1015EF8B8 geoConfigKey];
  id v10 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"PREPARE_TO_PARK", MapsConfig_Navigation_VisualizeArrivalRegion_PREPARE_TO_PARK, off_1015EF8C8 geoConfigKey];
}

void sub_10090E23C(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Ignore Course Accuracy", NavigationConfig_IgnoreCourseAccuracy[0], NavigationConfig_IgnoreCourseAccuracy[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Use CoreLocation driving matched locations", NavigationConfig_UseCLDrivingMapMatchedLocations[0], NavigationConfig_UseCLDrivingMapMatchedLocations[1] geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Use CoreLocation pedestrian matched locations", NavigationConfig_UseCLPedestrianMapMatchedLocations[0], NavigationConfig_UseCLPedestrianMapMatchedLocations[1] geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Allow projection past maneuver", GeoServicesConfig_NavigationAllowProjectingLocationPastManeuver[0], GeoServicesConfig_NavigationAllowProjectingLocationPastManeuver[1] geoConfigKey];
}

void sub_10090E300(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_LocationProjectionTimeSeconds[0];
  uint64_t v3 = NavigationConfig_LocationProjectionTimeSeconds[1];
  id v5 = a2;
  id v4 = [(MapsDebugTableSection *)v5 addSliderRowWithTitle:@"Projection time", &stru_101300940, v2, v3, 0, -0.1, 10.0 subtitleStringHandler min max geoConfigKeyDouble changeHandler];
  [(MapsDebugTableSection *)v5 setFooter:@"Accounts for GPS delay by projecting locations into the future by a set amount of time."];
}

NSString *__cdecl sub_10090E390(id a1, float a2)
{
  return +[NSString stringWithFormat:@"%0.1f seconds", a2];
}

void sub_10090E3C8(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = GeoServicesConfig_ProbeCrumbsEnabled[0];
  uint64_t v3 = GeoServicesConfig_ProbeCrumbsEnabled[1];
  id v4 = a2;
  id v5 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Historical Duration" placeholderText:@"(seconds)" inputType:1 get:&stru_101300980 set:&stru_1013009A0];
  [v6 setSubtitle:@"max of 255 seconds"];
  id v7 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Record every N locations" placeholderText:0 inputType:1 get:&stru_1013009C0 set:&stru_1013009E0];

  [v7 setSubtitle:@"default is 1 (every location)"];
  [(MapsDebugTableSection *)v4 setFooter:@"These settings are ignored if Probe Crumbs are disabled."];
}

NSString *__cdecl sub_10090E4D0(id a1)
{
  if ((unint64_t)GEOConfigGetUInteger() > 0xFE) {
    unint64_t UInteger = 255;
  }
  else {
    unint64_t UInteger = GEOConfigGetUInteger();
  }
  if (UInteger <= 1) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = UInteger;
  }
  uint64_t v3 = +[NSNumber numberWithUnsignedInteger:v2];
  id v4 = [v3 stringValue];

  return (NSString *)v4;
}

void sub_10090E558(id a1, NSString *a2)
{
  uint64_t v2 = a2;
  if ((unint64_t)[(NSString *)v2 integerValue] <= 0xFE) {
    [(NSString *)v2 integerValue];
  }
  GEOConfigSetUInteger();
}

NSString *__cdecl sub_10090E5C4(id a1)
{
  GEOConfigGetUInteger();
  GEOConfigGetUInteger();
  unint64_t UInteger = GEOConfigGetUInteger();
  if (UInteger <= 1) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = UInteger;
  }
  uint64_t v3 = +[NSNumber numberWithUnsignedInteger:v2];
  id v4 = [v3 stringValue];

  return (NSString *)v4;
}

void sub_10090E680(id a1, NSString *a2)
{
  uint64_t v3 = a2;
  unint64_t v2 = [(NSString *)v3 integerValue];
  if (v2 >= GEOConfigGetUInteger()) {
    GEOConfigGetUInteger();
  }
  else {
    [(NSString *)v3 integerValue];
  }
  GEOConfigSetUInteger();
}

void sub_10090E844(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10090E864(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Ignore Navigability" geoConfigKey:GeoServicesConfig_OverrideNavigationEnabled[0] GeoServicesConfig_OverrideNavigationEnabled[1]];
  id v5 = [v3 addSwitchRowWithTitle:@"Ignore Live Traffic" defaultsKey:@"NavigationDirectionsIgnoreLiveTraffic"];
  id v6 = [v3 addSwitchRowWithTitle:@"Always Show Traffic" defaultsKey:@"__internal__AlwaysShowRouteTraffic"];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10090EA30;
  v12[3] = &unk_1012FB070;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  [WeakRetained _addNavigationRowWithTitle:@"Traffic Override" section:v3 handler:v12];

  id v8 = [v3 addSwitchRowWithTitle:@"New Arrival Logic" geoConfigKey:GeoServicesConfig_ShouldUseServerArrivalParameters[0] GeoServicesConfig_ShouldUseServerArrivalParameters[1]];
  id v9 = [v3 addSwitchRowWithTitle:@"Enable Junction View" geoConfigKey:GeoServicesConfig_NavdShouldRequestJunctionView[0] GeoServicesConfig_NavdShouldRequestJunctionView[1]];
  id v10 = [v3 addSwitchRowWithTitle:@"Show Live Alternate Routes in Trench Mode" geoConfigKey:NavigationConfig_NavigationShowLiveAlternateRoutesInTrenchMode[0] NavigationConfig_NavigationShowLiveAlternateRoutesInTrenchMode[1]];
  id v11 = [v3 addSwitchRowWithTitle:@"Request Routing Path Points" geoConfigKey:GeoServicesConfig_RequestRoutingPathPoints[0] GeoServicesConfig_RequestRoutingPathPoints[1]];
  objc_destroyWeak(&v13);
}

void sub_10090EA18(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10090EA30(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addTrafficOverrideSettings:v3];
}

void sub_10090EA8C(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"(EV) Min time for charging sign", @"(seconds)", 1, NavigationConfig_EVChargingMonitorMinimumTime[0], NavigationConfig_EVChargingMonitorMinimumTime[1] placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"(EV) Max time for charging sign", @"(seconds)", 1, NavigationConfig_EVChargingMonitorMaximumTime[0], NavigationConfig_EVChargingMonitorMaximumTime[1] placeholderText inputType geoConfigKeyDouble];
}

void sub_10090EB28(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSliderRowWithTitle:@"MPR auto advance tendency", @"%g%%", 0, 100, NavigationConfig_MPRDepartureAutoAdvanceSensitivity[0], NavigationConfig_MPRDepartureAutoAdvanceSensitivity[1], 0 subtitleStringFormat min max geoConfigKeyUInteger changeHandler];
  id v3 = [(MapsDebugTableSection *)v5 addNavigationRowWithTitle:@"Auto-advance from arrival region" viewControllerContent:&stru_101300A40];
  id v4 = [(MapsDebugTableSection *)v5 addNavigationRowWithTitle:@"Auto-advance without arrival region" viewControllerContent:&stru_101300AA0];
}

void sub_10090EBD4(id a1, MapsDebugValuesViewController *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:0 content:&stru_101300A60];
  id v3 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Settings" content:&stru_101300A80];
}

void sub_10090EC44(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enabled", NavigationConfig_MPRDepartureAutoAdvanceUsingArrivalRegion[0], NavigationConfig_MPRDepartureAutoAdvanceUsingArrivalRegion[1] geoConfigKey];
}

void sub_10090EC7C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addGEOTextFieldRowWithTitle:@"Number of location to backtrace", &stru_101324E70, 1, NavigationConfig_MPRDepartureNumLocationsForArrivalRegion[0], NavigationConfig_MPRDepartureNumLocationsForArrivalRegion[1] placeholderText inputType geoConfigKeyUInteger];
}

void sub_10090ECC0(id a1, MapsDebugValuesViewController *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:0 content:&stru_101300AC0];
  id v3 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Settings" content:&stru_101300AE0];
}

void sub_10090ED30(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enabled", NavigationConfig_MPRDepartureAutoAdvanceWithNoArrivalRegion[0], NavigationConfig_MPRDepartureAutoAdvanceWithNoArrivalRegion[1] geoConfigKey];
}

void sub_10090ED68(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addGEOTextFieldRowWithTitle:@"Minimum time at waypoint", @"(seconds)", 1, NavigationConfig_MPRDepartureTimeAtWaypoint[0], NavigationConfig_MPRDepartureTimeAtWaypoint[1] placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v5 addGEOTextFieldRowWithTitle:@"Minimum distance deviated from waypoint", @"(meters)", 1, NavigationConfig_MPRDepartureDistanceToCenter[0], NavigationConfig_MPRDepartureDistanceToCenter[1] placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v5 addGEOTextFieldRowWithTitle:@"Distance from waypoint arrival points", @"(meters)", 1, NavigationConfig_MPRDepartureDistanceFromWaypointPoints[0], NavigationConfig_MPRDepartureDistanceFromWaypointPoints[1] placeholderText inputType geoConfigKeyDouble];
}

void sub_10090EE34(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Main Route", NavigationConfig_LogRoutes_RoutePreview_MainRoute[0], NavigationConfig_LogRoutes_RoutePreview_MainRoute[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Alternate Routes", NavigationConfig_LogRoutes_RoutePreview_AlternateRoutes[0], NavigationConfig_LogRoutes_RoutePreview_AlternateRoutes[1] geoConfigKey];
}

void sub_10090EEB0(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Show Internal Routing Errors", MapsConfig_DisplayInternalRoutingErrors, off_1015EFCB8 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Show Radar Prompt for Routing Service Errors", NavigationConfig_ShouldShowRadarPromptForRoutingServiceErrors[0], NavigationConfig_ShouldShowRadarPromptForRoutingServiceErrors[1] geoConfigKey];
}

void sub_10090EFA0(id a1, MapsDebugTableSection *a2)
{
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](a2, "addCheckmarkRowsGroupForConfigKey:content:", GeoServicesConfig_NavdDebugTrafficOnRouteColor[0], GeoServicesConfig_NavdDebugTrafficOnRouteColor[1], &stru_101300B60);
}

void sub_10090EFD8(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"None" value:&off_1013A9328];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Green" value:&off_1013A9340];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Yellow" value:&off_1013A9358];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Red" value:&off_1013A9370];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Black" value:&off_1013A9388];
}

void sub_10090F0AC(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](v5, "addCheckmarkRowsGroupForConfigKey:content:", GeoServicesConfig_NavdDebugTrafficOnRouteSection[0], GeoServicesConfig_NavdDebugTrafficOnRouteSection[1], &stru_101300BA0);
  id v3 = [(MapsDebugTableSection *)v5 addSliderRowWithTitle:@"Start Offset", @"%g%%", 0, 100, GeoServicesConfig_NavdDebugTrafficOnRouteStart[0], GeoServicesConfig_NavdDebugTrafficOnRouteStart[1], 0 subtitleStringFormat min max geoConfigKeyUInteger changeHandler];
  id v4 = [(MapsDebugTableSection *)v5 addSliderRowWithTitle:@"End Offset", @"%g%%", 0, 100, GeoServicesConfig_NavdDebugTrafficOnRouteEnd[0], GeoServicesConfig_NavdDebugTrafficOnRouteEnd[1], 0 subtitleStringFormat min max geoConfigKeyUInteger changeHandler];
}

void sub_10090F17C(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Default" value:&off_1013A9388];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Entire Route" value:&off_1013A9370];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Longest Step" value:&off_1013A9358];
}

void sub_10090F240(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addTextFieldRowWithTitle:@"Update Interval" placeholderText:@"(seconds)" inputType:1 get:&stru_101300BE0 set:&stru_101300C00];
  id v3 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Initial Delay (defaults to above if zero)", @"(seconds)", 1, NavigationConfig_InitialETARequestDelay[0], NavigationConfig_InitialETARequestDelay[1] placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Failure audio alert", NavigationConfig_ETAResponseFailureAlert[0], NavigationConfig_ETAResponseFailureAlert[1] geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v6 addNavigationRowWithTitle:@"Dodgeball" viewControllerContent:&stru_101300C20];
}

NSString *__cdecl sub_10090F324(id a1)
{
  GEOConfigGetDouble();
  if (v1 > 5.0) {
    GEOConfigGetDouble();
  }
  id v2 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  id v3 = [v2 stringValue];

  return (NSString *)v3;
}

void sub_10090F3A4(id a1, NSString *a2)
{
  id v3 = a2;
  [(NSString *)v3 doubleValue];
  if (v2 > 5.0) {
    [(NSString *)v3 doubleValue];
  }
  GEOConfigSetDouble();
}

void sub_10090F408(id a1, MapsDebugValuesViewController *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:0 content:&stru_101300C40];
  id v3 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Options" content:&stru_101300C60];
  id v4 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Dodgeballs With Reroute" content:&stru_101300EE0];
}

void sub_10090F498(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enabled", NavigationConfig_EnableDodgeball[0], NavigationConfig_EnableDodgeball[1] geoConfigKey];
}

void sub_10090F4D0(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enable Queuing & Trigger Ranges", GeoServicesConfig_ETATrafficBannerRequestQueuing[0], GeoServicesConfig_ETATrafficBannerRequestQueuing[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Request Queuing in Directions Requests", GeoServicesConfig_DirectionsTrafficBannerRequestQueuing[0], GeoServicesConfig_DirectionsTrafficBannerRequestQueuing[1] geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v8 addSliderRowWithTitle:@"Incident distance percentage to drop dodgeball", @"%g%%", NavigationConfig_Dodgeball_DropDodgeballDistanceRatio[0], NavigationConfig_Dodgeball_DropDodgeballDistanceRatio[1], 0, 0.0, 1.0 subtitleStringFormat min max geoConfigKeyDouble changeHandler];
  id v5 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Override priority field", NavigationConfig_Dodgeball_OverridePriorityField[0], NavigationConfig_Dodgeball_OverridePriorityField[1] geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Priority override (if enabled above)", @"0", 1, NavigationConfig_Dodgeball_OverridePriorityFieldValue[0], NavigationConfig_Dodgeball_OverridePriorityFieldValue[1] placeholderText inputType geoConfigKeyUInteger];
  id v7 = [(MapsDebugTableSection *)v8 addNavigationRowWithTitle:@"Fake Dodgeball" viewControllerContent:&stru_101300C80];
}

void sub_10090F5F8(id a1, MapsDebugValuesViewController *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Create Fake Dodgeball for ETAU" content:&stru_101300CA0];
  id v3 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Create Fake Dodgeball for Directions" content:&stru_101300CE0];
  id v4 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:0 content:&stru_101300D20];
}

void sub_10090F688(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_ETAUFakeIncidentAlert[0];
  uint64_t v3 = NavigationConfig_Dodgeball_ETAUFakeIncidentAlert[1];
  id v5 = a2;
  id v4 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](v5, "addCheckmarkRowsGroupForConfigKey:content:", v2, v3, &stru_101300CC0);
  [(MapsDebugTableSection *)v5 setFooter:@"Fake dodgeballs work by injecting fields into an ETAU response. In order to see them, a normal ETAU request needs to be triggered."];
}

void sub_10090F700(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"None" value:&off_1013A9388];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Blockage" value:&off_1013A9370];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Incident" value:&off_1013A9358];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Incident with Reroute" value:&off_1013A9340];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Warning (ex: EV out of range)" value:&off_1013A93A0];
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Restricted Zone" value:&off_1013A93B8];
  id v8 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Silent Update" value:&off_1013A93D0];
}

void sub_10090F814(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_DirectionsFakeIncidentAlert[0];
  uint64_t v3 = NavigationConfig_Dodgeball_DirectionsFakeIncidentAlert[1];
  id v5 = a2;
  id v4 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](v5, "addCheckmarkRowsGroupForConfigKey:content:", v2, v3, &stru_101300D00);
  [(MapsDebugTableSection *)v5 setFooter:@"Fake dodgeballs work by injecting fields into an Directions response. In order to see them, a normal Directions request needs to be triggered."];
}

void sub_10090F88C(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"None" value:&off_1013A9388];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Blockage" value:&off_1013A9370];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Incident" value:&off_1013A9358];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Incident with Reroute" value:&off_1013A9340];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Warning (ex: EV out of range)" value:&off_1013A93A0];
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Restricted Zone" value:&off_1013A93B8];
  id v8 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Silent Update" value:&off_1013A93D0];
}

void sub_10090F9A0(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Simulate voting buttons (Incident & Blockage)", NavigationConfig_Dodgeball_FakeIncidentSimulateVotingButtons[0], NavigationConfig_Dodgeball_FakeIncidentSimulateVotingButtons[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v7 addNavigationRowWithTitle:@"Voting Button Style" viewControllerContent:&stru_101300D40];
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Use trigger ranges", NavigationConfig_Dodgeball_FakeIncidentUseTriggerRanges[0], NavigationConfig_Dodgeball_FakeIncidentUseTriggerRanges[1] geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addNavigationRowWithTitle:@"ETAU trigger range/point options" viewControllerContent:&stru_101300DA0];
  id v6 = [(MapsDebugTableSection *)v7 addNavigationRowWithTitle:@"Directions trigger range/point options" viewControllerContent:&stru_101300E40];
}

void sub_10090FA7C(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Button styles" content:&stru_101300D60];
}

void sub_10090FAB0(id a1, MapsDebugTableSection *a2)
{
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](a2, "addCheckmarkRowsGroupForConfigKey:content:", NavigationConfig_Dodgeball_FakeIncidentVotingButtonDisplay[0], NavigationConfig_Dodgeball_FakeIncidentVotingButtonDisplay[1], &stru_101300D80);
}

void sub_10090FAE8(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Unknown" value:&off_1013A93E8];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Show by default" value:&off_1013A9400];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Show after user interaction" value:&off_1013A9418];
}

void sub_10090FB7C(id a1, MapsDebugValuesViewController *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Trigger range" content:&stru_101300DC0];
  id v3 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Show trigger point" content:&stru_101300DE0];
  id v4 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Hide trigger point" content:&stru_101300E00];
  id v5 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Progress bar" content:&stru_101300E20];
}

void sub_10090FC30(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_ETAU_FakeIncidentTriggerRangeDisplayTime[0];
  uint64_t v3 = NavigationConfig_Dodgeball_ETAU_FakeIncidentTriggerRangeDisplayTime[1];
  id v8 = a2;
  id v4 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Display time", @"20", 1, v2, v3 placeholderText inputType geoConfigKeyUInteger];
  id v5 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Min display time", @"0", 1, NavigationConfig_Dodgeball_ETAU_FakeIncidentTriggerRangeMinDisplayTime[0], NavigationConfig_Dodgeball_ETAU_FakeIncidentTriggerRangeMinDisplayTime[1] placeholderText inputType geoConfigKeyUInteger];
  id v6 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Priority", @"0", 1, NavigationConfig_Dodgeball_ETAU_FakeIncidentTriggerRangePriority[0], NavigationConfig_Dodgeball_ETAU_FakeIncidentTriggerRangePriority[1] placeholderText inputType geoConfigKeyUInteger];
  id v7 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Persist across updates", NavigationConfig_Dodgeball_ETAU_FakeIncidentPersistAcrossUpdates[0], NavigationConfig_Dodgeball_ETAU_FakeIncidentPersistAcrossUpdates[1] geoConfigKey];
  [(MapsDebugTableSection *)v8 setFooter:@"The dodgeball will be displayed on the screen for a maximum of <Display time> seconds. If a higher priority dodgeball overlaps with the fake dodgeball, the fake dodgeball will stay on the screen for at least <Min display time> seconds before the new dodgeball takes precedence."];
}

void sub_10090FD38(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_ETAU_FakeIncidentShowTriggerPointDistanceOffset[0];
  uint64_t v3 = NavigationConfig_Dodgeball_ETAU_FakeIncidentShowTriggerPointDistanceOffset[1];
  id v6 = a2;
  id v4 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Show at distance offset", @"(meters)", 1, v2, v3 placeholderText inputType geoConfigKeyUInteger];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Allow truncating", NavigationConfig_Dodgeball_ETAU_FakeIncidentShowTriggerPointAllowTruncating[0], NavigationConfig_Dodgeball_ETAU_FakeIncidentShowTriggerPointAllowTruncating[1] geoConfigKey];
  [(MapsDebugTableSection *)v6 setFooter:@"The distance offset is calculated from the location on the route at which the etau request is created."];
}

void sub_10090FDE0(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_ETAU_FakeIncidentTriggerRangeUseHideAtPoint[0];
  uint64_t v3 = NavigationConfig_Dodgeball_ETAU_FakeIncidentTriggerRangeUseHideAtPoint[1];
  id v7 = a2;
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Use hide point", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addGEOTextFieldRowWithTitle:@"Hide at distance offset", @"(meters)", 1, NavigationConfig_Dodgeball_ETAU_FakeIncidentHideTriggerPointDistanceOffset[0], NavigationConfig_Dodgeball_ETAU_FakeIncidentHideTriggerPointDistanceOffset[1] placeholderText inputType geoConfigKeyUInteger];
  id v6 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Allow truncating", NavigationConfig_Dodgeball_ETAU_FakeIncidentHideTriggerPointAllowTruncating[0], NavigationConfig_Dodgeball_ETAU_FakeIncidentHideTriggerPointAllowTruncating[1] geoConfigKey];
  [(MapsDebugTableSection *)v7 setFooter:@"The distance offset is calculated from the location on the route at which the etau request is created. The dodgeball will be hidden after <Display time> if it occurs before reaching the hide distance offset. If <use hide point> is disabled, the dodgeball will remain on the screen for exactly the number of seconds specified by <Display time> in the trigger range options."];
}

void sub_10090FEAC(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_ETAU_FakeIncidentUseProgressBar[0];
  uint64_t v3 = NavigationConfig_Dodgeball_ETAU_FakeIncidentUseProgressBar[1];
  id v7 = a2;
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addGEOTextFieldRowWithTitle:@"Show at distance offset", @"(meters)", 1, NavigationConfig_Dodgeball_ETAU_FakeIncidentProgressBarDistanceOffset[0], NavigationConfig_Dodgeball_ETAU_FakeIncidentProgressBarDistanceOffset[1] placeholderText inputType geoConfigKeyUInteger];
  id v6 = [(MapsDebugTableSection *)v7 addGEOTextFieldRowWithTitle:@"Display time (seconds)", @"15", 0, NavigationConfig_Dodgeball_ETAU_FakeIncidentProgressBarDurationSeconds[0], NavigationConfig_Dodgeball_ETAU_FakeIncidentProgressBarDurationSeconds[1] placeholderText inputType geoConfigKeyUInteger];
  [(MapsDebugTableSection *)v7 setFooter:@"The progress bar is shown at the distance offset above and counts down using the display time."];
}

void sub_10090FF84(id a1, MapsDebugValuesViewController *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Trigger range" content:&stru_101300E60];
  id v3 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Show trigger point" content:&stru_101300E80];
  id v4 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Hide trigger point" content:&stru_101300EA0];
  id v5 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Progress bar" content:&stru_101300EC0];
}

void sub_100910038(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_Directions_FakeIncidentTriggerRangeDisplayTime[0];
  uint64_t v3 = NavigationConfig_Dodgeball_Directions_FakeIncidentTriggerRangeDisplayTime[1];
  id v8 = a2;
  id v4 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Display time", @"20", 1, v2, v3 placeholderText inputType geoConfigKeyUInteger];
  id v5 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Min display time", @"0", 1, NavigationConfig_Dodgeball_Directions_FakeIncidentTriggerRangeMinDisplayTime[0], NavigationConfig_Dodgeball_Directions_FakeIncidentTriggerRangeMinDisplayTime[1] placeholderText inputType geoConfigKeyUInteger];
  id v6 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Priority", @"0", 1, NavigationConfig_Dodgeball_Directions_FakeIncidentTriggerRangePriority[0], NavigationConfig_Dodgeball_Directions_FakeIncidentTriggerRangePriority[1] placeholderText inputType geoConfigKeyUInteger];
  id v7 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Persist across updates", NavigationConfig_Dodgeball_Directions_FakeIncidentPersistAcrossUpdates[0], NavigationConfig_Dodgeball_Directions_FakeIncidentPersistAcrossUpdates[1] geoConfigKey];
  [(MapsDebugTableSection *)v8 setFooter:@"The dodgeball will be displayed on the screen for a maximum of <Display time> seconds. If a higher priority dodgeball overlaps with the fake dodgeball, the fake dodgeball will stay on the screen for at least <Min display time> seconds before the new dodgeball takes precedence."];
}

void sub_100910140(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_Directions_FakeIncidentShowTriggerPointDistanceOffset[0];
  uint64_t v3 = NavigationConfig_Dodgeball_Directions_FakeIncidentShowTriggerPointDistanceOffset[1];
  id v6 = a2;
  id v4 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Show at distance offset", @"(meters)", 1, v2, v3 placeholderText inputType geoConfigKeyUInteger];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Allow truncating", NavigationConfig_Dodgeball_Directions_FakeIncidentShowTriggerPointAllowTruncating[0], NavigationConfig_Dodgeball_Directions_FakeIncidentShowTriggerPointAllowTruncating[1] geoConfigKey];
  [(MapsDebugTableSection *)v6 setFooter:@"The distance offset is calculated from the location on the route at which the directions request is created."];
}

void sub_1009101E8(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_Directions_FakeIncidentTriggerRangeUseHideAtPoint[0];
  uint64_t v3 = NavigationConfig_Dodgeball_Directions_FakeIncidentTriggerRangeUseHideAtPoint[1];
  id v7 = a2;
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Use hide point", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addGEOTextFieldRowWithTitle:@"Hide at distance offset", @"(meters)", 1, NavigationConfig_Dodgeball_Directions_FakeIncidentHideTriggerPointDistanceOffset[0], NavigationConfig_Dodgeball_Directions_FakeIncidentHideTriggerPointDistanceOffset[1] placeholderText inputType geoConfigKeyUInteger];
  id v6 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Allow truncating", NavigationConfig_Dodgeball_Directions_FakeIncidentHideTriggerPointAllowTruncating[0], NavigationConfig_Dodgeball_Directions_FakeIncidentHideTriggerPointAllowTruncating[1] geoConfigKey];
  [(MapsDebugTableSection *)v7 setFooter:@"The distance offset is calculated from the location on the route at which the etau request is created. The dodgeball will be hidden after <Display time> if it occurs before reaching the hide distance offset. If <use hide point> is disabled, the dodgeball will remain on the screen for exactly the number of seconds specified by <Display time> in the trigger range options."];
}

void sub_1009102B4(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Dodgeball_Directions_FakeIncidentUseProgressBar[0];
  uint64_t v3 = NavigationConfig_Dodgeball_Directions_FakeIncidentUseProgressBar[1];
  id v7 = a2;
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addGEOTextFieldRowWithTitle:@"Show at distance offset", @"(meters)", 1, NavigationConfig_Dodgeball_Directions_FakeIncidentProgressBarDistanceOffset[0], NavigationConfig_Dodgeball_Directions_FakeIncidentProgressBarDistanceOffset[1] placeholderText inputType geoConfigKeyUInteger];
  id v6 = [(MapsDebugTableSection *)v7 addGEOTextFieldRowWithTitle:@"Display time (seconds)", @"15", 0, NavigationConfig_Dodgeball_Directions_FakeIncidentProgressBarDurationSeconds[0], NavigationConfig_Dodgeball_Directions_FakeIncidentProgressBarDurationSeconds[1] placeholderText inputType geoConfigKeyUInteger];
  [(MapsDebugTableSection *)v7 setFooter:@"The progress bar is shown at the distance offset above and counts down using the display time."];
}

void sub_10091038C(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Automatically accept faster routes", GeoServicesConfig_NavdShouldAutomaticallyRerouteTrafficIncidents[0], GeoServicesConfig_NavdShouldAutomaticallyRerouteTrafficIncidents[1] geoConfigKey];
  LODWORD(v3) = 1114636288;
  id v4 = [(MapsDebugTableSection *)v5 addSliderRowWithTitle:@"Reroute Alert Duration" subtitleStringFormat:@"%1.f sec" min:&stru_101300F00 max:&stru_101300F20 get:0.0 set:v3];
}

float sub_100910420(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100910448(id a1, float a2)
{
}

void sub_1009104CC(id a1, MapsDebugTableSection *a2)
{
  id v12 = a2;
  id v2 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Beep Before Instruction", NavigationConfig_SpokenGuidanceChimeBeforeInstruction[0], NavigationConfig_SpokenGuidanceChimeBeforeInstruction[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Mute Voice", NavigationConfig_NavigationDebugPanelMuteVoice[0], NavigationConfig_NavigationDebugPanelMuteVoice[1] geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Disable Server TTS", NavigationConfig_NavigationDisableServerTTS[0], NavigationConfig_NavigationDisableServerTTS[1] geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Ding instead of uttering", NavigationConfig_NavigationDingInstead[0], NavigationConfig_NavigationDingInstead[1] geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Use debug voice volume", NavigationConfig_ShouldUseSpokenGuidanceDebugVolume[0], NavigationConfig_ShouldUseSpokenGuidanceDebugVolume[1] geoConfigKey];
  GEOConfigGetDouble();
  *(float *)&double v7 = v7;
  double v8 = *(float *)&v7;
  GEOConfigGetDouble();
  *(float *)&double v9 = v9;
  id v10 = [(MapsDebugTableSection *)v12 addSliderRowWithTitle:@"Debug voice volume", @"%.2f", NavigationConfig_SpokenGuidanceDebugVolume[0], NavigationConfig_SpokenGuidanceDebugVolume[1], 0, v8, *(float *)&v9 subtitleStringFormat min max geoConfigKeyDouble changeHandler];
  id v11 = [(MapsDebugTableSection *)v12 addButtonRowWithTitle:@"Repeat last instruction" action:&stru_101300F60];
}

void sub_100910640(id a1)
{
  id v1 = +[MNNavigationService sharedService];
  [v1 repeatCurrentGuidance:&stru_101300F80];
}

void sub_100910694(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Multilingual Phonetics", MapsConfig_DebugNavigationMultilingualPhonetics, off_1015EECA8 geoConfigKey];
}

void sub_1009106FC(id a1, MapsDebugTableSection *a2)
{
  double v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Snap to transit lines" defaultsKey:@"NavigationSnapToTransitLines"];
  id v3 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Include realtime updates", NavigationConfig_DebugNavigationIncludeRealtimeUpdates[0], NavigationConfig_DebugNavigationIncludeRealtimeUpdates[1] geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Force weak signal strength notifications", NavigationConfig_TransitMockWeakSignalNotifications[0], NavigationConfig_TransitMockWeakSignalNotifications[1] geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enable weak signal notifications" defaultsKey:@"NavigationEnableWeakLocationNotification"];
  id v6 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Frame vehicles for manually-selected step" defaultsKey:@"NavigationTransitFrameVehiclePositionsForSelectedStep"];
  id v7 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Minimum location accuracy for distance to station", @"(meters)", 0, GeoServicesConfig_NavdTransitMinimumLocationAccuracyForStationEdgeIntersection[0], GeoServicesConfig_NavdTransitMinimumLocationAccuracyForStationEdgeIntersection[1] placeholderText inputType geoConfigKeyDouble];
}

void sub_10091088C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Allow mid-route start", NavigationConfig_PreNavigation_CustomRoute_AllowMidRouteStart[0], NavigationConfig_PreNavigation_CustomRoute_AllowMidRouteStart[1] geoConfigKey];
}

void sub_1009108C4(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSliderRowWithTitle:@"Mid-route start distance threshold", &stru_101301020, NavigationConfig_PreNavigation_CustomRoute_MidRouteStartDistanceThreshold[0], NavigationConfig_PreNavigation_CustomRoute_MidRouteStartDistanceThreshold[1], 0, 0.0, 500.0 subtitleStringHandler min max geoConfigKeyDouble changeHandler];
  id v3 = [(MapsDebugTableSection *)v6 addSliderRowWithTitle:@"Reroute distance threshold", &stru_101301020, NavigationConfig_LocationTracking_Walking_CustomRoute_RerouteDistance[0], NavigationConfig_LocationTracking_Walking_CustomRoute_RerouteDistance[1], 0, 0.0, 500.0 subtitleStringHandler min max geoConfigKeyDouble changeHandler];
  id v4 = [(MapsDebugTableSection *)v6 addSliderRowWithTitle:@"Reroute distance threshold (before on route)", &stru_101301020, NavigationConfig_LocationTracking_Walking_CustomRoute_RerouteDistanceBeforeOnRoute[0], NavigationConfig_LocationTracking_Walking_CustomRoute_RerouteDistanceBeforeOnRoute[1], 0, 0.0, 500.0 subtitleStringHandler min max geoConfigKeyDouble changeHandler];
  id v5 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Max anchor points", 0, 1, NavigationConfig_PreNavigation_CustomRoute_MaxNumberOfAnchors[0], NavigationConfig_PreNavigation_CustomRoute_MaxNumberOfAnchors[1] placeholderText inputType geoConfigKeyUInteger];
}

NSString *__cdecl sub_1009109E0(id a1, float a2)
{
  id v2 = &qword_100F72000;
  LODWORD(v2) = llround(a2 * 3.2808399);
  return +[NSString stringWithFormat:@"%d meters (%d feet)", (int)a2, v2];
}

void sub_100910A5C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Alert on ETA Updates", GeoServicesConfig_TTLETADebugAlert[0], GeoServicesConfig_TTLETADebugAlert[1] geoConfigKey];
}

void sub_100910AC4(id a1, MapsDebugTableSection *a2)
{
  id v2 = a2;
  id v3 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Run navigation in Maps process" get:&stru_101301080 set:&stru_1013010A0];
  [v3 setSubtitle:@"If off, nav will run in a daemon. Needs restart"];
  id v4 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Automatically End On Arrival", NavigationConfig_AutomaticallyEndOnArrival[0], NavigationConfig_AutomaticallyEndOnArrival[1] geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Automatically end on vehicle disconnect after arrival", NavigationConfig_AutomaticallyEndOnVehicleDisconnectAfterArrival[0], NavigationConfig_AutomaticallyEndOnVehicleDisconnectAfterArrival[1] geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Enable transport mode switching during navigation", NavigationConfig_EnableNavigationTransportModeSwitching[0], NavigationConfig_EnableNavigationTransportModeSwitching[1] geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Show interface desync alert" defaultsKey:@"NavigationShowInterfaceDesyncAlert"];
  double v8 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Displayed Navigation Safety Warning" defaultsKey:@"HasShownNavModeAdvisory2020" switchOnStateIfUnset:0 changeHandler:&stru_1013010C0];

  [v8 setSubtitle:@"You need to restart Maps for the safety warning to reappear. This setting is also synced to Watch."];
  id v9 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Displayed Custom Navigation Safety Warning" defaultsKey:@"HasShownCustomNavModeAdvisoryKey" switchOnStateIfUnset:0 changeHandler:&stru_1013010E0];

  [v9 setSubtitle:@"You need to restart Maps for the safety warning to reappear. This setting is also synced to Watch."];
}

BOOL sub_100910C4C(id a1)
{
  return GEOConfigGetBOOL() ^ 1;
}

void sub_100910C74(id a1, BOOL a2)
{
}

void sub_100910C88(id a1, BOOL a2)
{
  id v3 = (id)objc_opt_new();
  id v2 = +[NSSet setWithObject:@"HasShownNavModeAdvisory2020"];
  [v3 synchronizeUserDefaultsDomain:@"com.apple.Maps" keys:v2 container:@"com.apple.Maps"];
}

void sub_100910D08(id a1, BOOL a2)
{
  id v3 = (id)objc_opt_new();
  id v2 = +[NSSet setWithObject:@"HasShownCustomNavModeAdvisoryKey"];
  [v3 synchronizeUserDefaultsDomain:@"com.apple.Maps" keys:v2 container:@"com.apple.Maps"];
}

void sub_100910DF4(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Step Size", @"meters", 1, GeoServicesConfig_StepSizeInMeters[0], GeoServicesConfig_StepSizeInMeters[1] placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Maneuver Radius", @"meters", 1, GeoServicesConfig_ManeuverSizeInMeters[0], GeoServicesConfig_ManeuverSizeInMeters[1] placeholderText inputType geoConfigKeyDouble];
}

void sub_100910E90(id a1, MapsDebugTableSection *a2)
{
  id v2 = a2;
  uint64_t v7 = 0;
  double v8 = &v7;
  uint64_t v9 = 0x3032000000;
  id v10 = sub_100104134;
  id v11 = sub_100104918;
  id v12 = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100910FF0;
  v6[3] = &unk_1012E83B0;
  void v6[4] = &v7;
  id v3 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Draw debug overlay", MapsConfig_NavPreloadDebugOverlayEnabled, off_1015EFD18, 0, v6 geoConfigKey switchOnStateIfUnset changeHandler];
  uint64_t v4 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Draw all tiles", MapsConfig_NavPreloadDebugOverlayShowAllTiles, off_1015EFD28 geoConfigKey];
  id v5 = (void *)v8[5];
  void v8[5] = v4;

  [(id)v8[5] setEnabled:GEOConfigGetBOOL()];
  [(MapsDebugTableSection *)v2 setFooter:@"By default, the debug overlay only draws tiles at z=15, which is useful for understanding the areas the preloader has loaded. Enabling \"Draw all tiles\" will draw every tile loaded by the preloader, which is generally too much information to understand visually."];
  _Block_object_dispose(&v7, 8);
}

void sub_100910FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100910FF0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setEnabled:a2];
}

void sub_100911260(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = *(void **)(a1 + 32);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_100911310;
  v9[3] = &unk_1012EE018;
  id v10 = v5;
  id v7 = v5;
  id v8 = [v6 addSectionWithTitle:a2 content:v9];
}

id sub_100911310(uint64_t a1, void *a2)
{
  return [a2 addCheckmarkRowsGroupWithContent:&stru_101301140 defaultsKey:*(void *)(a1 + 32) checkedRowValueIfUnset:@"Disable" changeHandler:&stru_101301160];
}

void sub_100911350(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"Disable" value:@"Disable"];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"10" value:@"10"];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"20" value:@"20"];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"30" value:@"30"];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"40" value:@"40"];
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"Enable" value:@"Enable"];
}

id sub_100911430(uint64_t a1, void *a2)
{
  return [a2 addGEOTextFieldRowWithTitle:*(void *)(a1 + 32) placeholderText:@"0 - 50+" inputType:1 geoConfigKeyInteger:MapsConfig_LockscreenThermalMitigationThreshold];
}

void sub_1009117B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 96));
  objc_destroyWeak((id *)(v5 - 88));
  _Unwind_Resume(a1);
}

void sub_100911810(uint64_t a1, void *a2)
{
  id v3 = a2;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100911A3C;
  v16[3] = &unk_1012E6708;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Disable all TTR imagery" action:v16];
  id v5 = [v3 addSwitchRowWithTitle:@"Enable session recording" defaultsKey:@"MapsARSessionRecordingEnabledKey"];
  id v6 = [v3 addNavigationRowWithTitle:@"Replay mode" viewControllerContent:&stru_101301180];
  id v7 = GEOConfigGetString();
  uint64_t v8 = [v7 lastPathComponent];
  uint64_t v9 = (void *)v8;
  if (v8) {
    CFStringRef v10 = (const __CFString *)v8;
  }
  else {
    CFStringRef v10 = @"Recording playback";
  }
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1009121DC;
  v13[3] = &unk_1012E6BD0;
  objc_copyWeak(&v14, (id *)(a1 + 40));
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v11 = [v3 addButtonRowWithTitle:v10 action:v13];

  id v12 = [v3 addSwitchRowWithTitle:@"Loop replay forever" defaultsKey:@"MapsARSessionPlaybackLoopKey"];
  objc_destroyWeak(&v15);
  objc_destroyWeak(&v14);
  objc_destroyWeak(&v17);
}

void sub_100911A08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100911A3C(uint64_t a1)
{
  GEOConfigSetBOOL();
  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 setBool:0 forKey:@"MapsARSessionRecordingEnabledKey"];

  GEOConfigSetBOOL();
  GEOConfigSetBOOL();
  GEOConfigSetBOOL();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_100911B00(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = a2;
  objc_initWeak(&location, v2);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100911BD8;
  void v4[3] = &unk_1012E7EF8;
  objc_copyWeak(&v5, &location);
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Replay modes" content:v4];
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_100911BBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100911BD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100911E88;
  v14[3] = &unk_1012E6998;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Realtime" get:&stru_1013011A0 set:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100911F70;
  v12[3] = &unk_1012E6998;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Deterministic" get:&stru_1013011C0 set:v12];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100912058;
  v10[3] = &unk_1012E6998;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addSwitchRowWithTitle:@"Deterministic Limit Frame Rate" get:&stru_1013011E0 set:v10];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100912140;
  void v8[3] = &unk_1012E6998;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  id v7 = [v3 addSwitchRowWithTitle:@"Manual" get:&stru_101301200 set:v8];
  objc_destroyWeak(&v9);
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
}

void sub_100911DF8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100911E3C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  BOOL v2 = [v1 integerForKey:@"MapsARSessionPlaybackModeKey"] == 0;

  return v2;
}

void sub_100911E88(uint64_t a1, int a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = v4;
  if (a2) {
    [v4 setInteger:0 forKey:@"MapsARSessionPlaybackModeKey"];
  }
  else {
    [v4 removeObjectForKey:@"MapsARSessionPlaybackModeKey"];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_100911F24(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  BOOL v2 = [v1 integerForKey:@"MapsARSessionPlaybackModeKey"] == (id)1;

  return v2;
}

void sub_100911F70(uint64_t a1, int a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = v4;
  if (a2) {
    [v4 setInteger:1 forKey:@"MapsARSessionPlaybackModeKey"];
  }
  else {
    [v4 removeObjectForKey:@"MapsARSessionPlaybackModeKey"];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_10091200C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  BOOL v2 = [v1 integerForKey:@"MapsARSessionPlaybackModeKey"] == (id)2;

  return v2;
}

void sub_100912058(uint64_t a1, int a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = v4;
  if (a2) {
    [v4 setInteger:2 forKey:@"MapsARSessionPlaybackModeKey"];
  }
  else {
    [v4 removeObjectForKey:@"MapsARSessionPlaybackModeKey"];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_1009120F4(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  BOOL v2 = [v1 integerForKey:@"MapsARSessionPlaybackModeKey"] == (id)3;

  return v2;
}

void sub_100912140(uint64_t a1, int a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = v4;
  if (a2) {
    [v4 setInteger:3 forKey:@"MapsARSessionPlaybackModeKey"];
  }
  else {
    [v4 removeObjectForKey:@"MapsARSessionPlaybackModeKey"];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_1009121DC(uint64_t a1)
{
  BOOL v2 = objc_opt_new();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v2 setDelegate:WeakRetained];

  id v4 = [UTTypeMovie identifier];
  id v12 = v4;
  id v5 = +[NSArray arrayWithObjects:&v12 count:1];
  [v2 setMediaTypes:v5];

  [v2 setAllowsEditing:0];
  [v2 setModalPresentationStyle:0];
  [v2 _setValue:&__kCFBooleanTrue forProperty:_UIImagePickerControllerVideoDontTranscode];
  id v6 = +[UIColor blueColor];
  id v7 = [v2 view];
  [v7 setTintColor:v6];

  uint64_t v8 = +[UIColor whiteColor];
  id v9 = [v2 view];
  [v9 setBackgroundColor:v8];

  CFStringRef v10 = [v2 popoverPresentationController];
  [v10 setPermittedArrowDirections:15];
  id v11 = objc_loadWeakRetained((id *)(a1 + 40));
  [v11 presentViewController:v2 animated:1 completion:0];
}

void sub_100912390(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Enable" geoConfigKey:MapsFeaturesConfig_PedestrianAREnabled[0] MapsFeaturesConfig_PedestrianAREnabled[1]];
  id v5 = [v3 addSwitchRowWithTitle:@"Floating debug UI" get:&stru_101301220 set:&stru_101301240];
  id v6 = [v3 addSwitchRowWithTitle:@"TTR button" defaultsKey:@"PedestrianARTTRButtonEnabledKey"];
  id v7 = [v3 addSwitchRowWithTitle:@"Feature intro TM flag" get:&stru_101301260 set:&stru_101301280];
  id v8 = [v3 addGEOTextFieldRowWithTitle:@"Feature intro TM delay (sec)" placeholderText:@"3.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARFeatureIntroTeachableMomentCardDelay];
  id v9 = [v3 addGEOTextFieldRowWithTitle:@"Feature intro TM timeout 1 (sec)" placeholderText:@"2592000.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARFeatureIntroTeachableMomentCardShowAgainTimeInterval1];
  id v10 = [v3 addGEOTextFieldRowWithTitle:@"Feature intro TM timeout 2 (sec)" placeholderText:@"5184000.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARFeatureIntroTeachableMomentCardShowAgainTimeInterval2];
  id v11 = [v3 addGEOTextFieldRowWithTitle:@"Feature intro TM timeout 3 (sec)" placeholderText:@"7776000.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARFeatureIntroTeachableMomentCardShowAgainTimeInterval3];
  id v12 = [v3 addSwitchRowWithTitle:@"Raise to enter TM flag" get:&stru_1013012A0 set:&stru_1013012C0];
  id v13 = [v3 addGEOTextFieldRowWithTitle:@"Reroute distance threshold (meters)" placeholderText:@"20.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARPostLocalizationRerouteDistanceThreshold];
  id v14 = [v3 addGEOTextFieldRowWithTitle:@"Reroute accuracy threshold (meters)" placeholderText:@"20.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARPostLocalizationRerouteHorizontalAccuracyThreshold];
  id v15 = [v3 addGEOTextFieldRowWithTitle:@"Reroute timeout (seconds)" placeholderText:@"1.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARPostLocalizationRerouteTimeout];
  id v16 = [v3 addGEOTextFieldRowWithTitle:@"Active feature timeout (seconds)" placeholderText:@"2.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARPostLocalizationActiveFeatureTimeout];
  id v17 = [v3 addGEOTextFieldRowWithTitle:@"Instruction maneuver skip distance (meters)" placeholderText:@"20.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARInstructionNextManeuverDistanceThreshold];
  id v18 = [v3 addGEOTextFieldRowWithTitle:@"Instruction maneuver arrived distance (meters)" placeholderText:@"20.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARInstructionArrivedDistanceThreshold];
  id v19 = [v3 addSwitchRowWithTitle:@"Inject fake storefront arrival data" defaultsKey:@"PedestrianARInjectFakeStorefrontArrivalDataKey"];
  id v20 = [v3 addSwitchRowWithTitle:@"Force show arrival on last step" defaultsKey:@"PedestrianARForceShowArrivalOnLastStepKey"];
  id v21 = [v3 addGEOTextFieldRowWithTitle:@"Num of steps from the end to send arrival labels" placeholderText:@"2" inputType:1 geoConfigKeyUInteger:NavigationConfig_ARGuidanceArrivalLabelMinimumStepIndex[0] NavigationConfig_ARGuidanceArrivalLabelMinimumStepIndex[1]];
  id v22 = [v3 addGEOTextFieldRowWithTitle:@"Coarse arrival step distance threshold" placeholderText:@"30.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARSessionArrivalStepAvailabilityMonitorCoarseArrivalDistanceThreshold];
  id v23 = [v3 addGEOTextFieldRowWithTitle:@"Max distance from closest point on route" placeholderText:@"150.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARSessionRouteDistanceThreshold];
  id v24 = [v3 addGEOTextFieldRowWithTitle:@"Distance to route override" placeholderText:@"-1" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARSessionRouteDistanceMonitorDistanceOverride off_1015F14D8];
  id v25 = [v3 addSwitchRowWithTitle:@"Show safety UI" defaultsKey:@"PedestrianARSafetyUIKey"];
  id v26 = [v3 addGEOTextFieldRowWithTitle:@"Safety UI Warning delay (secs)" placeholderText:@"2.0" inputType:2 geoConfigKeyDouble:off_1015EFF48];
  id v27 = [v3 addGEOTextFieldRowWithTitle:@"Safety UI distance check (meters)" placeholderText:@"1.8" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARSafetyMinimumWalkingDistance];
  id v28 = [v3 addGEOTextFieldRowWithTitle:@"Safety UI time check (secs)" placeholderText:@"3.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARSSafetyWalkingCheckThreshold];
  id v29 = [v3 addGEOTextFieldRowWithTitle:@"Safety UI Count" placeholderText:@"1" inputType:1 geoConfigKeyInteger:MapsConfig_PedestrianARSSafetyMaxCountPerARSession];
  id v30 = [v3 addGEOTextFieldRowWithTitle:@"Safety UI max on screen time (secs)" placeholderText:@"3.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARSSafetyMaxTimeOnScreen];
  id v31 = [v3 addGEOTextFieldRowWithTitle:@"Failure view timeout" placeholderText:@"30.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARSessionFailureViewTimeout];
  id v32 = [v3 addSwitchRowWithTitle:@"Auto focus camera" defaultsKey:@"PedestrianARAutoFocusEnabledKey"];
  LODWORD(v33) = 1.0;
  id v34 = [v3 addSliderRowWithTitle:@"Custom camera focus value" subtitleStringFormat:@"Specify a manual camera focus value %.2f" min:@"PedestrianARAutoFocusDistanceKey" max:0 defaultsKey:0.0 sliderValueIfUnset:v33 changeHandler:0.0];
  id v35 = [v3 addGEOTextFieldRowWithTitle:@"VL call interval" placeholderText:@"0.5" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARVisualLocalizationCallInterval];
  id v36 = [v3 addSwitchRowWithTitle:@"Indoor/outdoor debug UI" get:&stru_1013012E0 set:&stru_101301300];
  id v37 = [v3 addTextFieldRowWithTitle:@"Debug view interval (indoor/outdoor)" placeholderText:@"1.0" inputType:2 defaultsKey:@"PedestrianARIndoorOutdoorDetectionInterval"];
  id v38 = [v3 addSwitchRowWithTitle:@"Enable post-localization VL call interval" geoConfigKey:MapsConfig_PedestrianAREnableCustomPostLocalizationVLCallInterval off_1015F0198];
  id v39 = [v3 addGEOTextFieldRowWithTitle:@"Post-localization VL call interval" placeholderText:@"1.0" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARPostLocalizationVLCallInterval];
  id v40 = [v3 addSwitchRowWithTitle:@"Enable lower to exit" defaultsKey:@"PedestrianAREnableLowerToExitKey"];
  id v41 = [v3 addGEOTextFieldRowWithTitle:@"Device motion update interval" placeholderText:@"0.2" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARDeviceMotionUpdateInterval];
  id v42 = [v3 addGEOTextFieldRowWithTitle:@"Device motion sample size" placeholderText:@"5" inputType:1 geoConfigKeyUInteger:MapsConfig_PedestrianARDeviceMotionSampleSize];
  id v43 = [v3 addSwitchRowWithTitle:@"Floating control arrow animation" geoConfigKey:MapsConfig_PedestrianARFloatingControlButtonArrowEnabled off_1015F04F8];
  id v44 = [v3 addSwitchRowWithTitle:@"Force show affordance" defaultsKey:@"PedestrianARForceShowAffordanceKey"];
  id v45 = [v3 addSwitchRowWithTitle:@"Enable Lidar" geoConfigKey:MapsConfig_PedestrianARLidarEnabled off_1015F0768];
  id v46 = [v3 addSwitchRowWithTitle:@"Show debug map annotations" defaultsKey:@"PedestrianARDebugMapAnnotationsKey"];
  id v47 = [v3 addSwitchRowWithTitle:@"Enable compass calibration error alert" geoConfigKey:MapsConfig_PedestrianARCompassCalibrationInternalAlertEnabled off_1015F0818];
  id v48 = [v3 addSwitchRowWithTitle:@"Has shown compass calibration error" get:&stru_101301320 set:&stru_101301340];
  id v49 = [v3 addGEOTextFieldRowWithTitle:@"Compass calibration error time interval" placeholderText:@"604800" inputType:2 geoConfigKeyDouble:MapsConfig_PedestrianARCompassCalibrationInternalAlertDisplayTimeInterval];
  id v50 = [v3 addSwitchRowWithTitle:@"Indoor/outdoor analytics" geoConfigKey:MapsConfig_VLFSessionIndoorOutdoorAnalyticsRecorderEnabled off_1015F0868];
  id v51 = [v3 addGEOTextFieldRowWithTitle:@"Indoor/outdoor max entries" placeholderText:@"3" inputType:1 geoConfigKeyUInteger:MapsConfig_VLFSessionIndoorOutdoorAnalyticsRecorderEntryCount];
  id v52 = [v3 addGEOTextFieldRowWithTitle:@"Indoor/outdoor frame interval" placeholderText:@"0.5" inputType:2 geoConfigKeyDouble:MapsConfig_VLFSessionIndoorOutdoorAnalyticsRecorderTimeInterval];
  id v53 = [v3 addNavigationRowWithTitle:@"Session state management" viewControllerContent:&stru_101301360];
  id v54 = [v3 addNavigationRowWithTitle:@"Usage monitor" viewControllerContent:&stru_1013014C0];
  v59[0] = _NSConcreteStackBlock;
  v59[1] = 3221225472;
  v59[2] = sub_100914024;
  v59[3] = &unk_1012E6708;
  a1 += 4;
  objc_copyWeak(&v60, a1);
  id v55 = [v3 addButtonRowWithTitle:@"Show feature intro TM" action:v59];
  v57[0] = _NSConcreteStackBlock;
  v57[1] = 3221225472;
  v57[2] = sub_1009141D4;
  v57[3] = &unk_1012E6708;
  objc_copyWeak(&v58, a1);
  id v56 = [v3 addButtonRowWithTitle:@"Show raise to enter TM" action:v57];
  objc_destroyWeak(&v58);
  objc_destroyWeak(&v60);
}

void sub_100912D00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100912D24(id a1)
{
  id v1 = +[PedestrianARFloatingDebugViewController sharedInstance];
  unsigned __int8 v2 = [v1 isAttached];

  return v2;
}

void sub_100912D64(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[PedestrianARFloatingDebugViewController sharedInstance];
  id v4 = v3;
  if (v2) {
    [v3 attach];
  }
  else {
    [v3 detach];
  }
}

BOOL sub_100912DC4(id a1)
{
  return +[PedestrianARFeatureIntroTeachableMomentContaineeViewController hasShownTeachableMoment];
}

void sub_100912DD0(id a1, BOOL a2)
{
}

BOOL sub_100912DE0(id a1)
{
  return +[PedestrianARRaiseToEnterTeachableMomentContaineeViewController hasShownTeachableMoment];
}

void sub_100912DEC(id a1, BOOL a2)
{
}

BOOL sub_100912DFC(id a1)
{
  id v1 = +[MapsARSessionIndoorOutdoorFloatingDebugViewController sharedInstance];
  unsigned __int8 v2 = [v1 isAttached];

  return v2;
}

void sub_100912E3C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[MapsARSessionIndoorOutdoorFloatingDebugViewController sharedInstance];
  id v4 = v3;
  if (v2) {
    [v3 attach];
  }
  else {
    [v3 detach];
  }
}

BOOL sub_100912E9C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  BOOL v2 = [v1 objectForKey:off_1015F53F8];
  BOOL v3 = v2 != 0;

  return v3;
}

void sub_100912EF0(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v4 = +[NSUserDefaults standardUserDefaults];
  if (v2)
  {
    BOOL v3 = +[NSDate date];
    [v4 setObject:v3 forKey:off_1015F53F8];
  }
  else
  {
    [v4 removeObjectForKey:off_1015F53F8];
  }
}

void sub_100912F84(id a1, MapsDebugValuesViewController *a2)
{
  BOOL v2 = a2;
  objc_initWeak(&location, v2);
  BOOL v3 = +[PedestrianARSessionArrivalStepAvailabilityMonitor friendlyName];
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_1009132C4;
  void v25[3] = &unk_1012E7EF8;
  objc_copyWeak(&v26, &location);
  id v4 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v3 content:v25];

  id v5 = +[PedestrianARSessionCarPlayConnectionMonitor friendlyName];
  id v6 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v5 content:&stru_1013013A0];

  id v7 = +[PedestrianARSessionCoarseLocationMonitor friendlyName];
  id v8 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v7 content:&stru_1013013C0];

  id v9 = +[PedestrianARSessionNetworkReachabilityMonitor friendlyName];
  id v10 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v9 content:&stru_1013013E0];

  id v11 = +[PedestrianARSessionRoutePlanningConfigurationMonitor friendlyName];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  void v23[2] = sub_10091354C;
  v23[3] = &unk_1012E7EF8;
  objc_copyWeak(&v24, &location);
  id v12 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v11 content:v23];

  id v13 = +[PedestrianARSessionSunsetSunriseMonitor friendlyName];
  id v14 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v13 content:&stru_101301420];

  id v15 = +[PedestrianARSessionThermalStateMonitor friendlyName];
  id v16 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v15 content:&stru_101301440];

  id v17 = +[PedestrianARSessionTileAvailabilityMonitor friendlyName];
  id v18 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v17 content:&stru_101301460];

  id v19 = +[PedestrianARSessionTransportTypeMonitor friendlyName];
  id v20 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v19 content:&stru_101301480];

  id v21 = +[PedestrianARSessionOfflineMonitor friendlyName];
  id v22 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:v21 content:&stru_1013014A0];

  objc_destroyWeak(&v24);
  objc_destroyWeak(&v26);
  objc_destroyWeak(&location);
}

void sub_100913288(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1009132C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1009133B0;
  void v5[3] = &unk_1012E6998;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Enabled" get:&stru_101301380 set:v5];
  [v3 setFooter:@"This monitor can't be disabled."];
  objc_destroyWeak(&v6);
}

void sub_100913390(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1009133A8(id a1)
{
  return 1;
}

void sub_1009133B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_1009133F0(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = +[PedestrianARSessionCarPlayConnectionMonitor enablementGEOConfigKey];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enable", v2, v3 geoConfigKey];
}

void sub_100913454(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = +[PedestrianARSessionCoarseLocationMonitor enablementGEOConfigKey];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Enable", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Authorization delay (seconds)", @"2", 2, MapsConfig_PedestrianARPreciseLocationAuthorizationDelay, off_1015EFEF8 placeholderText inputType geoConfigKeyDouble];
}

void sub_1009134E8(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = +[PedestrianARSessionNetworkReachabilityMonitor enablementGEOConfigKey];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
}

void sub_10091354C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100913638;
  void v5[3] = &unk_1012E6998;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Enabled" get:&stru_101301400 set:v5];
  [v3 setFooter:@"This monitor can't be disabled."];
  objc_destroyWeak(&v6);
}

void sub_100913618(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100913630(id a1)
{
  return 1;
}

void sub_100913638(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_100913678(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = +[PedestrianARSessionSunsetSunriseMonitor enablementGEOConfigKey];
  id v4 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Offset threshold (seconds)", @"900", 2, MapsConfig_PedestrianARSessionSunsetSunriseMonitorThreshold, off_1015EFF28 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Minimum time threshold (seconds)", @"300", 2, MapsConfig_PedestrianARSessionSunsetSunriseMonitorTimeThreshold, off_1015F0568 placeholderText inputType geoConfigKeyDouble];
  id v7 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Minimum distance threshold (meters)", @"100", 2, MapsConfig_PedestrianARSessionSunsetSunriseMonitorDistanceThreshold, off_1015F0558 placeholderText inputType geoConfigKeyDouble];
}

void sub_10091376C(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = +[PedestrianARSessionThermalStateMonitor enablementGEOConfigKey];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Threshold", @"30", 1, MapsConfig_PedestrianARSessionThermalStateMonitorThreshold, off_1015F04E8 placeholderText inputType geoConfigKeyInteger];
}

void sub_100913800(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = +[PedestrianARSessionTileAvailabilityMonitor enablementGEOConfigKey];
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addGEOTextFieldRowWithTitle:@"Minimum distance change threshold (meters)", @"10", 2, MapsConfig_VLFSessionTileAvailabilityMonitorDistanceThreshold, off_1015EF6F8 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v7 addGEOTextFieldRowWithTitle:@"Error timeout (seconds)", @"30", 2, MapsConfig_VLFSessionTileAvailabilityErrorTimeoutThreshold, off_1015EFAB8 placeholderText inputType geoConfigKeyDouble];
  [(MapsDebugTableSection *)v7 setFooter:@"This monitor's distance threshold and error timeout parameters are shared with the equivalent Treadstone tile availability monitor. Modifying them in one place will modify them in both."];
}

void sub_1009138E0(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = +[PedestrianARSessionTransportTypeMonitor enablementGEOConfigKey];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
}

void sub_100913944(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = +[PedestrianARSessionOfflineMonitor enablementGEOConfigKey];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
}

void sub_1009139A8(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = a2;
  objc_initWeak(&location, v2);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100913A80;
  void v4[3] = &unk_1012E7EF8;
  objc_copyWeak(&v5, &location);
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Usage monitor" content:v4];
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_100913A64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100913A80(uint64_t a1, void *a2)
{
  id v3 = a2;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100913CF8;
  v14[3] = &unk_1012E6708;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Clear all" action:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100913DA0;
  v12[3] = &unk_1012E6998;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"User entered AR" get:&stru_1013014E0 set:v12];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100913ED0;
  v10[3] = &unk_101301528;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addTextFieldRowWithTitle:@"AR localizations" placeholderText:@"0" inputType:2 get:&stru_101301500 set:v10];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100913FA4;
  void v8[3] = &unk_1012E6998;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  id v7 = [v3 addSwitchRowWithTitle:@"User saw AR maneuver" get:&stru_101301548 set:v8];
  objc_destroyWeak(&v9);
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
}

void sub_100913CB4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100913CF8(uint64_t a1)
{
  uint64_t v2 = +[PedestrianARSessionUsageTracker sharedInstance];
  [v2 clearAll];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_100913D60(id a1)
{
  id v1 = +[PedestrianARSessionUsageTracker sharedInstance];
  unsigned __int8 v2 = [v1 hasUserEnteredAR];

  return v2;
}

void sub_100913DA0(uint64_t a1, int a2)
{
  id v4 = +[PedestrianARSessionUsageTracker sharedInstance];
  id v5 = v4;
  if (a2)
  {
    [v4 registerUserEnteredARForRoute:@"debug_panel_route_id" entryPoint:0];

    id v5 = +[PedestrianARSessionUsageTracker sharedInstance];
    [v5 registerUserEnteredARForRoute:@"debug_panel_route_id" entryPoint:1];
  }
  else
  {
    [v4 clearUserEnteredARFlag];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

NSString *__cdecl sub_100913E58(id a1)
{
  id v1 = +[PedestrianARSessionUsageTracker sharedInstance];
  unsigned __int8 v2 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%ld", [v1 numberOfTimesARLocalized]);

  return (NSString *)v2;
}

void sub_100913ED0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = +[PedestrianARSessionUsageTracker sharedInstance];
  if (v5) {
    [v3 setNumberOfTimesARLocalized:[v5 integerValue]];
  }
  else {
    [v3 clearARLocalizationsFlag];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_100913F64(id a1)
{
  id v1 = +[PedestrianARSessionUsageTracker sharedInstance];
  unsigned __int8 v2 = [v1 hasARElementRendered];

  return v2;
}

void sub_100913FA4(uint64_t a1, int a2)
{
  id v4 = +[PedestrianARSessionUsageTracker sharedInstance];
  id v5 = v4;
  if (a2) {
    [v4 registerARElementRendered];
  }
  else {
    [v4 clearARElementRenderedFlag];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_100914024(uint64_t a1)
{
  unsigned __int8 v2 = +[UIApplication _maps_keyMapsSceneDelegate];
  id v3 = [v2 platformController];

  id v4 = [v3 currentSession];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {

    goto LABEL_5;
  }
  id v5 = [v3 currentSession];
  id v6 = [v5 sessionState];

  if (v6 != (id)1)
  {
LABEL_5:
    id v7 = [v3 iosBasedChromeViewController];
    id v8 = [v7 appCoordinator];
    id v9 = [v8 baseModeController];
    uint64_t v10 = [v9 actionCoordinator];
    goto LABEL_6;
  }
  id v7 = [v3 iosBasedChromeViewController];
  id v8 = [v7 appCoordinator];
  id v9 = [v8 navModeController];
  uint64_t v10 = [v9 navActionCoordinator];
LABEL_6:
  id v11 = (void *)v10;

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1009141CC;
  v14[3] = &unk_1012E5D08;
  id v15 = v11;
  id v13 = v11;
  [WeakRetained dismissViewControllerAnimated:1 completion:v14];
}

id sub_1009141CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) showPedestrianARFeatureIntroTeachableMomentCard];
}

void sub_1009141D4(uint64_t a1)
{
  unsigned __int8 v2 = +[UIApplication _maps_keyMapsSceneDelegate];
  id v3 = [v2 platformController];

  id v4 = [v3 currentSession];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {

    goto LABEL_5;
  }
  id v5 = [v3 currentSession];
  id v6 = [v5 sessionState];

  if (v6 != (id)1)
  {
LABEL_5:
    id v7 = [v3 iosBasedChromeViewController];
    id v8 = [v7 appCoordinator];
    id v9 = [v8 baseModeController];
    uint64_t v10 = [v9 actionCoordinator];
    goto LABEL_6;
  }
  id v7 = [v3 iosBasedChromeViewController];
  id v8 = [v7 appCoordinator];
  id v9 = [v8 navModeController];
  uint64_t v10 = [v9 navActionCoordinator];
LABEL_6:
  id v11 = (void *)v10;

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_10091437C;
  v14[3] = &unk_1012E5D08;
  id v15 = v11;
  id v13 = v11;
  [WeakRetained dismissViewControllerAnimated:1 completion:v14];
}

id sub_10091437C(uint64_t a1)
{
  return [*(id *)(a1 + 32) showPedestrianARRaiseToEnterTeachableMomentCard];
}

void sub_100914384(uint64_t a1, void *a2)
{
  id v3 = a2;
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_100914900;
  v33[3] = &unk_1012E6998;
  objc_copyWeak(&v34, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Enable" get:&stru_101301568 set:v33];
  id v5 = [v3 addGEOTextFieldRowWithTitle:@"Frame rate" placeholderText:@"10.0" inputType:2 geoConfigKeyDouble:MapsConfig_VLFSessionFrameRate];
  id v6 = [v3 addGEOTextFieldRowWithTitle:@"Experiment config" placeholderText:@"0" inputType:1 geoConfigKeyInteger:off_1015F0138];
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_1009149DC;
  v31[3] = &unk_1012E6998;
  objc_copyWeak(&v32, (id *)(a1 + 32));
  id v7 = [v3 addSwitchRowWithTitle:@"Enable callout banner" get:&stru_101301588 set:v31];
  id v8 = [v3 addSwitchRowWithTitle:@"Keep ARSession running forever" defaultsKey:@"VLFSessionKeepARSessionRunningForeverKey"];
  id v9 = [v3 addNavigationRowWithTitle:@"VLF success criteria" viewControllerContent:&stru_1013015C8];
  id v10 = [v3 addGEOTextFieldRowWithTitle:@"VL call interval" placeholderText:@"0.0" inputType:2 geoConfigKeyDouble:MapsConfig_VLFSessionVisualLocalizationCallInterval];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_100914FF0;
  v29[3] = &unk_1012FB070;
  objc_copyWeak(&v30, (id *)(a1 + 32));
  id v11 = [v3 addNavigationRowWithTitle:@"Throttle VLF after localization" viewControllerContent:v29];
  id v12 = [v3 addSwitchRowWithTitle:@"Reload route after localization" geoConfigKey:MapsConfig_VLFSessionReloadRouteOnSuccess off_1015EFB88];
  id v13 = [v3 addGEOTextFieldRowWithTitle:@"UI timeout" placeholderText:@"10.0" inputType:2 geoConfigKeyDouble:MapsConfig_VLFLocalizationTimeout];
  id v14 = [v3 addGEOTextFieldRowWithTitle:@"Keep scanning delay" placeholderText:@"3.5" inputType:2 geoConfigKeyDouble:MapsConfig_VLFSessionKeepScanningDelay];
  id v15 = [v3 addGEOTextFieldRowWithTitle:@"Camera pitch threshold" placeholderText:@"30" inputType:2 geoConfigKeyDouble:MapsConfig_VLFSessionCameraPitchThreshold];
  id v16 = [v3 addSwitchRowWithTitle:@"Slow down scanning animations" defaultsKey:@"VLFSessionScanningAnimationSlowDownKey"];
  id v17 = [v3 addSwitchRowWithTitle:@"Show longest text" defaultsKey:@"VLFSessionScanningAnimationShowLongestTextKey"];
  id v18 = [v3 addTextFieldRowWithTitle:@"Alternative longest scanning text" placeholderText:&stru_101324E70 inputType:3 defaultsKey:@"VLFSessionScanningAnimationAlternativeLongestTextKey"];
  id v19 = [v3 addSwitchRowWithTitle:@"Enable camera motion monitor" defaultsKey:@"VLFSessionScanningEnableCameraMotionMonitorKey"];
  id v20 = [v3 addSwitchRowWithTitle:@"Always show puck" defaultsKey:@"VLFSessionAlwaysShowPuckKey"];
  id v21 = [v3 addSwitchRowWithTitle:@"Show floating debug view" get:&stru_101301648 set:&stru_101301668];
  if (GEOConfigGetBOOL())
  {
    id v22 = [v3 addSwitchRowWithTitle:@"VL Trace Recording" geoConfigKey:MapsConfig_VLTraceRecordingEnabled off_1015EF5A8];
    id v23 = [v3 addSwitchRowWithTitle:@"Temporarily recording VL traces" defaultsKey:@"PedestrianARViewControllerTemporarilyEnableVLTraceRecordingKey"];
  }
  id v24 = [v3 addNavigationRowWithTitle:@"Session state management" viewControllerContent:&stru_101301688];
  if (GEOConfigGetBOOL())
  {
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_100916CC8;
    v27[3] = &unk_1012E6708;
    objc_copyWeak(&v28, (id *)(a1 + 40));
    id v25 = [v3 addButtonRowWithTitle:@"Show VLF UI" action:v27];
    objc_destroyWeak(&v28);
  }
  else
  {
    id v26 = [v3 addReadOnlyRowWithTitle:@"Show VLF UI" subtitle:0];
  }
  objc_destroyWeak(&v30);
  objc_destroyWeak(&v32);
  objc_destroyWeak(&v34);
}

void sub_1009148A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1009148F0(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100914900(uint64_t a1)
{
  GEOConfigSetBOOL();
  id v4 = +[UIAlertController alertControllerWithTitle:@"Restart Maps" message:@"You will need to restart Maps for this change to take effect" preferredStyle:1];
  unsigned __int8 v2 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:0];
  [v4 addAction:v2];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained presentViewController:v4 animated:1 completion:0];
}

BOOL sub_1009149CC(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_1009149DC(uint64_t a1)
{
  GEOConfigSetBOOL();
  id v5 = +[UIAlertController alertControllerWithTitle:@"Clear usage counts?" message:@"Would you like to also clear all of your VLF usage counts? This will make VLF behave as if you've never seen the feature before." preferredStyle:1];
  unsigned __int8 v2 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:&stru_1013015A8];
  [v5 addAction:v2];

  id v3 = +[UIAlertAction actionWithTitle:@"No, thanks" style:1 handler:0];
  [v5 addAction:v3];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained presentViewController:v5 animated:1 completion:0];
}

void sub_100914AE4(id a1, UIAlertAction *a2)
{
  id v2 = +[VLFSessionUsageTracker sharedInstance];
  [v2 clearAll];
}

void sub_100914B2C(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = a2;
  objc_initWeak(&location, v2);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100914C00;
  void v4[3] = &unk_1012E7EF8;
  objc_copyWeak(&v5, &location);
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:0 content:v4];
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_100914BE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100914C00(uint64_t a1, void *a2)
{
  id v3 = a2;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100914DB4;
  v12[3] = &unk_1012E6998;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Horizontal accuracy OR fused location" get:&stru_1013015E8 set:v12];
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  id v9 = sub_100914EE8;
  id v10 = &unk_1012E6998;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Horizontal accuracy AND fused location" get:&stru_101301608 set:&v7];
  id v6 = [v3 addSwitchRowWithTitle:@"Ignore fused location during ARKit replay" defaultsKey:@"VLFSessionIgnoreFusedLocationForReplayKey" v7, v8, v9, v10];
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
}

void sub_100914D60(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100914D88(id a1)
{
  return GEOConfigGetUInteger() == 0;
}

void sub_100914DB4(uint64_t a1)
{
  GEOConfigSetUInteger();
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100914E7C;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_100914E7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

BOOL sub_100914EBC(id a1)
{
  return GEOConfigGetUInteger() == 1;
}

void sub_100914EE8(uint64_t a1)
{
  GEOConfigSetUInteger();
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100914FB0;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_100914FB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_100914FF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, v3);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100915114;
  v6[3] = &unk_1012FD470;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  objc_copyWeak(&v8, &location);
  id v4 = [v3 addSectionWithTitle:0 content:v6];
  id v5 = [v3 addSectionWithTitle:@"Teardown conditions" content:&stru_101301628];
  objc_destroyWeak(&v8);
  objc_destroyWeak(&v7);
  objc_destroyWeak(&location);
}

void sub_1009150EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 40));
  _Unwind_Resume(a1);
}

void sub_100915114(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10091520C;
  void v5[3] = &unk_1012FD448;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v4 = [v3 addSwitchRowWithTitle:@"Enable" geoConfigKey:MapsConfig_VLFVIOEnabled switchOnStateIfUnset:off_1015EF9D8 changeHandler:1 v5];
  objc_destroyWeak(&v7);
  objc_destroyWeak(&v6);
}

void sub_1009151F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10091520C(uint64_t a1)
{
  id v5 = +[UIAlertController alertControllerWithTitle:@"Restart Maps" message:@"You will need to restart Maps for this change to take effect" preferredStyle:1];
  dispatch_time_t v2 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:0];
  [v5 addAction:v2];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained presentViewController:v5 animated:1 completion:0];

  id v4 = objc_loadWeakRetained((id *)(a1 + 40));
  [v4 rebuildSections];
}

void sub_1009152D8(id a1, MapsDebugTableSection *a2)
{
  id v10 = a2;
  id v2 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"When CL accuracy gets bad enough", MapsConfig_VLFVIOTeardownLocationAccuracyEnabled, off_1015EF928 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v10 addGEOTextFieldRowWithTitle:@"CL accuracy threshold", @"15", 2, MapsConfig_VLFVIOTeardownLocationAccuracyThreshold, off_1015EF938 placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Timeout enabled", MapsConfig_VLFVIOTeardownTimeoutEnabled, off_1015EF948 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v10 addGEOTextFieldRowWithTitle:@"Timeout (seconds)", @"120", 2, MapsConfig_VLFVIOTeardownTimeout, off_1015EF958 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Distance", MapsConfig_VLFVIOTeardownDistanceEnabled, off_1015EFA58 geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v10 addGEOTextFieldRowWithTitle:@"Distance threshold (meters)", @"120", 2, MapsConfig_VLFVIOTeardownDistanceThreshold, off_1015EFA68 placeholderText inputType geoConfigKeyDouble];
  id v8 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"When we stop getting fused locations", MapsConfig_VLFVIOTeardownFusedLocationEnabled, off_1015EFAA8 geoConfigKey];
  id v9 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"App background", MapsConfig_VLFVIOTeardownAppBackgroundEnabled, off_1015EFB78 geoConfigKey];
}

BOOL sub_100915458(id a1)
{
  id v1 = +[VLFSessionStateFloatingDebugViewController sharedInstance];
  unsigned __int8 v2 = [v1 isAttached];

  return v2;
}

void sub_100915498(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VLFSessionStateFloatingDebugViewController sharedInstance];
  id v4 = v3;
  if (v2) {
    [v3 attach];
  }
  else {
    [v3 detach];
  }
}

void sub_1009154F8(id a1, MapsDebugValuesViewController *a2)
{
  BOOL v2 = a2;
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"App launch delay monitor" content:&stru_1013016A8];
  id v4 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"CarPlay connection monitor" content:&stru_1013016C8];
  id v5 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Chrome stack monitor" content:&stru_1013016E8];
  id v6 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Coarse location monitor" content:&stru_101301708];
  id v7 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Historical location accuracy monitor" content:&stru_101301728];
  id v8 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Home/work monitor" content:&stru_101301748];
  id v9 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Horizontal accuracy monitor" content:&stru_101301768];
  id v10 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Location type monitor" content:&stru_101301788];
  id v11 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Location signal environment monitor" content:&stru_1013017A8];
  id v12 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Maps home monitor" content:&stru_1013017C8];
  id v13 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Network reachability monitor" content:&stru_1013017E8];
  id v14 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Outdoor monitor" content:&stru_101301808];
  id v15 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Sunset/sunrise monitor" content:&stru_101301828];
  id v16 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Thermal state monitor" content:&stru_101301848];
  id v17 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Tile availability monitor" content:&stru_101301868];
  id v18 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Transit stepping monitor" content:&stru_101301888];
  id v19 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Offline Maps monitor" content:&stru_1013018A8];
  objc_initWeak(&location, v2);
  id v23 = _NSConcreteStackBlock;
  uint64_t v24 = 3221225472;
  id v25 = sub_10091666C;
  id v26 = &unk_1012E7EF8;
  objc_copyWeak(&v27, &location);
  id v20 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Usage monitor" content:&v23];
  id v21 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Debug puck visibility monitor", &stru_101301968, v23, v24, v25, v26 content];
  id v22 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Debug banner visibility monitor" content:&stru_101301988];
  objc_destroyWeak(&v27);
  objc_destroyWeak(&location);
}

void sub_100915810(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100915830(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionAppLaunchDelayMonitorEnabled, off_1015EF9A8 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Timeout threshold (seconds)", @"1", 2, MapsConfig_VLFSessionAppLaunchDelayMonitorTimeoutThreshold, off_1015EF9B8 placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionAppLaunchDelayMonitorAffectsPuckVisibilityKey"];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionAppLaunchDelayMonitorAffectsBannerVisibilityKey"];
}

void sub_1009158F8(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionCarPlayConnectionMonitorEnabled, off_1015EF698 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionCarPlayConnectionMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionCarPlayConnectionMonitorAffectsBannerVisibilityKey"];
}

void sub_100915990(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionChromeStackMonitorEnabled, off_1015EFC68 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionChromeStackMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionChromeStackMonitorAffectsBannerVisibilityKey"];
}

void sub_100915A28(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionCoarseLocationMonitorEnabled, off_1015EF678 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Authorization delay (seconds)", @"2", 2, MapsConfig_VLFPreciseLocationAuthorizationDelay, off_1015EF9E8 placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionCoarseLocationMonitorAffectsPuckVisibilityKey"];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionCoarseLocationMonitorAffectsBannerVisibilityKey"];
}

void sub_100915AF0(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionHistoricalLocationAccuracyMonitorEnabled, off_1015EFC98 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Location window size", @"3", 1, MapsConfig_VLFSessionEligibleLocationUpdateWindowSize, off_1015EFCA8 placeholderText inputType geoConfigKeyUInteger];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionHistoricalLocationAccuracyMonitorAffectsPuckVisibilityKey"];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionHistoricalLocationAccuracyMonitorAffectsBannerVisibilityKey"];
}

void sub_100915BB8(id a1, MapsDebugTableSection *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionHomeWorkMonitorEnabled, off_1015EFDF8 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionHomeWorkMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionHomeWorkMonitorAffectsBannerVisibilityKey"];
  id v5 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Distance threshold (meters)", @"100.0", 2, MapsConfig_VLFSessionHomeWorkMonitorDistanceThreshold, off_1015EFE28 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Location update threshold (meters)", @"10.0", 2, MapsConfig_VLFSessionHomeWorkMonitorLocationUpdateDistanceThreshold, off_1015F0778 placeholderText inputType geoConfigKeyDouble];
  id v7 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Home", MapsConfig_VLFSessionHomeWorkMonitorHomeCheckEnabled, off_1015EFE08 geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Work", MapsConfig_VLFSessionHomeWorkMonitorWorkCheckEnabled, off_1015EFE18 geoConfigKey];
}

void sub_100915CF8(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionLocationHorizontalAccuracyMonitorEnabled, off_1015EFB98 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionLocationHorizontalAccuracyMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionLocationHorizontalAccuracyMonitorAffectsBannerVisibilityKey"];
}

void sub_100915D90(id a1, MapsDebugTableSection *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionLocationTypeMonitorEnabled, off_1015EFBA8 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionLocationTypeMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionLocationTypeMonitorAffectsBannerVisibilityKey"];
  id v5 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"GPS", MapsConfig_VLFSessionLocationTypeAllowGPS, off_1015EFBB8 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"WiFi", MapsConfig_VLFSessionLocationTypeAllowWiFi, off_1015EFBC8 geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"WiFi2", MapsConfig_VLFSessionLocationTypeAllowWiFi2, off_1015EFBD8 geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Pipeline", MapsConfig_VLFSessionLocationTypeAllowPipeline, off_1015EFBE8 geoConfigKey];
}

void sub_100915EB8(id a1, MapsDebugTableSection *a2)
{
  id v10 = a2;
  id v2 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionLocationSignalEnvironmentMonitorEnabled, off_1015EFE38 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionLocationSignalEnvironmentMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionLocationSignalEnvironmentMonitorAffectsBannerVisibilityKey"];
  id v5 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Rural", MapsConfig_VLFSessionLocationSignalEnvironmentAllowRural, off_1015EFE48 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Urban", MapsConfig_VLFSessionLocationSignalEnvironmentAllowUrban, off_1015EFE58 geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"DenseUrban", MapsConfig_VLFSessionLocationSignalEnvironmentAllowDenseUrban, off_1015EFE68 geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"DenseUrbanCanyon", MapsConfig_VLFSessionLocationSignalEnvironmentAllowDenseUrbanCanyon, off_1015EFE78 geoConfigKey];
  id v9 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Foliage", MapsConfig_VLFSessionLocationSignalEnvironmentAllowFoliage, off_1015EFE88 geoConfigKey];
}

void sub_100916004(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionMapsHomeMonitorEnabled, off_1015EF728 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionMapsHomeMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionMapsHomeMonitorAffectsBannerVisibilityKey"];
}

void sub_10091609C(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionNetworkReachabilityMonitorEnabled, off_1015EF6A8 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionNetworkReachabilityMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionNetworkReachabilityMonitorAffectsBannerVisibilityKey"];
}

void sub_100916134(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionLocationOutdoorMonitorEnabled, off_1015F0218 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionLocationOutdoorMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionLocationOutdoorMonitorAffectsBannerVisibilityKey"];
  id v5 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Confidence threshold", @"0.85", 2, MapsConfig_VLFSessionLocationOutdoorMonitorConfidenceThreshold, off_1015F0228 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Consecutive outdoor requirement", @"5", 1, MapsConfig_VLFSessionLocationOutdoorMonitorConsecutiveOutdoorCount, off_1015F0238 placeholderText inputType geoConfigKeyUInteger];
  id v7 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Consecutive indoor requirement", @"5", 1, MapsConfig_VLFSessionLocationOutdoorMonitorConsecutiveIndoorCount, off_1015F0248 placeholderText inputType geoConfigKeyUInteger];
}

void sub_100916264(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionSunsetSunriseMonitorEnabled, off_1015EF608 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Offset threshold (seconds)", @"900", 2, MapsConfig_VLFSessionSunsetSunriseMonitorThreshold, off_1015EF618 placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Minimum time threshold (seconds)", @"300", 2, MapsConfig_VLFSessionSunsetSunriseMonitorTimeThreshold, off_1015EF638 placeholderText inputType geoConfigKeyDouble];
  id v5 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Minimum distance threshold (meters)", @"100", 2, MapsConfig_VLFSessionSunsetSunriseMonitorDistanceThreshold, off_1015EF628 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionSunsetSunriseMonitorAffectsPuckVisibilityKey"];
  id v7 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionSunsetSunriseMonitorAffectsBannerVisibilityKey"];
}

void sub_10091638C(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionThermalStateMonitorEnabled, off_1015EF6D8 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionThermalStateMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionThermalStateMonitorAffectsBannerVisibilityKey"];
}

void sub_100916424(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = MapsConfig_VLFSessionTileAvailabilityMonitorEnabled;
  id v3 = off_1015EF668;
  id v9 = a2;
  id v4 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Minimum distance change threshold (meters)", @"10", 2, MapsConfig_VLFSessionTileAvailabilityMonitorDistanceThreshold, off_1015EF6F8 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Error timeout (seconds)", @"30", 2, MapsConfig_VLFSessionTileAvailabilityErrorTimeoutThreshold, off_1015EFAB8 placeholderText inputType geoConfigKeyDouble];
  id v7 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionTileAvailabilityMonitorAffectsPuckVisibilityKey"];
  id v8 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionTileAvailabilityMonitorAffectsBannerVisibilityKey"];
  [(MapsDebugTableSection *)v9 setFooter:@"This monitor's distance threshold and error timeout parameters are shared with the equivalent Pedestrian AR tile availability monitor. Modifying them in one place will modify them in both."];
}

void sub_10091653C(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionTransitSteppingMonitorEnabled, off_1015EFA78 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionTransitSteppingMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionTransitSteppingMonitorAffectsBannerVisibilityKey"];
}

void sub_1009165D4(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_VLFSessionOfflineMonitorEnabled, off_1015F0B98 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionOfflineMonitorAffectsPuckVisibilityKey"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionOfflineMonitorAffectsBannerVisibilityKey"];
}

void sub_10091666C(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Enabled" geoConfigKey:MapsConfig_VLFSessionUsageMonitorEnabled off_1015EF5F8];
  id v5 = [v3 addSwitchRowWithTitle:@"Affects puck visibility" defaultsKey:@"VLFSessionUsageMonitorAffectsPuckVisibilityKey"];
  id v6 = [v3 addSwitchRowWithTitle:@"Affects banner visibility" defaultsKey:@"VLFSessionUsageMonitorAffectsBannerVisibilityKey"];
  id v7 = [v3 addGEOTextFieldRowWithTitle:@"Maximum callout dismisses" placeholderText:@"3" inputType:1 geoConfigKeyUInteger:MapsConfig_VLFSessionUsageMonitorMaximumCalloutDismissalCount];
  id v8 = [v3 addGEOTextFieldRowWithTitle:@"First interaction threshold (s)" placeholderText:@"1296000" inputType:2 geoConfigKeyDouble:MapsConfig_VLFSessionUsageMonitorFirstInteractionThreshold];
  id v9 = [v3 addGEOTextFieldRowWithTitle:@"Second interaction threshold (s)" placeholderText:@"2592000" inputType:2 geoConfigKeyDouble:MapsConfig_VLFSessionUsageMonitorAfterFirstInteractionThreshold];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_1009169C4;
  v21[3] = &unk_101301528;
  a1 += 4;
  objc_copyWeak(&v22, a1);
  id v10 = [v3 addTextFieldRowWithTitle:@"VLF localizations" placeholderText:@"0" inputType:2 get:&stru_1013018C8 set:v21];
  id v11 = [v3 addButtonRowWithTitle:@"Clear user has entered VLF flag" action:&stru_1013018E8];
  id v12 = [v3 addButtonRowWithTitle:@"Clear user has seen VLF callout flag" action:&stru_101301908];
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 3221225472;
  id v18 = sub_100916AE8;
  id v19 = &unk_1012E6708;
  objc_copyWeak(&v20, a1);
  id v13 = [v3 addButtonRowWithTitle:@"Clear successful VLF localization count" action:&v16];
  id v14 = [v3 addButtonRowWithTitle:@"Clear dismissals" action:&stru_101301928 v16, v17, v18, v19];
  id v15 = [v3 addButtonRowWithTitle:@"Clear taps" action:&stru_101301948];
  objc_destroyWeak(&v20);
  objc_destroyWeak(&v22);
}

void sub_100916920(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

NSString *__cdecl sub_10091694C(id a1)
{
  id v1 = +[VLFSessionUsageTracker sharedInstance];
  id v2 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%ld", [v1 numberOfTimesVLFLocalized]);

  return (NSString *)v2;
}

void sub_1009169C4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = +[VLFSessionUsageTracker sharedInstance];
  if (v5) {
    [v3 setNumberOfTimesVLFLocalized:[v5 integerValue]];
  }
  else {
    [v3 clearSuccessfulVLFLocalizations];
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_100916A58(id a1)
{
  id v1 = +[VLFSessionUsageTracker sharedInstance];
  [v1 clearUserEnteredVLFFlag];
}

void sub_100916AA0(id a1)
{
  id v1 = +[VLFSessionUsageTracker sharedInstance];
  [v1 clearUserWasShownVLFCalloutFlag];
}

void sub_100916AE8(uint64_t a1)
{
  id v2 = +[VLFSessionUsageTracker sharedInstance];
  [v2 clearSuccessfulVLFLocalizations];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_100916B50(id a1)
{
  id v1 = +[VLFSessionUsageTracker sharedInstance];
  [v1 clearDismissals];
}

void sub_100916B98(id a1)
{
  id v1 = +[VLFSessionUsageTracker sharedInstance];
  [v1 clearTaps];
}

void sub_100916BE0(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enabled" defaultsKey:@"VLFSessionDebugPuckVisibilityMonitorEnabledKey"];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Active" defaultsKey:@"VLFSessionDebugPuckVisibilityMonitorActiveKey"];
}

void sub_100916C54(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enabled" defaultsKey:@"VLFSessionDebugBannerVisibilityMonitorEnabledKey"];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Active" defaultsKey:@"VLFSessionDebugBannerVisibilityMonitorActiveKey"];
}

void sub_100916CC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissViewControllerAnimated:1 completion:&stru_1013019A8];
}

void sub_100916D14(id a1)
{
  id v1 = +[UIApplication _maps_keyMapsSceneDelegate];
  id v5 = [v1 platformController];

  id v2 = [v5 auxiliaryTasksManager];
  id v3 = [v2 auxilaryTaskForClass:objc_opt_class()];

  [v3 showVLFUI];
  id v4 = +[VLFSessionUsageTracker sharedInstance];
  [v4 registerUserWasShownCallout];
}

void sub_100916DCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Enabled" geoConfigKey:MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled[0] MapsFeaturesConfig_VisualLocalizationCrowdsourcingEnabled[1]];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100916F88;
  v13[3] = &unk_1012E6998;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Collect VLF Crowdsourcing data" get:&stru_1013019C8 set:v13];
  id v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472;
  id v10 = sub_1009170C8;
  id v11 = &unk_1012E6708;
  objc_copyWeak(&v12, (id *)(a1 + 40));
  id v6 = [v3 addButtonRowWithTitle:@"Clear VLF Crowdsourcing flag" action:&v8];
  id v7 = [v3 addGEOTextFieldRowWithTitle:@"Permission dialog localization threshold" placeholderText:@"3" inputType:1 geoConfigKeyInteger:MapsConfig_VLFCrowdsourcingPermissionDialogLocalizationCountRequirement off_1015F07B8 v8 v9 v10 v11];
  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);
}

void sub_100916F50(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100916F78(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100916F88(uint64_t a1, char a2)
{
  if (a2)
  {
    id v6 = +[UIAlertController alertControllerWithTitle:@"Enable Crowdsourcing?" message:@"Enabling this will result in various sensor readings and information derived from your camera during Pedestrian AR and Refine Location to be sent to Apple. Actual camera images will NOT be collected." preferredStyle:1];
    id v3 = +[UIAlertAction actionWithTitle:@"Enable" style:0 handler:&stru_1013019E8];
    [v6 addAction:v3];

    id v4 = +[UIAlertAction actionWithTitle:@"Cancel" style:1 handler:0];
    [v6 addAction:v4];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained presentViewController:v6 animated:1 completion:0];
  }
  else
  {
    GEOConfigSetBOOL();
  }
}

void sub_1009170B4(id a1, UIAlertAction *a2)
{
}

void sub_1009170C8(uint64_t a1)
{
  _GEOConfigRemoveValue();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_100917124(uint64_t a1, void *a2)
{
  id v3 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100917264;
  void v8[3] = &unk_1012E6998;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Enable" geoConfigKey:MapsConfig_OpticalHeadingEnabled switchOnStateIfUnset:off_1015EF2C8 changeHandler:0 v8];
  id v5 = [v3 addSwitchRowWithTitle:@"Enable in route planning" geoConfigKey:MapsConfig_OpticalHeadingEnableInRoutePlanning off_1015EF2D8];
  id v6 = [v3 addNavigationRowWithTitle:@"Thermal state threshold" viewControllerContent:&stru_101301A28];
  id v7 = [v3 addNavigationRowWithTitle:@"Session state management" viewControllerContent:&stru_101301AC8];
  objc_destroyWeak(&v9);
}

void sub_10091724C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100917264(uint64_t a1, int a2)
{
  if (GEOConfigGetBOOL() != a2)
  {
    if (a2) {
      CFStringRef v4 = @"MarcoLite Enabled";
    }
    else {
      CFStringRef v4 = @"MarcoLite Disabled";
    }
    if (a2) {
      CFStringRef v5 = @"Enable CoreLocation Pedestrian Map Matching?";
    }
    else {
      CFStringRef v5 = @"Disable CoreLocation Pedestrian Map Matching?";
    }
    id v6 = +[UIAlertController alertControllerWithTitle:v4 message:v5 preferredStyle:1];
    id v7 = +[UIAlertAction actionWithTitle:@"No" style:1 handler:0];
    [v6 addAction:v7];

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1009173CC;
    v10[3] = &unk_101301A08;
    char v11 = a2;
    id v8 = +[UIAlertAction actionWithTitle:@"Yes" style:0 handler:v10];
    [v6 addAction:v8];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained presentViewController:v6 animated:1 completion:0];
  }
}

uint64_t sub_1009173CC()
{
  return GEOConfigSetBOOL();
}

void sub_1009173E0(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = a2;
  objc_initWeak(&location, v2);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1009174B8;
  void v4[3] = &unk_1012E7EF8;
  objc_copyWeak(&v5, &location);
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Thermal states" content:v4];
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_10091749C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1009174B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100917748;
  v14[3] = &unk_1012E6998;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Nominal" get:&stru_101301A48 set:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1009177E4;
  v12[3] = &unk_1012E6998;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Fair" get:&stru_101301A68 set:v12];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100917880;
  v10[3] = &unk_1012E6998;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addSwitchRowWithTitle:@"Serious" get:&stru_101301A88 set:v10];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10091791C;
  void v8[3] = &unk_1012E6998;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  id v7 = [v3 addSwitchRowWithTitle:@"Critical" get:&stru_101301AA8 set:v8];
  objc_destroyWeak(&v9);
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
}

void sub_1009176D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_10091771C(id a1)
{
  return GEOConfigGetInteger() == 0;
}

void sub_100917748(uint64_t a1, int a2)
{
  if (a2) {
    GEOConfigSetSyncInteger();
  }
  else {
    _GEOConfigRemoveValueSync();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_1009177B8(id a1)
{
  return GEOConfigGetInteger() == 1;
}

void sub_1009177E4(uint64_t a1, int a2)
{
  if (a2) {
    GEOConfigSetSyncInteger();
  }
  else {
    _GEOConfigRemoveValueSync();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_100917854(id a1)
{
  return GEOConfigGetInteger() == 2;
}

void sub_100917880(uint64_t a1, int a2)
{
  if (a2) {
    GEOConfigSetSyncInteger();
  }
  else {
    _GEOConfigRemoveValueSync();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_1009178F0(id a1)
{
  return GEOConfigGetInteger() == 3;
}

void sub_10091791C(uint64_t a1, int a2)
{
  if (a2) {
    GEOConfigSetSyncInteger();
  }
  else {
    _GEOConfigRemoveValueSync();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_10091798C(id a1, MapsDebugValuesViewController *a2)
{
  uint64_t v2 = a2;
  objc_initWeak(&location, v2);
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Floating debug view" content:&stru_101301AE8];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100917D6C;
  v19[3] = &unk_1012E7EF8;
  objc_copyWeak(&v20, &location);
  id v4 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Monitors" content:v19];
  if (GEOConfigGetBOOL())
  {
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_10091821C;
    v17[3] = &unk_1012E7EF8;
    objc_copyWeak(&v18, &location);
    id v5 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Daily usage limits" content:v17];
    objc_destroyWeak(&v18);
  }
  id v6 = +[UIApplication _maps_keyMapsSceneDelegate];
  id v7 = [v6 platformController];

  id v8 = [v7 auxiliaryTasksManager];
  id v9 = [v8 auxilaryTaskForClass:objc_opt_class()];

  [v9 activeMonitors];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  id v15[2] = sub_100918698;
  v15[3] = &unk_1012EE018;
  id v10 = (id)objc_claimAutoreleasedReturnValue();
  id v16 = v10;
  id v11 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Currently active monitors" content:v15];
  if ([v10 count])
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1009187EC;
    v13[3] = &unk_1012EE018;
    id v14 = v10;
    id v12 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Session throttling & disabling" content:v13];
  }
  objc_destroyWeak(&v20);
  objc_destroyWeak(&location);
}

void sub_100917C4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_100917C90(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Show floating debug view" get:&stru_101301B08 set:&stru_101301B28];
}

BOOL sub_100917CCC(id a1)
{
  id v1 = +[VIOSessionStateFloatingDebugViewController sharedInstance];
  unsigned __int8 v2 = [v1 isAttached];

  return v2;
}

void sub_100917D0C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  uint64_t v3 = +[VIOSessionStateFloatingDebugViewController sharedInstance];
  id v4 = v3;
  if (v2) {
    [v3 attach];
  }
  else {
    [v3 detach];
  }
}

void sub_100917D6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Low power mode monitor" geoConfigKey:MapsConfig_OpticalHeadingSessionThrottlerEnablePowerStateMonitor off_1015EF388];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1009180DC;
  v19[3] = &unk_1012E6998;
  objc_copyWeak(&v20, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Daily usage monitor" get:&stru_101301B48 set:v19];
  id v6 = [v3 addSwitchRowWithTitle:@"Device motion monitor" geoConfigKey:MapsConfig_OpticalHeadingSessionThrottlerEnableDeviceMotionMonitor off_1015EF508];
  id v7 = [v3 addSwitchRowWithTitle:@"Tracking state monitor" geoConfigKey:MapsConfig_OpticalHeadingSessionThrottlerEnableTrackingStateMonitor off_1015EF518];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_10091814C;
  v17[3] = &unk_1012E6998;
  objc_copyWeak(&v18, (id *)(a1 + 32));
  id v8 = [v3 addSwitchRowWithTitle:@"Sunset/sunrise monitor" get:&stru_101301B68 set:v17];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  id v15[2] = sub_1009181BC;
  v15[3] = &unk_1012E6998;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  id v9 = [v3 addSwitchRowWithTitle:@"Battery level monitor" get:&stru_101301B88 set:v15];
  if (GEOConfigGetBOOL()) {
    id v10 = [v3 addGEOTextFieldRowWithTitle:@"Minimum battery level" placeholderText:@"20" inputType:2 geoConfigKeyDouble:MapsConfig_OpticalHeadingSessionThrottlerBatteryLevelThreshold];
  }
  if (GEOConfigGetBOOL()) {
    id v11 = [v3 addGEOTextFieldRowWithTitle:@"Sunset/sunrise offset" placeholderText:@"600" inputType:2 geoConfigKeyDouble:MapsConfig_OpticalHeadingSessionThrottlerSunsetSunriseOffsetThreshold off_1015EF4E8];
  }
  id v12 = [v3 addSwitchRowWithTitle:@"Thermal state monitor" geoConfigKey:MapsConfig_OpticalHeadingSessionThrottlerEnableThermalStateMonitor off_1015EFA48];
  id v13 = [v3 addGEOTextFieldRowWithTitle:@"Retry time interval" placeholderText:@"180" inputType:2 geoConfigKeyDouble:MapsConfig_OpticalHeadingSessionThrottlerRetryTimeInterval];
  id v14 = [v3 addGEOTextFieldRowWithTitle:@"Consecutive event timeout" placeholderText:@"20" inputType:2 geoConfigKeyDouble:MapsConfig_OpticalHeadingSessionThrottlerConsecutiveEventTimeout];
  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&v20);
}

void sub_100918090(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1009180CC(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_1009180DC(uint64_t a1)
{
  GEOConfigSetBOOL();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

BOOL sub_10091813C(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10091814C(uint64_t a1)
{
  GEOConfigSetBOOL();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

BOOL sub_1009181AC(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_1009181BC(uint64_t a1)
{
  GEOConfigSetBOOL();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_10091821C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addGEOTextFieldRowWithTitle:@"Maximum daily usage" placeholderText:@"900" inputType:2 geoConfigKeyDouble:MapsConfig_OpticalHeadingSessionThrottlerDailyUsageLimit off_1015EF398];
  id v5 = +[VIOSessionDailyUsageEntry loadOrCreateEntry];
  [v5 currentUsage];
  id v6 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  id v7 = [v6 stringValue];
  id v8 = [v3 addReadOnlyRowWithTitle:@"Today's usage" value:v7];

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1009184F0;
  v19[3] = &unk_1012E6708;
  objc_copyWeak(&v20, (id *)(a1 + 32));
  id v9 = [v3 addButtonRowWithTitle:@"Clear current daily usage" action:v19];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100918548;
  v17[3] = &unk_1012E6708;
  objc_copyWeak(&v18, (id *)(a1 + 32));
  id v10 = [v3 addButtonRowWithTitle:@"Simulate day change" action:v17];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  id v15[2] = sub_1009185C0;
  v15[3] = &unk_1012E6708;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  id v11 = [v3 addButtonRowWithTitle:@"Make entry 1 day old" action:v15];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100918658;
  v13[3] = &unk_1012E6708;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  id v12 = [v3 addButtonRowWithTitle:@"Refresh this page" action:v13];
  objc_destroyWeak(&v14);
  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&v20);
}

void sub_1009184AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1009184F0(uint64_t a1)
{
  +[VIOSessionDailyUsageEntry clearEntry];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_100918548(uint64_t a1)
{
  BOOL v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:NSCalendarDayChangedNotification object:0];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_1009185C0(uint64_t a1)
{
  id v4 = +[VIOSessionDailyUsageEntry loadOrCreateEntry];
  BOOL v2 = +[NSDate dateWithTimeIntervalSinceNow:-86400.0];
  [v4 updateCreationDate:v2];

  [v4 save];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_100918658(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_100918698(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) count])
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v4 = *(id *)(a1 + 32);
    id v5 = (char *)[v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v14;
      do
      {
        id v8 = 0;
        do
        {
          if (*(void *)v14 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = (objc_class *)objc_opt_class();
          id v10 = NSStringFromClass(v9);
          id v11 = [v3 addReadOnlyRowWithTitle:v10 subtitle:0 v13];

          ++v8;
        }
        while (v6 != v8);
        id v6 = (char *)[v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v6);
    }
  }
  else
  {
    id v12 = [v3 addEmptySectionBannerRowWithTitle:@"There are currently no active monitors"];
  }
}

void sub_1009187EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) anyObject];
  id v5 = [v4 stateManager];

  if ([v5 isThrottling])
  {
    id v6 = [v3 addEmptySectionBannerRowWithTitle:@"The VIO session is currently throttled"];
    [v5 remainingThrottleTime];
    uint64_t v7 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    id v8 = [v7 stringValue];
    id v9 = [v3 addReadOnlyRowWithTitle:@"Time left:" subtitle:v8];

    if ([v5 throttleEventReason]) {
      CFStringRef v10 = @"VIOSessionThrottleEventDeviceMotion";
    }
    else {
      CFStringRef v10 = @"VIOSessionThrottleEventARTrackingState";
    }
    id v11 = [v3 addReadOnlyRowWithTitle:@"Reason:" subtitle:v10];
  }
  else if ([v5 isDisabled])
  {
    id v12 = [v3 addEmptySectionBannerRowWithTitle:@"The VIO session is currently disabled"];
    id v13 = [v3 addReadOnlyRowWithTitle:@"Reasons:" subtitle:0];
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v14 = [v5 disableEventReasons];
    id v15 = [v14 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v15)
    {
      id v16 = v15;
      uint64_t v17 = *(void *)v24;
      do
      {
        id v18 = 0;
        do
        {
          if (*(void *)v24 != v17) {
            objc_enumerationMutation(v14);
          }
          unint64_t v19 = (unint64_t)[*(id *)(*((void *)&v23 + 1) + 8 * (void)v18) integerValue] - 1;
          CFStringRef v20 = @"VIOSessionDisableEventLowPowerMode";
          if (v19 <= 9) {
            CFStringRef v20 = off_101302230[v19];
          }
          id v21 = [v3 addEmptySectionBannerRowWithTitle:v20];
          id v18 = (char *)v18 + 1;
        }
        while (v16 != v18);
        id v16 = [v14 countByEnumeratingWithState:&v23 objects:v27 count:16];
      }
      while (v16);
    }
  }
  else
  {
    id v22 = [v3 addEmptySectionBannerRowWithTitle:@"The VIO session is currently neither throttled nor disabled"];
  }
}

void sub_100918A90(id a1, MapsDebugTableSection *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Far threshold", @"70.0", 2, MapsConfig_RoutePlanningUpdaterFarThresholdInMeters, off_1015EF448 placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Horizontal Accuracy Requirement", @"100.0", 2, MapsConfig_RoutePlanningUpdaterHighQualityAccuracyLimit, off_1015EF468 placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Route updating delay", @"0.0", 2, MapsConfig_RoutePlanningUpdaterRouteFrequencyLimit, off_1015EF478 placeholderText inputType geoConfigKeyDouble];
  id v5 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enable route updating", MapsConfig_RoutePlanningUpdaterEnableRouteUpdating, off_1015EF488 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enable ETA updating", MapsConfig_RoutePlanningUpdaterEnableETAUpdating, off_1015EF498 geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"ETA Update frequency (sec)", @"120.0", 2, MapsConfig_RoutePlanningUpdaterETAFrequencyLimit, off_1015EF4A8 placeholderText inputType geoConfigKeyDouble];
  id v8 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Route updater threshold (sec)", @"15.0", 2, MapsConfig_RoutePlanningUpdaterThresholdInSeconds, off_1015EF458 placeholderText inputType geoConfigKeyDouble];
}

void sub_100918C30(id a1, MapsDebugTableSection *a2)
{
  long long v23 = a2;
  id v2 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable EV Routing *" get:&stru_101301BE8 set:&stru_101301C08];
  id v3 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable EV Routing Enhancements *" get:&stru_101301C28 set:&stru_101301C48];
  id v4 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable VG Suggestions *" get:&stru_101301C68 set:&stru_101301C88];
  id v5 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable live updates through MapsSync", VirtualGarageConfig_EVRoutingUseMapsSyncLiveUpdates[0], VirtualGarageConfig_EVRoutingUseMapsSyncLiveUpdates[1] geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Always show vehicle battery percentage", MapsConfig_EVRoutingShouldShowBatteryPercentageInVehiclePickers, off_1015F05C8 geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Always show last state sync date", VirtualGarageConfig_EVRoutingForceShowLastSyncDate[0], VirtualGarageConfig_EVRoutingForceShowLastSyncDate[1] geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v23 addTextFieldRowWithTitle:@"OEM app pull interval *" placeholderText:@"(seconds)" inputType:1 get:&stru_101301CA8 set:&stru_101301CC8];
  id v9 = [(MapsDebugTableSection *)v23 addTextFieldRowWithTitle:@"Display age of vehicle state if older than *" placeholderText:@"(seconds)" inputType:1 get:&stru_101301CE8 set:&stru_101301D08];
  id v10 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Force show EV Routing onboarding in RP", MapsConfig_EVRoutingForceShowFeatureDiscovery, off_1015EF768 geoConfigKey];
  id v11 = [(MapsDebugTableSection *)v23 addTextFieldRowWithTitle:@"OEM app intents timeout *" placeholderText:@"(seconds)" inputType:1 get:&stru_101301D28 set:&stru_101301D48];
  id v12 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable live vehicle state streaming during nav", VirtualGarageConfig_EVRoutingStreamUpdatesDuringNav[0], VirtualGarageConfig_EVRoutingStreamUpdatesDuringNav[1] geoConfigKey];
  id v13 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Allowlisting of Model IDs *" get:&stru_101301D68 set:&stru_101301D88];
  id v14 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable synchronous vehicle state updates", VirtualGarageConfig_EVRoutingSynchronousVehicleStateUpdate[0], VirtualGarageConfig_EVRoutingSynchronousVehicleStateUpdate[1] geoConfigKey];
  id v15 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable iAP2 onboarding", VirtualGarageConfig_EVRoutingEnableIAP2Onboarding[0], VirtualGarageConfig_EVRoutingEnableIAP2Onboarding[1] geoConfigKey];
  id v16 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Fake CarDisplaySim identifier", VirtualGarageConfig_EVRoutingUseCarDisplaySimIdentifier[0], VirtualGarageConfig_EVRoutingUseCarDisplaySimIdentifier[1] geoConfigKey];
  id v17 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable automatic vehicle (de)selection upon connection to CarPlay (for non-LPR users only)", VirtualGarageConfig_EVRoutingEnableAutomaticVehicleDeselection[0], VirtualGarageConfig_EVRoutingEnableAutomaticVehicleDeselection[1] geoConfigKey];
  id v18 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable automatic vehicle (de)selection also during active navigation *", MapsConfig_EVRoutingShouldSelectVehiclesDuringNavigation, off_1015F1058 geoConfigKey];
  id v19 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable automatic vehicle unpairing *", VirtualGarageConfig_EnableAutomaticVehicleUnpairing[0], VirtualGarageConfig_EnableAutomaticVehicleUnpairing[1] geoConfigKey];
  id v20 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable stepping routes", VirtualGarageConfig_EVRoutingAllowSteppingRoutes[0], VirtualGarageConfig_EVRoutingAllowSteppingRoutes[1] geoConfigKey];
  id v21 = [(MapsDebugTableSection *)v23 addButtonRowWithTitle:@"Force reload vehicles" action:&stru_101301DA8];
  id v22 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Show dummy garage (UI testing only) *" get:&stru_101301DC8 set:&stru_101301DE8];
  [(MapsDebugTableSection *)v23 setFooter:@"* needs Maps and navd to restart."];
}

BOOL sub_100918FAC(id a1)
{
  int HasValue = _GEOConfigHasValue();
  if (HasValue)
  {
    LOBYTE(HasValue) = GEOConfigGetBOOL();
  }
  return HasValue;
}

void sub_100918FFC(id a1, BOOL a2)
{
}

BOOL sub_100919024(id a1)
{
  int HasValue = _GEOConfigHasValue();
  if (HasValue)
  {
    LOBYTE(HasValue) = GEOConfigGetBOOL();
  }
  return HasValue;
}

void sub_100919074(id a1, BOOL a2)
{
}

BOOL sub_10091909C(id a1)
{
  int HasValue = _GEOConfigHasValue();
  if (HasValue)
  {
    LOBYTE(HasValue) = GEOConfigGetBOOL();
  }
  return HasValue;
}

void sub_1009190EC(id a1, BOOL a2)
{
}

NSString *__cdecl sub_100919114(id a1)
{
  GEOConfigGetDouble();
  id v1 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  id v2 = [v1 stringValue];

  return (NSString *)v2;
}

void sub_10091917C(id a1, NSString *a2)
{
}

NSString *__cdecl sub_1009191A8(id a1)
{
  GEOConfigGetDouble();
  id v1 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  id v2 = [v1 stringValue];

  return (NSString *)v2;
}

void sub_100919210(id a1, NSString *a2)
{
}

NSString *__cdecl sub_10091923C(id a1)
{
  GEOConfigGetDouble();
  id v1 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  id v2 = [v1 stringValue];

  return (NSString *)v2;
}

void sub_1009192A4(id a1, NSString *a2)
{
}

BOOL sub_1009192D0(id a1)
{
  if (!_GEOConfigHasValue()) {
    return 1;
  }

  return GEOConfigGetBOOL();
}

void sub_100919324(id a1, BOOL a2)
{
}

void sub_10091934C(id a1)
{
  id v1 = +[VGVirtualGarageService sharedService];
  [v1 virtualGarageForceFetchAllVehicles];
}

BOOL sub_100919394(id a1)
{
  int HasValue = _GEOConfigHasValue();
  if (HasValue)
  {
    LOBYTE(HasValue) = GEOConfigGetBOOL();
  }
  return HasValue;
}

void sub_1009193E4(id a1, BOOL a2)
{
}

void sub_10091944C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Alberta (will exit Maps)", MapsFeaturesConfig_EnableAlberta[0], MapsFeaturesConfig_EnableAlberta[1], 0, &stru_101301E28 geoConfigKey switchOnStateIfUnset changeHandler];
}

void sub_100919490(id a1, BOOL a2)
{
}

void sub_1009194D8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Walking Maneuver Arrows", MapsConfig_NavigationWalkingShowManeuverArrowsOnMap, off_1015F01D8 geoConfigKey];
}

void sub_100919608(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10091962C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Easy parking detection", NavigationConfig_Parking_EasyParkingDetection[0], NavigationConfig_Parking_EasyParkingDetection[1] geoConfigKey];
  [v2 setSubtitle:@"If on, requires only Bluetooth or CarPlay disconnect. If off, uses CoreRoutine's parked vehicle API."];
}

void sub_10091968C(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Min reroute distance", @"meters", 1, NavigationConfig_Parking_BackgroundWalkingRouteMinRerouteDistance[0], NavigationConfig_Parking_BackgroundWalkingRouteMinRerouteDistance[1] placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Min time between reroutes", @"seconds", 1, NavigationConfig_Parking_BackgroundWalkingRouteMinTimeBetweenReroutes[0], NavigationConfig_Parking_BackgroundWalkingRouteMinTimeBetweenReroutes[1] placeholderText inputType geoConfigKeyDouble];
}

void sub_100919720(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1009197E8;
  void v5[3] = &unk_1012E6708;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Simulate Parked Vehicle Event" action:v5];
  objc_destroyWeak(&v6);
}

void sub_1009197D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1009197E8(uint64_t a1)
{
  id v2 = +[MNNavigationService sharedService];
  unsigned int v3 = [v2 isInNavigatingState];

  if (v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained dismissViewControllerAnimated:1 completion:&stru_101301EA8];
  }
  else
  {
    id WeakRetained = +[UIAlertController alertControllerWithTitle:@"Navigation is not running" message:@"Simulating a parked vehicle event requires navigation to be running." preferredStyle:1];
    id v4 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:0];
    [WeakRetained addAction:v4];

    id v5 = objc_loadWeakRetained((id *)(a1 + 32));
    [v5 presentViewController:WeakRetained animated:1 completion:0];
  }
}

void sub_1009198EC(id a1)
{
}

void sub_10091998C(id a1, MapsDebugTableSection *a2)
{
  id v13 = a2;
  id v2 = [(MapsDebugTableSection *)v13 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v3 = [(MapsDebugTableSection *)v13 addSwitchRowWithTitle:@"Playback Controls" defaultsKey:@"PlaybackControls"];
  id v4 = [(MapsDebugTableSection *)v13 addNavigationRowWithTitle:@"Initial Route Source" viewControllerContent:&stru_101301EE8];
  id v5 = [(MapsDebugTableSection *)v13 addSwitchRowWithTitle:@"Load reroutes from trace", NavigationConfig_TracePlaybackShouldLoadReroutesFromTrace[0], NavigationConfig_TracePlaybackShouldLoadReroutesFromTrace[1] geoConfigKey];
  [v5 setSubtitle:@"Requests reroutes from server if disabled"];
  id v6 = [(MapsDebugTableSection *)v13 addSwitchRowWithTitle:@"Load ETA updates from trace", NavigationConfig_TracePlaybackShouldLoadETAUpdatesFromTrace[0], NavigationConfig_TracePlaybackShouldLoadETAUpdatesFromTrace[1] geoConfigKey];

  [v6 setSubtitle:@"Requests ETA updates from server if disabled (\"Load initial route from trace\" setting must be enabled)"];
  id v7 = [(MapsDebugTableSection *)v13 addSwitchRowWithTitle:@"Update current route when jumping", NavigationConfig_TracePlaybackShouldUpdateRouteWhenJumping[0], NavigationConfig_TracePlaybackShouldUpdateRouteWhenJumping[1] geoConfigKey];

  [v7 setSubtitle:@"Updates the current route from the navtrace when jumping or scrubbing"];
  id v8 = [(MapsDebugTableSection *)v13 addNavigationRowWithTitle:@"Navigation Updates" viewControllerContent:&stru_101301F48];
  id v9 = [(MapsDebugTableSection *)v13 addSwitchRowWithTitle:@"Send Analytics", NavigationConfig_TracePlaybackShouldSendAnalytics[0], NavigationConfig_TracePlaybackShouldSendAnalytics[1] geoConfigKey];

  [v9 setSubtitle:@"For evaluating analytics only; off normally"];
  id v10 = [(MapsDebugTableSection *)v13 addSwitchRowWithTitle:@"Enable waypoint reroutes", NavigationConfig_TracePlaybackShouldLoadWaypointReroutesFromTrace[0], NavigationConfig_TracePlaybackShouldLoadWaypointReroutesFromTrace[1] geoConfigKey];

  [v10 setSubtitle:@"Replays adding & removing waypoints"];
  id v11 = [(MapsDebugTableSection *)v13 addSwitchRowWithTitle:@"Enable network condition simulation", NavigationConfig_TracePlaybackShouldSimulateNetworkConditions[0], NavigationConfig_TracePlaybackShouldSimulateNetworkConditions[1] geoConfigKey];

  [v11 setSubtitle:@"Simulates network conditions from the trace, if available"];
  id v12 = [(MapsDebugTableSection *)v13 addNavigationRowForViewControllerClass:objc_opt_class()];
}

void sub_100919BB8(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:0 content:&stru_101301F08];
}

void sub_100919BE8(id a1, MapsDebugTableSection *a2)
{
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](a2, "addCheckmarkRowsGroupForConfigKey:content:", NavigationConfig_TracePlaybackInitialRouteSource[0], NavigationConfig_TracePlaybackInitialRouteSource[1], &stru_101301F28);
}

void sub_100919C20(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Load Route from Trace" value:&off_1013A92E0];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Request New Route" value:&off_1013A92F8];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Request New Response, Preserve Route" value:&off_1013A9310];
}

void sub_100919CB4(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:0 content:&stru_101301F68];
}

void sub_100919CE4(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_TracePlayback_NavigationUpdates_ChangeRoute[0];
  uint64_t v3 = NavigationConfig_TracePlayback_NavigationUpdates_ChangeRoute[1];
  id v6 = a2;
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Change Route", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Depart Waypoint", NavigationConfig_TracePlayback_NavigationUpdates_DepartWaypoint[0], NavigationConfig_TracePlayback_NavigationUpdates_DepartWaypoint[1] geoConfigKey];
  [(MapsDebugTableSection *)v6 setFooter:@"Navigation updates are significant events that occur during navigation. They are typically user triggered, but not always. Playing these updates helps the trace playback reproduce the user's experience as closely as possible when the navigation session was recorded, although individual update types can be disabled for testing purposes."];
}

void sub_100919D80(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_TraceRecordingEnabled[0];
  uint64_t v3 = NavigationConfig_TraceRecordingEnabled[1];
  id v4 = a2;
  id v5 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enabled", v2, v3 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Record Route Preview Guidance", NavigationConfig_TraceRecordingRoutePreviewGuidanceEnabled[0], NavigationConfig_TraceRecordingRoutePreviewGuidanceEnabled[1] geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Show Bookmark Alert" defaultsKey:@"TraceBookmarksAlert"];
  id v8 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Copy Traces To CrashReporter", NavigationConfig_TraceRecordingCopyToCrashReporter[0], NavigationConfig_TraceRecordingCopyToCrashReporter[1] geoConfigKey];
  id v11 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Create Symbolic Link to Latest Trace", NavigationConfig_TraceRecordingCreateSymbolicLinkToLatestTrace[0], NavigationConfig_TraceRecordingCreateSymbolicLinkToLatestTrace[1] geoConfigKey];
  [v11 setSubtitle:@"If enabled, LatestTrace.navtrace will point to the last recorded navtrace"];
  id v9 = +[MNFilePaths navTracesDirectoryPath];
  id v10 = +[NSString stringWithFormat:@"Traces are recorded to: %@", v9];
  [(MapsDebugTableSection *)v4 setFooter:v10];
}

void sub_100919ED4(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", NavigationConfig_SimulationEnabled[0], NavigationConfig_SimulationEnabled[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Prompt to Simulate", NavigationConfig_SimulationShouldShowPrompt[0], NavigationConfig_SimulationShouldShowPrompt[1] geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v5 addNavigationRowForViewControllerClass:objc_opt_class()];
}

void sub_10091A16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10091A188(id a1, AVAsset *a2, AVAudioMix *a3, NSDictionary *a4)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10091A21C;
  block[3] = &unk_1012E5D08;
  id v6 = a2;
  id v4 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10091A21C(uint64_t a1)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = [*(id *)(a1 + 32) URL];
    id v2 = [v3 path];
    GEOConfigSetString();
  }
  else
  {
    _GEOConfigRemoveValue();
  }
}

void sub_10091A59C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10091A5C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, v3);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10091A7D8;
  v6[3] = &unk_101302030;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  objc_copyWeak(&v8, &location);
  id v4 = [v3 addCheckmarkRowsGroupForConfigKey:NavigationConfig_SimulationType[0] content:NavigationConfig_SimulationType[1] get:&stru_101302008 set:0 change:v6];
  id v5 = +[NavigationSettingsSimulationTypeController _descriptionForSimulationType:*(void *)(a1 + 40)];
  [v3 setFooter:v5];

  objc_destroyWeak(&v8);
  objc_destroyWeak(&v7);
  objc_destroyWeak(&location);
}

void sub_10091A6DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 40));
  _Unwind_Resume(a1);
}

void sub_10091A704(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Follow Initial Route" value:&off_1013A92F8];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Follow Current Route" value:&off_1013A9310];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Follow Alternate Route" value:&off_1013A9430];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Follow Current Route, then Off Route" value:&off_1013A9448];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Old" value:&off_1013A9460];
}

void sub_10091A7D8(uint64_t a1, void *a2)
{
  id v14 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v4 = [v14 integerValue];
      id v5 = (id *)(a1 + 40);
      id v6 = objc_loadWeakRetained((id *)(a1 + 40));
      id v7 = [v6 displayingViewController];
      id v8 = [v7 tableView];

      +[UIView setAnimationsEnabled:0];
      [v8 beginUpdates];
      id v9 = [v8 footerViewForSection:0];
      id v10 = +[NavigationSettingsSimulationTypeController _descriptionForSimulationType:v4];
      id v11 = [v9 textLabel];
      [v11 setText:v10];

      [v9 sizeToFit];
      [v8 endUpdates];
      +[UIView setAnimationsEnabled:1];
      id v12 = objc_loadWeakRetained(v5);
      id v13 = [v12 displayingViewController];
      [v13 rebuildSections];

      [WeakRetained reloadData];
    }
  }
}

void sub_10091A954(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_Simulation_FollowCurrentRouteThenOffRoute_OffRouteAfterThreshold[0];
  uint64_t v3 = NavigationConfig_Simulation_FollowCurrentRouteThenOffRoute_OffRouteAfterThreshold[1];
  id v4 = a2;
  id v5 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Go off route after", @"meters", 1, v2, v3 placeholderText inputType geoConfigKeyDouble];
  [v5 setSubtitle:@"Follow the route for this distance, then go off route at the next junction."];

  id v6 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Target distance from route", @"meters", 1, NavigationConfig_Simulation_FollowCurrentRouteThenOffRoute_OffRouteDistanceTarget[0], NavigationConfig_Simulation_FollowCurrentRouteThenOffRoute_OffRouteDistanceTarget[1] placeholderText inputType geoConfigKeyDouble];

  [v6 setSubtitle:@"Try to go at least this distance away from the route."];
}

void sub_10091AA24(id a1, MapsDebugTableSection *a2)
{
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](a2, "addCheckmarkRowsGroupForConfigKey:content:", NavigationConfig_SimulationSearchForParking[0], NavigationConfig_SimulationSearchForParking[1], &stru_1013020B8);
}

void sub_10091AA5C(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"None" value:&off_1013A92E0];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Before arrival" value:&off_1013A92F8];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"After arrival" value:&off_1013A9310];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"After arrival, then return to destination" value:&off_1013A9430];
}

void sub_10091AB10(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_SimulationStartWaypoint[0];
  uint64_t v3 = NavigationConfig_SimulationStartWaypoint[1];
  id v6 = a2;
  id v4 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Starting waypoint", @"waypoint index", 1, v2, v3 placeholderText inputType geoConfigKeyInteger];
  id v5 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Distance ahead of waypoint", @"meters", 1, NavigationConfig_SimulationStartDistanceBeforeWaypoint[0], NavigationConfig_SimulationStartDistanceBeforeWaypoint[1] placeholderText inputType geoConfigKeyDouble];
  [(MapsDebugTableSection *)v6 setFooter:@"Starts simulation from any waypoint on the route and at any distance before the waypoint."];
}

void sub_10091ABC4(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = NavigationConfig_SimulationMoveToIntermediateWaypoints[0];
  uint64_t v3 = NavigationConfig_SimulationMoveToIntermediateWaypoints[1];
  id v6 = a2;
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Move to intermediate waypoint", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Duration to wait at waypoint", @"seconds", 1, NavigationConfig_SimulationWaitAtWaypointDuration[0], NavigationConfig_SimulationWaitAtWaypointDuration[1] placeholderText inputType geoConfigKeyDouble];
  [(MapsDebugTableSection *)v6 setFooter:@"After reaching the end of a leg, moves to the waypoint location and waits for a specified duration before proceeding to the start of the next leg. 0 to wait forever. Note that simulation will *always* move to EV charging station waypoints, regardless of the \"Move to intermediate waypoint\" setting."];
}

void sub_10091AC6C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Keep simulated location after ending navigation", NavigationConfig_SimulationKeepLocationAfterEndingNavigation[0], NavigationConfig_SimulationKeepLocationAfterEndingNavigation[1] geoConfigKey];
}

void sub_10091ACA4(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addNavigationRowForViewControllerClass:objc_opt_class()];
  [v2 setTitle:@"Speed multiplier"];
  id v3 = [(MapsDebugTableSection *)v4 addSliderRowWithTitle:@"Minimum speed", &stru_101302158, NavigationConfig_SimulationMinimumSpeed[0], NavigationConfig_SimulationMinimumSpeed[1], 0, 0.0, 10.0 subtitleStringHandler min max geoConfigKeyDouble changeHandler];
}

NSString *__cdecl sub_10091AD4C(id a1, float a2)
{
  return +[NSString stringWithFormat:@"%0.1f m/s (%.0f mph)", a2, a2 * 3600.0 * 0.000621371192];
}

void sub_10091AD9C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSliderRowWithTitle:@"Speed override", &stru_101302198, NavigationConfig_SimulationSpeedOverride[0], NavigationConfig_SimulationSpeedOverride[1], 0, 0.0, 40.0 subtitleStringHandler min max geoConfigKeyDouble changeHandler];
}

NSString *__cdecl sub_10091ADEC(id a1, float a2)
{
  if (a2 <= 0.0)
  {
    id v4 = @"Default";
  }
  else
  {
    id v4 = +[NSString stringWithFormat:@"%0.1f m/s (%.0f mph)", a2, a2 * 3600.0 * 0.000621371192, v2];
  }
  return (NSString *)v4;
}

void sub_10091AE70(id a1, BOOL a2)
{
  if (!a2 || GEOConfigGetInteger() != -1)
  {
    GEOConfigSetBOOL();
  }
}

void sub_10091AF10(id a1, MapsDebugTableSection *a2)
{
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](a2, "addCheckmarkRowsGroupForConfigKey:content:", NavigationConfig_SimulationSpeedMultiplier[0], NavigationConfig_SimulationSpeedMultiplier[1], &stru_1013021F8);
}

void sub_10091AF48(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"0.5x" value:&off_1013AF1E8];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"1x" value:&off_1013A9478];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"2x" value:&off_1013A9490];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"3x" value:&off_1013A94A8];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"4x" value:&off_1013A94C0];
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"5x" value:&off_1013A94D8];
}

void sub_10091B03C(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("PHVideoRequestOptions");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_101610000 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    sub_10091B0AC();
  }
}

void sub_10091B0AC()
{
  v1[0] = 0;
  if (!qword_10160FFF8)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_10091B1B8;
    v1[4] = &unk_1012E63F0;
    v1[5] = v1;
    long long v2 = off_101302218;
    uint64_t v3 = 0;
    qword_10160FFF8 = _sl_dlopen();
    uint64_t v0 = (void *)v1[0];
    if (qword_10160FFF8)
    {
      if (!v1[0]) {
        return;
      }
    }
    else
    {
      uint64_t v0 = (void *)abort_report_np();
    }
    free(v0);
  }
}

uint64_t sub_10091B1B8()
{
  uint64_t result = _sl_dlopen();
  qword_10160FFF8 = result;
  return result;
}

Class sub_10091B22C(uint64_t a1)
{
  sub_10091B0AC();
  Class result = objc_getClass("PHImageManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_101610008 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (PassThroughWindow *)abort_report_np();
    return (Class)[(PassThroughWindow *)v3 hitTest:v6 withEvent:v5];
  }
  return result;
}

void sub_100924598(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 40);
}

void sub_1009259D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setAutocorrectionType:1];
  [v3 setAutocapitalizationType:1];
  [*(id *)(a1 + 32) _maps_defaultCollectionItemTitle];
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  [v3 setText:v4];
}

uint64_t sub_100925A50(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100925A68(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id v5 = [*(id *)(a1 + 32) text];
    unint64_t UInteger = GEOConfigGetUInteger();
    if ((unint64_t)[(__CFString *)v5 length] <= UInteger)
    {
      CFStringRef v4 = v5;
    }
    else
    {
      uint64_t v3 = -[__CFString substringWithRange:](v5, "substringWithRange:", 0, UInteger);

      CFStringRef v4 = (const __CFString *)v3;
    }
    CGPoint v6 = (__CFString *)v4;
    if (!v4) {
      CFStringRef v4 = &stru_101324E70;
    }
    (*(void (**)(void, const __CFString *))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v4);
  }
}

id MapsAnalyticsEventValueForClusteredSegment(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)NSMutableArray);
  if ([v1 rideOptionsCount])
  {
    unint64_t v3 = 0;
    do
    {
      CFStringRef v4 = [v1 transitLineForRideOption:v3];
      id v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", [v4 muid]);
      [v2 addObject:v5];

      ++v3;
    }
    while (v3 < (unint64_t)[v1 rideOptionsCount]);
  }
  CGPoint v6 = [v2 componentsJoinedByString:@","];

  return v6;
}

void sub_1009289B0(_Unwind_Exception *a1)
{
}

void sub_100928A94(uint64_t a1, void *a2)
{
  id v8 = a2;
  [*(id *)(a1 + 32) setSuggestionType:4];
  unint64_t v3 = [v8 mapRegion];

  if (v3)
  {
    CFStringRef v4 = [v8 mapRegion];
    GEOMapRectForMapRegion();
    MKCoordinateRegion v11 = MKCoordinateRegionForMapRect(v10);
    CLLocationDegrees latitude = v11.center.latitude;
    CLLocationDegrees longitude = v11.center.longitude;

    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
    *(CLLocationDegrees *)(v7 + 32) = latitude;
    *(CLLocationDegrees *)(v7 + 40) = longitude;
  }
}

void sub_100928B34(uint64_t a1, void *a2)
{
  id v14 = a2;
  [*(id *)(a1 + 32) setSuggestionType:5];
  unint64_t v3 = [v14 endWaypoint];
  CFStringRef v4 = [v14 endWaypoint];
  uint64_t v5 = [v4 geoMapItem];
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  if (v3)
  {
    if (![v3 isCurrentLocation]
      || ([v14 startWaypoint],
          uint64_t v8 = objc_claimAutoreleasedReturnValue(),
          v3,
          (unint64_t v3 = (void *)v8) != 0))
    {
      id v9 = [v3 geoMapItem];

      if (v9)
      {
        MKMapRect v10 = [v3 geoMapItem];
        [v10 coordinate];
        uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
        *(void *)(v11 + 32) = v12;
        *(void *)(v11 + 40) = v13;
      }
    }
  }
}

void sub_100928C38(uint64_t a1, void *a2)
{
  id v13 = a2;
  [*(id *)(a1 + 32) setSuggestionType:6];
  unint64_t v3 = [v13 geoMapItem];

  if (v3)
  {
    CFStringRef v4 = [v13 geoMapItem];
    [v4 coordinate];
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v7;

    uint64_t v8 = [v13 geoMapItem];
    uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
    MKMapRect v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;
  }
  uint64_t v11 = [v13 geoMapItem];
  uint64_t v12 = [v11 _childItems];
  [*(id *)(a1 + 32) setIsProminentResult:[v12 count] != 0];
}

void sub_1009299EC(uint64_t a1)
{
  v6[0] = 0;
  v6[1] = v6;
  v6[2] = 0x2020000000;
  char v7 = 0;
  id v2 = +[GEOAPSharedStateData sharedData];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100929ADC;
  v3[3] = &unk_101302370;
  uint64_t v5 = v6;
  id v4 = *(id *)(a1 + 32);
  [v2 populateTapEventForPinType:1 tapEventSpecifierBlock:v3];

  _Block_object_dispose(v6, 8);
}

void sub_100929AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100929ADC(uint64_t a1, _DWORD *a2, _DWORD *a3, void *a4, _DWORD *a5, unsigned char *a6)
{
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (!*(unsigned char *)(v6 + 24))
  {
    *a2 = [*(id *)(a1 + 32) resultIndex];
    *a3 = 2;
    id v13 = [*(id *)(a1 + 32) mapItem];
    *a4 = [v13 _muid];

    id v14 = [*(id *)(a1 + 32) mapItem];
    id v15 = [v14 place];
    *a5 = [v15 localSearchProviderID];

    *a6 = 0;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  return v7 == 0;
}

void sub_100929BB0(uint64_t a1)
{
  v6[0] = 0;
  v6[1] = v6;
  v6[2] = 0x2020000000;
  void v6[3] = 0;
  id v2 = +[GEOAPSharedStateData sharedData];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100929CA0;
  v3[3] = &unk_101302370;
  uint64_t v5 = v6;
  id v4 = *(id *)(a1 + 32);
  [v2 populateTapEventForPinType:2 tapEventSpecifierBlock:v3];

  _Block_object_dispose(v6, 8);
}

void sub_100929C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100929CA0(uint64_t a1, _DWORD *a2, _DWORD *a3, void *a4, _DWORD *a5, unsigned char *a6)
{
  unint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v13 = [*(id *)(a1 + 32) count];
  if (v12 < (unint64_t)v13)
  {
    id v14 = [*(id *)(a1 + 32) objectAtIndex:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    *a2 = [v14 resultIndex];
    *a3 = 2;
    id v15 = [v14 mapItem];
    *a4 = [v15 _muid];

    id v16 = [v14 mapItem];
    id v17 = [v16 place];
    *a5 = [v17 localSearchProviderID];

    *a6 = 0;
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return v12 < (unint64_t)v13;
}

id sub_10092A2DC(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 56) count];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (unint64_t)result >= *(void *)(*(void *)(a1 + 32) + 48);
  return result;
}

id sub_10092A3E4(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 56) count];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result != 0;
  return result;
}

void sub_10092A4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10092A4F8(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 105);
  return result;
}

void sub_10092A638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10092A654(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_10092A6A8(id a1, _MKMapItemPhotosAttribution *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  id v4 = [(_MKMapItemPhotosAttribution *)v3 captionDisplayName];
  id v5 = [v4 length];

  if (v5)
  {
    uint64_t v6 = [(_MKMapItemPhotosAttribution *)v3 captionDisplayName];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_10092A7E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 136) && !*(unsigned char *)(v1 + 106))
  {
    *(unsigned char *)(v1 + 106) = 1;
    uint64_t v3 = sub_1005778DC();
    id v4 = sub_1005778DC();
    os_signpost_id_t v5 = os_signpost_id_generate(v4);

    if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_EVENT, v5, "BatchRequesting", "", buf, 2u);
    }

    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = *(void **)(v6 + 24);
    uint64_t v8 = 5;
    if (!v7) {
      uint64_t v8 = 4;
    }
    uint64_t v9 = *(void **)(v6 + OBJC_IVAR___UGCPlaceDataPhotoListDataProvider__serialQueue[v8]);
    if ((unint64_t)v9 >= *(void *)(v6 + 48) - (void)v7) {
      MKMapRect v10 = (void *)(*(void *)(v6 + 48) - (void)v7);
    }
    else {
      MKMapRect v10 = v9;
    }
    uint64_t v11 = sub_1005778DC();
    unint64_t v12 = (char *)os_signpost_id_generate(v11);

    id v13 = sub_1005778DC();
    id v14 = v13;
    if ((unint64_t)(v12 - 1) <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v13))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)v12, "StartingBatchRequest", "", buf, 2u);
    }

    uint64_t v15 = *(void *)(a1 + 32);
    id v16 = *(void **)(v15 + 88);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_10092AA0C;
    v17[3] = &unk_1013023D8;
    void v17[4] = v15;
    v18[1] = v12;
    objc_copyWeak(v18, (id *)(a1 + 40));
    v18[2] = v7;
    v18[3] = v10;
    [v16 fetchPhotosWithRange:v7 completion:v10 v17];
    objc_destroyWeak(v18);
  }
}

void sub_10092A9F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10092AA0C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = *(NSObject **)(*(void *)(a1 + 32) + 96);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10092AB0C;
  v10[3] = &unk_1012EBFA8;
  v13[1] = *(id *)(a1 + 48);
  objc_copyWeak(v13, (id *)(a1 + 40));
  long long v14 = *(_OWORD *)(a1 + 56);
  id v11 = v6;
  id v12 = v5;
  id v8 = v5;
  id v9 = v6;
  dispatch_async(v7, v10);

  objc_destroyWeak(v13);
}

void sub_10092AB0C(uint64_t a1)
{
  id v2 = sub_1005778DC();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 56);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)id v8 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "EndingBatchRequest", "", v8, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[106] = 0;
    uint64_t v7 = *(void *)(a1 + 32);
    if (v7) {
      [WeakRetained _failWithError:v7 range:*(void *)(a1 + 64), *(void *)(a1 + 72)];
    }
    else {
      [WeakRetained _processResult:*(void *)(a1 + 40)];
    }
  }
}

void sub_10092B1C8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 248), 8);
  _Unwind_Resume(a1);
}

void sub_10092B1F8(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        *(unsigned char *)(*(void *)(a1 + 40) + 105) |= [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) needsObfuscationWhenRenderedInFullScreen:(void)v7];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_10092B308(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) mutableCopy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10092B35C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v2;
}

void sub_10092B3B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 128));
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = [v2 photoList];
  [WeakRetained photoViewerDataProvider:v2 didUpdateWithPhotos:v3];
}

void sub_10092B4FC(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 128));
  [WeakRetained photoViewerDataProvider:a1[4] failedBatchRequestWithError:a1[5] range:a1[6]];
}

uint64_t sub_10092B638(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10092B740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10092B758(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 56) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10092B914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10092B930(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_10092CF24()
{
  if (qword_101610020 != -1) {
    dispatch_once(&qword_101610020, &stru_1013026E0);
  }
  uint64_t v0 = (void *)qword_101610018;

  return v0;
}

double sub_10092E360(id a1, $F24F406B2B787EFB06265DBA3D28CBD5 a2)
{
  id v2 = [objc_alloc((Class)CLLocation) initWithLatitude:a2.var0 longitude:a2.var1];
  +[CoreLocationUndulationProvider undulationAtLocation:v2];
  double v4 = v3;

  return v4;
}

double sub_10092E3C8(id a1, $F24F406B2B787EFB06265DBA3D28CBD5 a2)
{
  id v2 = [objc_alloc((Class)CLLocation) initWithLatitude:a2.var0 longitude:a2.var1];
  +[CoreLocationUndulationProvider undulationAtLocation:v2];
  double v4 = v3;

  return v4;
}

BOOL sub_10092E840(id a1, MNGuidanceARInfo *a2, unint64_t a3, BOOL *a4)
{
  double v4 = a2;
  if ([(MNGuidanceARInfo *)v4 eventType] == 2) {
    unsigned __int8 v5 = [(MNGuidanceARInfo *)v4 isArrival];
  }
  else {
    unsigned __int8 v5 = 0;
  }

  return v5;
}

BOOL sub_10092E8E0(id a1, MNGuidanceARInfo *a2, unint64_t a3, BOOL *a4)
{
  double v4 = a2;
  if ([(MNGuidanceARInfo *)v4 eventType] == 2) {
    unsigned int v5 = ![(MNGuidanceARInfo *)v4 isArrival];
  }
  else {
    LOBYTE(v5) = 0;
  }

  return v5;
}

BOOL sub_10092E980(id a1, MNGuidanceARInfo *a2, unint64_t a3, BOOL *a4)
{
  return [(MNGuidanceARInfo *)a2 eventType] == 1;
}

int64_t sub_10092F4AC(id a1, MNGuidanceARInfo *a2, MNGuidanceARInfo *a3)
{
  double v4 = a3;
  unsigned int v5 = +[NSNumber numberWithUnsignedInteger:[(MNGuidanceARInfo *)a2 stepIndex]];
  id v6 = [(MNGuidanceARInfo *)v4 stepIndex];

  long long v7 = +[NSNumber numberWithUnsignedInteger:v6];
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

MNGuidanceARInfo *__cdecl sub_10092F544(id a1, PedestrianARVKFeatureMapEntry *a2, unint64_t a3)
{
  return [(PedestrianARVKFeatureMapEntry *)a2 guidanceInfo];
}

int64_t sub_10092F54C(id a1, MNGuidanceARInfo *a2, MNGuidanceARInfo *a3)
{
  double v4 = a3;
  unsigned int v5 = +[NSNumber numberWithUnsignedInteger:[(MNGuidanceARInfo *)a2 stepIndex]];
  id v6 = [(MNGuidanceARInfo *)v4 stepIndex];

  long long v7 = +[NSNumber numberWithUnsignedInteger:v6];
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

NSString *__cdecl sub_10092F5E4(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  return [(MNGuidanceARInfo *)a2 mapsShortDescription];
}

NSString *__cdecl sub_10092F5EC(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  return [(MNGuidanceARInfo *)a2 mapsShortDescription];
}

NSString *__cdecl sub_10092F5F4(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  return [(MNGuidanceARInfo *)a2 mapsShortDescription];
}

NSString *__cdecl sub_10092F5FC(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  return [(MNGuidanceARInfo *)a2 mapsShortDescription];
}

int64_t sub_10092F604(id a1, MNGuidanceARInfo *a2, MNGuidanceARInfo *a3)
{
  double v4 = a3;
  unsigned int v5 = +[NSNumber numberWithUnsignedInteger:[(MNGuidanceARInfo *)a2 stepIndex]];
  id v6 = [(MNGuidanceARInfo *)v4 stepIndex];

  long long v7 = +[NSNumber numberWithUnsignedInteger:v6];
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

MNGuidanceARInfo *__cdecl sub_10092F69C(id a1, PedestrianARVKFeatureMapEntry *a2, unint64_t a3)
{
  return [(PedestrianARVKFeatureMapEntry *)a2 guidanceInfo];
}

int64_t sub_10092F6A4(id a1, MNGuidanceARInfo *a2, MNGuidanceARInfo *a3)
{
  double v4 = a3;
  unsigned int v5 = +[NSNumber numberWithUnsignedInteger:[(MNGuidanceARInfo *)a2 stepIndex]];
  id v6 = [(MNGuidanceARInfo *)v4 stepIndex];

  long long v7 = +[NSNumber numberWithUnsignedInteger:v6];
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

NSString *__cdecl sub_10092F73C(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  return [(MNGuidanceARInfo *)a2 mapsShortDescription];
}

NSString *__cdecl sub_10092F744(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  return [(MNGuidanceARInfo *)a2 mapsShortDescription];
}

NSString *__cdecl sub_10092F74C(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  return [(MNGuidanceARInfo *)a2 mapsShortDescription];
}

NSString *__cdecl sub_10092F754(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  return [(MNGuidanceARInfo *)a2 mapsShortDescription];
}

BOOL sub_10092F75C(uint64_t a1, void *a2)
{
  id v3 = [a2 stepIndex];
  double v4 = [*(id *)(a1 + 32) guidanceInfo];
  BOOL v5 = v3 == [v4 stepIndex];

  return v5;
}

BOOL sub_10092F7AC(uint64_t a1, void *a2)
{
  id v3 = [a2 stepIndex];
  double v4 = [*(id *)(a1 + 32) guidanceInfo];
  BOOL v5 = v3 == [v4 stepIndex];

  return v5;
}

void sub_1009301E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARVKRenderer");
  id v2 = (void *)qword_101610018;
  qword_101610018 = (uint64_t)v1;
}

id sub_100930324()
{
  if (qword_101610030 != -1) {
    dispatch_once(&qword_101610030, &stru_101302728);
  }
  uint64_t v0 = (void *)qword_101610028;

  return v0;
}

void sub_1009306A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1009306E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v8 = sub_100930324();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_INFO);
    if (!v6)
    {
      if (v9)
      {
        int v12 = 134349315;
        id v13 = WeakRetained;
        __int16 v14 = 2113;
        id v15 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "[%{public}p] Successfully got location update: %{private}@, submitting rev geo now", (uint8_t *)&v12, 0x16u);
      }

      id v11 = [WeakRetained _revGeoTicketForCurrentLocation:v5 traits:*(void *)(a1 + 32) completionHandler:*(void *)(a1 + 40) networkActivityHandler:*(void *)(a1 + 48)];
      [WeakRetained setRevGeoTicket:v11];
      goto LABEL_10;
    }
    if (v9)
    {
      int v12 = 134349314;
      id v13 = WeakRetained;
      __int16 v14 = 2112;
      id v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "[%{public}p] Error getting location update: %@", (uint8_t *)&v12, 0x16u);
    }

    uint64_t v10 = *(void *)(a1 + 40);
    if (v10)
    {
      id v11 = +[Result resultWithError:v6];
      (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v11);
LABEL_10:
    }
  }
}

void sub_100930E50(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CurrentLocationMapServiceTicket");
  id v2 = (void *)qword_101610028;
  qword_101610028 = (uint64_t)v1;
}

void sub_100931164(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _reloadSubscriptions];
    id WeakRetained = v2;
  }
}

void sub_1009311A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _reloadLastUpdatedDates];
    id WeakRetained = v2;
  }
}

void sub_1009311EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _reloadLastUpdatedDates];
    id WeakRetained = v2;
  }
}

void sub_100931230(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _reloadPairedDeviceSubscriptionInfos];
    [v2 setAvailableDiskSpaceForPairedDevice:0];
    id WeakRetained = v2;
  }
}

uint64_t sub_100931828(uint64_t a1, int a2)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    if (a2) {
      uint64_t v4 = *(void *)(a1 + 32);
    }
    else {
      uint64_t v4 = 0;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, v4);
  }
  return result;
}

void sub_100931B4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_1000493C0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v6 = [*(id *)(a1 + 32) identifier];
      int v7 = 138412546;
      id v8 = v6;
      __int16 v9 = 2112;
      id v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error restoring expired subscription: %@, error: %@", (uint8_t *)&v7, 0x16u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100932048(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10093206C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v4();
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    if (WeakRetained)
    {
      id v6 = +[NSNumber numberWithLongLong:a2];
      [WeakRetained setAvailableDiskSpaceForPairedDevice:v6];

      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

BOOL sub_1009322D4(id a1, GEOMapDataSubscription *a2, unint64_t a3, BOOL *a4)
{
  return ((unint64_t)[(GEOMapDataSubscription *)a2 dataTypes] >> 10) & 1;
}

void sub_1009322F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = sub_1000493C0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v16 = 138412290;
      id v17 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "[MapsOfflineUIHelper] subscription state error: %@", (uint8_t *)&v16, 0xCu);
    }

    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 56);
    if (v8) {
      (*(void (**)(uint64_t, void, id))(v8 + 16))(v8, 0, v6);
    }
  }
  else
  {
    __int16 v9 = [[MapDataSubscriptionInfo alloc] initWithSubscription:*(void *)(a1 + 40) state:v5];
    [*(id *)(a1 + 48) addObject:v9];
    switch((unint64_t)[v5 loadState])
    {
      case 0uLL:
        id v10 = sub_1000493C0();
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          goto LABEL_16;
        }
        id v11 = *(void **)(a1 + 40);
        int v16 = 138412546;
        id v17 = v11;
        __int16 v18 = 2112;
        id v19 = v5;
        int v12 = "[MapsOfflineUIHelper] found not fully loaded subscription: %@, state: %@";
        break;
      case 1uLL:
        id v10 = sub_1000493C0();
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          goto LABEL_16;
        }
        id v13 = *(void **)(a1 + 40);
        int v16 = 138412546;
        id v17 = v13;
        __int16 v18 = 2112;
        id v19 = v5;
        int v12 = "[MapsOfflineUIHelper] found out of date subscription: %@, state: %@";
        break;
      case 2uLL:
        id v10 = sub_1000493C0();
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          goto LABEL_16;
        }
        __int16 v14 = *(void **)(a1 + 40);
        int v16 = 138412546;
        id v17 = v14;
        __int16 v18 = 2112;
        id v19 = v5;
        int v12 = "[MapsOfflineUIHelper] found fully loaded subscription: %@, state: %@";
        break;
      case 3uLL:
        id v10 = sub_1000493C0();
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
          goto LABEL_16;
        }
        id v15 = *(void **)(a1 + 40);
        int v16 = 138412546;
        id v17 = v15;
        __int16 v18 = 2112;
        id v19 = v5;
        int v12 = "[MapsOfflineUIHelper] found fully-loaded, incompatible subscription: %@, state: %@";
        break;
      default:
        goto LABEL_17;
    }
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, v12, (uint8_t *)&v16, 0x16u);
LABEL_16:

LABEL_17:
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_100932608(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    [*(id *)(a1 + 32) setObject:a2 forKeyedSubscript:*(void *)(a1 + 40)];
  }
  else
  {
    id v6 = sub_1000493C0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "[MapsOfflineUIHelper] paired device subscription state fetch error: %@", (uint8_t *)&v7, 0xCu);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100932C28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    id v3 = *(id *)(a1 + 32);
    id v4 = sub_1000493C0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      uint64_t v6 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 138412802;
      uint64_t v42 = v5;
      __int16 v43 = 2112;
      id v44 = v3;
      __int16 v45 = 2112;
      uint64_t v46 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[MapsOfflineUIHelper] KVO update for keyPath: %@, state: %@, change: %@", buf, 0x20u);
    }

    int v7 = *(void **)(a1 + 40);
    id v8 = NSStringFromSelector("loadState");
    LODWORD(v7) = [v7 isEqualToString:v8];

    if (!v7)
    {
      __int16 v14 = *(void **)(a1 + 40);
      id v15 = NSStringFromSelector("lastError");
      LOBYTE(v14) = [v14 isEqualToString:v15];

      if ((v14 & 1) == 0)
      {
        int v16 = *(void **)(a1 + 40);
        id v17 = NSStringFromSelector("downloadProgress");
        LODWORD(v16) = [v16 isEqualToString:v17];

        if (v16)
        {
          long long v38 = 0u;
          long long v39 = 0u;
          long long v36 = 0u;
          long long v37 = 0u;
          id v18 = *(id *)(*(void *)(a1 + 64) + 48);
          id v19 = [v18 countByEnumeratingWithState:&v36 objects:v40 count:16];
          if (v19)
          {
            uint64_t v20 = *(void *)v37;
            while (2)
            {
              for (i = 0; i != v19; i = (char *)i + 1)
              {
                if (*(void *)v37 != v20) {
                  objc_enumerationMutation(v18);
                }
                id v22 = *(void **)(*((void *)&v36 + 1) + 8 * i);
                [v22 state:v36];
                id v23 = (id)objc_claimAutoreleasedReturnValue();

                if (v23 == v3)
                {
                  id v31 = [v22 subscription];
                  id v19 = [v31 identifier];

                  goto LABEL_36;
                }
              }
              id v19 = [v18 countByEnumeratingWithState:&v36 objects:v40 count:16];
              if (v19) {
                continue;
              }
              break;
            }
          }
LABEL_36:

          id v32 = [v3 downloadProgress];

          if (v32)
          {
            double v33 = [v3 downloadProgress];
            id v34 = [v33 userInfo];
            id v35 = [v34 objectForKeyedSubscript:GEOMapDataSubscriptionDownloadReasonKey];

            if (([v3 loadState] == (id)1 || objc_msgSend(v3, "loadState") == (id)3)
              && v35
              && [v35 isEqualToString:GEOMapDataSubscriptionProgressDownloadReasonForcedUpdate])
            {
              [*(id *)(a1 + 64) _startedUpdatingSubscription:v19];
            }
            else
            {
              [*(id *)(a1 + 64) _stoppedUpdatingSubscription:v19];
            }
          }
          else
          {
            [*(id *)(a1 + 64) _stoppedUpdatingSubscription:v19];
          }
        }
      }
      goto LABEL_46;
    }
    __int16 v9 = [*(id *)(a1 + 56) objectForKeyedSubscript:NSKeyValueChangeOldKey];
    unsigned int v10 = [v9 intValue];

    id v11 = [*(id *)(a1 + 56) objectForKeyedSubscript:NSKeyValueChangeNewKey];
    unsigned int v12 = [v11 intValue];

    if (v10 != 1 || v12 == 1)
    {
      if (v10 == 1 || v12 != 1) {
        goto LABEL_25;
      }
      uint64_t v24 = 1;
    }
    else
    {
      uint64_t v24 = -1;
    }
    [WeakRetained setOutOfDateSubscriptionsCount:[WeakRetained outOfDateSubscriptionsCount] + v24];
LABEL_25:
    unsigned int v25 = v10 - 3;
    if ((v25 != 0) == (v12 == 3))
    {
      long long v26 = (char *)[WeakRetained outOfDateSubscriptionsCount];
      if (v12 == 3) {
        id v27 = v26 + 1;
      }
      else {
        id v27 = v26 - 1;
      }
      [WeakRetained setOutOfDateSubscriptionsCount:v27];
    }
    unsigned int v28 = v12 - 1;
    if (v25 < 0xFFFFFFFE == v28 < 2)
    {
      id v29 = (char *)[WeakRetained fullyLoadedSubscriptionsCount];
      if (v28 > 1) {
        id v30 = v29 - 1;
      }
      else {
        id v30 = v29 + 1;
      }
      [WeakRetained setFullyLoadedSubscriptionsCount:v30];
    }
LABEL_46:
  }
}

void sub_1009337D8(id a1)
{
  os_log_t v1 = (void *)qword_101610050;
  qword_101610050 = (uint64_t)&off_1013AE298;
}

id sub_1009338EC(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_opt_new();
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id v3 = v1;
  id v4 = [v3 countByEnumeratingWithState:&v47 objects:v54 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v48;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v48 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v47 + 1) + 8 * i);
        if ([v8 hasSignGuidance])
        {
          __int16 v9 = [v8 signGuidance];
          if ([v9 hasStackRanking])
          {
            unsigned int v10 = [v8 hasEndValidDistanceOffsetCm];

            if (v10) {
              [v2 addObject:v8];
            }
          }
          else
          {
          }
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v47 objects:v54 count:16];
    }
    while (v5);
  }

  if ([v2 count])
  {
    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    id v11 = v2;
    id v12 = [v11 countByEnumeratingWithState:&v43 objects:v53 count:16];
    if (v12)
    {
      id v13 = v12;
      unsigned int v14 = 0;
      uint64_t v15 = *(void *)v44;
      do
      {
        for (j = 0; j != v13; j = (char *)j + 1)
        {
          if (*(void *)v44 != v15) {
            objc_enumerationMutation(v11);
          }
          id v17 = *(void **)(*((void *)&v43 + 1) + 8 * (void)j);
          if ([v17 endValidDistanceOffsetCm] > v14) {
            unsigned int v14 = [v17 endValidDistanceOffsetCm];
          }
        }
        id v13 = [v11 countByEnumeratingWithState:&v43 objects:v53 count:16];
      }
      while (v13);
    }
    else
    {
      unsigned int v14 = 0;
    }

    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    id v19 = [v11 copy];
    id v20 = [v19 countByEnumeratingWithState:&v39 objects:v52 count:16];
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = *(void *)v40;
      do
      {
        for (k = 0; k != v21; k = (char *)k + 1)
        {
          if (*(void *)v40 != v22) {
            objc_enumerationMutation(v19);
          }
          uint64_t v24 = *(void **)(*((void *)&v39 + 1) + 8 * (void)k);
          if ([v24 endValidDistanceOffsetCm] < v14) {
            [v11 removeObject:v24];
          }
        }
        id v21 = [v19 countByEnumeratingWithState:&v39 objects:v52 count:16];
      }
      while (v21);
    }

    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id v25 = v11;
    id v26 = [v25 countByEnumeratingWithState:&v35 objects:v51 count:16];
    if (v26)
    {
      id v27 = v26;
      id v18 = 0;
      uint64_t v28 = *(void *)v36;
      unsigned int v29 = -1;
      do
      {
        for (m = 0; m != v27; m = (char *)m + 1)
        {
          if (*(void *)v36 != v28) {
            objc_enumerationMutation(v25);
          }
          id v31 = *(void **)(*((void *)&v35 + 1) + 8 * (void)m);
          id v32 = [v31 signGuidance:v35];
          if ([v32 stackRanking] < v29)
          {
            unsigned int v29 = [v32 stackRanking];
            id v33 = v31;

            id v18 = v33;
          }
        }
        id v27 = [v25 countByEnumeratingWithState:&v35 objects:v51 count:16];
      }
      while (v27);
    }
    else
    {
      id v18 = 0;
    }
  }
  else
  {
    id v18 = 0;
  }

  return v18;
}

id sub_100933F40()
{
  if (qword_101610060 != -1) {
    dispatch_once(&qword_101610060, &stru_1013028E8);
  }
  uint64_t v0 = (void *)qword_101610058;

  return v0;
}

NSString *__cdecl sub_100933F94(id a1, GEOSharedNavState *a2, unint64_t a3)
{
  return (NSString *)[(GEOSharedNavState *)a2 groupIdentifier];
}

NSString *__cdecl sub_1009346CC(id a1, GEOSharedNavState *a2, unint64_t a3)
{
  return (NSString *)[(GEOSharedNavState *)a2 groupIdentifier];
}

void sub_10093484C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SharedTripsTableDataSource");
  uint64_t v2 = (void *)qword_101610058;
  qword_101610058 = (uint64_t)v1;
}

void sub_1009353E4(uint64_t a1, void *a2)
{
  id v14 = a2;
  id v3 = *(unsigned char **)(a1 + 32);
  if (v3[8])
  {
    id v4 = [v3 bannerView];
    char v5 = objc_opt_respondsToSelector();

    id v3 = *(unsigned char **)(a1 + 32);
    if (v5)
    {
      BOOL v6 = (uint64_t)[v3 activeLayoutMode] > 3;
      int v7 = [*(id *)(a1 + 32) bannerView];
      [v7 setExpanded:v6];

      [*(id *)(a1 + 32) displayWidth];
      double v9 = v8;
      unsigned int v10 = [*(id *)(a1 + 32) bannerView];
      [v10 sizeThatFits:v9, 400.0];
      double v12 = v11;

      [*(id *)(a1 + 32) setPreferredContentSize:v9, v12];
      [*(id *)(a1 + 32) _updateShowsControls];
      id v3 = *(unsigned char **)(a1 + 32);
    }
  }
  id v13 = [v3 view];
  [v13 layoutIfNeeded];
}

void sub_1009361BC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) bannerView];
  [v1 updateFromBannerItem];
}

void sub_10093663C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 96) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 104) removeFromSuperview];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 104), *(id *)(a1 + 40));
  uint64_t v2 = [*(id *)(a1 + 32) _contentView];
  [*(id *)(*(void *)(a1 + 32) + 104) setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 addSubview:*(void *)(*(void *)(a1 + 32) + 104)];
  id v21 = [*(id *)(*(void *)(a1 + 32) + 104) leadingAnchor];
  id v3 = [v2 leadingAnchor];
  id v4 = [v21 constraintEqualToAnchor:v3];
  v28[0] = v4;
  char v5 = [*(id *)(*(void *)(a1 + 32) + 104) trailingAnchor];
  BOOL v6 = [v2 trailingAnchor];
  int v7 = [v5 constraintEqualToAnchor:v6];
  v28[1] = v7;
  double v8 = [*(id *)(*(void *)(a1 + 32) + 104) bottomAnchor];
  uint64_t v22 = v2;
  double v9 = [v2 bottomAnchor];
  unsigned int v10 = [v8 constraintEqualToAnchor:v9];
  v28[2] = v10;
  uint64_t v11 = +[NSArray arrayWithObjects:v28 count:3];
  uint64_t v12 = *(void *)(a1 + 32);
  id v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;

  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v14 = *(id *)(*(void *)(a1 + 32) + 40);
  id v15 = [v14 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v15)
  {
    id v17 = v15;
    uint64_t v18 = *(void *)v24;
    do
    {
      for (i = 0; i != v17; i = (char *)i + 1)
      {
        if (*(void *)v24 != v18) {
          objc_enumerationMutation(v14);
        }
        LODWORD(v16) = 1144750080;
        [*(id *)(*((void *)&v23 + 1) + 8 * i) setPriority:v16];
      }
      id v17 = [v14 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v17);
  }

  +[NSLayoutConstraint deactivateConstraints:*(void *)(*(void *)(a1 + 32) + 32)];
  id v20 = [*(id *)(*(void *)(a1 + 32) + 40) arrayByAddingObject:*(void *)(*(void *)(a1 + 32) + 24)];
  +[NSLayoutConstraint activateConstraints:v20];
}

void sub_100936D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100936D8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismissBannerWithReason:@"Timeout"];
}

void sub_100936EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100936EDC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v2 = [WeakRetained[2] isValid];
  id v3 = sub_1000AD30C();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[Persistent Banners] Will collapse after timer", buf, 2u);
    }

    [WeakRetained[2] invalidateWithReason:@"Timeout"];
    id v3 = WeakRetained[2];
    WeakRetained[2] = 0;
  }
  else if (v4)
  {
    *(_WORD *)char v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[Persistent Banners] already collapsed after timer.", v5, 2u);
  }
}

void sub_100937004(id a1)
{
  byte_1015EDFD0 = GEOConfigGetBOOL();
}

void sub_10093712C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100937148(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v2 = sub_1000AD30C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[Persistent Banners] Will clean up alert after timer", v3, 2u);
  }

  [WeakRetained _revertToPrimaryBannerView];
  [WeakRetained setAlternateBannerActiveTimer:0];
}

void sub_1009372EC(uint64_t a1)
{
  unsigned int v2 = [*(id *)(*(void *)(a1 + 32) + 32) arrayByAddingObject:*(void *)(*(void *)(a1 + 32) + 24)];
  +[NSLayoutConstraint activateConstraints:v2];

  [*(id *)(*(void *)(a1 + 32) + 96) setAlpha:1.0];
  [*(id *)(*(void *)(a1 + 32) + 104) removeFromSuperview];
  uint64_t v3 = *(void *)(a1 + 32);
  BOOL v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = 0;
}

void sub_100937EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100937EE0(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 6)
  {
    id v1 = +[NSString stringWithFormat:@"(unknown: %li)", a1];
  }
  else
  {
    id v1 = *(&off_101302998 + a1 + 1);
  }

  return v1;
}

void sub_100937F48(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  int v7 = sub_1000AD30C();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    int v11 = 138412290;
    id v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[Persistent Banners] Alerting assertion invalidated: %@", (uint8_t *)&v11, 0xCu);
  }

  id v8 = *(id *)(*(void *)(a1 + 32) + 16);
  if (v8 == v6)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    unsigned int v10 = (void *)WeakRetained[2];
    WeakRetained[2] = 0;

    [WeakRetained setApertureExpansionTimer:0];
  }
}

void sub_100938974(id a1, BOOL a2, NSError *a3)
{
  BOOL v4 = a3;
  if (!a2)
  {
    id v5 = sub_1000AD30C();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      int v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to open Maps, error: %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

void sub_1009390E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = sub_1000AD30C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134349056;
      id v8 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "[%{public}p] Start generating radar attachments", buf, 0xCu);
    }

    BOOL v4 = +[NSString stringWithFormat:@"%p.NavigationBanners.png", WeakRetained];
    id v5 = [WeakRetained view];
    int v6 = [v5 window];
    +[MapsRadarScreenshotAttachmentHelper generateScreenshotAttachmentsFromWindow:v6 withName:v4 radarDraft:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
  }
}

void sub_100939D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100939D40(uint64_t a1)
{
  unsigned int v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315138;
    id v5 = "com.apple.Maps.DistanceUnitsChanged";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "received darwin notification - %s", (uint8_t *)&v4, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateDistanceUnit];
}

id sub_100939FEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDistanceUnit];
}

id sub_10093A0CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDistanceUnit];
}

id sub_10093A5B4()
{
  if (qword_101610078 != -1) {
    dispatch_once(&qword_101610078, &stru_101302BD8);
  }
  uint64_t v0 = (void *)qword_101610070;

  return v0;
}

id sub_10093A608(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateAnnotationText];
}

void sub_10093ABB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10093ABD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    unsigned int v2 = sub_10093A5B4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v3 = 134349056;
      id v4 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Annotation text updating timer fired", (uint8_t *)&v3, 0xCu);
    }

    [WeakRetained _updateAnnotationText];
  }
}

void sub_10093B190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10093B1AC(uint64_t a1)
{
  unsigned int v2 = sub_1000CC6E4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v4 = 134349056;
    id v5 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Updated route context for waypoint style attribute change", (uint8_t *)&v4, 0xCu);
  }
}

id sub_10093B370(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return a2;
}

void sub_10093B378(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    if ((a2 & 1) == 0 && *(unsigned char *)(a1 + 40))
    {
      [WeakRetained _updateRouteMarkersInContext:0];
      id WeakRetained = v5;
    }
    if (*(unsigned char *)(a1 + 41))
    {
      [v5 _updateWaypointCaptions];
      id WeakRetained = v5;
    }
  }
}

GEOComposedRoute *__cdecl sub_10093B63C(id a1, VKPolylineOverlay *a2, unint64_t a3)
{
  return (GEOComposedRoute *)[(VKPolylineOverlay *)a2 composedRoute];
}

id sub_10093B644(uint64_t a1, void *a2)
{
  return [a2 isEqual:*(void *)(a1 + 32)];
}

NSString *__cdecl sub_10093B650(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  int v3 = [(GEOComposedRoute *)a2 uniqueRouteID];
  int v4 = [v3 UUIDString];

  return (NSString *)v4;
}

NSString *__cdecl sub_10093B6A0(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  int v3 = [(GEOComposedRoute *)a2 uniqueRouteID];
  int v4 = [v3 UUIDString];

  return (NSString *)v4;
}

void sub_10093B6F0(uint64_t a1)
{
  uint64_t v1 = a1;
  unsigned int v2 = (id *)(a1 + 64);
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    int v4 = sub_1000CC6E4();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349056;
      id v54 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Building route context", buf, 0xCu);
    }
    from = v2;

    long long v40 = [WeakRetained _routeContextBuilder];
    id v5 = [v40 buildRouteContextForRoutes:*(void *)(v1 + 32) selectedRouteIndex:*(void *)(v1 + 72)];
    [v5 setCurrentWaypoint:*(void *)(v1 + 40) withProximity:*(unsigned __int8 *)(v1 + 80)];
    long long v51 = 0u;
    long long v52 = 0u;
    long long v49 = 0u;
    long long v50 = 0u;
    long long v39 = v5;
    int v6 = [v5 routeInfo];
    int v7 = [v6 waypoints];

    id v8 = [v7 countByEnumeratingWithState:&v49 objects:v61 count:16];
    if (v8)
    {
      id v10 = v8;
      uint64_t v11 = *(void *)v50;
      *(void *)&long long v9 = 138412290;
      long long v38 = v9;
      long long v42 = v7;
      uint64_t v43 = *(void *)v50;
      do
      {
        id v12 = 0;
        id v44 = v10;
        do
        {
          if (*(void *)v50 != v11) {
            objc_enumerationMutation(v7);
          }
          id v13 = *(void **)(*((void *)&v49 + 1) + 8 * (void)v12);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v14 = v13;
            id v15 = [v14 waypoint];
            double v16 = [v15 findMyHandle];
            id v17 = [v16 contact];
            uint64_t v18 = v17;
            if (v17)
            {
              id v19 = v17;
            }
            else
            {
              [v14 waypoint];
              uint64_t v20 = v1;
              v22 = id v21 = WeakRetained;
              long long v23 = [v22 addressBookAddress];
              id v19 = [v23 contact];

              id WeakRetained = v21;
              uint64_t v1 = v20;
              int v7 = v42;
            }

            long long v24 = [v14 waypoint];
            long long v25 = [v24 findMyHandle];
            long long v26 = [v25 identifier];

            if (v19) {
              BOOL v27 = 1;
            }
            else {
              BOOL v27 = v26 == 0;
            }
            if (!v27)
            {
              id v19 = +[CNContact contactWithDisplayName:0 emailOrPhoneNumber:v26];
            }
            if (!v19)
            {
              id v33 = sub_1005762E4();
              if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 136315906;
                id v54 = "-[RouteAnnotationsController _updateMapViewRouteContextForced:withFinishedHandler:]_block_invoke";
                __int16 v55 = 2080;
                id v56 = "RouteAnnotationsController.m";
                __int16 v57 = 1024;
                int v58 = 608;
                __int16 v59 = 2080;
                id v60 = "contact != nil";
                _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
              }

              if (sub_100BB36BC())
              {
                id v34 = sub_1005762E4();
                if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
                {
                  long long v35 = +[NSThread callStackSymbols];
                  *(_DWORD *)buf = v38;
                  id v54 = v35;
                  _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
                }
              }
            }
            uint64_t v28 = [v19 identifier];
            [v14 setImageProvider:v19 withKey:v28];

            unsigned int v29 = [RouteAnnotationTextUpdater alloc];
            id v30 = [WeakRetained mapView];
            id v31 = [v30 _mapLayer];
            id v32 = [(RouteAnnotationTextUpdater *)v29 initWithRouteWaypoint:v14 mapView:v31];

            [*(id *)(*(void *)(v1 + 48) + 80) addObject:v32];
            uint64_t v11 = v43;
            id v10 = v44;
          }
          id v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        id v36 = [v7 countByEnumeratingWithState:&v49 objects:v61 count:16];
        id v10 = v36;
      }
      while (v36);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10093BC00;
    block[3] = &unk_1012E96B8;
    objc_copyWeak(&v48, from);
    id v46 = v39;
    id v47 = *(id *)(v1 + 56);
    id v37 = v39;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v48);
  }
}

void sub_10093BC00(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    int v3 = sub_1000CC6E4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      id v5 = WeakRetained[4];
      int v7 = 134349570;
      id v8 = WeakRetained;
      __int16 v9 = 2112;
      uint64_t v10 = v4;
      __int16 v11 = 2112;
      id v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Setting route context (%@) on map view (%@)", (uint8_t *)&v7, 0x20u);
    }

    [WeakRetained _updateRouteMarkersInContext:*(void *)(a1 + 32)];
    [WeakRetained[4] _setRouteContext:*(void *)(a1 + 32)];
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v6, 1);
    }
  }
}

NSString *__cdecl sub_10093BD0C(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  int v3 = [(GEOComposedRoute *)a2 uniqueRouteID];
  uint64_t v4 = [v3 UUIDString];

  return (NSString *)v4;
}

void sub_10093BD5C(uint64_t a1)
{
  unsigned int v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained _routeContextBuilder];
    uint64_t v6 = [v5 buildRouteContextForAnchorPoints:*(void *)(a1 + 32)];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10093BE68;
    block[3] = &unk_1012E96B8;
    objc_copyWeak(&v11, v2);
    id v9 = v6;
    id v10 = *(id *)(a1 + 40);
    id v7 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v11);
  }
}

void sub_10093BE68(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    int v3 = sub_1000CC6E4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      id v5 = WeakRetained[4];
      int v7 = 134349570;
      id v8 = WeakRetained;
      __int16 v9 = 2112;
      uint64_t v10 = v4;
      __int16 v11 = 2112;
      id v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Setting route context (%@) on map view (%@)", (uint8_t *)&v7, 0x20u);
    }

    [WeakRetained[4] _setRouteContext:*(void *)(a1 + 32)];
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v6, 1);
    }
  }
}

NSString *__cdecl sub_10093C48C(id a1, RouteMarkerFormatterInfo *a2, unint64_t a3)
{
  return [(RouteMarkerFormatterInfo *)a2 routeDescription];
}

void sub_10093C494(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v8 = [v5 uniqueRouteID];
    __int16 v9 = [WeakRetained configuration];
    uint64_t v10 = [v9 selectedRoute];
    __int16 v11 = [v10 uniqueRouteID];
    unsigned int v12 = [v8 isEqual:v11];

    if (v12)
    {
      [WeakRetained _updateTrafficWithInitialTrafficFeatures:v6];
    }
    else
    {
      id v13 = sub_1000CC6E4();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        id v14 = [WeakRetained configuration];
        id v15 = [v14 selectedRoute];
        double v16 = [v15 uniqueRouteID];
        id v17 = [v5 uniqueRouteID];
        int v18 = 134349570;
        id v19 = WeakRetained;
        __int16 v20 = 2112;
        id v21 = v16;
        __int16 v22 = 2112;
        long long v23 = v17;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "[%{public}p] Current route changed (ID: %@) before we could finish calculating traffic features for route with ID %@; ignoring",
          (uint8_t *)&v18,
          0x20u);
      }
    }
  }
}

void sub_10093C760(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 40) _updateAnnotationForVehiclePosition:*(void *)(*((void *)&v7 + 1) + 8 * (void)v6) v7];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

NSNumber *__cdecl sub_10093D0B8(id a1, GEOTransitVehiclePosition *a2, unint64_t a3)
{
  id v3 = [(GEOTransitVehiclePosition *)a2 tripID];

  return +[NSNumber numberWithUnsignedInteger:v3];
}

void sub_10093D58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10093D5B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v10 = a3;
  id v4 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = [WeakRetained configuration];
  long long v7 = [v6 selectedRoute];

  if (v4 == v7)
  {
    id v8 = objc_loadWeakRetained((id *)(a1 + 48));
    long long v9 = [v8 trafficFeaturesUpdater];
    [v9 updateTrafficFeatures:v10 onRoute:*(void *)(a1 + 32) forLocation:*(void *)(a1 + 40)];
  }
}

id sub_10093D8BC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 uniqueRouteID];
  id v7 = [v6 isEqual:*(void *)(a1 + 32)];
  if (v7) {
    *a4 = 1;
  }

  return v7;
}

void sub_10093DC78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10093DCA0(uint64_t a1)
{
  id v2 = sub_1000CC6E4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v4 = [*(id *)(a1 + 32) traffic];
    int v5 = 134349314;
    id v6 = WeakRetained;
    __int16 v7 = 2112;
    id v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Updated route context for traffic update: %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_10093DE90(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RouteAnnotationTextUpdater");
  id v2 = (void *)qword_101610070;
  qword_101610070 = (uint64_t)v1;
}

id sub_10093DFE8()
{
  if (qword_1016100C0 != -1) {
    dispatch_once(&qword_1016100C0, &stru_101302C58);
  }
  uint64_t v0 = (void *)qword_1016100B8;

  return v0;
}

id sub_10093E540(uint64_t a1)
{
  return [*(id *)(a1 + 32) _forceUpdateStackViewAlignment];
}

void sub_10093EE3C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "AxisAdjustingStackView");
  id v2 = (void *)qword_1016100B8;
  qword_1016100B8 = (uint64_t)v1;
}

void sub_10093F3C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10093F3E4(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && [v6 count])
  {
    if (*((unsigned char *)WeakRetained + 241)) {
      [WeakRetained fetchPhotoCreditPreferences];
    }
    +[GEOAPPortal captureUserAction:327 target:666 value:0];
    id v4 = (void *)*((void *)WeakRetained + 22);
    id v5 = [v6 copy];
    [v4 addObjectsFromArray:v5];

    [WeakRetained _refreshCollectionViewWithAnimatingDifferences:1];
  }
}

void sub_10093F6EC(uint64_t a1)
{
  id v2 = +[NSMutableArray array];
  uint64_t UInteger = GEOConfigGetUInteger();
  MKCoordinateRegion v28 = MKCoordinateRegionMakeWithDistance(*(CLLocationCoordinate2D *)(*(void *)(a1 + 32) + 136), (double)(unint64_t)UInteger, (double)(unint64_t)UInteger);
  double latitudeDelta = v28.span.latitudeDelta;
  double longitudeDelta = v28.span.longitudeDelta;
  CLLocationCoordinate2D v6 = CLLocationCoordinate2DMake(*(double *)(*(void *)(a1 + 32) + 136) + v28.span.latitudeDelta, *(double *)(*(void *)(a1 + 32) + 144) - v28.span.longitudeDelta);
  CLLocationCoordinate2D v7 = CLLocationCoordinate2DMake(*(double *)(*(void *)(a1 + 32) + 136) - latitudeDelta, longitudeDelta + *(double *)(*(void *)(a1 + 32) + 144));
  id v8 = [objc_alloc((Class)CLLocation) initWithLatitude:v6.latitude longitude:v6.longitude];
  id v9 = [objc_alloc((Class)CLLocation) initWithLatitude:v7.latitude longitude:v7.longitude];
  id v10 = +[PHAsset fetchAssetsInBoundingBoxWithTopLeftLocation:v8 bottomRightLocation:v9 options:*(void *)(a1 + 40)];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v11 = [v10 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v24;
    do
    {
      id v14 = 0;
      do
      {
        if (*(void *)v24 != v13) {
          objc_enumerationMutation(v10);
        }
        [v2 addObject:*(void *)(*((void *)&v23 + 1) + 8 * (void)v14)];
        id v14 = (char *)v14 + 1;
      }
      while (v12 != v14);
      id v12 = [v10 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v12);
  }
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10093F9B0;
  v22[3] = &unk_101302C80;
  void v22[4] = *(void *)(a1 + 32);
  id v15 = sub_100099700(v2, v22);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10093FA54;
  block[3] = &unk_1012E5F78;
  double v16 = *(NSObject **)(a1 + 48);
  id v17 = *(id *)(a1 + 56);
  id v20 = v15;
  id v21 = v17;
  id v18 = v15;
  dispatch_async(v16, block);
}

UGCARPPhotoCarouselViewModel *sub_10093F9B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[UGCARPPhotoCarouselViewModel alloc] initWithImageManager:*(void *)(*(void *)(a1 + 32) + 128)];
  [(UGCARPPhotoCarouselViewModel *)v4 setAsset:v3];
  id v5 = [v3 localIdentifier];

  [(UGCARPPhotoCarouselViewModel *)v4 setIdentifier:v5];
  [(UGCARPPhotoCarouselViewModel *)v4 setIsSuggestedPhoto:1];

  return v4;
}

void sub_10093FA54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10093FE4C(uint64_t a1)
{
  double v2 = *(double *)(a1 + 48);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10093FEFC;
  void v4[3] = &unk_1012F4C10;
  id v3 = *(void **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  [v3 loadThumbnailImageWithDisplayScale:v4 completion:v2];
}

void sub_10093FEFC(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [*(id *)(a1 + 32) identifier];
  id v4 = [*(id *)(a1 + 40) _maps_diffableDataSourceIdentifier];
  unsigned int v5 = [v3 isEqual:v4];

  if (v5) {
    [*(id *)(a1 + 32) setImage:v6];
  }
}

void sub_100940338(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_10094035C(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v5 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      id v7 = WeakRetained;
      [WeakRetained _updateSelection];
      unsigned int v6 = [*(id *)(a1 + 32) isSuggestedPhoto];
      unsigned int v5 = v7;
      if (v6)
      {
        [*(id *)(a1 + 32) setPhotoWithMetadata:0];
        +[GEOAPPortal captureUserAction:326 target:666 value:0];
        unsigned int v5 = v7;
      }
    }
  }
}

void sub_1009403F0(uint64_t a1)
{
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v2 = *(void **)(a1 + 40);
  double v3 = *(double *)(a1 + 64);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100940574;
  v11[3] = &unk_101302CC8;
  id v4 = v2;
  id v12 = v4;
  id v13 = *(id *)(a1 + 48);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1009406A0;
  void v6[3] = &unk_101302CF0;
  objc_copyWeak(&v10, &location);
  unsigned int v5 = *(void **)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  id v8 = *(id *)(a1 + 48);
  id v9 = *(id *)(a1 + 56);
  [v4 loadOriginalImageWithDisplayScale:v11 progressHandler:v6 completion:v3];

  objc_destroyWeak(&v10);
  objc_destroyWeak(&location);
}

void sub_100940558(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100940574(uint64_t a1, double a2, uint64_t a3, unsigned char *a4, void *a5)
{
  id v14 = a5;
  if ([*(id *)(a1 + 32) checked])
  {
    double v8 = a2 + -1.0;
    if (a2 + -1.0 < 0.0001 || *a4) {
      [*(id *)(a1 + 32) setIsLoading:0 v8];
    }
    id v9 = [*(id *)(a1 + 40) identifier:v8];
    id v10 = [*(id *)(a1 + 32) _maps_diffableDataSourceIdentifier];
    unsigned int v11 = [v9 isEqualToString:v10];

    if (v11)
    {
      [*(id *)(a1 + 40) setLoadingProgress:1 animated:&stru_101302CA0 completion:a2];
      [*(id *)(a1 + 40) setViewModel:*(void *)(a1 + 32)];
    }
  }
  else
  {
    id v12 = [v14 objectForKeyedSubscript:PHImageResultRequestIDKey];
    id v13 = [v12 intValue];

    [*(id *)(a1 + 32) cancelLoadImageWithRequestID:v13];
  }
}

void sub_1009406A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (!WeakRetained) {
    goto LABEL_14;
  }
  --*(void *)(*(void *)(a1 + 32) + 192);
  if (([*(id *)(a1 + 40) checked] & 1) == 0)
  {
    id v12 = sub_100940960();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      LOWORD(v17) = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "User cancelled loading the photo", (uint8_t *)&v17, 2u);
    }

    goto LABEL_13;
  }
  if (!v3)
  {
    id v13 = sub_100940960();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      LOWORD(v17) = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Fail to load the photo", (uint8_t *)&v17, 2u);
    }

    [*(id *)(a1 + 40) setChecked:0];
    id v14 = [*(id *)(a1 + 48) identifier];
    id v15 = [*(id *)(a1 + 40) _maps_diffableDataSourceIdentifier];
    unsigned int v16 = [v14 isEqualToString:v15];

    if (v16) {
      [*(id *)(a1 + 48) setViewModel:*(void *)(a1 + 40)];
    }
LABEL_13:
    [WeakRetained _updateSelection];
    goto LABEL_14;
  }
  [*(id *)(a1 + 40) setIsLoading:0];
  unsigned int v5 = [*(id *)(a1 + 48) identifier];
  unsigned int v6 = [*(id *)(a1 + 40) _maps_diffableDataSourceIdentifier];
  unsigned int v7 = [v5 isEqualToString:v6];

  if (v7) {
    [*(id *)(a1 + 48) setViewModel:*(void *)(a1 + 40)];
  }
  double v8 = sub_100940960();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    id v9 = [*(id *)(a1 + 40) asset];
    id v10 = [v9 localIdentifier];
    int v17 = 138412290;
    id v18 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Successfully loaded the photo. Updating the view model with asset identifier %@", (uint8_t *)&v17, 0xCu);
  }
  [*(id *)(a1 + 40) setPhotoWithMetadata:v3];
  unsigned int v11 = [*(id *)(a1 + 40) photoWithMetadata];
  [WeakRetained _handleAddFromSuggestionImage:v11 atIndexPath:*(void *)(a1 + 56)];

  [WeakRetained _updateSelection];
  [WeakRetained _refreshCollectionViewWithAnimatingDifferences:1];
  if ([*(id *)(a1 + 40) isSuggestedPhoto]) {
    +[GEOAPPortal captureUserAction:336 target:666 value:0];
  }
LABEL_14:
}

id sub_100940960()
{
  if (qword_1016100D0 != -1) {
    dispatch_once(&qword_1016100D0, &stru_101302D10);
  }
  uint64_t v0 = (void *)qword_1016100C8;

  return v0;
}

void sub_100940DBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100940DE0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    double v8 = sub_10057708C();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_INFO);
    if (v6)
    {
      if (v9)
      {
        int v14 = 138412290;
        id v15 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Failed Sundew call when attempting to fetch with error %@", (uint8_t *)&v14, 0xCu);
      }

      uint64_t v10 = 0;
      WeakRetained[209] = 0;
      unsigned int v11 = (void *)*((void *)WeakRetained + 27);
      *((void *)WeakRetained + 27) = 0;
    }
    else
    {
      if (v9)
      {
        int v14 = 138412290;
        id v15 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Fetched photo credit result: %@", (uint8_t *)&v14, 0xCu);
      }

      WeakRetained[209] = [v5 attributePhotos];
      uint64_t v12 = [v5 attributionName];
      id v13 = (void *)*((void *)WeakRetained + 27);
      *((void *)WeakRetained + 27) = v12;

      unsigned int v11 = [WeakRetained delegate];
      [v11 photoCarouselControllerDidUpdatePhotoCredit:*(void *)(a1 + 32)];
      uint64_t v10 = 2;
    }

    *((void *)WeakRetained + 29) = v10;
  }
}

void sub_1009419FC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCARPPhotoCarouselController");
  uint64_t v2 = (void *)qword_1016100C8;
  qword_1016100C8 = (uint64_t)v1;
}

void sub_10094321C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100943248()
{
  if (qword_1016100F0 != -1) {
    dispatch_once(&qword_1016100F0, &stru_101302E20);
  }
  uint64_t v0 = (void *)qword_1016100E8;

  return v0;
}

void sub_10094329C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = sub_100943248();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349314;
      id v15 = WeakRetained;
      __int16 v16 = 2112;
      id v17 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] Refreshed sharing identity: %@", buf, 0x16u);
    }

    id v6 = +[NSBundle mainBundle];
    unsigned int v7 = [v6 localizedStringForKey:@"[SharedETA] sender info label" value:@"localized string not found" table:0];

    double v8 = [v3 name];
    BOOL v9 = [v3 handle];
    uint64_t v10 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v7, v8, v9);
    unsigned int v11 = [WeakRetained shareETADisclosureFooterView];
    [v11 setFooterText:v10];

    uint64_t v12 = [WeakRetained shareETADisclosureTableView];
    [v12 reloadData];

    id v13 = [WeakRetained cardPresentationController];
    [v13 updateHeightForCurrentLayout];
  }
}

void sub_100943758(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardPresentationController];
  [v1 updateHeightForCurrentLayout];
}

void sub_10094379C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    [v3 setOverrideUserInterfaceStyle:2];
    id v4 = sub_100826530();
    [*(id *)(a1 + 32) setCardColor:v4];

    id v5 = *(unsigned char **)(a1 + 32);
    if (v5[216])
    {
      v5[216] = 0;
      [*(id *)(a1 + 32) _updateShareETADisclosure];
      id v6 = [*(id *)(a1 + 32) cardPresentationController];
      [v6 updateHeightForCurrentLayout];

      id v5 = *(unsigned char **)(a1 + 32);
    }
    unsigned int v7 = [v5 cardPresentationController];
    id v8 = [v7 containeeLayout];

    if (v8 != (id)1)
    {
      BOOL v9 = [*(id *)(a1 + 32) cardPresentationController];
      [v9 wantsLayout:1];
    }
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 232));
    [WeakRetained dismissViewControllerAnimated:0 completion:0];
  }
  else
  {
    [v3 setOverrideUserInterfaceStyle:0];
    id WeakRetained = +[UIColor colorNamed:@"NavigationMaterialColor"];
    [*(id *)(a1 + 32) setCardColor:WeakRetained];
  }
}

void sub_10094455C(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) shareETADisclosureView];
  [v2 layoutIfNeeded];

  id v3 = [*(id *)(a1 + 32) shareETADisclosureView];
  [v3 sizeToFit];
}

void sub_100944CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100944CE4(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained categoriesAPIController];
  id v4 = [v3 categories];
  id v5 = [v4 count];

  if (v5)
  {
    id v6 = objc_loadWeakRetained(v1);
    [v6 _computeSections];

    id v8 = objc_loadWeakRetained(v1);
    unsigned int v7 = [v8 tableView];
    [v7 reloadData];
  }
}

void sub_100945F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100945F2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v2 = sub_100943248();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349056;
      id v5 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Displaying initial share ETA banner", buf, 0xCu);
    }

    WeakRetained[216] = 1;
    WeakRetained[217] = 1;
    [WeakRetained _startTimerToDismissInitialBanner];
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100946068;
    v3[3] = &unk_1012E5D08;
    void v3[4] = WeakRetained;
    +[UIView animateWithDuration:v3 animations:0.25];
  }
}

void sub_100946068(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateShareETADisclosure];
  id v2 = [*(id *)(a1 + 32) cardPresentationController];
  [v2 updateHeightForCurrentLayout];
}

void sub_1009461C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009461EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_100943248();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349056;
      id v5 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Dismissing initial share ETA banner", buf, 0xCu);
    }

    WeakRetained[216] = 0;
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100946308;
    v3[3] = &unk_1012E5D08;
    void v3[4] = WeakRetained;
    +[UIView animateWithDuration:v3 animations:0.25];
  }
}

void sub_100946308(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) shareETADisclosureTableView];
  id v3 = [v2 superview];

  [*(id *)(a1 + 32) _updateShareETADisclosure];
  id v4 = [*(id *)(a1 + 32) shareETADisclosureTableView];
  id v5 = [v4 superview];

  if (v3 && !v5) {
    +[GEOAPPortal captureUserAction:399 target:91 value:0];
  }
  id v6 = [*(id *)(a1 + 32) cardPresentationController];
  [v6 updateHeightForCurrentLayout];
}

id sub_100947778(uint64_t a1)
{
  return +[GEOAPPortal captureUserAction:1 target:*(unsigned int *)(a1 + 32) value:0];
}

void sub_100947794(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 176) setExpanded:*(unsigned __int8 *)(a1 + 48)];
  [*(id *)(*(void *)(a1 + 32) + 184) setLayoutProgress:*(double *)(a1 + 40)];
  double v2 = 1.0 - *(double *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) shareETADisclosureView];
  [v3 setAlpha:v2];
}

id sub_1009479C4(uint64_t a1)
{
  return +[GEOAPPortal captureUserAction:2 target:*(unsigned int *)(a1 + 32) value:0];
}

id sub_1009479E0(uint64_t a1)
{
  return +[GEOAPPortal captureUserAction:45 target:*(unsigned int *)(a1 + 32) value:0];
}

void sub_100948D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100948D7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_100943248();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      *(_DWORD *)buf = 134349314;
      id v15 = WeakRetained;
      __int16 v16 = 2112;
      id v17 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "[%{public}p] Error prompting to unlock phone before launching Find My: %@", buf, 0x16u);
    }
  }
  else
  {
    id v6 = +[NavigationFeedbackCollector sharedFeedbackCollector];
    [v6 userLaunchedFindMy];

    unsigned int v7 = sub_100943248();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = objc_loadWeakRetained((id *)(a1 + 40));
      BOOL v9 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 134349315;
      id v15 = v8;
      __int16 v16 = 2113;
      id v17 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}p] Prompt to unlock phone successful. Will launch into Find My.app with handle identifier: %{private}@", buf, 0x16u);
    }
    uint64_t v10 = +[NSString stringWithFormat:@"findmy://friend/%@", *(void *)(a1 + 32)];
    id v4 = +[NSURL URLWithString:v10];

    unsigned int v11 = +[UIApplication sharedApplication];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100948FD4;
    v12[3] = &unk_1012E6998;
    objc_copyWeak(&v13, (id *)(a1 + 40));
    [v11 _maps_openURL:v4 options:0 completionHandler:v12];

    objc_destroyWeak(&v13);
  }
}

void sub_100948FB8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100948FD4(uint64_t a1, int a2)
{
  id v4 = sub_100943248();
  id v5 = v4;
  if (a2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Successfully launched FindMy", buf, 2u);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1009490F8;
    block[3] = &unk_1012E6708;
    objc_copyWeak(&v7, (id *)(a1 + 32));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v7);
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to launch FindMy", buf, 2u);
    }
  }
}

void sub_1009490F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    double v2 = [WeakRetained _delegate];
    [v2 pressedEndWithSender:v3 feedback:0];

    id WeakRetained = v3;
  }
}

void sub_100949768(id a1)
{
  uint64_t v1 = +[UIImageSymbolConfiguration configurationWithPointSize:6 weight:27.0];
  double v2 = (void *)qword_1016100E0;
  qword_1016100E0 = v1;
}

void sub_10094A504(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v17 = a2;
  id v7 = [v17 etaInfo];
  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = v7;
  unint64_t v10 = v8;
  if (v9 | v10)
  {
    unsigned int v11 = (void *)v10;
    unsigned __int8 v12 = [(id)v9 isEqual:v10];

    if ((v12 & 1) == 0)
    {
      id v13 = [v17 waypoint];
      int v14 = [v13 uniqueID];
      id v15 = [*(id *)(a1 + 32) waypointID];
      unsigned int v16 = [v14 isEqual:v15];

      if (!v16) {
        goto LABEL_9;
      }
      [v17 setEtaInfo:*(void *)(a1 + 32)];
      uint64_t v9 = +[NSIndexPath indexPathForRow:a3 inSection:*(void *)(a1 + 56)];
      if ([*(id *)(a1 + 40) containsObject:v9]) {
        [*(id *)(a1 + 48) addObject:v9];
      }
      *a4 = 1;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }

LABEL_9:
}

void sub_10094B50C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 176) applyArrivalState];
  id v2 = [*(id *)(a1 + 32) cardPresentationController];
  [v2 updateHeightForCurrentLayout];
}

void sub_10094B978(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 176) applyArrivalState];
  id v2 = [*(id *)(a1 + 32) cardPresentationController];
  [v2 updateHeightForCurrentLayout];
}

id sub_10094BBB0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 176) applyArrivalState];
}

void sub_10094BBC4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardPresentationController];
  [v1 updateHeightForCurrentLayout];
}

BOOL sub_10094BF6C(id a1, NavTrayWaypointRow *a2, unint64_t a3, BOOL *a4)
{
  id v4 = [(NavTrayWaypointRow *)a2 waypoint];
  char v5 = [v4 isServerProvidedWaypoint] ^ 1;

  return v5;
}

void sub_10094D208(uint64_t a1)
{
  id v3 = +[UIApplication sharedApplication];
  id v2 = [*(id *)(a1 + 32) unformattedInternationalStringValue];
  [v3 callPhoneNumber:v2 completion:0];
}

void sub_10094D354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    id v4 = [*(id *)(a1 + 32) contact];
    +[MapsSharedTripAnalyticsHelper sendSuccessAnalyticFor:v4];
  }
}

void sub_10094D4B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _pressedOtherStations];
}

void sub_10094D7E8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavTrayViewController");
  id v2 = (void *)qword_1016100E8;
  qword_1016100E8 = (uint64_t)v1;
}

void sub_10094EBD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v7 - 104));
  _Unwind_Resume(a1);
}

void sub_10094EC54(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    id v13[2] = sub_10094EE3C;
    v13[3] = &unk_1012E6708;
    objc_copyWeak(&v14, (id *)(a1 + 40));
    id v5 = [v3 addButtonRowWithTitle:@"Download Web Module" action:v13];
    id v6 = [*(id *)(a1 + 32) webBundleDirectory];
    uint64_t v7 = [v6 absoluteString];
    id v8 = [v3 addReadOnlyRowWithTitle:@"Web Bundle Directory" value:v7];
    [WeakRetained setDeviceVersionNumberRow:v8];

    uint64_t v9 = [v3 addReadOnlyRowWithTitle:@"Web Bundle Server Version" value:@"Loading..."];
    [WeakRetained setServerVersionNumberRow:v9];

    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10094EEC4;
    v11[3] = &unk_1012E5D08;
    id v12 = *(id *)(a1 + 32);
    id v10 = [v3 addButtonRowWithTitle:@"Remove WebBundle files" action:v11];

    objc_destroyWeak(&v14);
  }
}

void sub_10094EE24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10094EE3C(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v3 = +[RAPWebBundleDownloadManager sharedInstance];
    [v3 _downloadWebBundleWithForce:1];
    id v4 = objc_loadWeakRetained(v1);
    [v3 addObserver:v4];

    id WeakRetained = v5;
  }
}

void sub_10094EEC4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) webBundleDirectory];
  +[NSFileManager emptyContentsOfDirectoryAtURL:v1 error:0];
}

void sub_10094EF24(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addGEOTextFieldRowWithTitle:@"Keywords", @"comma-separated", 3, GeoServicesConfig_RAPDebugSubmissionKeywords[0], GeoServicesConfig_RAPDebugSubmissionKeywords[1] placeholderText inputType geoConfigKeyString];
}

void sub_10094EF68(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Present Fake Status Change Notification" action:&stru_101302F10];
}

void sub_10094EF9C(id a1)
{
  id v1 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  [v1 simulateRAPStatusChangeNotification];
}

void sub_10094EFE4(uint64_t a1, void *a2)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10094F108;
  v7[3] = &unk_1012FF168;
  id v3 = a2;
  id v8 = v3;
  sub_100521F54((uint64_t)v7);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10094F220;
  void v5[3] = &unk_1012E6708;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Reset defaults" action:v5];
  objc_destroyWeak(&v6);
}

void sub_10094F0F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10094F108(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  GEOConfigGetPropertiesForKey();

  return 1;
}

void sub_10094F1A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v7 = [*(id *)(a1 + 32) addSwitchRowWithTitle:v8 geoConfigKey:*(void *)(a1 + 40) switchOnStateIfUnset:*(void *)(a1 + 48) changeHandler:[a5 BOOLValue]];
}

void sub_10094F220(uint64_t a1)
{
  sub_100521F54((uint64_t)&stru_101302F50);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

BOOL sub_10094F278(id a1, $6E15C01CA1BE37A4936191A84F7075E2 a2)
{
  return 1;
}

void sub_10094F29C(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = +[NSUserDefaults standardUserDefaults];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enable Long-Press to Show reportID" userDefaults:v2 defaultsKey:@"__internal__EnableTapRAPForReportID"];
}

void sub_10094F318(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Received RAP Consent" defaultsKey:@"RAPHasReceived2015PrivacyConsent"];
  id v5 = [objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"group.com.apple.Maps"];
  id v6 = [v3 addSwitchRowWithTitle:@"Development APS" userDefaults:v5 defaultsKey:@"__internal__PushManagerUseDevelopmentAPSEnvironment"];

  [v6 setSubtitle:@"Use the development APS environment rather than prod."];
  id v7 = [v3 addButtonRowWithTitle:@"Present Fake Resolution (10s delay)" action:&stru_101302F90];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_10094F4BC;
  v9[3] = &unk_1012E6708;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  id v8 = [v3 addButtonRowWithTitle:@"Display Push Details" action:v9];
  objc_destroyWeak(&v10);
}

void sub_10094F460(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10094F474(id a1)
{
  id v1 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  [v1 simulateProblemResolution];
}

void sub_10094F4BC(uint64_t a1)
{
  id v2 = +[GEORPUserCredentials _credentialsForPrimaryICloudAccount];
  uint64_t v14 = 0;
  id v15 = &v14;
  uint64_t v16 = 0x3032000000;
  id v17 = sub_100104164;
  id v18 = sub_100104930;
  id v19 = 0;
  dispatch_semaphore_t v3 = dispatch_semaphore_create(0);
  id v4 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10094F6B4;
  v11[3] = &unk_1012F9020;
  id v13 = &v14;
  id v5 = v3;
  id v12 = v5;
  [v4 fetchDevicePushToken:v11];

  dispatch_time_t v6 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v5, v6);
  id v7 = [v2 icloudUserPersonId];
  id v8 = [v2 icloudUserMapsAuthToken];
  uint64_t v9 = +[NSString stringWithFormat:@"Account PersonID: %@\nMaps Auth Token: %@\nMaps Push Token: %@\n", v7, v8, v15[5]];

  NSLog(@"%@", v9);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained displayMessage:v9 titled:@"Push Details"];

  _Block_object_dispose(&v14, 8);
}

void sub_10094F694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10094F6B4(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10094F714(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enable Server Controlled UI", MapsConfig_RAPEnableServerControlledUI, off_1015EFFF8, 1, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Cache Server Layout Results", MapsConfig_RAPShouldCacheServerLayoutResults, off_1015F0058 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Delete all cached layout results" action:&stru_101302FD0];
}

void sub_10094F7B8(id a1)
{
  id v1 = +[RAPFileManager baseLayoutFilePath];
  +[RAPFileManager removeAllItemsInDirectory:v1];
}

void sub_10094F814(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Force Client Override", MapKitConfig_RAPForceOverrideServerConfig[0], MapKitConfig_RAPForceOverrideServerConfig[1], 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v3 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enable Building Cell", MapsConfig_RAPShowBuildingAddressCell, off_1015F0078, 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v4 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enable Floor Cell", MapsConfig_RAPShowFloorAddressCell, off_1015F0088, 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v5 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enable Unit Cell", MapsConfig_RAPShowUnitAddressCell, off_1015F0098, 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v6 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enable Lightweight Feedback", MapsConfig_ReportAProblemShouldOverrideEnableLightweightFeedback, off_1015EF2E8, 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v7 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enable Suggest an Edit Button", MapKitConfig_RAPForceShowSuggestAnEditButton[0], MapKitConfig_RAPForceShowSuggestAnEditButton[1], 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
}

void sub_10094F950(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addTextFieldRowWithTitle:@"URL" placeholderText:@"e.g. http://sim-jana-qa1.geo.apple.com/" inputType:0 defaultsKey:@"RAPDebugSimJanaURL"];
}

void sub_10094F990(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addTextFieldRowWithTitle:0 placeholderText:@"Problem ID" inputType:0 defaultsKey:@"RAPLastSubmittedProblemID"];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10094FA80;
  void v6[3] = &unk_1012E6708;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v5 = [v3 addButtonRowWithTitle:@"Fix" action:v6];
  objc_destroyWeak(&v7);
}

void sub_10094FA6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10094FA80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained view];
  [v1 endEditing:1];

  id v2 = +[NSUserDefaults standardUserDefaults];
  id v3 = [v2 stringForKey:@"RAPLastSubmittedProblemID"];

  [WeakRetained simulateFixForProblemWithID:v3];
}

void sub_10094FB1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = [v4 stringArrayForKey:@"RAPPreviouslySubmittedProblemIDs"];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id obj = v5;
  id v7 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = 0;
    uint64_t v10 = *(void *)v18;
    do
    {
      unsigned int v11 = 0;
      id v12 = v9;
      do
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v13 = *(void *)(*((void *)&v17 + 1) + 8 * (void)v11);
        uint64_t v9 = +[NSString stringWithFormat:@"Fix \"%@\"", v13];

        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472;
        v16[2] = sub_10094FD08;
        v16[3] = &unk_1012E5D58;
        void v16[4] = WeakRetained;
        v16[5] = v13;
        id v14 = [v3 addButtonRowWithTitle:v9 action:v16];
        unsigned int v11 = (char *)v11 + 1;
        id v12 = v9;
      }
      while (v8 != v11);
      id v8 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v8);
  }
}

id sub_10094FD08(uint64_t a1)
{
  return [*(id *)(a1 + 32) simulateFixForProblemWithID:*(void *)(a1 + 40)];
}

void sub_10094FD14(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = [v4 stringArrayForKey:@"RAPPreviouslySubmittedProblemURLs"];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id obj = v5;
  id v7 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = 0;
    uint64_t v10 = *(void *)v18;
    do
    {
      unsigned int v11 = 0;
      id v12 = v9;
      do
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v13 = *(void *)(*((void *)&v17 + 1) + 8 * (void)v11);
        uint64_t v9 = +[NSString stringWithFormat:@"Open \"%@\"", v13];

        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472;
        v16[2] = sub_10094FF00;
        v16[3] = &unk_1012E5D58;
        void v16[4] = WeakRetained;
        v16[5] = v13;
        id v14 = [v3 addButtonRowWithTitle:v9 action:v16];
        unsigned int v11 = (char *)v11 + 1;
        id v12 = v9;
      }
      while (v8 != v11);
      id v8 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v8);
  }
}

id sub_10094FF00(uint64_t a1)
{
  return _[*(id *)(a1 + 32) openAnalyticsWithURL:*(void *)(a1 + 40)];
}

void sub_10095014C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100950248;
  block[3] = &unk_1012E98D8;
  id v15 = v8;
  id v16 = v7;
  uint64_t v10 = *(void **)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 32);
  id v18 = v10;
  id v19 = v9;
  id v11 = v9;
  id v12 = v7;
  id v13 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100950248(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    id v12 = 0;
    id v4 = +[NSJSONSerialization JSONObjectWithData:v3 options:0 error:&v12];
    id v5 = v12;
    if ((uint64_t)[v2 statusCode] >= 200 && (uint64_t)objc_msgSend(v2, "statusCode") < 300)
    {
      id v6 = *(void **)(a1 + 48);
      id v7 = +[NSString stringWithFormat:@"Fixed %@\n\n%@", *(void *)(a1 + 56), v4];
      CFStringRef v8 = @"Success";
    }
    else
    {
      id v6 = *(void **)(a1 + 48);
      id v7 = +[NSString stringWithFormat:@"%@", v4];
      CFStringRef v8 = @"SimJana Error";
    }
    [v6 displayMessage:v7 titled:v8];
  }
  id v9 = *(void **)(a1 + 64);
  if (v9)
  {
    uint64_t v10 = *(void **)(a1 + 48);
    id v11 = [v9 localizedDescription];
    [v10 displayMessage:v11 titled:@"SimJana Error"];
  }
}

void sub_10095058C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1009505B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v6) {
      [v6 localizedDescription];
    }
    else {
    id v9 = [v5 version];
    }
    uint64_t v10 = [WeakRetained serverVersionNumberRow];
    [v10 setSubtitle:v9];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1009506CC;
    block[3] = &unk_1012E6708;
    objc_copyWeak(&v12, v7);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v12);
  }
}

void sub_1009506CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained reloadData];
    id WeakRetained = v2;
  }
}

id sub_1009509D0()
{
  if (qword_101610100 != -1) {
    dispatch_once(&qword_101610100, &stru_101303080);
  }
  uint64_t v0 = (void *)qword_1016100F8;

  return v0;
}

void sub_100951204(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    uint64_t v3 = *(void *)(a1 + 40);
    id v4 = +[MKLocationManager sharedLocationManager];
    id v5 = v4;
    if (v3 == 1) {
      [v4 startLocationUpdateWithObserver:v6];
    }
    else {
      [v4 stopLocationUpdateWithObserver:v6];
    }

    id WeakRetained = v6;
  }
}

void sub_100951288(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFVIOSessionLocationAccuracyMonitor");
  id v2 = (void *)qword_1016100F8;
  qword_1016100F8 = (uint64_t)v1;
}

void sub_1009513D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[SearchResult alloc] initWithMapItem:v3];

  id v5 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v5 setSearchResult:v4];
  id v9 = v4;
  id v6 = +[NSArray arrayWithObjects:&v9 count:1];
  id v7 = +[SearchInfo searchInfoWithResults:v6];

  CFStringRef v8 = [*(id *)(a1 + 32) appCoordinator];
  [v8 openSearch:v5 andResults:v7];
}

id sub_100951D94(id a1, UGCPhotoViewerDataProviding *a2, unint64_t a3)
{
  return [(UGCPhotoViewerDataProviding *)a2 albumCategory];
}

void sub_100952C6C(uint64_t a1, void *a2)
{
  id v3 = [a2 collection];
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 32) addObject:v3];
    id v3 = v4;
  }
}

void sub_10095372C(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch((unint64_t)[v3 sectionType])
  {
    case 1uLL:
      id v4 = objc_alloc_init((Class)NSMutableArray);
      id v5 = [v3 curatedGuides];
      v57[0] = _NSConcreteStackBlock;
      v57[1] = 3221225472;
      v57[2] = sub_100953EE4;
      v57[3] = &unk_1013030E8;
      id v6 = v4;
      id v58 = v6;
      [v5 enumerateObjectsUsingBlock:v57];

      if ([v6 count])
      {
        id v7 = -[GuidesHomeSection initWithSectionKind:usingMaxWidth:usingTraitEnvironment:count:]([GuidesHomeSection alloc], "initWithSectionKind:usingMaxWidth:usingTraitEnvironment:count:", 3, *(void *)(a1 + 32), [v6 count], *(double *)(a1 + 48));
        id v8 = objc_alloc((Class)MKPlaceCollectionsLogicController);
        id v9 = [v6 copy];
        uint64_t v10 = +[CuratedCollectionSyncManager sharedManager];
        id v11 = [v8 initWithPlaceCollections:v9 usingSyncCoordinator:v10 inContext:8];

        id v12 = [*(id *)(a1 + 40) collectionLogicControllers];
        id v13 = [(GuidesHomeSection *)v7 sectionIdentifier];
        [v12 setObject:v11 forKey:v13];

        id v14 = [v3 title];
        [(GuidesHomeSection *)v7 setSectionTitle:v14];

        id v15 = [v3 contentType];
        if (v15 == (id)2) {
          uint64_t v16 = 2;
        }
        else {
          uint64_t v16 = v15 == (id)1;
        }
        [(GuidesHomeSection *)v7 setContentType:v16];
        uint64_t v17 = [*(id *)(a1 + 40) sections];
        [v17 addObject:v7];
      }
      else
      {
        sub_10057611C();
        id v7 = (GuidesHomeSection *)objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(&v7->super, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, &v7->super, OS_LOG_TYPE_ERROR, "Guides Home section for HorizontalGuides couldn't build any objects to display in section", buf, 2u);
        }
      }

      id v48 = v58;
      goto LABEL_25;
    case 2uLL:
      id v18 = objc_alloc_init((Class)NSMutableArray);
      id v19 = [v3 curatedGuides];
      v54[0] = _NSConcreteStackBlock;
      v54[1] = 3221225472;
      v54[2] = sub_100953F44;
      v54[3] = &unk_1013030E8;
      id v6 = v18;
      id v55 = v6;
      [v19 enumerateObjectsUsingBlock:v54];

      if ([v6 count])
      {
        long long v20 = -[GuidesHomeSection initWithSectionKind:usingMaxWidth:usingTraitEnvironment:count:]([GuidesHomeSection alloc], "initWithSectionKind:usingMaxWidth:usingTraitEnvironment:count:", 4, *(void *)(a1 + 32), [v6 count], *(double *)(a1 + 48));
        id v21 = objc_alloc((Class)MKPlaceCollectionsLogicController);
        id v22 = [v6 copy];
        long long v23 = +[CuratedCollectionSyncManager sharedManager];
        id v24 = [v21 initWithPlaceCollections:v22 usingSyncCoordinator:v23 inContext:9];

        long long v25 = [*(id *)(a1 + 40) collectionLogicControllers];
        long long v26 = [(GuidesHomeSection *)v20 sectionIdentifier];
        [v25 setObject:v24 forKey:v26];

        BOOL v27 = [v3 title];
        [(GuidesHomeSection *)v20 setSectionTitle:v27];

        id v28 = [v3 contentType];
        if (v28 == (id)2) {
          uint64_t v29 = 2;
        }
        else {
          uint64_t v29 = v28 == (id)1;
        }
        [(GuidesHomeSection *)v20 setContentType:v29];
        id v30 = [*(id *)(a1 + 40) sections];
        [v30 addObject:v20];
      }
      else
      {
        sub_10057611C();
        long long v20 = (GuidesHomeSection *)objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(&v20->super, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, &v20->super, OS_LOG_TYPE_ERROR, "Guides Home section for VerticalGuides couldn't build any objects to display in section.", buf, 2u);
        }
      }

      id v48 = v55;
LABEL_25:

      goto LABEL_26;
    case 3uLL:
      id v31 = [v3 guideLocations];

      if (!v31) {
        goto LABEL_27;
      }
      id v6 = [v3 guideLocations];
      if ([v6 count])
      {
        id v32 = -[GuidesHomeSection initWithSectionKind:usingMaxWidth:usingTraitEnvironment:count:]([GuidesHomeSection alloc], "initWithSectionKind:usingMaxWidth:usingTraitEnvironment:count:", 2, *(void *)(a1 + 32), [v6 count], *(double *)(a1 + 48));
        id v33 = [objc_alloc((Class)MKPlaceCompactCollectionsLogicController) initWithGuideLocations:v6 context:2];
        id v34 = [*(id *)(a1 + 40) compactCollectionLogicControllers];
        long long v35 = [(GuidesHomeSection *)v32 sectionIdentifier];
        [v34 setObject:v33 forKey:v35];

        id v36 = [v3 title];
        [(GuidesHomeSection *)v32 setSectionTitle:v36];

        id v37 = [*(id *)(a1 + 40) sections];
        [v37 addObject:v32];

        goto LABEL_18;
      }
      long long v49 = sub_10057611C();
      if (!os_log_type_enabled(v49, OS_LOG_TYPE_ERROR)) {
        goto LABEL_33;
      }
      *(_WORD *)buf = 0;
      long long v50 = "Guides Home section for GuideLocations couldn't build any objects to display in section.";
      goto LABEL_32;
    case 4uLL:
      long long v38 = [v3 publishers];
      id v6 = v38;
      if (!v38) {
        goto LABEL_26;
      }
      if ([v38 count])
      {
        id v32 = -[GuidesHomeSection initWithSectionKind:usingMaxWidth:usingTraitEnvironment:count:]([GuidesHomeSection alloc], "initWithSectionKind:usingMaxWidth:usingTraitEnvironment:count:", 5, *(void *)(a1 + 32), [v6 count], *(double *)(a1 + 48));
        long long v39 = [v3 title];
        [(GuidesHomeSection *)v32 setSectionTitle:v39];

        long long v40 = +[UIDevice currentDevice];
        BOOL v41 = [v40 userInterfaceIdiom] != (id)5;

        long long v42 = [v3 publishers];
        uint64_t v43 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v42 count]);

        v51[0] = _NSConcreteStackBlock;
        v51[1] = 3221225472;
        v51[2] = sub_100953FA4;
        v51[3] = &unk_101303110;
        id v52 = v43;
        BOOL v53 = v41;
        id v33 = v43;
        [v6 enumerateObjectsUsingBlock:v51];
        id v44 = [objc_alloc((Class)NSOrderedSet) initWithArray:v33];
        long long v45 = [v44 array];
        id v46 = [v45 copy];
        [*(id *)(a1 + 40) setPublishers:v46];

        id v47 = [*(id *)(a1 + 40) sections];
        [v47 addObject:v32];

LABEL_18:
      }
      else
      {
        long long v49 = sub_10057611C();
        if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          long long v50 = "Guides Home section for Publishers couldn't build any objects to display in section.";
LABEL_32:
          _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_ERROR, v50, buf, 2u);
        }
LABEL_33:
      }
LABEL_26:

LABEL_27:
      return;
    default:
      goto LABEL_27;
  }
}

void sub_100953EE4(uint64_t a1, void *a2)
{
  id v3 = [a2 collection];
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 32) addObject:v3];
    id v3 = v4;
  }
}

void sub_100953F44(uint64_t a1, void *a2)
{
  id v3 = [a2 collection];
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 32) addObject:v3];
    id v3 = v4;
  }
}

void sub_100953FA4(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 publisher];

  if (v3)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = [v7 publisher];
    id v6 = +[TwoLinesContentViewModelComposer cellModelForPublisher:v5 showDisclosureIndicator:*(unsigned __int8 *)(a1 + 40)];
    [v4 addObject:v6];
  }
}

void sub_100955164(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) _processLocations:a2];
  id v4 = objc_alloc((Class)GEORPFeedbackRequestParameters);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned int *)(v5 + 12);
  id v9 = [(id)v5 _incidentUserPath];
  id v10 = [v4 initWithIncidentLocation:v6 userLocation:v7 type:v8 historicalLocations:v3 userPath:v9];

  if (*(unsigned char *)(*(void *)(a1 + 32) + 8))
  {
    id v11 = objc_alloc_init((Class)GEORPSiriContext);
    uint64_t v12 = *(int *)(*(void *)(a1 + 32) + 12);
    if (v12 >= 0x12)
    {
      id v13 = +[NSString stringWithFormat:@"(unknown: %i)", *(int *)(*(void *)(a1 + 32) + 12)];
    }
    else
    {
      id v13 = (void *)*((void *)&off_101303288 + v12);
    }
    [v11 setSiriIncidentType:v13];

    id v14 = [v10 submissionParameters];
    id v15 = [v14 details];
    uint64_t v16 = [v15 incidentFeedback];
    [v16 setSiriContext:v11];
  }
  uint64_t v17 = sub_100576E2C();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    int v18 = *(_DWORD *)(*(void *)(a1 + 32) + 12);
    *(_DWORD *)buf = 67109378;
    int v20 = v18;
    __int16 v21 = 2112;
    id v22 = v3;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "Submitting incident report type: %d locations: %@", buf, 0x12u);
  }

  [*(id *)(a1 + 32) _submitFeedbackRequestParameters:v10 attachedImages:*(void *)(a1 + 40) comments:*(void *)(a1 + 48) requireAuthenication:sub_100CDC80C() completionHandler:*(void *)(a1 + 56)];
}

void sub_100955718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10095574C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v2 = +[NSDate date];
    [WeakRetained setIncidentUpdateTime:v2];

    uint64_t v3 = *(void *)(a1 + 32);
    if (v3) {
      (*(void (**)(void))(v3 + 16))();
    }
  }
}

id sub_100955918(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 56);
    return [v3 _submitFeedbackRequestParameters:v4 attachedImages:v5 comments:v6 userInfo:a2];
  }
  else
  {
    uint64_t v8 = sub_100576E2C();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error generating userInfo for authenication", v11, 2u);
    }

    id v9 = +[TrafficIncidentAuthenticationManager sharedInstance];
    [v9 rolloverAnonymousId];

    id v10 = +[TrafficIncidentsStorageManager sharedInstance];
    [v10 resubmitLastReport];

    return [*(id *)(a1 + 32) _displayInternalErrorAlert];
  }
}

void sub_100955BCC(uint64_t a1)
{
  id v2 = +[UIApplication sharedMapsDelegate];
  uint64_t v3 = [v2 submissionManager];
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 72)) {
    uint64_t v5 = *(void *)(a1 + 40);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = +[GEOMapService sharedService];
  uint64_t v8 = [v7 defaultTraits];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100955CE4;
  v10[3] = &unk_1013031B0;
  uint64_t v9 = *(void *)(a1 + 56);
  void v10[4] = *(void *)(a1 + 64);
  [v3 submitOrEnqueueFeedback:v4 attachedImages:v5 userInfo:v6 traits:v8 debugSettings:v9 uploadPolicy:0 feedbackObjectToUpdate:0 completion:v10];
}

void sub_100955CE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    uint64_t v5 = sub_100576E2C();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error submitting incident %@", (uint8_t *)&v8, 0xCu);
    }

    uint64_t v6 = +[TrafficIncidentsStorageManager sharedInstance];
    [v6 resubmitLastReport];

    [*(id *)(a1 + 32) _displayInternalErrorAlert];
  }
  else
  {
    uint64_t v7 = +[NSDate date];
    [*(id *)(a1 + 32) setIncidentUpdateTime:v7];
  }
}

void sub_100955E8C(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableDictionary);
  [v1 setObject:@"Error" forKeyedSubscript:@"kMapsInterruptionTitle"];
  [v1 setObject:@"The incident submission failed, please file a radar", @"kMapsInterruptionMessage" forKeyedSubscript];
  id v2 = +[MapsInterruptionAction actionWithTitle:@"Dismiss" cancels:1 handler:0];
  uint64_t v7 = v2;
  uint64_t v3 = +[NSArray arrayWithObjects:&v7 count:1];
  [v1 setObject:v3 forKeyedSubscript:@"kMapsInterruptionActions"];

  id v4 = +[UIApplication sharedMapsDelegate];
  id v5 = [v1 copy];
  [v4 interruptApplicationWithKind:23 userInfo:v5 completionHandler:0];

  dispatch_time_t v6 = dispatch_time(0, 25000000000);
  dispatch_after(v6, (dispatch_queue_t)&_dispatch_main_q, &stru_1013031F0);
}

void sub_100955FE8(id a1)
{
  id v1 = +[UIApplication sharedMapsDelegate];
  [v1 dismissCurrentInterruptionOfKind:23];
}

id sub_1009560F0(id a1, GEOLocation *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  [(GEOLocation *)v3 clearSensitiveFields:0];

  return v3;
}

uint64_t sub_100956344()
{
  uint64_t v2 = 0;
  uint64_t v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = qword_101610108;
  uint64_t v5 = qword_101610108;
  if (!qword_101610108)
  {
    long long v6 = *(_OWORD *)off_101303338;
    long long v7 = *(_OWORD *)&off_101303348;
    v3[3] = _sl_dlopen();
    qword_101610108 = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_100956454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10095646C(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_101610108 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1009564FC()
{
  if (!sub_100956344())
  {
    uint64_t v0 = (void *)abort_report_np();
    free(v0);
  }
}

id sub_10095654C()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_101610110;
  uint64_t v7 = qword_101610110;
  if (!qword_101610110)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100956630;
    v3[3] = &unk_1012E9390;
    void v3[4] = &v4;
    sub_100956630((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100956618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_100956630(uint64_t a1)
{
  sub_1009564FC();
  Class result = objc_getClass("FCFImageEncoder");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_101610110 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)sub_1009566A0(v3);
  }
  return result;
}

id sub_1009566A0()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_101610118;
  uint64_t v7 = qword_101610118;
  if (!qword_101610118)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100956784;
    v3[3] = &unk_1012E9390;
    void v3[4] = &v4;
    sub_100956784((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_10095676C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

WatermarkView *sub_100956784(uint64_t a1)
{
  sub_1009564FC();
  Class result = (WatermarkView *)objc_getClass("WatermarkProperties");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_101610118 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (WatermarkView *)abort_report_np();
    return [(WatermarkView *)v3 initWithFrame:v5];
  }
  return result;
}

void sub_100956B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100956BBC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = sub_100576EC4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Received notification that the AppleConnect ID has changed", v3, 2u);
  }

  [WeakRetained _updateWatermark];
}

void sub_1009572B8(id a1, unint64_t a2)
{
  uint64_t v2 = +[GEOTileLoader modernLoader];
  [v2 clearAllCaches];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

void sub_10095821C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10095823C(uint64_t a1)
{
  uint64_t v2 = sub_100576544();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 376);
    int v7 = 138412290;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Stopped monitoring friendship stream for PlaceCardItem: %@", (uint8_t *)&v7, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  CGRect v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = (void *)*((void *)WeakRetained + 41);
    *((void *)WeakRetained + 41) = 0;
  }
}

id sub_100958634(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1009586B0;
  v2[3] = &unk_1012E5D08;
  v2[4] = *(void *)(a1 + 32);
  return +[UIView performWithoutAnimation:v2];
}

id sub_1009586B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateContent];
}

void sub_1009590C8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v27 = a3;
  *(unsigned char *)(*(void *)(a1 + 32) + 214) = 0;
  int v7 = *(void **)(*(void *)(a1 + 32) + 376);
  id v8 = a2;
  id v9 = [v7 mapItem];
  id v10 = [v9 _identifier];
  unsigned int v11 = [v8 isEqual:v10];

  if (a4
    || !v11
    || ([v27 mapItem],
        uint64_t v12 = objc_claimAutoreleasedReturnValue(),
        [v12 _geoMapItem],
        id v13 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v14 = [v13 hasExpiredComponents],
        v13,
        v12,
        (v14 & 1) != 0))
  {
    id v15 = [*(id *)(a1 + 32) placeCardItem];
    unsigned int v16 = [v15 isIntermediateMapItem];

    uint64_t v17 = *(id **)(a1 + 32);
    if (v16)
    {
      int v18 = [v17 placeCardItem];
      [v18 setIsIntermediateMapItem:0];

      id v19 = [*(id *)(*(void *)(a1 + 32) + 200) analyticsController];
      [v19 disableDeferLoggingUntilRefinementWithShouldInvokeReveal:0];

      [*(id *)(a1 + 32) placeCardItemMapItemDidChangeWithFailedRefinement:1];
    }
    else
    {
      int v20 = [v17[25] analyticsController];
      [v20 disableDeferLoggingUntilRefinementWithShouldInvokeReveal:1];
    }
  }
  else
  {
    uint64_t v21 = *(void *)(a1 + 32);
    id v22 = *(void **)(v21 + 344);
    long long v23 = [*(id *)(v21 + 376) mapItem];
    id v24 = [v27 mapItem];
    [v22 updateMapsSyncPlaceItemsMatchingMapItem:v23 withStorageFrom:v24];

    [*(id *)(a1 + 32) _carryOverTransitDisplayInformationFromCurrentItemToNewFetchedResult:v27];
    long long v25 = [[PlaceCardItem alloc] initWithSearchResult:v27];
    long long v26 = [*(id *)(*(void *)(a1 + 32) + 200) analyticsController];
    [v26 disableDeferLoggingUntilRefinementWithShouldInvokeReveal:0];

    [*(id *)(*(void *)(a1 + 32) + 360) setNeedsRefinement:0];
    [*(id *)(a1 + 32) setPlaceCardItem:v25];
  }
}

id sub_10095966C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(*(void *)(a1 + 32) + 336) addPlaceToLibraryWithCustomName:a2];
}

id sub_10095A230(uint64_t a1)
{
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  [v2 setBool:1 forKey:@"OfflineMapsPlaceCardDownloadTipsShownKey"];

  [*(id *)(a1 + 32) _clearOfflineDownloadTipIfNeeded];

  return +[GEOAPPortal captureUserAction:371 target:201 value:0];
}

void sub_10095A550(id a1)
{
  byte_101610120 = GEOConfigGetBOOL();
}

id sub_10095B858()
{
  if (qword_101610138 != -1) {
    dispatch_once(&qword_101610138, &stru_1013035A8);
  }
  uint64_t v0 = (void *)qword_101610130;

  return v0;
}

void sub_10095BCF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10095BD14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _routeFromCurrentSearchResult];
}

void sub_10095C344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id location)
{
  objc_destroyWeak(v42);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10095C3D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _addPlaceToCollection:*(void *)(a1 + 32) editCollection:0];
}

void sub_10095C42C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    if (+[LibraryUIUtilities isMyPlacesEnabled])
    {
      uint64_t v3 = [(CollectionSaveSession *)[CollectionAddOrRemoveSession alloc] initWithMapItem:*(void *)(a1 + 32)];
      SEL v4 = [v6 placeCardDelegate];
      [v4 placeCardViewController:v6 createNewCollectionWithSession:v3];
    }
    else
    {
      uint64_t v3 = +[CollectionHandler collection];
      CGRect v5 = +[NSBundle mainBundle];
      SEL v4 = [v5 localizedStringForKey:@"[Collections] New Guide" value:@"localized string not found" table:0];

      [(CollectionAddOrRemoveSession *)v3 updateTitle:v4];
      [v6 _addPlaceToCollection:v3 editCollection:1];
    }

    +[GEOAPPortal captureUserAction:2072 target:201 value:0];
    id WeakRetained = v6;
  }
}

void sub_10095C550(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained placeViewControllerDidSelectAddAPlace:WeakRetained[25] isQuickAction:1];
    id WeakRetained = v2;
  }
}

void sub_10095CCFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10095CD1C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v11 = a4;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = [WeakRetained[25] analyticsController];
    id v10 = [*(id *)(a1 + 32) analyticsModuleMetadata];
    [v9 infoCardAnalyticsDidSelectAction:a2 target:a3 eventValue:v11 moduleMetadata:v10 feedbackDelegateSelector:0 actionRichProviderId:0];
  }
}

void sub_10095D054(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_10095D070(uint64_t a1)
{
  uint64_t v2 = [(CollectionEditSession *)[CollectionAddOrRemoveSession alloc] initWithCollection:*(void *)(a1 + 32)];
  [(CollectionEditSession *)v2 addSelectedObject:*(void *)(a1 + 40)];
  uint64_t v3 = [(CollectionEditSession *)v2 collection];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10095D188;
  void v4[3] = &unk_101303418;
  char v8 = *(unsigned char *)(a1 + 64);
  id v5 = *(id *)(a1 + 48);
  objc_copyWeak(&v7, (id *)(a1 + 56));
  id v6 = *(id *)(a1 + 32);
  [(CollectionAddOrRemoveSession *)v2 applyToCollection:v3 completion:v4];

  objc_destroyWeak(&v7);
}

void sub_10095D174(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10095D188(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    SEL v4 = sub_1000B944C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error saving collection session: %@", (uint8_t *)&v7, 0xCu);
    }
  }
  else if (*(unsigned char *)(a1 + 56))
  {
    id v5 = *(void **)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [v5 placeCardViewController:WeakRetained editCollection:*(void *)(a1 + 40)];
  }
}

uint64_t sub_10095D274(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setName:a2];
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

uint64_t sub_10095D530(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 reportStatus])
  {
    uint64_t v4 = 0;
  }
  else
  {
    id v5 = [v3 contentData];
    id v6 = [v5 mapItemStorage];
    int v7 = v6;
    if (v6)
    {
      id v8 = [v6 _identifier];
      if (v8)
      {
        id v9 = [objc_alloc((Class)MKMapItemIdentifier) initWithGEOMapItemIdentifier:v8];
        id v10 = [*(id *)(a1 + 32) mapItem];
        id v11 = [v10 _identifier];
        uint64_t v12 = v11;
        if (v11 == v9) {
          uint64_t v4 = 1;
        }
        else {
          uint64_t v4 = (uint64_t)[v11 isEqual:v9];
        }
      }
      else
      {
        uint64_t v4 = 0;
      }
    }
    else
    {
      uint64_t v4 = 0;
    }
  }
  return v4;
}

void sub_10095E944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10095E960(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if ((a2 & 1) == 0)
    {
      id v5 = sub_100576544();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error adding shortcut", v9, 2u);
      }
    }
    id v6 = (void *)WeakRetained[32];
    WeakRetained[32] = 0;

    if (*(void *)(a1 + 32))
    {
      int v7 = +[MapsSyncStore sharedStore];
      uint64_t v10 = *(void *)(a1 + 32);
      id v8 = +[NSArray arrayWithObjects:&v10 count:1];
      [v7 saveWithObjects:v8 error:0];
    }
  }
}

void sub_10095EB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10095EBA8(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if ((a2 & 1) == 0)
    {
      uint64_t v4 = sub_100576544();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error removing shortcut", v6, 2u);
      }
    }
    id v5 = (void *)WeakRetained[32];
    WeakRetained[32] = 0;
  }
}

void sub_10095F1E8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 376);
  id v3 = a2;
  id v4 = [v2 rapPlace];
  [v3 setReportedPlace:v4];
}

id sub_10095F378(uint64_t a1)
{
  return [*(id *)(a1 + 32) stopAnimatingActivityIndicatorViewForRAP];
}

void sub_10095F5CC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 rapPlace];
  [v3 setReportedPlace:v4];
}

void sub_10095F708(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 rapPlace];
  [v3 setReportedPlace:v4];
}

void sub_10095F844(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 rapPlace];
  [v3 setReportedPlace:v4];
}

void sub_10095F9E8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 rapPlace];
  [v3 setReportedPlace:v4];
}

void sub_1009600D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  if (v4)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100960180;
    void v5[3] = &unk_1012E5F78;
    id v7 = v4;
    id v6 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
  }
}

uint64_t sub_100960180(uint64_t a1)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32) == 0);
}

void sub_100960358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10096037C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3
    || (+[MKLocationManager sharedLocationManager],
        id v4 = objc_claimAutoreleasedReturnValue(),
        unsigned int v5 = [v4 isAuthorizedForPreciseLocation],
        v4,
        !v5))
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id v6 = +[MKLocationManager sharedLocationManager];
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472;
    uint64_t v10 = sub_1009604D4;
    id v11 = &unk_101303490;
    objc_copyWeak(&v13, (id *)(a1 + 40));
    id v12 = *(id *)(a1 + 32);
    id v7 = [v6 singleLocationUpdateWithDesiredAccuracy:&v8 handler:kCLLocationAccuracyBest];

    [v7 start:v8, v9, v10, v11];
    objc_destroyWeak(&v13);
  }
}

void sub_1009604BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1009604D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id v7 = +[SearchResult currentLocationSearchResult];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_100960600;
    v9[3] = &unk_1012F53C8;
    objc_copyWeak(&v12, (id *)(a1 + 40));
    id v8 = v7;
    id v10 = v8;
    id v11 = *(id *)(a1 + 32);
    [v8 tryUpdatingCurrentLocationSearchResultWithCompletion:v9];

    objc_destroyWeak(&v12);
  }
}

void sub_1009605EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100960600(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    if (a2)
    {
      uint64_t v5 = [*(id *)(a1 + 32) mapItem];
      id v6 = (void *)v7[27];
      v7[27] = v5;
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    id WeakRetained = v7;
  }
}

void sub_100960980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10096099C(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained placeCardDelegate];
    id v7 = [v8 mapItem];
    [v6 placeCardViewController:v5 didSelectParent:v7];
  }
}

void sub_10096161C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 240));
  _Unwind_Resume(a1);
}

void sub_10096166C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained viewContact];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _instrumentHeaderButtonAction:6044 withFeedbackType:0];
}

void sub_1009616D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained openFindMy];
}

void sub_100961714(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained openRequestLocation];
}

void sub_100961754(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained placeCardDelegate];
  id v4 = objc_loadWeakRetained(v1);
  uint64_t v5 = [v4 placeCardItem];
  id v6 = [v5 searchResult];
  [v3 placeCardViewController:v4 editLocationOfMarkedLocation:v6];

  id v7 = objc_loadWeakRetained(v1);
  [v7 _instrumentHeaderButtonAction:6005 withFeedbackType:0];
}

void sub_100961824(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained placeCardDelegate];
  id v4 = objc_loadWeakRetained(v1);
  uint64_t v5 = [v4 placeCardItem];
  id v6 = [v5 mapItem];
  [v3 placeCardViewController:v4 enterFlyoverForMapItem:v6];

  id v7 = objc_loadWeakRetained(v1);
  [v7 _instrumentHeaderButtonAction:6004 withFeedbackType:127];
}

void sub_1009618F4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v5 = [WeakRetained placeCardDelegate];
  id v6 = objc_loadWeakRetained(v2);
  [v5 placeCardViewController:v6 createDroppedPin:v3];

  id v7 = objc_loadWeakRetained(v2);
  [v7 _instrumentHeaderButtonAction:1030 withFeedbackType:0];
}

void sub_1009619A4(uint64_t a1)
{
  uint64_t v2 = +[MKLocationManager sharedLocationManager];
  unsigned __int8 v3 = [v2 isAuthorizedForPreciseLocation];

  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    id v8 = [*(id *)(a1 + 32) placeCardItem];
    uint64_t v5 = [v8 searchResult];
    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    id v6 = +[MKMapService sharedService];
    [v6 captureUserAction:56 onTarget:691 eventValue:0];

    id v7 = +[MKLocationManager sharedLocationManager];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_100961B00;
    v9[3] = &unk_1012E76C0;
    id v10 = *(id *)(a1 + 40);
    [v7 requestTemporaryPreciseLocationAuthorizationWithPurposeKey:@"AppInfoTemporaryPreciseLocationAuthorizationForMarkLocationPurposeKey" completion:v9];
  }
}

void sub_100961B00(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v13 = v5;
    uint64_t v14 = v4;
    uint64_t v15 = v2;
    uint64_t v16 = v3;
    id v7 = +[MKLocationManager sharedLocationManager];
    unsigned int v8 = [v7 isAuthorizedForPreciseLocation];

    if (v8)
    {
      uint64_t v9 = +[MKLocationManager sharedLocationManager];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_100961C04;
      v11[3] = &unk_1012F1628;
      id v12 = *(id *)(a1 + 32);
      id v10 = [v9 singleLocationUpdateWithDesiredAccuracy:v11 handler:kCLLocationAccuracyBest];

      [v10 start];
    }
  }
}

void sub_100961C04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[SearchResult currentLocationSearchResult];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100961C68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    +[GEOAPPortal captureUserAction:2063 target:253 value:0];
    [WeakRetained placeViewControllerDidSelectRefineLocation:WeakRetained[25]];
  }
}

void sub_100961CD8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    uint64_t v3 = [WeakRetained[25] analyticsController];
    uint64_t v4 = [*(id *)(a1 + 32) URLString];
    [v3 instrumentAction:50 target:201 eventValue:v4 moduleType:2 feedbackType:0];

    uint64_t v5 = [*(id *)(a1 + 32) URLString];
    [v3 instrumentAction:6105 target:670 eventValue:v5 moduleType:2 feedbackType:0];

    [v6 presentQuickLink:*(void *)(a1 + 32)];
    id WeakRetained = v6;
  }
}

void sub_1009620FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL sub_100962118(id a1, CNLabeledValue *a2, NSDictionary *a3)
{
  uint64_t v3 = [(CNLabeledValue *)a2 identifier];
  uint64_t v4 = +[CNContact _mapkit_sharedLocationContactIdentifer];
  BOOL v5 = v3 != v4;

  return v5;
}

void sub_100962168(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _chromeViewControllerPresent:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_1009623BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009623F8(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    if (WeakRetained)
    {
      uint64_t v4 = sub_100576544();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        uint64_t v5 = *(void *)(a1 + 32);
        int v6 = 138412290;
        uint64_t v7 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Opened findmy handle for identifier: %@", (uint8_t *)&v6, 0xCu);
      }
    }
  }
}

void sub_1009626B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009626F0(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    if (WeakRetained)
    {
      uint64_t v4 = sub_100576544();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        uint64_t v5 = [*(id *)(a1 + 32) placeCardItem];
        int v6 = [v5 searchResult];
        uint64_t v7 = [v6 autocompletePerson];
        unsigned int v8 = [v7 title];
        int v9 = 138412290;
        id v10 = v8;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Opened message app for handle for identifier: %@", (uint8_t *)&v9, 0xCu);
      }
    }
  }
}

void sub_10096297C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) placeCardDelegate];
  [v2 placeCardViewControllerRemovedObservingHandle:*(void *)(a1 + 32)];
}

void sub_100962B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100962B30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained containeeDelegate];
    [v2 placeViewControllerViewContactsClosed];

    id WeakRetained = v3;
  }
}

void sub_100962F34(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    int v6 = sub_100576544();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v13 = 138412290;
      uint64_t v14 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "AppClip of url %@ is available", (uint8_t *)&v13, 0xCu);
    }
  }
  else
  {
    unsigned int v8 = sub_100576544();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
    if (v5)
    {
      if (v9)
      {
        uint64_t v10 = *(void *)(a1 + 32);
        id v11 = [v5 description];
        int v13 = 138412546;
        uint64_t v14 = v10;
        __int16 v15 = 2112;
        uint64_t v16 = v11;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "AppClip request for URL: %@ failed with error: %@", (uint8_t *)&v13, 0x16u);
      }
    }
    else if (v9)
    {
      uint64_t v12 = *(void *)(a1 + 32);
      int v13 = 138412290;
      uint64_t v14 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "AppClip request for URL: %@ failed", (uint8_t *)&v13, 0xCu);
    }

    int v6 = [*(id *)(a1 + 40) placeCardDelegate];
    [v6 placeCardViewController:*(void *)(a1 + 40) openURL:*(void *)(a1 + 32)];
  }
}

id sub_1009637F8(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100963FF4(uint64_t a1)
{
  id v1 = [objc_alloc((Class)UIDragPreview) initWithView:*(void *)(a1 + 32)];

  return v1;
}

void sub_1009640AC(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    uint64_t v2 = *(void *)(a1 + 32);
    if (!*(void *)(v2 + 248))
    {
      id v3 = *(void **)(v2 + 240);
      *(void *)(v2 + 240) = 0;
    }
  }
}

void sub_100964CF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) topMostPresentedViewController];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100965668(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PlaceCardViewController");
  id v2 = (void *)qword_101610130;
  qword_101610130 = (uint64_t)v1;
}

UIFont *__cdecl sub_1009656AC(id a1)
{
  os_log_t v1 = +[MKFontManager sharedManager];
  id v2 = [v1 boldBodyFont];
  id v3 = +[UIFont _maps_cappedFont:v2 withMaxPoint:24.0];

  return (UIFont *)v3;
}

void sub_100966404(id a1)
{
  os_log_t v1 = objc_alloc_init(RoutingAppsManager);
  id v2 = (void *)qword_101610140;
  qword_101610140 = (uint64_t)v1;
}

void sub_100966838(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSMutableURLRequest);
  id v3 = +[NSURL URLWithString:*(void *)(a1 + 32)];
  id v4 = [v2 initWithURL:v3 cachePolicy:0 timeoutInterval:5.0];

  [v4 setValue:*(void *)(a1 + 40) forHTTPHeaderField:@"If-None-Match"];
  id v5 = +[NSURLSession sharedSession];
  uint64_t v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  BOOL v9 = sub_10096696C;
  uint64_t v10 = &unk_101303038;
  id v11 = *(id *)(a1 + 48);
  id v12 = *(id *)(a1 + 56);
  int v6 = [v5 dataTaskWithRequest:v4 completionHandler:&v7];

  [v6 resume:v7, v8, v9, v10];
}

void sub_10096696C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100966A7C;
  block[3] = &unk_1012E98D8;
  id v12 = a3;
  id v13 = a4;
  id v14 = v7;
  id v15 = *(id *)(a1 + 32);
  id v16 = *(id *)(a1 + 40);
  id v8 = v7;
  id v9 = v13;
  id v10 = v12;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100966A7C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  if ([v2 statusCode] == (id)200)
  {
    if (!*(void *)(a1 + 48))
    {
      sub_100B5AA24(@"Error downloading coverage file: %@.", v3, v4, v5, v6, v7, v8, v9, *(void *)(a1 + 40));
      goto LABEL_24;
    }
    id v10 = +[NSFileManager defaultManager];
    id v11 = [*(id *)(a1 + 56) coverageFilePath];
    id v12 = [v11 stringByAppendingPathExtension:@"download"];
    if ([v10 fileExistsAtPath:v12])
    {
      id v72 = 0;
      unsigned __int8 v13 = [v10 removeItemAtPath:v12 error:&v72];
      id v21 = v72;
      if ((v13 & 1) == 0)
      {
        sub_100B5AA24(@"Error removing old coverage download file at path: %@. Error: %@.", v14, v15, v16, v17, v18, v19, v20, (uint64_t)v12);
LABEL_23:

        goto LABEL_24;
      }
    }
    else
    {
      id v21 = 0;
    }
    uint64_t v29 = v21;
    id v30 = *(void **)(a1 + 48);
    id v71 = v21;
    unsigned __int8 v31 = [v30 writeToFile:v12 options:0 error:&v71];
    id v21 = v71;

    if ((v31 & 1) == 0)
    {
      sub_100B5AA24(@"Error saving updated coverage file to download path: %@. Error: %@.", v32, v33, v34, v35, v36, v37, v38, (uint64_t)v12);
      goto LABEL_23;
    }
    if ([v10 fileExistsAtPath:v11])
    {
      id v70 = v21;
      unsigned __int8 v39 = [v10 removeItemAtPath:v11 error:&v70];
      id v40 = v70;

      if ((v39 & 1) == 0)
      {
        sub_100B5AA24(@"Error removing old coverage file at path %@. Error: %@.", v41, v42, v43, v44, v45, v46, v47, (uint64_t)v11);
LABEL_22:
        id v21 = v40;
        goto LABEL_23;
      }
      id v21 = v40;
    }
    id v69 = v21;
    unsigned __int8 v48 = [v10 moveItemAtPath:v12 toPath:v11 error:&v69];
    id v40 = v69;

    if (v48)
    {
      id v56 = [v2 allHeaderFields];
      __int16 v57 = [v56 objectForKeyedSubscript:@"Etag"];

      id v58 = *(void **)(a1 + 64);
      id v68 = v40;
      unsigned __int8 v59 = [v58 setETag:v57 forAssetType:SSDownloadAssetTypeTransitMapsData error:&v68];
      id v21 = v68;

      if ((v59 & 1) == 0) {
        sub_100B5AA24(@"Failed to save eTag %@ to library item %@. Error: %@.", v60, v61, v62, v63, v64, v65, v66, (uint64_t)v57);
      }

      goto LABEL_23;
    }
    sub_100B5AA24(@"Error moving old coverage file at path %@ to %@. Error: %@.", v49, v50, v51, v52, v53, v54, v55, (uint64_t)v11);
    goto LABEL_22;
  }
  id v67 = [v2 statusCode];
  sub_100B5AA24(@"Non-200 response (%d) for coverage file: %@.", v22, v23, v24, v25, v26, v27, v28, (uint64_t)v67);
LABEL_24:
}

void sub_100966DA0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _installedApps];
  if ([v2 count])
  {
    id v3 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:[v2 count]];
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v4 = v2;
    id v5 = [v4 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v19;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v19 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          id v10 = [v9 bundleIdentifier];
          [v3 setObject:v9 forKeyedSubscript:v10];
        }
        id v6 = [v4 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v6);
    }

    id v11 = [*(id *)(a1 + 32) _appIdsStringWithApplicationProxies:v4];
    id v12 = objc_alloc_init((Class)SSSoftwareLibrary);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    id v15[2] = sub_100966F9C;
    v15[3] = &unk_1012E7B20;
    uint64_t v13 = *(void *)(a1 + 32);
    id v16 = v3;
    uint64_t v17 = v13;
    id v14 = v3;
    [v12 getLibraryItemForBundleIdentifiers:v11 completionBlock:v15];
  }
}

void sub_100966F9C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a3)
  {
    uint64_t v7 = [a3 description];
    NSLog(@"Error loading app metadata: %@.", v7);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v8 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v17;
      uint64_t v11 = SSSoftwareLibraryItemBundleIdentifier;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v17 != v10) {
            objc_enumerationMutation(v6);
          }
          uint64_t v13 = *(void **)(*((void *)&v16 + 1) + 8 * i);
          id v14 = [v13 valueForProperty:v11];
          uint64_t v15 = [*(id *)(a1 + 32) valueForKey:v14];
          if (v15) {
            [*(id *)(a1 + 40) _updateCoverageFileForAppProxy:v15 libraryItem:v13];
          }
          else {
            NSLog(@"Warning: Unrecognized bundleId for routing application: %@.", v14);
          }
        }
        id v9 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v9);
    }
  }
}

void sub_100967210(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _installedApps];
  id v2 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v3 = [v2 BOOLForKey:@"__internal__DisableTransitAppSieving"];

  id v4 = v1;
  if ((v3 & 1) == 0)
  {
    id v26 = objc_alloc_init((Class)NSMutableArray);
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    id v23 = v1;
    id obj = v1;
    id v5 = [obj countByEnumeratingWithState:&v32 objects:v36 count:16];
    if (v5)
    {
      id v6 = v5;
      id v7 = 0;
      uint64_t v8 = *(void *)v33;
      do
      {
        id v9 = 0;
        uint64_t v10 = v7;
        do
        {
          if (*(void *)v33 != v8) {
            objc_enumerationMutation(obj);
          }
          uint64_t v11 = *(void **)(*((void *)&v32 + 1) + 8 * (void)v9);
          id v12 = [v11 coverageFilePath];
          uint64_t v13 = +[NSFileManager defaultManager];
          unsigned __int8 v14 = [v13 isReadableFileAtPath:v12];

          if (v14)
          {
            id v15 = objc_alloc((Class)_MKRoutingAppCoverageRegions);
            long long v16 = +[NSURL fileURLWithPath:v12];
            id v31 = v10;
            id v17 = [v15 initWithContentsOfURL:v16 error:&v31];
            id v7 = v31;

            if (v17)
            {
              if (objc_msgSend(v17, "containsCoordinate:", *(double *)(a1 + 48), *(double *)(a1 + 56))
                && objc_msgSend(v17, "containsCoordinate:", *(double *)(a1 + 64), *(double *)(a1 + 72)))
              {
                [v26 addObject:v11];
              }
            }
            else
            {
              NSLog(@"Error parsing GeoJSON coverage file: %@.", v7);
            }

            uint64_t v10 = v7;
          }
          else
          {
            [v26 addObject:v11];
            NSLog(@"No readable coverage file at path: %@.", v12);
            id v7 = v10;
          }

          id v9 = (char *)v9 + 1;
        }
        while (v6 != v9);
        id v6 = [obj countByEnumeratingWithState:&v32 objects:v36 count:16];
      }
      while (v6);
    }
    else
    {
      id v7 = 0;
    }

    id v4 = v26;
    id v1 = v23;
  }
  long long v18 = [*(id *)(a1 + 32) routingAppLaunchRecord];
  long long v19 = [v18 rankedRoutingAppProxiesWithProxies:v4];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100967558;
  block[3] = &unk_1012EF330;
  id v20 = *(id *)(a1 + 40);
  id v29 = v1;
  id v30 = v20;
  id v28 = v19;
  id v21 = v1;
  id v22 = v19;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100967558(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100967F2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_100576E2C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v16 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "TrafficIncidentAuthenticationManager: _generateKey error %@", buf, 0xCu);
    }

    uint64_t v8 = *(void *)(a1 + 40);
    if (v8) {
      (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
    }
  }
  else
  {
    id v9 = objc_alloc((Class)NSArray);
    uint64_t v10 = +[NSNumber numberWithBool:0];
    id v11 = [v9 initWithObjects:v5, v10, 0];

    id v12 = [objc_alloc((Class)NSArray) initWithObjects:@"TrafficIncidentAuthenicationKeyId", @"TrafficIncidentAuthenicationAttested", 0];
    uint64_t v13 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v12];
    unsigned __int8 v14 = +[NSUserDefaults standardUserDefaults];
    [v14 setObject:v13 forKey:@"TrafficIncidentAuthenicationInfo"];

    [*(id *)(a1 + 32) _refreshStoredUUID];
    [*(id *)(a1 + 32) _attestKeyId:v5 completionHandler:*(void *)(a1 + 40)];
  }
}

void sub_100968230(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v6)
  {
    if ([v6 code] != (id)4)
    {
      uint64_t v8 = +[NSUserDefaults standardUserDefaults];
      [v8 setObject:0 forKey:@"TrafficIncidentAuthenicationInfo"];
    }
    id v9 = sub_100576E2C();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v27 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "TrafficIncidentAuthenticationManager: _attestKeyId error %@", buf, 0xCu);
    }

    uint64_t v10 = *(void *)(a1 + 48);
    if (v10) {
      (*(void (**)(uint64_t, void))(v10 + 16))(v10, 0);
    }
  }
  else
  {
    id v11 = objc_alloc((Class)NSArray);
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = +[NSNumber numberWithBool:1];
    id v14 = [v11 initWithObjects:v12, v13, 0];

    id v15 = [objc_alloc((Class)NSArray) initWithObjects:@"TrafficIncidentAuthenicationKeyId", @"TrafficIncidentAuthenicationAttested", 0];
    id v16 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v15];
    id v17 = +[NSUserDefaults standardUserDefaults];
    [v17 setObject:v16 forKey:*(void *)(a1 + 32)];

    id v18 = objc_alloc_init((Class)GEORPFeedbackUserInfo);
    id v19 = objc_alloc_init((Class)GEORPAppAttestInfo);
    [v18 setAnonUserInfo:v19];

    id v20 = [v18 anonUserInfo];
    [v20 setAttestation:v5];

    id v21 = [*(id *)(a1 + 40) _storedUUID];
    id v22 = [v18 anonUserInfo];
    [v22 setAnonymousUserId:v21];

    id v23 = [*(id *)(a1 + 40) _keyId];
    uint64_t v24 = [v18 anonUserInfo];
    [v24 setKeyId:v23];

    uint64_t v25 = *(void *)(a1 + 48);
    if (v25) {
      (*(void (**)(uint64_t, id))(v25 + 16))(v25, v18);
    }
  }
}

void sub_100968614(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v6)
  {
    if ([v6 code] != (id)4)
    {
      uint64_t v8 = +[NSUserDefaults standardUserDefaults];
      [v8 setObject:0 forKey:@"TrafficIncidentAuthenicationInfo"];
    }
    id v9 = sub_100576E2C();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v19 = 138412290;
      id v20 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "TrafficIncidentAuthenticationManager: _generateAssertionKeyId error %@", (uint8_t *)&v19, 0xCu);
    }

    uint64_t v10 = *(void *)(a1 + 40);
    if (v10) {
      (*(void (**)(uint64_t, void))(v10 + 16))(v10, 0);
    }
  }
  else
  {
    id v11 = objc_alloc_init((Class)GEORPFeedbackUserInfo);
    id v12 = objc_alloc_init((Class)GEORPAppAttestInfo);
    [v11 setAnonUserInfo:v12];

    uint64_t v13 = [v11 anonUserInfo];
    [v13 setAssertion:v5];

    id v14 = [*(id *)(a1 + 32) _storedUUID];
    id v15 = [v11 anonUserInfo];
    [v15 setAnonymousUserId:v14];

    id v16 = [*(id *)(a1 + 32) _keyId];
    id v17 = [v11 anonUserInfo];
    [v17 setKeyId:v16];

    uint64_t v18 = *(void *)(a1 + 40);
    if (v18) {
      (*(void (**)(uint64_t, id))(v18 + 16))(v18, v11);
    }
  }
}

void sub_1009688FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)GEORPFeedbackUserInfo);
  id v5 = [v3 anonUserInfo];

  [v4 setRolloverInfo:v5];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1009689E8;
  void v8[3] = &unk_101303708;
  id v9 = v4;
  id v6 = *(void **)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v7 = v4;
  [v6 _generateKey:v8];
}

uint64_t sub_1009689E8(uint64_t a1, void *a2)
{
  id v3 = [a2 anonUserInfo];
  [*(id *)(a1 + 32) setAnonUserInfo:v3];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

void sub_1009699FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100969A20()
{
  if (qword_101610178 != -1) {
    dispatch_once(&qword_101610178, &stru_101303790);
  }
  uint64_t v0 = (void *)qword_101610170;

  return v0;
}

void sub_100969A74(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (!a5)
  {
    uint64_t v13 = [v11 publisher];
    if ([v13 isSuppressed])
    {
    }
    else
    {
      id v14 = [v11 publisher];
      unsigned int v15 = [v14 isBlocked];

      if (!v15)
      {
        id v20 = sub_100969A20();
        id v21 = v20;
        os_signpost_id_t v22 = *(void *)(a1 + 56);
        if (v22 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v20))
        {
          *(_WORD *)long long v32 = 0;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, OS_SIGNPOST_INTERVAL_END, v22, "FetchingPublisherView", "", v32, 2u);
        }

        if (v9
          || ([WeakRetained filters],
              id v23 = objc_claimAutoreleasedReturnValue(),
              id v24 = [v23 count],
              v23,
              v24))
        {
          uint64_t v25 = [WeakRetained filters];
          id v26 = [v25 count];

          if (v9 && !v26)
          {
            uint64_t v27 = [v9 resultFilters];
            [WeakRetained setFilters:v27];
          }
          if ([v10 count])
          {
            [WeakRetained setCollectionResults:v10];
            [WeakRetained setPublisherResult:v11];
            id v28 = [v9 collectionIdentifiers];
            [WeakRetained setCollectionIds:v28];

            id v29 = [WeakRetained stateHandler];
            ((void (**)(void, id, uint64_t))v29)[2](v29, [*(id *)(a1 + 32) state], 2);

            [WeakRetained setState:2];
            (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
            goto LABEL_9;
          }
          id v30 = [WeakRetained stateHandler];
          ((void (**)(void, id, uint64_t))v30)[2](v30, [WeakRetained state], 3);
        }
        else
        {
          id v31 = [WeakRetained stateHandler];
          ((void (**)(void, id, uint64_t))v31)[2](v31, [*(id *)(a1 + 32) state], 3);
        }
        [WeakRetained setState:3];
        goto LABEL_9;
      }
    }
  }
  id v16 = [WeakRetained stateHandler];
  ((void (**)(void, id, uint64_t))v16)[2](v16, [WeakRetained state], 3);

  [WeakRetained setState:3];
  id v17 = sub_100969A20();
  uint64_t v18 = v17;
  os_signpost_id_t v19 = *(void *)(a1 + 56);
  if (v19 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, OS_SIGNPOST_INTERVAL_END, v19, "FetchingPublisherView", "", buf, 2u);
  }

LABEL_9:
}

void sub_10096A05C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10096A080(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v6)
    {
      [WeakRetained setPlaceCollections:0];
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      id v9 = sub_100969A20();
      id v10 = v9;
      os_signpost_id_t v11 = *(void *)(a1 + 48);
      if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
      {
        *(_WORD *)buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v11, "FetchingPublisherViewBatch", "", buf, 2u);
      }
    }
    else
    {
      id v12 = sub_100969A20();
      uint64_t v13 = v12;
      os_signpost_id_t v14 = *(void *)(a1 + 48);
      if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
      {
        *(_WORD *)unsigned int v15 = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_INTERVAL_END, v14, "FetchingPublisherViewBatch", "", v15, 2u);
      }

      [v8 setPlaceCollections:v5];
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

void sub_10096A36C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PublisherAPIController");
  uint64_t v2 = (void *)qword_101610170;
  qword_101610170 = (uint64_t)v1;
}

void sub_10096A810(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_10096A840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface Maps broker connection invalidated.", a3, a4, a5, a6, a7, a8, v11);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v10 = (void *)WeakRetained[2];
    WeakRetained[2] = 0;
    id v12 = WeakRetained;

    id WeakRetained = v12;
  }
}

void sub_10096A8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface Maps broker connection interrupted.", a3, a4, a5, a6, a7, a8, v12);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v13 = WeakRetained;
    id v10 = [WeakRetained[2] remoteObjectProxy];
    uint64_t v11 = [v13[3] endpoint];
    [v10 listenerEndpointDidChange:v11 forIdentifier:v13[4]];

    id WeakRetained = v13;
  }
}

void sub_10096AB84(id a1)
{
  v4[0] = FBSOpenApplicationOptionKeyActivateSuspended;
  v4[1] = FBSOpenApplicationOptionKeyPayloadURL;
  v5[0] = &__kCFBooleanTrue;
  os_log_t v1 = +[NSURL URLWithString:@"x-maps-reopen://?backgroundnavigation"];
  v5[1] = v1;
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:2];
  uint64_t v3 = (void *)qword_101610180;
  qword_101610180 = v2;
}

void sub_10096AC4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v10 = a3;
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface performWithMapsRunning openApplication completed, error: %@", v4, v5, v6, v7, v8, v9, (uint64_t)v10);
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10096AE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_10096AEB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = a1[4];
  id v10 = *(void **)(v9 + 48);
  if (v10)
  {
    uint64_t v11 = a1[5];
  }
  else
  {
    uint64_t v12 = *(void *)(v9 + 56);
    if (!v12)
    {
      dispatch_group_t v13 = dispatch_group_create();
      uint64_t v14 = a1[4];
      uint64_t v15 = *(void **)(v14 + 56);
      *(void *)(v14 + 56) = v13;

      sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface Created connectionGroup to wait for Maps: %@", v16, v17, v18, v19, v20, v21, *(void *)(a1[4] + 56));
      objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), *(id *)(a1[4] + 56));
      dispatch_group_enter(*(dispatch_group_t *)(a1[4] + 56));
      dispatch_time_t v22 = dispatch_time(0, 20000000000);
      uint64_t v23 = a1[4];
      id v24 = *(NSObject **)(v23 + 40);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10096AFEC;
      block[3] = &unk_1012E5D08;
      void block[4] = v23;
      dispatch_after(v22, v24, block);
      return;
    }
    sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface Using existing dispatchGroup: %@", a3, a4, a5, a6, a7, a8, v12);
    id v10 = *(void **)(a1[4] + 56);
    uint64_t v11 = a1[6];
  }
  objc_storeStrong((id *)(*(void *)(v11 + 8) + 40), v10);
}

void sub_10096AFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = *(NSObject **)(*(void *)(a1 + 32) + 56);
  if (v10)
  {
    dispatch_group_leave(v10);
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void **)(v11 + 56);
    *(void *)(v11 + 56) = 0;

    sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface Timed out waiting for a connection to be established", v13, v14, v15, v16, v17, v18, a9);
  }
}

void sub_10096B054(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(id *)(*(void *)(a1 + 32) + 48));
  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    uint64_t v2 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Used established 'connection' but it was nil!", v3, 2u);
    }
  }
}

void sub_10096B2E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_10096B304(uint64_t a1)
{
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained[5];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10096B390;
    block[3] = &unk_1012E5D08;
    void block[4] = v2;
    dispatch_async(v3, block);
  }
}

void sub_10096B390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface Invalidating connection: %@", a3, a4, a5, a6, a7, a8, *(void *)(*(void *)(a1 + 32) + 48));
  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = *(void **)(v9 + 48);
  *(void *)(v9 + 4_Block_object_dispose(&STACK[0x7A0], 8) = 0;
}

void sub_10096B3F0(id a1)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface Connection interrupted.", v1, v2, v3, v4, v5, v6, v7);
}

void sub_10096B400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsIPCInterface Received new connection: %@", a3, a4, a5, a6, a7, a8, *(void *)(a1 + 32));
  uint64_t v9 = *(void **)(a1 + 32);
  id v10 = (id *)(*(void *)(a1 + 40) + 48);

  objc_storeStrong(v10, v9);
}

void sub_10096B458(uint64_t a1)
{
  uint64_t v2 = *(NSObject **)(*(void *)(a1 + 32) + 56);
  if (v2)
  {
    dispatch_group_leave(v2);
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(v3 + 56);
    *(void *)(v3 + 56) = 0;
  }
}

void sub_10096BE00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateBackgroundView];
}

id sub_10096C14C(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v3 = +[NSBundle mainBundle];
  uint64_t v4 = [v3 localizedStringForKey:@"[Library] Edit Details" value:@"localized string not found" table:0];
  uint64_t v5 = +[UIImage systemImageNamed:@"info.circle"];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_10096C3C8;
  v21[3] = &unk_1012F47A0;
  uint64_t v6 = *(void **)(a1 + 40);
  void v21[4] = *(void *)(a1 + 32);
  id v22 = v6;
  uint64_t v7 = +[UIAction actionWithTitle:v4 image:v5 identifier:@"_editPinAction" handler:v21];

  uint64_t v8 = +[NSBundle mainBundle];
  uint64_t v9 = [v8 localizedStringForKey:@"[Library] Unpin" value:@"localized string not found" table:0];
  id v10 = +[UIImage systemImageNamed:@"pin.slash"];
  uint64_t v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472;
  uint64_t v17 = sub_10096C41C;
  uint64_t v18 = &unk_1012F47A0;
  uint64_t v11 = *(void **)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 32);
  id v20 = v11;
  uint64_t v12 = +[UIAction actionWithTitle:v9 image:v10 identifier:@"_removePinAction" handler:&v15];

  [v12 setAttributes:2, v15, v16, v17, v18, v19];
  if ([*(id *)(a1 + 40) type] != (id)6) {
    [v2 addObject:v7];
  }
  [v2 addObject:v12];
  uint64_t v13 = +[UIMenu menuWithChildren:v2];

  return v13;
}

void sub_10096C3C8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 shortcutsRowCellProvider:*(void *)(a1 + 32) editShortcut:*(void *)(a1 + 40)];
}

void sub_10096C41C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 shortcutsRowCellProvider:*(void *)(a1 + 32) removeShortcut:*(void *)(a1 + 40)];
}

id sub_10096C8CC()
{
  if (qword_101610198 != -1) {
    dispatch_once(&qword_101610198, &stru_101303870);
  }
  uint64_t v0 = (void *)qword_101610190;

  return v0;
}

id sub_10096CCBC(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) configureNavigationDisplay:a2];
}

void sub_10096D0D0(uint64_t a1)
{
  id v2 = +[MNNavigationService sharedService];
  [v2 registerObserver:*(void *)(a1 + 32)];
}

void sub_10096D128(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) chromeViewController];
  [v2 setNeedsUpdateMapInsets];

  uint64_t v3 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v4 = [v3 mapView];
  [v4 _setApplicationState:2];

  uint64_t v5 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v6 = [v5 mapView];
  [v6 _setDisplayedSearchResultsType:0];

  uint64_t v7 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v8 = [v7 userLocationView];
  BOOL v9 = 1;
  [v8 setMode:1 animated:*(unsigned __int8 *)(a1 + 40)];

  [*(id *)(a1 + 32) _setupGuidanceDisplays:*(unsigned __int8 *)(a1 + 40)];
  [*(id *)(a1 + 32) refreshCameraTypeAnimated:*(unsigned __int8 *)(a1 + 40)];
  id v12 = +[MNNavigationService sharedService];
  id v10 = [v12 route];
  [*(id *)(a1 + 32) setCurrentRoute:v10];

  if ([v12 navigationState] != 6) {
    BOOL v9 = [v12 navigationState] == 7;
  }
  [*(id *)(a1 + 32) setHasArrived:v9];
  uint64_t v11 = [v12 displayEtaInfo];

  if (v11) {
    [*(id *)(a1 + 32) _updateDisplayETA];
  }
}

void sub_10096D3D0(uint64_t a1)
{
  id v2 = +[MNNavigationService sharedService];
  [v2 unregisterObserver:*(void *)(a1 + 32)];

  id v4 = [*(id *)(a1 + 32) guidanceObserver];
  uint64_t v3 = [*(id *)(a1 + 32) guidanceCardController];
  [v4 removeOutlet:v3];
}

void sub_10096DAF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10096EFBC(uint64_t a1)
{
  id v11 = (id)objc_opt_new();
  id v2 = [*(id *)(a1 + 32) desiredCards];
  uint64_t v3 = (objc_class *)objc_opt_class();
  id v4 = NSStringFromClass(v3);
  uint64_t v5 = +[NSString stringWithFormat:@"%@.desiredCards.txt", v4];

  id v6 = v2;
  uint64_t v7 = v6;
  if (v6)
  {
    if ([v6 count])
    {
      uint64_t v8 = [v7 componentsJoinedByString:@", "];
      BOOL v9 = +[NSString stringWithFormat:@"<%p> [%@]", v7, v8];
    }
    else
    {
      BOOL v9 = +[NSString stringWithFormat:@"<%p> (empty)", v7];
    }
  }
  else
  {
    BOOL v9 = @"<nil>";
  }

  id v10 = +[MapsRadarTextAttachment attachmentWithFileName:v5 text:v9];

  [v11 addObject:v10];
  [*(id *)(a1 + 40) addAttachments:v11];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_10096F22C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarHybridInstrumentClusterNavigationModeController");
  id v2 = (void *)qword_101610190;
  qword_101610190 = (uint64_t)v1;
}

_UNKNOWN **sub_10096FC5C()
{
  return &off_1013AE310;
}

_UNKNOWN **sub_10096FC68()
{
  return &off_1013AE328;
}

id sub_10096FC74(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FC80(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FC8C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FC98(id a1)
{
  return &off_1013A9610;
}

id sub_10096FCA4(id a1)
{
  return &off_1013A9628;
}

id sub_10096FCB0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FCBC(id a1)
{
  return &off_1013AF1F8;
}

id sub_10096FCC8(id a1)
{
  return &off_1013AF208;
}

id sub_10096FCD4(id a1)
{
  return &off_1013AF218;
}

id sub_10096FCE0(id a1)
{
  return &off_1013AF228;
}

id sub_10096FCEC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FCF8(id a1)
{
  return &off_1013A9640;
}

id sub_10096FD04(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FD10(id a1)
{
  return &off_1013A9658;
}

id sub_10096FD1C(id a1)
{
  return &off_1013A9670;
}

id sub_10096FD28(id a1)
{
  return &off_1013A9688;
}

id sub_10096FD34(id a1)
{
  return &off_1013AF258;
}

id sub_10096FD40(id a1)
{
  return &off_1013AF268;
}

id sub_10096FD4C(id a1)
{
  return &off_1013AF278;
}

id sub_10096FD58(id a1)
{
  return &off_1013AF288;
}

id sub_10096FD64(id a1)
{
  return &off_1013AF298;
}

id sub_10096FD70(id a1)
{
  return &off_1013AF238;
}

id sub_10096FD7C(id a1)
{
  return &off_1013AF2A8;
}

id sub_10096FD88(id a1)
{
  return &off_1013AF298;
}

id sub_10096FD94(id a1)
{
  return &off_1013AF2C8;
}

id sub_10096FDA0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FDAC(id a1)
{
  return &off_1013A96B8;
}

id sub_10096FDB8(id a1)
{
  return &off_1013AF258;
}

id sub_10096FDC4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FDD0(id a1)
{
  return 0;
}

id sub_10096FDD8(id a1)
{
  return &off_1013AF2D8;
}

id sub_10096FDE4(id a1)
{
  return &off_1013A96D0;
}

id sub_10096FDF0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FDFC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FE08(id a1)
{
  return &off_1013A9628;
}

id sub_10096FE14(id a1)
{
  return &off_1013A96E8;
}

id sub_10096FE20(id a1)
{
  return &off_1013A9700;
}

id sub_10096FE2C(id a1)
{
  return &off_1013AF288;
}

id sub_10096FE38(id a1)
{
  return &off_1013AF2E8;
}

id sub_10096FE44(id a1)
{
  return &off_1013A9718;
}

id sub_10096FE50(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FE5C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FE68(id a1)
{
  return &off_1013A9640;
}

id sub_10096FE74(id a1)
{
  return &off_1013A9628;
}

id sub_10096FE80(id a1)
{
  return &off_1013A9730;
}

id sub_10096FE8C(id a1)
{
  return &off_1013A9760;
}

id sub_10096FE98(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FEA4(id a1)
{
  return &off_1013A9778;
}

id sub_10096FEB0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FEBC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FEC8(id a1)
{
  return &off_1013A9790;
}

id sub_10096FED4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FEE0(id a1)
{
  return &off_1013AF2E8;
}

id sub_10096FEEC(id a1)
{
  return &off_1013AF258;
}

id sub_10096FEF8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF04(id a1)
{
  return @"inbox.appleid.apple.com";
}

id sub_10096FF10(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF1C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF28(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FF34(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10096FF40(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF4C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF58(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF64(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF70(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF7C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF88(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FF94(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FFA0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FFAC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FFB8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FFC4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FFD0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FFDC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FFE8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10096FFF4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970000(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097000C(id a1)
{
  return &off_1013A9808;
}

id sub_100970018(id a1)
{
  return &off_1013A9778;
}

id sub_100970024(id a1)
{
  return &off_1013A9730;
}

id sub_100970030(id a1)
{
  return &off_1013A9808;
}

id sub_10097003C(id a1)
{
  return &off_1013A9838;
}

id sub_100970048(id a1)
{
  return &off_1013A9688;
}

id sub_100970054(id a1)
{
  return &off_1013A97D8;
}

id sub_100970060(id a1)
{
  return &off_1013A97D8;
}

id sub_10097006C(id a1)
{
  return &off_1013A97D8;
}

id sub_100970078(id a1)
{
  return &off_1013A9628;
}

id sub_100970084(id a1)
{
  return &off_1013A9850;
}

id sub_100970090(id a1)
{
  return &off_1013A97A8;
}

id sub_10097009C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009700A8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009700B4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009700C0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009700CC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009700D8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009700E4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009700F0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009700FC(id a1)
{
  return &off_1013AF2D8;
}

id sub_100970108(id a1)
{
  return &off_1013AF308;
}

id sub_100970114(id a1)
{
  return &off_1013A9880;
}

id sub_100970120(id a1)
{
  return &off_1013A9808;
}

id sub_10097012C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970138(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970144(id a1)
{
  return &off_1013AF228;
}

id sub_100970150(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097015C(id a1)
{
  return &off_1013A9820;
}

id sub_100970168(id a1)
{
  return &off_1013AF318;
}

id sub_100970174(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970180(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097018C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970198(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009701A4(id a1)
{
  return &off_1013AF328;
}

id sub_1009701B0(id a1)
{
  return &off_1013AF268;
}

id sub_1009701BC(id a1)
{
  return &off_1013AF338;
}

id sub_1009701C8(id a1)
{
  return &off_1013A9778;
}

id sub_1009701D4(id a1)
{
  return &off_1013AF358;
}

id sub_1009701E0(id a1)
{
  return &off_1013AF248;
}

id sub_1009701EC(id a1)
{
  return &off_1013AF368;
}

id sub_1009701F8(id a1)
{
  return &off_1013AF378;
}

id sub_100970204(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970210(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097021C(id a1)
{
  return &off_1013AF258;
}

id sub_100970228(id a1)
{
  return &off_1013AF388;
}

id sub_100970234(id a1)
{
  return &off_1013A9640;
}

id sub_100970240(id a1)
{
  return &off_1013A97F0;
}

id sub_10097024C(id a1)
{
  return &off_1013A9790;
}

id sub_100970258(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970264(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970270(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097027C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970288(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970294(id a1)
{
  return &off_1013A9628;
}

id sub_1009702A0(id a1)
{
  return &off_1013AF2A8;
}

id sub_1009702AC(id a1)
{
  return &off_1013A9730;
}

id sub_1009702B8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009702C4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009702D0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009702DC(id a1)
{
  return &off_1013A98B0;
}

id sub_1009702E8(id a1)
{
  return &off_1013A9640;
}

id sub_1009702F4(id a1)
{
  return &off_1013A98E0;
}

id sub_100970300(id a1)
{
  return &off_1013A98E0;
}

id sub_10097030C(id a1)
{
  return &off_1013A98F8;
}

id sub_100970318(id a1)
{
  return &off_1013A9838;
}

id sub_100970324(id a1)
{
  return &off_1013A96B8;
}

id sub_100970330(id a1)
{
  return &off_1013A9730;
}

id sub_10097033C(id a1)
{
  return &off_1013A9910;
}

id sub_100970348(id a1)
{
  return &off_1013A9610;
}

id sub_100970354(id a1)
{
  return &off_1013AF3A8;
}

id sub_100970360(id a1)
{
  return &off_1013AF3B8;
}

id sub_10097036C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970378(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970384(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970390(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097039C(id a1)
{
  return &off_1013A9640;
}

id sub_1009703A8(id a1)
{
  return &off_1013A9640;
}

id sub_1009703B4(id a1)
{
  return &off_1013AF238;
}

id sub_1009703C0(id a1)
{
  return &off_1013A96B8;
}

id sub_1009703CC(id a1)
{
  return &off_1013A9928;
}

id sub_1009703D8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009703E4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009703F0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009703FC(id a1)
{
  return &off_1013AF318;
}

id sub_100970408(id a1)
{
  return &off_1013A9778;
}

id sub_100970414(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970420(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097042C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970438(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970444(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970450(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097045C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970468(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970474(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970480(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097048C(id a1)
{
  return &off_1013AF388;
}

id sub_100970498(id a1)
{
  return &off_1013AF258;
}

id sub_1009704A4(id a1)
{
  return &off_1013AF3C8;
}

id sub_1009704B0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009704BC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009704C8(id a1)
{
  return &off_1013A97F0;
}

id sub_1009704D4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009704E0(id a1)
{
  return &off_1013AF258;
}

id sub_1009704EC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009704F8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970504(id a1)
{
  return &off_1013A98E0;
}

id sub_100970510(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097051C(id a1)
{
  return &off_1013A97D8;
}

id sub_100970528(id a1)
{
  return &off_1013A9898;
}

id sub_100970534(id a1)
{
  return &off_1013AF2B8;
}

id sub_100970540(id a1)
{
  return &off_1013A96B8;
}

id sub_10097054C(id a1)
{
  return &off_1013A96B8;
}

id sub_100970558(id a1)
{
  return &off_1013A9730;
}

id sub_100970564(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970570(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097057C(id a1)
{
  return &off_1013A9808;
}

id sub_100970588(id a1)
{
  return @"https://www.apple.com/legal/internet-services/maps/ratings-photos/";
}

id sub_100970594(id a1)
{
  return &off_1013A9628;
}

id sub_1009705A0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009705AC(id a1)
{
  return &off_1013A9778;
}

id sub_1009705B8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009705C4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009705D0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009705DC(id a1)
{
  return &off_1013A9940;
}

id sub_1009705E8(id a1)
{
  return &off_1013A9958;
}

id sub_1009705F4(id a1)
{
  return &off_1013A9970;
}

id sub_100970600(id a1)
{
  return &off_1013A9988;
}

id sub_10097060C(id a1)
{
  return &off_1013AF3D8;
}

id sub_100970618(id a1)
{
  return &off_1013AF3E8;
}

id sub_100970624(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970630(id a1)
{
  return &off_1013AF3F8;
}

id sub_10097063C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970648(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970654(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970660(id a1)
{
  return &off_1013A97A8;
}

id sub_10097066C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970678(id a1)
{
  return &off_1013A9778;
}

id sub_100970684(id a1)
{
  return &off_1013A97F0;
}

id sub_100970690(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097069C(id a1)
{
  return @"https://www.apple.com/ios/feature-availability/#maps-cycling";
}

id sub_1009706A8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009706B4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009706C0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009706CC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009706D8(id a1)
{
  return &off_1013A98C8;
}

id sub_1009706E4(id a1)
{
  return &off_1013A9688;
}

id sub_1009706F0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009706FC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970708(id a1)
{
  return &off_1013A9778;
}

id sub_100970714(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970720(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097072C(id a1)
{
  return 0;
}

id sub_100970734(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970740(id a1)
{
  return &off_1013A9640;
}

id sub_10097074C(id a1)
{
  return &off_1013A9640;
}

id sub_100970758(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970764(id a1)
{
  return &off_1013A99B8;
}

id sub_100970770(id a1)
{
  return &off_1013A9730;
}

id sub_10097077C(id a1)
{
  return &off_1013A96A0;
}

id sub_100970788(id a1)
{
  return &off_1013A99D0;
}

id sub_100970794(id a1)
{
  return @"https://www.apple.com/legal/internet-services/maps/";
}

id sub_1009707A0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009707AC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009707B8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009707C4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009707D0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009707DC(id a1)
{
  return &off_1013A9688;
}

id sub_1009707E8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009707F4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970800(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097080C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970818(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970824(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970830(id a1)
{
  return &off_1013AF2B8;
}

id sub_10097083C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970848(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970854(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970860(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097086C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970878(id a1)
{
  return &off_1013A97D8;
}

id sub_100970884(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970890(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097089C(id a1)
{
  return &off_1013A9790;
}

id sub_1009708A8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009708B4(id a1)
{
  return &off_1013A97D8;
}

id sub_1009708C0(id a1)
{
  return &off_1013AF408;
}

id sub_1009708CC(id a1)
{
  return &off_1013A97D8;
}

id sub_1009708D8(id a1)
{
  return &off_1013A9640;
}

id sub_1009708E4(id a1)
{
  return &off_1013A9628;
}

id sub_1009708F0(id a1)
{
  return &off_1013A9778;
}

id sub_1009708FC(id a1)
{
  return &off_1013A97D8;
}

id sub_100970908(id a1)
{
  return &off_1013A99E8;
}

id sub_100970914(id a1)
{
  return &off_1013A9640;
}

id sub_100970920(id a1)
{
  return &off_1013A9628;
}

id sub_10097092C(id a1)
{
  return &off_1013A9730;
}

id sub_100970938(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970944(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970950(id a1)
{
  return &off_1013A9670;
}

id sub_10097095C(id a1)
{
  return &off_1013A9808;
}

id sub_100970968(id a1)
{
  return &off_1013A9868;
}

id sub_100970974(id a1)
{
  return &off_1013A9808;
}

id sub_100970980(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097098C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970998(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009709A4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009709B0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009709BC(id a1)
{
  return &off_1013AF418;
}

id sub_1009709C8(id a1)
{
  return 0;
}

id sub_1009709D0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009709DC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009709E8(id a1)
{
  return &off_1013AF2A8;
}

id sub_1009709F4(id a1)
{
  return &off_1013AF428;
}

id sub_100970A00(id a1)
{
  return &off_1013A9778;
}

id sub_100970A0C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970A18(id a1)
{
  return &off_1013AF328;
}

id sub_100970A24(id a1)
{
  return &off_1013A97A8;
}

id sub_100970A30(id a1)
{
  return &off_1013A9610;
}

id sub_100970A3C(id a1)
{
  return &off_1013A9A18;
}

id sub_100970A48(id a1)
{
  return &off_1013A9A30;
}

id sub_100970A54(id a1)
{
  return &off_1013AF288;
}

id sub_100970A60(id a1)
{
  return &off_1013A9748;
}

id sub_100970A6C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970A78(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970A84(id a1)
{
  return &off_1013A9808;
}

id sub_100970A90(id a1)
{
  return &off_1013A9640;
}

id sub_100970A9C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970AA8(id a1)
{
  return &off_1013A9808;
}

id sub_100970AB4(id a1)
{
  return &off_1013A9808;
}

id sub_100970AC0(id a1)
{
  return &off_1013AF438;
}

id sub_100970ACC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970AD8(id a1)
{
  return &off_1013AF448;
}

id sub_100970AE4(id a1)
{
  return &off_1013A96B8;
}

id sub_100970AF0(id a1)
{
  return &off_1013A96B8;
}

id sub_100970AFC(id a1)
{
  return &off_1013A98C8;
}

id sub_100970B08(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970B14(id a1)
{
  return &off_1013AF328;
}

id sub_100970B20(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970B2C(id a1)
{
  return &off_1013AF288;
}

id sub_100970B38(id a1)
{
  return &off_1013A9640;
}

id sub_100970B44(id a1)
{
  return &off_1013A9880;
}

id sub_100970B50(id a1)
{
  return &off_1013AF238;
}

id sub_100970B5C(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970B68(id a1)
{
  return &off_1013AF458;
}

id sub_100970B74(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970B80(id a1)
{
  return &off_1013AF468;
}

id sub_100970B8C(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970B98(id a1)
{
  return &off_1013AF478;
}

id sub_100970BA4(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970BB0(id a1)
{
  return &off_1013AF488;
}

id sub_100970BBC(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970BC8(id a1)
{
  return &off_1013AF458;
}

id sub_100970BD4(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970BE0(id a1)
{
  return &off_1013AF498;
}

id sub_100970BEC(id a1)
{
  return &off_1013AF458;
}

id sub_100970BF8(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970C04(id a1)
{
  return &off_1013AF468;
}

id sub_100970C10(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970C1C(id a1)
{
  return &off_1013AF328;
}

id sub_100970C28(id a1)
{
  return &off_1013AF2F8;
}

id sub_100970C34(id a1)
{
  return 0;
}

id sub_100970C3C(id a1)
{
  return 0;
}

id sub_100970C44(id a1)
{
  return &off_1013A9A48;
}

id sub_100970C50(id a1)
{
  return &off_1013A9880;
}

id sub_100970C5C(id a1)
{
  return 0;
}

id sub_100970C64(id a1)
{
  return &off_1013A9A60;
}

id sub_100970C70(id a1)
{
  return 0;
}

id sub_100970C78(id a1)
{
  return 0;
}

id sub_100970C80(id a1)
{
  return &off_1013A9640;
}

id sub_100970C8C(id a1)
{
  return &off_1013A9628;
}

id sub_100970C98(id a1)
{
  return &off_1013A96B8;
}

id sub_100970CA4(id a1)
{
  return &off_1013A96B8;
}

id sub_100970CB0(id a1)
{
  return &off_1013A9A78;
}

id sub_100970CBC(id a1)
{
  return &off_1013A9640;
}

id sub_100970CC8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970CD4(id a1)
{
  return &off_1013A9778;
}

id sub_100970CE0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970CEC(id a1)
{
  return &off_1013A9610;
}

id sub_100970CF8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970D04(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970D10(id a1)
{
  return &off_1013A9628;
}

id sub_100970D1C(id a1)
{
  return &off_1013A9808;
}

id sub_100970D28(id a1)
{
  return &off_1013A9688;
}

id sub_100970D34(id a1)
{
  return &off_1013A98C8;
}

id sub_100970D40(id a1)
{
  return &off_1013A97D8;
}

id sub_100970D4C(id a1)
{
  return &off_1013A9610;
}

id sub_100970D58(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970D64(id a1)
{
  return &off_1013A9988;
}

id sub_100970D70(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970D7C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970D88(id a1)
{
  return &off_1013A96B8;
}

id sub_100970D94(id a1)
{
  return &off_1013A97A8;
}

id sub_100970DA0(id a1)
{
  return &off_1013A9640;
}

id sub_100970DAC(id a1)
{
  return &off_1013A9A00;
}

id sub_100970DB8(id a1)
{
  return &off_1013AED30;
}

id sub_100970DC4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970DD0(id a1)
{
  return &off_1013A9778;
}

id sub_100970DDC(id a1)
{
  return &off_1013A97F0;
}

id sub_100970DE8(id a1)
{
  return &off_1013A9A90;
}

id sub_100970DF4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970E00(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970E0C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970E18(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970E24(id a1)
{
  return &off_1013A9898;
}

id sub_100970E30(id a1)
{
  return &off_1013A9808;
}

id sub_100970E3C(id a1)
{
  return &off_1013AED58;
}

id sub_100970E48(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970E54(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970E60(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970E6C(id a1)
{
  return &off_1013AF438;
}

id sub_100970E78(id a1)
{
  return &off_1013A96B8;
}

id sub_100970E84(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970E90(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970E9C(id a1)
{
  return &off_1013A9730;
}

id sub_100970EA8(id a1)
{
  return &off_1013A97F0;
}

id sub_100970EB4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970EC0(id a1)
{
  return &off_1013A9730;
}

id sub_100970ECC(id a1)
{
  return &off_1013A9610;
}

id sub_100970ED8(id a1)
{
  return &off_1013A9628;
}

id sub_100970EE4(id a1)
{
  return &off_1013A9628;
}

id sub_100970EF0(id a1)
{
  return &off_1013A9640;
}

id sub_100970EFC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970F08(id a1)
{
  return &off_1013AF2B8;
}

id sub_100970F14(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970F20(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970F2C(id a1)
{
  return &off_1013A97C0;
}

id sub_100970F38(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970F44(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970F50(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970F5C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970F68(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970F74(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100970F80(id a1)
{
  return &off_1013AF2B8;
}

id sub_100970F8C(id a1)
{
  return &off_1013A9640;
}

id sub_100970F98(id a1)
{
  return &off_1013A9640;
}

id sub_100970FA4(id a1)
{
  return &off_1013A9778;
}

id sub_100970FB0(id a1)
{
  return &off_1013A96B8;
}

id sub_100970FBC(id a1)
{
  return &off_1013AF438;
}

id sub_100970FC8(id a1)
{
  return &off_1013AF3F8;
}

id sub_100970FD4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970FE0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100970FEC(id a1)
{
  return &off_1013A9AA8;
}

id sub_100970FF8(id a1)
{
  return &off_1013A9AA8;
}

id sub_100971004(id a1)
{
  return &off_1013A9AA8;
}

id sub_100971010(id a1)
{
  return &off_1013AF4A8;
}

id sub_10097101C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971028(id a1)
{
  return &off_1013A9748;
}

id sub_100971034(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971040(id a1)
{
  return &off_1013A9688;
}

id sub_10097104C(id a1)
{
  return &off_1013A9730;
}

id sub_100971058(id a1)
{
  return &off_1013AF448;
}

id sub_100971064(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971070(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097107C(id a1)
{
  return &off_1013A9700;
}

id sub_100971088(id a1)
{
  return &off_1013A9700;
}

id sub_100971094(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009710A0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009710AC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009710B8(id a1)
{
  return &off_1013A9640;
}

id sub_1009710C4(id a1)
{
  return &off_1013A9AC0;
}

id sub_1009710D0(id a1)
{
  return &off_1013AF2A8;
}

id sub_1009710DC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009710E8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009710F4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971100(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097110C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971118(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971124(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971130(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097113C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971148(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971154(id a1)
{
  return &off_1013A97D8;
}

id sub_100971160(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097116C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971178(id a1)
{
  return 0;
}

id sub_100971180(id a1)
{
  return 0;
}

id sub_100971188(id a1)
{
  return &off_1013AF468;
}

id sub_100971194(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009711A0(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009711AC(id a1)
{
  return &off_1013A9AD8;
}

id sub_1009711B8(id a1)
{
  return &off_1013A97F0;
}

id sub_1009711C4(id a1)
{
  return &off_1013AF2B8;
}

id sub_1009711D0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009711DC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009711E8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009711F4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971200(id a1)
{
  return &off_1013AF4B8;
}

id sub_10097120C(id a1)
{
  return &off_1013AF4C8;
}

id sub_100971218(id a1)
{
  return &off_1013A9838;
}

id sub_100971224(id a1)
{
  return &off_1013A9AA8;
}

id sub_100971230(id a1)
{
  return &off_1013A9808;
}

id sub_10097123C(id a1)
{
  return &off_1013A9730;
}

id sub_100971248(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971254(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971260(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097126C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971278(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971284(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971290(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097129C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009712A8(id a1)
{
  return &off_1013A97A8;
}

id sub_1009712B4(id a1)
{
  return &off_1013A97F0;
}

id sub_1009712C0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009712CC(id a1)
{
  return &off_1013A9778;
}

id sub_1009712D8(id a1)
{
  return &off_1013A9628;
}

id sub_1009712E4(id a1)
{
  return &off_1013AF2B8;
}

id sub_1009712F0(id a1)
{
  return &off_1013A9730;
}

id sub_1009712FC(id a1)
{
  return &off_1013A97D8;
}

id sub_100971308(id a1)
{
  return &off_1013A9640;
}

id sub_100971314(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971320(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097132C(id a1)
{
  return &off_1013A97D8;
}

id sub_100971338(id a1)
{
  return &off_1013A9730;
}

id sub_100971344(id a1)
{
  return &off_1013AF2B8;
}

id sub_100971350(id a1)
{
  return &off_1013A9808;
}

id sub_10097135C(id a1)
{
  return &off_1013A9688;
}

id sub_100971368(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971374(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971380(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097138C(id a1)
{
  return &off_1013AF4D8;
}

id sub_100971398(id a1)
{
  return &off_1013A97F0;
}

id sub_1009713A4(id a1)
{
  return &off_1013A96B8;
}

id sub_1009713B0(id a1)
{
  return &off_1013A9970;
}

id sub_1009713BC(id a1)
{
  return &off_1013AF2F8;
}

id sub_1009713C8(id a1)
{
  return &off_1013AF4E8;
}

id sub_1009713D4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009713E0(id a1)
{
  return &off_1013A9AF0;
}

id sub_1009713EC(id a1)
{
  return &off_1013A9B08;
}

id sub_1009713F8(id a1)
{
  return &off_1013A99D0;
}

id sub_100971404(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971410(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097141C(id a1)
{
  return &off_1013AF2E8;
}

id sub_100971428(id a1)
{
  return &off_1013AF4F8;
}

id sub_100971434(id a1)
{
  return &off_1013AF3F8;
}

id sub_100971440(id a1)
{
  return &off_1013AF508;
}

id sub_10097144C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971458(id a1)
{
  return &off_1013AF438;
}

id sub_100971464(id a1)
{
  return &off_1013A98B0;
}

id sub_100971470(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097147C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971488(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971494(id a1)
{
  return &off_1013A9730;
}

id sub_1009714A0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009714AC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009714B8(id a1)
{
  return &off_1013A9B20;
}

id sub_1009714C4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009714D0(id a1)
{
  return &off_1013A9688;
}

id sub_1009714DC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009714E8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009714F4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971500(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097150C(id a1)
{
  return &off_1013A96B8;
}

id sub_100971518(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971524(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971530(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_10097153C(id a1)
{
  return &off_1013A9778;
}

id sub_100971548(id a1)
{
  return &off_1013AF438;
}

id sub_100971554(id a1)
{
  return &off_1013A99A0;
}

id sub_100971560(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097156C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971578(id a1)
{
  return &off_1013AF3C8;
}

id sub_100971584(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971590(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097159C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009715A8(id a1)
{
  return &off_1013A97A8;
}

id sub_1009715B4(id a1)
{
  return &off_1013A97A8;
}

id sub_1009715C0(id a1)
{
  return &off_1013A97A8;
}

id sub_1009715CC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009715D8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009715E4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009715F0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009715FC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971608(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971614(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971620(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097162C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971638(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971644(id a1)
{
  return &off_1013A97A8;
}

id sub_100971650(id a1)
{
  return &off_1013A99B8;
}

id sub_10097165C(id a1)
{
  return &off_1013A97D8;
}

id sub_100971668(id a1)
{
  return &off_1013A97D8;
}

id sub_100971674(id a1)
{
  return &off_1013A9628;
}

id sub_100971680(id a1)
{
  return &off_1013A97D8;
}

id sub_10097168C(id a1)
{
  return &off_1013AF418;
}

id sub_100971698(id a1)
{
  return &off_1013A9B38;
}

id sub_1009716A4(id a1)
{
  return &off_1013A9B50;
}

id sub_1009716B0(id a1)
{
  return &off_1013A9B68;
}

id sub_1009716BC(id a1)
{
  return &off_1013A9B80;
}

id sub_1009716C8(id a1)
{
  return &off_1013A9B98;
}

id sub_1009716D4(id a1)
{
  return &off_1013A9BB0;
}

id sub_1009716E0(id a1)
{
  return &off_1013A98B0;
}

id sub_1009716EC(id a1)
{
  return &off_1013A9850;
}

id sub_1009716F8(id a1)
{
  return &off_1013A9850;
}

id sub_100971704(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971710(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097171C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971728(id a1)
{
  return &off_1013A9850;
}

id sub_100971734(id a1)
{
  return &off_1013AF518;
}

id sub_100971740(id a1)
{
  return &off_1013A9850;
}

id sub_10097174C(id a1)
{
  return &off_1013AF418;
}

id sub_100971758(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971764(id a1)
{
  return &off_1013A9850;
}

id sub_100971770(id a1)
{
  return &off_1013A9850;
}

id sub_10097177C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971788(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971794(id a1)
{
  return &off_1013A98C8;
}

id sub_1009717A0(id a1)
{
  return &off_1013A9640;
}

id sub_1009717AC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009717B8(id a1)
{
  return &off_1013A9688;
}

id sub_1009717C4(id a1)
{
  return &off_1013A9A00;
}

id sub_1009717D0(id a1)
{
  return &off_1013A9958;
}

id sub_1009717DC(id a1)
{
  return 0;
}

id sub_1009717E4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009717F0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009717FC(id a1)
{
  return &off_1013A9BC8;
}

id sub_100971808(id a1)
{
  return &off_1013A97A8;
}

id sub_100971814(id a1)
{
  return &off_1013A97D8;
}

id sub_100971820(id a1)
{
  return &off_1013A9730;
}

id sub_10097182C(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971838(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971844(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971850(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097185C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971868(id a1)
{
  return &off_1013A9BE0;
}

id sub_100971874(id a1)
{
  return &off_1013A9880;
}

id sub_100971880(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097188C(id a1)
{
  os_log_t v1 = +[GEOCountryConfiguration sharedConfiguration];
  id v2 = [v1 countryCode];
  uint64_t v3 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v2 isEqualToString:@"CN"] ^ 1);

  return v3;
}

id sub_100971914(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971920(id a1)
{
  return 0;
}

id sub_100971928(id a1)
{
  return 0;
}

id sub_100971930(id a1)
{
  return &off_1013A9850;
}

id sub_10097193C(id a1)
{
  return &off_1013A98F8;
}

id sub_100971948(id a1)
{
  return &off_1013A96B8;
}

id sub_100971954(id a1)
{
  return &off_1013A9808;
}

id sub_100971960(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10097196C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971978(id a1)
{
  return 0;
}

id sub_100971980(id a1)
{
  return &off_1013A9BF8;
}

id sub_10097198C(id a1)
{
  return &off_1013A9640;
}

id sub_100971998(id a1)
{
  return &off_1013A9C10;
}

id sub_1009719A4(id a1)
{
  return &off_1013A9C28;
}

id sub_1009719B0(id a1)
{
  return &off_1013A9C40;
}

id sub_1009719BC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009719C8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009719D4(id a1)
{
  return &off_1013A9C58;
}

id sub_1009719E0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1009719EC(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_1009719F8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971A04(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971A10(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100971A1C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100971A28(id a1)
{
  return &__kCFBooleanFalse;
}

int64_t sub_100972C6C(id a1, VIOSessionAnalyticsEntry *a2, VIOSessionAnalyticsEntry *a3)
{
  id v4 = a3;
  uint64_t v5 = [(VIOSessionAnalyticsEntry *)a2 startDate];
  id v6 = [(VIOSessionAnalyticsEntry *)v4 startDate];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

GEOMarcoLiteUsageState *__cdecl sub_100972CDC(id a1, VIOSessionAnalyticsEntry *a2, unint64_t a3)
{
  return [(VIOSessionAnalyticsEntry *)a2 usageState];
}

void sub_100974AA8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isPaused]) {
    return;
  }
  id v15 = [*(id *)(a1 + 32) stateManager];
  if ([v15 isDisabled])
  {

    return;
  }
  id v2 = [*(id *)(a1 + 32) stateManager];
  unsigned __int8 v3 = [v2 isThrottling];

  if (v3) {
    return;
  }
  id v4 = [*(id *)(a1 + 40) trackingState];
  if (v4)
  {
    if (v4 != (id)1)
    {
      if (v4 != (id)2) {
        return;
      }
      if ([*(id *)(a1 + 32) isInitializing]) {
        uint64_t v5 = 14;
      }
      else {
        uint64_t v5 = 6;
      }
      [*(id *)(a1 + 32) completeInFlightEntriesWithExitReason:v5];
      [*(id *)(a1 + 32) createEntryForUsageType:6 value:0];
      [*(id *)(a1 + 32) setIsInitializing:0];
      id v6 = *(void **)(a1 + 32);
      uint64_t v7 = 0;
LABEL_23:
      [v6 setDidRecordInitializing:v7];
      return;
    }
    if ([*(id *)(a1 + 32) isInitializing])
    {
      BOOL v9 = *(void **)(a1 + 32);
      goto LABEL_21;
    }
    uint64_t v11 = 7;
    switch((unint64_t)[*(id *)(a1 + 40) trackingStateReason])
    {
      case 0uLL:
        id v12 = sub_1005762E4();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 136315650;
          uint64_t v17 = "GEOMarcoLiteUsageState_MarcoLiteUsageType MarcoLiteUsageTypeForARTrackingStateReason(ARTrackingStateReason)";
          __int16 v18 = 2080;
          uint64_t v19 = "VIOSessionAnalyticsCapturer.m";
          __int16 v20 = 1024;
          int v21 = 98;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
        }

        if (sub_100BB36BC())
        {
          uint64_t v13 = sub_1005762E4();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            uint64_t v14 = +[NSThread callStackSymbols];
            *(_DWORD *)buf = 138412290;
            uint64_t v17 = v14;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
          }
        }
        goto LABEL_33;
      case 1uLL:
        break;
      case 2uLL:
        uint64_t v11 = 8;
        break;
      case 3uLL:
        uint64_t v11 = 9;
        break;
      case 4uLL:
        uint64_t v11 = 10;
        break;
      default:
LABEL_33:
        uint64_t v11 = 0xFFFFFFFFLL;
        break;
    }
    [*(id *)(a1 + 32) completeInFlightEntriesWithExitReason:v11];
    [*(id *)(a1 + 32) createEntryForUsageType:v11 value:0];
  }
  else
  {
    unsigned int v8 = [*(id *)(a1 + 32) isInitializing];
    BOOL v9 = *(void **)(a1 + 32);
    if (v8)
    {
LABEL_21:
      if ([v9 didRecordInitializing]) {
        return;
      }
      [*(id *)(a1 + 32) completeInFlightEntriesWithExitReason:13];
      [*(id *)(a1 + 32) createEntryForUsageType:13 value:0];
      id v6 = *(void **)(a1 + 32);
      uint64_t v7 = 1;
      goto LABEL_23;
    }
    [v9 completeInFlightEntriesWithExitReason:11];
    id v10 = *(void **)(a1 + 32);
    [v10 createEntryForUsageType:11 value:0];
  }
}

id sub_100974ED0(uint64_t a1)
{
  [*(id *)(a1 + 32) completeInFlightEntriesWithExitReason:12];
  id v2 = *(void **)(a1 + 32);

  return [v2 createEntryForUsageType:12 value:0];
}

id sub_100974F8C(uint64_t a1)
{
  return [*(id *)(a1 + 32) completeInFlightEntriesForUsageType:12 withExitReason:13];
}

id *sub_100975010(id *result)
{
  if ((unint64_t)result[5] <= 2)
  {
    os_log_t v1 = result;
    [result[4] setIsInitializing:(unint64_t)result[5] & 1];
    id v2 = v1[4];
    return (id *)[v2 setDidRecordInitializing:0];
  }
  return result;
}

void sub_100976958(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) vehicleAnnotation];
  [v2 setCoordinate:*(double *)(a1 + 48), *(double *)(a1 + 56)];

  unsigned __int8 v3 = [*(id *)(a1 + 32) vehicleAnnotationView];
  id v4 = [*(id *)(a1 + 40) vehicleLocation];
  [v4 course];
  [v3 _setDirection:];

  id v5 = [*(id *)(a1 + 32) vehicleAnnotationView];
  [v5 setAlpha:1.0];
}

void sub_100977D78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v5)
  {
    unsigned int v8 = [v5 geocodedMapItem];

    BOOL v9 = sub_100109E50();
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG);
    if (!v8)
    {
      if (v10)
      {
        *(_DWORD *)buf = 138412290;
        id v26 = v5;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "SAR: forward geocode address : %@", buf, 0xCu);
      }

      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_100978030;
      v21[3] = &unk_101312140;
      id v22 = *(id *)(a1 + 32);
      [v5 forwardGeocodeAddress:v21];
      uint64_t v14 = v22;
      goto LABEL_14;
    }
    if (v10)
    {
      uint64_t v11 = [v5 geocodedMapItem];
      id v12 = [v11 name];
      *(_DWORD *)buf = 138412290;
      id v26 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "SAR: Opening client resolved item for address : %@", buf, 0xCu);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = [v5 geocodedMapItem];
    id v24 = v14;
    id v15 = &v24;
LABEL_10:
    __int16 v20 = +[NSArray arrayWithObjects:v15 count:1];
    (*(void (**)(uint64_t, void *, void))(v13 + 16))(v13, v20, 0);

LABEL_14:
    goto LABEL_15;
  }
  uint64_t v16 = [v6 mapItem];

  if (v16)
  {
    uint64_t v17 = sub_100109E50();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    {
      __int16 v18 = [v7 mapItem];
      uint64_t v19 = [v18 name];
      *(_DWORD *)buf = 138412290;
      id v26 = v19;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "SAR: Received location of interest with map item: %@", buf, 0xCu);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = [v7 mapItem];
    uint64_t v23 = v14;
    id v15 = &v23;
    goto LABEL_10;
  }
LABEL_15:
}

void sub_100978030(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else if (v5)
  {
    uint64_t v7 = sub_100109E50();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v8 = [v5 name];
      *(_DWORD *)buf = 138412290;
      uint64_t v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "SAR: Received forward geocoded map item: %@", buf, 0xCu);
    }
    uint64_t v9 = *(void *)(a1 + 32);
    id v11 = v5;
    BOOL v10 = +[NSArray arrayWithObjects:&v11 count:1];
    (*(void (**)(uint64_t, void *, void))(v9 + 16))(v9, v10, 0);
  }
}

uint64_t sub_100978178(uint64_t a1)
{
  id v2 = sub_100109E50();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) count];
    int v5 = 134217984;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "SAR: Showing search results for %lu map items.", (uint8_t *)&v5, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1009783C8(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  v8.receiver = *(id *)(a1 + 32);
  v8.super_class = (Class)IOSSharedTripsContext;
  [super becomeCurrent:v2];
  id v3 = [*(id *)(a1 + 32) selectedTrip];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) selectedTrip];
    [*(id *)(a1 + 32) _presentCardForSharedTrip:v4];
  }
  else
  {
    int v5 = objc_alloc_init(SharedTripListContaineeViewController);
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void **)(v6 + 72);
    *(void *)(v6 + 72) = v5;

    [*(id *)(*(void *)(a1 + 32) + 72) setDelegate:];
  }
}

id sub_100978510(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)IOSSharedTripsContext;
  return [super resignCurrent:v1];
}

uint64_t sub_100978D28(uint64_t a1)
{
  uint64_t v2 = +[MapsRadarComponent mapsShareETAiOSComponent];
  [*(id *)(a1 + 32) setComponent:v2];

  [*(id *)(a1 + 32) setCollectFullLogArchive:1];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = *(id *)(a1 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        objc_super v8 = *(void **)(a1 + 32);
        uint64_t v9 = [*(id *)(*((void *)&v12 + 1) + 8 * (void)v7) senderInfo:(void)v12];
        BOOL v10 = [v9 fromIdentifier];
        [v8 addCollaborationContactHandle:v10];

        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v5);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_100979700(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56));
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56));
    uint64_t v6 = [v5 addPhotosControllerRequestsAnchoringBarButtonItem:*(void *)(a1 + 32)];
    [v7 setBarButtonItem:v6];
  }
}

void sub_10097A01C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10097A044(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v5 = [UGCPhotoWithMetadata alloc];
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = +[NSDate date];
    objc_super v8 = [(UGCPhotoWithMetadata *)v5 initWithImageData:v6 date:v7 location:v3 source:1];

    uint64_t v9 = +[NSNotificationCenter defaultCenter];
    [v9 removeObserver:*(void *)(a1 + 40) name:_UIImagePickerControllerUserDidRejectItemNotification object:0];

    id v10 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 56));
    uint64_t v11 = *(void *)(a1 + 40);
    long long v13 = v8;
    long long v12 = +[NSArray arrayWithObjects:&v13 count:1];
    [v10 takePhotoController:v11 didSelectPhotosWithMetadata:v12];
  }
}

uint64_t sub_10097A534(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 8);
  *(void *)(v2 + _Block_object_dispose(&STACK[0x7A0], 8) = 0;

  char v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v4();
}

void sub_10097A5F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = 0;
}

id sub_10097A678(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;

  char v4 = *(void **)(a1 + 32);

  return _[v4 _presentImagePickerWithSourceType:2];
}

id sub_10097A734(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;

  char v4 = *(void **)(a1 + 32);

  return _[v4 _presentImagePickerWithSourceType:1];
}

uint64_t sub_10097ABE4(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v3 identifier];
  uint64_t v6 = [v4 shortcutIdentifier];
  if (v5 == (void *)v6)
  {

LABEL_8:
    uint64_t v10 = 1;
    goto LABEL_9;
  }
  id v7 = (void *)v6;
  unsigned __int8 v8 = [v5 isEqual:v6];

  if (v8) {
    goto LABEL_8;
  }
  if ([v4 isShortcutForSetup])
  {
    if ([v3 isSetupPlaceholder])
    {
      [v4 type];
      id v9 = (id)MapsSuggestionsShortcutTypeFromEntryType();
      if (v9 == [v3 type]) {
        goto LABEL_8;
      }
    }
  }
  uint64_t v10 = 0;
LABEL_9:

  return v10;
}

void sub_10097C4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10097C510(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained
    && [*((id *)WeakRetained + 11) isEqualToString:*(void *)(a1 + 32)]
    && *(void *)(a1 + 48) == v4[2])
  {
    if (v6)
    {
      [v4 setContactImage:];
    }
    else
    {
      id v5 = +[UIImage imageNamed:@"SharedTrip"];
      [v4 setContactImage:v5];
    }
  }
}

void sub_10097D9B0(id a1)
{
  id v3 = +[NSBundle mainBundle];
  uint64_t v1 = [v3 localizedStringForKey:@" · [List view details separator]" value:@"localized string not found" table:0];
  uint64_t v2 = (void *)qword_1016101D8;
  qword_1016101D8 = v1;
}

void sub_10097E5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_10097E620(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  unsigned __int8 v8 = v7;
  if (*(id *)(a1[4] + 128) == v7)
  {
    *a4 = 1;
    *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
  }
  else
  {
    id v10 = v7;
    unsigned __int8 v9 = [v7 isHidden];
    unsigned __int8 v8 = v10;
    if ((v9 & 1) == 0) {
      *(void *)(*(void *)(a1[6] + 8) + 24) = a3;
    }
  }
}

void sub_1009821C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1009821FC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained && *(_DWORD *)(a1 + 40) == WeakRetained[62])
  {
    if (v5) {
      [WeakRetained setMapsImage:];
    }
    else {
      [WeakRetained setDefaultImage];
    }
  }
}

void sub_100982288(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (WeakRetained && a4 && *(_DWORD *)(a1 + 40) == WeakRetained[62])
  {
    if (v8) {
      [WeakRetained setMapsImage:];
    }
    else {
      [WeakRetained setDefaultImage];
    }
  }
}

void sub_10098244C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100982468(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[30] setImage:v5];
  }
}

void sub_1009826A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009826C4(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained && *(_DWORD *)(a1 + 48) == *((_DWORD *)WeakRetained + 62))
  {
    uint64_t v5 = [v6 imageWithRenderingMode:2];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id v6 = (id)v5;
  }
}

void sub_1009828A0(id a1)
{
  uint64_t v1 = +[UIScreen mainScreen];
  [v1 scale];
  double v3 = v2 * 64.0;

  qword_1016101E8 = *(void *)&v3;
  unk_1016101F0 = *(void *)&v3;
}

void *sub_100984704(void *result, uint64_t a2)
{
  uint64_t v2 = result[4];
  if (*((_DWORD *)result + 10) == *(_DWORD *)(v2 + 256)) {
    return [*(id *)(v2 + 248) setImage:a2];
  }
  return result;
}

void sub_100984738(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (v3)
  {
    id v4 = v3;
  }
  else
  {
    id v4 = +[UIImage imageNamed:@"Fallback-Guide"];
  }
  uint64_t v5 = v4;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1009847BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10098572C(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  id v4 = [*(id *)(a1 + 32) traitCollection];
  uint64_t v5 = +[UIFont system12BoldCompatibleWithTraitCollection:v4];
  [v3 setObject:v5 forKeyedSubscript:NSFontAttributeName];

  id v6 = [v3 copy];

  return v6;
}

void sub_100986DA4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      uint64_t v14 = v8;
      __int16 v15 = 2112;
      id v16 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Could not find a LOI w/ identifier %@. Error: %@", buf, 0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else if (v5)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_100986F3C;
    v9[3] = &unk_1012F65B8;
    id v10 = *(id *)(a1 + 32);
    id v11 = v5;
    id v12 = *(id *)(a1 + 40);
    [v11 _maps_hydrateGeoMapItem:v9];
  }
}

void sub_100986F3C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = a1[4];
      int v10 = 138412547;
      uint64_t v11 = v8;
      __int16 v12 = 2113;
      id v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed hydrating the geoMapItem for LOI w/ identifier %@. Error: %{private}@", (uint8_t *)&v10, 0x16u);
    }
  }
  else if (v5)
  {
    unsigned __int8 v9 = [[MapsLocationOfInterest alloc] initWithLocationOfInterest:a1[5] geoMapItem:v5];
    goto LABEL_8;
  }
  unsigned __int8 v9 = 0;
LABEL_8:
  (*(void (**)(void))(a1[6] + 16))();
}

BOOL sub_100987CA4(id a1, NSNumber *a2, unint64_t a3)
{
  [(NSNumber *)a2 doubleValue];
  return v3 >= -25.0;
}

BOOL sub_100987CCC(id a1, NSNumber *a2, unint64_t a3)
{
  [(NSNumber *)a2 doubleValue];
  return v3 >= 65.0;
}

BOOL sub_100987CF8(id a1, NSNumber *a2, unint64_t a3)
{
  [(NSNumber *)a2 doubleValue];
  return v3 >= 65.0;
}

BOOL sub_100987D24(id a1, NSNumber *a2, unint64_t a3)
{
  [(NSNumber *)a2 doubleValue];
  return v3 <= -65.0;
}

BOOL sub_100987E08(id a1, NSNumber *a2, unint64_t a3)
{
  [(NSNumber *)a2 doubleValue];
  return v3 < -60.0;
}

BOOL sub_100987E34(id a1, NSNumber *a2, unint64_t a3)
{
  [(NSNumber *)a2 doubleValue];
  return v3 < 30.0;
}

BOOL sub_100987E5C(id a1, NSNumber *a2, unint64_t a3)
{
  [(NSNumber *)a2 doubleValue];
  return v3 < 30.0;
}

BOOL sub_100987E84(id a1, NSNumber *a2, unint64_t a3)
{
  [(NSNumber *)a2 doubleValue];
  return v3 > -30.0;
}

void sub_1009882C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009882EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_100077410();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)buf = 134349314;
      id v20 = WeakRetained;
      __int16 v21 = 2112;
      double v22 = *(double *)&v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "[%{public}p] Error monitoring device motion updates: %@", buf, 0x16u);
    }
  }
  else
  {
    unsigned __int8 v9 = [v5 attitude];
    [v9 pitch];
    double v11 = v10 * 57.2957795;

    __int16 v12 = [v5 attitude];
    [v12 roll];
    double v14 = v13 * 57.2957795;

    __int16 v15 = sub_100077410();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
    {
      id v16 = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)buf = 134349568;
      id v20 = v16;
      __int16 v21 = 2048;
      double v22 = v11;
      __int16 v23 = 2048;
      double v24 = v14;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "[%{public}p] Got device motion with pitch: %f, roll: %f", buf, 0x20u);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10098850C;
    block[3] = &unk_1012E8268;
    objc_copyWeak(v18, (id *)(a1 + 32));
    v18[1] = *(id *)&v11;
    v18[2] = *(id *)&v14;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(v18);
  }
}

void sub_10098850C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateVisibilityWithCurrentPitch:*(double *)(a1 + 40) currentRoll:*(double *)(a1 + 48)];
}

void sub_100989668(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [*(id *)(a1 + 32) camera];
  [v2 eulerAngles];
  double v4 = v3 * 57.2957795;
  id v5 = [*(id *)(a1 + 32) camera];
  [v5 eulerAngles];
  [WeakRetained updateVisibilityWithCurrentPitch:v4 currentRoll:v6 * 57.2957795];
}

void sub_100989E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100989E70(uint64_t a1)
{
  uint64_t v2 = sub_100077410();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v5 = 134349056;
    id v6 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Re-starting motion updates now", (uint8_t *)&v5, 0xCu);
  }
  id v4 = objc_loadWeakRetained((id *)(a1 + 32));
  [v4 _startIfNecessary];
}

id sub_10098A88C()
{
  if (qword_101610218 != -1) {
    dispatch_once(&qword_101610218, &stru_101312538);
  }
  uint64_t v0 = (void *)qword_101610210;

  return v0;
}

NSString *__cdecl sub_10098AFA8(id a1, CLLocation *a2, unint64_t a3)
{
  float v3 = a2;
  [(CLLocation *)v3 probabilityPositionContextStateIndoor];
  uint64_t v5 = v4;
  [(CLLocation *)v3 probabilityPositionContextStateOutdoor];
  uint64_t v7 = v6;
  unsigned int v8 = [(CLLocation *)v3 positionContextState];

  CFStringRef v9 = @"Unknown";
  if (v8 == 1) {
    CFStringRef v9 = @"Indoor";
  }
  if (v8 == 2) {
    CFStringRef v9 = @"Outdoor";
  }
  return +[NSString stringWithFormat:@"in: %f, out: %f, c: %@", v5, v7, v9];
}

void sub_10098B2E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionLocationOutdoorMonitor");
  uint64_t v2 = (void *)qword_101610210;
  qword_101610210 = (uint64_t)v1;
}

NSString *__cdecl sub_10098B718(id a1, MSPSharedTripContact *a2, unint64_t a3)
{
  return (NSString *)[(MSPSharedTripContact *)a2 stringValue];
}

id sub_10098BDEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(*(void *)(a1 + 32) + 16) containsObject:v3])
  {
    uint64_t v4 = sub_1000A4B98(v3);
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id sub_10098C9F0(uint64_t a1, void *a2)
{
  id v3 = [a2 contact];
  uint64_t v4 = [v3 identifier];
  uint64_t v5 = [*(id *)(a1 + 32) contact];
  uint64_t v6 = [v5 identifier];
  id v7 = [v4 isEqualToString:v6];

  return v7;
}

uint64_t sub_10098CDFC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10098CE14(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v7 = v5;
  if (!v5)
  {
    +[MapsSharedTripAnalyticsHelper sendSuccessAnalyticFor:*(void *)(a1 + 32)];
    id v5 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t, id))(v6 + 16))(v6, a2, v7);
    id v5 = v7;
  }
}

id sub_10098D280(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = sub_1000A4B98(a2);
  id v7 = [v6 isEqualToString:*(void *)(a1 + 32)];

  if (v7) {
    *a4 = 1;
  }
  return v7;
}

uint64_t sub_10098D714(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10098D730(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v5 = a2;
  id v3 = a2;
  uint64_t v4 = +[NSArray arrayWithObjects:&v5 count:1];
  (*(void (**)(uint64_t, void *, void, void))(v2 + 16))(v2, v4, 0, 0);
}

void sub_10098DAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10098DB00(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) taskState];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result == (id)1;
  return result;
}

void sub_10098DC58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10098DC70(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) resultOnIsolationQueue];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10098DD5C(uint64_t a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%@ - cancelling task", (uint8_t *)&v5, 0xCu);
  }

  [*(id *)(a1 + 32) setTaskState:2];
  uint64_t v4 = [*(id *)(a1 + 32) ticket];
  [v4 cancel];
}

void sub_10098E040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10098E060(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) taskState];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result != 0;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 setTaskState:1];
  }
  return result;
}

id sub_10098E0D0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _createNavigationServiceTicketOnIsolationQueueWithCompletionHandler:*(void *)(a1 + 40)];
}

void sub_10098E354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10098E380(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    double v11 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138413058;
      id v20 = WeakRetained;
      __int16 v21 = 2048;
      id v22 = [v7 count];
      __int16 v23 = 2114;
      id v24 = v8;
      __int16 v25 = 2114;
      id v26 = v9;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "%@ - MNNavigationServiceDirectionsRequestTicket completion handler called with routes (count: %ld), error: %{public}@, directionsError: %{public}@", buf, 0x2Au);
    }

    __int16 v12 = [WeakRetained isolationQueue];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    id v13[2] = sub_10098E570;
    v13[3] = &unk_101312620;
    void v13[4] = WeakRetained;
    id v14 = v8;
    id v15 = v9;
    id v16 = a1[4];
    id v17 = v7;
    id v18 = a1[5];
    dispatch_async(v12, v13);
  }
}

void sub_10098E570(uint64_t a1)
{
  if ([*(id *)(a1 + 32) taskState] == (id)1)
  {
    if (*(void *)(a1 + 40))
    {
      uint64_t v2 = *(void *)(a1 + 48);
      uint64_t v3 = [*(id *)(a1 + 56) waypoints];
      uint64_t v4 = +[NSDictionary _navigation_stringTokensForDirectionsError:v2 waypoints:v3];

      int v5 = [*(id *)(a1 + 40) _mapkit_errorWithDirectionsError:v4 stringTokens:v4];
    }
    else
    {
      int v5 = 0;
    }
    uint64_t v6 = [*(id *)(a1 + 32) navigationService];
    [v6 closeForClient:*(void *)(a1 + 32)];

    if ([*(id *)(a1 + 64) count])
    {
      id v7 = [*(id *)(a1 + 32) ticket];
      id v8 = [v7 traceRecordingData];

      long long v16 = 0u;
      long long v17 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      id v9 = *(id *)(a1 + 64);
      id v10 = [v9 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = *(void *)v15;
        do
        {
          double v13 = 0;
          do
          {
            if (*(void *)v15 != v12) {
              objc_enumerationMutation(v9);
            }
            [*(id *)(*((void *)&v14 + 1) + 8 * (void)v13) _maps_setTraceRecordingData:v8 v14];
            double v13 = (char *)v13 + 1;
          }
          while (v11 != v13);
          id v11 = [v9 countByEnumeratingWithState:&v14 objects:v18 count:16];
        }
        while (v11);
      }
    }
    [*(id *)(a1 + 32) _createResultOnIsolationQueueWithRoutes:*(void *)(a1 + 64) error:v5 completionHandler:*(void *)(a1 + 72)];
  }
}

uint64_t sub_10098E920(void *a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = a1[4];
    uint64_t v4 = a1[5];
    int v6 = 138412546;
    uint64_t v7 = v3;
    __int16 v8 = 2112;
    uint64_t v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%@ – invoking completion handler with result %@", (uint8_t *)&v6, 0x16u);
  }

  return (*(uint64_t (**)(void))(a1[6] + 16))();
}

void sub_10098ED04(uint64_t a1)
{
  unsigned int v2 = +[MapsAppDelegate mapsIsLaunchedForTesting];
  uint64_t v3 = GEOFindOrCreateLog();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v4)
    {
      int v5 = (objc_class *)objc_opt_class();
      int v6 = NSStringFromClass(v5);
      int v14 = 138412290;
      long long v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%@ – invoking completion handler with result", (uint8_t *)&v14, 0xCu);
    }
  }
  else if (v4)
  {
    uint64_t v7 = *(void **)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    int v14 = 138412546;
    long long v15 = v7;
    __int16 v16 = 2112;
    uint64_t v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%@ – invoking completion handler with result %@", (uint8_t *)&v14, 0x16u);
  }

  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  id v11 = [*(id *)(a1 + 32) ticket];
  uint64_t v12 = [v11 directionsResponse];
  double v13 = [v12 advisoriesInfo];
  (*(void (**)(uint64_t, uint64_t, void *))(v9 + 16))(v9, v10, v13);
}

void sub_10098F0DC(id a1)
{
  os_log_t v1 = +[NSFileManager defaultManager];
  unsigned int v2 = +[MSPMapsPaths mapsApplicationContainerPaths];
  uint64_t v3 = [v2 cacheDirectory];

  BOOL v4 = [v3 stringByAppendingPathComponent:@"TRANSIT_PAY_PAYMENT_POLYGON_DATA.pbd"];

  id v14 = 0;
  [v1 removeItemAtPath:v4 error:&v14];
  id v5 = v14;
  if (v5 && [v1 fileExistsAtPath:v4])
  {
    int v6 = sub_100021338();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      __int16 v16 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error removing cached mapItem at path:%@", buf, 0xCu);
    }
  }
  uint64_t v7 = +[MSPMapsPaths mapsApplicationContainerPaths];
  uint64_t v8 = [v7 cacheDirectory];

  uint64_t v9 = [v8 stringByAppendingPathComponent:@"TRANSIT_PAY_PAYMENT_POLYGON_LOCATION_DATA.pbd"];

  id v13 = 0;
  [v1 removeItemAtPath:v9 error:&v13];
  id v10 = v13;
  if (v10 && [v1 fileExistsAtPath:v9])
  {
    id v11 = sub_100021338();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      __int16 v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Error removing cached mapItem at path:%@", buf, 0xCu);
    }
  }
  uint64_t v12 = sub_100021338();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    __int16 v16 = v4;
    __int16 v17 = 2112;
    id v18 = v9;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Deleted cached location and mapItem files at: %@ and %@", buf, 0x16u);
  }
}

void sub_10098F590(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = +[MSPMapsPaths mapsApplicationContainerPaths];
    BOOL v4 = [v3 cacheDirectory];

    id v5 = [v4 stringByAppendingPathComponent:@"TRANSIT_PAY_PAYMENT_POLYGON_DATA.pbd"];

    id v6 = [objc_alloc((Class)NSData) initWithContentsOfFile:v5];
    if (!v6)
    {
      id v13 = sub_100021338();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        int v30 = 138412290;
        id v31 = v5;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "No mapItem is cached at this path: %@", (uint8_t *)&v30, 0xCu);
      }

      [WeakRetained _deleteCachedFiles];
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
      goto LABEL_16;
    }
    id v7 = [objc_alloc((Class)GEOMapItemStorage) initWithData:v6];
    if (v7 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      if (![v7 hasExpiredComponents])
      {
        id v14 = +[MSPMapsPaths mapsApplicationContainerPaths];
        long long v15 = [v14 cacheDirectory];

        __int16 v16 = [v15 stringByAppendingPathComponent:@"TRANSIT_PAY_PAYMENT_POLYGON_LOCATION_DATA.pbd"];

        id v17 = [objc_alloc((Class)NSData) initWithContentsOfFile:v16];
        if (v17)
        {
          id v18 = [objc_alloc((Class)GEOLocation) initWithData:v17];
          uint64_t v19 = [*(id *)(a1 + 32) latLng];
          [v19 coordinate];
          id v20 = [v18 latLng];
          [v20 coordinate];
          GEOCalculateDistance();
          double v22 = v21;

          [v7 cachingRadiusMeters];
          double v24 = v23;
          __int16 v25 = sub_100021338();
          BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_INFO);
          if (v22 <= v24)
          {
            if (v26)
            {
              int v30 = 138412290;
              id v31 = v7;
              _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Found mapItem to uncache:\n%@", (uint8_t *)&v30, 0xCu);
            }

            id v28 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
          }
          else
          {
            if (v26)
            {
              uint64_t v27 = +[NSNumber numberWithDouble:v22];
              int v30 = 138412546;
              id v31 = v27;
              __int16 v32 = 2048;
              double v33 = v24;
              _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Distance:%@ > Caching Radius:%g", (uint8_t *)&v30, 0x16u);
            }
            [WeakRetained _deleteCachedFiles];
            id v28 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
          }
          v28();
        }
        else
        {
          id v29 = sub_100021338();
          if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
          {
            int v30 = 138412290;
            id v31 = v16;
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "No locationData is cached at this path: %@", (uint8_t *)&v30, 0xCu);
          }

          [WeakRetained _deleteCachedFiles];
          (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
        }

        goto LABEL_12;
      }
      uint64_t v8 = sub_100021338();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        LOWORD(v30) = 0;
        uint64_t v9 = "mapItem has expired. It's too old.";
        id v10 = v8;
        uint32_t v11 = 2;
LABEL_10:
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, v9, (uint8_t *)&v30, v11);
      }
    }
    else
    {
      uint64_t v8 = sub_100021338();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v30 = 138412546;
        id v31 = v5;
        __int16 v32 = 2112;
        double v33 = *(double *)&v7;
        uint64_t v9 = "mapItem cannot be formed with the data cached at this path: %@. mapItem: %@";
        id v10 = v8;
        uint32_t v11 = 22;
        goto LABEL_10;
      }
    }

    [WeakRetained _deleteCachedFiles];
    (*(void (**)(void, void, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, v12);
LABEL_12:

LABEL_16:
  }
}

void sub_10098FB14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32) && *(void *)(a1 + 40))
    {
      uint64_t v3 = +[GEOMapItemStorage mapItemStorageForGEOMapItem:](GEOMapItemStorage, "mapItemStorageForGEOMapItem:");
      uint64_t v4 = [v3 data];
      if (v4)
      {
        id v5 = (void *)v4;
        id v6 = [*(id *)(a1 + 40) data];

        if (v6)
        {
          id v7 = +[MSPMapsPaths mapsApplicationContainerPaths];
          uint64_t v8 = [v7 cacheDirectory];

          uint64_t v9 = [v8 stringByAppendingPathComponent:@"TRANSIT_PAY_PAYMENT_POLYGON_DATA.pbd"];

          id v10 = [v3 data];
          id v26 = 0;
          [v10 writeToFile:v9 options:1 error:&v26];
          id v11 = v26;

          if (v11)
          {
            uint64_t v12 = sub_100021338();
            if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
            {
              id v13 = [v11 localizedDescription];
              *(_DWORD *)buf = 138412546;
              id v28 = v9;
              __int16 v29 = 2112;
              int v30 = v13;
              _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Unable to write mapItem data to file: %@ because of %@", buf, 0x16u);
            }
            [WeakRetained _deleteCachedFiles];
          }
          else
          {
            long long v15 = +[MSPMapsPaths mapsApplicationContainerPaths];
            __int16 v16 = [v15 cacheDirectory];

            id v17 = [v16 stringByAppendingPathComponent:@"TRANSIT_PAY_PAYMENT_POLYGON_LOCATION_DATA.pbd"];

            id v18 = [*(id *)(a1 + 40) data];
            id v25 = 0;
            [v18 writeToFile:v17 options:1 error:&v25];
            id v11 = v25;

            uint64_t v19 = sub_100021338();
            BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_INFO);
            if (v11)
            {
              if (v20)
              {
                double v21 = [v11 localizedDescription];
                *(_DWORD *)buf = 138412546;
                id v28 = v17;
                __int16 v29 = 2112;
                int v30 = v21;
                _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Unable to write location data to file: %@ because of %@", buf, 0x16u);
              }
              [WeakRetained _deleteCachedFiles];
            }
            else
            {
              if (v20)
              {
                double v22 = *(void **)(a1 + 40);
                *(_DWORD *)buf = 138412290;
                id v28 = v22;
                _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Successfully cached the userLocation:\n%@", buf, 0xCu);
              }

              double v23 = sub_100021338();
              if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
              {
                double v24 = *(void **)(a1 + 32);
                *(_DWORD *)buf = 138412290;
                id v28 = v24;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Successfully cached the paymentPolygon:\n%@", buf, 0xCu);
              }
            }
          }
        }
      }
    }
    else
    {
      id v14 = sub_100021338();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Either location or polygon is nil. Interpreting this as a command to delete the cache.", buf, 2u);
      }

      [WeakRetained _deleteCachedFiles];
    }
  }
}

uint64_t sub_10098FEC4()
{
  uint64_t v0 = +[GEOPlatform sharedPlatform];
  unsigned int v1 = [v0 isInternalInstall];

  if (!v1) {
    return 0;
  }

  return GEOConfigGetBOOL();
}

uint64_t sub_10098FF44()
{
  uint64_t v0 = +[GEOPlatform sharedPlatform];
  unsigned int v1 = [v0 isInternalInstall];

  if (!v1) {
    return 0;
  }

  return GEOConfigGetBOOL();
}

void sub_100990204(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) platformController];
  uint64_t v3 = [v2 chromeViewController];
  uint64_t v4 = [v3 mapView];
  id v5 = [v4 _mapLayer];

  if (v5)
  {
    if ([v5 enableGlobe])
    {
      unsigned int v6 = [v5 isShowingCuratedElevatedGround];
      uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
      if (v6) {
        int v8 = 2;
      }
      else {
        int v8 = 1;
      }
    }
    else
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
      int v8 = 3;
    }
    *(_DWORD *)(v7 + 24) = v8;
  }
  else
  {
    uint64_t v9 = sub_10006BD6C();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = 134349056;
      uint64_t v12 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "[%{public}p] There is no map layer; cannot determine map type",
        (uint8_t *)&v11,
        0xCu);
    }

    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
  }
}

void sub_10099045C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100990470(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = sub_10006BD6C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = *(_DWORD *)(a1 + 40);
      int v6 = 134349312;
      id v7 = WeakRetained;
      __int16 v8 = 1024;
      int v9 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Thermal pressure updated: %d", (uint8_t *)&v6, 0x12u);
    }

    id v5 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(a1 + 40)];
    +[GEOAPPortal captureNavThermalPressureTrigger:thermalPressure:navMapType:supressedFeatures:chargingState:](GEOAPPortal, "captureNavThermalPressureTrigger:thermalPressure:navMapType:supressedFeatures:chargingState:", 3, v5, [WeakRetained _mapType], 0, [WeakRetained _chargingState]);
  }
}

void sub_100990674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100990688(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = sub_10006BD6C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v5 = *(void *)(a1 + 48);
      int v11 = 134349568;
      id v12 = WeakRetained;
      __int16 v13 = 2048;
      uint64_t v14 = v4;
      __int16 v15 = 2048;
      uint64_t v16 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Nav state updated: %lu -> %lu", (uint8_t *)&v11, 0x20u);
    }

    if (MNNavigationServiceStateChangedToNavigating())
    {
      int v6 = [WeakRetained thermalPressureController];
      id v7 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v6 currentThermalPressureLevel]);
      id v8 = [WeakRetained _mapType];
      id v9 = [WeakRetained _chargingState];
      uint64_t v10 = 1;
LABEL_8:
      +[GEOAPPortal captureNavThermalPressureTrigger:v10 thermalPressure:v7 navMapType:v8 supressedFeatures:0 chargingState:v9];

      goto LABEL_9;
    }
    if (MNNavigationServiceStateChangedFromNavigatingToStopped())
    {
      int v6 = [WeakRetained thermalPressureController];
      id v7 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v6 currentThermalPressureLevel]);
      id v8 = [WeakRetained _mapType];
      id v9 = [WeakRetained _chargingState];
      uint64_t v10 = 2;
      goto LABEL_8;
    }
  }
LABEL_9:
}

void sub_100990920(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100990934(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = sub_10006BD6C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      int v7 = 134349312;
      id v8 = WeakRetained;
      __int16 v9 = 2048;
      uint64_t v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Charging state updated: %ld", (uint8_t *)&v7, 0x16u);
    }

    uint64_t v5 = [WeakRetained thermalPressureController];
    int v6 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v5 currentThermalPressureLevel]);
    +[GEOAPPortal captureNavThermalPressureTrigger:thermalPressure:navMapType:supressedFeatures:chargingState:](4, v6, [WeakRetained _mapType], 0, [WeakRetained _chargingState]);
  }
}

id sub_100991264(uint64_t a1)
{
  [*(id *)(a1 + 32) applyTransitionWithProgress:0.0];
  unsigned int v2 = *(void **)(a1 + 40);

  return [v2 applyTransitionWithProgress:1.0];
}

uint64_t sub_1009912A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1009912B8(uint64_t a1)
{
  [*(id *)(a1 + 32) completeTransition:1];
  unsigned int v2 = *(void **)(a1 + 40);

  return [v2 applyTransitionWithProgress:1.0];
}

id sub_100991620(uint64_t a1)
{
  [*(id *)(a1 + 32) applyTransitionWithProgress:0.0];
  unsigned int v2 = *(void **)(a1 + 40);

  return [v2 applyTransitionWithProgress:1.0];
}

id sub_100991664(uint64_t a1)
{
  [*(id *)(a1 + 32) completeTransition:1];
  [*(id *)(a1 + 40) applyTransitionWithProgress:1.0];
  unsigned int v2 = *(void **)(a1 + 48);

  return _[v2 didCompleteModeTransition];
}

uint64_t sub_1009916B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1009916C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1009919FC(uint64_t a1)
{
  [*(id *)(a1 + 32) applyTransitionWithProgress:0.0];
  unsigned int v2 = *(void **)(a1 + 40);

  return [v2 applyTransitionWithProgress:1.0];
}

id sub_100991A40(uint64_t a1)
{
  return [*(id *)(a1 + 32) completeTransition:1];
}

uint64_t sub_100991A4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100991A5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100992494(uint64_t a1)
{
  [*(id *)(a1 + 32) layoutIfNeeded];
  LOBYTE(v2) = *(unsigned char *)(a1 + 40);
  double v3 = (double)v2;
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 24);

  return [v4 setAlpha:v3];
}

void *sub_1009924E4(void *result, int a2)
{
  if (a2) {
    return [*(id *)(result[4] + 24) setHidden:*((unsigned char *)result + 40) == 0];
  }
  return result;
}

void sub_1009948E8(id a1)
{
  id v1 = objc_alloc_init((Class)NSNumberFormatter);
  unint64_t v2 = (void *)qword_101610230;
  qword_101610230 = (uint64_t)v1;

  double v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_101610230 setLocale:v3];

  uint64_t v4 = (void *)qword_101610230;

  [v4 setNumberStyle:2];
}

void sub_100995108(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) searchBar];
  [v1 becomeFirstResponder];
}

id sub_100995894(int a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  CGFloat v9 = a4 + -13.0;
  CGFloat v47 = v9;
  CGFloat v10 = a2 + 0.0;
  CGFloat v48 = v10;
  CGFloat v31 = a3 + 0.0 + 10.0;
  CGFloat v11 = v9 + -20.0;
  CGFloat v32 = a5 + -20.0;
  CGFloat v33 = v10 + 10.0;
  CGFloat v12 = a3 + 0.0;
  CGFloat v30 = v12;
  CGFloat v8 = v12;
  v53.origin.CGFloat x = CGRectGetMaxX(*(CGRect *)(&a5 - 3));
  CGFloat x = v53.origin.x;
  CGFloat v15 = a6 + -10.0 + -3.93921198;
  v53.origin.double y = v15;
  v53.size.double width = 11.0796342;
  v53.size.double height = 27.878424;
  CGFloat v45 = CGRectGetMinX(v53) + 8.0;
  v54.origin.CGFloat x = x;
  v54.origin.double y = v15;
  v54.size.double width = 11.0796342;
  v54.size.double height = 27.878424;
  double MinY = CGRectGetMinY(v54);
  v55.origin.CGFloat x = x;
  v55.origin.double y = v15;
  v55.size.double width = 11.0796342;
  v55.size.double height = 27.878424;
  double MinX = CGRectGetMinX(v55);
  v56.origin.CGFloat x = x;
  v56.origin.double y = v15;
  v56.size.double width = 11.0796342;
  v56.size.double height = 27.878424;
  double v39 = CGRectGetMinY(v56);
  v57.origin.CGFloat x = x;
  v57.origin.double y = v15;
  v57.size.double width = 11.0796342;
  v57.size.double height = 27.878424;
  CGFloat v43 = CGRectGetMaxX(v57) + -3.0;
  v58.origin.CGFloat x = x;
  v58.origin.double y = v15;
  v58.size.double width = 11.0796342;
  v58.size.double height = 27.878424;
  double MidY = CGRectGetMidY(v58);
  v59.origin.CGFloat x = x;
  v59.origin.double y = v15;
  v59.size.double width = 11.0796342;
  v59.size.double height = 27.878424;
  CGFloat v37 = CGRectGetMaxX(v59) + -1.17086772;
  v60.origin.CGFloat x = x;
  v60.origin.double y = v15;
  v60.size.double width = 11.0796342;
  v60.size.double height = 27.878424;
  CGFloat v36 = CGRectGetMidY(v60) + -2.37787197;
  v61.origin.CGFloat x = x;
  v61.origin.double y = v15;
  v61.size.double width = 11.0796342;
  v61.size.double height = 27.878424;
  CGFloat v40 = CGRectGetMinX(v61) + 8.0;
  v62.origin.CGFloat x = x;
  v62.origin.double y = v15;
  v62.size.double width = 11.0796342;
  v62.size.double height = 27.878424;
  double MaxY = CGRectGetMaxY(v62);
  v63.origin.CGFloat x = x;
  v63.origin.double y = v15;
  v63.size.double width = 11.0796342;
  v63.size.double height = 27.878424;
  double v35 = CGRectGetMinX(v63);
  v64.origin.CGFloat x = x;
  v64.origin.double y = v15;
  v64.size.double width = 11.0796342;
  v64.size.double height = 27.878424;
  CGFloat v34 = CGRectGetMaxY(v64) + -3.93921198;
  uint64_t v16 = +[UIBezierPath bezierPath];
  v65.origin.CGFloat x = v48;
  v65.origin.double y = v8;
  v65.size.double width = v47;
  v65.size.double height = a5;
  double v17 = CGRectGetMinX(v65);
  v66.origin.CGFloat x = v33;
  v66.origin.double y = v31;
  v66.size.double width = v11;
  v66.size.double height = v32;
  [v16 moveToPoint:v17, CGRectGetMinY(v66)];
  v67.origin.CGFloat x = v33;
  v67.origin.double y = v31;
  v67.size.double width = v11;
  v67.size.double height = v32;
  double v18 = CGRectGetMinX(v67);
  v68.origin.CGFloat x = v33;
  v68.origin.double y = v31;
  v68.size.double width = v11;
  v68.size.double height = v32;
  [v16 addArcWithCenter:1, v18, CGRectGetMinY(v68), 10.0];
  v69.origin.CGFloat x = v33;
  v69.origin.double y = v31;
  v69.size.double width = v11;
  v69.size.double height = v32;
  double MaxX = CGRectGetMaxX(v69);
  v70.origin.CGFloat x = v48;
  v70.origin.double y = v30;
  v70.size.double width = v47;
  v70.size.double height = a5;
  [v16 addLineToPoint:MaxX, CGRectGetMinY(v70)];
  v71.origin.CGFloat x = v33;
  v71.origin.double y = v31;
  v71.size.double width = v11;
  v71.size.double height = v32;
  double v20 = CGRectGetMaxX(v71);
  v72.origin.CGFloat x = v33;
  v72.origin.double y = v31;
  v72.size.double width = v11;
  v72.size.double height = v32;
  [v16 addArcWithCenter:1, v20, CGRectGetMinY(v72), 10.0, -1.57079633, 0.0];
  [v16 addLineToPoint:MinX, v39];
  [v16 addArcWithCenter:0 radius:v45 startAngle:MinY endAngle:8.0 clockwise:];
  [v16 addLineToPoint:v37, v36];
  [v16 addArcWithCenter:1, v43, MidY, 3.0, -0.655695626, 0.655695626];
  [v16 addLineToPoint:v35, v34];
  [v16 addArcWithCenter:0 radius:v40 startAngle:MaxY endAngle:8.0 clockwise:-2.22649195];
  v73.origin.CGFloat x = v48;
  v73.origin.double y = v30;
  v73.size.double width = v47;
  v73.size.double height = a5;
  double v21 = CGRectGetMaxX(v73);
  v74.origin.CGFloat x = v33;
  v74.origin.double y = v31;
  v74.size.double width = v11;
  v74.size.double height = v32;
  [v16 addLineToPoint:v21, CGRectGetMaxY(v74)];
  v75.origin.CGFloat x = v33;
  v75.origin.double y = v31;
  v75.size.double width = v11;
  v75.size.double height = v32;
  double v22 = CGRectGetMaxX(v75);
  v76.origin.CGFloat x = v33;
  v76.origin.double y = v31;
  v76.size.double width = v11;
  v76.size.double height = v32;
  [v16 addArcWithCenter:1, v22, CGRectGetMaxY(v76), 10.0, 0.0, 1.57079633];
  v77.origin.CGFloat x = v33;
  v77.origin.double y = v31;
  v77.size.double width = v11;
  v77.size.double height = v32;
  double v23 = CGRectGetMinX(v77);
  v78.origin.CGFloat x = v48;
  v78.origin.double y = v30;
  v78.size.double width = v47;
  v78.size.double height = a5;
  [v16 addLineToPoint:v23, CGRectGetMaxY(v78)];
  v79.origin.CGFloat x = v33;
  v79.origin.double y = v31;
  v79.size.double width = v11;
  v79.size.double height = v32;
  double v24 = CGRectGetMinX(v79);
  v80.origin.CGFloat x = v33;
  v80.origin.double y = v31;
  v80.size.double width = v11;
  v80.size.double height = v32;
  [v16 addArcWithCenter:1, v24, CGRectGetMaxY(v80), 10.0, 1.57079633, 3.14159265];
  [v16 closePath];
  if (a1)
  {
    memset(&v51, 0, sizeof(v51));
    v81.origin.CGFloat x = a2;
    v81.origin.double y = a3;
    v81.size.double width = a4;
    v81.size.double height = a5;
    CGFloat Width = CGRectGetWidth(v81);
    CGAffineTransformMakeTranslation(&v51, Width, 0.0);
    CGAffineTransform v49 = v51;
    CGAffineTransformScale(&v50, &v49, -1.0, 1.0);
    CGAffineTransform v51 = v50;
    [v16 applyTransform:&v50];
  }

  return v16;
}

void sub_100996CD8(id a1)
{
  id v1 = objc_alloc_init(UserProfileLinkFavoritesProvider);
  unint64_t v2 = (void *)qword_101610240;
  qword_101610240 = (uint64_t)v1;
}

void sub_100998A28(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000AA148();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = (objc_class *)objc_opt_class();
    int v6 = NSStringFromClass(v5);
    int v7 = NSStringFromSelector(*(SEL *)(a1 + 48));
    uint64_t v8 = *(void *)(a1 + 40);
    int v9 = 138413058;
    CGFloat v10 = v6;
    __int16 v11 = 2112;
    CGFloat v12 = v7;
    __int16 v13 = 2112;
    id v14 = v3;
    __int16 v15 = 2112;
    uint64_t v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%@ %@, error = %@, cacheKedouble y = %@", (uint8_t *)&v9, 0x2Au);
  }
}

void sub_100998BF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _expirationTimerFired];
}

void sub_1009994F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10099951C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _layoutDottedLines];
}

id sub_1009998B0()
{
  if (qword_101610268 != -1) {
    dispatch_once(&qword_101610268, &stru_101312978);
  }
  uint64_t v0 = (void *)qword_101610260;

  return v0;
}

BOOL sub_100999BB4(id a1, SearchFieldItem *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = [(SearchFieldItem *)a2 composedWaypoint];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = v5;

  unsigned __int8 v7 = [v6 isServerProvidedWaypoint];
  return v7 ^ 1;
}

void sub_10099A3D4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = *(void **)(a1 + 32);
  id v7 = a2;
  uint64_t v8 = [RoutePlanningWaypointCell alloc];
  id v16 = v7;
  int v9 = +[NSArray arrayWithObjects:&v16 count:1];
  CGFloat v10 = +[NSNumber numberWithUnsignedInteger:a3];
  uint64_t v11 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(v12 + 8));
  id v14 = [(RoutePlanningWaypointCell *)v8 initWithWaypoints:v9 waypointIndex:v10 editable:v11 delegate:v12 waypointInfoProvider:WeakRetained cellIndex:a3];
  [v6 addObject:v14];

  if (*(void *)(a1 + 48) - 1 == a3) {
    *a4 = 1;
  }
}

void sub_10099AAD0(id a1)
{
  uint64_t v1 = +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
  unint64_t v2 = (void *)qword_101610250;
  qword_101610250 = v1;
}

BOOL sub_10099B81C(id a1, UITableViewCell *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_10099BBF8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if ([*(id *)(*(void *)(a1 + 32) + 48) count] == (id)(a3 + 1))
  {
    *a4 = 1;
  }
  else
  {
    id v8 = [*(id *)(*(void *)(a1 + 32) + 48) objectAtIndexedSubscript:a3];
    id v7 = +[NSIndexPath indexPathForRow:a3 inSection:0];
    [*(id *)(a1 + 32) _layoutDottedLineForCell:v8 atIndexPath:v7];
  }
}

id sub_10099C134(uint64_t a1)
{
  return [*(id *)(a1 + 32) setFrame: *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

void sub_10099C54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10099C564(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v12 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v8 = v12;
  if (isKindOfClass)
  {
    id v9 = v12;
    CGFloat v10 = [v9 currentText];
    id v11 = [v10 length];

    if (!v11)
    {
      *a4 = 1;
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    }

    id v8 = v12;
  }
}

void sub_10099D38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10099D3C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained performDeleteAtIndex:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

BOOL sub_10099DEE0(id a1, SearchFieldItem *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = [(SearchFieldItem *)a2 composedWaypoint];
  char v5 = [v4 isServerProvidedWaypoint] ^ 1;

  return v5;
}

void sub_10099E204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10099E230(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained performDeleteAtIndex:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

id sub_10099EE98(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10099F15C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningWaypointListView");
  unint64_t v2 = (void *)qword_101610260;
  qword_101610260 = (uint64_t)v1;
}

void sub_10099F5CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10099F608(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = [WeakRetained appCoordinator];
  [v1 dismissRidesharingSessionAndReturnToRoutePlanning:1];
}

void sub_10099FD58(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 8), *(id *)(a1 + 40));
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_1009A0060;
  v21[3] = &unk_1012E5D58;
  unint64_t v2 = *(void **)(a1 + 40);
  void v21[4] = *(void *)(a1 + 32);
  id v22 = v2;
  id v3 = objc_retainBlock(v21);
  uint64_t v4 = [*(id *)(a1 + 40) title];
  char v5 = [*(id *)(a1 + 40) message];
  id v6 = +[UIAlertController alertControllerWithTitle:v4 message:v5 preferredStyle:1];

  id v7 = [*(id *)(a1 + 40) openAppCommandTitle];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_1009A0108;
  id v18[3] = &unk_1012F45C8;
  id v19 = *(id *)(a1 + 40);
  id v8 = v3;
  id v20 = v8;
  id v9 = +[UIAlertAction actionWithTitle:v7 style:0 handler:v18];
  [v6 addAction:v9];

  CGFloat v10 = [*(id *)(a1 + 40) dismissCommandTitle];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1009A014C;
  v16[3] = &unk_1012E6E08;
  id v11 = v8;
  id v17 = v11;
  id v12 = +[UIAlertAction actionWithTitle:v10 style:1 handler:v16];
  [v6 addAction:v12];

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), v6);
  objc_initWeak(&location, v6);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_1009A015C;
  v13[3] = &unk_1013129A0;
  objc_copyWeak(&v14, &location);
  [*(id *)(a1 + 40) setDidSupersede:v13];
  [*(id *)(a1 + 48) presentViewController:v6 animated:1 completion:0];
  objc_destroyWeak(&v14);
  objc_destroyWeak(&location);
}

void sub_1009A0040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009A0060(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;

  id v4 = [*(id *)(a1 + 40) cause];
  if ((unint64_t)v4 >= 2)
  {
    if (v4 == (id)2)
    {
      char v5 = [*(id *)(a1 + 32) appCoordinator];
      id v7 = v5;
      uint64_t v6 = 1;
      goto LABEL_6;
    }
    if (v4 != (id)3) {
      return;
    }
  }
  char v5 = [*(id *)(a1 + 32) appCoordinator];
  id v7 = v5;
  uint64_t v6 = 0;
LABEL_6:
  [v5 dismissRidesharingSessionAndReturnToRoutePlanning:v6];
}

uint64_t sub_1009A0108(uint64_t a1)
{
  [*(id *)(a1 + 32) openApp];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

uint64_t sub_1009A014C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1009A015C(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained presentingViewController];

  if (v3)
  {
    id v4 = objc_loadWeakRetained(v1);
    [v4 dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_1009A01F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1009A033C()
{
  id v0 = [objc_alloc((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  [v0 setHidesWhenStopped:1];

  return v0;
}

id sub_1009A038C()
{
  id v0 = +[NSBundle mainBundle];
  os_log_t v1 = [v0 localizedStringForKey:@"Error Reporting Issue [RAP]" value:@"localized string not found" table:0];

  uint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"Error Reporting Issue Description [RAP]" value:@"localized string not found" table:0];

  id v4 = +[NSBundle mainBundle];
  char v5 = [v4 localizedStringForKey:@"OK [RAP]" value:@"localized string not found" table:0];

  uint64_t v6 = +[UIAlertController alertControllerWithTitle:v1 message:v3 preferredStyle:1];
  id v7 = +[UIAlertAction actionWithTitle:v5 style:0 handler:0];
  [v6 addAction:v7];

  return v6;
}

void sub_1009A0508(id a1)
{
  byte_101610270 = MGGetSInt32Answer() == 2;
  os_log_t v1 = sub_1009A05F0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    if (byte_101610270) {
      uint64_t v2 = @"YES";
    }
    else {
      uint64_t v2 = @"NO";
    }
    id v3 = v2;
    int v4 = 138412290;
    char v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Current device is notch device: %@", (uint8_t *)&v4, 0xCu);
  }
}

id sub_1009A05F0()
{
  if (qword_101610290 != -1) {
    dispatch_once(&qword_101610290, &stru_101312A00);
  }
  id v0 = (void *)qword_101610288;

  return v0;
}

void sub_1009A0688(id a1)
{
  byte_101610271 = SBSIsSystemApertureAvailable();
  os_log_t v1 = sub_1009A05F0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    if (byte_101610271) {
      uint64_t v2 = @"YES";
    }
    else {
      uint64_t v2 = @"NO";
    }
    id v3 = v2;
    int v4 = 138412290;
    char v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Current device is island device: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1009A075C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFDeviceInfo");
  uint64_t v2 = (void *)qword_101610288;
  qword_101610288 = (uint64_t)v1;
}

void sub_1009A1E60(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 104));
  _Unwind_Resume(a1);
}

void sub_1009A1E8C(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    char v5 = [a1[4] navigationController];

    if (v5)
    {
      [a1[5] stopAnimating];
      uint64_t v6 = [WeakRetained tableView];
      [v6 setTableHeaderView:0];

      id v7 = [v3 description];
      id v8 = +[UIAlertController alertControllerWithTitle:@"Error Communicating with Watch" message:v7 preferredStyle:1];

      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_1009A2004;
      v10[3] = &unk_1012E6DE0;
      id v11 = a1[4];
      id v9 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:v10];
      [v8 addAction:v9];

      [a1[4] presentViewController:v8 animated:1 completion:0];
    }
  }
}

void sub_1009A2004(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popViewControllerAnimated:1];
}

void sub_1009A2054(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1009A2100;
  void v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1009A2100(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1009A2114(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1009A2218;
  block[3] = &unk_1012EC7C8;
  objc_copyWeak(&v14, a1 + 6);
  id v10 = v6;
  id v13 = a1[5];
  id v11 = a1[4];
  id v12 = v5;
  id v7 = v5;
  id v8 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v14);
}

void sub_1009A2218(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    id v10 = WeakRetained;
    if (*(void *)(a1 + 32))
    {
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
    else
    {
      [*(id *)(a1 + 40) stopAnimating];
      id v3 = [v10 tableView];
      [v3 setTableHeaderView:0];

      objc_storeStrong(v10 + 13, *(id *)(a1 + 48));
      id v4 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"ActiveTileGroupData"];

      if (v4)
      {
        id v5 = objc_alloc((Class)GEOActiveTileGroup);
        id v6 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"ActiveTileGroupData"];
        id v7 = [v5 initWithData:v6];
        id v8 = v10[14];
        v10[14] = v7;
      }
      id v9 = [v10 tableView];
      [v9 reloadData];
    }
    id WeakRetained = v10;
  }
}

void sub_1009A28B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 104));
  _Unwind_Resume(a1);
}

void sub_1009A28DC(id *a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  if (WeakRetained)
  {
    [a1[4] stopAnimating];
    [a1[5] setAccessoryView:0];
    id v4 = [v7 description];
    id v5 = +[UIAlertController alertControllerWithTitle:@"Error fetching diagnostics string from Watch" message:v4 preferredStyle:1];

    id v6 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:0];
    [v5 addAction:v6];

    [a1[6] presentViewController:v5 animated:1 completion:0];
  }
}

void sub_1009A29D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1009A2A84;
  void v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1009A2A84(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1009A2A98(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1009A2BB8;
  block[3] = &unk_101312A78;
  objc_copyWeak(&v16, (id *)(a1 + 64));
  id v10 = v6;
  id v15 = *(id *)(a1 + 56);
  id v11 = *(id *)(a1 + 32);
  id v12 = *(id *)(a1 + 40);
  id v13 = v5;
  uint64_t v14 = *(void *)(a1 + 48);
  id v7 = v5;
  id v8 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v16);
}

void sub_1009A2BB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
    }
    else
    {
      [*(id *)(a1 + 40) stopAnimating];
      id v3 = +[UIImage kitImageNamed:@"UIAccessoryButtonCheckmark"];
      id v4 = [v3 imageWithRenderingMode:2];

      id v5 = [objc_alloc((Class)UIImageView) initWithImage:v4];
      id v6 = +[UIColor systemGreenColor];
      [v5 setTintColor:v6];

      [v5 sizeToFit];
      [*(id *)(a1 + 48) setAccessoryView:v5];
      uint64_t v7 = *(void *)(a1 + 56);
      id v8 = +[UIPasteboard generalPasteboard];
      [v8 setString:v7];

      NSLog(@"Paired Watch Diagnostic String: %@", *(void *)(a1 + 56));
      id v9 = NSTemporaryDirectory();
      id v10 = [v9 stringByAppendingPathComponent:@"Diagnostics.txt"];
      id v11 = +[NSURL fileURLWithPath:v10];

      id v12 = *(void **)(a1 + 56);
      id v17 = 0;
      [v12 writeToURL:v11 atomically:1 encoding:4 error:&v17];
      id v13 = v17;
      if (!v13)
      {
        uint64_t v14 = [[MapsDebugFileExportController alloc] initWithFileAtURL:v11 presentingViewController:*(void *)(a1 + 64)];
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        id v15[2] = sub_1009A2DE8;
        v15[3] = &unk_1012E5D08;
        id v16 = v11;
        [(MapsDebugFileExportController *)v14 startWithCompletion:v15];
      }
    }
  }
}

void sub_1009A2DE8(uint64_t a1)
{
  id v2 = +[NSFileManager defaultManager];
  [v2 removeItemAtURL:*(void *)(a1 + 32) error:0];
}

void sub_1009A3118(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v14 = 0;
  unsigned __int8 v4 = [v2 startNavigationWithDetails:v3 error:&v14];
  id v5 = v14;
  id v6 = GEOFindOrCreateLog();
  uint64_t v7 = v6;
  if (v4)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      uint64_t v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Started navigation. details=%@", buf, 0xCu);
    }
    goto LABEL_8;
  }
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    uint64_t v9 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v16 = v9;
    __int16 v17 = 2112;
    id v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Unable to start navigation. error=%@, details=%@", buf, 0x16u);
  }

  id v10 = +[GEOPlatform sharedPlatform];
  unsigned int v11 = [v10 isInternalInstall];

  if (v11)
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1009A32E4;
    v12[3] = &unk_1012E5D08;
    id v13 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
    uint64_t v7 = v13;
LABEL_8:
  }
}

void sub_1009A32E4(uint64_t a1)
{
  id v5 = +[NSString stringWithFormat:@"Error: %@", *(void *)(a1 + 32)];
  id v1 = +[UIAlertController alertControllerWithTitle:@"Navigation failed to start [Internal Only]" message:v5 preferredStyle:1];
  id v2 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:0];
  [v1 addAction:v2];

  uint64_t v3 = +[UIApplication _maps_keyMapsSceneDelegate];
  unsigned __int8 v4 = [v3 topMostPresentedViewController];
  [v4 presentViewController:v1 animated:1 completion:0];
}

void sub_1009A3770(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned __int8 v4 = *(void **)(*(void *)(a1 + 32) + 8);
  id v5 = a2;
  id v6 = [v4 objectAtIndexedSubscript:a3];
  [v6 setViewModel:v5];
}

MapViewModeGridButtonView *sub_1009A3BA4(uint64_t a1)
{
  id v2 = -[MapViewModeGridButtonView initWithFrame:]([MapViewModeGridButtonView alloc], "initWithFrame:", CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);
  [(MapViewModeGridButtonView *)v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)(a1 + 32) addSubview:v2];

  return v2;
}

void sub_1009A3C10(id a1, UIView *a2)
{
}

id sub_1009A3C18(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)UILayoutGuide);
  [*(id *)(a1 + 32) addLayoutGuide:v2];

  return v2;
}

id sub_1009A3C68(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) removeLayoutGuide:a2];
}

void sub_1009A4A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1009A4AA0(uint64_t a1, unsigned char *a2, void *a3)
{
  id v5 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v6 = a3;
  uint64_t v7 = [v5 collectionView];
  uint64_t v8 = [v7 dataSource];

  if (!v8)
  {
    id v28 = sub_1005762E4();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      uint64_t v38 = "+[RoutePlanningOutlineController defaultCollectionViewLayout]_block_invoke";
      __int16 v39 = 2080;
      CGFloat v40 = "RoutePlanningOutlineController.m";
      __int16 v41 = 1024;
      LODWORD(v42[0]) = 69;
      WORD2(v42[0]) = 2080;
      *(void *)((char *)v42 + 6) = "controller != nil";
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
    }

    if (sub_100BB36BC())
    {
      __int16 v29 = sub_1005762E4();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        CGFloat v30 = +[NSThread callStackSymbols];
        *(_DWORD *)buf = 138412290;
        uint64_t v38 = v30;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
    }
    CGFloat v31 = sub_1009A4EB4();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
    {
      CGFloat v32 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
      CGFloat v33 = [v32 collectionView];
      CGFloat v34 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) collectionView];
      double v35 = [v34 dataSource];
      *(_DWORD *)buf = 138478339;
      uint64_t v38 = (const char *)v32;
      __int16 v39 = 2113;
      CGFloat v40 = v33;
      __int16 v41 = 2113;
      v42[0] = v35;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "No controller for returning a collectionview layout section. layout: %{private}@, collectionView: %{private}@, dataSource: %{private}@", buf, 0x20u);
    }
  }
  uint64_t v9 = [v8 outlineSectionAtIndex:a2];
  id v10 = [v8 _localSectionForGlobalSectionIndex:a2 forSection:v9];
  unsigned int v11 = [v9 layoutSectionAtIndex:v10 layoutEnvironment:v6];

  unsigned int v12 = [v9 wantsDefaultPaddingAboveSection];
  if (v10) {
    BOOL v13 = 1;
  }
  else {
    BOOL v13 = v12 == 0;
  }
  if (!v13 && [v8 _positionOfSection:v9])
  {
    [v11 contentInsets];
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;
    id v20 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) collectionView];
    if (sub_1000BBB44(v20) == 5) {
      double v21 = 10.0;
    }
    else {
      double v21 = 12.0;
    }

    [v11 setContentInsets:v21, v15, v17, v19];
  }
  if ((char *)[v8 totalAvailableSections] - 1 == a2)
  {
    id v22 = +[NSCollectionLayoutDimension estimatedDimension:1.0];
    double v23 = +[NSCollectionLayoutDimension estimatedDimension:1.0];
    double v24 = +[NSCollectionLayoutSize sizeWithWidthDimension:v22 heightDimension:v23];
    id v25 = +[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:v24 elementKind:UICollectionElementKindSectionFooter alignment:4];
    CGFloat v36 = v25;
    id v26 = +[NSArray arrayWithObjects:&v36 count:1];
    [v11 setBoundarySupplementaryItems:v26];
  }

  return v11;
}

id sub_1009A4EB4()
{
  if (qword_1016102A0 != -1) {
    dispatch_once(&qword_1016102A0, &stru_101312C38);
  }
  id v0 = (void *)qword_101610298;

  return v0;
}

void sub_1009A54A8(uint64_t a1)
{
  id v2 = sub_1005775E4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    if (*(unsigned char *)(a1 + 40)) {
      uint64_t v3 = "hide";
    }
    else {
      uint64_t v3 = "show";
    }
    int v4 = 136315138;
    id v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Will %s all sections...", (uint8_t *)&v4, 0xCu);
  }

  *(unsigned char *)(*(void *)(a1 + 32) + 80) = *(unsigned char *)(a1 + 40);
}

void sub_1009A5990(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setHost:v3];
  id v5 = *(void **)(*(void *)(a1 + 32) + 40);
  id v6 = [v4 sectionIdentifier];
  [v5 setObject:v4 forKeyedSubscript:v6];
}

BOOL sub_1009A5B80(id a1, RoutePlanningOutlineSection *a2, NSDictionary *a3)
{
  return [(RoutePlanningOutlineSection *)a2 isActive];
}

void sub_1009A5D2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

void sub_1009A5D4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v9 = [v3 sectionIdentifier];
  id v4 = [v3 numberOfSections];

  id v5 = +[NSNumber numberWithInteger:v4];
  [*(id *)(*(void *)(a1 + 32) + 56) setObject:v5 forKeyedSubscript:v9];

  id v6 = +[NSNumber numberWithInteger:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
  [*(id *)(*(void *)(a1 + 32) + 64) setObject:v6 forKeyedSubscript:v9];

  uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 72);
  uint64_t v8 = +[NSNumber numberWithInteger:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
  [v7 setObject:v9 forKeyedSubscript:v8];

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) += v4;
}

void sub_1009A65F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1009A6608(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) cellForItemAtIndexPath:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1009A7070(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningOutlineController");
  uint64_t v2 = (void *)qword_101610298;
  qword_101610298 = (uint64_t)v1;
}

id sub_1009A8A48(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setupTrayLayoutAndPerformScrollTest];
}

id sub_1009A8B08(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _expandCollectionsList];
}

id sub_1009A8BA0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _openFirstCollection];
}

id sub_1009A8C4C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _expandCollection];
}

id sub_1009A8D38(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1009A8DA8;
  v3[3] = &unk_1012E5D08;
  void v3[4] = v1;
  return [v1 _dispatchAfterShortDelay:v3];
}

id sub_1009A8DA8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _dismissCollection];
}

id sub_1009A8DB0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _dismissCollection];
}

void sub_1009A8E50(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) testCoordinator];
  uint64_t v3 = [v2 pptTestScrollView];

  id v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_1009A8EFC;
  void v5[3] = &unk_101312CC0;
  void v5[4] = v4;
  [v4 _performScrollTestOfScrollView:v3 completion:v5];
}

id sub_1009A8EFC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 results];
  [v5 addEntriesFromDictionary:v4];

  id v6 = *(void **)(a1 + 32);

  return [v6 finishedTest];
}

uint64_t sub_1009A9014(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1009A9128(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1009A9194(id a1)
{
  os_log_t v1 = [MapsSuggestionsNavdLBALocationManager alloc];
  id v5 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("MapsSuggestionsNavdLBALocationManagerQueue", v5);
  uint64_t v3 = [(MapsSuggestionsNavdLBALocationManager *)v1 initWithName:@"MapsSuggestionsNavdLBALocationManager" queue:v2];
  id v4 = (void *)qword_1016102C8;
  qword_1016102C8 = (uint64_t)v3;
}

BOOL sub_1009A97F0(id a1, id a2, NSDictionary *a3)
{
  id v3 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return (isKindOfClass & 1) == 0;
}

uint64_t sub_1009A9D8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1009AB16C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [WeakRetained didPresentContainee:*(void *)(a1 + 40) finished:1];

  [*(id *)(*(void *)(a1 + 32) + 8) removeObjectForKey:*(void *)(a1 + 48)];
  id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [v3 didResignContainee:*(void *)(a1 + 48) finished:1];

  [*(id *)(a1 + 40) didBecomeCurrent];
  id v4 = [*(id *)(a1 + 40) view];
  [v4 setUserInteractionEnabled:1];

  id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [v5 transitionEnded];

  uint64_t v6 = *(void *)(a1 + 56);
  if (v6) {
    (*(void (**)(void))(v6 + 16))();
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
  [*(id *)(a1 + 32) dequeueWaitingContainees];
  uint64_t result = *(void *)(a1 + 64);
  if (result)
  {
    uint64_t v8 = *(uint64_t (**)(void))(result + 16);
    return v8();
  }
  return result;
}

uint64_t sub_1009AB26C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [WeakRetained didPresentContainee:*(void *)(a1 + 40) finished:1];

  id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [v3 didResignContainee:*(void *)(a1 + 48) finished:1];

  [*(id *)(a1 + 40) didBecomeCurrent];
  id v4 = [*(id *)(a1 + 40) view];
  [v4 setUserInteractionEnabled:1];

  id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [v5 transitionEnded];

  uint64_t v6 = *(void *)(a1 + 56);
  if (v6) {
    (*(void (**)(void))(v6 + 16))();
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
  id v7 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  uint64_t v8 = [v7 topMostPresentedViewController];
  id v9 = [v8 transitionCoordinator];

  id v10 = *(id **)(a1 + 32);
  if (v9)
  {
    id v11 = objc_loadWeakRetained(v10 + 3);
    unsigned int v12 = [v11 topMostPresentedViewController];
    BOOL v13 = [v12 transitionCoordinator];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1009AB464;
    id v18[3] = &unk_1012E81F8;
    void v18[4] = *(void *)(a1 + 32);
    [v13 animateAlongsideTransition:0 completion:v18];
  }
  else
  {
    [v10 dequeueWaitingContainees];
  }
  id v14 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  double v15 = [v14 view];
  [v15 setNeedsLayout];

  double v16 = [*(id *)(a1 + 40) cardPresentationController];
  [*(id *)(a1 + 40) setModalTransitionStyle:[v16 modalDismissStyle]];

  uint64_t result = *(void *)(a1 + 64);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

id sub_1009AB464(uint64_t a1)
{
  return [*(id *)(a1 + 32) dequeueWaitingContainees];
}

id sub_1009AB46C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _addTheModalPresenter];
}

void sub_1009AB474(uint64_t a1)
{
  dispatch_queue_t v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  void v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v5];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 24));
  [WeakRetained updateMapEdgeInsets];
}

id *sub_1009AB4D8(id *result)
{
  os_log_t v1 = result;
  switch((unint64_t)result[7])
  {
    case 0uLL:
      [result[5] deltaHeight];
      double v3 = *((double *)v1 + 8) - *((double *)v1 + 9);
      if (v3 < 0.0) {
        double v3 = 0.0;
      }
      CGAffineTransformMakeTranslation(&v15, 0.0, v2 + v3);
      id v4 = v1[4];
      CGAffineTransform v14 = v15;
      id v5 = &v14;
      goto LABEL_10;
    case 1uLL:
      [result[6] willMoveToParentViewController:0];
      CGAffineTransformMakeTranslation(&v11, 0.0, *((CGFloat *)v1 + 8));
      id v4 = v1[4];
      CGAffineTransform v10 = v11;
      id v5 = &v10;
      goto LABEL_10;
    case 2uLL:
      CGAffineTransformMakeScale(&v13, 0.970000029, 0.970000029);
      id v4 = v1[4];
      CGAffineTransform v12 = v13;
      id v5 = &v12;
      goto LABEL_10;
    case 3uLL:
      [result[6] willMoveToParentViewController:0];
      [v1[4] bounds];
      double v7 = -v6;
      if (*((unsigned char *)v1 + 81)) {
        double v7 = v6;
      }
      CGAffineTransformMakeTranslation(&v9, v7, 0.0);
      id v4 = v1[4];
      CGAffineTransform v8 = v9;
      id v5 = &v8;
LABEL_10:
      uint64_t result = [v4 setTransform:v5, *(_OWORD *)&v8.a, *(_OWORD *)&v8.c, *(_OWORD *)&v8.tx];
      break;
    default:
      return result;
  }
  return result;
}

void sub_1009AB638(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)(a1 + 32);
  if (v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 24));
    [v3 didMoveToParentViewController:WeakRetained];

    [*(id *)(a1 + 32) didChangeLayout:*(void *)(a1 + 64)];
    [*(id *)(a1 + 48) setUserInteractionEnabled:1];
    id v6 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 24));
    [v6 didPresentContainee:*(void *)(a1 + 32) finished:a2];
  }
  double v7 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v7);
}

void sub_1009AB6D8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 88) && !*(unsigned char *)(a1 + 89) && !*(void *)(a1 + 32)) {
    [*(id *)(a1 + 40) setModalPresenter:*(void *)(a1 + 48)];
  }
  if (*(unsigned char *)(a1 + 89) || !*(unsigned char *)(a1 + 88))
  {
    unsigned int v21 = a2;
    id v4 = objc_opt_new();
    id v5 = *(id *)(a1 + 56);
    if (!v5) {
      goto LABEL_20;
    }
    while (1)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v22 = v5;
      id v6 = [v5 constraints];
      id v7 = [v6 countByEnumeratingWithState:&v24 objects:v28 count:16];
      if (!v7) {
        goto LABEL_19;
      }
      id v8 = v7;
      uint64_t v9 = *(void *)v25;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v25 != v9) {
            objc_enumerationMutation(v6);
          }
          CGAffineTransform v11 = *(void **)(*((void *)&v24 + 1) + 8 * i);
          CGAffineTransform v12 = [v11 firstItem];
          CGAffineTransform v13 = v12;
          if (v12 == *(void **)(a1 + 56))
          {
          }
          else
          {
            CGAffineTransform v14 = [v11 secondItem];
            CGAffineTransform v15 = *(void **)(a1 + 56);

            if (v14 != v15) {
              continue;
            }
          }
          [v4 addObject:v11];
        }
        id v8 = [v6 countByEnumeratingWithState:&v24 objects:v28 count:16];
      }
      while (v8);
LABEL_19:

      uint64_t v16 = [v22 superview];

      id v5 = (id)v16;
      if (!v16)
      {
LABEL_20:
        +[NSLayoutConstraint deactivateConstraints:v4];
        [*(id *)(a1 + 56) removeFromSuperview];
        id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 64) + 24));
        [WeakRetained removeCardforViewController:*(void *)(a1 + 48)];

        double v18 = *(void **)(a1 + 56);
        long long v19 = *(_OWORD *)&CGAffineTransformIdentity.c;
        v23[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
        v23[1] = v19;
        void v23[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
        [v18 setTransform:v23];
        [*(id *)(a1 + 48) removeFromParentViewController];
        [*(id *)(*(void *)(a1 + 64) + 8) removeObjectForKey:*(void *)(a1 + 48)];

        a2 = v21;
        break;
      }
    }
  }
  if (*(unsigned char *)(a1 + 90) && !*(unsigned char *)(a1 + 91)) {
    [*(id *)(a1 + 72) setModalPresenter:0];
  }
  if (*(unsigned char *)(a1 + 92)) {
    [*(id *)(a1 + 48) shoulDismissForVerticalSwipe_nonUIKitCardsOnly];
  }
  id v20 = objc_loadWeakRetained((id *)(*(void *)(a1 + 64) + 24));
  [v20 didResignContainee:*(void *)(a1 + 48) finished:a2];

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 80));
}

void sub_1009AB970(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1009ABB1C;
    void v8[3] = &unk_1012E5D08;
    void v8[4] = *(void *)(a1 + 32);
    +[UIView performWithoutAnimation:v8];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [WeakRetained transitionEnded];

  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
  if (*(unsigned char *)(a1 + 57))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1009ABB24;
    block[3] = &unk_1012E5D08;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
    [*(id *)(a1 + 32) dequeueWaitingContainees];
  }
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, 1);
  }
  [@"com.apple.Maps" UTF8String];
  id v5 = GEOFindOrCreateLog();
  if (os_signpost_enabled(v5))
  {
    *(_WORD *)id v6 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "CardPresentationDuration", "", v6, 2u);
  }
}

id sub_1009ABB1C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _addTheModalPresenter];
}

id sub_1009ABB24(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
  return [*(id *)(a1 + 32) dequeueWaitingContainees];
}

uint64_t sub_1009ABB34(uint64_t result)
{
  if (*(unsigned char *)(result + 40)) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16))();
  }
  return result;
}

void sub_1009ABB50(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  uint64_t v3 = [WeakRetained view];
  [v3 setNeedsLayout];

  id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  uint64_t v4 = [v5 view];
  [v4 layoutIfNeeded];
}

uint64_t sub_1009ABBF0(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  *(void *)(*(void *)(a1 + 32) + 40) = 0;
  return result;
}

void sub_1009ABC28(void *a1)
{
  (*(void (**)(void))(a1[5] + 16))();
  (*(void (**)(void))(a1[6] + 16))();
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 24));
  double v2 = [WeakRetained view];
  [v2 layoutIfNeeded];
}

uint64_t sub_1009ABCA8(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  double v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

UIColor *__cdecl sub_1009AC4E4(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)2) {
    +[UIColor systemWhiteColor];
  }
  else {
  double v2 = +[UIColor systemBlueColor];
  }

  return (UIColor *)v2;
}

BOOL sub_1009AC77C(id a1, GEOComposedRouteAdvisory *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOComposedRouteAdvisory *)a2 isClickable];
}

void sub_1009AD028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_1009AD060(uint64_t a1, void *a2)
{
}

id sub_1009AD070(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setObject:a2 forKeyedSubscript:*(void *)(a1 + 40)];
}

uint64_t sub_1009AD080(uint64_t a1)
{
  double v2 = sub_10057611C();
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 64);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)id v8 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "ParseRichText", "", v8, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v6 = [WeakRetained _mergeRichTextCollectionDescription:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) itemDescriptions:*(void *)(a1 + 32)];

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, id))(result + 16))(result, v6);
  }
  return result;
}

id sub_1009AD2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setObject:a3 forKeyedSubscript:a2];
}

void sub_1009AD5D4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  if (!v6 || v7)
  {
    id v8 = sub_10057611C();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error parsing description HTML: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1009ADAF8(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    double v2 = objc_alloc_init(MapsActivity);
    [(MapsActivity *)v2 setDirectionsPlan:*(void *)(a1 + 32)];
    [(MapsActivity *)v2 data];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1009ADBEC;
    block[3] = &unk_1012E5D08;
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    id v3 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, &stru_101312F60);
  }
}

void sub_1009ADBEC(uint64_t a1)
{
  double v2 = sub_100084D38();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "_saveDirectionPlan: will save plan", v5, 2u);
  }

  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:*(void *)(a1 + 32) forKey:@"NavigationUserActivityDefault"];

  os_signpost_id_t v4 = +[NSUserDefaults standardUserDefaults];
  [v4 removeObjectForKey:@"NavigationRestorationAttempts"];
}

void sub_1009ADCA8(id a1)
{
  os_log_t v1 = sub_100084D38();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)os_signpost_id_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "_saveDirectionPlan: will remove saved data", v4, 2u);
  }

  double v2 = +[NSUserDefaults standardUserDefaults];
  [v2 removeObjectForKey:@"NavigationUserActivityDefault"];

  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 removeObjectForKey:@"NavigationRestorationAttempts"];
}

void sub_1009AE404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1009AEB38(id a1, id a2, RAPPlacecardImageryQuestion *a3)
{
  id v3 = a3;
  [(RAPQuestion *)v3 _setComplete:[(RAPPlacecardImageryQuestion *)v3 isComplete]];
}

void sub_1009AF378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009AF394(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (!a3 && [v7 count])
    {
      id v6 = [v7 firstObject];
      [WeakRetained updateWithReverseGeocodedMapItem:v6];
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_1009AF6F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1009AFD68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1009AFD84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id v7 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a5 = 1;
  }
}

void sub_1009B0170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1009B0190(uint64_t a1, void *a2)
{
  id v13 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v5 = v13;
  if (isKindOfClass)
  {
    id v6 = v13;
    id v7 = [v6 image];
    [v7 size];
    double v9 = v8;
    id v10 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) image];
    [v10 size];
    double v12 = v11;

    if (v9 > v12) {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    }

    id v5 = v13;
  }
}

id sub_1009B05E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateLabel];
}

void sub_1009B17BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v9 - 104));
  _Unwind_Resume(a1);
}

void sub_1009B17D8(id *a1)
{
  double v2 = a1 + 7;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  os_signpost_id_t v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained currentContent];
    id v6 = [v5 mutableCopy];

    id v7 = [a1[4] row];
    if (v7 < [v6 count]
      && ([v6 objectAtIndexedSubscript:v7],
          id v8 = (id)objc_claimAutoreleasedReturnValue(),
          id v9 = a1[5],
          v8,
          v8 == v9))
    {
      [v6 removeObjectAtIndex:v7];
      id v11 = [v6 copy];
      double v12 = (void *)v4[17];
      v4[17] = v11;

      id v10 = [v4 tableView];
      id v23 = a1[4];
      id v13 = +[NSArray arrayWithObjects:&v23 count:1];
      [v10 deleteRowsAtIndexPaths:v13 withRowAnimation:100];
    }
    else
    {
      id v10 = sub_1000B944C();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109120;
        int v22 = (int)v7;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Wrong collection item found at index %d after confirming deletion", buf, 8u);
      }
    }

    CGAffineTransform v14 = (void *)v4[15];
    CGAffineTransform v15 = +[NSSet setWithObject:a1[5]];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_1009B1A70;
    v16[3] = &unk_101312FF0;
    objc_copyWeak(&v20, v2);
    id v19 = a1[6];
    id v17 = a1[4];
    id v18 = a1[5];
    [v14 removeObjects:v15 completion:v16];

    objc_destroyWeak(&v20);
  }
}

void sub_1009B1A54(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1009B1A70(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    id v6 = WeakRetained;
    if (v5)
    {
      (*(void (**)(uint64_t, BOOL))(v5 + 16))(v5, a2 == 0);
      id WeakRetained = v6;
    }
    if (!a2)
    {
      [WeakRetained sendAnalyticsForDataAtIndexPath:*(void *)(a1 + 32) object:*(void *)(a1 + 40) action:2009];
      id WeakRetained = v6;
    }
  }
}

uint64_t sub_1009B1AF8(uint64_t a1, int a2)
{
  if (a2) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    os_signpost_id_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_1009B2924(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1009B2940(uint64_t a1, void *a2)
{
  id v3 = a2;
  os_signpost_id_t v4 = sub_1000AA148();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "RDS _deleteAction", v6, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained deleteRowAtIndexPath:*(void *)(a1 + 32) completion:v3];
}

void sub_1009B2B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009B2B40(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained deleteRowAtIndexPath:*(void *)(a1 + 32) completion:0];
    id WeakRetained = v3;
  }
}

void sub_1009B2C7C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1009B2C98(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, 1);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained shareRowAtIndexPath:*(void *)(a1 + 32) completion:&stru_101313010];
}

void sub_1009B2E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009B2E6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained shareRowAtIndexPath:*(void *)(a1 + 32) completion:0];
    id WeakRetained = v3;
  }
}

void sub_1009B3024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009B304C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = *(void *)(a1 + 32);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1009B3104;
  v9[3] = &unk_1012E6EA8;
  id v10 = v5;
  id v8 = v5;
  [WeakRetained editNameRowAtIndexPath:v7 completion:v9];
}

uint64_t sub_1009B3104(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1009B3258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009B327C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained editNameRowAtIndexPath:*(void *)(a1 + 32) completion:0];
    id WeakRetained = v3;
  }
}

id sub_1009B3DF0(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1009B4768(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained cleanUp];

  uint64_t v4 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v4 + 112))
  {
    *(_DWORD *)(v4 + _Block_object_dispose(&STACK[0x7A0], 8) = 181;
    uint64_t v5 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 40) muid]);
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void **)(v6 + 24);
    *(void *)(v6 + 24) = v5;

    uint64_t v8 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 64)];
    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = *(void **)(v9 + 32);
    *(void *)(v9 + 32) = v8;

    id v11 = [objc_alloc((Class)NSNumber) initWithUnsignedLongLong:[*(id *)(a1 + 48) muid]];
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = *(void **)(v12 + 64);
    *(void *)(v12 + 64) = v11;

    id v14 = objc_loadWeakRetained(v2);
    [v14 logEvent];

    CGAffineTransform v15 = sub_10057611C();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged featured guide tap.", v16, 2u);
    }
  }
}

void sub_1009B4950(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cleanUp];

  uint64_t v4 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v4 + 112))
  {
    *(_DWORD *)(v4 + _Block_object_dispose(&STACK[0x7A0], 8) = 147;
    id v5 = objc_loadWeakRetained(v2);
    [v5 logEvent];

    uint64_t v6 = sub_10057611C();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged city selector tap.", v7, 2u);
    }
  }
}

void sub_1009B4AB8(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 210;
  id v4 = objc_loadWeakRetained(v2);
  [v4 logEvent];

  id v5 = sub_10057611C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged city guides more button tapped.", v6, 2u);
  }
}

void sub_1009B4C18(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 21;
  uint64_t v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", [*(id *)(*(void *)(a1 + 32) + 104) muid]);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 16);
  *(void *)(v5 + 16) = v4;

  uint64_t v7 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [*(id *)(*(void *)(a1 + 32) + 104) resultProviderID]);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 72);
  *(void *)(v8 + 72) = v7;

  id v10 = objc_loadWeakRetained(v2);
  [v10 logEvent];

  id v11 = sub_10057611C();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged reveal", buf, 2u);
  }
}

void sub_1009B4E18(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 177;
  uint64_t v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", [*(id *)(a1 + 40) muid]);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 16);
  *(void *)(v5 + 16) = v4;

  uint64_t v7 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [*(id *)(a1 + 40) resultProviderID]);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 72);
  *(void *)(v8 + 72) = v7;

  uint64_t v10 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void **)(v11 + 48);
  *(void *)(v11 + 4_Block_object_dispose(&STACK[0x7A0], 8) = v10;

  uint64_t v13 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  uint64_t v14 = *(void *)(a1 + 32);
  CGAffineTransform v15 = *(void **)(v14 + 56);
  *(void *)(v14 + 56) = v13;

  id v16 = objc_loadWeakRetained(v2);
  [v16 logEvent];

  id v17 = sub_10057611C();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged city guide tap.", buf, 2u);
  }
}

void sub_1009B5050(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 2102;
  uint64_t v4 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 40) muid]);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 64);
  *(void *)(v5 + 64) = v4;

  uint64_t v7 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [*(id *)(a1 + 40) resultProviderID]);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 72);
  *(void *)(v8 + 72) = v7;

  uint64_t v10 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;

  uint64_t v13 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  uint64_t v14 = *(void *)(a1 + 32);
  CGAffineTransform v15 = *(void **)(v14 + 56);
  *(void *)(v14 + 56) = v13;

  id v16 = objc_loadWeakRetained(v2);
  [v16 logEvent];

  id v17 = sub_10057611C();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged publisher tap.", v18, 2u);
  }
}

void sub_1009B52B0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 187;
  uint64_t v4 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 40) muid]);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 24);
  *(void *)(v5 + 24) = v4;

  uint64_t v7 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 48) muid]);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 64);
  *(void *)(v8 + 64) = v7;

  uint64_t v10 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 80)];
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void **)(v11 + 32);
  *(void *)(v11 + 32) = v10;

  uint64_t v13 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  uint64_t v14 = *(void *)(a1 + 32);
  CGAffineTransform v15 = *(void **)(v14 + 40);
  *(void *)(v14 + 40) = v13;

  uint64_t v16 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 72)];
  uint64_t v17 = *(void *)(a1 + 32);
  id v18 = *(void **)(v17 + 56);
  *(void *)(v17 + 56) = v16;

  id v19 = objc_loadWeakRetained(v2);
  [v19 logEvent];

  id v20 = sub_10057611C();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)unsigned int v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged latest guide tap.", v21, 2u);
  }
}

void sub_1009B5530(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 188;
  uint64_t v4 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 40) muid]);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 24);
  *(void *)(v5 + 24) = v4;

  uint64_t v7 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 48) muid]);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 64);
  *(void *)(v8 + 64) = v7;

  uint64_t v10 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 80)];
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void **)(v11 + 32);
  *(void *)(v11 + 32) = v10;

  uint64_t v13 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  uint64_t v14 = *(void *)(a1 + 32);
  CGAffineTransform v15 = *(void **)(v14 + 48);
  *(void *)(v14 + 4_Block_object_dispose(&STACK[0x7A0], 8) = v13;

  uint64_t v16 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 72)];
  uint64_t v17 = *(void *)(a1 + 32);
  id v18 = *(void **)(v17 + 56);
  *(void *)(v17 + 56) = v16;

  id v19 = objc_loadWeakRetained(v2);
  [v19 logEvent];

  id v20 = sub_10057611C();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)unsigned int v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged temporal guide tap.", v21, 2u);
  }
}

void sub_1009B57B0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 2198;
  uint64_t v4 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 40) muid]);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 24);
  *(void *)(v5 + 24) = v4;

  uint64_t v7 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 48) muid]);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 64);
  *(void *)(v8 + 64) = v7;

  uint64_t v10 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 80)];
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void **)(v11 + 32);
  *(void *)(v11 + 32) = v10;

  uint64_t v13 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  uint64_t v14 = *(void *)(a1 + 32);
  CGAffineTransform v15 = *(void **)(v14 + 48);
  *(void *)(v14 + 4_Block_object_dispose(&STACK[0x7A0], 8) = v13;

  uint64_t v16 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 72)];
  uint64_t v17 = *(void *)(a1 + 32);
  id v18 = *(void **)(v17 + 56);
  *(void *)(v17 + 56) = v16;

  id v19 = objc_loadWeakRetained(v2);
  [v19 logEvent];

  id v20 = sub_10057611C();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)unsigned int v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged editor picked guide tap.", v21, 2u);
  }
}

void sub_1009B59FC(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 49;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), *(id *)(a1 + 40));
  uint64_t v4 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 48);
  *(void *)(v5 + 4_Block_object_dispose(&STACK[0x7A0], 8) = v4;

  uint64_t v7 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 56);
  *(void *)(v8 + 56) = v7;

  id v10 = objc_loadWeakRetained(v2);
  [v10 logEvent];

  uint64_t v11 = sub_10057611C();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged filter tap.", v12, 2u);
  }
}

void sub_1009B5BC8(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 204;
  id v4 = objc_alloc_init((Class)NSMutableString);
  uint64_t v5 = *(void **)(a1 + 40);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_1009B5D1C;
  v13[3] = &unk_101313088;
  id v14 = v5;
  id v6 = v4;
  id v15 = v6;
  [v14 enumerateObjectsUsingBlock:v13];
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  id v9 = v6;

  id v10 = objc_loadWeakRetained(v2);
  [v10 logEvent];

  uint64_t v11 = sub_10057611C();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged filtered guide list displayed.", v12, 2u);
  }
}

void sub_1009B5D1C(uint64_t a1, void *a2, char *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a2;
  uint64_t v7 = (char *)[v5 count] - 1;
  uint64_t v8 = *(void **)(a1 + 40);
  id v9 = [v6 muid];

  if (v7 == a3) {
    CFStringRef v10 = @"%llu";
  }
  else {
    CFStringRef v10 = @"%llu,";
  }
  +[NSString stringWithFormat:](NSString, "stringWithFormat:", v10, v9);
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  [v8 appendString:v11];
}

void sub_1009B5F18(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 244;
  uint64_t v4 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 40) muid]);
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 24);
  *(void *)(v5 + 24) = v4;

  uint64_t v7 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 48) muid]);
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(v8 + 64);
  *(void *)(v8 + 64) = v7;

  uint64_t v10 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 88)];
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void **)(v11 + 32);
  *(void *)(v11 + 32) = v10;

  uint64_t v13 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 72)];
  uint64_t v14 = *(void *)(a1 + 32);
  id v15 = *(void **)(v14 + 40);
  *(void *)(v14 + 40) = v13;

  uint64_t v16 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 80)];
  uint64_t v17 = *(void *)(a1 + 32);
  id v18 = *(void **)(v17 + 56);
  *(void *)(v17 + 56) = v16;

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), *(id *)(a1 + 56));
  id v19 = objc_loadWeakRetained(v2);
  [v19 logEvent];

  id v20 = sub_10057611C();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)unsigned int v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged tapped filtered guide.", v21, 2u);
  }
}

void sub_1009B6144(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 7;
  id v4 = objc_loadWeakRetained(v2);
  [v4 logEvent];

  uint64_t v5 = sub_10057611C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged scroll up.", v6, 2u);
  }
}

void sub_1009B62A4(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 8;
  id v4 = objc_loadWeakRetained(v2);
  [v4 logEvent];

  uint64_t v5 = sub_10057611C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged scroll down.", v6, 2u);
  }
}

void sub_1009B6404(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 4;
  id v4 = objc_loadWeakRetained(v2);
  [v4 logEvent];

  uint64_t v5 = sub_10057611C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "GuidesHomeAnalyticsManager logged guide home closed.", v6, 2u);
  }
}

void sub_1009B7530(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6 && [v5 count])
  {
    uint64_t v25 = a1;
    uint64_t v8 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v5 count]);
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id v9 = v5;
    id v10 = [v9 countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (!v10)
    {
      uint64_t v12 = 0;
      goto LABEL_20;
    }
    id v11 = v10;
    uint64_t v12 = 0;
    uint64_t v13 = *(void *)v27;
    while (1)
    {
      uint64_t v14 = 0;
      do
      {
        if (*(void *)v27 != v13) {
          objc_enumerationMutation(v9);
        }
        id v15 = *(void **)(*((void *)&v26 + 1) + 8 * (void)v14);
        uint64_t v16 = [[SearchResult alloc] initWithMapItem:v15];
        uint64_t v17 = [v15 _displayMapRegion];
        id v18 = (void *)v17;
        if (v12)
        {
          uint64_t v19 = GEOMapRegionUnion();

          uint64_t v12 = (void *)v19;
          if (!v16) {
            goto LABEL_13;
          }
LABEL_12:
          [v8 addObject:v16];
          goto LABEL_13;
        }
        uint64_t v12 = (void *)v17;
        if (v16) {
          goto LABEL_12;
        }
LABEL_13:

        uint64_t v14 = (char *)v14 + 1;
      }
      while (v11 != v14);
      id v20 = [v9 countByEnumeratingWithState:&v26 objects:v30 count:16];
      id v11 = v20;
      if (!v20)
      {
LABEL_20:

        unsigned int v21 = +[SearchInfo searchInfoWithResults:v8 boundingMapRegion:v12];
        int v22 = objc_alloc_init(SearchFieldItem);
        id v23 = [*(id *)(v25 + 32) objectForKeyedSubscript:@"MKPlaceBrandUserActivityName"];
        [(SearchFieldItem *)v22 setSearchString:v23];

        uint64_t v24 = *(void *)(v25 + 40);
        if (v24) {
          (*(void (**)(uint64_t, SearchFieldItem *, void *))(v24 + 16))(v24, v22, v21);
        }

        id v6 = 0;
        goto LABEL_23;
      }
    }
  }
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    (*(void (**)(uint64_t, void, void))(v7 + 16))(v7, 0, 0);
  }
LABEL_23:
}

void sub_1009B77A8(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 locationDisplayString];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1009B796C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1009B98C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 176));
  _Unwind_Resume(a1);
}

id sub_1009B98EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained isUserLocation]) {
    [v3 keyColor];
  }
  else {
  id v5 = +[UIColor labelColor];
  }

  return v5;
}

void sub_1009BAC84(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [[SearchResult alloc] initWithMapItem:v3];

  id v5 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v5 setSearchResult:v4];
  id v9 = v4;
  id v6 = +[NSArray arrayWithObjects:&v9 count:1];
  uint64_t v7 = +[SearchInfo searchInfoWithResults:v6];

  uint64_t v8 = [*(id *)(a1 + 32) appCoordinator];
  [v8 openSearch:v5 andResults:v7];
}

void sub_1009BB9B8(id a1)
{
  os_log_t v1 = objc_alloc_init(UserProfileLinkRatingsProvider);
  uint64_t v2 = (void *)qword_1016102E8;
  qword_1016102E8 = (uint64_t)v1;
}

void sub_1009BBD48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1009BBD64(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    [WeakRetained _updateLinkWithCount:[v4 count] notifyObservers:1];
  }
}

id sub_1009BC2C8()
{
  if (qword_101610300 != -1) {
    dispatch_once(&qword_101610300, &stru_101313198);
  }
  id v0 = (void *)qword_1016102F8;

  return v0;
}

void sub_1009BCA98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009BCABC(uint64_t a1)
{
  uint64_t v2 = sub_1009BC2C8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v13 = 134349056;
    id v14 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Daily usage limit timer fired; disabling VIO session for the rest of the day",
      (uint8_t *)&v13,
      0xCu);
  }
  id v4 = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 currentEntry];
    [v6 dailyUsageLimit];
    double v8 = v7;
    id v9 = [v5 currentEntry];
    [v9 setCurrentUsage:v8];

    id v10 = [v5 currentEntry];
    [v10 setLastStartDate:0];

    uint64_t v11 = [v5 currentEntry];
    [v11 save];

    uint64_t v12 = [v5 stateManager];
    [v12 recordSessionDisableEvent:2];
  }
}

void sub_1009BD1CC(uint64_t a1)
{
  uint64_t v2 = sub_1009BC2C8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v11 = 134349056;
    id v12 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Detected calendar day changed; resetting daily usage limit",
      (uint8_t *)&v11,
      0xCu);
  }
  id v4 = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = v4;
  if (v4)
  {
    [v4 setUsageLimitTimer:0];
    id v6 = objc_opt_new();
    [v5 setCurrentEntry:v6];

    double v7 = [v5 currentEntry];
    [v7 save];

    double v8 = [v5 session];
    id v9 = [v8 state];

    if (v9 == (id)1)
    {
      [v5 startUsageLimitTimer];
    }
    else
    {
      id v10 = [v5 stateManager];
      [v10 resetSessionDisableEvent:2];
    }
  }
}

void sub_1009BD3D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (v1 == 1) {
    [WeakRetained startUsageLimitTimer];
  }
  else {
    [WeakRetained stopUsageLimitTimer];
  }
}

void sub_1009BD4CC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionDailyUsageMonitor");
  uint64_t v2 = (void *)qword_1016102F8;
  qword_1016102F8 = (uint64_t)v1;
}

void sub_1009BD7CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _enqueueNewState:*(void *)(a1 + 40)];
}

void sub_1009BD904(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1009BD920(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _fireStateUpdate:*(void *)(a1 + 40)];
}

void sub_1009BDA18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsPocketStateProvider");
  uint64_t v2 = (void *)qword_101610308;
  qword_101610308 = (uint64_t)v1;
}

void sub_1009BDF54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1009BDFE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1009BE414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1009BF148()
{
  if (qword_101610330 != -1) {
    dispatch_once(&qword_101610330, &stru_1013132B8);
  }
  id v0 = (void *)qword_101610328;

  return v0;
}

void sub_1009BF53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009BF560(uint64_t a1)
{
  uint64_t v2 = sub_1009BF148();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Location update disable timer fired; stopping location updates now",
      v4,
      2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _stopLocationUpdatesFromTimer];
}

void sub_1009BFA80(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFLocationManager");
  uint64_t v2 = (void *)qword_101610328;
  qword_101610328 = (uint64_t)v1;
}

void sub_1009C44EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[NSOperationQueue mainQueue];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1009C45A8;
  void v6[3] = &unk_1012E5D58;
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v3;
  id v5 = v3;
  [v4 addOperationWithBlock:v6];
}

void sub_1009C45A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) flowViewController];
  uint64_t v2 = [v3 headerView];
  [v2 setBannerImage:v1];
}

void sub_1009C5218(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = *(id **)(a1 + 32);
  id v11 = v4;
  if (v4)
  {
    id v6 = [v5 analyticsBookingSession];
    id v7 = [v11 description];
    [v6 addErrorMessage:v7];

    double v8 = [*(id *)(a1 + 32) reservationRequester];
    id v9 = [v8 extension];
    id v10 = [v9 _containingAppIdentifer];
    NSLog(@"There was an error opening application with bundle identifier '%@' for handling a user activity: %@", v10, v11);
  }
  else
  {
    [v5[1] registerAppTracker:];
  }
}

id sub_1009C55B0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [v2 defaultDate];
  [v2 requestAvailableBookingsWithDate:v3 partySize:[*(id *)(a1 + 32) defaultPartySize]];

  id v4 = *(void **)(a1 + 32);

  return [v4 configureHeaderForBranding:1];
}

id sub_1009C56B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) kickoffRequests];
}

id sub_1009C5748(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateReservationTableViewController];
}

id sub_1009C57E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) kickoffRequests];
}

id sub_1009C58E4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) handleRequestedTimeCompletion];
}

void sub_1009C5B2C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) errorController];
  id v3 = [*(id *)(a1 + 40) availableBookingsResponse];
  id v8 = [v2 alertControllerForAvailableBookingsResponse:v3 error:*(void *)(a1 + 48)];

  id v4 = [*(id *)(a1 + 32) analyticsBookingSession];
  id v5 = [v8 message];
  [v4 addErrorMessage:v5];

  id v6 = [*(id *)(a1 + 32) analyticsBookingSession];
  [v6 setCurrentState:5];

  id v7 = [*(id *)(a1 + 32) flowViewController];
  [v7 presentViewController:v8 animated:1 completion:0];
}

void sub_1009C5CDC(uint64_t a1)
{
  [*(id *)(a1 + 32) updateReservationTableViewController];
  uint64_t v2 = [*(id *)(a1 + 40) bookReservationResponse];
  if (+[RestaurantReservationErrorController shouldDisplayAlertForResponseWithBookReservationIntentCode:](RestaurantReservationErrorController, "shouldDisplayAlertForResponseWithBookReservationIntentCode:", [v2 code]))
  {
    id v3 = [*(id *)(a1 + 32) reservationTableViewController];
    unsigned __int8 v4 = [v3 contactRequirementsSatisfiable];

    if (v4)
    {
      id v5 = [*(id *)(a1 + 32) errorController];
      id v6 = [*(id *)(a1 + 40) bookReservationResponse];
      uint64_t v2 = [v5 alertControllerForBookReservationResponse:v6 error:0];

      id v7 = [*(id *)(a1 + 32) analyticsBookingSession];
      id v8 = [v2 message];
      [v7 addErrorMessage:v8];

      id v9 = [*(id *)(a1 + 32) analyticsBookingSession];
      [v9 setCurrentState:5];

      id v10 = [*(id *)(a1 + 32) flowViewController];
      [v10 presentViewController:v2 animated:1 completion:0];

LABEL_8:
      goto LABEL_9;
    }
  }
  else
  {
  }
  uint64_t v11 = [*(id *)(a1 + 40) bookReservationResponse];
  if (v11)
  {
    uint64_t v2 = (void *)v11;
    id v12 = [*(id *)(a1 + 40) bookReservationResponse];
    id v13 = [v12 code];

    if (!v13)
    {
      id v14 = [*(id *)(a1 + 40) bookReservationResponse];
      id v15 = [v14 userBooking];
      id v16 = [v15 partySize];
      uint64_t v17 = [*(id *)(a1 + 32) analyticsBookingSession];
      [v17 setTableSize:v16];

      id v18 = [*(id *)(a1 + 40) bookReservationResponse];
      uint64_t v19 = [v18 userBooking];
      id v20 = [v19 guestProvidedSpecialRequestText];
      BOOL v21 = [v20 length] != 0;
      int v22 = [*(id *)(a1 + 32) analyticsBookingSession];
      [v22 setAddedSpecialRequest:v21];

      id v23 = [*(id *)(a1 + 32) activeReservation];
      uint64_t v2 = [v23 bookingDate];

      [v2 timeIntervalSinceReferenceDate];
      uint64_t v25 = 3600 * ((uint64_t)v24 / 3600);
      long long v26 = [*(id *)(a1 + 32) analyticsBookingSession];
      [v26 setBlurredBookingTimestamp:v25];

      long long v27 = +[NSDate date];
      [v27 timeIntervalSinceReferenceDate];
      uint64_t v29 = 3600 * ((uint64_t)v28 / 3600);
      CGFloat v30 = [*(id *)(a1 + 32) analyticsBookingSession];
      [v30 setBlurredReservationTimestamp:v29];

      CGFloat v31 = [*(id *)(a1 + 32) analyticsBookingSession];
      [v31 setCurrentState:1];

      [*(id *)(a1 + 32) pushSuccessScreen];
      goto LABEL_8;
    }
  }
LABEL_9:
  id v39 = [*(id *)(a1 + 40) bookReservationResponse];
  id v32 = [v39 code];
  if (v32 != (id)4)
  {
    uint64_t v2 = [*(id *)(a1 + 40) bookReservationResponse];
    if ([v2 code] != (id)3)
    {
LABEL_15:

      return;
    }
  }
  CGFloat v33 = [*(id *)(a1 + 32) reservationTableViewController];
  unsigned __int8 v34 = [v33 contactRequirementsSatisfiable];

  if (v32 != (id)4) {
  if ((v34 & 1) == 0)
  }
  {
    double v35 = [*(id *)(a1 + 32) analyticsBookingSession];
    [v35 addErrorMessage:@"contact requirements were not satisfiable"];

    CGFloat v36 = *(void **)(a1 + 32);
    CGFloat v37 = [*(id *)(a1 + 40) bookReservationResponse];
    uint64_t v38 = [v37 userActivity];
    [v36 openAppWithActivity:v38];

    id v39 = [*(id *)(a1 + 32) flowViewController];
    uint64_t v2 = [v39 cardPresentationController];
    [v2 dismiss:1];
    goto LABEL_15;
  }
}

void sub_1009C61D4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) errorController];
  id v3 = [*(id *)(a1 + 40) bookReservationResponse];
  id v8 = [v2 alertControllerForBookReservationResponse:v3 error:*(void *)(a1 + 48)];

  unsigned __int8 v4 = [*(id *)(a1 + 32) analyticsBookingSession];
  id v5 = [v8 message];
  [v4 addErrorMessage:v5];

  id v6 = [*(id *)(a1 + 32) analyticsBookingSession];
  [v6 setCurrentState:5];

  id v7 = [*(id *)(a1 + 32) flowViewController];
  [v7 presentViewController:v8 animated:1 completion:0];

  [*(id *)(a1 + 32) updateReservationTableViewController];
}

void sub_1009C6C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009C6C88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained flowViewController];
  uint64_t v2 = [v1 cardPresentationController];
  [v2 dismiss:1];
}

void sub_1009C6CF4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained openAppWithActivity:v3];

  id v7 = objc_loadWeakRetained(v2);
  id v5 = [v7 flowViewController];
  id v6 = [v5 cardPresentationController];
  [v6 dismiss:1];
}

void sub_1009C6E48(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) userCurrentBookingResponse];
  id v3 = [v2 userCurrentBookings];
  id v10 = [v3 firstObject];

  unsigned __int8 v4 = [v10 bookingIdentifier];
  id v5 = [*(id *)(a1 + 40) reservationSuccessViewController];
  id v6 = [v5 userBooking];
  id v7 = [v6 bookingIdentifier];
  unsigned int v8 = [v4 isEqualToString:v7];

  if (v8)
  {
    [*(id *)(a1 + 40) setContentLikelyChanged:1];
    id v9 = [*(id *)(a1 + 40) reservationSuccessViewController];
    [v9 setUserBooking:v10];
  }
}

id sub_1009C7030(uint64_t a1)
{
  return [*(id *)(a1 + 32) extensionFlowHeaderViewDidTapDismiss:0];
}

void sub_1009C7454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1009C747C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained onTransitionFromState:a2 toState:a3];
  }
}

id sub_1009C78A0()
{
  if (qword_101610350 != -1) {
    dispatch_once(&qword_101610350, &stru_1013133A8);
  }
  id v0 = (void *)qword_101610348;

  return v0;
}

void sub_1009C7ED4(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 collection];
  if (v3)
  {
    unsigned __int8 v4 = v3;
    [*(id *)(a1 + 32) addObject:v3];
    uint64_t v3 = v4;
  }
}

id sub_1009C825C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4 = [*(id *)(a1 + 32) sections];
  id v5 = [v4 objectAtIndex:a2];

  id v6 = [v5 layoutForSectionUsingTraitsEnvironment:*(void *)(a1 + 32) usingWidth:*(double *)(a1 + 40)];

  return v6;
}

void sub_1009C883C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v14 = WeakRetained;
    uint64_t v3 = [WeakRetained loadingView];
    if (!v3)
    {
      unsigned __int8 v4 = [v14 apiController];
      id v5 = [v4 currentState];

      id WeakRetained = v14;
      if (v5 != (id)1) {
        goto LABEL_6;
      }
      id v6 = [LoadingModeView alloc];
      id v7 = +[NSBundle mainBundle];
      unsigned int v8 = [v7 localizedStringForKey:@"Loading ..." value:@"localized string not found" table:0];
      id v9 = [(LoadingModeView *)v6 initWithTitle:v8];
      [v14 setLoadingView:v9];

      id v10 = [v14 loadingView];
      [v10 setTranslatesAutoresizingMaskIntoConstraints:0];

      uint64_t v11 = [v14 contentView];
      id v12 = [v14 loadingView];
      [v11 addSubview:v12];

      id v13 = [*(id *)(a1 + 32) loadingView];
      [v13 setAccessibilityIdentifier:@"AllCollectionsLoadingView"];

      uint64_t v3 = [v14 loadingView];
      [v14 activateConstraintsForViewPinnedBelowHeader:v3];
    }

    id WeakRetained = v14;
  }
LABEL_6:
}

void sub_1009C8D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009C8D24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v2 = [WeakRetained dataSource];

    if (v2)
    {
      uint64_t v3 = [v4 dataSource];
      [v3 didTapTryAgainOnErrorView];
    }
    else
    {
      uint64_t v3 = [v4 apiController];
      [v3 fetchAllCollectionsViewForKeywordFilter:0 addressFilter:0 onCompletion:&stru_101313368];
    }

    id WeakRetained = v4;
  }
}

id sub_1009C8F08(uint64_t a1)
{
  return [*(id *)(a1 + 32) resetCollectionViewLayout];
}

void sub_1009C92D0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "AllCollectionsViewController");
  uint64_t v2 = (void *)qword_101610348;
  qword_101610348 = (uint64_t)v1;
}

BOOL sub_1009C9360(id a1, MapsSession *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1009C9FD4(id a1, NSError *a2)
{
  if (!a2)
  {
    uint64_t v7 = v2;
    uint64_t v8 = v3;
    id v4 = sub_100109EA4();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Hinting refresh for Resume Route", v6, 2u);
    }

    id v5 = sub_100018584();
    [v5 hintRefreshOfType:11];
  }
}

BOOL sub_1009CA060(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1009CABA4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2[4])
  {
    uint64_t v3 = [v2 _minutesText];
    [*(id *)(*(void *)(a1 + 32) + 16) setText:v3];
  }
  id v4 = +[UIFont _maps_systemFontWithFixedSize:24.0];
  [*(id *)(*(void *)(a1 + 32) + 16) setFont:v4];
}

void sub_1009CAC50(uint64_t a1)
{
  id v3 = +[NSBundle mainBundle];
  uint64_t v2 = [v3 localizedStringForKey:@"[ridesharing] eta balloon min" value:@"localized string not found" table:0];
  [*(id *)(*(void *)(a1 + 32) + 24) setText:v2];
}

void sub_1009CACDC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setText:&stru_101324E70];
  id v2 = +[UIFont _maps_boldSystemFontWithFixedSize:24.0];
  [*(id *)(*(void *)(a1 + 32) + 16) setFont:v2];
}

id sub_1009CAD5C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) setText:&stru_101324E70];
}

void sub_1009CAD78(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setText:&stru_101324E70];
  id v2 = +[UIFont _maps_boldSystemFontWithFixedSize:24.0];
  [*(id *)(*(void *)(a1 + 32) + 16) setFont:v2];
}

id sub_1009CADF8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) setText:&stru_101324E70];
}

void sub_1009CB0E4(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_101610368;
  qword_101610368 = (uint64_t)v1;
}

void sub_1009CB120(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setText:*(void *)(a1 + 40)];
  id v2 = +[UIFont _maps_boldSystemFontWithFixedSize:18.0];
  [*(id *)(*(void *)(a1 + 32) + 16) setFont:v2];
}

void sub_1009CB198(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 40) length];
  if (v4)
  {
    int v5 = 0;
    id v6 = *(void **)(a1 + 40);
  }
  else
  {
    id v8 = [*(id *)(a1 + 48) timeZone];
    uint64_t v7 = [v8 abbreviation];
    id v1 = (void *)v7;
    if (v7)
    {
      int v5 = 0;
      id v6 = (void *)v7;
    }
    else
    {
      id v2 = [(id)qword_101610368 timeZone];
      id v6 = [v2 abbreviation];
      int v5 = 1;
    }
  }
  [*(id *)(*(void *)(a1 + 32) + 24) setText:v6];
  if (v5)
  {
  }
  if (!v4)
  {
  }
}

void sub_1009CC1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,id location)
{
}

void sub_1009CC214(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = objc_loadWeakRetained(WeakRetained + 2);
    [v3 updateRequestRidePaymentMethod:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

void sub_1009CC514(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v18 = objc_opt_new();
  id v16 = v3;
  objc_initWeak(&location, v3);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v4 = [*(id *)(a1 + 32) rideOption];
  id obj = [v4 passengerChoices];

  id v5 = [obj countByEnumeratingWithState:&v23 objects:v28 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v24;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v24 != v6) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        id v9 = [v8 formattedPriceRange];
        id v10 = [v8 title];
        uint64_t v11 = +[NSString stringWithFormat:@"%@ %@", v9, v10];

        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472;
        v21[2] = sub_1009CC8B0;
        v21[3] = &unk_101313470;
        objc_copyWeak(&v22, &location);
        void v21[4] = v8;
        id v12 = +[UIAlertAction _actionWithTitle:v11 image:0 style:0 handler:v21 shouldDismissHandler:&stru_101313490];
        [v18 addObject:v12];

        objc_destroyWeak(&v22);
      }
      id v5 = [obj countByEnumeratingWithState:&v23 objects:v28 count:16];
    }
    while (v5);
  }

  id v13 = +[NSBundle mainBundle];
  id v14 = [v13 localizedStringForKey:@"Cancel" value:@"localized string not found" table:0];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1009CC94C;
  v19[3] = &unk_1012E8EB8;
  objc_copyWeak(&v20, &location);
  id v15 = +[UIAlertAction actionWithTitle:v14 style:1 handler:v19];
  [v18 addObject:v15];

  [v16 _setActions:v18];
  objc_destroyWeak(&v20);
  objc_destroyWeak(&location);
}

void sub_1009CC844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  objc_destroyWeak(v34);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009CC8B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v3 = [WeakRetained didFinishSelectingPartySize];

    id WeakRetained = v5;
    if (v3)
    {
      id v4 = [v5 didFinishSelectingPartySize];
      v4[2](v4, *(void *)(a1 + 32));

      [v5 setDidFinishSelectingPartySize:0];
      id WeakRetained = v5;
    }
  }
}

BOOL sub_1009CC944(id a1)
{
  return 1;
}

void sub_1009CC94C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained didFinishSelectingPartySize];

  if (v1)
  {
    id v2 = [WeakRetained didFinishSelectingPartySize];
    v2[2](v2, 0);

    [WeakRetained setDidFinishSelectingPartySize:0];
  }
}

void sub_1009CCCD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1009CCCFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1009CCD8C;
    block[3] = &unk_1012E5D08;
    void block[4] = WeakRetained;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_1009CCD8C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tableView];
  [v1 reloadData];
}

void sub_1009CE074(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) delegate];
  [v1 dismiss];
}

void sub_1009CF280(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 imageView];
  [v4 setImage:v3];
}

id sub_1009CF490(uint64_t a1)
{
  uint64_t v2 = +[CarDisplayController sharedInstance];
  id v3 = [v2 routeGeniusManager];
  id v4 = [*(id *)(a1 + 32) chromeViewController];
  [v3 activateIfPossibleForChrome:v4];

  id v5 = +[CarRouteGeniusService sharedService];
  [v5 registerObserver:*(void *)(a1 + 32)];

  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = +[CarRouteGeniusService sharedService];
  id v8 = [v7 suggestion];
  [v6 setCurrentSuggestion:v8];

  id v9 = *(void **)(a1 + 32);

  return [v9 _updateRouteGeniusCardContents];
}

id sub_1009D046C()
{
  if (qword_101610380 != -1) {
    dispatch_once(&qword_101610380, &stru_101313590);
  }
  id v0 = (void *)qword_101610378;

  return v0;
}

void sub_1009D25AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_1009D261C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsRadarAttachment");
  uint64_t v2 = (void *)qword_101610378;
  qword_101610378 = (uint64_t)v1;
}

void sub_1009D2944(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000B944C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[MCM] createCollection done error %@", buf, 0xCu);
  }

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1009D2A74;
  v7[3] = &unk_1012E5F78;
  id v5 = *(id *)(a1 + 32);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
}

uint64_t sub_1009D2A74(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1009D2C40(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000B944C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[MCM] saveCollection done error %@", buf, 0xCu);
  }

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1009D2D70;
  v7[3] = &unk_1012E5F78;
  id v5 = *(id *)(a1 + 32);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
}

uint64_t sub_1009D2D70(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1009D2F68(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000B944C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[MCM] deleteCollection done error %@", buf, 0xCu);
  }

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1009D3098;
  v7[3] = &unk_1012E5F78;
  id v5 = *(id *)(a1 + 32);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
}

uint64_t sub_1009D3098(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1009D32EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000B944C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[MCM] deleteCollections done error %@", (uint8_t *)&v6, 0xCu);
  }

  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);
  }
}

uint64_t sub_1009D3514(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) allPlacesCollection];

  if (v4 == v3)
  {
    uint64_t v5 = 0;
  }
  else
  {
    if ([v3 contentType] == (id)1) {
      LODWORD(v5) = [v3 isEmpty] ^ 1;
    }
    else {
      LODWORD(v5) = 0;
    }
    if ([v3 handlerType] == (id)4) {
      uint64_t v5 = 1;
    }
    else {
      uint64_t v5 = v5;
    }
  }

  return v5;
}

BOOL sub_1009D3618(id a1, id a2, NSDictionary *a3)
{
  id v3 = a2;
  if ([v3 contentType] == (id)1) {
    unsigned int v4 = [v3 isEmpty] ^ 1;
  }
  else {
    LOBYTE(v4) = 0;
  }
  if ([v3 handlerType] == (id)4) {
    LOBYTE(v4) = 1;
  }

  return v4;
}

void sub_1009D4BF4(uint64_t a1)
{
  +[GEOAPSharedStateData sharedData];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1009D4C98;
  v3[3] = &unk_1012F05F8;
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  int v5 = *(_DWORD *)(a1 + 32);
  id v2 = v4;
  [v2 performMapViewStateUpdate:v3];
}

id sub_1009D4C98(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setMapViewViewMode:*(unsigned int *)(a1 + 40)];
}

void sub_1009D70D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

id sub_1009D7104(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) contentsForContext:[*(id *)(a1 + 40) context]];
  int v5 = v4;
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v6 = [v4 instruction];
  }
  else
  {
    if (v3) {
      [v3 doubleValue];
    }
    else {
      double v7 = -1.0;
    }
    uint64_t v6 = [v5 stringForDistance:v7];
  }
  id v8 = (void *)v6;

  return v8;
}

void sub_1009D71A8(id a1)
{
  id v1 = objc_alloc((Class)NSAttributedString);
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Directions] road descriptions separator" value:@"localized string not found" table:0];
  NSAttributedStringKey v8 = NSForegroundColorAttributeName;
  id v4 = +[UIColor whiteColor];
  id v9 = v4;
  int v5 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
  id v6 = [v1 initWithString:v3 attributes:v5];
  double v7 = (void *)qword_1016103C0;
  qword_1016103C0 = (uint64_t)v6;
}

void sub_1009D72C4(uint64_t a1, int a2, id obj)
{
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1009D7FEC(uint64_t a1, void *a2)
{
  id v15 = a2;
  if ([v15 type] == 10)
  {
    id v3 = [*(id *)(a1 + 32) route];
    id v4 = [v3 legs];
    int v5 = [v4 objectAtIndexedSubscript:*(void *)(a1 + 40)];

    id v6 = [v15 token];
    LODWORD(v4) = [v6 isEqualToString:@"{Name}"];

    if (v4)
    {
      double v7 = [v5 destination];
      uint64_t v8 = [v7 navDisplayNameWithSpecialContacts:0];
    }
    else
    {
      id v9 = [v15 token];
      unsigned int v10 = [v9 isEqualToString:@"{Address}"];

      if (v10)
      {
        double v7 = [v5 destination];
        uint64_t v8 = [v7 navDisplayAddress];
      }
      else
      {
        id v11 = [v15 token];
        unsigned int v12 = [v11 isEqualToString:@"{Road}"];

        if (!v12)
        {
LABEL_9:

          goto LABEL_10;
        }
        double v7 = [*(id *)(a1 + 32) step];
        uint64_t v8 = [v7 maneuverRoadOrExitName];
      }
    }
    id v13 = (void *)v8;
    id v14 = [v15 stringFormat];
    [v14 setOverrideValue:v13];

    goto LABEL_9;
  }
LABEL_10:
}

void sub_1009D9428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 200));
  _Unwind_Resume(a1);
}

id sub_1009D9454(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained _createMenuForSortButton];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void sub_1009D9800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009D9820(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = objc_loadWeakRetained(WeakRetained + 6);
    [v3 requestsCollectionHeaderSortActionForView:v4 forSortType:*(void *)(a1 + 40)];

    id WeakRetained = v4;
  }
}

void sub_1009D9DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009D9DF8(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    if (v8)
    {
      [WeakRetained setIncidentLayout:v8];
      uint64_t v5 = *(void *)(a1 + 32);
      if (v5)
      {
        id v6 = [v4[3] layoutItems];
        (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
      }
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 32);
      if (v7) {
        (*(void (**)(uint64_t, void *))(v7 + 16))(v7, &__NSArray0__struct);
      }
    }
  }
}

void sub_1009DAFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009DB018(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id WeakRetained = sub_100577F64();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR))
    {
      id v8 = [v6 description];
      int v9 = 138412546;
      unsigned int v10 = v8;
      __int16 v11 = 2048;
      id v12 = [v5 count];
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_ERROR, "Error fetching categories: %@, categories.count=%lu", (uint8_t *)&v9, 0x16u);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained setSearchCategories:v5];
  }
}

uint64_t sub_1009DB5CC()
{
  uint64_t result = MapsFeature_IsEnabled_ShelbyvilleSearch();
  if (result)
  {
    return GEOConfigGetBOOL();
  }
  return result;
}

void sub_1009DB78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1009DB7A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _tearDownVirtualGarage];
}

id sub_1009DBB5C(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 4_Block_object_dispose(&STACK[0x7A0], 8) = 1;
  id v2 = sub_1005768D4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = sub_100A34658(*(void *)(a1 + 40));
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Starting '%@'", (uint8_t *)&v5, 0xCu);
  }
  return [*(id *)(a1 + 32) start];
}

void sub_1009DBD74(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 4_Block_object_dispose(&STACK[0x7A0], 8) = 0;
  [*(id *)(a1 + 32) stop];
  id v2 = sub_1005768D4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = sub_100A34658(*(void *)(a1 + 40));
    int v4 = 138412290;
    int v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Stopped '%@'", (uint8_t *)&v4, 0xCu);
  }
}

id sub_1009DBF44(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 4_Block_object_dispose(&STACK[0x7A0], 8) = *(unsigned char *)(a1 + 40);
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = sub_1005768D4();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (v4)
    {
      int v5 = sub_100A34658(*(void *)(*(void *)(a1 + 32) + 32));
      int v8 = 138412290;
      int v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Resuming '%@' state", (uint8_t *)&v8, 0xCu);
    }
    return [*(id *)(a1 + 32) resume];
  }
  else
  {
    if (v4)
    {
      uint64_t v7 = sub_100A34658(*(void *)(*(void *)(a1 + 32) + 32));
      int v8 = 138412290;
      int v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Pausing '%@' state", (uint8_t *)&v8, 0xCu);
    }
    return [*(id *)(a1 + 32) pause];
  }
}

void sub_1009DC2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

int64_t sub_1009DC2CC(id a1, NanoRoutePlanningMutableRequest *a2, NanoRoutePlanningMutableResponse *a3)
{
  return 2;
}

void sub_1009DC2D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  if (WeakRetained)
  {
    int v9 = (NSObject **)objc_loadWeakRetained(v7);
    unsigned int v10 = v9;
    if (v9)
    {
      __int16 v11 = v9[1];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1009DC3E0;
      block[3] = &unk_1012E9340;
      objc_copyWeak(&v15, v7);
      id v13 = v5;
      id v14 = v6;
      dispatch_async(v11, block);

      objc_destroyWeak(&v15);
    }
  }
}

void sub_1009DC3E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _handleLocation:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
}

uint64_t sub_1009DC5BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (*(void *)(a1 + 32) || (uint64_t v9 = *(void *)(a1 + 40)) == 0)
  {
    [v6 setLastError:];
    uint64_t v8 = 3;
  }
  else
  {
    unsigned int v10 = [v5 traits];
    [v10 setDeviceLocation:v9];

    uint64_t v8 = 2;
  }

  return v8;
}

GEOComposedWaypoint *__cdecl sub_1009DC9B8(id a1, NanoDirectionWaypoint *a2, unint64_t a3)
{
  return [(NanoDirectionWaypoint *)a2 composedWaypoint];
}

void sub_1009DC9C0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [v5 composedWaypoint];

  uint64_t v7 = sub_1005768D4();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
  if (v6)
  {
    if (v8)
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v16 = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Skipping waypoint %lu", buf, 0xCu);
    }
  }
  else
  {
    if (v8)
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v16 = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Refining waypoint %lu", buf, 0xCu);
    }

    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    uint64_t v9 = *(void *)(a1 + 40);
    unsigned int v10 = [*(id *)(a1 + 48) auditToken];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1009DCB74;
    v11[3] = &unk_1013138A0;
    uint64_t v14 = a3;
    id v12 = *(id *)(a1 + 56);
    id v13 = *(id *)(a1 + 32);
    [v5 refineWithTraits:v9 auditToken:v10 completionHandler:v11];

    uint64_t v7 = v12;
  }
}

void sub_1009DCB74(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_1005768D4();
  id v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 48);
      int v10 = 134218242;
      uint64_t v11 = v7;
      __int16 v12 = 2112;
      id v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error refining waypoint %lu: %@", (uint8_t *)&v10, 0x16u);
    }

    BOOL v8 = *(void **)(a1 + 32);
    id v6 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 48)];
    [v8 setObject:v4 forKeyedSubscript:v6];
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    uint64_t v9 = *(void *)(a1 + 48);
    int v10 = 134217984;
    uint64_t v11 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Refined waypoint %lu", (uint8_t *)&v10, 0xCu);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1009DCCC0(uint64_t a1)
{
  objc_copyWeak(&v14, (id *)(a1 + 48));
  id v2 = objc_loadWeakRetained(&v14);
  BOOL v3 = v2 == 0;

  if (!v3)
  {
    id v4 = [*(id *)(a1 + 32) allValues];
    if ([v4 count] == (id)1)
    {
      id v5 = [v4 firstObject];
    }
    else if ((unint64_t)[v4 count] < 2)
    {
      id v5 = 0;
    }
    else
    {
      v15[0] = NSUnderlyingErrorKey;
      id v6 = [v4 firstObject];
      v15[1] = NSMultipleUnderlyingErrorsKey;
      v16[0] = v6;
      v16[1] = v4;
      id v7 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:2];
      BOOL v8 = [v7 objectForKeyedSubscript:NSLocalizedDescriptionKey];
      BOOL v9 = v8 == 0;

      id v10 = v7;
      if (v9)
      {
        uint64_t v11 = sub_100A34534(4);
        id v10 = v7;
        if (v11)
        {
          id v12 = [objc_alloc((Class)NSMutableDictionary) initWithDictionary:v7];
          [v12 setObject:v11 forKeyedSubscript:NSLocalizedDescriptionKey];
          id v10 = [v12 copy];
        }
      }
      id v5 = +[NSError errorWithDomain:@"NanoRoutePlanningSession" code:4 userInfo:v10];
    }
    id v13 = objc_loadWeakRetained(&v14);
    [v13 _handleCompletionWithWaypoints:*(void *)(a1 + 40) error:v5];
  }
  objc_destroyWeak(&v14);
}

void sub_1009DCECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
}

NSString *__cdecl sub_1009DD0B4(id a1, NanoDirectionWaypoint *a2, unint64_t a3)
{
  BOOL v3 = [(NanoDirectionWaypoint *)a2 composedWaypoint];
  if (v3) {
    id v4 = @"YES";
  }
  else {
    id v4 = @"NO";
  }
  id v5 = v4;

  return v5;
}

uint64_t sub_1009DD108(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = a3;
  [a2 setWaypoints:v5];
  [v6 setLastError:*(void *)(a1 + 40)];

  if (*(void *)(a1 + 40)) {
    return 3;
  }
  else {
    return 2;
  }
}

void sub_1009DD508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

GEOComposedWaypoint *__cdecl sub_1009DD52C(id a1, NanoDirectionWaypoint *a2, unint64_t a3)
{
  return [(NanoDirectionWaypoint *)a2 composedWaypoint];
}

void sub_1009DD534(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v11 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32) == WeakRetained[8])
    {
      uint64_t v12 = *(void *)(a1 + 40);
      id v13 = *(void **)(v12 + 64);
      *(void *)(v12 + 64) = 0;
    }
    id v14 = v11[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1009DD690;
    block[3] = &unk_1012EEA20;
    objc_copyWeak(&v20, (id *)(a1 + 48));
    id v16 = v7;
    id v17 = v8;
    id v18 = v9;
    id v19 = *(id *)(a1 + 32);
    dispatch_async(v14, block);

    objc_destroyWeak(&v20);
  }
}

void sub_1009DD690(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  [WeakRetained _processIncomingRoutes:*(void *)(a1 + 32) error:*(void *)(a1 + 40) directionsError:*(void *)(a1 + 48) fromTicket:*(void *)(a1 + 56)];
}

uint64_t sub_1009DDA94(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [*(id *)(a1 + 32) directionsRequest];
  [v4 setDirectionsRequest:v5];

  id v6 = [*(id *)(a1 + 32) directionsResponse];
  [v4 setDirectionsResponse:v6];

  id v7 = [*(id *)(a1 + 32) traceRecordingData];
  [v4 setTraceRecordingData:v7];

  if (*(void *)(a1 + 40)) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = *(void *)(a1 + 48);
  }
  [v4 setRoutes:v8];
  [v4 setExpectedNumberOfRoutes:[*(id *)(a1 + 48) count]];
  [v4 setLastError:*(void *)(a1 + 40)];
  if (*(void *)(a1 + 40)) {
    uint64_t v9 = 3;
  }
  else {
    uint64_t v9 = 2;
  }

  return v9;
}

void sub_1009DE8BC(id a1, int a2, int a3, BOOL a4)
{
  uint64_t v4 = *(void *)&a2;
  if ((a3 - 1) > 5) {
    unint64_t v5 = 0;
  }
  else {
    unint64_t v5 = qword_100F72F30[a3 - 1] - 1;
  }
  if (v5 > 4)
  {
    uint64_t v7 = 0;
  }
  else
  {
    id v6 = (unsigned int *)&unk_100F72F74;
    if (a4) {
      id v6 = (unsigned int *)&unk_100F72F60;
    }
    uint64_t v7 = v6[v5];
  }
  id v8 = +[MKMapService sharedService];
  [v8 captureUserAction:v4 onTarget:v7 eventValue:0];
}

void *sub_1009E12F4(void *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_1009E1398;
  void v4[3] = &unk_1013139E0;
  id v5 = a1;
  id v1 = v5;
  id v2 = objc_retainBlock(v4);

  return v2;
}

void sub_1009E1398(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = a2;
  unint64_t v6 = a3;
  if (!(v5 | v6))
  {
    uint64_t v7 = sub_100576F5C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v14) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Response contained no waypoint or error", (uint8_t *)&v14, 2u);
    }

    id v8 = +[NSError errorWithDomain:@"WaypointRequestErrorDomain" code:0 userInfo:0];
    goto LABEL_5;
  }
  id v8 = (void *)v6;
  if (v5 && v6)
  {
    uint64_t v11 = sub_100576F5C();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = [(id)v5 shortDescription];
      int v14 = 138412546;
      id v15 = v12;
      __int16 v16 = 2112;
      id v17 = v8;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Response contained both a waypoint and an error. Waypoint: %@\n\nError: %@", (uint8_t *)&v14, 0x16u);
    }
    goto LABEL_12;
  }
  if (v5)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = +[Result resultWithValue:v5];
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = +[Result resultWithError:v8];
LABEL_13:
  id v13 = (void *)v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v9, v10);
}

void sub_1009E1558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    BOOL v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_1009E19E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009E1A08(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = sub_100015DB4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = [v6 description];
      int v11 = 138412546;
      uint64_t v12 = v8;
      __int16 v13 = 2048;
      id v14 = [v5 count];
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error fetching categories: %@, categories.count=%lu", (uint8_t *)&v11, 0x16u);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _updateCategories:v5];

    dispatch_time_t v10 = dispatch_time(0, 2000000000);
    dispatch_after(v10, (dispatch_queue_t)&_dispatch_main_q, &stru_101313A00);
  }
}

void sub_1009E1B3C(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"PPTTest_CarSearchCategoriesModeController_DidDisplayCategories" object:0];
}

GEOSearchCategory *__cdecl sub_1009E2324(id a1, BrowseCategory *a2, unint64_t a3)
{
  return [(BrowseCategory *)a2 category];
}

void sub_1009E38B8(id a1)
{
  id v1 = [objc_alloc((Class)GEOMapItemPhotoOptions) initWithAllowSmaller:1 cropStyle:3 format:0];
  id v2 = (void *)qword_1016103D8;
  qword_1016103D8 = (uint64_t)v1;
}

id sub_1009E461C(id a1, UGCPhotoAlbumCategory *a2, unint64_t a3)
{
  BOOL v3 = a2;
  id v4 = objc_alloc_init((Class)MUScrollableSegmentedPickerCategory);
  id v5 = [(UGCPhotoAlbumCategory *)v3 albumTitle];

  [v4 setCategoryName:v5];

  return v4;
}

void sub_1009E5364(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1009E5438;
  v7[3] = &unk_1012E8138;
  id v8 = a2;
  id v9 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  char v11 = a4;
  id v6 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
}

void sub_1009E5438(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = [*(id *)(a1 + 40) assetIdentifier];
    BOOL v3 = [*(id *)(a1 + 48) photoID];
    unsigned int v4 = [v2 isEqualToString:v3];

    if (v4)
    {
      if (*(unsigned char *)(a1 + 56)) {
        double v5 = 0.0;
      }
      else {
        double v5 = 0.4;
      }
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_1009E5550;
      void v6[3] = &unk_1012E5D58;
      id v7 = *(id *)(a1 + 40);
      id v8 = *(id *)(a1 + 32);
      +[UIView animateWithDuration:v6 animations:v5];
    }
  }
}

id sub_1009E5550(uint64_t a1)
{
  return [*(id *)(a1 + 32) setImage:*(void *)(a1 + 40)];
}

void sub_1009E5884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009E58A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && !WeakRetained[64]) {
    WeakRetained[64] = 1;
  }
}

void sub_1009E7C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

id sub_1009E7C9C()
{
  if (qword_1016103F0 != -1) {
    dispatch_once(&qword_1016103F0, &stru_101313B78);
  }
  id v0 = (void *)qword_1016103E8;

  return v0;
}

void sub_1009E7EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1009E8EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1009E8F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_activity_scope_state_s state)
{
}

void sub_1009E90E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1009E910C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateConstraintsForLandscape:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1009E915C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateConstraintsForLandscape:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1009E9F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,os_activity_scope_state_s state)
{
}

void sub_1009E9FB0(uint64_t a1, int a2)
{
  if (a2)
  {
    id v2 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    unsigned int v4 = [WeakRetained localizingView];
    [v4 removeFromSuperview];

    id v5 = objc_loadWeakRetained(v2);
    [v5 setLocalizingView:0];
  }
}

void sub_1009EA034(uint64_t a1, int a2)
{
  if (a2)
  {
    id v2 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    unsigned int v4 = [WeakRetained localizingView];
    [v4 removeFromSuperview];

    id v5 = objc_loadWeakRetained(v2);
    [v5 setLocalizingView:0];
  }
}

void sub_1009EA348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EB05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EB28C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EB4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1009EB4F4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) instructionContainerView];
  [v1 setAlpha:1.0];
}

void sub_1009EB53C(uint64_t a1, int a2)
{
  unsigned int v4 = sub_1009E7C9C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v6 = [WeakRetained instructionContainerView];
    id v7 = (void *)v6;
    id v8 = @"NO";
    int v10 = 134349570;
    id v11 = WeakRetained;
    if (a2) {
      id v8 = @"YES";
    }
    __int16 v12 = 2048;
    uint64_t v13 = v6;
    __int16 v14 = 2112;
    id v15 = v8;
    id v9 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Instruction view (%p) showing finished (%@)", (uint8_t *)&v10, 0x20u);
  }
}

void sub_1009EB770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EB8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EBA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EBC58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1009EBC9C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) arrowGuidanceView];
  [v1 setAlpha:1.0];
}

void sub_1009EBCE4(uint64_t a1, int a2)
{
  unsigned int v4 = sub_1009E7C9C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v6 = [WeakRetained arrowGuidanceView];
    id v7 = (void *)v6;
    id v8 = @"NO";
    int v10 = 134349570;
    id v11 = WeakRetained;
    if (a2) {
      id v8 = @"YES";
    }
    __int16 v12 = 2048;
    uint64_t v13 = v6;
    __int16 v14 = 2112;
    id v15 = v8;
    id v9 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Arrow guidance view (%p) showing finished (%@)", (uint8_t *)&v10, 0x20u);
  }
}

void sub_1009EBF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EC044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EC170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EC608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009ECA0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state, id location)
{
}

void sub_1009ECA48(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = [WeakRetained activity];
    os_activity_scope_enter(v6, &v8);

    id v7 = sub_1009E7C9C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349056;
      int v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}p] Reroute completion timer fired", buf, 0xCu);
    }

    [v5 setRerouteCompletionTimer:0];
    [v5 waitForActiveFeatureIfNecessary];
    os_activity_scope_leave(&v8);
  }
}

void sub_1009ECB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009ECC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009ECF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state, id location)
{
}

void sub_1009ECF48(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = [WeakRetained activity];
    os_activity_scope_enter(v6, &v8);

    id v7 = sub_1009E7C9C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349056;
      int v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}p] Active feature timer fired", buf, 0xCu);
    }

    [v5 setActiveFeatureTimer:0];
    [v5 setState:2];
    os_activity_scope_leave(&v8);
  }
}

void sub_1009ED054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009ED160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009ED334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state, id location)
{
}

void sub_1009ED36C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = [WeakRetained activity];
    os_activity_scope_enter(v6, &v8);

    id v7 = sub_1009E7C9C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349056;
      int v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}p] Failure view timeout fired; closing pedestrian AR",
        buf,
        0xCu);
    }

    [v5 stop];
    os_activity_scope_leave(&v8);
  }
}

void sub_1009ED468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009ED8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1009ED8D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = sub_1009E7C9C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    LODWORD(buf) = 134349056;
    *(void *)((char *)&buf + 4) = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Temporarily enabling VL trace recording", (uint8_t *)&buf, 0xCu);
  }
  uint64_t v6 = +[NSUserDefaults standardUserDefaults];
  [v6 setBool:1 forKey:@"PedestrianARViewControllerTemporarilyEnableVLTraceRecordingKey"];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v11 = 0x3032000000;
  __int16 v12 = sub_100104214;
  uint64_t v13 = sub_100104988;
  id v14 = 0;
  id v9 = *(id *)(a1 + 32);
  uint64_t v7 = _GEOConfigAddBlockListenerForKey();
  os_activity_scope_state_s v8 = *(void **)(*((void *)&buf + 1) + 40);
  *(void *)(*((void *)&buf + 1) + 40) = v7;

  GEOConfigSetBOOL();
  _Block_object_dispose(&buf, 8);
}

void sub_1009EDAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1009EDAD4(uint64_t a1)
{
  GEOConfigRemoveBlockListener();
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v2();
}

uint64_t sub_1009EDB20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1009EDF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EE264(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    state.opaque[0] = 0;
    state.opaque[1] = 0;
    unsigned int v4 = [WeakRetained activity];
    os_activity_scope_enter(v4, &state);

    [v3 setState:3];
    id v5 = [v3 chromeViewController];
    uint64_t v6 = +[GEOPlatform sharedPlatform];
    unsigned int v7 = [v6 isInternalInstall];

    if (v7)
    {
      dispatch_time_t v8 = dispatch_time(0, 500000000);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      id v9[2] = sub_1009EE3C4;
      v9[3] = &unk_1012E5D58;
      id v10 = *(id *)(a1 + 32);
      id v11 = v5;
      dispatch_after(v8, (dispatch_queue_t)&_dispatch_main_q, v9);
    }
    os_activity_scope_leave(&state);
  }
}

void sub_1009EE3AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1009EE3C4(uint64_t a1)
{
  id v2 = +[NSString stringWithFormat:@"%@", *(void *)(a1 + 32)];
  id v4 = +[UIAlertController alertControllerWithTitle:@"ARSession failure [Internal only]" message:v2 preferredStyle:1];

  id v3 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:0];
  [v4 addAction:v3];

  [*(id *)(a1 + 40) presentViewController:v4 animated:1 completion:0];
}

void sub_1009EE5D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained session];

    if (v3)
    {
      [v2 setArkitSessionStartTimestamp:0];
      [v2 start];
    }
    else
    {
      id v4 = sub_1009E7C9C();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
      {
        int v5 = 134349056;
        uint64_t v6 = v2;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[%{public}p] We aren't the ARKit session owners anymore; will not kick off re-localization",
          (uint8_t *)&v5,
          0xCu);
      }
    }
  }
}

void sub_1009EE75C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = WeakRetained;
    unsigned int v3 = [WeakRetained shouldUpdateCameraFocusLensPosition];
    id v2 = v9;
    if (v3)
    {
      id v4 = +[NSUserDefaults standardUserDefaults];
      [v4 floatForKey:@"PedestrianARAutoFocusDistanceKey"];
      int v6 = v5;

      unsigned int v7 = [v9 session];
      LODWORD(v_Block_object_dispose(&STACK[0x7A0], 8) = v6;
      [v7 updateCameraFocusLensPosition:v8];

      [v9 setShouldUpdateCameraFocusLensPosition:0];
      id v2 = v9;
    }
  }
}

void sub_1009EED8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EF010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state, id location)
{
}

void sub_1009EF054(uint64_t a1, void *a2)
{
  unsigned int v3 = a2;
  id v4 = sub_1009E7C9C();
  int v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      int v11 = 134349314;
      id v12 = WeakRetained;
      __int16 v13 = 2112;
      id v14 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "[%{public}p] Saving ARKit session recording failed: %@", (uint8_t *)&v11, 0x16u);
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v7 = objc_loadWeakRetained((id *)(a1 + 40));
      double v8 = *(NSObject **)(a1 + 32);
      int v11 = 134349314;
      id v12 = v7;
      __int16 v13 = 2112;
      id v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] Saving ARKit session recording succeeded: %@", (uint8_t *)&v11, 0x16u);
    }
    int v5 = sub_1005EDFBC(*(void **)(a1 + 32));
    if (v5)
    {
      id v9 = sub_1009E7C9C();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        id v10 = objc_loadWeakRetained((id *)(a1 + 40));
        int v11 = 134349314;
        id v12 = v10;
        __int16 v13 = 2112;
        id v14 = v5;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "[%{public}p] Copying ARKit session recording to crash reporter directory failed: %@", (uint8_t *)&v11, 0x16u);
      }
    }
  }
}

void sub_1009EF370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1009EF564(_Unwind_Exception *exception_object)
{
}

void sub_1009EF630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1009EF700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1009EF888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  os_activity_scope_leave((os_activity_scope_state_t)(v16 - 48));
  _Unwind_Resume(a1);
}

void sub_1009EF8B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained start];
}

void sub_1009EF9B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1009EFB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009EFD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1009F05E0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARViewController");
  id v2 = (void *)qword_1016103E8;
  qword_1016103E8 = (uint64_t)v1;
}

id sub_1009F0D1C(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateCompactVerticalLayout];
  id v2 = [*(id *)(a1 + 32) tableViewController];
  unsigned int v3 = [v2 view];
  [v3 layoutIfNeeded];

  id v4 = *(void **)(a1 + 32);

  return [v4 _updatePreferredContentSize];
}

void sub_1009F1438(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) navigationController];
  os_log_t v1 = [v3 view];
  id v2 = [v1 superview];
  [v2 layoutIfNeeded];
}

void sub_1009F1A9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1009F1AC0(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _clearTableIfNeeded];

  id v3 = objc_loadWeakRetained(v1);
  [v3 didMoveToParentViewController:0];
}

void sub_1009F1E60(uint64_t a1)
{
  uint64_t v2 = sub_100577714();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);

  id v4 = sub_100577714();
  int v5 = v4;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)long long buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "NumberOfPhotosTakenForMapItemProcessing", "", buf, 2u);
  }

  id v6 = objc_alloc_init((Class)PHFetchOptions);
  id v7 = +[NSPredicate predicateWithFormat:@"creationDate >= %@", *(void *)(a1 + 32)];
  [v6 setPredicate:v7];

  id v8 = [objc_alloc((Class)NSSortDescriptor) initWithKey:@"creationDate" ascending:0];
  id v16 = v8;
  id v9 = +[NSArray arrayWithObjects:&v16 count:1];
  [v6 setSortDescriptors:v9];

  id v10 = *(void **)(a1 + 56);
  [*(id *)(a1 + 40) _coordinate];
  int v11 = [v10 fetchNearbyAssetsForMapItemCoordinate:v6 withOptions:];
  id v12 = sub_100577714();
  __int16 v13 = v12;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    *(_WORD *)long long buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_INTERVAL_END, v3, "NumberOfPhotosTakenForMapItemProcessing", "", buf, 2u);
  }

  uint64_t v14 = *(void *)(a1 + 48);
  if (v14) {
    (*(void (**)(uint64_t, id))(v14 + 16))(v14, [v11 count]);
  }
}

void sub_1009F2158(uint64_t a1)
{
  [*(id *)(a1 + 32) _coordinate];
  if (!CLLocationCoordinate2DIsValid(v10)) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  id v2 = objc_alloc_init((Class)PHFetchOptions);
  os_signpost_id_t v3 = +[NSDate now];
  id v4 = +[NSPredicate predicateWithFormat:@"creationDate <= %@", v3];
  [v2 setPredicate:v4];

  [v2 setFetchLimit:GEOConfigGetUInteger()];
  id v5 = [objc_alloc((Class)NSSortDescriptor) initWithKey:@"creationDate" ascending:0];
  id v9 = v5;
  id v6 = +[NSArray arrayWithObjects:&v9 count:1];
  [v2 setSortDescriptors:v6];

  id v7 = *(void **)(a1 + 48);
  [*(id *)(a1 + 32) _coordinate];
  id v8 = [v7 fetchNearbyAssetsForMapItemCoordinate:v2];
  (*(void (**)(void, BOOL))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), [v8 count] != 0);
}

void sub_1009F2F38(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addCheckmarkRowsGroupWithContent:&stru_101313BE8 defaultsKey:@"__internal__keyColorOverride" checkedRowValueIfUnset:&off_1013A9F70 changeHandler:0];
}

void sub_1009F2F78(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  unint64_t v2 = -1;
  do
  {
    CFStringRef v3 = @"None";
    if (v2 <= 7) {
      CFStringRef v3 = off_101313C08[v2];
    }
    id v4 = +[NSNumber numberWithInteger:++v2];
    id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:v3 value:v4];
  }
  while (v2 != 8);
}

void sub_1009F35E4(uint64_t a1, void *a2, void *a3)
{
  id v25 = a2;
  id v5 = a3;
  id v6 = 0;
  if (v25 && !v5)
  {
    id v7 = [v25 selectedVehicle];
    id v8 = [v7 evChargingPorts];

    if ([v8 count])
    {
      id v15 = [v8 count];
      sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC Found EV Ports, count: %ld. ", v16, v17, v18, v19, v20, v21, (uint64_t)v15);
      id v22 = +[GEOMapService sharedService];
      id v6 = [v22 serializedSearchEvChargingParametersForSiriFromPorts:v8];
    }
    else
    {
      sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC No EV Ports found", v9, v10, v11, v12, v13, v14, v24);
      id v6 = 0;
    }
  }
  uint64_t v23 = *(void *)(a1 + 32);
  if (v23) {
    (*(void (**)(uint64_t, void *))(v23 + 16))(v23, v6);
  }
}

void sub_1009F50F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1009F5144(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = *(void **)(a1 + 32);
  id v8 = a2;
  id v9 = [v7 objectAtIndexedSubscript:a3];
  LOBYTE(a3) = [v8 isEqualToSearchResult:forPurpose:];

  if ((a3 & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_1009F7874(uint64_t a1, int a2)
{
  id v4 = [*(id *)(a1 + 32) mapSelectionManager];
  [v4 resumeUpdates];

  if (a2)
  {
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = [*(id *)(a1 + 40) results];
    id v7 = [*(id *)(a1 + 40) searchDotPlaces];
    [v5 dropPinsForSearchResults:v6 searchDotPlaces:v7 selectedSearchResult:*(void *)(a1 + 48) animate:1 itemSource:*(void *)(a1 + 56)];

    id v8 = [*(id *)(a1 + 32) delegate];
    LOBYTE(v6) = objc_opt_respondsToSelector();

    if (v6)
    {
      id v9 = [*(id *)(a1 + 32) delegate];
      [v9 setNeedsUserActivityUpdate];
    }
  }
}

void sub_1009F7968(uint64_t a1, int a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12 = [*(id *)(a1 + 32) mapSelectionManager];
  [v12 resumeUpdates];

  if (a2)
  {
    uint64_t v13 = *(void **)(a1 + 32);
    uint64_t v14 = [*(id *)(a1 + 40) results];
    id v15 = [*(id *)(a1 + 40) searchDotPlaces];
    [v13 dropPinsForSearchResults:v14 searchDotPlaces:v15 selectedSearchResult:*(void *)(a1 + 48) animate:1 itemSource:*(void *)(a1 + 56)];

    uint64_t v16 = [*(id *)(a1 + 32) delegate];
    LOBYTE(v14) = objc_opt_respondsToSelector();

    if (v14)
    {
      uint64_t v21 = [*(id *)(a1 + 32) delegate];
      [v21 setNeedsUserActivityUpdate];
    }
    uint64_t v22 = *(void *)(a1 + 64);
    if (v22)
    {
      uint64_t v23 = *(void (**)(__n128, __n128, __n128, __n128))(v22 + 16);
      v17.n128_f64[0] = a3;
      v18.n128_f64[0] = a4;
      v19.n128_f64[0] = a5;
      v20.n128_f64[0] = a6;
      v23(v17, v18, v19, v20);
    }
  }
}

void sub_1009F7DCC(uint64_t a1, int a2, double a3, double a4, double a5, double a6)
{
  if (*(void *)(a1 + 40))
  {
    uint64_t v12 = sub_100109DFC();
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
LABEL_12:

      (*(void (**)(double, double, double, double))(*(void *)(a1 + 40) + 16))(a3, a4, a5, a6);
      goto LABEL_13;
    }
    id v13 = *(id *)(a1 + 32);
    if (!v13)
    {
      __n128 v18 = @"<nil>";
      goto LABEL_11;
    }
    uint64_t v14 = (objc_class *)objc_opt_class();
    id v15 = NSStringFromClass(v14);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v16 = [v13 performSelector:"accessibilityIdentifier"];
      __n128 v17 = v16;
      if (v16 && ![v16 isEqualToString:v15])
      {
        __n128 v18 = +[NSString stringWithFormat:@"%@<%p, %@>", v15, v13, v17];

        goto LABEL_9;
      }
    }
    __n128 v18 = +[NSString stringWithFormat:@"%@<%p>", v15, v13];
LABEL_9:

LABEL_11:
    *(_DWORD *)long long buf = 138543618;
    uint64_t v22 = v18;
    __int16 v23 = 1024;
    int v24 = a2;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "[%{public}@] Animation completed, Calling completion block. Finished:(%d)", buf, 0x12u);

    goto LABEL_12;
  }
LABEL_13:
  uint64_t v19 = *(void *)(a1 + 32);
  __n128 v20 = *(void **)(v19 + 16);
  *(void *)(v19 + 16) = 0;
}

void sub_1009F86CC(uint64_t a1, void *a2)
{
}

void sub_1009F86D8(uint64_t a1, void *a2)
{
}

void sub_1009F8E80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1009F8EA4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) mapSelectionManager];
  unsigned __int8 v3 = [v2 hasSelection];

  if ((v3 & 1) == 0)
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(unsigned __int8 *)(a1 + 48);
    [v4 selectLabelMarkerForSearchResult:v5 animated:v6];
  }
}

void sub_1009F8F14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained selectLabelMarkerForSearchResult:*(void *)(a1 + 32) animated:*(unsigned __int8 *)(a1 + 48)];
}

id sub_1009FA308(uint64_t a1, uint64_t a2)
{
  return +[POIShapeFactory searchResultWaypointPOIShapeWithMapView:*(void *)(a1 + 32) searchResult:a2];
}

void sub_1009FAFE0(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, void *a7)
{
  id v13 = a7;
  if (*(unsigned char *)(*(void *)(a1 + 32) + 52)) {
    goto LABEL_16;
  }
  uint64_t v14 = sub_100109DFC();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    id v15 = *(id *)(a1 + 32);
    if (!v15)
    {
      __n128 v20 = @"<nil>";
      goto LABEL_11;
    }
    uint64_t v16 = (objc_class *)objc_opt_class();
    __n128 v17 = NSStringFromClass(v16);
    if (objc_opt_respondsToSelector())
    {
      __n128 v18 = [v15 performSelector:"accessibilityIdentifier"];
      uint64_t v19 = v18;
      if (v18 && ![v18 isEqualToString:v17])
      {
        __n128 v20 = +[NSString stringWithFormat:@"%@<%p, %@>", v17, v15, v19];

        goto LABEL_9;
      }
    }
    __n128 v20 = +[NSString stringWithFormat:@"%@<%p>", v17, v15];
LABEL_9:

LABEL_11:
    *(_DWORD *)long long buf = 138543362;
    __int16 v23 = v20;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "[%{public}@] Framing map region completed", buf, 0xCu);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 50) = 1;
  uint64_t v21 = *(id **)(a1 + 32);
  if (v13 && !v21[7])
  {
    objc_storeStrong(v21 + 7, a7);
    uint64_t v21 = *(id **)(a1 + 32);
  }
  [v21 proceedWithDroppingPins:1 searchResultsRegion:a2, a3, a4, a5];
LABEL_16:
}

void sub_1009FB76C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 72))
  {
    uint64_t v2 = sub_100109DFC();
    if (!os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
LABEL_12:

      (*(void (**)(double, double, double, double))(*(void *)(*(void *)(a1 + 32) + 72) + 16))(*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void **)(v9 + 72);
      *(void *)(v9 + 72) = 0;

      return;
    }
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_11;
    }
    id v4 = (objc_class *)objc_opt_class();
    uint64_t v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_9;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_9:

LABEL_11:
    *(_DWORD *)long long buf = 138543362;
    uint64_t v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[%{public}@] Calling completion block to drop pins", buf, 0xCu);

    goto LABEL_12;
  }
}

uint64_t sub_1009FB9F0(uint64_t a1, uint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  unint64_t v6 = a6.n128_u64[0];
  unint64_t v7 = a5.n128_u64[0];
  unint64_t v8 = a4.n128_u64[0];
  unint64_t v9 = a3.n128_u64[0];
  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    (*(void (**)(uint64_t, uint64_t, __n128, __n128, __n128, __n128))(v11 + 16))(v11, a2, a3, a4, a5, a6);
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v13 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(result + 16);
    a3.n128_u64[0] = v9;
    a4.n128_u64[0] = v8;
    a5.n128_u64[0] = v7;
    a6.n128_u64[0] = v6;
    return v13(a3, a4, a5, a6);
  }
  return result;
}

void sub_1009FC0F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

void sub_1009FC2F8(id *a1, void *a2, void *a3)
{
  id v5 = a3;
  unsigned __int16 v6 = (unsigned __int16)[a2 unsignedIntValue];
  id v7 = v5;
  uint64_t v8 = v6;
  unint64_t v9 = v7;
  if (v8 == 2)
  {
    unint64_t v9 = objc_opt_new();
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v10 = [a1[4] laneInfoList];
    id v11 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v17;
      do
      {
        uint64_t v14 = 0;
        do
        {
          if (*(void *)v17 != v13) {
            objc_enumerationMutation(v10);
          }
          id v15 = [a1[6] accNavigationLaneGuidanceLaneInfoFrom:*(void *)(*((void *)&v16 + 1) + 8 * (void)v14)];
          [v9 addObject:v15];

          uint64_t v14 = (char *)v14 + 1;
        }
        while (v12 != v14);
        id v12 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v12);
    }
  }
  [a1[5] setInfo:v8 data:v9];
}

void sub_1009FC54C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  [*(id *)(a1 + 32) setInfo:(unsigned __int16)[a2 unsignedIntValue] data:v5];
}

void sub_1009FC688(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  [*(id *)(a1 + 32) setInfo:(unsigned __int16)[a2 unsignedIntValue] data:v5];
}

void sub_1009FC7C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  [*(id *)(a1 + 32) setInfo:(unsigned __int16)[a2 unsignedIntValue] data:v5];
}

id sub_1009FDCBC()
{
  if (qword_101610410 != -1) {
    dispatch_once(&qword_101610410, &stru_101314048);
  }
  id v0 = (void *)qword_101610408;

  return v0;
}

void sub_1009FDD10(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v15 = a3;
  if (v15)
  {
    id v5 = sub_1009FDCBC();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v15;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error fetching route library: %{public}@", (uint8_t *)&buf, 0xCu);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1009FE124;
    block[3] = &unk_1012E5F78;
    id v36 = *(id *)(a1 + 32);
    id v35 = v15;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v39 = 0x3032000000;
    CGFloat v40 = sub_100104224;
    __int16 v41 = sub_100104990;
    id v42 = 0;
    v32[0] = 0;
    v32[1] = v32;
    v32[2] = 0x3032000000;
    v32[3] = sub_100104224;
    void v32[4] = sub_100104990;
    id v33 = 0;
    unsigned __int16 v6 = dispatch_group_create();
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id obj = v4;
    id v7 = [obj countByEnumeratingWithState:&v28 objects:v37 count:16];
    if (v7)
    {
      uint64_t v8 = *(void *)v29;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v29 != v8) {
            objc_enumerationMutation(obj);
          }
          uint64_t v10 = +[MapsSavedRoutesManager routeDataForMapsSyncUserRoute:*(void *)(*((void *)&v28 + 1) + 8 * i)];
          dispatch_group_enter(v6);
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 3221225472;
          void v23[2] = sub_1009FE140;
          _OWORD v23[3] = &unk_101313E70;
          id v11 = v10;
          id v24 = v11;
          p_long long buf = &buf;
          long long v27 = v32;
          id v25 = v6;
          [v11 updateCountryIfNecessaryWithCompletionHandler:v23];
        }
        id v7 = [obj countByEnumeratingWithState:&v28 objects:v37 count:16];
      }
      while (v7);
    }

    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1009FE204;
    v17[3] = &unk_101313EF8;
    long long v19 = &buf;
    __n128 v20 = v32;
    uint64_t v12 = *(void *)(a1 + 48);
    uint64_t v13 = *(void **)(a1 + 32);
    uint64_t v21 = *(void *)(a1 + 40);
    uint64_t v22 = v12;
    id v18 = v13;
    dispatch_group_notify(v6, (dispatch_queue_t)&_dispatch_main_q, v17);

    _Block_object_dispose(v32, 8);
    _Block_object_dispose(&buf, 8);
  }
}

void sub_1009FE0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1009FE124(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, 0, *(void *)(a1 + 32));
}

void sub_1009FE140(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isAvailableForCurrentCountry])
  {
    uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    if (v2) {
      goto LABEL_7;
    }
    uint64_t v3 = +[NSMutableArray array];
    uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;

    uint64_t v6 = *(void *)(a1 + 48);
  }
  else
  {
    uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    if (v2) {
      goto LABEL_7;
    }
    uint64_t v7 = +[NSMutableArray array];
    uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
    unint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    uint64_t v6 = *(void *)(a1 + 56);
  }
  uint64_t v2 = *(void **)(*(void *)(v6 + 8) + 40);
LABEL_7:
  [v2 addObject:*(void *)(a1 + 32)];
  uint64_t v10 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v10);
}

void sub_1009FE204(uint64_t a1)
{
  uint64_t v2 = sub_100099700(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), &stru_101313EB0);
  uint64_t v3 = sub_1009FDCBC();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count];
    id v5 = [v2 componentsJoinedByString:@"\n\t"];
    *(_DWORD *)long long buf = 67109379;
    unsigned int v18 = v4;
    __int16 v19 = 2113;
    __n128 v20 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Loaded %d routes:\n\t%{private}@", buf, 0x12u);
  }
  if ([*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count])
  {
    uint64_t v6 = sub_100099700(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), &stru_101313ED0);
    uint64_t v7 = sub_1009FDCBC();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v8 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count];
      unint64_t v9 = [v6 componentsJoinedByString:@"\n\t"];
      *(_DWORD *)long long buf = 67109379;
      unsigned int v18 = v8;
      __int16 v19 = 2113;
      __n128 v20 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Found %d unavailable routes:\n\t%{private}@", buf, 0x12u);
    }
  }
  uint64_t v10 = +[NSMutableArray array];
  [v10 addObjectsFromArray:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  [v10 addObjectsFromArray:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  [*(id *)(a1 + 56) _updateLocalListWithKnownRoutes:v10];
  id v11 = +[NSMutableArray array];
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(a1 + 64);
  if (v13)
  {
    [v11 addObjectsFromArray:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    uint64_t v13 = *(void *)(a1 + 64);
  }
  if ((v13 & 2) != 0) {
    [v12 addObjectsFromArray:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1009FE610;
  block[3] = &unk_1012E9F68;
  id v15 = *(id *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

NSString *__cdecl sub_1009FE4E0(id a1, GEOComposedGeometryRoutePersistentData *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  unsigned int v4 = [(GEOComposedGeometryRoutePersistentData *)v3 userProvidedName];
  id v5 = [(GEOComposedGeometryRoutePersistentData *)v3 anchorPoints];

  uint64_t v6 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"\"%@\", Anchors: %d", v4, [v5 count]);

  return (NSString *)v6;
}

NSString *__cdecl sub_1009FE57C(id a1, GEOComposedGeometryRoutePersistentData *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  unsigned int v4 = [(GEOComposedGeometryRoutePersistentData *)v3 userProvidedName];
  id v5 = [(GEOComposedGeometryRoutePersistentData *)v3 iso3166CountryCode];

  uint64_t v6 = +[NSString stringWithFormat:@"\"%@\" (%@)", v4, v5];

  return (NSString *)v6;
}

uint64_t sub_1009FE610(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(a1[4] + 16))(a1[4], *(void *)(*(void *)(a1[5] + 8) + 40), *(void *)(*(void *)(a1[6] + 8) + 40), 0);
}

void sub_1009FE944(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = sub_1009FDCBC();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 134217984;
      uint64_t v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error finding saved route with tour muid %llu.", buf, 0xCu);
    }
  }
  if ((unint64_t)[v5 count] >= 2)
  {
    unint64_t v9 = sub_1009FDCBC();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 134217984;
      uint64_t v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Found more than 1 route with tour muid of %llu. This is unexpected, but returning all of them anyway.", buf, 0xCu);
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1009FEB04;
  block[3] = &unk_1012EAFE8;
  id v15 = v5;
  id v11 = *(id *)(a1 + 32);
  id v16 = v6;
  id v17 = v11;
  id v12 = v6;
  id v13 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1009FEB04(uint64_t a1)
{
  sub_100099700(*(void **)(a1 + 32), &stru_101313F60);
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

GEOComposedGeometryRoutePersistentData *__cdecl sub_1009FEB6C(id a1, MSUserRoute *a2, unint64_t a3)
{
  uint64_t v3 = +[MapsSavedRoutesManager routeDataForMapsSyncUserRoute:a2];
  if ([v3 isAvailableForCurrentCountry]) {
    unsigned int v4 = v3;
  }
  else {
    unsigned int v4 = 0;
  }
  id v5 = v4;

  return v5;
}

void sub_1009FEE64(uint64_t a1, void *a2)
{
  id v3 = a2;
  +[MapsSavedRoutesManager _updateUserRoute:v3 withRouteData:*(void *)(a1 + 32)];
  unsigned int v4 = +[MapsSyncStore sharedStore];
  id v13 = v3;
  id v5 = +[NSArray arrayWithObjects:&v13 count:1];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1009FEFB4;
  v9[3] = &unk_101313FB0;
  id v10 = *(id *)(a1 + 32);
  id v11 = v3;
  long long v8 = *(_OWORD *)(a1 + 40);
  id v6 = (id)v8;
  long long v12 = v8;
  id v7 = v3;
  [v4 saveWithObjects:v5 completionHandler:v9];
}

void sub_1009FEFB4(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1009FF098;
  block[3] = &unk_1012F3C08;
  id v7 = a2;
  id v8 = *(id *)(a1 + 32);
  id v9 = *(id *)(a1 + 40);
  long long v5 = *(_OWORD *)(a1 + 48);
  id v3 = (id)v5;
  long long v10 = v5;
  id v4 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1009FF098(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id v2 = [*(id *)(a1 + 48) identifier];
    [*(id *)(a1 + 40) setStorageID:v2];

    [*(id *)(a1 + 64) _saveToLocalListWithRoute:*(void *)(a1 + 40)];
    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 postNotificationName:@"MapsSavedRoutesDidUpdateNotification" object:*(void *)(a1 + 40)];
  }
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    long long v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

void sub_1009FF144(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = [a2 firstObject];
  if (!v6)
  {
    id v7 = sub_1009FDCBC();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = [*(id *)(a1 + 32) storageID];
      int v9 = 138412546;
      long long v10 = v8;
      __int16 v11 = 2112;
      id v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Requested to save a route data with existing storage ID %@, but no matching user route was found in the MapsSyncStore. Creating a new entry. Error: %@", (uint8_t *)&v9, 0x16u);
    }
    id v6 = objc_opt_new();
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1009FF3FC(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 count];
  if (v6 || !v7)
  {
    id v8 = (void (**)(id, id))a1[5];
    if (v8) {
      v8[2](v8, v6);
    }
  }
  [a1[6] _deleteIDFromLocalListWithRoute:a1[4] v6];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_1009FF718;
  v29[3] = &unk_101314000;
  id v30 = a1[4];
  int v9 = sub_1000AC254(v5, v29);
  if (![v9 count])
  {
    long long v10 = sub_1009FDCBC();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      id v11 = a1[4];
      *(_DWORD *)long long buf = 138412290;
      id v33 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Error finding saved route with ID %@ for deletion.", buf, 0xCu);
    }
  }
  uint64_t v22 = v5;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v12 = v9;
  id v13 = [v12 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v26;
    do
    {
      for (i = 0; i != v14; i = (char *)i + 1)
      {
        if (*(void *)v26 != v15) {
          objc_enumerationMutation(v12);
        }
        id v17 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        unsigned int v18 = sub_1009FDCBC();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v19 = [v17 customName];
          *(_DWORD *)long long buf = 138477827;
          id v33 = v19;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Deleting route \"%{private}@\"", buf, 0xCu);
        }
      }
      id v14 = [v12 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v14);
  }

  __n128 v20 = +[MapsSyncStore sharedStore];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  void v23[2] = sub_1009FF75C;
  _OWORD v23[3] = &unk_1012E76C0;
  id v24 = a1[5];
  [v20 deleteWithObjects:v12 completionHandler:v23];
}

id sub_1009FF718(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_1009FF75C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1009FF808;
  void v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1009FF808(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"MapsSavedRoutesDidUpdateNotification" object:0];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_1009FFC0C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1009FDCBC();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v17 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error finding saved route with ID %@ for deletion.", buf, 0xCu);
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1009FFD68;
  block[3] = &unk_1012EF330;
  id v9 = *(id *)(a1 + 40);
  id v14 = v6;
  id v15 = v9;
  id v13 = v5;
  id v10 = v6;
  id v11 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1009FFD68(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100A00990(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsSavedRoutesManager");
  id v2 = (void *)qword_101610408;
  qword_101610408 = (uint64_t)v1;
}

void sub_100A00DB4(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_101314088];
  id v2 = (void *)qword_101610418;
  qword_101610418 = v1;
}

void sub_100A00E14(id a1, FeatureDiscoveryOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  uint64_t v8 = a2;
  id v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  [(FeatureDiscoveryOutlineCell *)v8 setCellModel:v7];
}

void sub_100A021EC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateComponentsFormatter);
  id v2 = (void *)qword_101610428;
  qword_101610428 = (uint64_t)v1;

  [(id)qword_101610428 setAllowedUnits:64];
  id v3 = (void *)qword_101610428;

  [v3 setUnitsStyle:2];
}

void sub_100A031D8(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_101610438;
  qword_101610438 = (uint64_t)v1;

  [(id)qword_101610438 setTimeStyle:1];
  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_101610438 setLocale:v3];
}

void sub_100A04818(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_101610448;
  qword_101610448 = (uint64_t)v1;
}

void sub_100A04D50(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_101610458;
  qword_101610458 = (uint64_t)v1;

  [(id)qword_101610458 setTimeStyle:1];
  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_101610458 setLocale:v3];
}

RideBookingAction *sub_100A0588C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [RideBookingAction alloc];
  id v5 = [*(id *)(a1 + 32) application];
  id v6 = [(RideBookingAction *)v4 initWithActivity:v3 application:v5];

  return v6;
}

id sub_100A06564(id a1, INCurrencyAmount *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [RideBookingCurrencyAmount alloc];
  id v5 = [(INCurrencyAmount *)v3 amount];
  id v6 = [(INCurrencyAmount *)v3 currencyCode];

  id v7 = [(RideBookingCurrencyAmount *)v4 initWithAmount:v5 currencyCode:v6];

  return v7;
}

void sub_100A071F8(uint64_t a1, void *a2)
{
  id v18 = a2;
  id v3 = +[AutocompleteMatchInfo matchInfoWithType:1];
  id v4 = +[NSDate date];
  id v5 = [*(id *)(a1 + 32) historyEntry];
  id v6 = [v5 usageDate];
  [v4 timeIntervalSinceDate:v6];
  [v3 setAgeInSeconds:(int)v7];

  uint64_t v8 = [v18 query];
  LODWORD(v5) = [v8 _web_hasCaseInsensitivePrefix:*(void *)(a1 + 40)];

  if (v5)
  {
    id v9 = [*(id *)(*(void *)(a1 + 48) + 40) query];
    id v10 = [v18 query];
    id v11 = [v9 matchesInString:v10];

    [v11 fractionOfMatch];
    [v3 setFractionOfMatch:];
    id v12 = [v11 prefixLastTokenMatchCover];
    [v3 setPrefixLastTokenMatchCover:v12];

    id v13 = [v11 prefixMatchCover];
    [v3 setPrefixMatchCover:v13];

    id v14 = [v11 prefixMatchPosition];
    [v3 setPrefixMatchPosition:v14];

    [v3 setPrefixMatchesWordBoundary:[v11 prefixMatchesWordBoundary]];
    id v15 = [v11 firstPrefixToken];
    [v3 setFirstPrefixToken:v15];

    id v16 = [v11 secondPrefixToken];
    [v3 setSecondPrefixToken:v16];

    [*(id *)(*(void *)(a1 + 48) + 40) setMatchInfo:v3 forObject:*(void *)(a1 + 32)];
    uint64_t v17 = [[AutocompleteItem alloc] initWithLocalCompletion:*(void *)(a1 + 32) sourceType:7 sourceSubtype:11 matchInfo:v3];
    [*(id *)(a1 + 56) addObject:v17];
  }
}

void sub_100A07438(uint64_t a1, void *a2)
{
  id v3 = [a2 geoMapItem];
  id v4 = +[MKMapItem _itemWithGeoMapItem:v3];

  id v5 = [[SearchResult alloc] initWithMapItem:v4];
  id v6 = *(void **)(a1 + 32);
  double v7 = [(SearchResult *)v5 mapItem];
  uint64_t v8 = [v6 shortAddressForMapItem:v7];

  id v9 = [*(id *)(*(void *)(a1 + 32) + 40) query];
  id v10 = [(SearchResult *)v5 mapItem];
  id v11 = [v10 _geoMapItem];
  id v12 = [v11 _alternateSearchableNames];
  id v13 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", (char *)[v12 count] + 1);

  id v14 = [(SearchResult *)v5 mapItem];
  id v15 = [v14 name];
  [v13 addObject:v15];

  id v16 = [(SearchResult *)v5 mapItem];
  uint64_t v17 = [v16 _geoMapItem];
  id v18 = [v17 _alternateSearchableNames];
  [v13 addObjectsFromArray:v18];

  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v19 = v13;
  id v20 = [v19 countByEnumeratingWithState:&v41 objects:v45 count:16];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = *(void *)v42;
    while (2)
    {
      for (i = 0; i != v21; i = (char *)i + 1)
      {
        if (*(void *)v42 != v22) {
          objc_enumerationMutation(v19);
        }
        uint64_t v24 = [v9 matchesInString:*(void *)(*((void *)&v41 + 1) + 8 * i)];
        if (v24)
        {
          long long v25 = (void *)v24;
          long long v26 = *(void **)(a1 + 32);
          long long v27 = [(SearchResult *)v5 mapItem];
          [v27 name];
          long long v28 = v40 = v4;
          [v26 _removeCompletionItemForStringKey:v28 query:*(void *)(a1 + 40) fromCompletions:*(void *)(a1 + 48)];

          [*(id *)(a1 + 32) _removeCompletionItemForStringKey:v8 query:*(void *)(a1 + 40) fromCompletions:*(void *)(a1 + 48)];
          long long v29 = +[AutocompleteMatchInfo matchInfoWithType:1];
          id v30 = +[NSDate date];
          long long v31 = [*(id *)(a1 + 56) historyEntry];
          id v32 = [v31 usageDate];
          [v30 timeIntervalSinceDate:v32];
          [v29 setAgeInSeconds:(int)v33];

          id v4 = v40;
          [v25 fractionOfMatch];
          [v29 setFractionOfMatch:];
          unsigned __int8 v34 = [v25 prefixLastTokenMatchCover];
          [v29 setPrefixLastTokenMatchCover:v34];

          id v35 = [v25 prefixMatchCover];
          [v29 setPrefixMatchCover:v35];

          id v36 = [v25 prefixMatchPosition];
          [v29 setPrefixMatchPosition:v36];

          [v29 setPrefixMatchesWordBoundary:[v25 prefixMatchesWordBoundary]];
          CGFloat v37 = [v25 firstPrefixToken];
          [v29 setFirstPrefixToken:v37];

          uint64_t v38 = [v25 secondPrefixToken];
          [v29 setSecondPrefixToken:v38];

          [*(id *)(*(void *)(a1 + 32) + 40) setMatchInfo:v29 forObject:*(void *)(a1 + 56)];
          uint64_t v39 = [[AutocompleteItem alloc] initWithLocalCompletion:*(void *)(a1 + 56) sourceType:7 sourceSubtype:10 matchInfo:v29];
          [*(id *)(a1 + 64) addObject:v39];

          goto LABEL_11;
        }
      }
      id v21 = [v19 countByEnumeratingWithState:&v41 objects:v45 count:16];
      if (v21) {
        continue;
      }
      break;
    }
  }
LABEL_11:
}

unint64_t sub_100A07888(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100A07B70(a1);
  id v5 = sub_100A07B70(v3);

  if (v5) {
    unint64_t v6 = (unint64_t)[v4 caseInsensitiveCompare:v5];
  }
  else {
    unint64_t v6 = v4 == 0;
  }

  return v6;
}

id sub_100A07B70(void *a1)
{
  id v1 = [a1 autocompleteObject];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = v1;
LABEL_5:
    id v3 = v2;
    goto LABEL_6;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = [v1 title];
    goto LABEL_5;
  }
  if (+[AddressBookManager addressBookAllowed])
  {
    objc_opt_class();
    id v5 = v1;
    id v6 = (objc_opt_isKindOfClass() & 1) != 0 ? v5 : 0;
    id v7 = v6;

    if (v7)
    {
      uint64_t v8 = [v7 contact];
      id v9 = +[CNContactsUserDefaults sharedDefaults];
      id v10 = [v9 sortOrder];

      if (v10 == (id)3)
      {
        id v11 = [v8 familyName];
        id v3 = v11;
        if (v11 && [v11 length]) {
          goto LABEL_19;
        }
      }
      id v3 = [v8 givenName];
LABEL_19:

      goto LABEL_6;
    }
  }
  id v3 = 0;
LABEL_6:

  return v3;
}

void sub_100A07D2C(id a1)
{
  id v3 = +[NSBundle mainBundle];
  uint64_t v1 = [v3 localizedStringForKey:@" · [List view details separator]" value:@"localized string not found" table:0];
  id v2 = (void *)qword_101610470;
  qword_101610470 = v1;
}

void sub_100A07F44(id a1, double a2, id a3)
{
  id v4 = a3;
  id v5 = +[UIImage imageNamed:@"search"];
  (*((void (**)(id, id, void))a3 + 2))(v4, v5, 0);
}

void sub_100A08080(id a1, double a2, id a3)
{
  id v4 = a3;
  id v5 = +[UIImage imageNamed:@"RAPHomeWorkAddMissing"];
  (*((void (**)(id, id, void))a3 + 2))(v4, v5, 0);
}

void sub_100A08328(uint64_t a1, void *a2)
{
  id v3 = a2;
  switch([*(id *)(a1 + 32) addressType])
  {
    case 0u:
      id v4 = +[MapsUIImageCache sharedCache];
      id v5 = [*(id *)(a1 + 32) contact];
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_100A08604;
      void v8[3] = &unk_1012E60A0;
      id v6 = &v9;
      id v9 = v3;
      [v4 getImageForContact:v5 completion:v8];
      goto LABEL_7;
    case 1u:
      id v4 = +[MapsUIImageCache sharedCache];
      id v5 = +[GEOFeatureStyleAttributes homeStyleAttributes];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_100A085C8;
      v14[3] = &unk_1012E60A0;
      id v6 = &v15;
      id v15 = v3;
      id v7 = v14;
      goto LABEL_6;
    case 2u:
      id v4 = +[MapsUIImageCache sharedCache];
      id v5 = +[GEOFeatureStyleAttributes workStyleAttributes];
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_100A085DC;
      v12[3] = &unk_1012E60A0;
      id v6 = &v13;
      id v13 = v3;
      id v7 = v12;
      goto LABEL_6;
    case 3u:
      id v4 = +[MapsUIImageCache sharedCache];
      id v5 = +[GEOFeatureStyleAttributes schoolStyleAttributes];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_100A085F0;
      v10[3] = &unk_1012E60A0;
      id v6 = &v11;
      id v11 = v3;
      id v7 = v10;
LABEL_6:
      [v4 getImageForStyleAttributes:v5 completion:v7];
LABEL_7:

      break;
    default:
      break;
  }
}

uint64_t sub_100A085C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100A085DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100A085F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100A08604(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

SearchResultMapItem *sub_100A08618(uint64_t a1)
{
  uint64_t v1 = [[SearchResult alloc] initWithMapItem:*(void *)(a1 + 32) searchResultType:0 addressBookAddress:*(void *)(a1 + 40) retainedSearchMetadata:0 resultIndex:0];
  id v2 = [(SearchResultMapItemBase *)[SearchResultMapItem alloc] initWithSearchResult:v1];

  return v2;
}

void sub_100A08924(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) isDynamicCurrentLocation])
  {
    id v4 = +[UIImage systemImageNamed:@"location.fill"];
    id v5 = objc_alloc_init(ImageIconWithBackgroundConfiguration);
    id v6 = +[UIColor secondarySystemFillColor];
    [(ImageIconWithBackgroundConfiguration *)v5 setBackgroundColor:v6];

    id v7 = +[UIColor systemBlueColor];
    [(ImageIconWithBackgroundConfiguration *)v5 setTintColor:v7];

    -[ImageIconWithBackgroundConfiguration setIconSize:](v5, "setIconSize:", 30.0, 30.0);
    uint64_t v8 = [v4 _maps_imageIconWithBackgroundConfiguration:v5];
    v3[2](v3, v8, 1);
  }
  else
  {
    id v9 = +[MapsUIImageCache sharedCache];
    id v10 = +[GEOFeatureStyleAttributes markerStyleAttributes];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100A08AC4;
    v11[3] = &unk_1012E60A0;
    id v12 = v3;
    [v9 getImageForStyleAttributes:v10 completion:v11];
  }
}

uint64_t sub_100A08AC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

SearchResultMapItem *sub_100A08AD8(uint64_t a1)
{
  uint64_t v1 = [(SearchResultMapItemBase *)[SearchResultMapItem alloc] initWithSearchResult:*(void *)(a1 + 32)];

  return v1;
}

id sub_100A08D18(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    id v2 = +[NSBundle mainBundle];
    id v3 = [v2 localizedStringForKey:@"NEAR_AUTOCOMPLETE_ROW" value:@"localized string not found" table:0];

    id v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v3, v1);
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

void sub_100A09074(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [*(id *)(a1 + 32) isDynamicCurrentLocation];
  id v5 = +[MapsUIImageCache sharedCache];
  if (v4)
  {
    id v6 = +[AddressBookManager sharedManager];
    id v7 = [v6 meCard];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    id v13[2] = sub_100A091E8;
    v13[3] = &unk_1012E60A0;
    uint64_t v8 = &v14;
    id v14 = v3;
    id v9 = v3;
    [v5 getImageForContact:v7 completion:v13];
  }
  else
  {
    id v6 = +[GEOFeatureStyleAttributes markerStyleAttributes];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100A091FC;
    v11[3] = &unk_1012E60A0;
    uint64_t v8 = &v12;
    id v12 = v3;
    id v10 = v3;
    [v5 getImageForStyleAttributes:v6 completion:v11];
  }
}

uint64_t sub_100A091E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100A091FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

SearchResultMapItem *sub_100A09210(uint64_t a1)
{
  id v1 = [(SearchResultMapItemBase *)[SearchResultMapItem alloc] initWithSearchResult:*(void *)(a1 + 32)];

  return v1;
}

void sub_100A09498(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = *(unsigned __int8 *)(a1 + 40);
  id v5 = +[MapsUIImageCache sharedCache];
  uint64_t v6 = *(void *)(a1 + 32);
  if (v4)
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100A095C4;
    v12[3] = &unk_1012E60A0;
    id v7 = &v13;
    id v13 = v3;
    id v8 = v3;
    [v5 getImageForInvertedStyleAttributes:v6 completion:v12];
  }
  else
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100A095D8;
    v10[3] = &unk_1012E60A0;
    id v7 = &v11;
    id v11 = v3;
    id v9 = v3;
    [v5 getImageForStyleAttributes:v6 completion:v10];
  }
}

uint64_t sub_100A095C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100A095D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0983C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[MapsUIImageCache sharedCache];
  uint64_t v5 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A098FC;
  v7[3] = &unk_1012E60A0;
  id v8 = v3;
  id v6 = v3;
  [v4 getImageForSuggestion:v5 completion:v7];
}

uint64_t sub_100A098FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

SuggestionsItem *sub_100A09910(uint64_t a1)
{
  id v1 = [[SuggestionsItem alloc] initWithSuggestion:*(void *)(a1 + 32) order:0 sourceType:9 sourceSubtype:0 hasPriorityOverride:0 priorityOverride:0];

  return v1;
}

void sub_100A09B70(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[MapsUIImageCache sharedCache];
  uint64_t v5 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A09C34;
  v7[3] = &unk_1012E60A0;
  id v8 = v3;
  id v6 = v3;
  [v4 getImageForRowFavorite:v5 inverted:0 completion:v7];
}

uint64_t sub_100A09C34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A09D64(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  int v4 = a2;
  id v5 = [v3 handlerType];
  id v6 = *(void **)(a1 + 32);
  if (v5 == (id)4) {
    [v6 badgeImage];
  }
  else {
  id v7 = [v6 image];
  }
  v4[2](v4);
}

void sub_100A09FBC(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  id v6 = dispatch_get_global_queue(21, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A0A094;
  block[3] = &unk_1012EB5B8;
  id v7 = *(id *)(a1 + 32);
  double v12 = a3;
  id v10 = v7;
  id v11 = v5;
  id v8 = v5;
  dispatch_async(v6, block);
}

void sub_100A0A094(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) system];
  id v3 = [v2 artwork];
  int v4 = +[UIImage _mapkit_transitArtworkImageWithDataSource:v3 size:6 scale:*(double *)(a1 + 48)];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A0A188;
  v7[3] = &unk_1012E5F78;
  id v5 = *(id *)(a1 + 40);
  id v8 = v4;
  id v9 = v5;
  id v6 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
}

uint64_t sub_100A0A188(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_100A0A404(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[MapsUIImageCache sharedCache];
  uint64_t v5 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A0A4C4;
  v7[3] = &unk_1012E60A0;
  id v8 = v3;
  id v6 = v3;
  [v4 getImageForMapItem:v5 completion:v7];
}

uint64_t sub_100A0A4C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0A5D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[MapsUIImageCache sharedCache];
  uint64_t v5 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A0A694;
  v7[3] = &unk_1012E60A0;
  id v8 = v3;
  id v6 = v3;
  [v4 getImageForMapItem:v5 completion:v7];
}

uint64_t sub_100A0A694(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0AA04(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[MapsUIImageCache sharedCache];
  uint64_t v5 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A0AAC4;
  v7[3] = &unk_1012E60A0;
  id v8 = v3;
  id v6 = v3;
  [v4 getImageForStyleAttributes:v5 completion:v7];
}

uint64_t sub_100A0AAC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0AB70(id a1, double a2, id a3)
{
  id v3 = a3;
  int v4 = +[MapsUIImageCache sharedCache];
  uint64_t v5 = +[GEOFeatureStyleAttributes parkedCarStyleAttributes];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A0AC40;
  v7[3] = &unk_1012E60A0;
  id v8 = v3;
  id v6 = v3;
  [v4 getImageForStyleAttributes:v5 completion:v7];
}

uint64_t sub_100A0AC40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0B640(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = v3;
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5)
  {
    (*((void (**)(id, uint64_t, void))v3 + 2))(v3, v5, 0);
  }
  else
  {
    if (!*(void *)(a1 + 40))
    {
      if (*(void *)(a1 + 56))
      {
        id v8 = +[MapsUIImageCache sharedCache];
        uint64_t v9 = *(void *)(a1 + 56);
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 3221225472;
        void v23[2] = sub_100A0B940;
        _OWORD v23[3] = &unk_1012E60A0;
        id v24 = v4;
        [v8 getImageForStyleAttributes:v9 completion:v23];

        id v10 = v24;
      }
      else if (*(void *)(a1 + 64))
      {
        id v11 = +[MapsUIImageCache sharedCache];
        uint64_t v12 = *(void *)(a1 + 64);
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472;
        v21[2] = sub_100A0B954;
        v21[3] = &unk_1012E60A0;
        id v22 = v4;
        [v11 getImageForContact:v12 completion:v21];

        id v10 = v22;
      }
      else
      {
        if ([*(id *)(a1 + 48) _type] != (id)4) {
          goto LABEL_15;
        }
        id v13 = *(void **)(a1 + 72);
        if (v13)
        {
          id v14 = [v13 unsignedIntValue];
        }
        else
        {
          id v15 = [*(id *)(a1 + 48) collectionResult];
          id v16 = [v15 collection];
          uint64_t v17 = [v16 publisherAttribution];
          id v14 = [v17 iconIdentifier];
        }
        id v18 = +[MapsUIImageCache sharedCache];
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_100A0B9FC;
        v19[3] = &unk_1012E60A0;
        id v20 = v4;
        [v18 getImageForPublisherWithIconIdentifier:v14 completion:v19];

        id v10 = v20;
      }

      goto LABEL_15;
    }
    id v6 = [*(id *)(a1 + 48) category];
    id v7 = +[MapsUIImageCache sharedCache];
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_100A0B92C;
    void v25[3] = &unk_1012E60A0;
    id v26 = v4;
    [v7 getImageForCategory:v6 completion:v25];
  }
LABEL_15:
}

uint64_t sub_100A0B92C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100A0B940(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0B954(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    id v3 = *(void (**)(uint64_t))(v2 + 16);
    uint64_t v4 = *(void *)(a1 + 32);
    v3(v4);
  }
  else
  {
    id v5 = +[UIImage imageNamed:@"my_location_cell_icon"];
    (*(void (**)(uint64_t, id, uint64_t))(v2 + 16))(v2, v5, 1);
  }
}

void sub_100A0B9FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (v3)
  {
    id v4 = v3;
  }
  else
  {
    id v4 = +[UIImage imageNamed:@"Fallback-Guide"];
  }
  id v5 = v4;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

SearchResultMapItem *sub_100A0BA84(uint64_t a1)
{
  id v1 = [[SearchResult alloc] initWithMapItem:*(void *)(a1 + 32) syncIdentifier:0];
  uint64_t v2 = [(SearchResultMapItemBase *)[SearchResultMapItem alloc] initWithSearchResult:v1];

  return v2;
}

void sub_100A0BCA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) iconStyleAttributes];

  +[MapsUIImageCache sharedCache];
  if (v4) {
    id v5 = {;
  }
    id v6 = objc_alloc((Class)GEOFeatureStyleAttributes);
    id v7 = [*(id *)(a1 + 32) iconStyleAttributes];
    id v8 = [v6 initWithGEOStyleAttributes:v7];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100A0BDF0;
    v11[3] = &unk_1012E60A0;
    id v12 = v3;
    [v5 getImageForStyleAttributes:v8 completion:v11];
  }
  else {
    uint64_t v9 = {;
  }
    id v10 = [v9 searchImage];
    (*((void (**)(id, void *, void))v3 + 2))(v3, v10, 0);
  }
}

uint64_t sub_100A0BDF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0C154(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(a1 + 40)
    && (+[AutocompleteClientSource autocompleteClientSourceAppIconWithType:*(void *)(a1 + 32)], (uint64_t v4 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    id v5 = (void *)v4;
    v3[2](v3, v4, 0);
  }
  else
  {
    id v6 = +[MapsUIImageCache sharedCache];
    id v7 = +[GEOFeatureStyleAttributes markerStyleAttributes];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100A0C264;
    void v8[3] = &unk_1012E60A0;
    uint64_t v9 = v3;
    [v6 getImageForStyleAttributes:v7 completion:v8];

    id v5 = v9;
  }
}

uint64_t sub_100A0C264(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0CA58(id a1, double a2, id a3)
{
  id v4 = a3;
  id v5 = +[UIImage imageNamed:@"recentroute"];
  (*((void (**)(id, id, void))a3 + 2))(v4, v5, 0);
}

void sub_100A0CE60(id a1, double a2, id a3)
{
  id v4 = (void (**)(id, id, void))a3;
  id v5 = +[GEOFeatureStyleAttributes customSavedRouteStyleAttributes];
  id v6 = +[MKIconManager imageForStyle:v5 size:3 forScale:0 format:a2];

  v4[2](v4, v6, 0);
}

void sub_100A0D344(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MapsUIImageCache sharedCache];
  uint64_t v5 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A0D404;
  v7[3] = &unk_1012E60A0;
  id v8 = v3;
  id v6 = v3;
  [v4 getImageForMapItem:v5 completion:v7];
}

uint64_t sub_100A0D404(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

SearchResultMapItem *sub_100A0D418(uint64_t a1)
{
  id v1 = [[SearchResult alloc] initWithGEOMapItem:*(void *)(a1 + 32)];
  uint64_t v2 = [(SearchResultMapItemBase *)[SearchResultMapItem alloc] initWithSearchResult:v1];

  return v2;
}

void sub_100A0D620(id a1, double a2, id a3)
{
  id v4 = a3;
  id v5 = +[UIImage imageNamed:@"search"];
  (*((void (**)(id, id, void))a3 + 2))(v4, v5, 0);
}

void sub_100A0D980(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) publisherAttribution];
  id v5 = [v4 iconIdentifier];

  id v6 = +[MapsUIImageCache sharedCache];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100A0DA58;
  void v8[3] = &unk_1012E60A0;
  id v9 = v3;
  id v7 = v3;
  [v6 getImageForPublisherWithIconIdentifier:v5 completion:v8];
}

void sub_100A0DA58(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (v3)
  {
    id v4 = v3;
  }
  else
  {
    id v4 = +[UIImage imageNamed:@"Fallback-Guide"];
  }
  id v5 = v4;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0DBDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) sharedTrips];
  id v5 = [v4 count];

  if (v5 != (id)1)
  {
    CFStringRef v17 = @"MultiSharedTrip";
LABEL_6:
    id v15 = +[UIImage imageNamed:v17];
    v3[2](v3, v15, 0);
    goto LABEL_7;
  }
  id v6 = [*(id *)(a1 + 32) sharedTrips];
  id v7 = [v6 firstObject];
  id v8 = [v7 senderInfo];
  unsigned int v9 = [v8 hasLocalContactIdentifier];

  if (!v9)
  {
    CFStringRef v17 = @"SharedTrip";
    goto LABEL_6;
  }
  id v10 = +[AddressBookManager sharedManager];
  id v11 = [*(id *)(a1 + 32) sharedTrips];
  id v12 = [v11 firstObject];
  id v13 = [v12 senderInfo];
  id v14 = [v13 localContactIdentifier];
  id v15 = [v10 contactForCNContactIdentifier:v14];

  id v16 = +[MapsUIImageCache sharedCache];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100A0DDC8;
  id v18[3] = &unk_1012E60A0;
  id v19 = v3;
  [v16 getImageForContact:v15 completion:v18];

LABEL_7:
}

void sub_100A0DDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    id v3 = *(void (**)(uint64_t))(v2 + 16);
    uint64_t v4 = *(void *)(a1 + 32);
    v3(v4);
  }
  else
  {
    id v5 = +[UIImage imageNamed:@"SharedTrip"];
    (*(void (**)(uint64_t, id, uint64_t))(v2 + 16))(v2, v5, 1);
  }
}

void sub_100A0DFD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) senderInfo];
  unsigned int v5 = [v4 hasLocalContactIdentifier];

  if (v5)
  {
    id v6 = +[AddressBookManager sharedManager];
    id v7 = [*(id *)(a1 + 32) senderInfo];
    id v8 = [v7 localContactIdentifier];
    unsigned int v9 = [v6 contactForCNContactIdentifier:v8];

    id v10 = +[MapsUIImageCache sharedCache];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100A0E144;
    v11[3] = &unk_1012E60A0;
    id v12 = v3;
    [v10 getImageForContact:v9 completion:v11];
  }
  else
  {
    unsigned int v9 = +[UIImage imageNamed:@"SharedTrip"];
    (*((void (**)(id, void *, void))v3 + 2))(v3, v9, 0);
  }
}

void sub_100A0E144(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    id v3 = *(void (**)(uint64_t))(v2 + 16);
    uint64_t v4 = *(void *)(a1 + 32);
    v3(v4);
  }
  else
  {
    id v5 = +[UIImage imageNamed:@"SharedTrip"];
    (*(void (**)(uint64_t, id, uint64_t))(v2 + 16))(v2, v5, 1);
  }
}

void sub_100A0E398(id a1, double a2, id a3)
{
  id v4 = a3;
  id v6 = +[UIImage imageNamed:@"RAPLookAround"];
  id v5 = [v6 imageWithRenderingMode:2];
  (*((void (**)(id, void *, void))a3 + 2))(v4, v5, 0);
}

void sub_100A0E670(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MapsUIImageCache sharedCache];
  id v5 = [*(id *)(a1 + 32) publisherAttribution];
  id v6 = [v5 iconIdentifier];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100A0E748;
  void v8[3] = &unk_1012E60A0;
  id v9 = v3;
  id v7 = v3;
  [v4 getImageForPublisherWithIconIdentifier:v6 completion:v8];
}

uint64_t sub_100A0E748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0EA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 176), 8);
  _Block_object_dispose((const void *)(v35 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100A0EA58(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 query];
  uint64_t v5 = *(void *)(a1[4] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  uint64_t v7 = [v3 locationDisplayString];

  uint64_t v8 = *(void *)(a1[5] + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  uint64_t v10 = +[UIImage imageNamed:@"search"];
  uint64_t v11 = *(void *)(a1[6] + 8);
  id v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;
}

void sub_100A0EB04(void *a1, void *a2)
{
  id v21 = a2;
  id v3 = [v21 geoMapItem];
  uint64_t v4 = [v3 name];
  uint64_t v5 = *(void *)(a1[4] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  uint64_t v7 = [v21 geoMapItem];
  uint64_t v8 = [v7 addressObject];

  uint64_t v9 = [v8 cityDisplayNameWithFallback:0];
  uint64_t v10 = *(void *)(a1[5] + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  if (![*(id *)(*(void *)(a1[5] + 8) + 40) length]
    || [*(id *)(*(void *)(a1[4] + 8) + 40) length]
    && [*(id *)(*(void *)(a1[5] + 8) + 40) isEqualToString:*(void *)(*(void *)(a1[4] + 8) + 40)])
  {
    id v12 = [v8 address];
    id v13 = [v12 structuredAddress];
    uint64_t v14 = [v13 country];
    uint64_t v15 = *(void *)(a1[5] + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;
  }
  CFStringRef v17 = [v21 geoMapItem];
  uint64_t v18 = +[MKMapItem _itemWithGeoMapItem:v17];
  uint64_t v19 = *(void *)(a1[6] + 8);
  id v20 = *(void **)(v19 + 40);
  *(void *)(v19 + 40) = v18;
}

void sub_100A0EC88(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v5)
  {
    (*((void (**)(id, uint64_t, void))v3 + 2))(v3, v5, 0);
  }
  else if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    id v6 = +[MapsUIImageCache sharedCache];
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100A0ED84;
    void v8[3] = &unk_1012E60A0;
    id v9 = v4;
    [v6 getImageForMapItem:v7 completion:v8];
  }
}

uint64_t sub_100A0ED84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0F3C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[MapsUIImageCache sharedCache];
  uint64_t v5 = [*(id *)(a1 + 32) mapItem];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A0F494;
  v7[3] = &unk_1012E60A0;
  id v8 = v3;
  id v6 = v3;
  [v4 getImageForMapItem:v5 completion:v7];
}

uint64_t sub_100A0F494(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0F7F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) mapItem];

  if (v4)
  {
    uint64_t v5 = +[MapsUIImageCache sharedCache];
    id v6 = [*(id *)(a1 + 32) mapItem];
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_100A0FB28;
    v19[3] = &unk_1012E60A0;
    id v20 = v3;
    [v5 getImageForMapItem:v6 completion:v19];

    uint64_t v7 = v20;
LABEL_5:
  }
  else
  {
    switch([*(id *)(a1 + 32) reportType])
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0x10u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
        id v8 = +[MapsUIImageCache sharedCache];
        id v9 = +[GEOFeatureStyleAttributes markerStyleAttributes];
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        v17[2] = sub_100A0FB3C;
        v17[3] = &unk_1012E60A0;
        id v18 = v3;
        [v8 getImageForStyleAttributes:v9 completion:v17];

        uint64_t v7 = v18;
        goto LABEL_5;
      case 8u:
        uint64_t v10 = +[UIImage imageNamed:@"recentroute"];
        goto LABEL_13;
      case 9u:
        CFStringRef v11 = @"binoculars.fill";
        goto LABEL_12;
      case 0xCu:
        id v12 = +[UIImage imageNamed:@"Fallback-Guide"];
        (*((void (**)(id, void *, uint64_t))v3 + 2))(v3, v12, 1);
        goto LABEL_14;
      case 0xFu:
        id v13 = *(void **)(a1 + 40);
        uint64_t v14 = +[UIImageSymbolConfiguration configurationWithPointSize:15.0];
        uint64_t v15 = +[UIImage _systemImageNamed:@"pin.point.of.interest.badge.plus.fill" withConfiguration:v14];
        id v16 = [v13 _convertSymbolToIconImage:v15 RAPType:[*(id *)(a1 + 32) reportType]];
        (*((void (**)(id, void *, uint64_t))v3 + 2))(v3, v16, 1);

        break;
      case 0x11u:
        CFStringRef v11 = @"signpost.right.fill";
LABEL_12:
        uint64_t v10 = +[UIImage systemImageNamed:v11];
LABEL_13:
        id v12 = (void *)v10;
        (*((void (**)(id, uint64_t, void))v3 + 2))(v3, v10, 0);
LABEL_14:

        break;
      default:
        break;
    }
  }
}

uint64_t sub_100A0FB28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100A0FB3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A0FFFC(id a1, double a2, id a3)
{
  id v4 = a3;
  id v6 = +[UserInformationManager sharedInstance];
  uint64_t v5 = [v6 userIcon];
  (*((void (**)(id, void *, void))a3 + 2))(v4, v5, 0);
}

void *sub_100A10294(void *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_100A1414C;
  void v4[3] = &unk_101314630;
  id v5 = a1;
  id v1 = v5;
  uint64_t v2 = objc_retainBlock(v4);

  return v2;
}

void sub_100A10338(void *a1, void *a2)
{
  id v3 = a2;
  id v8 = a1;
  [v8 setImageStyle:1];
  int64_t v4 = +[MapsOfflineUIHelper idealDisplayAspectRatio:v3];

  double v5 = 53.0;
  double v6 = 40.0;
  if (v4 == 2) {
    double v6 = 30.0;
  }
  if (v4 != 1) {
    double v5 = v6;
  }
  [v8 setImageSize:40.0 v5];
  uint64_t v7 = +[UIColor _mapkit_colorNamed:@"CartographyBackgroundColor"];
  [v8 setLeadingImageBackgroundColor:v7];

  [v8 setImageShadowStyle:1];
}

uint64_t sub_100A106EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100A10984(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  uint64_t v6 = *(void *)(a1 + 32);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100A10A58;
  v11[3] = &unk_101314548;
  id v12 = v5;
  uint64_t v7 = *(void (**)(uint64_t, void *, double))(v6 + 16);
  id v8 = v5;
  id v9 = v7(v6, v11, a3);

  return v9;
}

void sub_100A10A58(uint64_t a1, void *a2)
{
  id v3 = a2;
  int64_t v4 = v3;
  if (v3)
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_100A10C90;
    v20[3] = &unk_101314520;
    id v5 = v3;
    id v21 = v5;
    uint64_t v19 = a1;
    uint64_t v6 = objc_retainBlock(v20);
    uint64_t v7 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:1];
    id v8 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:2];
    id v9 = objc_alloc((Class)UIGraphicsImageRenderer);
    [v5 size];
    id v10 = [v9 initWithSize:];
    CFStringRef v11 = ((void (*)(void *, void *))v6[2])(v6, v7);
    id v12 = [v10 imageWithActions:v11];

    id v13 = objc_alloc((Class)UIGraphicsImageRenderer);
    [v5 size];
    id v14 = [v13 initWithSize:];
    uint64_t v15 = ((void (*)(void *, void *))v6[2])(v6, v8);
    id v16 = [v14 imageWithActions:v15];

    id v17 = objc_alloc_init((Class)UIImageAsset);
    [v17 registerImage:v12 withTraitCollection:v7];
    [v17 registerImage:v16 withTraitCollection:v8];
    id v18 = [v17 imageWithTraitCollection:v7];
    (*(void (**)(void))(*(void *)(v19 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void *sub_100A10C90(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100A10D4C;
  v7[3] = &unk_1013144F8;
  id v8 = *(id *)(a1 + 32);
  id v9 = v3;
  id v4 = v3;
  id v5 = objc_retainBlock(v7);

  return v5;
}

void sub_100A10D4C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 imageAsset];
  uint64_t v6 = [v5 imageWithTraitCollection:*(void *)(a1 + 40)];
  uint64_t v7 = v6;
  if (!v6) {
    uint64_t v7 = *(void **)(a1 + 32);
  }
  id v8 = v7;

  id v9 = (CGContext *)[v4 CGContext];
  CGContextSaveGState(v9);
  memset(&v23, 0, sizeof(v23));
  CGAffineTransformMakeScale(&v23, 1.0, -1.0);
  [*(id *)(a1 + 32) size];
  CGAffineTransform v21 = v23;
  CGAffineTransformTranslate(&transform, &v21, 0.0, -v10);
  CGAffineTransform v23 = transform;
  CGContextConcatCTM(v9, &transform);
  [*(id *)(a1 + 32) size];
  CGFloat v12 = v11;
  [*(id *)(a1 + 32) size];
  CGFloat v14 = v13;
  id v15 = v8;
  id v16 = (CGImage *)[v15 CGImage];
  v24.origin.CGFloat x = 0.0;
  v24.origin.double y = 0.0;
  v24.size.double width = v12;
  v24.size.double height = v14;
  CGContextDrawImage(v9, v24, v16);
  CGContextSetBlendMode(v9, kCGBlendModeSaturation);
  CGContextSetRGBFillColor(v9, 0.0, 0.0, 0.0, 1.0);
  [*(id *)(a1 + 32) size];
  CGFloat v18 = v17;
  [*(id *)(a1 + 32) size];
  CGFloat v20 = v19;

  v25.origin.CGFloat x = 0.0;
  v25.origin.double y = 0.0;
  v25.size.double width = v18;
  v25.size.double height = v20;
  CGContextFillRect(v9, v25);
  CGContextRestoreGState(v9);
}

uint64_t sub_100A117C0(uint64_t a1)
{
  return 0;
}

void sub_100A11B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A11B5C(uint64_t a1, void *a2, uint64_t a3)
{
  id v12 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained imageCreationCanBeCached])
    {
      objc_storeStrong(v7 + 2, a2);
      *((unsigned char *)v7 + 24) = a3;
    }
    id v8 = v7[4];
    void v7[4] = 0;

    if ([*(id *)(a1 + 32) imageCreationCanBeCached])
    {
      id v9 = v7[5];
      if (v9)
      {
        double v10 = (void (**)(id, id, void))objc_retainBlock(v9);
        id v11 = v7[5];
        void v7[5] = 0;

        v10[2](v10, v12, a3);
      }
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    }
  }
}

void sub_100A12088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A120A4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = [v3 contents];

  [WeakRetained _updateSubtitleWithContents:v4];
  [WeakRetained updateObservers];
}

id sub_100A12A80(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateObservers];
}

id sub_100A12D88(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateObservers];
}

void sub_100A13C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A13D04(id a1)
{
  id v1 = objc_alloc_init((Class)NSByteCountFormatter);
  uint64_t v2 = (void *)qword_101610480;
  qword_101610480 = (uint64_t)v1;
}

void sub_100A13D40(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v2 = [WeakRetained cancelDownloadBlock];

    id WeakRetained = v4;
    if (v2)
    {
      id v3 = [v4 cancelDownloadBlock];
      v3[2]();

      id WeakRetained = v4;
    }
  }
}

void sub_100A13DC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v2 = [WeakRetained resumeDownloadBlock];

    id WeakRetained = v4;
    if (v2)
    {
      id v3 = [v4 resumeDownloadBlock];
      v3[2]();

      id WeakRetained = v4;
    }
  }
}

void sub_100A13F1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 232) state];
    id v3 = [*(id *)(*(void *)(a1 + 32) + 232) pairedDeviceState];
    [WeakRetained _updateModelWithSubscriptionState:v2 pairedDeviceState:v3];

    [WeakRetained updateObservers];
  }
}

id sub_100A1414C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int64_t v4 = +[MapsOfflineUIHelper idealDisplayAspectRatio:*(void *)(a1 + 32)];
  double v5 = 40.0;
  if (v4 == 2) {
    double v5 = 30.0;
  }
  if (v4 == 1) {
    double v6 = 53.0;
  }
  else {
    double v6 = v5;
  }
  GEOMapRectForMapRegion();
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  id v15 = objc_alloc_init((Class)MKMapSnapshotOptions);
  id v16 = [objc_alloc((Class)MKStandardMapConfiguration) initWithElevationStyle:0];
  double v17 = +[MKPointOfInterestFilter filterExcludingAllCategories];
  [v16 setPointOfInterestFilter:v17];

  [v15 setPreferredConfiguration:v16];
  [v15 _setShowsRoadShields:0];
  [v15 _setAllowsSimultaneousLightDarkSnapshots:1];
  [v15 setMapRect:v8, v10, v12, v14];
  [v15 setSize:40.0 * 6.0, v6 * 6.0];
  id v18 = [objc_alloc((Class)MKMapSnapshotter) initWithOptions:v15];
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_100A143D0;
  void v25[3] = &unk_101314608;
  id v19 = v3;
  id v26 = v19;
  uint64_t v27 = 0x4044000000000000;
  double v28 = v6;
  [v18 startWithCompletionHandler:v25];
  objc_initWeak(&location, v18);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100A14584;
  v22[3] = &unk_1012E6708;
  objc_copyWeak(&v23, &location);
  id v20 = [v22 copy];
  objc_destroyWeak(&v23);
  objc_destroyWeak(&location);

  return v20;
}

void sub_100A143B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A143D0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v16 = v5;
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    double v6 = [v5 image];
    double v7 = [v6 imageAsset];

    if (v7)
    {
      double v8 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:1];
      double v9 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:2];
      double v10 = [v7 imageWithTraitCollection:v8];
      double v11 = [v10 imageByPreparingThumbnailOfSize:*(double *)(a1 + 40), *(double *)(a1 + 48)];

      double v12 = [v7 imageWithTraitCollection:v9];
      double v13 = [v12 imageByPreparingThumbnailOfSize:*(double *)(a1 + 40), *(double *)(a1 + 48)];

      id v14 = objc_alloc_init((Class)UIImageAsset);
      [v14 registerImage:v11 withTraitCollection:v8];
      [v14 registerImage:v13 withTraitCollection:v9];
      id v15 = [v14 imageWithTraitCollection:v8];
    }
    else
    {
      double v8 = [v16 image];
      id v15 = [v8 imageByPreparingThumbnailOfSize:*(double *)(a1 + 40), *(double *)(a1 + 48)];
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100A14584(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained cancel];
}

void sub_100A145C4(id a1)
{
  id v1 = (void *)qword_101610498;
  qword_101610498 = (uint64_t)&off_1013AE3E8;
}

void sub_100A161A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double sub_100A161C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained containeeViewController];
  [v2 preferredContentSize];
  double v4 = v3;

  return v4;
}

void sub_100A16510(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 18))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v1 + 32));
    [WeakRetained updateViewsForCustomPresentationTransition];

    *(unsigned char *)(*(void *)(a1 + 32) + 16) = 0;
  }
}

uint64_t sub_100A16578(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A166F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 19))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v1 + 32));
    [WeakRetained updateViewsForCustomDismissalTransition];

    *(unsigned char *)(*(void *)(a1 + 32) + 16) = 1;
  }
}

uint64_t sub_100A16760(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100A17764(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 128) hairLineAlpha];
}

id sub_100A17778(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 128) setHairLineAlpha:];
}

void sub_100A17D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A17D70(uint64_t a1, int a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && a2)
  {
    double v4 = WeakRetained;
    [WeakRetained[19] setEditing:0];
    [v4[17] setState:4];
    id WeakRetained = v4;
  }
}

uint64_t sub_100A17F50(uint64_t a1, char a2)
{
  if (a2)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v3 = *(id *)(a1 + 32);
    id v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v16;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(void *)v16 != v6) {
            objc_enumerationMutation(v3);
          }
          double v8 = *(void **)(*((void *)&v15 + 1) + 8 * i);
          double v9 = [v8 identifier];
          v13[0] = _NSConcreteStackBlock;
          v13[1] = 3221225472;
          id v13[2] = sub_100A1813C;
          v13[3] = &unk_1012EB010;
          id v14 = v9;
          id v10 = v9;
          [v8 deleteCollection:v13];
        }
        id v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v5);
    }

    return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    double v12 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return v12();
  }
}

void sub_100A1813C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_1000B944C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412546;
      uint64_t v7 = v5;
      __int16 v8 = 2112;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error deleting collection '%@' from collection list: %@", (uint8_t *)&v6, 0x16u);
    }
  }
}

void sub_100A183AC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v15 = a2;
  id v4 = [v15 popoverPresentationController];
  [v4 setSourceView:v3];

  [*(id *)(a1 + 32) bounds];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v13 = [v15 popoverPresentationController];
  [v13 setSourceRect:v6, v8, v10, v12];

  id v14 = [v15 popoverPresentationController];
  [v14 setPermittedArrowDirections:15];

  [*(id *)(a1 + 40) presentViewController:v15 animated:1 completion:0];
}

void sub_100A18494(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  double v10 = v9;
  if (v7 && !v9 && [v8 count])
  {
    double v11 = [[CuratedCollectionShareItemSource alloc] initWithPlaceCollection:v7 refinedMapItems:v8];
    double v12 = [[MapsActivityViewController alloc] initWithShareItem:v11];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    sub_10057611C();
    double v11 = (CuratedCollectionShareItemSource *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(&v11->super, OS_LOG_TYPE_ERROR))
    {
      double v13 = [*(id *)(a1 + 32) curatedCollectionIdentifier];
      id v14 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v8 count]);
      int v15 = 138412802;
      long long v16 = v13;
      __int16 v17 = 2112;
      long long v18 = v14;
      __int16 v19 = 2112;
      id v20 = v10;
      _os_log_impl((void *)&_mh_execute_header, &v11->super, OS_LOG_TYPE_ERROR, "Cannot share collection with Id:%@ collectionCount:%@ error:%@", (uint8_t *)&v15, 0x20u);
    }
  }
}

id sub_100A18D90(void *a1, unint64_t a2, unint64_t a3)
{
  id v5 = a1;
  double v6 = +[NSMutableArray arrayWithCapacity:a3];
  id v7 = +[NSMutableArray arrayWithCapacity:a3];
  id v8 = +[NSMutableArray arrayWithCapacity:a3];
  id v9 = +[NSMutableArray arrayWithCapacity:a3];
  unint64_t v26 = a3;
  if (a2 < a2 + a3)
  {
    do
    {
      if (v5) {
        [v5 frameAtIndex:a2];
      }
      double v10 = +[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:", 0.0, 0.0);
      [v6 addObject:v10];

      double v11 = +[NSValue valueWithCGSize:(unsigned __int128)0];
      [v7 addObject:v11];

      double v12 = +[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:", 0.0, (unsigned __int128)0, 0.0);
      [v8 addObject:v12];

      double v13 = +[NSNumber numberWithDouble:0.0];
      [v9 addObject:v13];

      ++a2;
      --a3;
    }
    while (a3);
  }
  [v5 frameDuration];
  double v15 = v14 * (double)v26;
  long long v16 = +[CAKeyframeAnimation animationWithKeyPath:@"position"];
  [v16 setCalculationMode:kCAAnimationDiscrete];
  [v16 setDuration:v15];
  uint64_t v27 = v16;
  [v16 setValues:v6];
  __int16 v17 = +[CAKeyframeAnimation animationWithKeyPath:@"bounds.size"];
  [v17 setCalculationMode:kCAAnimationDiscrete];
  [v17 setDuration:v15];
  CGRect v25 = v17;
  [v17 setValues:v7];
  long long v18 = +[CAKeyframeAnimation animationWithKeyPath:@"contentsRect"];
  [v18 setCalculationMode:kCAAnimationDiscrete];
  [v18 setDuration:v15];
  [v18 setValues:v8];
  __int16 v19 = +[CAKeyframeAnimation animationWithKeyPath:@"transform.rotation.z"];
  [v19 setCalculationMode:kCAAnimationDiscrete];
  [v19 setDuration:v15];
  [v19 setValues:v9];
  id v20 = +[CAAnimationGroup animation];
  v28[0] = v16;
  v28[1] = v17;
  v28[2] = v18;
  void v28[3] = v19;
  CGAffineTransform v21 = +[NSArray arrayWithObjects:v28 count:4];
  [v20 setAnimations:v21];

  id v22 = [v20 animations];
  id v23 = [v22 objectAtIndexedSubscript:0];
  [v23 duration];
  [v20 setDuration:];

  return v20;
}

void sub_100A1B048(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1000493C0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v19 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Unable to load shortcuts:%@", buf, 0xCu);
    }
LABEL_14:

    goto LABEL_15;
  }
  if ([v5 count])
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v7 = v5;
    id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v14;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v14 != v9) {
            objc_enumerationMutation(v7);
          }
          double v11 = *(void **)(*((void *)&v13 + 1) + 8 * i);
          if (objc_msgSend(v11, "type", (void)v13) == (id)2)
          {
            id v12 = *(id *)(a1 + 40);
            objc_sync_enter(v12);
            [*(id *)(a1 + 40) addObject:v11];
            objc_sync_exit(v12);
          }
        }
        id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v8);
    }
    goto LABEL_14;
  }
LABEL_15:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100A1B1FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A1B3B4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (v5)
  {
    id v6 = objc_alloc_init((Class)GEOMapDataSubscriptionManager);
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 24);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_100A1B4D4;
    v9[3] = &unk_101314838;
    id v12 = *(id *)(a1 + 48);
    id v10 = *(id *)(a1 + 40);
    id v11 = v5;
    uint64_t v13 = a3;
    id v8 = [v6 determineEstimatedSizeForSubscriptionWithRegion:v11 dataTypes:1024 queue:v7 completionHandler:v9];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_100A1B4D4(void *a1, uint64_t a2, uint64_t a3)
{
  if (!a2 || a3)
  {
    id v19 = sub_1000493C0();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Failed to load download size.", buf, 2u);
    }

    (*(void (**)(void))(a1[6] + 16))();
  }
  else
  {
    id v4 = [OfflineMapsSuggestionModelData alloc];
    uint64_t v21 = a1[4];
    id v22 = v4;
    id v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"MAPS_OFFLINE_TIP_SUBTITLE" value:@"localized string not found" table:@"Offline"];

    uint64_t v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"MAPS_OFFLINE_TIP_ACTION_BUTTON_TITLE" value:@"localized string not found" table:@"Offline"];

    uint64_t v9 = +[UIImageSymbolConfiguration configurationWithPointSize:7 weight:-1 scale:60.0];
    id v10 = +[UIImage systemImageNamed:@"map.circle.fill" withConfiguration:v9];

    uint64_t v12 = a1[4];
    uint64_t v11 = a1[5];
    uint64_t v13 = a1[7];
    long long v14 = +[NSBundle mainBundle];
    long long v15 = [v14 localizedStringForKey:@"MAPS_OFFLINE_FUTURE_TRIP_SUGGESTION_SUBTITLE" value:@"localized string not found" table:@"Offline"];

    id v16 = objc_alloc_init((Class)NSByteCountFormatter);
    __int16 v17 = [v16 stringFromByteCount:v13];

    long long v18 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v15, v17);

    LODWORD(v20) = 2;
    id v23 = [(OfflineMapsSuggestionModelData *)v22 initWithTipTitle:v21 tipSubtitle:v6 tipActionTitle:v8 tipImage:v10 mapRegion:v11 regionName:v12 suggestionSubtitle:v18 suggestionType:v20];

    (*(void (**)(void))(a1[6] + 16))();
  }
}

void sub_100A1BCF4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (v5)
  {
    id v6 = [OfflineMapsSuggestionModelData alloc];
    uint64_t v22 = *(void *)(a1 + 32);
    id v23 = v6;
    uint64_t v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"MAPS_OFFLINE_TIP_SUBTITLE" value:@"localized string not found" table:@"Offline"];

    uint64_t v9 = +[NSBundle mainBundle];
    id v10 = [v9 localizedStringForKey:@"MAPS_OFFLINE_TIP_ACTION_BUTTON_TITLE" value:@"localized string not found" table:@"Offline"];

    uint64_t v11 = +[UIImageSymbolConfiguration configurationWithPointSize:7 weight:-1 scale:60.0];
    uint64_t v12 = +[UIImage systemImageNamed:@"map.circle.fill" withConfiguration:v11];

    uint64_t v13 = *(void *)(a1 + 32);
    long long v14 = +[NSBundle mainBundle];
    long long v15 = [v14 localizedStringForKey:@"MAPS_OFFLINE_FUTURE_TRIP_SUGGESTION_SUBTITLE" value:@"localized string not found" table:@"Offline"];

    id v16 = objc_alloc_init((Class)NSByteCountFormatter);
    __int16 v17 = [v16 stringFromByteCount:a3];

    long long v18 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v15, v17);

    LODWORD(v21) = 3;
    id v19 = [(OfflineMapsSuggestionModelData *)v23 initWithTipTitle:v22 tipSubtitle:v8 tipActionTitle:v10 tipImage:v12 mapRegion:v5 regionName:v13 suggestionSubtitle:v18 suggestionType:v21];

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    uint64_t v20 = sub_1000493C0();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Airport Arrival Tip: Region is nil, should not have happened.", buf, 2u);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

uint64_t sub_100A1C2D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A1C2E8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (v5)
  {
    id v6 = +[NSBundle mainBundle];
    id v7 = [v6 localizedStringForKey:@"MAPS_OFFLINE_HOME_AREA_SUBTILE" value:@"localized string not found" table:@"Offline"];

    if (*(_DWORD *)(*(void *)(a1 + 40) + 44) == 3)
    {
      unint64_t v26 = [OfflineMapsSuggestionModelData alloc];
      id v8 = +[NSBundle mainBundle];
      CGRect v25 = [v8 localizedStringForKey:@"MAPS_OFFLINE_TIP_SUBTITLE" value:@"localized string not found" table:@"Offline"];

      uint64_t v9 = +[NSBundle mainBundle];
      id v10 = [v9 localizedStringForKey:@"MAPS_OFFLINE_TIP_ACTION_BUTTON_TITLE" value:@"localized string not found" table:@"Offline"];

      uint64_t v11 = +[UIImageSymbolConfiguration configurationWithPointSize:7 weight:-1 scale:60.0];
      uint64_t v12 = +[UIImage systemImageNamed:@"map.circle.fill" withConfiguration:v11];

      uint64_t v13 = +[NSBundle mainBundle];
      long long v14 = [v13 localizedStringForKey:@"MAPS_OFFLINE_HOME_SUGGESTION_SUBTITLE" value:@"localized string not found" table:@"Offline"];

      id v15 = objc_alloc_init((Class)NSByteCountFormatter);
      id v16 = [v15 stringFromByteCount:a3];

      __int16 v17 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v14, v16);

      LODWORD(v24) = 1;
      long long v18 = [(OfflineMapsSuggestionModelData *)v26 initWithTipTitle:v7 tipSubtitle:v25 tipActionTitle:v10 tipImage:v12 mapRegion:v5 regionName:0 suggestionSubtitle:v17 suggestionType:v24];

      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
    else
    {
      uint64_t v21 = +[GEOMapService sharedService];
      uint64_t v22 = [v21 ticketForOfflineRegionNameSuggestionWithRegion:v5 traits:0];

      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472;
      v27[2] = sub_100A1C6E0;
      v27[3] = &unk_1013148D8;
      id v31 = *(id *)(a1 + 56);
      id v28 = *(id *)(a1 + 48);
      id v7 = v7;
      id v29 = v7;
      id v30 = v5;
      uint64_t v32 = a3;
      GEOConfigGetDouble();
      [v22 submitWithHandler:v27 timeout:(uint64_t)v23 networkActivity:0 queue:*(void *)(a1 + 32)];
    }
  }
  else
  {
    id v19 = sub_1000493C0();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Could not construct region for home area tip.", buf, 2u);
    }

    uint64_t v20 = *(NSObject **)(a1 + 32);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100A1C6CC;
    block[3] = &unk_1012E6EA8;
    id v34 = *(id *)(a1 + 56);
    dispatch_async(v20, block);
    id v7 = v34;
  }
}

uint64_t sub_100A1C6CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A1C6E0(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2 || !a3)
  {
    id v5 = [a2 firstObject];
    id v6 = [v5 name];
    if (v6) {
      goto LABEL_8;
    }
    id v7 = [*(id *)(a1 + 32) geoMapItem];
    id v8 = [v7 addressDictionary];
    id v6 = [v8 objectForKey:@"City"];

    if (v6)
    {
LABEL_8:
      uint64_t v9 = [OfflineMapsSuggestionModelData alloc];
      uint64_t v27 = *(void *)(a1 + 40);
      id v28 = v9;
      id v10 = +[NSBundle mainBundle];
      unint64_t v26 = [v10 localizedStringForKey:@"MAPS_OFFLINE_TIP_SUBTITLE" value:@"localized string not found" table:@"Offline"];

      uint64_t v11 = +[NSBundle mainBundle];
      uint64_t v12 = [v11 localizedStringForKey:@"MAPS_OFFLINE_TIP_ACTION_BUTTON_TITLE" value:@"localized string not found" table:@"Offline"];

      uint64_t v13 = +[UIImageSymbolConfiguration configurationWithPointSize:7 weight:-1 scale:60.0];
      long long v14 = +[UIImage systemImageNamed:@"map.circle.fill" withConfiguration:v13];

      uint64_t v15 = *(void *)(a1 + 48);
      id v16 = v5;
      uint64_t v17 = *(void *)(a1 + 64);
      long long v18 = +[NSBundle mainBundle];
      id v19 = [v18 localizedStringForKey:@"MAPS_OFFLINE_HOME_SUGGESTION_SUBTITLE" value:@"localized string not found" table:@"Offline"];

      id v20 = objc_alloc_init((Class)NSByteCountFormatter);
      uint64_t v21 = [v20 stringFromByteCount:v17];

      uint64_t v22 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v19, v21);

      id v5 = v16;
      LODWORD(v25) = 1;
      double v23 = [(OfflineMapsSuggestionModelData *)v28 initWithTipTitle:v27 tipSubtitle:v26 tipActionTitle:v12 tipImage:v14 mapRegion:v15 regionName:v6 suggestionSubtitle:v22 suggestionType:v25];

      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
    else
    {
      uint64_t v24 = sub_1000493C0();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "Could not construct region name for home area tip", v29, 2u);
      }

      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
  }
  else
  {
    id v4 = sub_1000493C0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Could not determine name for home area tip", buf, 2u);
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_100A1CA00(uint64_t a1, uint64_t a2)
{
  if (a2) {
    [*(id *)(a1 + 32) addObject:a2];
  }
  uint64_t v3 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v3);
}

void sub_100A1CA44(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_100A1CD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = sub_1000493C0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Unable to get estimated download size of map region, this region is likely in an unsupported area.", v7, 2u);
    }

    return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    id v6 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return v6();
  }
}

id sub_100A1D9B4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_100A1DE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A1DE48(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didFinishJumping];
}

void sub_100A1DF4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100A1DF68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained tapPOI];
}

void sub_100A1E398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  objc_destroyWeak(v34);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A1E3E8(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 object];
  objc_storeWeak((id *)(*(void *)(a1 + 32) + 64), v3);

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained didShowPlaceCard];
}

id sub_100A1E460(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"fetchPlaceEnrichment"];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 startedSubTest:@"displayPlaceEnrichment"];
}

id sub_100A1E4AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"displayPlaceEnrichment"];
}

void sub_100A1E4BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didShowPlaceCard];
}

void sub_100A1E614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A1E630(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didShowWebModule];
}

id sub_100A1E758(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) shouldScrollPlacecard];
  uint64_t v3 = *(void **)(a1 + 32);
  if (v2)
  {
    unsigned int v4 = [v3 canUpdateTrayLayout];
    id v5 = *(void **)(a1 + 32);
    if (v4)
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_100A1E83C;
      v7[3] = &unk_1012E5D08;
      void v7[4] = v5;
      return [v5 updateTrayLayout:2 animated:1 completion:v7];
    }
    else
    {
      return _[v5 scrollPlacecardTest];
    }
  }
  else
  {
    return [v3 finishedTest];
  }
}

id sub_100A1E83C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) scrollPlacecardTest];
}

void sub_100A1EB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A1EB54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained finishedSubTest:*(void *)(a1 + 32)];
    [v3 finishedTest];
    id WeakRetained = v3;
  }
}

void sub_100A1F068(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100A1F07C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    unsigned int v2 = +[NavdLocationLeecher sharedLeecher];
    id v3 = [v2 lastLeechedLocation];
    [WeakRetained _updateLocationIfAllowed:v3];

    unsigned int v4 = +[NavdLocationLeecher sharedLeecher];
    [v4 addObserver:WeakRetained];

    id v5 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v7) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Starting visit monitoring", (uint8_t *)&v7, 2u);
    }

    [WeakRetained[1] startMonitoringSignificantLocationChanges];
    [WeakRetained[1] startMonitoringVisits];
  }
  else
  {
    GEOFindOrCreateLog();
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136446722;
      id v8 = "MapsSuggestionsNavdLocationManager.m";
      __int16 v9 = 1026;
      int v10 = 66;
      __int16 v11 = 2082;
      uint64_t v12 = "-[MapsSuggestionsNavdLocationManager onStartImplementation]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v7, 0x1Cu);
    }
  }
}

void sub_100A1F2FC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100A1F310(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    unsigned int v2 = +[NavdLocationLeecher sharedLeecher];
    [v2 removeObserver:WeakRetained];

    [WeakRetained[1] stopMonitoringSignificantLocationChanges];
    [WeakRetained[1] stopMonitoringVisits];
    id v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v4) = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Stopped visit monitoring", (uint8_t *)&v4, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      id v5 = "MapsSuggestionsNavdLocationManager.m";
      __int16 v6 = 1026;
      int v7 = 83;
      __int16 v8 = 2082;
      __int16 v9 = "-[MapsSuggestionsNavdLocationManager onStopImplementation]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_100A1F5FC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100A1F610(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _updateLocationIfAllowed:*(void *)(a1 + 32)];
  }
  else
  {
    GEOFindOrCreateLog();
    int v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      __int16 v6 = "MapsSuggestionsNavdLocationManager.m";
      __int16 v7 = 1026;
      int v8 = 112;
      __int16 v9 = 2082;
      int v10 = "-[MapsSuggestionsNavdLocationManager locationLeecher:receivedLocation:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_100A1FACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100A1FAE0(uint64_t a1)
{
  if (MapsSuggestionsIsValidVisit())
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if (WeakRetained)
    {
      id v3 = WeakRetained;
      -[NSObject considerMyAllowanceAsLimited:](WeakRetained, "considerMyAllowanceAsLimited:", [*(id *)(a1 + 40) _hasMapsCoarseLocationEnabled]);
      [v3 considerMyNewVisit:*(void *)(a1 + 32)];
    }
    else
    {
      GEOFindOrCreateLog();
      int v5 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        int v6 = 136446722;
        __int16 v7 = "MapsSuggestionsNavdLocationManager.m";
        __int16 v8 = 1026;
        int v9 = 157;
        __int16 v10 = 2082;
        __int16 v11 = "-[MapsSuggestionsNavdLocationManager locationManager:didVisit:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v6, 0x1Cu);
      }

      id v3 = 0;
    }
  }
  else
  {
    id v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = *(char **)(a1 + 32);
      int v6 = 138412290;
      __int16 v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Dropping invalid visit: %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

id sub_100A20BC8()
{
  if (qword_1016104B8 != -1) {
    dispatch_once(&qword_1016104B8, &stru_101314A80);
  }
  id v0 = (void *)qword_1016104B0;

  return v0;
}

void sub_100A2164C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
  id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
  [WeakRetained containee:v3 didChangeLayout:*(void *)(a1 + 40)];

  int v4 = sub_100A20BC8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      __int16 v10 = @"<nil>";
LABEL_10:

      __int16 v11 = v10;
      uint64_t v12 = *(void *)(a1 + 40);
      id v13 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
      if (!v13)
      {
        long long v18 = @"<nil>";
LABEL_18:

        id v19 = v18;
        id v20 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
        if (!v20)
        {
          uint64_t v25 = @"<nil>";
          goto LABEL_26;
        }
        uint64_t v21 = (objc_class *)objc_opt_class();
        uint64_t v22 = NSStringFromClass(v21);
        if (objc_opt_respondsToSelector())
        {
          double v23 = [v20 performSelector:"accessibilityIdentifier"];
          uint64_t v24 = v23;
          if (v23 && ![v23 isEqualToString:v22])
          {
            uint64_t v25 = +[NSString stringWithFormat:@"%@<%p, %@>", v22, v20, v24];

            goto LABEL_24;
          }
        }
        uint64_t v25 = +[NSString stringWithFormat:@"%@<%p>", v22, v20];
LABEL_24:

LABEL_26:
        *(_DWORD *)long long buf = 138544130;
        uint64_t v27 = v11;
        __int16 v28 = 2048;
        uint64_t v29 = v12;
        __int16 v30 = 2112;
        id v31 = v19;
        __int16 v32 = 2112;
        double v33 = v25;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] Did change layout: %lu for container: %@ continee: %@", buf, 0x2Au);

        goto LABEL_27;
      }
      long long v14 = (objc_class *)objc_opt_class();
      uint64_t v15 = NSStringFromClass(v14);
      if (objc_opt_respondsToSelector())
      {
        id v16 = [v13 performSelector:"accessibilityIdentifier"];
        uint64_t v17 = v16;
        if (v16 && ![v16 isEqualToString:v15])
        {
          long long v18 = +[NSString stringWithFormat:@"%@<%p, %@>", v15, v13, v17];

          goto LABEL_16;
        }
      }
      long long v18 = +[NSString stringWithFormat:@"%@<%p>", v15, v13];
LABEL_16:

      goto LABEL_18;
    }
    int v6 = (objc_class *)objc_opt_class();
    __int16 v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      __int16 v8 = [v5 performSelector:"accessibilityIdentifier"];
      int v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        __int16 v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    __int16 v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

    goto LABEL_10;
  }
LABEL_27:
}

void sub_100A21BD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
  int v4 = [WeakRetained sheetPresentationController];
  [v4 setSelectedDetentIdentifier:v2];

  id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
  [v5 animateAlongsideCardTransition];
}

uint64_t sub_100A21C58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A21C68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
  int v4 = [WeakRetained sheetPresentationController];
  [v4 setSelectedDetentIdentifier:v2];

  id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
  int v6 = [v5 view];
  __int16 v7 = [v6 window];
  [v7 layoutIfNeeded];

  id v8 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
  [v8 animateAlongsideCardTransition];
}

uint64_t sub_100A21D24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A22380(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) hidden];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
  id v3 = [WeakRetained sheetPresentationController];
  [v3 _setHidden:v2];
}

void sub_100A22878(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
  uint64_t v1 = [WeakRetained sheetPresentationController];
  [v1 invalidateDetents];
}

void sub_100A22DFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 88));
  id v2 = [WeakRetained statusBarSupplementaryView];
  [v2 frame];
  double Height = CGRectGetHeight(v8);
  id v4 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
  id v5 = [v4 sheetPresentationController];
  [v5 _setAdditionalMinimumTopInset:Height];
}

double sub_100A23180(uint64_t a1, double a2)
{
  [*(id *)(a1 + 32) bottomSafeOffset];
  double v5 = v4 + a2;
  [*(id *)(a1 + 32) grabberSafeAreaHeight];
  return v5 - v6;
}

void sub_100A232C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CardPresentationController");
  id v2 = (void *)qword_1016104B0;
  qword_1016104B0 = (uint64_t)v1;
}

void sub_100A234A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double sub_100A234D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained presentedViewController];
    [v3 preferredContentSize];
    double v5 = v4;
  }
  else
  {
    double v5 = 0.0;
  }

  return v5;
}

id sub_100A23BEC()
{
  if (qword_1016104C8 != -1) {
    dispatch_once(&qword_1016104C8, &stru_101314AA0);
  }
  id v0 = (void *)qword_1016104C0;

  return v0;
}

void sub_100A23C40(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFCrowdsourcing");
  id v2 = (void *)qword_1016104C0;
  qword_1016104C0 = (uint64_t)v1;
}

id sub_100A23C84(uint64_t a1, void *a2)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100A244B0;
  void v6[3] = &unk_1013144D0;
  id v7 = a2;
  id v3 = v7;
  double v4 = +[UIAction actionWithTitle:a1 image:0 identifier:0 handler:v6];

  return v4;
}

id HomeDeleteAction(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Delete" value:@"localized string not found" table:0];
  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

id HomeOpenInNewTabAction(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Open in New Tab" value:@"localized string not found" table:0];
  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

id HomeOpenInNewWindowAction(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Open in New Window" value:@"localized string not found" table:0];
  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

id HomeAddToFavoritesAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[LibraryUIUtilities isMyPlacesEnabled];
  id v3 = +[NSBundle mainBundle];
  double v4 = v3;
  if (v2) {
    CFStringRef v5 = @"[Maps Home] Pin";
  }
  else {
    CFStringRef v5 = @"[Maps Home] Add to Favorites";
  }
  double v6 = [v3 localizedStringForKey:v5 value:@"localized string not found" table:0];
  id v7 = sub_100A23C84((uint64_t)v6, v1);

  return v7;
}

id HomeRemoveFromFavoritesAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[LibraryUIUtilities isMyPlacesEnabled];
  id v3 = +[NSBundle mainBundle];
  double v4 = v3;
  if (v2) {
    CFStringRef v5 = @"[Maps Home] Unpin";
  }
  else {
    CFStringRef v5 = @"[Maps Home] Remove from Favorites";
  }
  double v6 = [v3 localizedStringForKey:v5 value:@"localized string not found" table:0];
  id v7 = sub_100A23C84((uint64_t)v6, v1);

  return v7;
}

id HomeEditFavoriteAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[LibraryUIUtilities isMyPlacesEnabled];
  id v3 = +[NSBundle mainBundle];
  double v4 = v3;
  if (v2) {
    CFStringRef v5 = @"[Maps Home] Edit Pin";
  }
  else {
    CFStringRef v5 = @"[Maps Home] Edit Favorite";
  }
  double v6 = [v3 localizedStringForKey:v5 value:@"localized string not found" table:0];
  id v7 = sub_100A23C84((uint64_t)v6, v1);

  return v7;
}

id HomeAddToCollectionAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Add New Place" value:@"localized string not found" table:0];
  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

id HomeRemoveFromCollectionAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Remove from Guide" value:@"localized string not found" table:0];

  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

id HomeDuplicateCollectionAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Duplicate Guide" value:@"localized string not found" table:0];

  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

id HomeEditCollectionAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Edit Guide" value:@"localized string not found" table:0];

  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

id HomeDeleteCollectionAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Delete Guide" value:@"localized string not found" table:0];

  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

id HomeRenameCollectionMapItemAction(void *a1)
{
  id v1 = a1;
  unsigned int v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"[Maps Home] Rename Place" value:@"localized string not found" table:0];
  double v4 = sub_100A23C84((uint64_t)v3, v1);

  return v4;
}

uint64_t sub_100A244B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

BOOL sub_100A24844(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidBusRoutes;
            goto LABEL_52;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            break;
          }
          v12 += 7;
          BOOL v17 = v13++ > 8;
          if (v17)
          {
            uint64_t v14 = 0;
            long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidBusRoutes;
            goto LABEL_55;
          }
        }
        long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidBusRoutes;
        goto LABEL_53;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 12) |= 4u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidMetroLightRailRoutes;
            goto LABEL_52;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
          v14 |= (unint64_t)(v22 & 0x7F) << v19;
          if (v22 < 0)
          {
            v19 += 7;
            BOOL v17 = v20++ > 8;
            if (v17)
            {
              uint64_t v14 = 0;
              long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidMetroLightRailRoutes;
              goto LABEL_55;
            }
            continue;
          }
          break;
        }
        long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidMetroLightRailRoutes;
        goto LABEL_53;
      case 3u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 12) |= 8u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidRailRoutes;
            goto LABEL_52;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
          v14 |= (unint64_t)(v26 & 0x7F) << v23;
          if (v26 < 0)
          {
            v23 += 7;
            BOOL v17 = v24++ > 8;
            if (v17)
            {
              uint64_t v14 = 0;
              long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidRailRoutes;
              goto LABEL_55;
            }
            continue;
          }
          break;
        }
        long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidRailRoutes;
        goto LABEL_53;
      case 4u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 12) |= 2u;
        break;
      default:
        if (PBReaderSkipValueWithTag()) {
          continue;
        }
        return 0;
    }
    while (1)
    {
      unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v29 == -1 || v29 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 1;
      v14 |= (unint64_t)(v30 & 0x7F) << v27;
      if ((v30 & 0x80) == 0)
      {
        long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidFerryRoutes;
        goto LABEL_53;
      }
      v27 += 7;
      BOOL v17 = v28++ > 8;
      if (v17)
      {
        uint64_t v14 = 0;
        long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidFerryRoutes;
        goto LABEL_55;
      }
    }
    long long v18 = &OBJC_IVAR___DirectionsPlanTransitPreferences__avoidFerryRoutes;
LABEL_52:
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_53:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v14 = 0;
    }
LABEL_55:
    *(unsigned char *)(a1 + *v1_Block_object_dispose(&STACK[0x7A0], 8) = v14 != 0;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100A25620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = +[SearchFieldItem searchFieldItemWithWaypointRequest:a2 resolvedWaypoint:a3];
  [*(id *)(a1 + 32) addObject:v4];
}

void sub_100A259F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = +[SearchFieldItem searchFieldItemWithWaypointRequest:a2 resolvedWaypoint:a3];
  [*(id *)(a1 + 32) addObject:v4];
}

void sub_100A26670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A2668C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v5 = WeakRetained;
  if (a2 && WeakRetained)
  {
    id v6 = WeakRetained;
    [*(id *)(a1 + 32) viewControllerShowOfflineMaps:WeakRetained];
    unsigned int v5 = v6;
  }
}

void sub_100A26984(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) fetchCurrentRoute];
  [*(id *)(a1 + 32) _checkRouteProximityForManualFraming:];
  if (!*(void *)(*(void *)(a1 + 32) + 56))
  {
    id v2 = [objc_alloc((Class)GEOTransitVehicleUpdater) initWithDelegate:*(void *)(a1 + 32)];
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 56);
    *(void *)(v3 + 56) = v2;
  }
}

id sub_100A26B14(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) mapView];
  [v2 _setupMapView:v3];

  id v4 = *(void **)(a1 + 32);

  return _[v4 _updateCurrentRouteIfNeeded];
}

id sub_100A26B70(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mapView];
  [v2 setMapType:104];

  [*(id *)(a1 + 40) _updateAnnotationsForCurrentRoute];
  [*(id *)(a1 + 40) _pauseOrResumeRealtimeUpdatesIfNeeded];
  [*(id *)(a1 + 40) updateTransitVehicleUpdaterIfNeeded];
  if ([*(id *)(a1 + 40) _shouldUseManualFraming]) {
    [*(id *)(a1 + 40) manuallyFrameCurrentStep];
  }
  uint64_t v3 = *(void **)(a1 + 40);

  return [v3 canRecenterDidChange];
}

id sub_100A26C84(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) mapView];
  [v2 _restoreMapView:v3];

  id v4 = [*(id *)(a1 + 32) _navCameraController];
  [v4 frameVehiclePositions:&__NSArray0__struct];

  uint64_t v5 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v5 + 48))
  {
    *(unsigned char *)(v5 + 4_Block_object_dispose(&STACK[0x7A0], 8) = 0;
    [*(id *)(a1 + 32) stopRequestingRealtimeUpdates];
    uint64_t v5 = *(void *)(a1 + 32);
  }
  id v6 = *(void **)(v5 + 8);

  return [v6 setManeuverDisplayEnabled:0];
}

void sub_100A2748C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A274A8(uint64_t a1, double a2, double a3, double a4, double a5)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  __int16 v11 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v12 = [WeakRetained chromeViewController];
    if (v12)
    {
      unsigned int v13 = (void *)v12;
      if ([v11 _shouldUseManualFraming])
      {
      }
      else
      {
        uint64_t v14 = v11[5];

        if (!v14) {
          goto LABEL_16;
        }
      }
      if ([*(id *)(a1 + 32) isNavigationCameraTracking])
      {
        unint64_t v15 = sub_10057767C();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "Will manually frame step but navigation display is unexpectedly running. Will attempt to pause it.", buf, 2u);
        }

        char v16 = [*(id *)(a1 + 32) chromeViewController];
        BOOL v17 = [v16 navigationDisplay];
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 3221225472;
        void v23[2] = sub_100A276FC;
        _OWORD v23[3] = &unk_1012E68D8;
        void v23[4] = *(void *)(a1 + 32);
        [v17 configureDisplay:v23 animated:0];
      }
      long long v18 = sub_10057767C();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        if (*(void *)(*(void *)(a1 + 32) + 40)) {
          char v19 = @"YES";
        }
        else {
          char v19 = @"NO";
        }
        unsigned int v20 = v19;
        *(_DWORD *)long long buf = 138477827;
        unint64_t v25 = v20;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Applying manual camera frame for displayed step/point-to-point (temporary: %{private}@)", buf, 0xCu);
      }
      unint64_t v21 = [v11 chromeViewController];
      char v22 = [v21 mapView];

      [v22 animateToVisibleMapRect:1 usingDefaultAnimationDuration:1 resetHeading:0 completion:a2 a3 a4 a5];
    }
  }
LABEL_16:
}

id sub_100A276FC(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _updateNavigationDisplayConfigurationForDisplayedStep:a2];
}

id sub_100A27B78(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _updateNavigationDisplayConfigurationForDisplayedStep:a2];
}

int64_t sub_100A2A0C4(id a1, MapsRadarAttachment *a2, MapsRadarAttachment *a3)
{
  id v4 = a3;
  uint64_t v5 = [(MapsRadarAttachment *)a2 creationDate];
  id v6 = [(MapsRadarAttachment *)v4 creationDate];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

id sub_100A2A134(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 fileName];
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [v3 creationDate];

  id v7 = [v5 stringFromDate:v6];
  char v8 = +[NSString stringWithFormat:@"%@:%@", v4, v7];

  return v8;
}

void sub_100A2A874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

id sub_100A2B7CC()
{
  if (+[CarVisualEffectView isDisablingBlur])
  {
    id v0 = +[UIColor colorWithRed:0.968627453 green:0.972549021 blue:0.984313726 alpha:1.0];
    id v1 = +[UIVisualEffect effectCompositingColor:v0];
  }
  else
  {
    id v1 = +[UIBlurEffect effectWithStyle:14];
  }

  return v1;
}

void sub_100A2B964(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_1016104D8;
  qword_1016104D8 = v1;
}

void sub_100A2BFAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A2C57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id obj)
{
}

void sub_100A2C5A0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_1016104F0;
  qword_1016104F0 = (uint64_t)v1;

  [(id)qword_1016104F0 setDateFormat:@"yyyy-MM-dd HH:mm:ss.SSSSSSZZZ"];
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_1016104F0 setLocale:v3];
}

void sub_100A2C888(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A2C8A8(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateDebugText];

  id v3 = objc_loadWeakRetained(v1);
  [v3 updateTintAndIconLabel];
}

void sub_100A2D868(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)a1[4];
  id v6 = (void *)a1[5];
  id v7 = a3;
  id v8 = [v6 identifierPathByAppendingIdentifier:a2];
  [v5 _visitNode:v7 identifierPath:v8 block:a1[6]];
}

void sub_100A2DA0C(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if ([v5 hasPrefix:*(void *)(a1 + 32)])
  {
    id v6 = [v10 expandedValue];

    if (v6)
    {
      id v7 = [v10 expandedValue];
      unsigned int v8 = [v7 BOOLValue];

      int v9 = *(void **)(a1 + 40);
      if (v8) {
        [v9 addObject:v5];
      }
      else {
        [v9 removeObject:v5];
      }
    }
  }
}

void sub_100A2DFC0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a2;
  id v7 = [v5 _storageNodeForExpandedIdentifierPaths:a3];
  [*(id *)(a1 + 40) setObject:v7 forKeyedSubscript:v6];
}

void sub_100A2E744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_100A2E778(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained(a1 + 7);
    id v6 = v5;
    if (v5)
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_100A2E958;
      v11[3] = &unk_1012E80F0;
      id v7 = v5;
      id v12 = v7;
      id v13 = WeakRetained;
      id v14 = a1[5];
      unsigned int v8 = objc_retainBlock(v11);
      int v9 = sub_10000AF10();
      id v10 = v9;
      if (v3)
      {
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 138412546;
          id v16 = v7;
          __int16 v17 = 2112;
          id v18 = v3;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "NavigationRouteInterrupter: Failed to interrupt an entry: %@ with error: %@", buf, 0x16u);
        }
      }
      else
      {
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          id v16 = v7;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "NavigationRouteInterrupter: Finished interrupting entry: %@. Will hint refresh.", buf, 0xCu);
        }

        [a1[4] hintRefreshOfType:11];
      }
      ((void (*)(void *))v8[2])(v8);
    }
  }
}

void sub_100A2E958(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) historyEntry];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  id v5 = [v4 identifier];

  id v6 = sub_10000AF10();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
    int v10 = 138412546;
    id v11 = WeakRetained;
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "NavigationRouteInterrupter: Will notify delegate: %@ of interruption with identifier: %@", (uint8_t *)&v10, 0x16u);
  }
  id v8 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  [v8 navigationRouteInterrupter:*(void *)(a1 + 40) finishedInteruptingEntryWithIdentifier:v5];

  uint64_t v9 = *(void *)(a1 + 48);
  if (v9) {
    (*(void (**)(void))(v9 + 16))();
  }
}

void sub_100A2ED38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_100A2ED6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 56));
    if (v5)
    {
      id v6 = sub_10000AF10();
      id v7 = v6;
      if (v3)
      {
        if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        {
          int v9 = 138412546;
          id v10 = v5;
          __int16 v11 = 2112;
          id v12 = v3;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "NavigationRouteInterrupter: Failed to cancel interruption on entry: %@ with error: %@", (uint8_t *)&v9, 0x16u);
        }
      }
      else
      {
        if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
        {
          int v9 = 138412290;
          id v10 = v5;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "NavigationRouteInterrupter: Finished cancelling interruption on entry: %@. Will hint refresh.", (uint8_t *)&v9, 0xCu);
        }

        [*(id *)(a1 + 32) hintRefreshOfType:11];
      }
      uint64_t v8 = *(void *)(a1 + 40);
      if (v8) {
        (*(void (**)(void))(v8 + 16))();
      }
    }
  }
}

void sub_100A2FB20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void sub_100A2FB4C(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained setCachedLoadResult:v5];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A2FBC0(uint64_t a1, void *a2, void *a3)
{
  id v16 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [WeakRetained address];
  uint64_t v8 = [v7 waypointCompositeName];

  if (v16 && v8)
  {
    int v9 = [v16 mapItemStorage];
    id v10 = [v9 userValues];
    __int16 v11 = v10;
    if (v10) {
      id v12 = v10;
    }
    else {
      id v12 = (id)objc_opt_new();
    }
    id v13 = v12;

    [v13 setName:v8];
    id v14 = [v16 mapItemStorage];
    [v14 setUserValues:v13];
  }
  sub_1009E12F4(*(void **)(a1 + 32));
  unint64_t v15 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue();
  ((void (**)(void, id, id))v15)[2](v15, v16, v5);
}

void sub_100A2FF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

id sub_100A30B50(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      id v1 = +[UIImageSymbolConfiguration configurationWithPointSize:4 weight:15.0];
      CFStringRef v2 = @"car.fill";
      goto LABEL_8;
    case 2:
      id v1 = +[UIImageSymbolConfiguration configurationWithPointSize:4 weight:15.0];
      CFStringRef v2 = @"figure.walk";
      goto LABEL_8;
    case 3:
      id v1 = +[UIImageSymbolConfiguration configurationWithPointSize:4 weight:15.0];
      CFStringRef v2 = @"tram.fill";
      goto LABEL_8;
    case 4:
      id v1 = +[UIImageSymbolConfiguration configurationWithPointSize:4 weight:15.0];
      CFStringRef v2 = @"figure.wave";
      goto LABEL_8;
    case 5:
      id v1 = +[UIImageSymbolConfiguration configurationWithPointSize:6 weight:15.0];
      CFStringRef v2 = @"bicycle";
LABEL_8:
      id v3 = +[UIImage systemImageNamed:v2 withConfiguration:v1];

      break;
    default:
      id v3 = 0;
      break;
  }

  return v3;
}

id sub_100A30CF4(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      CFStringRef v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"[Transport Type Picker] Undefined";
      goto LABEL_8;
    case 1:
      CFStringRef v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"[Transport Type Picker] Drive";
      goto LABEL_8;
    case 2:
      CFStringRef v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"[Transport Type Picker] Walk";
      goto LABEL_8;
    case 3:
      CFStringRef v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"[Transport Type Picker] Transit";
      goto LABEL_8;
    case 4:
      CFStringRef v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"[Transport Type Picker] Ride Share";
      goto LABEL_8;
    case 5:
      CFStringRef v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"[Transport Type Picker] Cycle";
LABEL_8:
      id v1 = [v2 localizedStringForKey:v4 value:@"localized string not found" table:0];

      break;
    default:
      break;
  }

  return v1;
}

void sub_100A31208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
}

void sub_100A31260(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    [WeakRetained setValue:*(void *)(a1 + 32)];
    id v3 = [v4 delegate];
    [v3 updatedRefinementModel:v4];

    id WeakRetained = v4;
  }
}

id sub_100A31548(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startTestAndPerformScrollTest];
}

id sub_100A31618(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _selectAndScrollAllCuratedCollections];
}

void sub_100A316B0(uint64_t a1)
{
  CFStringRef v2 = [*(id *)(a1 + 32) testCoordinator];
  id v3 = [v2 pptTestScrollView];

  id v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100A3175C;
  _OWORD v5[3] = &unk_101312CC0;
  void v5[4] = v4;
  [v4 _performScrollTestOfScrollView:v3 completion:v5];
}

id sub_100A3175C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 results];
  [v5 addEntriesFromDictionary:v4];

  id v6 = *(void **)(a1 + 32);

  return [v6 finishedTest];
}

uint64_t sub_100A31874(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100A31988(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t PlaceCardItemsAreEqual(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 == v4)
  {
    uint64_t v6 = 1;
  }
  else if ((v3 || !v4) && (!v3 || v4))
  {
    uint64_t v6 = (uint64_t)[v3 isEqual:v4];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_100A32F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A32F84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained actionHandler];

  if (v1)
  {
    CFStringRef v2 = [WeakRetained actionHandler];
    ((void (**)(void, id))v2)[2](v2, WeakRetained);
  }
}

uint64_t sub_100A3332C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100A33B24(void *a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = a1;
  uint64_t v2 = (uint64_t)[v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = *(void *)v7;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v7 != v3) {
          objc_enumerationMutation(v1);
        }
        if (!objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * i), "type", (void)v6))
        {
          uint64_t v2 = 1;
          goto LABEL_11;
        }
      }
      uint64_t v2 = (uint64_t)[v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v2;
}

CFStringRef sub_100A3450C(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3) {
    return @"unknown";
  }
  else {
    return off_101314DE0[a1 - 1];
  }
}

id sub_100A34534(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"Error: route request missing origin [Nano]";
      break;
    case 2:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"Error: route request missing destination [Nano]";
      break;
    case 3:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"Error: connection error [Nano]";
      break;
    case 4:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"Error: waypoint refinement error [Nano]";
      break;
    default:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"Error: unknown error [Nano]";
      break;
  }
  id v4 = [v1 localizedStringForKey:v3 value:@"localized string not found" table:0];

  return v4;
}

CFStringRef sub_100A34658(unint64_t a1)
{
  if (a1 > 4) {
    return @"unknown";
  }
  else {
    return off_101314E00[a1];
  }
}

id sub_100A34FD0()
{
  if (qword_101610510 != -1) {
    dispatch_once(&qword_101610510, &stru_101314E50);
  }
  id v0 = (void *)qword_101610508;

  return v0;
}

void sub_100A35550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A35578(uint64_t a1)
{
  uint64_t v2 = sub_100A34FD0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v4 = WeakRetained;
    CFStringRef v5 = @"VIOSessionThrottleEventDeviceMotion";
    uint64_t v6 = *(void *)(a1 + 48);
    BOOL v7 = *(void *)(a1 + 40) == 0;
    int v9 = 134349570;
    if (v7) {
      CFStringRef v5 = @"VIOSessionThrottleEventARTrackingState";
    }
    id v10 = WeakRetained;
    __int16 v11 = 2112;
    CFStringRef v12 = v5;
    __int16 v13 = 2048;
    uint64_t v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Detected consecutive throttle event of type %@ for longer than %f seconds", (uint8_t *)&v9, 0x20u);
  }
  id v8 = objc_loadWeakRetained((id *)(a1 + 32));
  [v8 throttleSessionWithEventReason:*(void *)(a1 + 40)];
}

void sub_100A37220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A37248(uint64_t a1)
{
  uint64_t v2 = sub_100A34FD0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v8 = 134349056;
    id v9 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Retry timer fired", (uint8_t *)&v8, 0xCu);
  }
  id v4 = (id *)(a1 + 32);
  id v5 = objc_loadWeakRetained(v4);
  [v5 resumeSession];

  id v6 = objc_loadWeakRetained(v4);
  BOOL v7 = [v6 observers];
  [v7 throttleDidEnd];
}

void sub_100A3793C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionStateManager");
  uint64_t v2 = (void *)qword_101610508;
  qword_101610508 = (uint64_t)v1;
}

void sub_100A37E0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 stop];
  [v3 setOriginatingDeviceFromOrigin:*(void *)(a1 + 40)];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = [v3 copyCurrentPartialRecording];

  (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
}

uint64_t sub_100A37FC4(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"_updateWatchControls" name:NRPairedDeviceRegistryDeviceDidPairNotification object:0];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_100A38488(uint64_t a1, void *a2)
{
  id v3 = a2;
  --*(void *)(*(void *)(a1 + 32) + 16);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v16;
    do
    {
      BOOL v7 = 0;
      do
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        int v8 = [[RAPAuxiliaryControlWatch alloc] initWithPropertiesOfDevice:*(void *)(*((void *)&v15 + 1) + 8 * (void)v7)];
        if (v8)
        {
          if ([*(id *)(*(void *)(a1 + 32) + 48) isSameControlAsControl:v8])
          {
            if ([(RAPAuxiliaryControlWatch *)v8 isActive]) {
              goto LABEL_13;
            }
            uint64_t v9 = *(void *)(a1 + 32);
            id v10 = *(void **)(v9 + 48);
            *(void *)(v9 + 4_Block_object_dispose(&STACK[0x7A0], 8) = 0;
          }
          else
          {
            [*(id *)(a1 + 32) _addControlIfNotDuplicate:v8];
            if (![(RAPAuxiliaryControlWatch *)v8 isActive]) {
              goto LABEL_13;
            }
            uint64_t v11 = *(void *)(a1 + 32);
            CFStringRef v12 = v8;
            id v10 = *(void **)(v11 + 48);
            *(void *)(v11 + 4_Block_object_dispose(&STACK[0x7A0], 8) = v12;
          }
        }
LABEL_13:

        BOOL v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v5);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v13 + 10))
  {
    objc_storeStrong((id *)(v13 + 32), *(id *)(v13 + 48));
    *(unsigned char *)(*(void *)(a1 + 32) + 10) = 0;
  }
  uint64_t v14 = *(void *)(a1 + 40);
  if (v14) {
    (*(void (**)(void))(v14 + 16))();
  }
}

id sub_100A38F7C()
{
  if (qword_101610520 != -1) {
    dispatch_once(&qword_101610520, &stru_101314F60);
  }
  id v0 = (void *)qword_101610518;

  return v0;
}

void sub_100A3908C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  BOOL v7 = v6;
  if (!v5 || v6)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    int v8 = sub_100A38F7C();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = [v5 count];
      id v10 = *(__CFString **)(a1 + 40);
      *(_DWORD *)long long buf = 134218240;
      id v45 = v9;
      __int16 v46 = 2048;
      CGFloat v47 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Fetched %ld new data, the offset: %ld", buf, 0x16u);
    }
    uint64_t v34 = a1;

    CGFloat v37 = +[NSMutableArray array];
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    id v35 = v5;
    id obj = v5;
    uint64_t v11 = (char *)[obj countByEnumeratingWithState:&v39 objects:v43 count:16];
    if (v11)
    {
      CFStringRef v12 = v11;
      uint64_t v13 = 0;
      uint64_t v14 = *(void *)v40;
      long long v15 = &stru_101324E70;
      while (2)
      {
        long long v16 = 0;
        uint64_t v17 = -(uint64_t)v13;
        double v33 = &v13[(void)v12];
        do
        {
          if (*(void *)v40 != v14) {
            objc_enumerationMutation(obj);
          }
          long long v18 = *(void **)(*((void *)&v39 + 1) + 8 * (void)v16);
          if ((char *)v17 == v16)
          {
            char v19 = [*(id *)(*((void *)&v39 + 1) + 8 * (void)v16) communityID];
            uint64_t v20 = [v19 communityIdentifier];

            long long v15 = (__CFString *)v20;
          }
          unint64_t v21 = [v18 communityID];
          char v22 = [v21 communityIdentifier];
          if ([(__CFString *)v15 isEqualToString:v22])
          {
          }
          else
          {
            if ([(__CFString *)v15 length])
            {

              goto LABEL_24;
            }
            [v18 communityID];
            uint64_t v38 = v15;
            char v23 = v12;
            uint64_t v24 = v17;
            v26 = uint64_t v25 = v14;
            char v27 = [v26 communityIdentifier];
            id v28 = [v27 length];

            uint64_t v14 = v25;
            uint64_t v17 = v24;
            CFStringRef v12 = v23;
            long long v15 = v38;

            if (v28) {
              goto LABEL_24;
            }
          }
          unint64_t v29 = [v18 reportId];
          id v30 = [v29 length];

          if (v30)
          {
            id v31 = [v18 reportId];
            [v37 addObject:v31];
          }
          ++v16;
        }
        while (v12 != v16);
        CFStringRef v12 = (char *)[obj countByEnumeratingWithState:&v39 objects:v43 count:16];
        uint64_t v13 = v33;
        if (v12) {
          continue;
        }
        break;
      }
    }
    else
    {
      long long v15 = &stru_101324E70;
    }
LABEL_24:

    __int16 v32 = sub_100A38F7C();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      id v45 = v37;
      __int16 v46 = 2112;
      CGFloat v47 = v15;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "Fetching RAPRecords: %@ with communityID:%@", buf, 0x16u);
    }

    (*(void (**)(void))(*(void *)(v34 + 32) + 16))();
    BOOL v7 = 0;
    id v5 = v35;
  }
}

void sub_100A39658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A39684(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    int v8 = sub_100A38F7C();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v11 = 138412546;
      id v12 = v5;
      __int16 v13 = 2112;
      id v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Fetched contents %@ with error %@", (uint8_t *)&v11, 0x16u);
    }

    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = [v5 copy];
    (*(void (**)(uint64_t, id, id))(v9 + 16))(v9, v10, v6);
  }
}

void sub_100A3997C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_100A38F7C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = [*(id *)(a1 + 32) problemId];
      int v6 = 138412546;
      BOOL v7 = v5;
      __int16 v8 = 2112;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Failed to persist reviewed RAP identifier %@ with error %@", (uint8_t *)&v6, 0x16u);
    }
  }
}

void sub_100A3A110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
}

void sub_100A3A130(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v8 = v3;
  id v5 = [v3 reportId];
  int v6 = [v4 objectForKeyedSubscript:v5];

  if (v6)
  {
    BOOL v7 = +[NSKeyedArchiver archivedDataWithRootObject:v6 requiringSecureCoding:0 error:0];
    [v8 setRapResponse:v7];
  }
}

void sub_100A3A1D4(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100A3A23C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v8 = v3;
  id v5 = [v3 reportId];
  int v6 = [v4 objectForKeyedSubscript:v5];

  if (v6)
  {
    BOOL v7 = +[NSKeyedArchiver archivedDataWithRootObject:v6 requiringSecureCoding:0 error:0];
    [v8 setRapResponse:v7];
  }
}

void sub_100A3A2E0(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100A3A348(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v8 = v3;
  id v5 = [v3 reportId];
  int v6 = [v4 objectForKeyedSubscript:v5];

  if (v6)
  {
    BOOL v7 = +[NSKeyedArchiver archivedDataWithRootObject:v6 requiringSecureCoding:0 error:0];
    [v8 setRapResponse:v7];
  }
}

void sub_100A3A3EC(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_100A3A454(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

void sub_100A3A814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A3A840(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    BOOL v7 = sub_100A38F7C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412546;
      id v24 = v5;
      __int16 v25 = 2112;
      uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Fetched contents %@ with error %@", buf, 0x16u);
    }

    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v8 = v5;
    id v9 = [v8 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v19;
      do
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v10) {
            objc_enumerationMutation(v8);
          }
          id v12 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          uint64_t v13 = *(void *)(a1 + 40);
          if (v13) {
            (*(void (**)(uint64_t, void))(v13 + 16))(v13, *(void *)(*((void *)&v18 + 1) + 8 * i));
          }
          [v12 setStatus:*(__int16 *)(a1 + 56)];
        }
        id v9 = [v8 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v9);
    }

    id v14 = +[MapsSyncStore sharedStore];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    void v15[2] = sub_100A3AAA8;
    v15[3] = &unk_1012E9690;
    objc_copyWeak(&v17, (id *)(a1 + 48));
    id v16 = *(id *)(a1 + 32);
    [v14 saveWithObjects:v8 completionHandler:v15];

    objc_destroyWeak(&v17);
  }
}

void sub_100A3AA8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100A3AAA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = sub_100A38F7C();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "committed batch with error %@", (uint8_t *)&v6, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

uint64_t sub_100A3ACC0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100A3ACD8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPSubmissionStatusSyncHandler");
  uint64_t v2 = (void *)qword_101610518;
  qword_101610518 = (uint64_t)v1;
}

void sub_100A3B020(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_101610528;
  qword_101610528 = v1;
}

void sub_100A3B938(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_101610540;
  qword_101610540 = (uint64_t)v1;

  [(id)qword_101610540 setDateFormat:@"yyyy-MM-dd HH:mm:ss.SSSSSSZZZ"];
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_101610540 setLocale:v3];
}

void sub_100A3BB30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A3BB4C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateDebugText];

  id v3 = objc_loadWeakRetained(v1);
  [v3 startDebugInfoRefreshTimer];
}

id sub_100A3C39C()
{
  if (qword_101610550 != -1) {
    dispatch_once(&qword_101610550, &stru_101314FC0);
  }
  id v0 = (void *)qword_101610548;

  return v0;
}

void sub_100A3C6A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "DebugViewFrameHighlighter");
  uint64_t v2 = (void *)qword_101610548;
  qword_101610548 = (uint64_t)v1;
}

void sub_100A3C6E8(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();
  uint64_t v2 = 5;
  if (Integer >= 1) {
    uint64_t v2 = Integer;
  }
  qword_101610558 = v2;
}

void sub_100A3CAA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_100A3CB58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A3CDD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_100A3CFA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_100A3D13C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) controller];
  id v4 = v3;
  uint64_t v5 = *(void *)(a1 + 32);
  if (v2) {
    [v3 registerObserver:v5];
  }
  else {
    [v3 unregisterObserver:v5];
  }

  int v6 = sub_100015DB4();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = [*(id *)(a1 + 32) controller];
    id v8 = (void *)v7;
    int v9 = *(unsigned __int8 *)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 32);
    int v12 = 138412802;
    if (v9) {
      CFStringRef v11 = @"Registered";
    }
    else {
      CFStringRef v11 = @"Unregistered";
    }
    uint64_t v13 = v7;
    __int16 v14 = 2112;
    CFStringRef v15 = v11;
    __int16 v16 = 2112;
    uint64_t v17 = v10;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[CarMapsSuggestionsObserver_LowFuel] - The controllers (%@) has %@ object - %@ as Observers", (uint8_t *)&v12, 0x20u);
  }
}

BOOL sub_100A3D8B8(id a1, MapsSuggestionsEntry *a2)
{
  int v2 = a2;
  unint64_t v3 = (unint64_t)[(MapsSuggestionsEntry *)v2 type];
  LOBYTE(v4) = 1;
  if (v3 <= 0x16)
  {
    if (((1 << v3) & 0x7400C0) != 0)
    {
      LOBYTE(v4) = 0;
    }
    else if (v3 == 9)
    {
      int v6 = [(MapsSuggestionsEntry *)v2 numberForKey:@"MapsSuggestionsIsNotADestinationKey"];
      unsigned int v4 = [v6 BOOLValue] ^ 1;
    }
  }

  return v4;
}

void sub_100A3DC78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A3DC9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = sub_100015DB4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412290;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[CarMapsSuggestionsController] suggestions: %@", buf, 0xCu);
  }

  id v5 = [v3 copy];
  int v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v6);
  [WeakRetained setSuggestions:v5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A3DDEC;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v9, v6);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v9);
}

void sub_100A3DDEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _notifyObservers];
}

void sub_100A3DEF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A3DFB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A3E15C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A3E314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A3E328(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = [WeakRetained observers];
  objc_sync_enter(v1);
  int v2 = [WeakRetained observers];
  id v3 = [v2 allObjects];
  id v4 = [v3 count];

  if (!v4) {
    [WeakRetained setSinkAttached:0];
  }
  [WeakRetained setSinkDetaching:0];
  objc_sync_exit(v1);
}

void sub_100A3E3D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A3E63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A3E660(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = sub_100015DB4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = @"NO";
    if (v2) {
      id v4 = @"YES";
    }
    id v5 = v4;
    int v6 = 138543362;
    uint64_t v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[CarMapsSuggestionsController] processAssertion acquired=%{public}@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_100A3E728(uint64_t a1)
{
  BOOL v2 = sub_100015DB4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[CarMapsSuggestionsController] processAssertionTimer fired", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setHoldProcessAssertion:0];
}

BOOL sub_100A3EA80(id a1, MapsSuggestionsEntry *a2)
{
  BOOL v2 = a2;
  id v3 = objc_alloc_init(MapsSuggestionsOfflineService);
  unsigned __int8 v4 = [(MapsSuggestionsOfflineService *)v3 shouldKeepEntryWhenOffline:v2];

  return v4;
}

void sub_100A3ECD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_100A3F1AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100A3F1DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = [WeakRetained trafficAlertView];
  [v1 setAcceptProgress:1.0];
}

void sub_100A3F238(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismissTrafficAlert];
}

void sub_100A4028C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 8) chromeViewController];
  id v12 = [v2 mapView];

  id v3 = [[_MapViewState alloc] initWithMapView:v12];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 16);
  *(void *)(v4 + 16) = v3;

  [v12 setUserTrackingMode:0];
  [v12 setShowsTraffic:0];
  [v12 setShowsUserLocation:0];
  int v6 = [v12 _mapLayer];
  [v6 setStaysCenteredDuringPinch:1];

  uint64_t v7 = [v12 _mapLayer];
  [v7 setStaysCenteredDuringRotation:1];

  id v8 = [*(id *)(*(void *)(a1 + 32) + 8) lookAroundView];
  id v9 = [[_LookAroundViewState alloc] initWithLookAroundView:v8];
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(void **)(v10 + 24);
  *(void *)(v10 + 24) = v9;

  [*(id *)(*(void *)(a1 + 32) + 8) _setModeDidBecomeCurrent];
}

void sub_100A40424(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) _setModeDidResignCurrent];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  id v5 = [*(id *)(v2 + 8) chromeViewController];
  uint64_t v4 = [v5 mapView];
  [v3 restoreStateToMapView:v4];
}

id sub_100A40EF4()
{
  if (qword_101610570 != -1) {
    dispatch_once(&qword_101610570, &stru_101315060);
  }
  id v0 = (void *)qword_101610568;

  return v0;
}

void sub_100A432D4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARFailureContaineeViewController");
  uint64_t v2 = (void *)qword_101610568;
  qword_101610568 = (uint64_t)v1;
}

void sub_100A4375C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100A43780(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v4 = [*(id *)(a1 + 32) editSession];
    [WeakRetained viewController:v5 createNewCollectionWithSession:v4];
  }
}

void sub_100A437FC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v4 = [*(id *)(a1 + 32) editSession];
    [WeakRetained viewController:v5 createNewCollectionWithSession:v4];
  }
}

void sub_100A43B4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56));
  unsigned int v3 = [WeakRetained isDisplayingLookAroundFullScreen];

  if (v3)
  {
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 8);
    [v4 updateLocation];
  }
}

void sub_100A4429C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setContaineeDelegate:v3];
  id v5 = [*(id *)(a1 + 32) containerViewController];
  [v5 presentController:v4 animated:1];
}

void sub_100A44314(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 containerViewController];
  [v4 _maps_topMostPresentViewController:v3 animated:1 completion:0];
}

uint64_t sub_100A44458(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100A445AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) containerViewController];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100A447C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A447EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained appCoordinator];
  [v1 exitLookAround];
}

void sub_100A44D8C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "LookAroundActionCoordinator");
  id v2 = (void *)qword_101610578;
  qword_101610578 = (uint64_t)v1;
}

id sub_100A454D0(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [v3 objectForKeyedSubscript:NSForegroundColorAttributeName];
  int v6 = v5;
  if (v5)
  {
    id v7 = v5;
  }
  else
  {
    id v7 = +[UIColor secondaryLabelColor];
  }
  id v8 = v7;

  id v9 = objc_opt_new();
  uint64_t v10 = +[UIImage systemImageNamed:@"arrow.up.forward"];
  id v11 = [v10 imageWithTintColor:v8];
  [v9 setImage:v11];

  uint64_t v26 = +[NSAttributedString attributedStringWithAttachment:v9 attributes:v3];
  [v4 sumElevationGainCm];
  __int16 v25 = GEOStringForDistance();
  id v12 = [objc_alloc((Class)NSAttributedString) initWithString:v25];
  uint64_t v13 = objc_opt_new();
  __int16 v14 = +[UIImage systemImageNamed:@"arrow.down.forward"];
  char v27 = v8;
  CFStringRef v15 = [v14 imageWithTintColor:v8];
  [v13 setImage:v15];

  __int16 v16 = +[NSAttributedString attributedStringWithAttachment:v13 attributes:v3];
  [v4 sumElevationLossCm];

  uint64_t v17 = GEOStringForDistance();
  id v18 = [objc_alloc((Class)NSAttributedString) initWithString:v17];
  id v19 = [objc_alloc((Class)NSAttributedString) initWithString:@"%@ %@ • %@ %@" attributes:v3];

  long long v20 = +[UIApplication sharedApplication];
  id v21 = [v20 userInterfaceLayoutDirection];

  if (v21 == (id)1)
  {
    char v22 = (void *)v26;
    +[NSAttributedString localizedAttributedStringWithFormat:](NSAttributedString, "localizedAttributedStringWithFormat:", v19, v18, v16, v12, v26);
  }
  else
  {
    char v22 = (void *)v26;
    +[NSAttributedString localizedAttributedStringWithFormat:](NSAttributedString, "localizedAttributedStringWithFormat:", v19, v26, v12, v16, v18);
  char v23 = };

  return v23;
}

id sub_100A45784(void *a1)
{
  id v1 = a1;
  id v2 = GEOStringForDistance();
  id v3 = [objc_alloc((Class)NSAttributedString) initWithString:v2 attributes:v1];

  return v3;
}

id sub_100A45808(void *a1, void *a2, void *a3, double a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  if (v7)
  {
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    void v22[2] = sub_100A45A9C;
    v22[3] = &unk_1013150F0;
    *(double *)&void v22[4] = a4;
    id v10 = +[NSAttributedString _mapkit_attributedStringForComposedString:v7 defaultAttributes:v9 argumentOverrideHandler:v22];
  }
  else
  {
    id v11 = GEOStringForDuration();
    id v10 = [objc_alloc((Class)NSAttributedString) initWithString:v11 attributes:v9];
  }
  if ([v8 isValid])
  {
    id v12 = sub_100A454D0(v8, v9);
    id v13 = v12;
    if (v10)
    {
      id v14 = [objc_alloc((Class)NSAttributedString) initWithString:@"%@ • %@" attributes:v9];
      CFStringRef v15 = +[UIApplication sharedApplication];
      id v16 = [v15 userInterfaceLayoutDirection];

      if (v16 == (id)1) {
        +[NSAttributedString localizedAttributedStringWithFormat:](NSAttributedString, "localizedAttributedStringWithFormat:", v14, v13, v10);
      }
      else {
        +[NSAttributedString localizedAttributedStringWithFormat:](NSAttributedString, "localizedAttributedStringWithFormat:", v14, v10, v13);
      }
      id v17 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v17 = v12;
    }
    id v24 = v17;
    id v18 = &v24;
  }
  else
  {
    id v13 = [objc_alloc((Class)NSAttributedString) initWithString:@"%@" attributes:v9];
    +[NSAttributedString localizedAttributedStringWithFormat:](NSAttributedString, "localizedAttributedStringWithFormat:", v13, v10);
    id v17 = (id)objc_claimAutoreleasedReturnValue();
    id v23 = v17;
    id v18 = &v23;
  }
  id v19 = +[NSArray arrayWithObjects:v18 count:1];
  long long v20 = +[MKMultiPartAttributedString multiPartAttributedStringWithComponents:v19 repeatedSeparator:0];

  return v20;
}

void sub_100A45A9C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 durationFormat];

  if (v3)
  {
    double v4 = *(double *)(a1 + 32);
    id v5 = [v6 durationFormat];
    [v5 setOverrideValue:v4];
  }
}

id sub_100A45B1C(void *a1)
{
  id v1 = a1;
  id v2 = GEOStringForDistance();
  if ([v1 isValid])
  {
    [v1 sumElevationGainCm];
    id v3 = GEOStringForDistance();
    [v1 sumElevationLossCm];
    double v4 = GEOStringForDistance();
    id v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"[Route Creation] Temp distance and elevation description summary" value:@"localized string not found" table:0];

    id v7 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v6, v2, v3, v4);
  }
  else
  {
    id v3 = +[NSBundle mainBundle];
    double v4 = [v3 localizedStringForKey:@"[Route Creation] Temp distance description" value:@"localized string not found" table:0];
    id v7 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v4, v2);
  }

  return v7;
}

void sub_100A48908(uint64_t a1)
{
  id v13 = [*(id *)(*(void *)(a1 + 32) + 24) _maps_rightRHDAnchor];
  id v2 = [*(id *)(a1 + 40) viewportLayoutGuide];
  id v3 = [v2 _maps_rightRHDAnchor];
  LODWORD(v4) = 1148846080;
  id v5 = [v13 _maps_constraintWithRHDAnchor:v3 relation:0 constant:-10.0 priority:v4];
  v14[0] = v5;
  id v6 = [*(id *)(*(void *)(a1 + 32) + 24) topAnchor];
  id v7 = [*(id *)(a1 + 40) viewportLayoutGuide];
  id v8 = [v7 topAnchor];
  id v9 = [v6 constraintEqualToAnchor:v8 constant:10.0];
  v14[1] = v9;
  id v10 = [*(id *)(*(void *)(a1 + 32) + 24) heightAnchor];
  id v11 = [v10 constraintEqualToConstant:28.0];
  v14[2] = v11;
  id v12 = +[NSArray arrayWithObjects:v14 count:3];
  +[NSLayoutConstraint activateConstraints:v12];
}

void sub_100A49234(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_100A49294(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteCardUUID:*(void *)(a1 + 32)];
}

void sub_100A4945C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100A4947C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteCardUUID:*(void *)(a1 + 32)];
}

id sub_100A494CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _handleCardButtonTag:a3 forStackID:*(void *)(a1 + 40) card:a2];
}

void sub_100A49660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A4967C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained[1] removeObjectForKey:*(void *)(a1 + 32)];
    [v3[2] removeObjectForKey:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100A49A24(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarTestContext");
  uint64_t v2 = (void *)qword_101610588;
  qword_101610588 = (uint64_t)v1;
}

void sub_100A49ABC(id a1)
{
  os_log_t v1 = objc_alloc_init(PlaceholderCollectionHandler);
  uint64_t v2 = (void *)qword_101610598;
  qword_101610598 = (uint64_t)v1;
}

void sub_100A4A674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A4A690(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained startedTest];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100A4A7BC;
    void v6[3] = &unk_1012E6730;
    objc_copyWeak(&v7, v1);
    +[PPTNotificationCenter addOnceObserverForName:@"PPTTest_SearchHome_DidSetActive" object:0 usingBlock:v6];
    double v4 = +[NSNotificationCenter defaultCenter];
    [v4 addObserver:v3 selector:"didUpdateDataFetcher:" name:@"PPTTest_SearchHome_DidUpdateDataFetcher" object:0];

    id v5 = [v3 testCoordinator];
    [v5 pptTestEnterSearchMode];

    objc_destroyWeak(&v7);
  }
}

void sub_100A4A7A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100A4A7BC(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v4 = [v6 object];
    [WeakRetained setSearchHomeDataSource:v4];

    id v5 = [WeakRetained searchHomeDataSource];
    [WeakRetained setNumberOfDataFetchers:[v5 _ppt_numberOfDataFetchers]];

    [WeakRetained startedSubTest:@"searchHomeCollectData"];
  }
}

id sub_100A4A99C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) continueAfterCollectingDataFromDataFetchers];
}

void sub_100A4AAB8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100A4AAD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained finishedSubTest:@"citySelectorCollectData"];
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100A4AB74;
    v3[3] = &unk_1012E5D08;
    void v3[4] = v2;
    [v2 _dispatchAfterShortDelay:v3];
  }
}

id sub_100A4AB74(uint64_t a1)
{
  return _[*(id *)(a1 + 32) runScrollTest];
}

id sub_100A4AB7C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) searchHomeDataSource];
  [v2 _ppt_selectBrowseCities];

  id v3 = *(void **)(a1 + 32);

  return [v3 startedSubTest:@"citySelectorCollectData"];
}

void sub_100A4ADBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A4ADFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained finishedSubTest:*(void *)(a1 + 32)];
    [v3 finishedTest];
    id WeakRetained = v3;
  }
}

uint64_t sub_100A4AF08(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100A4B1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100A4B218(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_alloc((Class)UIWindow);
    id v6 = [v3 coordinateSpace];
    [v6 bounds];
    id v7 = [v5 initWithFrame:];

    [v7 setCanResizeToFitContent:1];
    [v7 setWindowScene:v3];
    [v7 setRootViewController:*((void *)WeakRetained + 3)];
    [v7 makeKeyAndVisible];
    objc_storeStrong((id *)WeakRetained + 4, v7);
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

id sub_100A4B500(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"KeyCommand_AddTo" value:@"localized string not found" table:0];
  v12[0] = @"row";
  id v6 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v3 row]);
  v12[1] = @"section";
  v13[0] = v6;
  id v7 = [v3 section];

  id v8 = +[NSNumber numberWithInteger:v7];
  v13[1] = v8;
  id v9 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:2];
  id v10 = +[UIKeyCommand commandWithTitle:v5 image:0 action:a1 input:@"a" modifierFlags:0x100000 propertyList:v9];

  return v10;
}

id sub_100A4B690(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"KeyCommand_Delete" value:@"localized string not found" table:0];
  v12[0] = @"row";
  id v6 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v3 row]);
  v12[1] = @"section";
  v13[0] = v6;
  id v7 = [v3 section];

  id v8 = +[NSNumber numberWithInteger:v7];
  v13[1] = v8;
  id v9 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:2];
  id v10 = +[UIKeyCommand commandWithTitle:v5 image:0 action:a1 input:@"\b" modifierFlags:0 propertyList:v9];

  return v10;
}

id sub_100A4B820(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"KeyCommand_Edit" value:@"localized string not found" table:0];
  v12[0] = @"row";
  id v6 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v3 row]);
  v12[1] = @"section";
  v13[0] = v6;
  id v7 = [v3 section];

  id v8 = +[NSNumber numberWithInteger:v7];
  v13[1] = v8;
  id v9 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:2];
  id v10 = +[UIKeyCommand commandWithTitle:v5 image:0 action:a1 input:@"e" modifierFlags:0x100000 propertyList:v9];

  return v10;
}

id sub_100A4B9B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"KeyCommand_Share" value:@"localized string not found" table:0];
  v12[0] = @"row";
  id v6 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v3 row]);
  v12[1] = @"section";
  v13[0] = v6;
  id v7 = [v3 section];

  id v8 = +[NSNumber numberWithInteger:v7];
  v13[1] = v8;
  id v9 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:2];
  id v10 = +[UIKeyCommand commandWithTitle:v5 image:0 action:a1 input:@"s" modifierFlags:0x100000 propertyList:v9];

  return v10;
}

void sub_100A4BFDC(uint64_t a1, void *a2)
{
  id v11 = a2;
  id v3 = [v11 photo];

  if (v3)
  {
    double v4 = *(void **)(a1 + 32);
    id v5 = [v11 photo];
    [v4 addPhoto:v5];

    id v6 = *(void **)(a1 + 40);
    id v7 = [v11 photo];
    id v8 = [v7 photo];
    id v9 = [v11 photo];
    id v10 = [v9 _maps_diffableDataSourceIdentifier];
    [v6 addImage:v8 forIdentifier:v10];

    [v11 clearSelectedPhoto];
  }
}

void sub_100A4C45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A4C478(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  double v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained[2] commentQuestion];
    [v5 setComment:v7];

    id v6 = [v4 _commentsHeaderView];
    [v6 updateRemainingCharacters];
  }
}

void sub_100A4D384(uint64_t a1)
{
  uint64_t v2 = sub_100577E34();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = objc_opt_class();
    uint64_t v4 = *(void *)(a1 + 32);
    int v8 = 138412546;
    uint64_t v9 = v3;
    __int16 v10 = 2048;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "deactivateForChrome: deactivating chrome: <%@: %p>", (uint8_t *)&v8, 0x16u);
  }

  if (*(void *)(a1 + 32))
  {
    id v5 = [*(id *)(a1 + 40) activeChromes];
    [v5 removeObject:*(void *)(a1 + 32)];

    id v6 = [*(id *)(a1 + 40) activeChromes];
    id v7 = [v6 count];

    if (!v7) {
      [*(id *)(a1 + 40) setActive:0];
    }
  }
}

id sub_100A4D5A4(uint64_t a1)
{
  uint64_t v2 = sub_100577E34();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "deactivateForAllChromes", v5, 2u);
  }

  uint64_t v3 = [*(id *)(a1 + 32) activeChromes];
  [v3 removeAllObjects];

  return [*(id *)(a1 + 32) setActive:0];
}

void sub_100A4DBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A4DBE4(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained retryCount];
  uint64_t v4 = sub_100577E34();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
  if ((unint64_t)v3 > 0xE)
  {
    if (v5)
    {
      id v10 = [WeakRetained retryCount];
      unsigned int v11 = [WeakRetained isActive];
      id v12 = @"NO";
      if (v11) {
        id v12 = @"YES";
      }
      id v13 = v12;
      *(_DWORD *)long long buf = 134218242;
      id v17 = v10;
      __int16 v18 = 2112;
      id v19 = v13;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Predicting retry count exceded, failed! retryCount=%lu routeGeniusActive=%@", buf, 0x16u);
    }
    [WeakRetained _stopPredictingRetryTimer];
  }
  else
  {
    if (v5)
    {
      id v6 = [WeakRetained retryCount];
      unsigned int v7 = [WeakRetained isActive];
      int v8 = @"NO";
      if (v7) {
        int v8 = @"YES";
      }
      uint64_t v9 = v8;
      *(_DWORD *)long long buf = 134218242;
      id v17 = v6;
      __int16 v18 = 2112;
      id v19 = v9;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Predicting retry timer fired retryCount=%lu routeGeniusActive=%@", buf, 0x16u);
    }
    [WeakRetained setRetryCount:[WeakRetained retryCount] + 1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100A4DE08;
    block[3] = &unk_1012E6708;
    objc_copyWeak(&v15, v1);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v15);
  }
}

void sub_100A4DE08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = [WeakRetained predictingRetryTimer];
  [v1 invalidate];

  [WeakRetained setPredictingRetryTimer:0];
  [WeakRetained startPredictingDestinationIfNeeded];
}

void sub_100A4E208(id a1)
{
  id v1 = objc_alloc_init((Class)UIViewController);
  uint64_t v2 = (void *)qword_1016105A8;
  qword_1016105A8 = (uint64_t)v1;
}

uint64_t (**sub_100A4EA1C(uint64_t a1))(void)
{
  if (*(void *)(a1 + 64) < *(void *)(a1 + 72)) {
    return (uint64_t (**)(void))_objc_msgSend(*(id *)(a1 + 32), "_resizingTestWithCount:numbeorOfRounds:latencySubTestName:animationSubTestName:completion:");
  }
  uint64_t result = *(uint64_t (***)(void))(a1 + 56);
  if (result) {
    return (uint64_t (**)(void))result[2]();
  }
  return result;
}

void sub_100A4EB40(uint64_t a1)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100A4EC18;
  _OWORD v5[3] = &unk_1012ED778;
  void v5[4] = v3;
  id v6 = v2;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  [v3 _updateTrayLayout:1 animated:1 latencySubTestName:v6 animationSubTestName:v4 completion:v5];
}

void sub_100A4EC18(uint64_t a1)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100A4ECF0;
  _OWORD v5[3] = &unk_1012ED778;
  void v5[4] = v3;
  id v6 = v2;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  [v3 _updateTrayLayout:2 animated:1 latencySubTestName:v6 animationSubTestName:v4 completion:v5];
}

void sub_100A4ECF0(uint64_t a1)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100A4EDC8;
  _OWORD v5[3] = &unk_1012ED778;
  void v5[4] = v3;
  id v6 = v2;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  [v3 _updateTrayLayout:0 animated:1 latencySubTestName:v6 animationSubTestName:v4 completion:v5];
}

void sub_100A4EDC8(uint64_t a1)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100A4EEA0;
  _OWORD v5[3] = &unk_1012ED778;
  void v5[4] = v3;
  id v6 = v2;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  [v3 _updateTrayLayout:2 animated:1 latencySubTestName:v6 animationSubTestName:v4 completion:v5];
}

void sub_100A4EEA0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_100A4EF44;
  void v4[3] = &unk_1012E6EA8;
  uint64_t v3 = *(void *)(a1 + 48);
  id v5 = *(id *)(a1 + 56);
  [v1 _updateTrayLayout:1 animated:1 latencySubTestName:v2 animationSubTestName:v3 completion:v4];
}

uint64_t sub_100A4EF44(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100A4F07C(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_100A4F278(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);

  return [v2 startedSubTest:v3];
}

uint64_t sub_100A4F2BC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56)) {
    [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_100A4F464(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t (**sub_100A4F6A0(uint64_t a1))(void)
{
  if (*(void *)(a1 + 72) < *(void *)(a1 + 80)) {
    return (uint64_t (**)(void))_objc_msgSend(*(id *)(a1 + 32), "_presentDismissTrayTestWithCount:numberOfRounds:latencySubTestName:animationSubTestName:presenter:completion:");
  }
  uint64_t result = *(uint64_t (***)(void))(a1 + 64);
  if (result) {
    return (uint64_t (**)(void))result[2]();
  }
  return result;
}

void sub_100A4F8C4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A4F988;
  block[3] = &unk_1013152B0;
  char v7 = *(unsigned char *)(a1 + 64);
  uint64_t v2 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100A4F988(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 64);
  if (v2)
  {
    [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) startedSubTest:*(void *)(a1 + 48)];
    uint64_t v3 = (void *)UIApp;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_100A4FAE4;
    v9[3] = &unk_1012E66E0;
    void v9[4] = *(void *)(a1 + 32);
    id v10 = *(id *)(a1 + 48);
    id v11 = *(id *)(a1 + 40);
    [v3 installCACommitCompletionBlock:v9];

    char v2 = *(unsigned char *)(a1 + 64);
  }
  id v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100A4FB28;
  _OWORD v5[3] = &unk_1012F7A50;
  char v8 = v2;
  void v5[4] = v4;
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 56);
  [v4 dismissTrayWithCompletion:v5];
}

id sub_100A4FAE4(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
  char v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);

  return [v2 startedSubTest:v3];
}

void sub_100A4FB28(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56)) {
    [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A4FBC8;
  block[3] = &unk_1012E6EA8;
  id v3 = *(id *)(a1 + 48);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100A4FBC8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100A4FBE0(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
  char v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);

  return [v2 startedSubTest:v3];
}

id sub_100A4FCC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
}

uint64_t sub_100A4FDB4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100A4FF1C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100A4FF34(uint64_t a1)
{
  return [*(id *)(a1 + 32) popToRootTrayWithCompletion:*(void *)(a1 + 40)];
}

uint64_t sub_100A50010(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_100A50198(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100A5054C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  char v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = 0;
}

void sub_100A513FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A5141C(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [v5 displayName];
  id v7 = [v5 headsign];
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 3221225472;
  id v15 = sub_100A515A8;
  id v16 = &unk_101315340;
  objc_copyWeak(v19, a1 + 6);
  id v8 = v5;
  id v17 = v8;
  v19[1] = a3;
  id v9 = v6;
  id v18 = v9;
  id v10 = +[UIAction actionWithTitle:v9 image:0 identifier:v7 handler:&v13];

  id v11 = [a1[4] headsign:v13, v14, v15, v16];
  id v12 = [v8 headsign];
  [v10 setState:[v11 isEqual:v12]];

  [a1[5] addObject:v10];
  objc_destroyWeak(v19);
}

void sub_100A51590(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100A515A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  char v2 = [WeakRetained delegate];
  [v2 selectDepartureSequence:*(void *)(a1 + 32)];

  uint64_t v3 = +[NSString stringWithFormat:@"%lu, %@", *(void *)(a1 + 56), *(void *)(a1 + 40)];
  +[GEOAPPortal captureUserAction:49 target:651 value:v3];
}

void sub_100A517E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained timeDidChangeSignificantly];
    [v2 scheduleTimeCheck];
    id WeakRetained = v2;
  }
}

void sub_100A525CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A525EC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained estimatedHeight];
    [v2[3] setConstant:];
    [v2 _updateConstraints];
    id WeakRetained = v2;
  }
}

NavTrayWaypointRow *sub_100A5282C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = objc_alloc_init(NavTrayWaypointRow);
  [(NavTrayWaypointRow *)v6 setWaypointIndex:*(void *)(a1 + 40) + a3];
  [(NavTrayWaypointRow *)v6 setWaypoint:v5];
  id v7 = [*(id *)(a1 + 32) displayEtaInfo];
  id v8 = [v7 legInfos];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_100A52A18;
  v16[3] = &unk_1013153D8;
  id v9 = v5;
  id v17 = v9;
  id v10 = sub_1000990A8(v8, v16);
  [(NavTrayWaypointRow *)v6 setEtaInfo:v10];

  id v11 = sub_10000AF10();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    id v12 = [v9 navDisplayName];
    unsigned int v13 = [(NavTrayWaypointRow *)v6 waypointIndex];
    uint64_t v14 = [v9 uniqueID];
    *(_DWORD *)long long buf = 138412802;
    id v19 = v12;
    __int16 v20 = 1024;
    unsigned int v21 = v13;
    __int16 v22 = 2112;
    id v23 = v14;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "NavTrayWaypointRow created for destination \"%@\", index: %d, ID: %@", buf, 0x1Cu);
  }

  return v6;
}

id sub_100A52A18(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 waypointID];
  id v4 = [*(id *)(a1 + 32) uniqueID];
  id v5 = [v3 isEqual:v4];

  return v5;
}

void sub_100A53C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

NSString *__cdecl sub_100A53C4C(id a1, $14D77461FF5D83CAEC4252578BA76F85 *a2)
{
  return +[NSString stringWithFormat:@"%lu,%lu,%lu", a2->var0, a2->var1, a2->var2];
}

void sub_100A53C90(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 3))
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v3 = [*(id *)(a1 + 32) objectForKeyedSubscript:v7];
    id v4 = v3;
    if (!v3) {
      uint64_t v3 = &off_1013AA078;
    }
    id v5 = (char *)[v3 unsignedIntegerValue];

    id v6 = +[NSNumber numberWithUnsignedInteger:v5 + 1];
    [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:v7];
  }
}

void sub_100A53D64(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v6 = [a3 unsignedIntegerValue];
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  if ((unint64_t)v6 > *(void *)(v7 + 24))
  {
    *(void *)(v7 + 24) = v6;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
}

void sub_100A54E8C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v3 = [*(id *)(a1 + 32) view];
  id v4 = v3;
  if (v2)
  {
    [v3 setAlpha:0.0];

    [*(id *)(a1 + 32) didStartHiding];
    id v6 = [*(id *)(a1 + 32) view];
    [v6 layoutIfNeeded];
  }
  else
  {
    [v3 setAlpha:1.0];

    id v5 = *(void **)(a1 + 32);
    [v5 didStartShowing];
  }
}

id sub_100A54F4C(uint64_t a1)
{
  [*(id *)(a1 + 32) setOpen:0 animated:0];
  if (*(unsigned char *)(a1 + 48))
  {
    int v2 = [*(id *)(a1 + 32) view];
    [v2 setAlpha:1.0];

    [*(id *)(a1 + 32) setHidden:1];
  }
  [*(id *)(a1 + 32) didFinishShowing];
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 updateHiddenAnimated:1 completion:v4];
}

id sub_100A5554C(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateVenueAndBuildingsAnimated:1 forced:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100A55560(uint64_t a1)
{
  return _[*(id *)(a1 + 32) updateDisplayedFloor];
}

uint64_t sub_100A55568(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A559EC(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) venuesManager];
  id v3 = [*(id *)(a1 + 40) shortValue];
  uint64_t v4 = [*(id *)(a1 + 32) venue];
  [v2 setDisplayedFloorOrdinal:v3 forBuildingsInVenue:v4];

  id v5 = [*(id *)(a1 + 32) venuesManager];
  id v6 = [v5 mapView];
  [v6 setUserTrackingMode:0];

  id v7 = [*(id *)(a1 + 32) floorPicker];
  [v7 setTitle:*(void *)(a1 + 48) forState:0];
}

void sub_100A562CC(id a1)
{
  uint64_t v1 = +[NSMutableCharacterSet characterSetWithRange:](NSMutableCharacterSet, "characterSetWithRange:", 1536, 384);
  int v2 = (void *)qword_1016105C8;
  qword_1016105C8 = v1;

  id v3 = (void *)qword_1016105C8;

  [v3 addCharactersInRange:2208, 96];
}

void sub_100A56C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100A56C5C(uint64_t result)
{
  return result;
}

uint64_t sub_100A56C74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v7 = *(void *)(*(void *)(result + 32) + 8);
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *a7 = 1;
  return result;
}

void sub_100A57134(uint64_t a1)
{
  CGRect v66 = +[NSMutableArray array];
  CGRect v68 = +[NSMutableArray array];
  int v2 = [*(id *)(a1 + 32) screen];
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) traitCollection];
    uint64_t v4 = +[UIGraphicsImageRendererFormat formatForTraitCollection:v3];
  }
  else
  {
    uint64_t v4 = +[UIGraphicsImageRendererFormat preferredFormat];
  }

  id v5 = +[NSUserDefaults standardUserDefaults];
  id v6 = [v5 BOOLForKey:@"__internal_VisualizeChromeLayoutGuidesDebug"];

  unsigned int v65 = +[DebugViewFrameHighlighter frameHighlightingEnabled];
  uint64_t v7 = +[NSUserDefaults standardUserDefaults];
  unsigned int v64 = [v7 BOOLForKey:@"CarInternalShowDeactivationReasons"];

  if ((*(unsigned char *)(a1 + 64) & 1) != 0 && GEOConfigGetBOOL())
  {
    id v8 = +[NSUserDefaults standardUserDefaults];
    [v8 setBool:0 forKey:@"__internal_VisualizeChromeLayoutGuidesDebug"];

    +[DebugViewFrameHighlighter setFrameHighlightingEnabled:0 persistToDefaults:0];
    id v9 = +[NSUserDefaults standardUserDefaults];
    [v9 setBool:0 forKey:@"CarInternalShowDeactivationReasons"];

    uint64_t v10 = sub_100A57B54();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = *(void *)(a1 + 72);
      uint64_t v12 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 134349314;
      uint64_t v83 = v11;
      __int16 v84 = 2112;
      uint64_t v85 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "[%{public}p] Generating normal screenshot attachment for name: %@", buf, 0x16u);
    }

    id v13 = objc_alloc((Class)UIGraphicsImageRenderer);
    [*(id *)(a1 + 32) bounds];
    id v16 = [v13 initWithSize:v4 format:v14];
    v80[0] = _NSConcreteStackBlock;
    v80[1] = 3221225472;
    v80[2] = sub_100A57BA8;
    v80[3] = &unk_1012ED568;
    id v81 = *(id *)(a1 + 32);
    CGRect v67 = [v16 imageWithActions:v80];

    unint64_t v17 = 1;
  }
  else
  {
    unint64_t v17 = 0;
    CGRect v67 = 0;
  }
  if ((*(unsigned char *)(a1 + 64) & 2) != 0 && GEOConfigGetBOOL())
  {
    id v18 = +[NSUserDefaults standardUserDefaults];
    [v18 setBool:0 forKey:@"__internal_VisualizeChromeLayoutGuidesDebug"];

    +[DebugViewFrameHighlighter setFrameHighlightingEnabled:1 persistToDefaults:0];
    id v19 = +[NSUserDefaults standardUserDefaults];
    [v19 setBool:0 forKey:@"CarInternalShowDeactivationReasons"];

    __int16 v20 = sub_100A57B54();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v21 = *(void *)(a1 + 72);
      uint64_t v22 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 134349314;
      uint64_t v83 = v21;
      __int16 v84 = 2112;
      uint64_t v85 = v22;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "[%{public}p] Generating debug view frames screenshot attachment for name: %@", buf, 0x16u);
    }

    id v23 = objc_alloc((Class)UIGraphicsImageRenderer);
    [*(id *)(a1 + 32) bounds];
    id v26 = [v23 initWithSize:v4 format:v24, v25];
    v78[0] = _NSConcreteStackBlock;
    v78[1] = 3221225472;
    v78[2] = sub_100A57BE8;
    v78[3] = &unk_1012ED568;
    id v79 = *(id *)(a1 + 32);
    char v27 = [v26 imageWithActions:v78];
    ++v17;
  }
  else
  {
    char v27 = 0;
  }
  if ((*(unsigned char *)(a1 + 64) & 4) != 0 && GEOConfigGetBOOL())
  {
    id v28 = +[NSUserDefaults standardUserDefaults];
    [v28 setBool:1 forKey:@"__internal_VisualizeChromeLayoutGuidesDebug"];

    +[DebugViewFrameHighlighter setFrameHighlightingEnabled:0 persistToDefaults:0];
    unint64_t v29 = +[NSUserDefaults standardUserDefaults];
    [v29 setBool:0 forKey:@"CarInternalShowDeactivationReasons"];

    id v30 = sub_100A57B54();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v31 = *(void *)(a1 + 72);
      uint64_t v32 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 134349314;
      uint64_t v83 = v31;
      __int16 v84 = 2112;
      uint64_t v85 = v32;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "[%{public}p] Generating debug chrome layout guides screenshot attachment for name: %@", buf, 0x16u);
    }

    id v33 = objc_alloc((Class)UIGraphicsImageRenderer);
    [*(id *)(a1 + 32) bounds];
    id v36 = [v33 initWithSize:v4 format:v34];
    v76[0] = _NSConcreteStackBlock;
    v76[1] = 3221225472;
    v76[2] = sub_100A57C28;
    v76[3] = &unk_1012ED568;
    id v77 = *(id *)(a1 + 32);
    CGFloat v37 = [v36 imageWithActions:v76];
    ++v17;
  }
  else
  {
    CGFloat v37 = 0;
  }
  if ((*(unsigned char *)(a1 + 64) & 8) != 0 && GEOConfigGetBOOL())
  {
    uint64_t v38 = +[NSUserDefaults standardUserDefaults];
    [v38 setBool:0 forKey:@"__internal_VisualizeChromeLayoutGuidesDebug"];

    +[DebugViewFrameHighlighter setFrameHighlightingEnabled:0 persistToDefaults:0];
    long long v39 = +[NSUserDefaults standardUserDefaults];
    [v39 setBool:1 forKey:@"CarInternalShowDeactivationReasons"];

    long long v40 = sub_100A57B54();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v41 = *(void *)(a1 + 72);
      uint64_t v42 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 134349314;
      uint64_t v83 = v41;
      __int16 v84 = 2112;
      uint64_t v85 = v42;
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEBUG, "[%{public}p] Generating inactive reasons screenshot attachment for name: %@", buf, 0x16u);
    }

    id v43 = objc_alloc((Class)UIGraphicsImageRenderer);
    [*(id *)(a1 + 32) bounds];
    id v46 = [v43 initWithSize:v4 format:v44 format:v45];
    v74[0] = _NSConcreteStackBlock;
    v74[1] = 3221225472;
    v74[2] = sub_100A57C68;
    v74[3] = &unk_1012ED568;
    id v75 = *(id *)(a1 + 32);
    CGFloat v47 = [v46 imageWithActions:v74];
    ++v17;
  }
  else
  {
    CGFloat v47 = 0;
  }
  CGFloat v48 = +[NSUserDefaults standardUserDefaults];
  [v48 setBool:v6 forKey:@"__internal_VisualizeChromeLayoutGuidesDebug"];

  +[DebugViewFrameHighlighter setFrameHighlightingEnabled:v65 persistToDefaults:0];
  CGAffineTransform v49 = +[NSUserDefaults standardUserDefaults];
  [v49 setBool:v64 forKey:@"CarInternalShowDeactivationReasons"];

  if (v17)
  {
    id v50 = objc_alloc((Class)UIGraphicsImageRenderer);
    [*(id *)(a1 + 32) bounds];
    double v52 = v51 * (double)v17;
    [*(id *)(a1 + 32) bounds];
    id v54 = [v50 initWithSize:v4 format:v52];
    v69[0] = _NSConcreteStackBlock;
    v69[1] = 3221225472;
    v69[2] = sub_100A57CA8;
    v69[3] = &unk_101315500;
    id v70 = v67;
    id v71 = v27;
    id v72 = v37;
    id v73 = v47;
    CGRect v55 = [v54 imageWithActions:v69];
    if (qword_1016105D0 != -1) {
      dispatch_once(&qword_1016105D0, &stru_101315520);
    }
    CGRect v56 = (void *)qword_1016105D8;
    CGRect v57 = +[NSDate date];
    CGRect v58 = [v56 stringFromDate:v57];

    CGRect v59 = +[NSString stringWithFormat:@"screenshot.%@.%@", v58, *(void *)(a1 + 40)];
    CGRect v60 = +[MapsRadarImageAttachment attachmentWithFileName:v59 image:v55];

    [v68 addObject:v60];
  }
  CGRect v61 = sub_100A57B54();
  if (os_log_type_enabled(v61, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v62 = *(void *)(a1 + 72);
    uint64_t v63 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 134349314;
    uint64_t v83 = v62;
    __int16 v84 = 2112;
    uint64_t v85 = v63;
    _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEBUG, "[%{public}p] Finished generating radar attachments for name: %@", buf, 0x16u);
  }

  [*(id *)(a1 + 48) addAttachments:v66];
  [*(id *)(a1 + 48) addScreenshots:v68];
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

id sub_100A57B54()
{
  if (qword_1016105E8 != -1) {
    dispatch_once(&qword_1016105E8, &stru_101315540);
  }
  id v0 = (void *)qword_1016105E0;

  return v0;
}

id sub_100A57BA8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  [v1 bounds];

  return [v1 drawViewHierarchyInRect:1];
}

id sub_100A57BE8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  [v1 bounds];

  return [v1 drawViewHierarchyInRect:1];
}

id sub_100A57C28(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  [v1 bounds];

  return [v1 drawViewHierarchyInRect:1];
}

id sub_100A57C68(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  [v1 bounds];

  return [v1 drawViewHierarchyInRect:1];
}

void sub_100A57CA8(id *a1, void *a2)
{
  id v23 = a2;
  id v3 = a1[4];
  if (v3)
  {
    [a1[4] size];
    double v5 = v4;
    [a1[4] size];
    [v3 drawInRect:CGRectMake(0.0, 0.0, v5, v6)];
    [a1[4] size];
    double v8 = v7 + 0.0;
  }
  else
  {
    double v8 = 0.0;
  }
  id v9 = a1[5];
  if (v9)
  {
    [a1[5] size];
    double v11 = v10;
    [a1[5] size];
    [v9 drawInRect:v8];
    [a1[5] size];
    double v8 = v8 + v13;
  }
  id v14 = a1[6];
  if (v14)
  {
    [a1[6] size];
    double v16 = v15;
    [a1[6] size];
    [v14 drawInRect:v8];
    [a1[6] size];
    double v8 = v8 + v18;
  }
  id v19 = a1[7];
  if (v19)
  {
    [a1[7] size];
    double v21 = v20;
    [a1[7] size];
    [v19 drawInRect:v8];
    [a1[7] size];
  }
}

void sub_100A57DFC(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  int v2 = (void *)qword_1016105D8;
  qword_1016105D8 = (uint64_t)v1;

  [(id)qword_1016105D8 setDateFormat:@"yyyy-MM-dd HH:mm:ss.SSSSSSZZZ"];
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_1016105D8 setLocale:v3];
}

void sub_100A57E88(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsRadarScreenshotAttachmentHelper");
  int v2 = (void *)qword_1016105E0;
  qword_1016105E0 = (uint64_t)v1;
}

void sub_100A58594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A586C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_100A58764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100A59A54(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) mainVKMapView];
  unsigned int v3 = [v2 isFullyDrawn];

  double v4 = *(void **)(a1 + 32);
  if (v3)
  {
    return _[v4 onFullyDrawn:0];
  }
  else
  {
    return [v4 setupFullyDrawnNotification:"onFullyDrawn:"];
  }
}

id sub_100A5A2B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate" withMetrics:&off_1013AE460];
}

id sub_100A5A340(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate"];
}

id sub_100A5A3C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate:setupConnection" withMetrics:&off_1013AE478];
}

id sub_100A5A450(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate:setupConnection"];
}

id sub_100A5A4D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate:updateIfNecessary" withMetrics:&off_1013AE490];
}

id sub_100A5A560(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate:updateIfNecessary"];
}

id sub_100A5A5E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate:forcedUpdate" withMetrics:&off_1013AE4A8];
}

id sub_100A5A670(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate:forcedUpdate"];
}

id sub_100A5A6F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate:getResourceManifest" withMetrics:&off_1013AE4C0];
}

id sub_100A5A780(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate:getResourceManifest"];
}

id sub_100A5A804(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate:setManifestToken" withMetrics:&off_1013AE4D8];
}

id sub_100A5A890(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate:setManifestToken"];
}

id sub_100A5A914(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate:setActiveTileGroup" withMetrics:&off_1013AE4F0];
}

id sub_100A5A9A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate:setActiveTileGroup"];
}

id sub_100A5AA24(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate:resetActiveTileGroup" withMetrics:&off_1013AE508];
}

id sub_100A5AAB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate:resetActiveTileGroup"];
}

id sub_100A5AB34(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"manifestUpdate:handleMessage" withMetrics:&off_1013AE520];
}

id sub_100A5ABC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"manifestUpdate:handleMessage"];
}

UIFont *__cdecl sub_100A5C560(id a1)
{
  return +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
}

UIFont *__cdecl sub_100A5C578(id a1)
{
  return +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
}

id sub_100A5C9BC()
{
  if (qword_101610620 != -1) {
    dispatch_once(&qword_101610620, &stru_1013155E0);
  }
  id v0 = (void *)qword_101610618;

  return v0;
}

void sub_100A5D53C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) collectionsCarousel];
  [v1 resetCollectionsLayout];
}

void sub_100A5D934(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CuratedCollectionsListViewController");
  int v2 = (void *)qword_101610618;
  qword_101610618 = (uint64_t)v1;
}

void sub_100A5DB50(uint64_t a1, uint64_t a2, void *a3)
{
  double v4 = *(void **)(a1 + 32);
  id v6 = a3;
  if (objc_msgSend(v4, "_propertyIsEnum:")) {
    double v5 = &off_1013AA0C0;
  }
  else {
    double v5 = 0;
  }
  [*(id *)(a1 + 32) setValue:v5 forKey:v6];
}

void sub_100A5DC9C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [*(id *)(a1 + 32) valueForKey:a3];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    BOOL v7 = [v6 integerValue] == (id)0xFFFF || v6 == 0;
    double v8 = v6;
    if (!v7) {
      goto LABEL_6;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0
      || ([v6 firstObject],
          id v9 = objc_claimAutoreleasedReturnValue(),
          double v10 = objc_opt_class(),
          v9,
          ![v10 isSubclassOfClass:objc_opt_class()]))
    {
      double v8 = v6;
      if (!v6) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    double v8 = objc_opt_new();
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v11 = v6;
    id v12 = [v11 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v13; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v14) {
            objc_enumerationMutation(v11);
          }
          double v16 = [*(id *)(*((void *)&v17 + 1) + 8 * i) accNavFormat:v17];
          [v8 addObject:v16];
        }
        id v13 = [v11 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }
      while (v13);
    }

    if (v6) {
LABEL_6:
    }
      [*(id *)(a1 + 40) setObject:v8 forKeyedSubscript:v5];
  }
LABEL_7:
}

void sub_100A5DF10(uint64_t a1, void *a2, void *a3)
{
  double v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v8 = [(id)objc_opt_class() _integersKeyed];
  BOOL v7 = [v8 objectForKeyedSubscript:v6];

  [v4 setValue:v5 forKey:v7];
}

void sub_100A5E098(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [*(id *)(a1 + 32) valueForKey:v4];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = [v5 firstObject];
    BOOL v7 = objc_opt_class();

    if ([v7 isSubclassOfClass:objc_opt_class()])
    {
      id v8 = objc_opt_new();
      long long v32 = 0u;
      long long v33 = 0u;
      long long v34 = 0u;
      long long v35 = 0u;
      id v9 = v5;
      id v10 = [v9 countByEnumeratingWithState:&v32 objects:v37 count:16];
      if (v10)
      {
        id v11 = v10;
        double v25 = v5;
        uint64_t v26 = a1;
        id v27 = v4;
        uint64_t v12 = *(void *)v33;
        do
        {
          for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v33 != v12) {
              objc_enumerationMutation(v9);
            }
            uint64_t v14 = [*(id *)(*((void *)&v32 + 1) + 8 * i) componentsJoinedByString:@", "];
            double v15 = +[NSString stringWithFormat:@"[%@]", v14];
            [v8 addObject:v15];
          }
          id v11 = [v9 countByEnumeratingWithState:&v32 objects:v37 count:16];
        }
        while (v11);
LABEL_21:
        a1 = v26;
        id v4 = v27;
        id v5 = v25;
      }
    }
    else
    {
      if (![v7 isSubclassOfClass:objc_opt_class()])
      {
LABEL_23:
        double v24 = [v5 componentsJoinedByString:@", "];
        uint64_t v16 = +[NSString stringWithFormat:@"[%@]", v24];

        goto LABEL_24;
      }
      id v8 = objc_opt_new();
      long long v28 = 0u;
      long long v29 = 0u;
      long long v30 = 0u;
      long long v31 = 0u;
      id v17 = v5;
      id v18 = [v17 countByEnumeratingWithState:&v28 objects:v36 count:16];
      if (v18)
      {
        id v19 = v18;
        double v25 = v5;
        uint64_t v26 = a1;
        id v27 = v4;
        uint64_t v20 = *(void *)v29;
        do
        {
          for (j = 0; j != v19; j = (char *)j + 1)
          {
            if (*(void *)v29 != v20) {
              objc_enumerationMutation(v17);
            }
            double v22 = [*(id *)(*((void *)&v28 + 1) + 8 * (void)j) logFormat];
            id v23 = [v22 stringByReplacingOccurrencesOfString:@"\t" withString:@"\t\t"];
            [v8 addObject:v23];
          }
          id v19 = [v17 countByEnumeratingWithState:&v28 objects:v36 count:16];
        }
        while (v19);
        goto LABEL_21;
      }
    }

    id v5 = v8;
    goto LABEL_23;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v16 = [*(id *)(a1 + 32) _debugDescriptionForProperty:v4 withValue:v5];

LABEL_24:
    id v5 = (void *)v16;
  }
  [*(id *)(a1 + 40) appendFormat:@"\n\t%@: %@", v4, v5];
}

id sub_100A5F580(uint64_t a1, void *a2)
{
  return [a2 setHost:*(void *)(a1 + 32)];
}

void sub_100A5F58C(id a1, ChromeOverlay *a2, unint64_t a3, BOOL *a4)
{
}

id sub_100A601F4()
{
  if (qword_101610630 != -1) {
    dispatch_once(&qword_101610630, &stru_101315738);
  }
  id v0 = (void *)qword_101610628;

  return v0;
}

VKARWalkingFeature *__cdecl sub_100A6063C(id a1, PedestrianARVKFeatureMapEntry *a2, unint64_t a3)
{
  return [(PedestrianARVKFeatureMapEntry *)a2 feature];
}

uint64_t sub_100A60EF8(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 feature];
  id v4 = v3;
  if (v3 == *(void **)(a1 + 32)) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = [v3 isEqual:];
  }

  return v5;
}

uint64_t sub_100A61164(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 feature];
  id v4 = v3;
  if (v3 == *(void **)(a1 + 32)) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = [v3 isEqual:];
  }

  return v5;
}

VKARWalkingFeature *__cdecl sub_100A613C0(id a1, PedestrianARVKFeatureMapEntry *a2, unint64_t a3)
{
  return [(PedestrianARVKFeatureMapEntry *)a2 feature];
}

void sub_100A616C0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARVKMapViewMapDelegate");
  int v2 = (void *)qword_101610628;
  qword_101610628 = (uint64_t)v1;
}

void sub_100A61830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100A6184C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a3)
  {
    BOOL v7 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error fetching subscriptions", buf, 2u);
    }

    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v17 = v5;
    id v8 = v5;
    id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v19;
      while (2)
      {
        for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          if (([v13 dataTypes] & 0x400) != 0)
          {
            double v15 = [v13 region];
            unsigned int v16 = [v15 containsCoordinate:*(double *)(a1 + 48), *(double *)(a1 + 56)];

            if (v16)
            {
              *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
              dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

              goto LABEL_19;
            }
          }
          else
          {
            uint64_t v14 = GEOFindOrCreateLog();
            if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Subscription is not of type offline, skipping.", buf, 2u);
            }
          }
        }
        id v10 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
        if (v10) {
          continue;
        }
        break;
      }
    }

    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
LABEL_19:
    id v6 = v17;
  }
}

__CFString *sub_100A625EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = [*(id *)(a1 + 32) identifierCache];
    id v5 = [v4 identifierForObject:v3];
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0
      || (id v5 = @"kLibraryCellIdentifier",
          ([v3 isEqualToString:@"kLibraryCellIdentifier"] & 1) == 0))
    {
      id v6 = sub_1005762E4();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        int v10 = 136315650;
        uint64_t v11 = "-[HomeOutlineFavoritesSectionController itemSnapshots]_block_invoke";
        __int16 v12 = 2080;
        id v13 = "HomeOutlineFavoritesSectionController.m";
        __int16 v14 = 1024;
        int v15 = 137;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", (uint8_t *)&v10, 0x1Cu);
      }

      if (sub_100BB36BC())
      {
        BOOL v7 = sub_1005762E4();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        {
          id v8 = +[NSThread callStackSymbols];
          int v10 = 138412290;
          uint64_t v11 = v8;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v10, 0xCu);
        }
      }
      id v5 = 0;
    }
  }

  return v5;
}

TwoLinesMapsFavoriteItemOutlineCellModel *sub_100A627D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    id v5 = [SidebarOutlineCellBackgroundModel alloc];
    id v6 = [*(id *)(a1 + 32) delegate];
    id v7 = [v6 isCollectionViewFocusedWithSectionController:*(void *)(a1 + 32)];
    id v8 = [*(id *)(a1 + 32) delegate];
    id v9 = [v8 isCollectionViewProxyFocusedWithSectionController:*(void *)(a1 + 32)];
    int v10 = [*(id *)(a1 + 32) delegate];
    uint64_t v11 = -[SidebarOutlineCellBackgroundModel initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:](v5, "initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:", 0, 0, 1, v7, v9, [v10 hasCollectionViewDropSessionWithSectionController:*(void *)(a1 + 32)]);

    __int16 v12 = 0;
    if ([*(id *)(a1 + 32) _shouldShowAccessoryForFavorite:v4])
    {
      id v13 = -[TwoLineOutlineCellButtonAccessoryModel initWithAccessoryType:visibility:delegate:]([TwoLineOutlineCellButtonAccessoryModel alloc], "initWithAccessoryType:visibility:delegate:", 1, [*(id *)(a1 + 32) _accessoryVisiblityForFavorite:v4], *(void *)(a1 + 32));
      uint64_t v26 = v13;
      __int16 v12 = +[NSArray arrayWithObjects:&v26 count:1];
    }
    __int16 v14 = [[TwoLinesMapsFavoriteItemOutlineCellModel alloc] initWithMapsFavoriteItem:v4 accessoryModels:v12 backgroundModel:v11];
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && [v3 isEqualToString:@"kLibraryCellIdentifier"])
    {
      __int16 v14 = objc_alloc_init(_TtC4Maps27LibraryLinkOutlineCellModel);
      int v15 = [*(id *)(*(void *)(a1 + 32) + 104) counts];
      [(TwoLinesMapsFavoriteItemOutlineCellModel *)v14 setLibraryItemsCount:v15];
    }
    else
    {
      unsigned int v16 = sub_1005762E4();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        int v20 = 136315650;
        long long v21 = "-[HomeOutlineFavoritesSectionController itemSnapshots]_block_invoke";
        __int16 v22 = 2080;
        id v23 = "HomeOutlineFavoritesSectionController.m";
        __int16 v24 = 1024;
        int v25 = 169;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", (uint8_t *)&v20, 0x1Cu);
      }

      if (sub_100BB36BC())
      {
        id v17 = sub_1005762E4();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          long long v18 = +[NSThread callStackSymbols];
          int v20 = 138412290;
          long long v21 = v18;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v20, 0xCu);
        }
      }
      __int16 v14 = 0;
    }
  }

  return v14;
}

NSArray *__cdecl sub_100A62B14(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return (NSArray *)&__NSArray0__struct;
}

BOOL sub_100A62B20(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return 0;
}

id sub_100A62B28(uint64_t a1, void *a2)
{
  int v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 identifierCache];
  id v5 = [v4 identifierForObject:v3];

  return v5;
}

TwoLinesMapsSuggestionsEntryOutlineCellModel *sub_100A62B94(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [SidebarOutlineCellBackgroundModel alloc];
  id v5 = [*(id *)(a1 + 32) delegate];
  id v6 = [v5 isCollectionViewFocusedWithSectionController:*(void *)(a1 + 32)];
  id v7 = [*(id *)(a1 + 32) delegate];
  id v8 = [v7 isCollectionViewProxyFocusedWithSectionController:*(void *)(a1 + 32)];
  id v9 = [*(id *)(a1 + 32) delegate];
  int v10 = -[SidebarOutlineCellBackgroundModel initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:](v4, "initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:", 0, 0, 1, v6, v8, [v9 hasCollectionViewDropSessionWithSectionController:*(void *)(a1 + 32)]);

  uint64_t v11 = 0;
  if ([*(id *)(a1 + 32) _shouldShowAccessoryForEntry:v3])
  {
    __int16 v12 = -[TwoLineOutlineCellButtonAccessoryModel initWithAccessoryType:visibility:delegate:]([TwoLineOutlineCellButtonAccessoryModel alloc], "initWithAccessoryType:visibility:delegate:", 1, [*(id *)(a1 + 32) _accessoryVisiblityForEntry:v3], *(void *)(a1 + 32));
    int v15 = v12;
    uint64_t v11 = +[NSArray arrayWithObjects:&v15 count:1];
  }
  id v13 = [[TwoLinesMapsSuggestionsEntryOutlineCellModel alloc] initWithMapsSuggestionsEntry:v3 accessoryModels:v11 backgroundModel:v10];

  return v13;
}

NSArray *__cdecl sub_100A62D44(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return (NSArray *)&__NSArray0__struct;
}

BOOL sub_100A62D50(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return 0;
}

void sub_100A63534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *location, uint64_t a13, uint64_t a14, id *a15)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak(a15);
  objc_destroyWeak((id *)(v16 - 168));
  _Unwind_Resume(a1);
}

void sub_100A63600(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteSnapshot:*(void *)(a1 + 32)];
}

void sub_100A63650(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteSnapshot:*(void *)(a1 + 32)];
}

void sub_100A636A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _editEntrySnapshot:*(void *)(a1 + 32)];
}

void sub_100A636F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _openSnapshot:*(void *)(a1 + 32) inNewTab:1];
}

void sub_100A63744(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _openSnapshot:*(void *)(a1 + 32) inNewTab:0];
}

void sub_100A63798(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteSnapshot:*(void *)(a1 + 32)];
}

void sub_100A64424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A64444(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _endEditSession];
}

void sub_100A64E44(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = sub_1000AA148();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v6 = 138412290;
      uint64_t v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error moving shortcut: %@", (uint8_t *)&v6, 0xCu);
    }
  }
  id v5 = [*(id *)(a1 + 40) delegate];
  [v5 sectionController:*(void *)(a1 + 40) setNeedsApplySnapshotAnimated:1];
}

void sub_100A64F10(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v3 = sub_1000AA148();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error moving shortcut: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

uint64_t sub_100A652E8(uint64_t a1, void *a2)
{
  id v3 = [a2 shortcutIdentifier];
  uint64_t v4 = [*(id *)(a1 + 32) identifier];
  if (v3 == v4) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = (uint64_t)[v3 isEqual:v4];
  }

  return v5;
}

uint64_t sub_100A6535C(uint64_t a1, void *a2)
{
  id v3 = [a2 shortcutIdentifier];
  uint64_t v4 = [*(id *)(a1 + 32) identifier];
  if (v3 == v4) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = (uint64_t)[v3 isEqual:v4];
  }

  return v5;
}

void sub_100A655AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A655D0(uint64_t a1, char a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if ((a2 & 1) == 0)
    {
      uint64_t v5 = sub_1000AA148();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        uint64_t v6 = *(void *)(a1 + 32);
        int v7 = 138412290;
        uint64_t v8 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error creating shortcut for map item: %@", (uint8_t *)&v7, 0xCu);
      }
    }
    [WeakRetained[16] removeObject:*(void *)(a1 + 40)];
  }
}

void sub_100A65B4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_100A65B88(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v5 = +[NSArray arrayWithObjects:&v6 count:1];
      [WeakRetained endFailedDeletions:v5 error:v3];
    }
    [WeakRetained[17] removeObject:*(void *)(a1 + 40)];
  }
}

void sub_100A65C54(uint64_t a1, char a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if ((a2 & 1) == 0)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v5 = +[NSArray arrayWithObjects:&v6 count:1];
      [WeakRetained endFailedDeletions:v5 error:0];
    }
    [WeakRetained[17] removeObject:*(void *)(a1 + 40)];
  }
}

void sub_100A672F0(uint64_t a1)
{
  uint64_t v2 = [NavigationCustomFeaturesSource alloc];
  id v8 = [*(id *)(a1 + 32) carChromeViewController];
  id v3 = [v8 navigationDisplay];
  uint64_t v4 = [v3 cameraController];
  uint64_t v5 = [(NavigationCustomFeaturesSource *)v2 initWithPointsFramer:v4];
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = *(void **)(v6 + 16);
  *(void *)(v6 + 16) = v5;
}

void sub_100A67468(uint64_t a1)
{
  if (![*(id *)(*(void *)(a1 + 32) + 32) count])
  {
    uint64_t v2 = [*(id *)(a1 + 32) category];

    if (v2) {
      [*(id *)(a1 + 32) _fetchCategoryResults];
    }
  }
  id v3 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v4 = [v3 mapView];
  [v4 _setApplicationState:2];

  uint64_t v5 = [*(id *)(a1 + 32) chromeViewController];
  [v5 setHardwareBackButtonBehavior:0 forContext:*(void *)(a1 + 32)];

  uint64_t v6 = [*(id *)(a1 + 32) category];

  if (v6)
  {
    int v7 = +[MKLocationManager sharedLocationManager];
    [v7 startLocationUpdateWithObserver:*(void *)(a1 + 32)];
  }
  if ([*(id *)(*(void *)(a1 + 32) + 32) count] == (id)1)
  {
    id v8 = *(id **)(a1 + 32);
    id v9 = [v8[4] firstObject];
    [v8 _displayPlaceCardForSearchResult:v9];
  }
}

void sub_100A675A8(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) searchSession];
  if ([v4 isLoading])
  {
  }
  else
  {
    id v2 = [*(id *)(*(void *)(a1 + 32) + 32) count];

    if (v2)
    {
      id v3 = *(void **)(a1 + 32);
      _[v3 _displayMapItems];
    }
  }
}

void sub_100A67B54(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100A67B80(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v5 = [WeakRetained _labelMarkerForCustomFeatureAnnotation:v3];

    if (v5)
    {
      uint64_t v6 = objc_loadWeakRetained((id *)(a1 + 40));
      [v6 _selectLabelMarker:v5 animated:1];
LABEL_6:

      goto LABEL_10;
    }
    int v7 = sub_100015DB4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = [*(id *)(a1 + 32) name];
      int v9 = 138477827;
      int v10 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "SAR: tried to highlight mapItem %{private}@, but labelMarker for annotation was nil.", (uint8_t *)&v9, 0xCu);
    }
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = sub_100015DB4();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = [*(id *)(a1 + 32) name];
      int v9 = 138477827;
      int v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "SAR: tried to highlight mapItem %{private}@, but its annotation was nil.", (uint8_t *)&v9, 0xCu);
      goto LABEL_6;
    }
  }
LABEL_10:
}

void sub_100A68694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100A686C4(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v7 = [WeakRetained chromeViewController];
  unsigned __int8 v8 = [v7 isCurrentContext:WeakRetained];

  if (v8)
  {
    int v9 = [WeakRetained chromeViewController];
    int v10 = sub_100672F88(v5);
    [v9 captureUserAction:9020 onTarget:1009 eventValue:v10];

    uint64_t v11 = sub_100015DB4();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      __int16 v12 = @"NO";
      if (a2) {
        __int16 v12 = @"YES";
      }
      id v13 = v12;
      int v17 = 138412546;
      CFStringRef v18 = v13;
      __int16 v19 = 2112;
      id v20 = v5;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "SAR: handoff complete with success: %@, error: %@", (uint8_t *)&v17, 0x16u);
    }
    if (a2)
    {
      __int16 v14 = +[CarChromeModeCoordinator sharedInstance];
      [v14 displayMapBrowsing];
    }
    else
    {
      __int16 v14 = +[UIApplication sharedMapsDelegate];
      uint64_t v16 = CarInterruptionUserInfoForDestinationHandoffFailure(*(void **)(a1 + 32), v5);
      [v14 interruptApplicationWithKind:3 userInfo:v16 completionHandler:0];
    }
  }
  else
  {
    __int16 v14 = sub_100015DB4();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      CFStringRef v15 = @"stopped being currentMode.";
      if (!WeakRetained) {
        CFStringRef v15 = @"deallocated";
      }
      int v17 = 138412290;
      CFStringRef v18 = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "SAR: mode %@ in the middle of destination handoff. Ignoring the handoff completion.", (uint8_t *)&v17, 0xCu);
    }
  }
}

void sub_100A68BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100A68BEC(uint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (*(void *)(result + 32) == a2)
  {
    *(void *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

void sub_100A68F4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_100A68F70(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained chromeViewController];
  id v3 = objc_loadWeakRetained(v1);
  [v2 setHardwareBackButtonBehavior:0 forContext:v3];
}

id sub_100A6A0F4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) captureStartNavigationIntent];
}

uint64_t sub_100A6A694(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    uint64_t v6 = -1;
    if (objc_opt_isKindOfClass())
    {
      id v7 = v5;
      [v4 _coordinate];
      GEOCalculateDistance();
      double v9 = v8;
      [v7 _coordinate];

      GEOCalculateDistance();
      if (v9 >= v10) {
        uint64_t v6 = 1;
      }
    }
  }
  else
  {
    uint64_t v6 = -1;
  }

  return v6;
}

int64_t sub_100A6A784(id a1, id a2, id a3)
{
  id v4 = a2;
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    id v6 = v5;
    id v7 = [v4 name];
    double v8 = [v6 name];

    int64_t v9 = (int64_t)[v7 localizedCaseInsensitiveCompare:v8];
  }
  else
  {
    int64_t v9 = -1;
  }

  return v9;
}

void sub_100A6AF28(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 8);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) collectionHandlerContentUpdated:*(void *)(a1 + 32) v7];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

id sub_100A6C07C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) setImage:a2];
}

id sub_100A6C094(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) setImage:a2];
}

id sub_100A6C0AC(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) setImage:a2];
}

void sub_100A6DEBC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 copy];
  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:v5];
}

void sub_100A6E7B0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateCommitBarItem];

  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

id sub_100A6FC70(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) selectAnnotation:*(void *)(*(void *)(a1 + 32) + 168) animated:1];
}

void sub_100A71480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A714A8(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained + 8;
    [v8 selectedCoordinate];
    *id v5 = v6;
    v4[9] = v7;
    [v4 _updateDoneBarItem];
  }
}

void sub_100A71E38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_100A71E58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained callToActionViewProviderDidFinishResolvingEditState:*(void *)(a1 + 32)];
}

void sub_100A71EAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setHasUserAlreadyRatedThisPlace:a2];
    if ([v7 hasUserAlreadyRatedThisPlace])
    {
      id v8 = sub_100577714();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "The user has reviewed this POI", buf, 2u);
      }

      if (![v5 hasCachedValues]
        || ([v7 alwaysRefinesUserSubmission] & 1) != 0)
      {
        [v7 refineUserSubmissionForMapItem:v7[2]];
        goto LABEL_10;
      }
      long long v10 = sub_100577714();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "We have valid cached values for this POI.  Early return.", buf, 2u);
      }

      [v7 setNumberOfPhotosAddedForSubmission:[v5 numberOfPhotosAdded]];
      [v7 setCurrentRatingCategoryState:[v5 recommendState]];
      uint64_t v16 = _NSConcreteStackBlock;
      uint64_t v17 = 3221225472;
      CFStringRef v18 = sub_100A72094;
      __int16 v19 = &unk_1012E5D08;
      id v20 = v7;
      long long v9 = &v16;
    }
    else
    {
      uint64_t v11 = _NSConcreteStackBlock;
      uint64_t v12 = 3221225472;
      id v13 = sub_100A720E8;
      __int16 v14 = &unk_1012E5D08;
      CFStringRef v15 = v7;
      long long v9 = &v11;
    }
    [v7 _finishResolvingWithBlock:v9, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20];
  }
LABEL_10:
}

void sub_100A72094(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained callToActionViewProviderInitialLoadingStateDidChange:*(void *)(a1 + 32)];
}

void sub_100A720E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained callToActionViewProviderDidFinishResolvingEditState:*(void *)(a1 + 32)];
}

void sub_100A7213C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setHasUserAlreadyRatedThisPlace:a2];
    if ([v7 hasUserAlreadyRatedThisPlace])
    {
      id v8 = sub_100577714();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "The user has reviewed this POI", buf, 2u);
      }

      if (![v5 hasCachedValues]
        || ([v7 alwaysRefinesUserSubmission] & 1) != 0)
      {
        [v7 refineUserSubmissionForMapItem:v7[2]];
        goto LABEL_10;
      }
      long long v10 = sub_100577714();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "We have valid cached values for this POI.  Early return.", buf, 2u);
      }

      [v7 setNumberOfPhotosAddedForSubmission:[v5 numberOfPhotosAdded]];
      [v7 setCurrentRatingCategoryState:[v5 recommendState]];
      uint64_t v16 = _NSConcreteStackBlock;
      uint64_t v17 = 3221225472;
      CFStringRef v18 = sub_100A72324;
      __int16 v19 = &unk_1012E5D08;
      id v20 = v7;
      long long v9 = &v16;
    }
    else
    {
      uint64_t v11 = _NSConcreteStackBlock;
      uint64_t v12 = 3221225472;
      id v13 = sub_100A72378;
      __int16 v14 = &unk_1012E5D08;
      CFStringRef v15 = v7;
      long long v9 = &v11;
    }
    [v7 _finishResolvingWithBlock:v9, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20];
  }
LABEL_10:
}

void sub_100A72324(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained callToActionViewProviderInitialLoadingStateDidChange:*(void *)(a1 + 32)];
}

void sub_100A72378(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained callToActionViewProviderDidFinishResolvingEditState:*(void *)(a1 + 32)];
}

void sub_100A7252C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A72550(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((MapsFeature_IsEnabled_SydneyARP() & 1) == 0) {
    goto LABEL_7;
  }
  if (![v5 numberOfPhotosAdded])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
    [WeakRetained callToActionViewProviderDidUpdateWithPreferredUserUploadedPhoto:0 photoID:0 numberOfPhotos:0];

LABEL_7:
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    goto LABEL_8;
  }
  id v6 = objc_loadWeakRetained((id *)(a1 + 48));
  if (v6)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100A726A8;
    void v8[3] = &unk_101315A58;
    objc_copyWeak(&v11, (id *)(a1 + 48));
    id v10 = *(id *)(a1 + 40);
    char v12 = a2;
    id v9 = v5;
    [v6 _retrievePhotoURLWithCompletion:v8];

    objc_destroyWeak(&v11);
  }

LABEL_8:
}

void sub_100A72694(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100A726A8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v10 = a2;
  id v7 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v10)
    {
      id v9 = objc_loadWeakRetained(WeakRetained + 1);
      [v9 callToActionViewProviderDidUpdateWithPreferredUserUploadedPhoto:v10 photoID:v7 numberOfPhotos:a4];
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100A72ADC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100A72B10(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A72BEC;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v10 = v5;
  id v11 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v12);
}

void sub_100A72BEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _handleLookupSubmissionCompletion:*(void *)(a1 + 32) lookupError:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

void sub_100A72C40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A72D1C;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v10 = v5;
  id v11 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v12);
}

void sub_100A72D1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _handleLookupSubmissionCompletion:*(void *)(a1 + 32) lookupError:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

void sub_100A72E74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained callToActionViewProviderDidFinishResolvingEditState:*(void *)(a1 + 32)];
}

void sub_100A72EC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained callToActionViewProviderDidFinishResolvingEditState:*(void *)(a1 + 32)];
}

void sub_100A732B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100A732D0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v7 = WeakRetained;
    if (WeakRetained)
    {
      [WeakRetained setLookupResult:v5];
      id v8 = [v5 previousSubmission];
      id v9 = [v8 images];
      id v10 = [v9 objectAtIndexedSubscript:0];

      id v11 = [v5 previousSubmission];
      id v12 = [v11 images];
      id v13 = [v12 count];

      __int16 v14 = [v10 url];
      id v15 = [v14 length];

      if (v15)
      {
        uint64_t v16 = [v10 url];
        id v17 = [objc_alloc((Class)NSURL) initWithString:v16];
        [v7 setFirstPhotoURL:v17];
      }
      else
      {
        uint64_t v16 = sub_100577714();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          int v22 = 138412290;
          id v23 = v10;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Image contains a nil or empty URL. Image: %@.", (uint8_t *)&v22, 0xCu);
        }
      }

      CFStringRef v18 = [v10 imageId];
      [v7 setFirstPhotoID:v18];

      uint64_t v19 = *(void *)(a1 + 32);
      id v20 = [v7 firstPhotoURL];
      long long v21 = [v10 imageId];
      (*(void (**)(uint64_t, void *, void *, id))(v19 + 16))(v19, v20, v21, v13);
    }
  }
}

uint64_t sub_100A7414C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A77740(id a1, NSString *a2, NSDictionary *a3, BOOL *a4)
{
  id v4 = [(NSDictionary *)a3 allValues];
  +[NSLayoutConstraint deactivateConstraints:v4];
}

void sub_100A7A828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A7A84C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v6)
    {
      id v8 = sub_100576CFC();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        id v9 = [v6 description];
        uint64_t v10 = WeakRetained[1];
        *(_DWORD *)long long buf = 138412546;
        id v25 = v9;
        __int16 v26 = 2112;
        uint64_t v27 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error %@ for stationId %@", buf, 0x16u);
      }
    }
    id v11 = [v5 firstObject];
    id v12 = [v11 _transitInfo];
    id v13 = [v12 departureSequences];

    __int16 v14 = sub_100576CFC();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      id v15 = [v13 count];
      uint64_t v16 = WeakRetained[1];
      *(_DWORD *)long long buf = 134218242;
      id v25 = v15;
      __int16 v26 = 2112;
      uint64_t v27 = v16;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Received %lu departureSequences for stationId %@", buf, 0x16u);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100A7AA88;
    block[3] = &unk_1012EF330;
    id v17 = *(id *)(a1 + 32);
    id v22 = v13;
    id v23 = v17;
    id v21 = v11;
    id v18 = v13;
    id v19 = v11;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100A7AA88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) _transitInfo];
  (*(void (**)(uint64_t, id, void))(v2 + 16))(v2, v3, *(void *)(a1 + 40));
}

void sub_100A7AC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A7AC80(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if ([v4 count])
    {
      [WeakRetained setRemoteNetworkState:1];
      [WeakRetained processDeparturesFromDepartureSequences:v4 animatingDifferences:0];
      [WeakRetained selectNextIncomingDeparture];
    }
    else
    {
      id v6 = WeakRetained[2];
      id v7 = WeakRetained[3];
      id v8 = [WeakRetained scheduleWindowStartDate];
      id v9 = [v8 description];

      uint64_t v10 = sub_100576CFC();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        int v11 = 134218498;
        id v12 = v7;
        __int16 v13 = 2112;
        id v14 = v6;
        __int16 v15 = 2112;
        uint64_t v16 = v9;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "No departures for lineId %llu from %@ at %@", (uint8_t *)&v11, 0x20u);
      }

      [WeakRetained setRemoteNetworkState:3];
    }
  }
}

uint64_t sub_100A7AFA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 departures];
  id v5 = [v4 firstObject];

  if (v5
    && ([v5 departureDate],
        id v6 = objc_claimAutoreleasedReturnValue(),
        [v6 timeIntervalSinceDate:*(void *)(a1 + 32)],
        double v8 = v7,
        v6,
        v8 < 0.0))
  {
    uint64_t v9 = 1;
  }
  else
  {
    uint64_t v9 = (uint64_t)[v3 isValidForDate:*(void *)(a1 + 32) inTimeZone:*(void *)(*(void *)(a1 + 40) + 72)];
  }

  return v9;
}

void sub_100A7B314(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 headsign];

  if (v4)
  {
    id v5 = [v3 departures];
    id v6 = *(void **)(*(void *)(a1 + 32) + 48);
    double v7 = [v3 headsign];
    double v8 = [v6 objectForKeyedSubscript:v7];

    uint64_t v9 = [v5 firstObject];
    id v10 = [v9 liveStatus];

    if (v10 == (id)1)
    {
      double v45 = v3;
      int v11 = +[NSMutableSet set];
      long long v50 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      double v44 = v5;
      id v12 = v5;
      id v13 = [v12 countByEnumeratingWithState:&v50 objects:v58 count:16];
      if (v13)
      {
        id v14 = v13;
        uint64_t v15 = *(void *)v51;
        do
        {
          for (uint64_t i = 0; i != v14; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v51 != v15) {
              objc_enumerationMutation(v12);
            }
            id v17 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(*((void *)&v50 + 1) + 8 * i) tripIdentifier]);
            [v11 addObject:v17];
          }
          id v14 = [v12 countByEnumeratingWithState:&v50 objects:v58 count:16];
        }
        while (v14);
      }
      id v43 = v12;

      id v18 = +[NSMutableArray array];
      long long v46 = 0u;
      long long v47 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v19 = v8;
      id v20 = [v19 countByEnumeratingWithState:&v46 objects:v57 count:16];
      if (v20)
      {
        id v21 = v20;
        uint64_t v22 = *(void *)v47;
        do
        {
          for (j = 0; j != v21; j = (char *)j + 1)
          {
            if (*(void *)v47 != v22) {
              objc_enumerationMutation(v19);
            }
            __int16 v24 = *(void **)(*((void *)&v46 + 1) + 8 * (void)j);
            id v25 = [NSNumber numberWithUnsignedLongLong:[v24 tripIdentifier]];
            unsigned __int8 v26 = [v11 containsObject:v25];

            if ((v26 & 1) == 0) {
              [v18 addObject:v24];
            }
          }
          id v21 = [v19 countByEnumeratingWithState:&v46 objects:v57 count:16];
        }
        while (v21);
      }

      id v27 = [v18 count];
      long long v28 = sub_100576CFC();
      BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG);
      id v3 = v45;
      if (v27)
      {
        uint64_t v30 = a1;
        if (v29)
        {
          *(_DWORD *)long long buf = 138412290;
          CGRect v56 = v18;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "Merging past departures %@", buf, 0xCu);
        }

        uint64_t v31 = [*(id *)(*(void *)(a1 + 32) + 40) arrayByAddingObject:v45];
        uint64_t v32 = *(void *)(a1 + 32);
        long long v33 = *(void **)(v32 + 40);
        *(void *)(v32 + 40) = v31;

        id v34 = [v18 arrayByAddingObjectsFromArray:v43];
      }
      else
      {
        uint64_t v30 = a1;
        if (v29)
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "No past departures to merge; using server values",
            buf,
            2u);
        }

        id v54 = v45;
        uint64_t v38 = +[NSArray arrayWithObjects:&v54 count:1];
        uint64_t v39 = *(void *)(a1 + 32);
        long long v40 = *(void **)(v39 + 40);
        *(void *)(v39 + 40) = v38;

        id v34 = [v43 copy];
      }
      double v8 = v34;

      uint64_t v41 = *(void **)(*(void *)(v30 + 32) + 48);
      uint64_t v42 = [v45 headsign];
      [v41 setObject:v8 forKeyedSubscript:v42];

      id v5 = v44;
    }
    else
    {
      id v35 = [v5 copy];
      id v36 = *(void **)(*(void *)(a1 + 32) + 48);
      CGFloat v37 = [v3 headsign];
      [v36 setObject:v35 forKeyedSubscript:v37];
    }
  }
}

void sub_100A7BA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100A7BA60(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  id v6 = a2;
  double v7 = [v6 departures];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100A7BB34;
  v10[3] = &unk_101315BF0;
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = v8;
  id v11 = v6;
  id v9 = v6;
  [v7 enumerateObjectsUsingBlock:v10];

  *a4 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_100A7BB34(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if ([a2 tripIdentifier] == *(id *)(a1 + 48))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(id *)(a1 + 32));
    *a4 = 1;
  }
}

uint64_t sub_100A7BC94(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 tripIdentifier] == *(id *)(a1 + 40))
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = [v3 scheduledDepartureDate];
      if (v4)
      {
        id v5 = [v3 scheduledDepartureDate];
        uint64_t v6 = (uint64_t)[v5 isEqualToDate:*(void *)(a1 + 32)];
      }
      else
      {
        uint64_t v6 = 1;
      }
    }
    else
    {
      uint64_t v6 = 1;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_100A7BECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100A7BEE4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 isPastDeparture];
  if ((result & 1) == 0)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

void sub_100A7C0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100A7C0D0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  double v7 = *(void **)(a1 + 32);
  id v8 = a2;
  id v9 = [v7 headsign];
  id v10 = [v8 headsign];

  LODWORD(v_Block_object_dispose(&STACK[0x7A0], 8) = [v9 isEqualToString:v10];
  if (v8)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

id sub_100A7C820(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v4 length])
  {
    id v5 = v4;
  }
  else
  {
    uint64_t v6 = [v3 addressObject];
    double v7 = [v6 parkingDisplayName];

    if ([v7 length]) {
      id v8 = v7;
    }
    else {
      id v8 = 0;
    }
    id v5 = v8;
  }

  return v5;
}

id sub_100A7D4CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

BOOL sub_100A7F544(id a1, GEOTransitStep *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOTransitStep *)a2 maneuverType] == 1;
}

void sub_100A816F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,id a21)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a21);
  _Unwind_Resume(a1);
}

void sub_100A81728(uint64_t a1, void *a2)
{
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v5 = objc_loadWeakRetained((id *)(a1 + 48));

    if (v5)
    {
      id v6 = objc_loadWeakRetained((id *)(a1 + 40));
      id v7 = objc_loadWeakRetained((id *)(a1 + 48));
      [v7 setupWithModel:v9 cellStyle:*(void *)(*(void *)(a1 + 32) + 32)];

      id v8 = [v6 searchResultTableView];
      [v8 reloadData];
    }
  }
}

void sub_100A81A10(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v22 = a3;
  id v5 = objc_alloc_init((Class)NSMutableArray);
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v27;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v27 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(id *)(*((void *)&v26 + 1) + 8 * (void)v10);
        if ([v11 conformsToProtocol:&OBJC_PROTOCOL___MSPHistoryEntryRoute]) {
          uint64_t v12 = v11;
        }
        else {
          uint64_t v12 = 0;
        }
        id v13 = v12;

        if (v13)
        {
          id v14 = objc_alloc(*(Class *)(a1 + 40));
          uint64_t v15 = [v13 storageIdentifier];
          uint64_t v16 = [v22 objectForKeyedSubscript:v15];
          id v17 = [v14 initWithHistoryItem:v13 recording:v16];

          [v5 addObject:v17];
        }

        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v26 objects:v30 count:16];
    }
    while (v8);
  }
  id v18 = v6;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A81C50;
  block[3] = &unk_1012E5F78;
  id v19 = *(id *)(a1 + 32);
  id v24 = v5;
  id v25 = v19;
  id v20 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100A81C50(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100A81FE8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v21 = a1;
  id v4 = a2;
  id v22 = a3;
  id v5 = objc_alloc_init((Class)NSMutableArray);
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v27;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v27 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(id *)(*((void *)&v26 + 1) + 8 * (void)v10);
        if (objc_msgSend(v11, "conformsToProtocol:", &OBJC_PROTOCOL___MSPHistoryEntryRoute, v21)) {
          uint64_t v12 = v11;
        }
        else {
          uint64_t v12 = 0;
        }
        id v13 = v12;

        if ((char *)[v13 transportType] - 6 >= (char *)0xFFFFFFFFFFFFFFFBLL && v13 != 0)
        {
          uint64_t v15 = [HistoryRAPUserDirectionRequest alloc];
          uint64_t v16 = [v13 storageIdentifier];
          id v17 = [v22 objectForKeyedSubscript:v16];
          id v18 = [(HistoryRAPUserDirectionRequest *)v15 initWithHistoryItem:v13 recording:v17];

          [v5 addObject:v18];
        }

        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v26 objects:v30 count:16];
    }
    while (v8);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A82238;
  block[3] = &unk_1012E5F78;
  id v19 = *(id *)(v21 + 32);
  id v24 = v5;
  id v25 = v19;
  id v20 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100A82238(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100A82784(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  id v22 = objc_alloc_init((Class)NSMutableArray);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id obj = v4;
  id v6 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v8) {
          objc_enumerationMutation(obj);
        }
        id v10 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        id v11 = [v10 storageIdentifier];
        uint64_t v12 = [v5 objectForKeyedSubscript:v11];

        id v13 = [v12 correctedSearchTemplate];
        if ([v13 containsReportableData])
        {
          id v14 = [[HistoryEntryRecentsItem alloc] initWithHistoryEntry:v10];
          if ([v12 hasOriginatingAuxiliaryControlIndex]) {
            uint64_t v15 = (uint64_t)[v12 originatingAuxiliaryControlIndex];
          }
          else {
            uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
          }
          uint64_t v16 = [HistoryRAPUserSearch alloc];
          id v17 = [v12 auxiliaryControls];
          id v18 = [(HistoryRAPUserSearch *)v16 initWithHistoryItem:v14 correctedSearchTemplate:v13 auxiliaryControls:v17 originatingIndex:v15];

          [v22 addObject:v18];
        }
      }
      id v7 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
    }
    while (v7);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100A82A04;
  block[3] = &unk_1012E5F78;
  id v19 = *(id *)(a1 + 32);
  id v25 = v22;
  id v26 = v19;
  id v20 = v22;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100A82A04(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id sub_100A83B44(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateGlyphAppearance];
}

id sub_100A848AC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) glyph];
  [v2 setHidden:0];

  [*(id *)(a1 + 40) removeFromSuperlayer];
  [*(id *)(a1 + 32) setAnimationLayer:0];
  id v3 = *(void **)(a1 + 32);

  return [v3 setContentLayer:0];
}

uint64_t sub_100A84914(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100A851AC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) glyph];
  [v2 setHidden:0];

  [*(id *)(a1 + 40) removeFromSuperlayer];
  [*(id *)(a1 + 32) setAnimationLayer:0];
  id v3 = *(void **)(a1 + 32);

  return [v3 setContentLayer:0];
}

uint64_t sub_100A85214(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A85AD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100A85AF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    (*(void (**)(void))(WeakRetained[1] + 16))();
    id WeakRetained = v2;
  }
}

void sub_100A86918(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) traitCollection];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 != (id)5)
  {
    id v7 = [*(id *)(a1 + 32) navigationItem];
    id v4 = [v7 searchController];
    id v5 = [v4 searchBar];
    id v6 = [v5 searchTextField];
    [v6 becomeFirstResponder];
  }
}

void sub_100A86CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A86CEC(uint64_t a1, void *a2)
{
  id v10 = [a2 firstObject];
  id v3 = objc_alloc_init(RAPSearchAutocompleteResult);
  id v4 = [*(id *)(a1 + 32) navigationItem];
  id v5 = [v4 searchController];
  id v6 = [v5 searchBar];
  id v7 = [v6 text];
  [(RAPSearchAutocompleteResult *)v3 setSearchBarText:v7];

  [(RAPSearchAutocompleteResult *)v3 setSelectedMapItem:v10];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v9 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
    [v9 rapSearchAutocompleteViewController:*(void *)(a1 + 32) finishedPickingAutocompleteResult:v3 isAutocompleteResult:1];

    [*(id *)(a1 + 32) _dismissViewController];
  }
}

id sub_100A87B1C()
{
  if (qword_101610640 != -1) {
    dispatch_once(&qword_101610640, &stru_101315DB8);
  }
  id v0 = (void *)qword_101610638;

  return v0;
}

void sub_100A889FC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFScanningInstructionLabel");
  uint64_t v2 = (void *)qword_101610638;
  qword_101610638 = (uint64_t)v1;
}

void sub_100A89318(uint64_t a1)
{
  [*(id *)(a1 + 32) timeIntervalSinceReferenceDate];
  double v3 = v2;
  id v4 = sub_100577124();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = [*(id *)(a1 + 40) debugString];
    *(_DWORD *)long long buf = 138412546;
    id v11 = v5;
    __int16 v12 = 2048;
    double v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Logging element did enter %@ with start date %f", buf, 0x16u);
  }
  id v6 = [*(id *)(a1 + 40) customData];
  id v7 = [*(id *)(a1 + 40) sessionIdentifier];
  uint64_t v8 = [v6 query];
  LODWORD(v9) = 1;
  [GEOAPPortal captureSearchResultImpressionEventWithImpressionObjectId:v7 query:v8 businessId:[v6 businessId] localSearchProviderId:[v6 localSearchProviderId] elementIndex:[v6 resultIndex] isEnriched:[v6 isEnriched] impressionEvent:v3 impressionVisibleTimestamp:0.0 impressionNonvisibleTimestamp:v9];
}

void sub_100A89598(id *a1)
{
  [a1[4] timeIntervalSinceReferenceDate];
  double v3 = v2;
  [a1[5] timeIntervalSinceReferenceDate];
  double v5 = v4;
  id v6 = sub_100577124();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = [a1[6] debugString];
    *(_DWORD *)long long buf = 138412802;
    double v13 = v7;
    __int16 v14 = 2048;
    double v15 = v3;
    __int16 v16 = 2048;
    double v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Logging element did exit %@ with start date %f, end date %f", buf, 0x20u);
  }
  uint64_t v8 = [a1[6] customData];
  uint64_t v9 = [a1[6] sessionIdentifier];
  id v10 = [v8 query];
  LODWORD(v11) = 2;
  [GEOAPPortal captureSearchResultImpressionEventWithImpressionObjectId:v9 query:v10 businessId:[v8 businessId] localSearchProviderId:[v8 localSearchProviderId] elementIndex:[v8 resultIndex] isEnriched:[v8 isEnriched] impressionEvent:v3 impressionVisibleTimestamp:v5 impressionNonvisibleTimestamp:v11];
}

uint64_t sub_100A8A578(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100A8A58C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A8A67C(id a1, NSMutableArray *a2, NSString *a3, NSString *a4)
{
  uint64_t v9 = a2;
  id v6 = a3;
  id v7 = a4;
  if ([(NSString *)v7 length])
  {
    uint64_t v8 = +[NSURLQueryItem queryItemWithName:v6 value:v7];
    [(NSMutableArray *)v9 addObject:v8];
  }
}

uint64_t sub_100A8A718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, uint64_t, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), a2, a3);
}

id sub_100A8BF2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 currencyCode];
  if (!v4 || ([*(id *)(a1 + 32) containsObject:v4] & 1) != 0) {
    goto LABEL_3;
  }
  if (([*(id *)(a1 + 40) containsObject:v4] & 1) == 0)
  {
    id v6 = +[NSLocale ISOCurrencyCodes];
    unsigned int v7 = [v6 containsObject:v4];

    if (!v7)
    {
      [*(id *)(a1 + 32) addObject:v4];
LABEL_3:
      id v5 = 0;
      goto LABEL_15;
    }
    [*(id *)(a1 + 40) addObject:v4];
  }
  uint64_t v8 = [v3 price];
  if (v8)
  {
    uint64_t v9 = +[NSString _navigation_formattedStringForPriceValueWithAmount:v8 currencyCode:v4];
    if (v9)
    {
      id v10 = [RidesharingFareLineItem alloc];
      uint64_t v11 = [v3 title];
      id v5 = [(RidesharingFareLineItem *)v10 _initWithTitle:v11 details:v9];
    }
    else
    {
      id v5 = 0;
    }
  }
  else
  {
    id v5 = 0;
  }

LABEL_15:

  return v5;
}

void sub_100A8D320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id location)
{
}

void sub_100A8D404(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 40);
    id v6 = WeakRetained;
    double v4 = [WeakRetained preferences];
    [v4 setSortOption:v3];

    id v5 = [v6 delegate];
    [v5 updatedRefinementModel:v6];

    id WeakRetained = v6;
  }
}

void sub_100A8D488(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v4 = WeakRetained;
    double v2 = [WeakRetained preferences];
    [v2 setShowICFares:1];

    void v4[4] = 3032;
    uint64_t v3 = [v4 delegate];
    [v3 updatedRefinementModel:v4];

    id WeakRetained = v4;
  }
}

void sub_100A8D510(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v4 = WeakRetained;
    double v2 = [WeakRetained preferences];
    [v2 setShowICFares:0];

    void v4[4] = 3033;
    uint64_t v3 = [v4 delegate];
    [v3 updatedRefinementModel:v4];

    id WeakRetained = v4;
  }
}

void sub_100A8D598(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v6 = WeakRetained;
    double v4 = [WeakRetained preferences];
    [v4 setSurchargeOption:v3];

    id v5 = [v6 delegate];
    [v5 updatedRefinementModel:v6];

    id WeakRetained = v6;
  }
}

id sub_100A8DE88()
{
  if (qword_101610660 != -1) {
    dispatch_once(&qword_101610660, &stru_101315FC8);
  }
  id v0 = (void *)qword_101610658;

  return v0;
}

uint64_t sub_100A8E2CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A8EB50(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Block_object_dispose((const void *)(v1 - 240), 8);
  _Unwind_Resume(a1);
}

void sub_100A8EBA8(uint64_t a1, unint64_t a2)
{
  double v4 = [*(id *)(a1 + 32) _currentInterruptionHandle];
  id v5 = *(void **)(a1 + 40);

  if (v4 == v5) {
    [*(id *)(a1 + 32) _setCurrentInterruptionHandle:0];
  }
  uint64_t v6 = *(void *)(*(void *)(a1 + 80) + 8);
  if (!*(unsigned char *)(v6 + 24))
  {
    *(unsigned char *)(v6 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    if ([*(id *)(a1 + 48) count] && (unint64_t)objc_msgSend(*(id *)(a1 + 48), "count") > a2)
    {
      unsigned int v7 = [*(id *)(a1 + 48) objectAtIndexedSubscript:a2];
      [v7 fire];
    }
    uint64_t v8 = *(void *)(a1 + 72);
    if (v8) {
      (*(void (**)(uint64_t, unint64_t))(v8 + 16))(v8, a2);
    }
    [*(id *)(a1 + 56) setDismissalBlock:0];
    uint64_t v9 = *(void **)(a1 + 64);
    [v9 setDismissalBlock:0];
  }
}

void sub_100A8EC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = [*(id *)(a1 + 32) dismissalBlock];
  double v4 = [*(id *)(a1 + 40) dismissalBlock];
  if (v8) {
    v8[2](v8, a2);
  }
  if (v4) {
    v4[2](v4, a2);
  }
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, qword_1015F38F8);
    uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
    unsigned int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = 0;
  }
}

void sub_100A8ED70(uint64_t a1, uint64_t a2)
{
  double v4 = [*(id *)(a1 + 32) dismissalBlock];
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t v8 = v4;
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, a2);
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    unsigned int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = 0;

    double v4 = v8;
  }
  if (v4)
  {
    v4[2](v4, 1);
    double v4 = v8;
  }
}

void sub_100A8EE14(uint64_t a1, uint64_t a2)
{
  double v4 = [*(id *)(a1 + 32) dismissalBlock];
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t v8 = v4;
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, a2);
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    unsigned int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = 0;

    double v4 = v8;
  }
  if (v4)
  {
    v4[2](v4, 1);
    double v4 = v8;
  }
}

void sub_100A8F048(uint64_t a1)
{
}

uint64_t sub_100A8F1B4(uint64_t a1)
{
  double v2 = +[MKLocationManager sharedLocationManager];
  [v2 isLocationServicesApproved];

  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    double v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_100A8F8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A8F91C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _cleanupAfterLocationServicesAlertController];

  if (*(_DWORD *)(a1 + 48))
  {
    uint64_t v3 = +[MKMapService sharedService];
    [v3 captureUserAction:62 onTarget:*(unsigned int *)(a1 + 48) eventValue:0];
  }
  [*(id *)(a1 + 32) _mapkit_locationErrorSettingsURL];
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  double v4 = +[UIApplication sharedApplication];
  [v4 _maps_openURL:v5 options:0 completionHandler:0];
}

void sub_100A8F9D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _cleanupAfterLocationServicesAlertController];

  if (*(_DWORD *)(a1 + 40))
  {
    id v3 = +[MKMapService sharedService];
    [v3 captureUserAction:59 onTarget:*(unsigned int *)(a1 + 40) eventValue:0];
  }
}

void sub_100A8FE14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_100A8FE60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _cleanupAfterLocationServicesAlertController];

  id v2 = +[MKLocationManager sharedLocationManager];
  [v2 requestTemporaryPreciseLocationAuthorizationWithPurposeKey:@"AppInfoTemporaryPreciseLocationAuthorizationForMapBrowsingPurposeKey" completion:0];
}

void sub_100A8FED4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _cleanupAfterLocationServicesAlertController];

  if (*(_DWORD *)(a1 + 48))
  {
    id v3 = +[MKMapService sharedService];
    [v3 captureUserAction:62 onTarget:*(unsigned int *)(a1 + 48) eventValue:0];
  }
  [*(id *)(a1 + 32) _mapkit_locationErrorSettingsURL];
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  double v4 = +[UIApplication sharedApplication];
  [v4 _maps_openURL:v5];
}

void sub_100A8FF8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _cleanupAfterLocationServicesAlertController];

  if (*(_DWORD *)(a1 + 40))
  {
    id v3 = +[MKMapService sharedService];
    [v3 captureUserAction:59 onTarget:*(unsigned int *)(a1 + 40) eventValue:0];
  }
}

void sub_100A900A0(uint64_t a1)
{
  id v11 = +[NSUserDefaults standardUserDefaults];
  if (([v11 BOOLForKey:@"HasShownNavModeAdvisory2020"] & 1) == 0)
  {
    id v2 = +[UIApplication sharedMapsDelegate];
    [v2 interruptApplicationWithKind:1 userInfo:0 completionHandler:0];

    [v11 setBool:1 forKey:@"HasShownNavModeAdvisory2020"];
    [v11 synchronize];
    id v3 = objc_opt_new();
    double v4 = +[NSSet setWithObject:@"HasShownNavModeAdvisory2020"];
    [v3 synchronizeUserDefaultsDomain:@"com.apple.Maps" keys:v4 container:@"com.apple.Maps"];

    id v5 = +[IPCServer sharedServer];
    [v5 setNeedsToDisplaySafetyWarning];

    uint64_t v6 = [*(id *)(a1 + 32) platformController];
    unsigned int v7 = [v6 currentSession];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    id v9 = v8;

    if (v9)
    {
      id v10 = [v9 navigationStateMonitoringTask];
      [v10 cancelNavigationAutoLaunchIfNeccessary];
    }
  }
}

void *sub_100A90688(void *result, uint64_t a2)
{
  if (a2 == 1) {
    return +[MapsSavedRoutesManager deleteRouteStorageID:result[4] completion:0];
  }
  return result;
}

void sub_100A91118(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsInterruptionDisplay");
  id v2 = (void *)qword_101610658;
  qword_101610658 = (uint64_t)v1;
}

void sub_100A9115C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = GEOFindOrCreateLog();
  id v3 = v2;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      LOWORD(v_Block_object_dispose(&STACK[0x7A0], 8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Executing _updateRideBookingRideStatuses because a cancellation triggered this", (uint8_t *)&v8, 2u);
    }

    double v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Suggestions/MapsSuggestionsRidesharingSource.m");
      id v6 = [objc_alloc((Class)NSString) initWithFormat:@"Force-Executing _updateRideBookingRideStatuses from MSgRideSharingSource because a cancellation triggered this"];
      int v8 = 136315394;
      id v9 = v5;
      __int16 v10 = 2112;
      v11[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", (uint8_t *)&v8, 0x16u);
    }
    sub_10007A190(WeakRetained);
  }
  else
  {
    unsigned int v7 = v2;
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136446722;
      id v9 = "MapsSuggestionsRidesharingSource.m";
      __int16 v10 = 1026;
      LODWORD(v11[0]) = 72;
      WORD2(v11[0]) = 2082;
      *(void *)((char *)v11 + 6) = "-[MapsSuggestionsRidesharingSource initFromResourceDepot:name:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v8, 0x1Cu);
    }
  }
}

void sub_100A9140C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100A91420(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained addOrUpdateMySuggestionEntries:&__NSArray0__struct];
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4) {
      (*(void (**)(void))(v4 + 16))();
    }
    id v5 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      id v6 = [v3 uniqueName];
      int v8 = 138412546;
      id v9 = v6;
      __int16 v10 = 2080;
      v11[0] = "updateSuggestionEntries";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v8, 0x16u);
    }
    unsigned int v7 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v7))
    {
      LOWORD(v_Block_object_dispose(&STACK[0x7A0], 8) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "updateSuggestionEntries", "", (uint8_t *)&v8, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    unsigned int v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136446722;
      id v9 = "MapsSuggestionsRidesharingSource.m";
      __int16 v10 = 1026;
      LODWORD(v11[0]) = 144;
      WORD2(v11[0]) = 2082;
      *(void *)((char *)v11 + 6) = "-[MapsSuggestionsRidesharingSource updateSuggestionEntriesWithHandler:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v8, 0x1Cu);
    }
  }
}

void sub_100A9163C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained addOrUpdateMySuggestionEntries:&__NSArray0__struct];
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4) {
      (*(void (**)(void))(v4 + 16))();
    }
    id v5 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      id v6 = [v3 uniqueName];
      int v8 = 138412546;
      id v9 = v6;
      __int16 v10 = 2080;
      v11[0] = "updateSuggestionEntries";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v8, 0x16u);
    }
    unsigned int v7 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v7))
    {
      LOWORD(v_Block_object_dispose(&STACK[0x7A0], 8) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "updateSuggestionEntries", "", (uint8_t *)&v8, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    unsigned int v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136446722;
      id v9 = "MapsSuggestionsRidesharingSource.m";
      __int16 v10 = 1026;
      LODWORD(v11[0]) = 149;
      WORD2(v11[0]) = 2082;
      *(void *)((char *)v11 + 6) = "-[MapsSuggestionsRidesharingSource updateSuggestionEntriesWithHandler:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v8, 0x1Cu);
    }
  }
}

id sub_100A9243C()
{
  return +[UIFont system17];
}

id sub_100A92448()
{
  return +[UIFont system15];
}

UIImageSymbolConfiguration *sub_100A92454()
{
  return +[UIImageSymbolConfiguration configurationWithPointSize:4 weight:2 scale:15.0];
}

id sub_100A9246C()
{
  id v0 = +[UIImageSymbolConfiguration configurationWithPointSize:7 weight:1 scale:15.0];
  os_log_t v1 = +[UIImage systemImageNamed:@"chevron.forward" withConfiguration:v0];

  return v1;
}

UIColor *sub_100A924E4()
{
  return +[UIColor tertiaryLabelColor];
}

UIColor *sub_100A924F0()
{
  return +[UIColor whiteColor];
}

id sub_100A92A40(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v2 identifierCache];
  id v5 = [v4 identifierForObject:v3];

  return v5;
}

MapsUIDiffableDataSourceViewModel *__cdecl sub_100A92AAC(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return (MapsUIDiffableDataSourceViewModel *)a2;
}

NSArray *__cdecl sub_100A92AB4(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return (NSArray *)&__NSArray0__struct;
}

BOOL sub_100A92AC0(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return 0;
}

void sub_100A93A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100A93A7C(uint64_t a1, uint64_t a2)
{
  id obj = 0;
  +[SearchResult newStartWaypointSearchResult:0 endWaypointSearchResult:&obj forRouteHistoryEntry:a2];
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), obj);
}

void sub_100A93AD4(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 geoMapItem];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_100A953BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) drawAtPoint:CGPointZero.x, CGPointZero.y];
}

id sub_100A953D0(uint64_t a1)
{
  [*(id *)(a1 + 32) drawAtPoint:CGPointZero.x, CGPointZero.y];
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  uint64_t v4 = *(void **)(a1 + 40);
  [*(id *)(a1 + 32) size];
  double v6 = v5 - *(double *)(a1 + 48);
  [*(id *)(a1 + 32) size];
  double v8 = v7 - *(double *)(a1 + 56);

  return [v4 drawInRect:v2, v3, v6, v8];
}

void sub_100A95458(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v5 = [v2 layer];
  id v4 = [v3 CGContext];

  [v5 renderInContext:v4];
}

id sub_100A954C8(uint64_t a1)
{
  [*(id *)(a1 + 32) drawAtPoint:CGPointZero.x, CGPointZero.y];
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  id v4 = *(void **)(a1 + 40);
  double v5 = *(double *)(a1 + 64);

  return [v4 drawInRect:v2, v3, v5, v5];
}

UIFont *__cdecl sub_100A95988(id a1)
{
  return (UIFont *)+[UIFont _mapkit_preferredFontForTextStyleInTableViewCell:UIFontTextStyleBody addingSymbolicTraits:0];
}

BOOL sub_100A964F4(id a1, CollectionHandler *a2, unint64_t a3, BOOL *a4)
{
  return ![(CollectionHandler *)a2 loadingData];
}

void sub_100A97640(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [*(id *)(*(void *)(a1 + 32) + 8) offlineMapProviderUpdated:WeakRetained];
    id WeakRetained = v3;
  }
}

void sub_100A97714(id a1)
{
  os_log_t v1 = (void *)qword_101610670;
  qword_101610670 = (uint64_t)&off_1013AE5C8;
}

void sub_100A986D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [a3 copy];
  [v3 addObject:v4];
}

id sub_100A9872C(uint64_t a1)
{
  return [*(id *)(a1 + 32) updatePreferredContentSize];
}

void sub_100A9895C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100A98978(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 artwork];
  id v4 = +[UIImage _mapkit_transitArtworkImageWithDataSource:v3 size:*(void *)(a1 + 48) scale:*(double *)(a1 + 56)];

  if (v4)
  {
    double v5 = *(void **)(a1 + 32);
    double v6 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [v13 muid]);
    [v5 setObject:v4 forKeyedSubscript:v6];
  }
  double v7 = *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  [v4 size];
  double v8 = MKTransitArtworkIncidentBadgeTrailingOffset;
  if (v7 <= v9 + MKTransitArtworkIncidentBadgeTrailingOffset)
  {
    [v4 size];
    double v11 = v8 + v12;
    uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  }
  else
  {
    uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
    double v11 = *(double *)(v10 + 24);
  }
  *(double *)(v10 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v11;
}

void sub_100A98A98(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v18 = v3;
  double v5 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [v3 muid]);
  double v6 = [v4 objectForKeyedSubscript:v5];

  if (!v6)
  {
    double v7 = [v18 artwork];
    unsigned int v8 = [v7 hasRoutingIncidentBadge];

    double v9 = *(void **)(a1 + 32);
    uint64_t v10 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [v18 muid]);
    double v11 = [v9 objectForKeyedSubscript:v10];
    double v12 = *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    if (v8)
    {
      id v13 = MKTransitIncidentIcon();
    }
    else
    {
      id v13 = 0;
    }
    __int16 v14 = +[UIImage _compositeImageFromImage:paddedToWidth:badge:badgeOffset:](UIImage, "_compositeImageFromImage:paddedToWidth:badge:badgeOffset:", v11, v13, v12, MKTransitArtworkIncidentBadgeTrailingOffset, MKTransitArtworkIncidentBadgeBottomOffset);
    double v15 = [v14 imageWithRenderingMode:1];

    if (v8) {
    __int16 v16 = *(void **)(a1 + 32);
    }
    double v17 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [v18 muid]);
    [v16 setObject:v15 forKeyedSubscript:v17];
  }
}

void sub_100A99C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A99CEC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) setIssueType:[*(id *)(a1 + 40) type]];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _invokeCompletionHandlerWithShouldSubmit:1];
}

void sub_100A99D54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _invokeCompletionHandlerWithShouldSubmit:0];
}

void sub_100A9ABE4(uint64_t a1)
{
  if (qword_101610688 != -1) {
    dispatch_once(&qword_101610688, &stru_101316288);
  }
  double v2 = (id)qword_101610680;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      unsigned int v8 = @"<nil>";
      goto LABEL_12;
    }
    id v4 = (objc_class *)objc_opt_class();
    double v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      double v6 = [v3 performSelector:"accessibilityIdentifier"];
      double v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        unsigned int v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_10;
      }
    }
    unsigned int v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_10:

LABEL_12:
    double v9 = *(void **)(*(void *)(a1 + 32) + 16);
    uint64_t v10 = v8;
    double v11 = [v9 window];
    double v12 = [v11 recursiveDescription];
    *(_DWORD *)long long buf = 138543874;
    __int16 v14 = v8;
    __int16 v15 = 2112;
    __int16 v16 = v9;
    __int16 v17 = 2112;
    id v18 = v12;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "[%{public}@] Detected eta label is truncated (%@): %@", buf, 0x20u);
  }
}

void sub_100A9B240(_Unwind_Exception *a1)
{
  sub_10077F920(v1);
  _Unwind_Resume(a1);
}

void sub_100A9B528(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarMapWidgetETACardViewController");
  double v2 = (void *)qword_101610680;
  qword_101610680 = (uint64_t)v1;
}

id sub_100A9C5D4(uint64_t a1)
{
  double v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"locationManagerApprovalDidChange:" name:MKLocationManagerApprovalDidChangeNotification object:0];

  id v3 = [*(id *)(a1 + 32) shortcutsCardController];
  [v3 setExpanded:0];

  id v4 = *(void **)(a1 + 32);

  return [v4 _offerVehicleDisambiguationIfNeeded];
}

void sub_100A9C660(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56)
    && (+[NSNotificationCenter defaultCenter],
        double v2 = objc_claimAutoreleasedReturnValue(),
        [v2 postNotificationName:@"MapsTestingDidEndGuidanceOrStepping" object:*(void *)(a1 + 32)], v2, *(unsigned char *)(a1 + 56))|| *(unsigned char *)(a1 + 57))
  {
    [*(id *)(a1 + 40) invalidate];
    id v3 = [*(id *)(a1 + 32) carChromeViewController];
    id v14 = [v3 defaultMapSettings];

    if (![v14 trackingMode])
    {
      id v4 = [*(id *)(a1 + 32) chromeViewController];
      double v5 = [v4 navigationDisplay];
      double v6 = [v5 configuration];
      if ([v6 cameraStyle] == (id)2) {
        uint64_t v7 = 1;
      }
      else {
        uint64_t v7 = 2;
      }

      [v14 setTrackingMode:v7];
    }
    [v14 zoomLevel];
    if (v8 < 19.0) {
      [v14 zoomLevel];
    }
    [v14 setZoomLevel:];
    [v14 applyToMapViewAnimated:*(unsigned __int8 *)(a1 + 58) duration:0 completion:-1.0];
  }
  else
  {
    if (*(void *)(a1 + 48))
    {
      int v9 = *(unsigned __int8 *)(a1 + 59);
      uint64_t v10 = [*(id *)(a1 + 32) carChromeViewController];
      double v11 = [v10 defaultMapSettings];
      double v12 = v11;
      if (v9) {
        [v11 readFromMapView];
      }
      else {
        [v11 applyToMapViewAnimated:*(unsigned __int8 *)(a1 + 58) duration:0 completion:-1.0];
      }
    }
    id v13 = *(void **)(a1 + 32);
    _[v13 setInitialTrackingIfNeededAndPossible];
  }
}

void sub_100A9D998(id a1, id a2, id a3)
{
}

void sub_100A9DEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A9DF78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  double v6 = [a2 selectedValue];
  [v5 setSelectedValue:v6];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _instrumentSelectingRoute];
}

void sub_100A9DFFC(uint64_t a1, void *a2)
{
  double v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained proceedToNextQuestion:v3];
}

void sub_100A9E058(uint64_t a1, void *a2)
{
  double v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained proceedToNextQuestion:v3];
}

void sub_100A9E838(id a1, id a2, RAPReportComposerBadRouteSuggestionSection *a3)
{
}

void sub_100A9EA88(id a1, id a2, RAPReportComposerDirectionsSubcategorySection *a3)
{
}

void sub_100A9FBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100A9FBC8(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setComposedWaypoint:v10];

  uint64_t v7 = [v10 geoMapItem];

  if (v7)
  {
    double v8 = [v10 geoMapItem];
    id v9 = objc_loadWeakRetained((id *)(a1 + 40));
    [v9 setGeoMapItem:v8];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100A9FC9C(uint64_t a1)
{
  CFStringRef v9 = @"waypointInfo";
  double v2 = [*(id *)(a1 + 32) description];
  id v10 = v2;
  id v3 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
  id v4 = [v3 objectForKeyedSubscript:NSLocalizedDescriptionKey];

  id v5 = v3;
  if (!v4)
  {
    double v6 = sub_100A34534(4);
    id v5 = v3;
    if (v6)
    {
      id v7 = [objc_alloc((Class)NSMutableDictionary) initWithDictionary:v3];
      [v7 setObject:v6 forKeyedSubscript:NSLocalizedDescriptionKey];
      id v5 = [v7 copy];
    }
  }
  double v8 = +[NSError errorWithDomain:@"NanoRoutePlanningSession" code:4 userInfo:v5];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id *sub_100AA0538(id *result, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return (id *)[result[4] addObject:a2];
  }
  return result;
}

void sub_100AA0840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_100AA1AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

id sub_100AA286C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];
  id v5 = [v4 applicationRecord];

  id v6 = [v5 localizedName];
  if (!v6)
  {
    id v7 = sub_1005761B4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)CFStringRef v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to get partner app name. Using bundle ID instead", v9, 2u);
    }

    id v6 = v3;
  }

  return v6;
}

void sub_100AA383C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AA3858(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateLastUpdatedLabel];
    id WeakRetained = v2;
  }
}

id sub_100AA3F08()
{
  if (qword_101610698 != -1) {
    dispatch_once(&qword_101610698, &stru_101316430);
  }
  id v0 = (void *)qword_101610690;

  return v0;
}

void sub_100AA3F5C(uint64_t a1)
{
  id v2 = sub_100AA3F08();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 134349056;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Lens position has been locked", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100AA4004(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ARSessionPedestrianAR");
  id v2 = (void *)qword_101610690;
  qword_101610690 = (uint64_t)v1;
}

void sub_100AA413C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) cardPresentationController];
  [v2 sheetContentSize];
  [*(id *)(a1 + 32) setPreferredContentSize:];

  uint64_t v3 = *(void **)(a1 + 32);
  int v4 = [v3 cardPresentationController];
  [v4 contentAlpha];
  [v3 applyAlphaToContent:];

  id v5 = [*(id *)(a1 + 32) cardPresentationController];
  [v5 updateDimmingBehavior];
}

void sub_100AA4B5C(uint64_t a1)
{
  id v8 = [*(id *)(a1 + 32) mapView];
  *(unsigned char *)(*(void *)(a1 + 40) + _Block_object_dispose(&STACK[0x7A0], 8) = [v8 showsCompass];
  *(unsigned char *)(*(void *)(a1 + 40) + 9) = [v8 showsScale];
  *(unsigned char *)(*(void *)(a1 + 40) + 10) = [v8 showsUserLocation];
  [v8 setPitchEnabled:1];
  [v8 setZoomEnabled:1];
  [v8 setScrollEnabled:1];
  [v8 setShowsCompass:0];
  [v8 setShowsScale:0];
  [v8 setShowsUserLocation:0];
  [v8 _deselectLabelMarkerAnimated:0];
  id v2 = *(id *)(*(void *)(a1 + 40) + 16);
  uint64_t v3 = +[VKPlatform sharedPlatform];
  if ([v3 supportsARMode])
  {
    int v4 = [v8 _mapLayer];
    unsigned __int8 v5 = [v4 isFlyoverUnificationEnabled];

    if ((v5 & 1) == 0)
    {
      [v8 _enterARModeWithLocation:v2];
      goto LABEL_6;
    }
  }
  else
  {
  }
  id v6 = [v2 _flyover];
  [v8 _performFlyoverAnimation:v6];

  id v7 = [v8 _mapLayer];
  [v7 setFlyoverMode:1];

LABEL_6:
}

void sub_100AA4D6C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) actionCoordinator];
  unsigned int v3 = [v2 isFlyoverRunning];

  if (v3)
  {
    int v4 = [*(id *)(a1 + 32) actionCoordinator];
    [v4 viewControllerEndFlyover:*(void *)(*(void *)(a1 + 32) + 32)];
  }
  id v5 = [*(id *)(a1 + 40) mapView];
  [v5 setShowsCompass:*(unsigned __int8 *)(*(void *)(a1 + 32) + 8)];
  [v5 setShowsScale:*(unsigned __int8 *)(*(void *)(a1 + 32) + 9)];
  [v5 setShowsUserLocation:*(unsigned __int8 *)(*(void *)(a1 + 32) + 10)];
}

id sub_100AA60F8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v7 = a2;
  id v8 = (objc_class *)objc_opt_class();
  CFStringRef v9 = NSStringFromClass(v8);
  id v10 = [v5 dequeueReusableSupplementaryViewOfKind:v6 withReuseIdentifier:v9 forIndexPath:*(void *)(a1 + 48)];

  double v11 = [v10 textLabel];
  [v11 setText:v7];

  [v10 setFooter:a3];
  id v12 = [v7 length];

  if (v12)
  {
    BOOL v13 = 0;
  }
  else
  {
    id v14 = (char *)[*(id *)(a1 + 32) numberOfSections];
    BOOL v13 = v14 != (char *)[*(id *)(a1 + 48) section] + 1;
  }
  [v10 setHidden:v13];

  return v10;
}

id sub_100AA6378()
{
  if (qword_1016106A8 != -1) {
    dispatch_once(&qword_1016106A8, &stru_1013164A0);
  }
  id v0 = (void *)qword_1016106A0;

  return v0;
}

uint64_t sub_100AA662C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void *))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), &__NSArray0__struct);
}

void sub_100AA6648(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) cachedTrafficFeaturesForRoute:*(void *)(a1 + 40)];
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100AA6750;
    block[3] = &unk_1012EF330;
    unsigned int v3 = *(NSObject **)(a1 + 48);
    id v10 = *(id *)(a1 + 56);
    id v8 = *(id *)(a1 + 40);
    id v9 = v2;
    dispatch_async(v3, block);
  }
  else
  {
    int v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = [[_RouteTrafficFeatureCalculatorCompletionStructure alloc] initWithQueue:*(void *)(a1 + 48) handler:*(void *)(a1 + 56)];
    [v4 _startCalculationTaskForRoute:v5 completion:v6];
  }
}

uint64_t sub_100AA6750(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100AA6768(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        if ([v8 trafficFeatureType] == (id)3) {
          [*(id *)(a1 + 32) addObject:v8];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v5);
  }
}

void sub_100AA6874(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v2);
}

void sub_100AA7058(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) completionHandler];
  (*((void (**)(id, void, void))v2 + 2))(v2, *(void *)(a1 + 40), *(void *)(a1 + 48));
}

void sub_100AA723C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RouteTrafficFeatureCalculator");
  id v2 = (void *)qword_1016106A0;
  qword_1016106A0 = (uint64_t)v1;
}

id sub_100AA73E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

void sub_100AA9C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100AA9C38(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 name];
  unsigned int v4 = [v3 isEqualToString:@"address"];

  if (v4) {
    [*(id *)(a1 + 32) removeObject:v7];
  }
  id v5 = [v7 name];
  unsigned int v6 = [v5 isEqualToString:@"ll"];

  if (v6) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
}

void sub_100AAB740(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchResult");
  id v2 = (void *)qword_1016106B0;
  qword_1016106B0 = (uint64_t)v1;
}

UIFont *__cdecl sub_100AAB784(id a1)
{
  os_log_t v1 = +[MKFontManager sharedManager];
  id v2 = [v1 subtitleFont];
  id v3 = +[UIFont _maps_cappedFont:v2 withMaxPoint:30.0];

  return (UIFont *)v3;
}

id sub_100AACD68(uint64_t a1)
{
  uint64_t v3 = a1 + 32;
  id v2 = *(void **)(a1 + 32);
  double v4 = 1.0;
  if (!*(void *)(v3 + 8)) {
    double v4 = 0.0;
  }
  [v2 setAlpha:v4];
  id v5 = *(void **)(a1 + 32);
  if (*(void *)(a1 + 40)) {
    CFStringRef v6 = *(const __CFString **)(a1 + 40);
  }
  else {
    CFStringRef v6 = &stru_101324E70;
  }

  return [v5 setText:v6];
}

id sub_100AAD70C(uint64_t a1)
{
  [*(id *)(a1 + 32) frame];
  [*(id *)(a1 + 32) setFrame:0.0, 0.0, 160.0];
  double v2 = *(double *)(a1 + 40);
  double v3 = *(double *)(a1 + 48);
  double v4 = *(void **)(a1 + 32);

  return [v4 setCenter:v2, v3];
}

id sub_100AADC0C(id *a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100AADD0C;
  _OWORD v5[3] = &unk_1012E5D08;
  id v6 = a1[4];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_100AADDD8;
  void v4[3] = &unk_1012E7D28;
  void v4[4] = v6;
  +[UIView animateWithDuration:v5 animations:v4 completion:0.3];
  [a1[5] stopAnimating];
  [a1[5] removeFromSuperview];
  double v2 = [a1[4] parentController];
  [v2 rebuildSections];

  return [a1[6] clearDefaultRecorder];
}

void sub_100AADD0C(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  [*(id *)(a1 + 32) center];
  double v3 = v2;
  [*(id *)(a1 + 32) center];
  double v5 = v4;
  [*(id *)(a1 + 32) frame];
  [*(id *)(a1 + 32) setFrame:0.0, 0.0, 40.0];
  [*(id *)(a1 + 32) setCenter:v3, v5];
  id v6 = [*(id *)(a1 + 32) mapIcon];
  [v6 setAlpha:0.0];

  id v7 = [*(id *)(a1 + 32) redView];
  [v7 setAlpha:0.0];
}

id sub_100AADDD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_100AAE490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AAE4D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _addPhotosUsingSourceType:1];
    id WeakRetained = v2;
  }
}

void sub_100AAE520(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _addPhotosUsingSourceType:2];
    id WeakRetained = v2;
  }
}

void sub_100AAE568(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _addPhotosUsingSourceType:2];
    id WeakRetained = v2;
  }
}

void sub_100AAF0B8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    sub_1008263F8();
  }
  else {
    sub_100826494();
  }
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(*(void *)(a1 + 32) + 72) setOverlayColor:v2];
}

void sub_100AB06BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  objc_destroyWeak(v20);
  _Block_object_dispose(&a20, 8);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v21 - 136));
  _Unwind_Resume(a1);
}

void sub_100AB0708(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _deleteContact:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100AB075C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    double v4 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    if (v4) {
      [v4 setImage:v5];
    }
    else {
      [WeakRetained _updateImage:v5 forContact:*(void *)(a1 + 32)];
    }
  }
}

void sub_100AB0A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AB0A48(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _addContact:v5];
  }
}

id sub_100AB11D4()
{
  if (qword_1016106C8 != -1) {
    dispatch_once(&qword_1016106C8, &stru_101316580);
  }
  id v0 = (void *)qword_1016106C0;

  return v0;
}

id sub_100AB1E44(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 groupIdentifier];
  id v7 = [v6 isEqualToString:*(void *)(*(void *)(a1 + 32) + 8)];

  if (v7) {
    *a4 = 1;
  }
  return v7;
}

void sub_100AB2038(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SharedTripsContext");
  id v2 = (void *)qword_1016106C0;
  qword_1016106C0 = (uint64_t)v1;
}

void sub_100AB21F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100AB2208(uint64_t a1, _DWORD *a2)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v5 = [*(id *)(a1 + 32) count];
  if (v4 < (unint64_t)v5)
  {
    id v6 = [*(id *)(a1 + 32) objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    *a2 = [v6 intValue];

    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return v4 < (unint64_t)v5;
}

void sub_100AB243C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100AB2470(uint64_t a1, _DWORD *a2)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v5 = [*(id *)(a1 + 32) count];
  if (v4 < (unint64_t)v5)
  {
    id v6 = [*(id *)(a1 + 32) objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    *a2 = [v6 intValue];

    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return v4 < (unint64_t)v5;
}

void sub_100AB2B34(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_100AB2B7C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unint64_t v4 = WeakRetained;
    [WeakRetained _captureUserAction:2146];
    id v3 = objc_loadWeakRetained(v4 + 4);
    [v3 photoOptionsPickerDidSelectTakePhoto:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

void sub_100AB2BEC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unint64_t v4 = WeakRetained;
    [WeakRetained _captureUserAction:2145];
    id v3 = objc_loadWeakRetained(v4 + 4);
    [v3 photoOptionsPickerDidSelectAddFromLibrary:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

void sub_100AB2C5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    [WeakRetained _captureUserAction:2134];
    id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 32));
    [v3 photoOptionsPickerDidCancel:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

void sub_100AB323C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AB3260(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = (id *)(a1 + 32);
    id v3 = a2;
    id WeakRetained = objc_loadWeakRetained(v2);
    [WeakRetained setPublisherImage:v3];

    [WeakRetained notifyObserversInfoUpdated];
  }
}

uint64_t sub_100AB372C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_100AB38E4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = objc_alloc_init((Class)NSMutableArray);
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v11 = v8;
  id v12 = [v11 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v20;
    do
    {
      __int16 v15 = 0;
      do
      {
        if (*(void *)v20 != v14) {
          objc_enumerationMutation(v11);
        }
        __int16 v16 = [*(id *)(*((void *)&v19 + 1) + 8 * (void)v15) mapItem:v19];
        [v10 addObject:v16];

        __int16 v15 = (char *)v15 + 1;
      }
      while (v13 != v15);
      id v13 = [v11 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v13);
  }

  uint64_t v17 = *(void *)(a1 + 32);
  if (v17)
  {
    id v18 = [v10 copy];
    (*(void (**)(uint64_t, id, id, id))(v17 + 16))(v17, v7, v18, v9);
  }
}

void sub_100AB3AC0(id a1)
{
  id v3 = +[NSBundle mainBundle];
  uint64_t v1 = [v3 localizedStringForKey:@" · [List view details separator]" value:@"localized string not found" table:0];
  uint64_t v2 = (void *)qword_1016106D0;
  qword_1016106D0 = v1;
}

void sub_100AB413C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_100AB4268(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleNotifyCallback];
}

void sub_100AB450C(uint64_t a1)
{
  uint64_t v2 = sub_10009D894();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v7 = 138412546;
    uint64_t v8 = v3;
    __int16 v9 = 2112;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Remove mitigation observer: %@ for mitigation: %@", (uint8_t *)&v7, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = [WeakRetained _observersOfMitigationNamed:*(void *)(a1 + 40)];
  [v6 unregisterObserver:*(void *)(a1 + 32)];
}

id sub_100AB470C(uint64_t a1)
{
  uint64_t v2 = sub_10009D894();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Remove thermal pressure observer: %@", (uint8_t *)&v5, 0xCu);
  }

  return [*(id *)(*(void *)(a1 + 40) + 16) unregisterObserver:*(void *)(a1 + 32)];
}

void sub_100AB4938(uint64_t a1)
{
  uint64_t v2 = sub_10009D894();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Mitigation changed: %@", (uint8_t *)&v5, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateObserversOfMitigationNamed:*(void *)(a1 + 32)];
}

void sub_100AB5094(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  unint64_t v8 = a3;
  unint64_t v9 = a4;
  if (v8 | v9)
  {
    uint64_t v10 = *(void **)(a1 + 32);
    if (v10)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100AB52B8;
      block[3] = &unk_1012EF330;
      id v11 = &v24;
      id v24 = v10;
      id v22 = (id)v8;
      id v23 = (id)v9;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      id v12 = v22;
LABEL_6:

LABEL_7:
    }
  }
  else
  {
    if (v7)
    {
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      void v15[2] = sub_100AB534C;
      v15[3] = &unk_1012E5F78;
      id v11 = &v17;
      id v17 = *(id *)(a1 + 40);
      id v16 = v7;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v15);
      id v12 = v16;
      goto LABEL_6;
    }
    id v13 = sub_10000AF10();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "No route or error returned", buf, 2u);
    }

    uint64_t v14 = *(void **)(a1 + 32);
    if (v14)
    {
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_100AB52D0;
      id v18[3] = &unk_1012E6EA8;
      id v11 = &v19;
      id v19 = v14;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v18);
      goto LABEL_7;
    }
  }
}

uint64_t sub_100AB52B8(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100AB52D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[NSError errorWithDomain:MNErrorDomain code:2 userInfo:0];
  (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v2, 0);
}

uint64_t sub_100AB534C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100AB5784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100AB57A8()
{
  if (qword_101610718 != -1) {
    dispatch_once(&qword_101610718, &stru_1013166D8);
  }
  id v0 = (void *)qword_101610710;

  return v0;
}

void sub_100AB57FC(uint64_t a1)
{
  id v2 = sub_100AB57A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "VLF localization freshness period passed; unsetting hasVLFSessionLocalized flag",
      v6,
      2u);
  }

  uint64_t v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained setHasVLFLocalizedRecently:0];

  id v5 = objc_loadWeakRetained(v3);
  [v5 setVlfLocalizationFreshnessTimer:0];
}

void sub_100AB5A24(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionAnalyticsTracker");
  id v2 = (void *)qword_101610710;
  qword_101610710 = (uint64_t)v1;
}

UIColor *__cdecl sub_100AB6D30(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)2) {
    +[UIColor secondarySystemGroupedBackgroundColor];
  }
  else {
  id v2 = +[UIColor systemWhiteColor];
  }

  return (UIColor *)v2;
}

double sub_100AB6D84(id a1, double result, NSArray *a3)
{
  if (result < 48.0) {
    return 48.0;
  }
  return result;
}

UIColor *__cdecl sub_100AB6D98(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)2) {
    +[UIColor systemWhiteColor];
  }
  else {
  id v2 = +[UIColor systemBlueColor];
  }

  return (UIColor *)v2;
}

void sub_100AB6FD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100AB6FFC(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100AB70B0;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_100AB70B0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    dispatch_time_t v2 = WeakRetained;
    [WeakRetained[14] setEnabled:1];
    id WeakRetained = v2;
  }
}

void sub_100AB71D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100AB71F4(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100AB72A8;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_100AB72A8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    dispatch_time_t v2 = WeakRetained;
    [WeakRetained[14] setEnabled:1];
    id WeakRetained = v2;
  }
}

id sub_100AB7F4C(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  [v3 setObject:*(void *)(a1 + 32) forKeyedSubscript:NSFontAttributeName];
  id v4 = [v3 copy];

  return v4;
}

void sub_100AB82F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AB8320(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v4 && WeakRetained) {
    [WeakRetained _updateDirectionsButtonWithSuggestedMode:[*(id *)(a1 + 32) suggestedNavigationModeForLocation:v4 context:1 ignoreDeviceNavigability:0]];
  }
}

void sub_100AB90E4(id a1)
{
  v3[0] = UIContentSizeCategoryUnspecified;
  v3[1] = UIContentSizeCategoryExtraSmall;
  v3[2] = UIContentSizeCategorySmall;
  v3[3] = UIContentSizeCategoryMedium;
  void v3[4] = UIContentSizeCategoryLarge;
  void v3[5] = UIContentSizeCategoryExtraLarge;
  v3[6] = UIContentSizeCategoryExtraExtraLarge;
  v3[7] = UIContentSizeCategoryExtraExtraExtraLarge;
  v3[8] = UIContentSizeCategoryAccessibilityMedium;
  v3[9] = UIContentSizeCategoryAccessibilityLarge;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:10];
  dispatch_time_t v2 = (void *)qword_101610720;
  qword_101610720 = v1;
}

void sub_100AB9254(id a1)
{
  v3[0] = UIContentSizeCategoryUnspecified;
  v3[1] = UIContentSizeCategoryExtraSmall;
  v3[2] = UIContentSizeCategorySmall;
  v3[3] = UIContentSizeCategoryMedium;
  void v3[4] = UIContentSizeCategoryLarge;
  void v3[5] = UIContentSizeCategoryExtraLarge;
  v3[6] = UIContentSizeCategoryExtraExtraLarge;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:7];
  dispatch_time_t v2 = (void *)qword_101610730;
  qword_101610730 = v1;
}

void sub_100AB94AC(id a1)
{
  v3[0] = UIContentSizeCategoryAccessibilityExtraLarge;
  v3[1] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v3[2] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:3];
  dispatch_time_t v2 = (void *)qword_101610740;
  qword_101610740 = v1;
}

void sub_100AB9C08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AB9C34(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Hide Restaraunt Reservations" defaultsKey:@"__internal__HideTableBookingButton"];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Map OpenTable POIs to PenTable app" defaultsKey:@"RestaurantReservationAppBundleIDs"];
}

void sub_100AB9CA8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Vehicle Advertisement Suppression", MapsConfig_VehicleSetupSuppression, off_1015EF5C8, 1, 0 geoConfigKey switchOnStateIfUnset changeHandler];
}

void sub_100AB9CE8(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = +[NSMutableArray array];
  uint64_t v6 = +[NSMutableArray array];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100AB9E54;
  void v14[3] = &unk_101316848;
  id v7 = v5;
  id v15 = v7;
  id v8 = v6;
  id v16 = v8;
  [v3 enumerateObjectsUsingBlock:v14];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100AB9EB8;
  block[3] = &unk_1012E66E0;
  void block[4] = WeakRetained;
  id v12 = v8;
  id v13 = v7;
  id v9 = v7;
  id v10 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100AB9E54(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [v5 type];
  uint64_t v4 = 40;
  if (v3 == (id)1) {
    uint64_t v4 = 32;
  }
  [*(id *)(a1 + v4) addObject:v5];
}

void sub_100AB9EB8(uint64_t a1)
{
  v4[0] = kMapsExtensionPointNameServices;
  v4[1] = kMapsExtensionPointNameServicesUI;
  uint64_t v2 = *(void *)(a1 + 48);
  v5[0] = *(void *)(a1 + 40);
  v5[1] = v2;
  id v3 = +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:2];
  [*(id *)(a1 + 32) setExtensions:v3];
}

id sub_100AB9F60(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _addSectionWithMapsExtensionPointName:a2];
}

void sub_100ABA064(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100ABA080(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained extensions];
  uint64_t v6 = [v5 objectForKeyedSubscript:*(void *)(a1 + 32)];

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100ABA154;
  void v8[3] = &unk_101316898;
  id v9 = v3;
  id v7 = v3;
  [v6 enumerateObjectsUsingBlock:v8];
}

void sub_100ABA154(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [v3 displayName];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100ABA358;
  v17[3] = &unk_1012E7F80;
  id v18 = v3;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_100ABA394;
  v15[3] = &unk_1012E7D28;
  id v6 = v18;
  id v16 = v6;
  id v7 = [v4 addSwitchRowWithTitle:v5 get:v17 set:v15];

  id v8 = +[NSMutableArray array];
  id v9 = [v6 capabilities];
  id v10 = [v9 allObjects];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100ABA3A4;
  v13[3] = &unk_101316870;
  id v11 = v8;
  id v14 = v11;
  [v10 enumerateObjectsUsingBlock:v13];

  if ([v11 count])
  {
    id v12 = [v11 componentsJoinedByString:@" "];
    [v7 setSubtitle:v12];
  }
  else
  {
    [v7 setSubtitle:@"none"];
  }
}

id sub_100ABA358(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) extension];
  id v2 = [v1 optedIn];

  return v2;
}

id sub_100ABA394(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _setEnabled:a2 error:0];
}

void sub_100ABA3A4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 stringByReplacingOccurrencesOfString:@"MXExtensionCapability" withString:&stru_101324E70];
  [v2 addObject:v3];
}

CFStringRef sub_100ABB9DC(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return @"RAPLookAroundCategoryTypeImageQuality";
  }
  else {
    return off_1013168B8[a1 - 1];
  }
}

void sub_100ABC578(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_100ABC598(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) waypointRequest];
  unsigned int v7 = [v15 isEquivalentToOtherRequest:v6];

  if (v7)
  {
    if ([v15 hasCachedResult]) {
      id v8 = (GEOComposedWaypointRequest *)v15;
    }
    else {
      id v8 = [[GEOComposedWaypointRequest alloc] initWithComposedWaypoint:v5];
    }
    id v9 = v8;
    id v10 = [RoutePlanningWaypointRequest alloc];
    id v11 = [*(id *)(a1 + 32) waypointPlaceholder];
    id v12 = -[RoutePlanningWaypointRequest initWithWaypointPlaceholder:request:preferredNameSource:](v10, "initWithWaypointPlaceholder:request:preferredNameSource:", v11, v9, [*(id *)(a1 + 32) preferredNameSource]);
    uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
    id v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
}

void sub_100ABFADC(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v4)
  {
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    id v19[2] = sub_100ABFD24;
    v19[3] = &unk_101316918;
    id v6 = v4;
    id v20 = v6;
    unsigned int v7 = objc_retainBlock(v19);
    id v8 = [v3 mapKitHandle];

    if (v8)
    {
      id v9 = [v3 mapKitHandle];
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      void v16[2] = sub_100ABFE28;
      v16[3] = &unk_101316940;
      id v18 = v7;
      id v17 = v3;
      +[MKMapItem _mapItemFromHandle:v9 completionHandler:v16];
    }
    else
    {
      id v10 = [v3 title];

      if (v10 && !byte_101610758)
      {
        id v11 = [v3 title];
        id v12 = +[GEOMapService sharedService];
        uint64_t v13 = [v12 ticketForCanonicalLocationSearchQueryString:v11 traits:0];

        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472;
        v14[2] = sub_100ABFEA4;
        void v14[3] = &unk_1012E7710;
        id v15 = v7;
        [v13 submitWithHandler:v14 networkActivity:0];
      }
      else
      {
        (*((void (**)(id, void, void))v6 + 2))(v6, 0, 0);
      }
    }
  }
}

void sub_100ABFD24(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v10 = v3;
  if (v3)
  {
    id v4 = [v3 _styleAttributes];
    if ([v4 isLabelPOI])
    {
    }
    else
    {
      id v5 = [v10 _styleAttributes];
      unsigned __int8 v6 = [v5 isLandmarkPOI];

      if ((v6 & 1) == 0)
      {
        unsigned int v7 = [v10 _geoAddress];
        id v8 = [v7 structuredAddress];

        id v9 = [v8 fullThoroughfare];
        [v9 length];
      }
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100ABFE28(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v4 = v5;
  if (v5)
  {
    NSLog(@"Error %@ resolving mapkit handle for: %@", v5, *(void *)(a1 + 32));
    id v4 = v5;
  }
}

void sub_100ABFEA4(uint64_t a1, void *a2, uint64_t a3)
{
  id v9 = a2;
  id v5 = [v9 count];
  id v6 = 0;
  if (!a3 && v5)
  {
    id v7 = objc_alloc((Class)MKMapItem);
    id v8 = [v9 firstObject];
    id v6 = [v7 initWithGeoMapItem:v8 isPlaceHolderPlace:0];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100AC0B60(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_101610760;
  qword_101610760 = (uint64_t)v1;

  [(id)qword_101610760 setTimeStyle:1];
  [(id)qword_101610760 setDateStyle:1];
  id v3 = (void *)qword_101610760;

  [v3 setDoesRelativeDateFormatting:1];
}

void sub_100AC0E98(uint64_t a1, void *a2, void *a3, char a4)
{
  id v7 = a3;
  id v8 = a2;
  id v9 = [[CalendarItemSourceMapItem alloc] initWithCalendarItem:v8 mapItem:v7];

  id v10 = [(CalendarItemSourceMapItem *)v9 keys];
  id v11 = v10;
  if (v10)
  {
    id v12 = v10;
  }
  else
  {
    id v12 = +[NSSet set];
  }
  uint64_t v13 = v12;

  if (([*(id *)(a1 + 32) intersectsSet:v13] & 1) == 0)
  {
    id v14 = *(NSObject **)(a1 + 40);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100AC0FD8;
    id v18[3] = &unk_1012E8138;
    id v15 = v9;
    uint64_t v16 = *(void *)(a1 + 48);
    id v17 = *(void **)(a1 + 56);
    id v19 = v15;
    uint64_t v20 = v16;
    char v22 = a4;
    id v21 = v17;
    dispatch_sync(v14, v18);
  }
}

id sub_100AC0FD8(uint64_t a1)
{
  id result = *(id *)(a1 + 32);
  if (result)
  {
    [result setSource:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) setShouldBeHiddenFromMap:*(unsigned char *)(a1 + 56) == 0];
    id v3 = *(void **)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 32);
    return [v3 addObject:v4];
  }
  return result;
}

void sub_100AC1040(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    id v3 = [*(id *)(a1 + 32) title];
    NSLog(@"Calendar event '%@' has no location and will not be shown on map.", v3);
  }
  uint64_t v4 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v4);
}

void sub_100AC10C4(uint64_t a1, void *a2)
{
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id obj = a2;
  id v3 = [obj countByEnumeratingWithState:&v24 objects:v29 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v16 = *(void *)v25;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v16) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        long long v20 = 0u;
        long long v21 = 0u;
        long long v22 = 0u;
        long long v23 = 0u;
        id v7 = [v6 alarms];
        id v8 = [v7 countByEnumeratingWithState:&v20 objects:v28 count:16];
        if (v8)
        {
          id v9 = v8;
          uint64_t v10 = *(void *)v21;
          while (2)
          {
            for (j = 0; j != v9; j = (char *)j + 1)
            {
              if (*(void *)v21 != v10) {
                objc_enumerationMutation(v7);
              }
              id v12 = *(void **)(*((void *)&v20 + 1) + 8 * (void)j);
              uint64_t v13 = [v12 structuredLocation];

              if (v13)
              {
                dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
                id v14 = [v12 structuredLocation];
                v17[0] = _NSConcreteStackBlock;
                v17[1] = 3221225472;
                v17[2] = sub_100AC1328;
                v17[3] = &unk_1013169D0;
                id v19 = *(id *)(a1 + 40);
                void v17[4] = v6;
                id v18 = *(id *)(a1 + 32);
                sub_100ABFADC(v14, v17);

                goto LABEL_16;
              }
            }
            id v9 = [v7 countByEnumeratingWithState:&v20 objects:v28 count:16];
            if (v9) {
              continue;
            }
            break;
          }
        }
LABEL_16:
      }
      id v4 = [obj countByEnumeratingWithState:&v24 objects:v29 count:16];
    }
    while (v4);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100AC1328(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    id v3 = [*(id *)(a1 + 32) title];
    NSLog(@"Alarm for reminder '%@' has a structured location that will not be shown on the map!", v3);
  }
  id v4 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v4);
}

void sub_100AC13AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(NSObject **)(v2 + 64);
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472;
  id v6 = sub_100AC1454;
  id v7 = &unk_1012E5D58;
  uint64_t v8 = v2;
  id v9 = *(id *)(a1 + 40);
  dispatch_sync(v3, &v4);
  [*(id *)(a1 + 32) _notifyObserversItemsDidChange:v4, v5, v6, v7, v8];
}

void sub_100AC1454(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;
}

void sub_100AC174C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v1 = +[NSNotificationCenter defaultCenter];
    [v1 removeObserver:WeakRetained name:VKMapViewDidBecomeFullyDrawnNotification object:0];

    [WeakRetained _createAuxiliaryTasksIfNecessaryForPreference:2];
  }
}

void sub_100AC18DC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleInitialRouteLoaded:v3];
}

id sub_100AC19EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) withValue:&stru_101316A18 orError:&stru_101316A38];
}

void sub_100AC1A04(id a1, RouteCollection *a2)
{
  id v2 = +[IPCServer sharedServer];
  [v2 navigationStateDidChangeTo:0 reason:@"The directions are now loaded and we're ready for nav"];
}

void sub_100AC1A58(id a1, NSError *a2)
{
  id v2 = a2;
  id v4 = +[IPCServer sharedServer];
  id v3 = [(NSError *)v2 localizedDescription];
  [v4 navigationStateDidChangeTo:2 reason:v3 error:v2];
}

void sub_100AC1C88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(NSObject **)(v2 + 8);
  uint64_t v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472;
  id v12 = sub_100AC1E08;
  uint64_t v13 = &unk_1012E5D58;
  uint64_t v14 = v2;
  id v15 = *(id *)(a1 + 40);
  dispatch_sync(v3, &v10);
  [*(id *)(a1 + 40) setPlatformController:*(void *)(a1 + 32) v10, v11, v12, v13, v14];
  id v4 = [*(id *)(a1 + 32) observers];
  [v4 platformController:*(void *)(a1 + 32) didChangeCurrentSessionFromSession:*(void *)(a1 + 48) toSession:*(void *)(a1 + 40)];

  [*(id *)(a1 + 40) resume];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 48);
  *(void *)(v5 + 4_Block_object_dispose(&STACK[0x7A0], 8) = 0;

  id v7 = sub_1000DCFA0();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(void **)(a1 + 32);
    id v9 = [v8 sessionStack];
    *(_DWORD *)long long buf = 134349314;
    id v17 = v8;
    __int16 v18 = 2112;
    id v19 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "[%{public}p] Current session stack: %@", buf, 0x16u);
  }
}

void sub_100AC1E08(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) stack];
  [v2 addObject:*(void *)(a1 + 40)];
}

void sub_100AC1F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100AC1FAC(uint64_t a1)
{
  return ++*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) > 1uLL;
}

void sub_100AC25F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100AC2614(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) stack];
  uint64_t v2 = [v5 lastObject];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100AC267C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) observers];
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = [v3 currentSession];
  [v2 platformController:v3 didChangeCurrentSessionFromSession:v4 toSession:v5];

  id v6 = [*(id *)(a1 + 32) currentSession];
  [v6 resume];

  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)(v7 + 48);
  *(void *)(v7 + 4_Block_object_dispose(&STACK[0x7A0], 8) = 0;
}

void sub_100AC2968(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) stack];
  [v2 removeObject:*(void *)(a1 + 40)];
}

BOOL sub_100AC2A84(id a1, MapsSession *a2)
{
  return 0;
}

void sub_100AC2D1C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) stack];
  uint64_t v3 = [v2 lastObject];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = [*(id *)(a1 + 32) stack];
  [v6 removeLastObject];

  id v10 = [*(id *)(a1 + 32) stack];
  uint64_t v7 = [v10 lastObject];
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_100AC2DCC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) stack];
  [v2 addObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

id sub_100AC375C(uint64_t a1)
{
  [*(id *)(a1 + 32) layoutIfNeeded];
  [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:1.0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);

  return [v2 setAlpha:1.0];
}

id sub_100AC3940(uint64_t a1)
{
  [*(id *)(a1 + 32) layoutIfNeeded];
  [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:0.0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);

  return [v2 setAlpha:0.0];
}

uint64_t sub_100AC39A4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100AC4160(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v9 = [[SearchAddressBookOperationMatch alloc] initWithContact:v3 context:*(void *)(*(void *)(a1 + 32) + 16)];

  if ([(SearchAddressBookOperationMatch *)v9 isGoodMatch])
  {
    [*(id *)(a1 + 40) addObject:v9];
    uint64_t v4 = [(SearchAddressBookOperationMatch *)v9 contact];
    id v5 = [v4 identifier];

    if (v5) {
      [*(id *)(a1 + 48) setObject:v9 forKeyedSubscript:v5];
    }
    id v6 = [(SearchAddressBookOperationMatch *)v9 contact];
    id v7 = [v6 iOSLegacyIdentifier];

    if ((int)v7 >= 1)
    {
      uint64_t v8 = +[NSString stringWithFormat:@"%d", v7];
      [*(id *)(a1 + 56) setObject:v9 forKeyedSubscript:v8];
    }
  }
}

void sub_100AC4284(uint64_t a1, void *a2)
{
  id v16 = a2;
  id v3 = [v16 contact];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v4 = [v3 postalAddresses];
  id v5 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        id v10 = [v9 value];
        uint64_t v11 = [v10 street];
        id v12 = [v11 length];

        if (v12)
        {
          uint64_t v13 = [[AddressBookAddress alloc] initWithContact:v3 addressValue:v9];
          if ([(AddressBookAddress *)v13 isValid])
          {
            uint64_t v14 = [v16 autocompleteMatchInfo];
            [*(id *)(*(void *)(a1 + 32) + 16) setMatchInfo:v14 forObject:v13];
            id v15 = [[AutocompleteItem alloc] initWithLocalCompletion:v13 sourceType:4 sourceSubtype:0 matchInfo:v14];
            [*(id *)(a1 + 40) addObject:v15];
          }
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v6);
  }
}

id sub_100AC4B80(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (v3 && [v3 length])
  {
    id v5 = [v4 stringByTrimmingCharactersInSet:*(void *)(a1 + 32)];

    id v6 = [v5 componentsSeparatedByCharactersInSet:*(void *)(a1 + 32)];
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v7)
    {
      id v8 = v7;
      id v9 = 0;
      uint64_t v10 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v16 != v10) {
            objc_enumerationMutation(v6);
          }
          id v12 = *(void **)(*((void *)&v15 + 1) + 8 * i);
          if ([v12 length])
          {
            if (!v9)
            {
              id v9 = +[NSMutableArray array];
            }
            [v9 addObject:v12];
          }
        }
        id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v8);
    }
    else
    {
      id v9 = 0;
    }

    uint64_t v4 = v5;
  }
  else
  {
    id v9 = 0;
  }
  id v13 = [v9 copy];

  return v13;
}

void sub_100AC4D24(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) objectForKeyedSubscript:a2];
  if (v3)
  {
    uint64_t v4 = v3;
    [*(id *)(a1 + 40) addObjectsFromArray:v3];
    id v3 = v4;
  }
}

id sub_100AC558C(uint64_t a1)
{
  id v1 = +[MKRatingStringBuilder ratingSymbolNameForMapItem:a1];
  id v2 = +[UIImage _mapsCar_systemImageNamed:v1 pointSize:6 weight:8.5];

  return v2;
}

id sub_100AC55F8(uint64_t a1)
{
  if (a1) {
    +[MKRatingStringBuilder ratingColorForMapItem:a1];
  }
  else {
  id v1 = +[UIColor systemOrangeColor];
  }

  return v1;
}

void sub_100AC717C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[88] = 0;
    id v2 = WeakRetained;
    [WeakRetained _updateAppearance];
    id WeakRetained = v2;
  }
}

BOOL sub_100AC7A2C(id a1, MapsSuggestionsEntry *a2)
{
  id v2 = a2;
  id v3 = objc_alloc_init(MapsSuggestionsOfflineService);
  unsigned __int8 v4 = [(MapsSuggestionsOfflineService *)v3 shouldKeepEntryWhenOffline:v2];

  return v4;
}

BOOL sub_100AC7A84(id a1, MapsSuggestionsEntry *a2)
{
  unint64_t v2 = (unint64_t)[(MapsSuggestionsEntry *)a2 type];
  return (v2 > 0x16) | (0xFFD3Fu >> v2) & 1;
}

void sub_100AC7C20(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (WeakRetained[1])
    {
      [WeakRetained setSinkAttached:1];
    }
    else
    {
      v4[0] = _NSConcreteStackBlock;
      v4[1] = 3221225472;
      void v4[2] = sub_100AC7CF8;
      void v4[3] = &unk_101316B80;
      objc_copyWeak(&v5, v1);
      [v3 _createMapsSuggestionEngineWithCallBack:v4];
      objc_destroyWeak(&v5);
    }
  }
}

void sub_100AC7CE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AC7CF8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_storeStrong(WeakRetained + 1, a2);
    [v5 setSinkAttached:1];
  }
}

void sub_100AC7E14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained setSinkAttached:0];
    id WeakRetained = v2;
  }
}

void sub_100AC7FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AC8004(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _processTopSuggestions:v8 error:v5];
  }
}

void sub_100AC8228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100AC8248(uint64_t a1, void *a2)
{
}

BOOL sub_100AC8258(id a1, id a2, NSDictionary *a3)
{
  return [a2 isShortcutForSetup] ^ 1;
}

void sub_100AC8278(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned __int8 v4 = *(void **)(v3 + 48);
  *(void *)(v3 + 4_Block_object_dispose(&STACK[0x7A0], 8) = v2;

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56));
  [WeakRetained shortcutsProviderUpdated:*(void *)(a1 + 32)];
}

void sub_100AC83B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _fetchSuggestions];
    id WeakRetained = v2;
  }
}

void sub_100AC9870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100AC9890(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 locationDisplayString];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_100ACAA64(uint64_t a1, void *a2)
{
  return [a2 conformsToProtocol:*(void *)(a1 + 32)];
}

void sub_100ACABA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100ACABB8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 32) + 16))())
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

id sub_100ACAE20()
{
  id v0 = MSPSharedTripServiceNameForRawServiceName();
  if ([v0 isEqualToString:MSPSharedTripServiceSMS])
  {
    id v1 = +[NSBundle mainBundle];
    id v2 = v1;
    CFStringRef v3 = @"[Share ETA] SMS";
LABEL_5:
    uint64_t v4 = [v1 localizedStringForKey:v3 value:@"localized string not found" table:0];

    goto LABEL_7;
  }
  if ([v0 isEqualToString:MSPSharedTripServiceRCS])
  {
    id v1 = +[NSBundle mainBundle];
    id v2 = v1;
    CFStringRef v3 = @"[Share ETA] RCS";
    goto LABEL_5;
  }
  uint64_t v4 = 0;
LABEL_7:

  return v4;
}

void sub_100ACB474(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainMKMapView];
  [v2 _setLocationPulseEnabled:0];

  CFStringRef v3 = [*(id *)(a1 + 32) mainVKMapView];
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(void *)(a1 + 40)) {
    [v4 performSelector:];
  }
  else {
    [v3 _mapstest_jumpToCoords:*(unsigned __int8 *)(v4 + 73) pitch:*(double *)(v4 + 104) yaw:*(double *)(v4 + 112) altitudeIsRegionSize:*(double *)(v4 + 88) yaw:*(double *)(v4 + 96)];
  }
  [*(id *)(a1 + 32) startedTest];
  [*(id *)(a1 + 32) startedSubTest:@"loadingScene"];
  [v3 enableTestStatistics];
  [v3 enableTileStatistics];
  objc_initWeak(&location, *(id *)(a1 + 32));
  id v5 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100ACB5D8;
  void v6[3] = &unk_1012E6708;
  objc_copyWeak(&v7, &location);
  [v5 addFullyDrawnCallback:v6];
  objc_destroyWeak(&v7);
  objc_destroyWeak(&location);
}

void sub_100ACB5BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100ACB5D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didFinishJumping];
}

id sub_100ACB934(uint64_t a1)
{
  return _[*(id *)(a1 + 32) startTimingFps];
}

void sub_100ACBD78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100ACBDA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishedTest];
}

void sub_100ACC078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100ACC094(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didFinishJumping];
}

void sub_100ACC1C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100ACC1E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishedSubTest:@"extendedSwitch"];
  [WeakRetained finishedTest];
}

id sub_100ACC36C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) fullyDrawnCallbacks];
  id v3 = [*(id *)(a1 + 40) copy];
  id v4 = objc_retainBlock(v3);
  [v2 addObject:v4];

  id v5 = *(void **)(a1 + 32);

  return [v5 setupFullyDrawnNotification:"onFullyDrawn:"];
}

void sub_100ACCA34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100ACCA58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _accessoryButtonTapped:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100ACCBEC(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_101316C50];
  uint64_t v2 = (void *)qword_101610780;
  qword_101610780 = v1;
}

void sub_100ACCC4C(id a1, SectionHeaderOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  id v8 = a2;
  id v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  if ([v5 conformsToProtocol:&OBJC_PROTOCOL___SectionHeaderOutlineCellModel]) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  [(SectionHeaderOutlineCell *)v8 setCellModel:v7];
}

void sub_100ACE85C(id a1, RAPCommentQuestion *a2, RAPReportComposerCommentSection *a3)
{
  id v4 = a3;
  id v5 = a2;
  id v6 = [(RAPReportComposerCommentSection *)v4 headerView];
  [v6 updateRemainingCharacters];

  id v11 = +[NSIndexPath indexPathForRow:0 inSection:[(RAPTablePartSection *)v4 sectionIndex]];
  id v7 = [(RAPTablePartSection *)v4 tableView];

  id v8 = [v7 cellForRowAtIndexPath:v11];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v9 = v8;
  }
  else {
    id v9 = 0;
  }
  id v10 = v9;

  [v10 setPropertiesFromQuestion:v5];
}

id sub_100ACEAA4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setComment:a2];
}

void sub_100ACEBDC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 scrollToRowAtIndexPath:*(void *)(a1 + 40) atScrollPosition:1 animated:1];
}

void sub_100ACEC38(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  id v3 = [v2 cellForRowAtIndexPath:*(void *)(a1 + 40)];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  [v5 beginEditingCommentIfPossible];
}

void sub_100ACF4F4(uint64_t a1, void *a2)
{
  id v11 = a2;
  id v3 = [v11 photo];

  if (v3)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = [v11 photo];
    [v4 addPhoto:v5];

    id v6 = *(void **)(a1 + 40);
    id v7 = [v11 photo];
    id v8 = [v7 photo];
    id v9 = [v11 photo];
    id v10 = [v9 _maps_diffableDataSourceIdentifier];
    [v6 addImage:v8 forIdentifier:v10];

    [v11 clearSelectedPhoto];
  }
}

void sub_100AD0368(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100AD0418;
  block[3] = &unk_1012E80F0;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = v5;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100AD0418(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id v2 = +[NSMutableSet set];
    [*(id *)(a1 + 40) setSelectedObjectSet:v2];
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, void))(v3 + 16))(v3, *(void *)(a1 + 32));
  }
  uint64_t v4 = [*(id *)(a1 + 40) resultBlock];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 40) resultBlock];
    v5[2](v5, *(void *)(a1 + 32));
  }
}

void sub_100AD07D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([*(id *)(a1 + 32) suppressAnalytics] & 1) == 0)
  {
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v4 = [*(id *)(a1 + 32) selectedObjectSet];
    id v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v17;
      do
      {
        id v8 = 0;
        do
        {
          if (*(void *)v17 != v7) {
            objc_enumerationMutation(v4);
          }
          [*(id *)(a1 + 32) _instrumentSaveOrRemoveFromCollectionWithMapItem:*(void *)(*((void *)&v16 + 1) + 8 * (void)v8) instrumentSave:0];
          id v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v6);
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100AD0970;
  block[3] = &unk_1012E80F0;
  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = *(void **)(a1 + 40);
  id v13 = v3;
  uint64_t v14 = v9;
  id v15 = v10;
  id v11 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100AD0970(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id v2 = +[NSMutableSet set];
    [*(id *)(a1 + 40) setSelectedObjectSet:v2];
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, void))(v3 + 16))(v3, *(void *)(a1 + 32));
  }
  uint64_t v4 = [*(id *)(a1 + 40) resultBlock];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 40) resultBlock];
    v5[2](v5, *(void *)(a1 + 32));
  }
}

void sub_100AD0A38(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100AD0AE8;
  block[3] = &unk_1012E80F0;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = v5;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100AD0AE8(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id v2 = +[NSMutableSet set];
    [*(id *)(a1 + 40) setSelectedObjectSet:v2];
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, void))(v3 + 16))(v3, *(void *)(a1 + 32));
  }
  uint64_t v4 = [*(id *)(a1 + 40) resultBlock];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 40) resultBlock];
    v5[2](v5, *(void *)(a1 + 32));
  }
}

void sub_100AD0D98(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100AD0E48;
  block[3] = &unk_1012E80F0;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = v5;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100AD0E48(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id v2 = +[NSMutableSet set];
    [*(id *)(a1 + 40) setSelectedObjectSet:v2];
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    (*(void (**)(uint64_t, void))(v3 + 16))(v3, *(void *)(a1 + 32));
  }
  uint64_t v4 = [*(id *)(a1 + 40) resultBlock];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 40) resultBlock];
    v5[2](v5, *(void *)(a1 + 32));
  }
}

void sub_100AD16A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100AD16D4()
{
  if (qword_101610798 != -1) {
    dispatch_once(&qword_101610798, &stru_101316D68);
  }
  id v0 = (void *)qword_101610790;

  return v0;
}

void sub_100AD1728(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  if (v3)
  {
    uint64_t v4 = sub_1005762E4();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v13 = 136315650;
      uint64_t v14 = "-[MapsRadarDraft(TTR) _launchTapToRadarKitWithDisplayReason:]_block_invoke";
      __int16 v15 = 2080;
      long long v16 = "MapsRadarDraft+TTR.m";
      __int16 v17 = 1024;
      int v18 = 57;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", (uint8_t *)&v13, 0x1Cu);
    }

    if (sub_100BB36BC())
    {
      id v5 = sub_1005762E4();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = +[NSThread callStackSymbols];
        int v13 = 138412290;
        uint64_t v14 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v13, 0xCu);
      }
    }
    uint64_t v7 = sub_100AD16D4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 32));
      int v13 = 134349314;
      uint64_t v14 = WeakRetained;
      __int16 v15 = 2114;
      long long v16 = v3;
      uint64_t v9 = "[%{public}p] Error filing with TapToRadarKit: %{public}@";
      id v10 = v7;
      os_log_type_t v11 = OS_LOG_TYPE_ERROR;
      uint32_t v12 = 22;
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, (uint8_t *)&v13, v12);
    }
  }
  else
  {
    uint64_t v7 = sub_100AD16D4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 32));
      int v13 = 134349056;
      uint64_t v14 = WeakRetained;
      uint64_t v9 = "[%{public}p] Successfully filed with TapToRadarKit";
      id v10 = v7;
      os_log_type_t v11 = OS_LOG_TYPE_INFO;
      uint32_t v12 = 12;
      goto LABEL_12;
    }
  }
}

void sub_100AD1BF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AD1C14(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100AD16D4();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      *(_DWORD *)long long buf = 134349314;
      id v23 = WeakRetained;
      __int16 v24 = 2114;
      id v25 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "[%{public}p] Error unlocking device: %{public}@", buf, 0x16u);
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v7 = objc_loadWeakRetained((id *)(a1 + 40));
      *(_DWORD *)long long buf = 134349056;
      id v23 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] Successfully unlocked device", buf, 0xCu);
    }
    id v8 = sub_100AD16D4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = objc_loadWeakRetained((id *)(a1 + 40));
      id v10 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 134349314;
      id v23 = v9;
      __int16 v24 = 2112;
      id v25 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "[%{public}p] Launching TTR with URL: %@", buf, 0x16u);
    }
    id v5 = objc_alloc_init((Class)_LSOpenConfiguration);
    os_log_type_t v11 = +[MNNavigationService sharedService];
    id v12 = [v11 isInNavigatingState];

    uint64_t v20 = LSOpenInBackgroundKey;
    int v13 = +[NSNumber numberWithBool:v12];
    long long v21 = v13;
    uint64_t v14 = +[NSDictionary dictionaryWithObjects:&v21 forKeys:&v20 count:1];
    [v5 setFrontBoardOptions:v14];

    __int16 v15 = +[LSApplicationWorkspace defaultWorkspace];
    uint64_t v16 = *(void *)(a1 + 32);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_100AD1F00;
    v17[3] = &unk_101316D48;
    objc_copyWeak(&v18, (id *)(a1 + 40));
    char v19 = (char)v12;
    [v15 openURL:v16 configuration:v5 completionHandler:v17];

    objc_destroyWeak(&v18);
  }
}

void sub_100AD1EE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AD1F00(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_100AD16D4();
  id v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)long long buf = 134349314;
      id v12 = WeakRetained;
      __int16 v13 = 2114;
      id v14 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "[%{public}p] Error launching TTR: %{public}@", buf, 0x16u);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100AD20B0;
    block[3] = &unk_1012E5D08;
    id v10 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v8 = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)long long buf = 134349056;
      id v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}p] Successfully launched TTR with URL", buf, 0xCu);
    }
    if (*(unsigned char *)(a1 + 40)) {
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, &stru_101316D20);
    }
  }
}

void sub_100AD20B0(uint64_t a1)
{
  uint64_t v1 = +[NSString stringWithFormat:@"There was an error launching TTR: %@", *(void *)(a1 + 32)];
  id v6 = +[UIAlertController alertControllerWithTitle:@"[Internal only]\nTap to Radar" message:v1 preferredStyle:1];

  id v2 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:0];
  [v6 addAction:v2];

  id v3 = +[MapsInternalAlertPresentationController sharedInstance];
  id v4 = +[UIApplication _maps_keyMapsWindow];
  id v5 = [v4 windowScene];
  [v3 presentAlertController:v6 fromWindowScene:v5];
}

void sub_100AD21C8(id a1)
{
  id v5 = +[UIAlertController alertControllerWithTitle:@"[Internal only]\nTap-to-Radar" message:@"Tap-to-Radar was successfully launched in the background because you are navigating." preferredStyle:1];
  uint64_t v1 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:0];
  [v5 addAction:v1];

  id v2 = +[MapsInternalAlertPresentationController sharedInstance];
  id v3 = +[UIApplication _maps_keyMapsWindow];
  id v4 = [v3 windowScene];
  [v2 presentAlertController:v5 fromWindowScene:v4];
}

void sub_100AD22B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsRadarDraftTTR");
  id v2 = (void *)qword_101610790;
  qword_101610790 = (uint64_t)v1;
}

void sub_100AD2A1C(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    id v3 = sub_1000A930C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = [*(id *)(a1 + 32) shortDescription];
      int v9 = 138412290;
      id v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "MapsActionController : user stopped navigation for %@", (uint8_t *)&v9, 0xCu);
    }
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 24));
    [WeakRetained endNavigationAndReturnToRoutePlanning:0];
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 40);
    id v7 = *(void **)(v6 + 8);
    *(void *)(v6 + _Block_object_dispose(&STACK[0x7A0], 8) = 0;

    id WeakRetained = sub_1000A930C();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_INFO))
    {
      id v8 = [*(id *)(a1 + 32) shortDescription];
      int v9 = 138412290;
      id v10 = v8;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_INFO, "MapsActionController : user discard %@", (uint8_t *)&v9, 0xCu);
    }
  }
}

void sub_100AD2CB4(uint64_t a1)
{
  [*(id *)(a1 + 32) applyRichMapsActivityOrWaitForLocation:*(void *)(*(void *)(a1 + 32) + 8)];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 8);
  *(void *)(v2 + _Block_object_dispose(&STACK[0x7A0], 8) = 0;
}

void sub_100AD3000(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_1000A930C();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (v4)
  {
    if (v6)
    {
      id v7 = [v4 localizedDescription];
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = *(void *)(a1 + 56);
      id v10 = [*(id *)(a1 + 32) shortDescription];
      int v11 = 138413058;
      id v12 = v7;
      __int16 v13 = 2048;
      uint64_t v14 = v8;
      __int16 v15 = 2048;
      uint64_t v16 = v9;
      __int16 v17 = 2112;
      id v18 = v10;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "MapsActionController : error %@ waiting location (timeout %f, maxage: %f)for action %@ ", (uint8_t *)&v11, 0x2Au);

LABEL_6:
    }
  }
  else if (v6)
  {
    id v7 = [*(id *)(a1 + 32) shortDescription];
    int v11 = 138412290;
    id v12 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "MapsActionController : got user location for %@ ", (uint8_t *)&v11, 0xCu);
    goto LABEL_6;
  }

  [*(id *)(a1 + 40) applyRichMapsActivity:*(void *)(a1 + 32)];
}

void sub_100AD3600(uint64_t a1)
{
  uint64_t v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "(tag %@) %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_100AD47A8(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id v5 = [*(id *)(a1 + 32) _visibleCarIndexForCar:a2];
  if (v5 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    *a3 = 1;
  }
  else
  {
    id v7 = [*(id *)(*(void *)(a1 + 32) + 40) objectAtIndexedSubscript:v5];
    uint64_t v6 = +[UIColor labelColor];
    [v7 setTintColor:v6];
  }
}

id sub_100AD4DF8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCamera:*(void *)(a1 + 40)];
}

void sub_100AD52D8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 40) allItems];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;
}

id sub_100AD53C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  uint64_t v4 = *(void **)(a1 + 32);

  return [v4 _notifyObserversItemsDidChange];
}

void sub_100AD55D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100AD55F8(uint64_t a1)
{
  uint64_t v1 = a1;
  id v43 = *(id *)(*(void *)(a1 + 32) + 72);
  id v2 = [v43 length];
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = 40;
  if (!*(void *)(v3 + 40))
  {
    if (v2
      || (v5 = [(id)v3 hasItemsWhenSearchStringIsEmpty], uint64_t v3 = *(void *)(v1 + 32), v5))
    {
      uint64_t v37 = 40;
      id v6 = *(id *)(v3 + 32);
      double v45 = +[NSMutableArray array];
      long long v59 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      long long v62 = 0u;
      id v7 = v6;
      id v8 = [v7 countByEnumeratingWithState:&v59 objects:v67 count:16];
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = *(void *)v60;
        uint64_t v38 = v55;
        id v41 = v2;
        uint64_t v42 = v1;
        uint64_t v39 = *(void *)v60;
        id v40 = v7;
        do
        {
          int v11 = 0;
          id v44 = v9;
          do
          {
            if (*(void *)v60 != v10) {
              objc_enumerationMutation(v7);
            }
            id v12 = *(void **)(*((void *)&v59 + 1) + 8 * (void)v11);
            if (objc_msgSend(*(id *)(v1 + 32), "itemIsAllowed:", v12, v37, v38))
            {
              if (([v12 hidden] & 1) == 0)
              {
                if (v2)
                {
                  v54[0] = _NSConcreteStackBlock;
                  v54[1] = 3221225472;
                  v55[0] = sub_100AD5AA8;
                  v55[1] = &unk_101316DE0;
                  id v56 = v43;
                  CGRect v57 = v12;
                  id v58 = v45;
                  __int16 v13 = objc_retainBlock(v54);
                  long long v50 = 0u;
                  long long v51 = 0u;
                  long long v52 = 0u;
                  long long v53 = 0u;
                  uint64_t v14 = [v12 autocompletionStrings];
                  id v15 = [v14 countByEnumeratingWithState:&v50 objects:v64 count:16];
                  if (v15)
                  {
                    id v16 = v15;
                    uint64_t v17 = *(void *)v51;
LABEL_14:
                    uint64_t v18 = 0;
                    while (1)
                    {
                      if (*(void *)v51 != v17) {
                        objc_enumerationMutation(v14);
                      }
                      if (((uint64_t (*)(void *, void))v13[2])(v13, *(void *)(*((void *)&v50 + 1) + 8 * v18)))break; {
                      if (v16 == (id)++v18)
                      }
                      {
                        id v16 = [v14 countByEnumeratingWithState:&v50 objects:v64 count:16];
                        if (v16) {
                          goto LABEL_14;
                        }
                        break;
                      }
                    }
                  }

                  char v19 = [v12 searchResult];
                  uint64_t v20 = [v19 mapItem];
                  long long v21 = [v20 _geoMapItem];
                  long long v22 = [v21 _alternateSearchableNames];

                  long long v48 = 0u;
                  long long v49 = 0u;
                  long long v46 = 0u;
                  long long v47 = 0u;
                  id v23 = v22;
                  id v24 = [v23 countByEnumeratingWithState:&v46 objects:v63 count:16];
                  if (v24)
                  {
                    id v25 = v24;
                    uint64_t v26 = *(void *)v47;
LABEL_22:
                    uint64_t v27 = 0;
                    while (1)
                    {
                      if (*(void *)v47 != v26) {
                        objc_enumerationMutation(v23);
                      }
                      uint64_t v28 = *(void *)(*((void *)&v46 + 1) + 8 * v27);
                      long long v29 = +[AutocompleteMatchInfo matchInfoWithType:1];
                      long long v30 = [[AutocompleteStringMatcher alloc] initWithString:v28 requiredMatchLength:1 matchInfo:v29];
                      char v31 = ((uint64_t (*)(void *, AutocompleteStringMatcher *))v13[2])(v13, v30);

                      if (v31) {
                        break;
                      }
                      if (v25 == (id)++v27)
                      {
                        id v25 = [v23 countByEnumeratingWithState:&v46 objects:v63 count:16];
                        if (v25) {
                          goto LABEL_22;
                        }
                        break;
                      }
                    }
                  }

                  id v2 = v41;
                  uint64_t v1 = v42;
                  uint64_t v10 = v39;
                  id v7 = v40;
                  id v9 = v44;
                }
                else
                {
                  [v45 addObject:v12];
                }
              }
            }
            else
            {
              uint64_t v32 = sub_100109E50();
              if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)long long buf = 138412290;
                CGRect v66 = v12;
                _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "PersonalizedItemAutocompleteFilter - Skipped personalized item because not allowed: %@", buf, 0xCu);
              }
            }
            int v11 = (char *)v11 + 1;
          }
          while (v11 != v9);
          id v33 = [v7 countByEnumeratingWithState:&v59 objects:v67 count:16];
          id v9 = v33;
        }
        while (v33);
      }

      id v34 = [v45 copy];
      uint64_t v35 = *(void *)(v1 + 32);
      uint64_t v4 = v37;
      id v36 = *(void **)(v35 + v37);
      *(void *)(v35 + v37) = v34;

      uint64_t v3 = *(void *)(v1 + 32);
    }
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(v1 + 40) + 8) + 40), *(id *)(v3 + v4));
}

BOOL sub_100AD5AA8(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 matchForAutocompleteSearchString:*(void *)(a1 + 32)];
  if (v3)
  {
    uint64_t v4 = [[AutocompleteItem alloc] initWithPersonalizedItem:*(void *)(a1 + 40) matchInfo:v3];
    [*(id *)(a1 + 48) addObject:v4];
  }
  return v3 != 0;
}

void sub_100AD5CB0(uint64_t a1)
{
}

void sub_100AD5F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AD5FB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didFinishJumping];
}

void sub_100AD6144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AD6164(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didShowPlaceCard];
}

void sub_100AD667C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) beginShowingLoadingIndicator];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100AD66C8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 16) = 0;
  return [*(id *)(a1 + 32) _updateLoadingIndicator];
}

id sub_100AD7284()
{
  if (qword_1016107C0 != -1) {
    dispatch_once(&qword_1016107C0, &stru_101316E48);
  }
  id v0 = (void *)qword_1016107B8;

  return v0;
}

void sub_100AD7AF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained && ([WeakRetained gotFirstFrame] & 1) == 0)
  {
    uint64_t v3 = sub_100AD7284();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      int v6 = 134349056;
      id v7 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "[%{public}p] Passing ARSession to VKMapView", (uint8_t *)&v6, 0xCu);
    }

    uint64_t v4 = [v2 vkMapView];
    unsigned int v5 = [v2 session];
    [v4 setARSession:v5];

    [v2 setGotFirstFrame:1];
  }
}

void sub_100AD7EBC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARRenderingView");
  uint64_t v2 = (void *)qword_1016107B8;
  qword_1016107B8 = (uint64_t)v1;
}

UIColor *__cdecl sub_100AD8DF4(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)2) {
    +[UIColor secondarySystemGroupedBackgroundColor];
  }
  else {
  uint64_t v2 = +[UIColor systemWhiteColor];
  }

  return (UIColor *)v2;
}

double sub_100AD8E48(id a1, double result, NSArray *a3)
{
  if (result < 48.0) {
    return 48.0;
  }
  return result;
}

id sub_100AD91A4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 96) setEnabled:1];
}

id sub_100ADA114(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  [v3 setObject:*(void *)(a1 + 32) forKeyedSubscript:NSFontAttributeName];
  id v4 = [v3 copy];

  return v4;
}

void sub_100ADA52C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100ADA550(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v8 = WeakRetained;
    id v3 = [WeakRetained[3] source];
    id v4 = +[NSBundle mainBundle];
    unsigned int v5 = v4;
    if (v3 == (id)3) {
      CFStringRef v6 = @"[Route Creation] Save";
    }
    else {
      CFStringRef v6 = @"[Route Creation] Add to Library";
    }
    id v7 = [v4 localizedStringForKey:v6 value:@"localized string not found" table:0];

    [v8[13] setTitle:v7 forState:0];
    [*(id *)(a1 + 32) addObject:v8[13]];

    id WeakRetained = v8;
  }
}

void sub_100ADAA60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100ADAA88(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v4 && WeakRetained) {
    [WeakRetained _updateDirectionsButtonWithSuggestedMode:[*(id *)(a1 + 32) suggestedNavigationModeForLocation:v4 context:1]];
  }
}

void sub_100ADB398(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100ADB3E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _pressedOfflineDownloadButton];
    id WeakRetained = v2;
  }
}

NSDictionary *__cdecl sub_100ADB42C(id a1, NSDictionary *a2)
{
  id v2 = [(NSDictionary *)a2 mutableCopy];
  id v3 = +[UIFont _preferredFontForTextStyle:UIFontTextStyleBody weight:UIFontWeightSemibold];
  id v4 = [v3 _maps_fontWithMonospacedNumbers];
  [v2 setObject:v4 forKeyedSubscript:NSFontAttributeName];

  id v5 = [v2 copy];

  return (NSDictionary *)v5;
}

void sub_100ADB4D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _pressedOfflineDownloadButton];
    id WeakRetained = v2;
  }
}

void sub_100ADB690(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateOfflineButtonIfNecessary];
    id WeakRetained = v2;
  }
}

uint64_t sub_100ADD950(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v7 = a3;
  unint64_t v8 = *(void *)(v6 + 8 * (void)[v5 indexOfObject:a2]);
  uint64_t v9 = *(void *)(a1 + 40);
  id v10 = [*(id *)(a1 + 32) indexOfObject:v7];

  unint64_t v11 = *(void *)(v9 + 8 * (void)v10);
  BOOL v12 = v8 >= v11;
  BOOL v13 = v8 > v11;
  if (v12) {
    return v13;
  }
  else {
    return -1;
  }
}

void sub_100ADDE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100ADDE84(uint64_t a1)
{
  id v2 = sub_100109BB0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Delay timer fired; updating state now", v6, 2u);
  }

  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained updateStateForCurrentPreciseLocationAuthorizationStatus];

  id v5 = objc_loadWeakRetained(v3);
  [v5 setAuthorizedDelayTimer:0];
}

void sub_100ADE5C0(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100ADE678;
  block[3] = &unk_1012E77B0;
  id v5 = a2;
  int v7 = *(_DWORD *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100ADE678(uint64_t a1)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v17;
    while (2)
    {
      for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v17 != v4) {
          objc_enumerationMutation(v2);
        }
        id v6 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        if (objc_msgSend(v6, "incidentType", (void)v16) == *(_DWORD *)(a1 + 48))
        {
          id v3 = v6;
          goto LABEL_11;
        }
      }
      id v3 = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  int v7 = +[MKLocationManager sharedLocationManager];
  unint64_t v8 = [v7 currentLocation];

  uint64_t v9 = -[TrafficIncidentReport initWithUserLocation:type:userPath:]([TrafficIncidentReport alloc], "initWithUserLocation:type:userPath:", v8, [v3 incidentType], 1);
  [(TrafficIncidentReport *)v9 setSiriContext:1];
  id v10 = +[CarDisplayController sharedInstance];
  unsigned int v11 = [v10 isCurrentlyConnectedToAnyCarScene];

  if (v11)
  {
    [(TrafficIncidentReport *)v9 setReportedFromCarplay:1];
    BOOL v12 = +[CarChromeModeCoordinator sharedInstance];
  }
  else
  {
    BOOL v13 = [*(id *)(a1 + 40) navActionCoordinator];

    uint64_t v14 = *(void **)(a1 + 40);
    if (v13) {
      [v14 navActionCoordinator];
    }
    else {
    BOOL v12 = [v14 appCoordinator];
    }
  }
  id v15 = v12;
  [v12 displayIncidentReportSubmissionWithItem:v3 report:v9];
}

void sub_100ADF8D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  [*(id *)(a1 + 32) setImage:v3];
}

id sub_100ADF9B4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) invalidateIfNeeded];
}

void sub_100ADFFA4(uint64_t a1)
{
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v46 objects:v51 count:16];
  if (v3)
  {
    id v4 = v3;
    id v5 = 0;
    uint64_t v6 = *(void *)v47;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v47 != v6) {
          objc_enumerationMutation(v2);
        }
        unint64_t v8 = +[UIImage _mapkit_transitArtworkImageWithDataSource:*(void *)(*((void *)&v46 + 1) + 8 * i) size:8 scale:*(double *)(a1 + 64)];
        uint64_t v9 = v8;
        if (!v5 || v8 && ([v8 size], double v12 = v10 * v11, objc_msgSend(v5, "size"), v12 > v13 * v14))
        {
          id v15 = v9;

          id v5 = v15;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v46 objects:v51 count:16];
    }
    while (v4);
  }
  else
  {
    id v5 = 0;
  }

  [v5 size];
  if (v5) {
    BOOL v17 = 0;
  }
  else {
    BOOL v17 = *(_DWORD *)(a1 + 72) == 6;
  }
  if (v17 || v16 < 20.0)
  {
    long long v44 = 0u;
    long long v45 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    id v19 = *(id *)(a1 + 32);
    id v20 = [v19 countByEnumeratingWithState:&v42 objects:v50 count:16];
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = *(void *)v43;
      do
      {
        for (j = 0; j != v21; j = (char *)j + 1)
        {
          if (*(void *)v43 != v22) {
            objc_enumerationMutation(v19);
          }
          id v24 = +[UIImage _mapkit_transitArtworkImageWithDataSource:*(void *)(*((void *)&v42 + 1) + 8 * (void)j) size:8 scale:*(double *)(a1 + 64)];
          id v25 = v24;
          if (!v5 || v24 && ([v24 size], double v28 = v26 * v27, objc_msgSend(v5, "size"), v28 > v29 * v30))
          {
            id v31 = v25;

            id v5 = v31;
          }
        }
        id v21 = [v19 countByEnumeratingWithState:&v42 objects:v50 count:16];
      }
      while (v21);
    }
  }
  [v5 size];
  if (v5 && v32 >= 20.0)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100AE0334;
    block[3] = &unk_1012E5F78;
    id v41 = *(id *)(a1 + 56);
    id v40 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    id v33 = v41;
  }
  else
  {
    id v34 = [*(id *)(a1 + 40) _imageForStyleAttributes:*(void *)(a1 + 48) screenScale:*(unsigned __int8 *)(a1 + 76) isNightMode:*(double *)(a1 + 64)];
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_100AE0348;
    v36[3] = &unk_1012E5F78;
    id v35 = *(id *)(a1 + 56);
    id v37 = v34;
    id v38 = v35;
    id v33 = v34;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v36);
  }
}

uint64_t sub_100AE0334(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_100AE0348(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100AE0C60(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_1016107D8;
  qword_1016107D8 = (uint64_t)v1;

  [(id)qword_1016107D8 setDateStyle:0];
  id v3 = (void *)qword_1016107D8;

  [v3 setTimeStyle:1];
}

id sub_100AE233C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cleanUp];
}

void sub_100AE29F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_100AE2A28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (void *)*((void *)WeakRetained + 9);
    *((void *)WeakRetained + 9) = 0;

    id v4 = sub_1005761B4();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Nilling out _strongself as a fallback in EVOnboardingController.", v5, 2u);
    }
  }
}

uint64_t sub_100AE4068(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a2;
  uint64_t v6 = [v4 identifier];
  int v7 = [v5 identifier];

  unsigned int v8 = [v6 isEqual:v7];
  if (a3 && v8)
  {
    double v10 = sub_1005762E4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      int v13 = 136315906;
      double v14 = "-[EVOnboardingController _finishConfiguringVehicle:]_block_invoke";
      __int16 v15 = 2080;
      double v16 = "EVOnboardingController.m";
      __int16 v17 = 1024;
      int v18 = 411;
      __int16 v19 = 2080;
      id v20 = "index == 0";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", (uint8_t *)&v13, 0x26u);
    }

    if (sub_100BB36BC())
    {
      double v11 = sub_1005762E4();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        double v12 = +[NSThread callStackSymbols];
        int v13 = 138412290;
        double v14 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v13, 0xCu);
      }
    }
  }
  return v8 ^ 1;
}

void sub_100AE4378(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 72);
  *(void *)(v1 + 72) = 0;
}

void sub_100AE4F50(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCInlinePOIEnrichmentViewController");
  uint64_t v2 = (void *)qword_1016107E8;
  qword_1016107E8 = (uint64_t)v1;
}

void sub_100AE521C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

NSString *__cdecl sub_100AE5244(id a1, MSPSharedTripContact *a2, unint64_t a3)
{
  return (NSString *)[(MSPSharedTripContact *)a2 stringValue];
}

void sub_100AE524C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5 = (id *)(a1 + 32);
  unsigned int v8 = a4;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  [WeakRetained _updateSearchResults:v6];

  v8[2]();
}

void sub_100AE5544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AE5568(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v4);

  if (WeakRetained)
  {
    id v6 = (id *)objc_loadWeakRetained(v4);
    objc_storeStrong(v6 + 3, a2);
  }
}

void sub_100AE5E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AE5E24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained dismissHandler];

  uint64_t v2 = (void *)v3;
  if (v3)
  {
    (*(void (**)(uint64_t))(v3 + 16))(v3);
    uint64_t v2 = (void *)v3;
  }
}

void sub_100AE6534(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  id v2 = [v1 tableFooterView];
  [v2 frame];
  [v1 scrollRectToVisible:1 animated:YES];
}

void sub_100AE68E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_100AE6914(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned int v8 = WeakRetained;
    [WeakRetained _cancelDismiss];
    uint64_t v3 = (void *)v8[7];
    id v4 = [*(id *)(a1 + 32) stringValue];
    id v5 = [v3 objectForKey:v4];

    [v5 setSharingState:1 animated:1];
    id v6 = [v8 keyboardMode];
    id v7 = [v6 chromeViewController];
    [v7 captureUserAction:9025];

    id WeakRetained = v8;
  }
}

void sub_100AE69E4(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  double v10 = WeakRetained;
  if (v8 || !WeakRetained)
  {
    __int16 v17 = sub_100576A9C();
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
LABEL_16:

      goto LABEL_17;
    }
    id v18 = *(id *)(a1 + 32);
    if (!v18)
    {
      id v23 = @"<nil>";
      goto LABEL_15;
    }
    __int16 v19 = (objc_class *)objc_opt_class();
    id v20 = NSStringFromClass(v19);
    if (objc_opt_respondsToSelector())
    {
      id v21 = [v18 performSelector:"accessibilityIdentifier"];
      uint64_t v22 = v21;
      if (v21 && ![v21 isEqualToString:v20])
      {
        id v23 = +[NSString stringWithFormat:@"%@<%p, %@>", v20, v18, v22];

        goto LABEL_12;
      }
    }
    id v23 = +[NSString stringWithFormat:@"%@<%p>", v20, v18];
LABEL_12:

LABEL_15:
    *(_DWORD *)long long buf = 138543618;
    double v30 = v23;
    __int16 v31 = 2112;
    id v32 = v8;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "[%{public}@] CarPlay failed to fetch requiresUserConfirmation flag: %@", buf, 0x16u);

    goto LABEL_16;
  }
  if (a2)
  {
    double v11 = [*(id *)(a1 + 40) name];
    double v12 = [*(id *)(a1 + 40) handle];
    int v13 = CarInterruptionUserInfoForSharedTripSenderInfo(v11, v12);

    double v14 = *(void **)(a1 + 48);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_100AE6CE4;
    v24[3] = &unk_1013170A0;
    id v15 = v13;
    id v25 = v15;
    objc_copyWeak(&v28, (id *)(a1 + 64));
    uint64_t v26 = *(void *)(a1 + 32);
    id v27 = *(id *)(a1 + 56);
    id v16 = [v14 presentInterruptionOfKind:14 userInfo:v15 completionHandler:v24];

    objc_destroyWeak(&v28);
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
LABEL_17:
}

void sub_100AE6CC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AE6CE4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"kMapsInterruptionSharedTripSenderHandle"];
    id v4 = +[MSPSharedTripService sharedInstance];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100AE6DE4;
    void v6[3] = &unk_1012F4230;
    objc_copyWeak(&v8, (id *)(a1 + 56));
    id v5 = *(void **)(a1 + 48);
    void v6[4] = *(void *)(a1 + 40);
    id v7 = v5;
    [v4 reportUserConfirmationOfSharingIdentity:v3 completion:v6];

    objc_destroyWeak(&v8);
  }
}

void sub_100AE6DD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AE6DE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (v3 || !WeakRetained)
  {
    id v6 = sub_100576A9C();
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
LABEL_14:

      goto LABEL_15;
    }
    id v7 = *(id *)(a1 + 32);
    if (!v7)
    {
      double v12 = @"<nil>";
      goto LABEL_13;
    }
    id v8 = (objc_class *)objc_opt_class();
    uint64_t v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      double v10 = [v7 performSelector:"accessibilityIdentifier"];
      double v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        double v12 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_11;
      }
    }
    double v12 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_11:

LABEL_13:
    *(_DWORD *)long long buf = 138543618;
    double v14 = v12;
    __int16 v15 = 2112;
    id v16 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "[%{public}@] CarPlay failed to report requiresUserConfirmation: %@", buf, 0x16u);

    goto LABEL_14;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_15:
}

void sub_100AE7748(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) contactsFromCNContact:a2];
  [v2 addObjectsFromArray:v3];
}

id sub_100AE785C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  if (a2)
  {
    id v4 = [*(id *)(a1 + 32) _loadingSection];
  }
  else
  {
    id v5 = [a3 traitCollection];
    id v4 = [v3 _thumbnailGalleryLayoutForTraitCollection:v5];
  }

  return v4;
}

void sub_100AE8EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AE8F0C(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _updateState:*(void *)(a1 + 40)];
  }
}

void sub_100AE9054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AE9078(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _updateState:*(void *)(a1 + 40)];
  }
}

void sub_100AE98B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [TransitRequestInfoProvider alloc];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = [*(id *)(a1 + 40) _timing:*(void *)(a1 + 48) forTransportType:3];
  id v7 = [(TransitRequestInfoProvider *)v4 initWithPreferences:v5 timing:v6];
  [v3 setObject:v7 forKeyedSubscript:&off_1013AA2B8];

  id v12 = [v3 objectForKeyedSubscript:&off_1013AA2D0];
  id v8 = [DrivingRequestInfoProvider alloc];
  uint64_t v9 = [v12 drivePreferences];
  double v10 = [*(id *)(a1 + 40) _timing:*(void *)(a1 + 48) forTransportType:1];
  double v11 = [(DrivingRequestInfoProvider *)v8 initWithPreferences:v9 timing:v10];
  [v3 setObject:v11 forKeyedSubscript:&off_1013AA2D0];
}

void sub_100AE9AC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [DrivingRequestInfoProvider alloc];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = [*(id *)(a1 + 40) _timing:*(void *)(a1 + 48) forTransportType:1];
  id v7 = [(DrivingRequestInfoProvider *)v4 initWithPreferences:v5 timing:v6];
  [v3 setObject:v7 forKeyedSubscript:&off_1013AA2D0];

  id v12 = [v3 objectForKeyedSubscript:&off_1013AA2B8];
  id v8 = [TransitRequestInfoProvider alloc];
  uint64_t v9 = [v12 transitPreferences];
  double v10 = [*(id *)(a1 + 40) _timing:*(void *)(a1 + 48) forTransportType:3];
  double v11 = [(TransitRequestInfoProvider *)v8 initWithPreferences:v9 timing:v10];
  [v3 setObject:v11 forKeyedSubscript:&off_1013AA2B8];
}

void sub_100AE9CD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [WalkingRequestInfoProvider alloc];
  uint64_t v5 = *(void *)(a1 + 32);
  id v7 = [*(id *)(a1 + 40) _timing:*(void *)(a1 + 48) forTransportType:2];
  id v6 = [(WalkingRequestInfoProvider *)v4 initWithPreferences:v5 timing:v7];
  [v3 setObject:v6 forKeyedSubscript:&off_1013AA2E8];
}

void sub_100AE9E58(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [CyclingRequestInfoProvider alloc];
  uint64_t v5 = *(void *)(a1 + 32);
  id v7 = [*(id *)(a1 + 40) _timing:*(void *)(a1 + 48) forTransportType:5];
  id v6 = [(CyclingRequestInfoProvider *)v4 initWithPreferences:v5 timing:v7];
  [v3 setObject:v6 forKeyedSubscript:&off_1013AA300];
}

void sub_100AEA7C0(uint64_t a1)
{
  os_log_t v1 = [*(id *)(a1 + 32) delegate];
  id v2 = [v1 appCoordinator];
  id v3 = [v2 mapsSceneDelegate];
  id v4 = [v3 window];
  id v6 = [v4 windowScene];

  if (![v6 activationState] || objc_msgSend(v6, "activationState") == (id)1)
  {
    uint64_t v5 = +[UIApplication sharedApplication];
    [v5 _saveRestorationUserActivityStateForScene:v6];
  }
}

void sub_100AEA88C(uint64_t a1)
{
  id v2 = sub_100084D38();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412547;
    uint64_t v6 = v3;
    __int16 v7 = 2113;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Archiving MapsActivity (tag %@): %{private}@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_100AEAF58(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf)
{
  if (a2 == 1)
  {
    id v11 = objc_begin_catch(a1);
    id v12 = sub_100084D38();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v13 = [v11 description];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&buf, 0xCu);
    }
    objc_end_catch();
    JUMPOUT(0x100AEAF04);
  }
  _Unwind_Resume(a1);
}

void sub_100AEB010(id a1)
{
  os_log_t v1 = +[NSFileManager _maps_globalCachesURL];
  if (!v1)
  {
    id v2 = NSHomeDirectory();
    os_log_t v1 = +[NSURL URLWithString:v2];
  }
  uint64_t v3 = [v1 URLByAppendingPathComponent:@"state.txt"];
  uint64_t v4 = [v3 path];
  int v5 = (void *)qword_1016107F8;
  qword_1016107F8 = v4;

  uint64_t v6 = sub_100084D38();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    int v7 = 138412290;
    uint64_t v8 = qword_1016107F8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "TEST_MODE  write state at %@", (uint8_t *)&v7, 0xCu);
  }
}

id sub_100AEBCF4()
{
  id v0 = +[NSBundle mainBundle];
  os_log_t v1 = [v0 localizedStringForKey:@"Clear [Modal Card Header]" value:@"localized string not found" table:0];

  return v1;
}

id sub_100AEBD5C()
{
  id v0 = +[NSBundle mainBundle];
  os_log_t v1 = [v0 localizedStringForKey:@"Cancel [Modal Card Header]" value:@"localized string not found" table:0];

  return v1;
}

id sub_100AEBDC4()
{
  id v0 = +[NSBundle mainBundle];
  os_log_t v1 = [v0 localizedStringForKey:@"Done [Modal Card Header]" value:@"localized string not found" table:0];

  return v1;
}

id sub_100AEBE2C()
{
  id v0 = +[NSBundle mainBundle];
  os_log_t v1 = [v0 localizedStringForKey:@"End [Modal Card Header Carplay Mode]" value:@"localized string not found" table:0];

  return v1;
}

id sub_100AEBE94()
{
  id v0 = +[NSBundle mainBundle];
  os_log_t v1 = [v0 localizedStringForKey:@"Apply [Modal Card Header]" value:@"localized string not found" table:0];

  return v1;
}

id sub_100AED0A8(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:*(double *)(a1 + 32)];
}

id sub_100AED0BC(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:1 adaptiveFont:*(double *)(a1 + 32)];
}

id sub_100AED0D4(uint64_t a1)
{
  return +[UIFont _maps_systemFontWithFixedSize:*(double *)(a1 + 32)];
}

id sub_100AED0E8(uint64_t a1)
{
  return +[UIFont _maps_systemFontWithFixedSize:1 adaptiveFont:*(double *)(a1 + 32)];
}

id sub_100AED100(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:*(double *)(a1 + 32)];
}

id sub_100AED114(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:1 adaptiveFont:*(double *)(a1 + 32)];
}

id sub_100AED12C(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:*(double *)(a1 + 32)];
}

UIFont *__cdecl sub_100AED22C(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED23C(id a1)
{
  return (UIFont *)+[UIFont _maps_systemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED24C(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED25C(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED330(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED340(id a1)
{
  return (UIFont *)+[UIFont _maps_systemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED350(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED360(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED41C(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED42C(id a1)
{
  return (UIFont *)+[UIFont _maps_systemFontWithFixedSize:22.0];
}

UIFont *__cdecl sub_100AED43C(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:22.0];
}

id sub_100AED6E4(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:*(double *)(a1 + 32)];
}

id sub_100AED6F8(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:1 adaptiveFont:*(double *)(a1 + 32)];
}

id sub_100AED710(uint64_t a1)
{
  return +[UIFont _maps_systemFontWithFixedSize:*(double *)(a1 + 32)];
}

id sub_100AED724(uint64_t a1)
{
  return +[UIFont _maps_systemFontWithFixedSize:1 adaptiveFont:*(double *)(a1 + 32)];
}

id sub_100AED73C(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:*(double *)(a1 + 32)];
}

id sub_100AED750(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:1 adaptiveFont:*(double *)(a1 + 32)];
}

id sub_100AED768(uint64_t a1)
{
  return +[UIFont _maps_boldSystemFontWithFixedSize:*(double *)(a1 + 32)];
}

UIFont *__cdecl sub_100AED800(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithFixedSize:20.0];
}

UIFont *__cdecl sub_100AED874(id a1)
{
  return (UIFont *)+[UIFont system17SemiBold];
}

int64_t sub_100AEDFF8(id a1, VGChargingNetwork *a2, VGChargingNetwork *a3)
{
  uint64_t v4 = a3;
  int v5 = [(VGChargingNetwork *)a2 name];
  uint64_t v6 = [(VGChargingNetwork *)v4 name];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

VehicleLabelCell *__cdecl sub_100AEE068(id a1, VGChargingNetwork *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = [(VGChargingNetwork *)v3 name];

  if (v4)
  {
    int v5 = objc_opt_new();
    uint64_t v6 = [(VGChargingNetwork *)v3 name];
    [v5 setAccessibilityIdentifier:v6];

    id v7 = [(VGChargingNetwork *)v3 name];
    uint64_t v8 = [v5 label];
    [v8 setText:v7];

    [v5 setSelectionStyle:0];
  }
  else
  {
    uint64_t v9 = sub_1000519B4();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v3;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to create a cell for network: %@", (uint8_t *)&v11, 0xCu);
    }

    int v5 = 0;
  }

  return (VehicleLabelCell *)v5;
}

NSString *__cdecl sub_100AF0834(id a1, NSNumber *a2, unint64_t a3)
{
  uint64_t v3 = [(NSNumber *)a2 unsignedIntegerValue];

  return (NSString *)sub_10082A298(v3);
}

void sub_100AF0A40(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), *(id *)(a1 + 32));
  *(unsigned char *)(*(void *)(a1 + 32) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 vehicleDetailViewController:*(void *)(a1 + 32) deleteVehicle:*(void *)(*(void *)(a1 + 32) + 8)];

  uint64_t v3 = [*(id *)(a1 + 32) presentingViewController];
  [v3 dismissViewControllerAnimated:1 completion:&stru_1013173B8];

  objc_initWeak(&location, *(id *)(a1 + 32));
  dispatch_time_t v4 = dispatch_time(0, 1000000000);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100AF0B7C;
  _OWORD v5[3] = &unk_1012E6708;
  objc_copyWeak(&v6, &location);
  dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, v5);
  objc_destroyWeak(&v6);
  objc_destroyWeak(&location);
}

void sub_100AF0B7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = (void *)WeakRetained[2];
    WeakRetained[2] = 0;
    uint64_t v3 = WeakRetained;

    id WeakRetained = v3;
  }
}

void sub_100AF0C8C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _isMinimumViableVehicle])
  {
    id v2 = [*(id *)(a1 + 32) delegate];
    [v2 vehicleDetailViewController:*(void *)(a1 + 32) saveVehicleEdit:*(void *)(*(void *)(a1 + 32) + 8)];
  }
}

void sub_100AF1698(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) vehicles];
  [*(id *)(a1 + 32) setVehicleCount:[v2 count]];

  uint64_t v3 = [*(id *)(a1 + 32) vehicleBatteryView];
  dispatch_time_t v4 = [v3 vehicle];
  unsigned int v5 = [v4 isPureElectricVehicle];

  if (v5)
  {
    id v6 = [*(id *)(a1 + 40) vehicles];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_100AF17F0;
    v12[3] = &unk_1012F1C18;
    void v12[4] = *(void *)(a1 + 32);
    id v7 = sub_1000990A8(v6, v12);
    uint64_t v8 = [*(id *)(a1 + 32) vehicleBatteryView];
    [v8 setVehicle:v7];
  }
  [*(id *)(a1 + 32) _updateContent];
  [*(id *)(a1 + 32) setTableStructure:0];
  uint64_t v9 = [*(id *)(a1 + 32) tableView];
  [v9 reloadData];

  uint64_t v10 = *(void *)(a1 + 32);
  int v11 = *(void **)(v10 + 16);
  *(void *)(v10 + 16) = 0;
}

id sub_100AF17F0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  unsigned int v5 = *(void **)(a1 + 32);
  id v6 = a2;
  id v7 = [v5 vehicleBatteryView];
  uint64_t v8 = [v7 vehicle];
  uint64_t v9 = [v8 identifier];
  uint64_t v10 = [v6 identifier];

  id v11 = [v9 isEqualToString:v10];
  if (v11) {
    *a4 = 1;
  }
  return v11;
}

void sub_100AF364C(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) mapView];
  id v2 = *(double **)(a1 + 32);
  uint64_t v3 = v2 + 3;
  dispatch_time_t v4 = [v2 view];
  unsigned int v5 = [v4 safeAreaLayoutGuide];
  [v5 layoutFrame];
  [v7 setVisibleMapRect:0 edgePadding:v3[1] v3[2] v3[3] v6 + 20.0 20.0 20.0 20.0];
}

void sub_100AF4084(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 128) problemStatus];
  id v29 = [v2 objectAtIndexedSubscript:0];

  uint64_t v3 = [v29 details];
  unsigned int v4 = [v3 displayStyle];

  unsigned int v5 = v29;
  if (v4 == 4)
  {
    double v6 = *(void **)(a1 + 32);
    id v7 = [v29 details];
    uint64_t v8 = [v7 label];
    uint64_t v9 = [v8 localizedText];
    uint64_t v10 = [v6 labelMarkerOnMapViewWithText:v9];

    if (v10)
    {
      [*(id *)(*(void *)(a1 + 32) + 136) _selectLabelMarker:v10 animated:1];
    }
    else
    {
      id v11 = objc_alloc((Class)MKPlacemark);
      id v12 = [v29 details];
      int v13 = [v12 label];
      double v14 = [v13 center];
      [v14 lat];
      CLLocationDegrees v16 = v15;
      __int16 v17 = [v29 details];
      id v18 = [v17 label];
      __int16 v19 = [v18 center];
      [v19 lng];
      CLLocationCoordinate2D v21 = CLLocationCoordinate2DMake(v16, v20);
      id v22 = [v11 initWithCoordinate:0 addressDictionary:v21.latitude, v21.longitude];

      id v23 = [objc_alloc((Class)MKMapItem) initWithPlacemark:v22];
      id v24 = [v29 details];
      id v25 = [v24 label];
      uint64_t v26 = [v25 localizedText];
      [v23 setName:v26];

      uint64_t v27 = *(void *)(a1 + 32);
      if (*(void *)(v27 + 16)) {
        [*(id *)(v27 + 136) removeAnnotation:];
      }
      id v28 = [[RAPAnnotation alloc] initWithMapItem:v23];
      [*(id *)(*(void *)(a1 + 32) + 136) addAnnotation:v28];
      [*(id *)(*(void *)(a1 + 32) + 136) selectAnnotation:v28 animated:1];
    }
    unsigned int v5 = v29;
  }
}

uint64_t sub_100AF5CC4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100AF6C08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
}

void sub_100AF6C30(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned int v4 = [v3 sender];

  [WeakRetained handleDismissAction:v4];
}

void sub_100AF7630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_100AF767C(uint64_t a1, void *a2, unint64_t a3, char *a4)
{
  id v14 = a2;
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (v7 >= (unint64_t)[*(id *)(a1 + 32) count])
  {
LABEL_8:
    uint64_t v8 = 0;
  }
  else
  {
    while (1)
    {
      uint64_t v8 = [*(id *)(a1 + 32) objectAtIndexedSubscript:v7];
      uint64_t v9 = (char *)[v8 range];
      if ((unint64_t)v9 >= a3 && &v9[-a3] < a4)
      {
        id v11 = (char *)[v8 range];
        if (&v11[v12] <= &a4[a3]) {
          break;
        }
      }
      ++v7;

      if (v7 >= (unint64_t)[*(id *)(a1 + 32) count]) {
        goto LABEL_8;
      }
    }
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v7 + 1;
  }
  int v13 = [[RelatedSearchSuggestionComponent alloc] initWithDisplayText:v14 substitute:v8];
  [*(id *)(a1 + 40) addObject:v13];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) += [v14 length];
}

void sub_100AF8734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AF8750(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained startedTest];

  id v4 = objc_loadWeakRetained(v2);
  [v4 runStepZoomTest:*(double *)(a1 + 40)];
}

void sub_100AF88DC(id a1, unint64_t a2)
{
  id v2 = +[GEOTileLoader modernLoader];
  [v2 clearAllCaches];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

void sub_100AF8958(uint64_t a1)
{
  id v2 = +[NSString stringWithFormat:@"stepZoom:zoom%02d", (int)*(double *)(a1 + 40)];
  [*(id *)(a1 + 32) startedSubTest:v2];
  id v3 = [MapsAppTestCirclePan alloc];
  id v4 = [*(id *)(a1 + 32) app];
  unsigned int v5 = [(MapsAppTestCirclePan *)v3 initWithApplication:v4 testName:v2 options:0];
  uint64_t v6 = *(void *)(a1 + 32);
  unint64_t v7 = *(void **)(v6 + 64);
  *(void *)(v6 + 64) = v5;

  [*(id *)(*(void *)(a1 + 32) + 64) setPitch:0.0];
  [*(id *)(*(void *)(a1 + 32) + 64) setYaw:0.0];
  [*(id *)(a1 + 32) _regionSizeForZoom:*(double *)(a1 + 40)];
  VKLocationCoordinate3DMake();
  [*(id *)(*(void *)(a1 + 32) + 64) setEndPoint:];
  [*(id *)(*(void *)(a1 + 32) + 64) setAltitudeIsRegionSize:1];
  [*(id *)(*(void *)(a1 + 32) + 64) setAnimationDuration:*(double *)(*(void *)(a1 + 32) + 96)];
  [*(id *)(*(void *)(a1 + 32) + 64) setUseTestNameInResults:1];
  uint64_t v8 = [*(id *)(a1 + 32) results];
  [*(id *)(*(void *)(a1 + 32) + 64) setResults:v8];

  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v9 = *(void **)(*(void *)(a1 + 32) + 64);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100AF8B9C;
  void v11[3] = &unk_1012F27A8;
  objc_copyWeak(v13, &location);
  id v10 = v2;
  id v12 = v10;
  v13[1] = *(id *)(a1 + 40);
  [v9 setTestFinshdCallback:v11];
  [*(id *)(*(void *)(a1 + 32) + 64) runTest];

  objc_destroyWeak(v13);
  objc_destroyWeak(&location);
}

void sub_100AF8B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AF8B9C(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained stepLoadCompleted:*(void *)(a1 + 32)];

  id v4 = objc_loadWeakRetained(v2);
  double v5 = *(double *)(a1 + 48);
  id v6 = v4;
  [v6 runStepZoomTest:v5 + (double)(uint64_t)[v6 _zoomAmount]];
}

id sub_100AF8EC0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainVKMapView];
  unsigned int v3 = [v2 isFullyDrawn];

  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    return _[v4 onFullyDrawn:0];
  }
  else
  {
    return [v4 setupFullyDrawnNotification:"onFullyDrawn:"];
  }
}

SearchResult *sub_100AF9C2C(uint64_t a1, void *a2, unint64_t a3)
{
  if (*(void *)(a1 + 32) <= a3)
  {
    id v4 = [a2 mapItemStorage];
    if (v4) {
      unsigned int v3 = [[SearchResult alloc] initWithGEOMapItem:v4];
    }
    else {
      unsigned int v3 = 0;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }

  return v3;
}

void sub_100AFAD50(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v5);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 88));
  _Unwind_Resume(a1);
}

void sub_100AFADA4()
{
}

void sub_100AFADAC()
{
}

void sub_100AFADB4(uint64_t a1)
{
  id v4 = objc_alloc_init(GeoCellDataSaverHistoryTableViewController);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v3 = [WeakRetained navigationController];
  [v3 pushViewController:v4 animated:1];
}

void sub_100AFAE2C(uint64_t a1)
{
  id v4 = [[GeoRequestCounterTableViewController alloc] initWithStyle:1];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v3 = [WeakRetained navigationController];
  [v3 pushViewController:v4 animated:1];
}

void sub_100AFAEAC(uint64_t a1)
{
  id v4 = [[GeoRequestResponseLogTableViewController alloc] initWithStyle:1];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v3 = [WeakRetained navigationController];
  [v3 pushViewController:v4 animated:1];
}

void sub_100AFAF2C(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:0 content:&stru_101317478];
}

void sub_100AFAF5C(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v3 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Clear PlaceData cache" action:&stru_101317498];
}

void sub_100AFAFD4(id a1)
{
  id v1 = +[GEOPlaceCardRequester sharedRequester];
  [v1 clearCache];
}

void sub_100AFB01C(uint64_t a1)
{
  id v4 = [[MapDataSubscriptionsDebugViewController alloc] initWithStyle:2];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained navigationController];
  [v3 pushViewController:v4 animated:1];
}

void sub_100AFB09C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:@"Offline" content:&stru_1013174B8];
  double v5 = +[NSBundle bundleWithPath:@"/System/Library/PrivateFrameworks/GeoServices.framework/MapsOfflineService.bundle"];
  uint64_t v6 = [v5 infoDictionary];
  unint64_t v7 = [v6 objectForKeyedSubscript:@"CFBundleVersion"];

  if (v7)
  {
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    id v19[2] = sub_100AFB380;
    v19[3] = &unk_1012EE018;
    id v20 = v7;
    id v8 = [v3 addSectionWithTitle:@"Offline Services Version" content:v19];
  }
  objc_initWeak(&location, v3);
  uint64_t v9 = +[GEOOfflineDataAccess sharedInstance];
  id v10 = &_dispatch_main_q;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_100AFB3AC;
  v16[3] = &unk_1013174E0;
  void v16[4] = *(void *)(a1 + 32);
  objc_copyWeak(&v17, &location);
  [v9 getOfflineVersionMetadataWithCallbackQueue:&_dispatch_main_q callback:v16];

  id v11 = [v3 addSectionWithTitle:@"Offline Tips" content:&stru_101317500];
  id v12 = [v3 addSectionWithTitle:0 content:&stru_101317580];
  uint64_t v13 = *(void *)(a1 + 32);
  if (*(void *)(v13 + 112))
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    void v15[2] = sub_100AFB72C;
    v15[3] = &unk_1012EE018;
    void v15[4] = v13;
    id v14 = [v3 addSectionWithTitle:@"Offline Data Versions" content:v15];
  }
  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
}

void sub_100AFB320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AFB348(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Debug Logs Enabled", GeoOfflineConfig_DebugLogsEnabled[0], GeoOfflineConfig_DebugLogsEnabled[1] geoConfigKey];
}

id sub_100AFB380(uint64_t a1, void *a2)
{
  return [a2 addReadOnlyRowWithTitle:*(void *)(a1 + 32) value:0];
}

void sub_100AFB3AC(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v6 = a3;
  if (v8 && *(id *)(*(void *)(a1 + 32) + 112) != v8 && (objc_msgSend(v8, "isEqual:") & 1) == 0)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 112), a2);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained rebuildSections];
  }
}

void sub_100AFB45C(id a1, MapsDebugTableSection *a2)
{
  double v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Clear Pre-Arrival and Airport Arrival Tip Dismissal History" action:&stru_101317520];
  id v3 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Simulate an Offline Maps Welcome Screen \"Remind Me Later\" tap now. (Also clears dismissal history)" action:&stru_101317540];
  id v4 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Simulate an Offline Maps Welcome Screen \"Remind Me Later\" tap 15 days ago. (Also clears dismissal history)" action:&stru_101317560];
  [(MapsDebugTableSection *)v5 setFooter:@"This will set the \"Remind Me Later\" tap date to a little more than two weeks in the past, which in practice means the Home Area tip will just show up. You will need to quit and relaunch Maps to see the tip."];
}

void sub_100AFB500(id a1)
{
  GEOConfigSetDate();

  GEOConfigSetDate();
}

void sub_100AFB548(id a1)
{
  id v1 = +[NSDate date];
  GEOConfigSetDate();
  GEOConfigSetDate();
  GEOConfigSetDate();
}

void sub_100AFB5C8(id a1)
{
  id v4 = +[NSDate date];
  id v1 = objc_alloc_init((Class)NSDateComponents);
  [v1 setDay:-15];
  id v2 = +[NSCalendar currentCalendar];
  id v3 = [v2 dateByAddingComponents:v1 toDate:v4 options:0];

  GEOConfigSetDate();
  GEOConfigSetDate();
  GEOConfigSetDate();
}

void sub_100AFB6A8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Reset Autoupdate Disclaimer Shown" action:&stru_1013175A0];
}

void sub_100AFB6DC(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"OfflineMapsAutoUpdateDisclaimerDisplayed"];
}

void sub_100AFB72C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(*(void *)(a1 + 32) + 112);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100AFB7D0;
  void v6[3] = &unk_1013175C8;
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateLayerVersions:v6];
}

void sub_100AFB7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = *(void **)(a1 + 32);
  if (a2 >= 0x15)
  {
    id v5 = +[NSString stringWithFormat:@"(unknown: %i)", a2];
  }
  else
  {
    id v5 = off_101317E68[(int)a2];
  }
  id v8 = v5;
  id v6 = +[NSString stringWithFormat:@"%llu", a3];
  id v7 = [v4 addReadOnlyRowWithTitle:v8 value:v6];
}

void sub_100AFB888(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:@"Eval Mode" content:&stru_1013175E8];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100AFB9A4;
  void v6[3] = &unk_1012E7EF8;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v5 = [v3 addSectionWithTitle:@"Uploads" content:v6];
  objc_destroyWeak(&v7);
}

void sub_100AFB958(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AFB96C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Eval Mode Enabled", GeoAnalyticsConfig_AnalyticsPipelineEvalModeEnabled[0], GeoAnalyticsConfig_AnalyticsPipelineEvalModeEnabled[1] geoConfigKey];
}

void sub_100AFB9A4(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Keep Upload Files" geoConfigKey:GeoAnalyticsConfig__debug_KeepUploadFiles[0] GeoAnalyticsConfig__debug_KeepUploadFiles[1]];
  id v5 = [v3 addSwitchRowWithTitle:@"Upload History Enabled" geoConfigKey:GeoAnalyticsConfig__debug_UploadCountersEnabled[0] GeoAnalyticsConfig__debug_UploadCountersEnabled[1]];
  id v6 = [v3 addButtonRowWithTitle:@"Delete History" action:&stru_101317608];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100AFBBA8;
  void v11[3] = &unk_1012E6708;
  a1 += 4;
  objc_copyWeak(&v12, a1);
  id v7 = [v3 addNavigationRowWithTitle:@"Inflight Uploads" action:v11];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_100AFBC28;
  v9[3] = &unk_1012E6708;
  objc_copyWeak(&v10, a1);
  id v8 = [v3 addNavigationRowWithTitle:@"Completed Uploads" action:v9];
  objc_destroyWeak(&v10);
  objc_destroyWeak(&v12);
}

void sub_100AFBB30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AFBB54(id a1)
{
  id v1 = +[GEOAPServiceManager sharedManager];
  [v1 flushUploadHistoryWithCompletion:&stru_101317628];
}

void sub_100AFBBA8(uint64_t a1)
{
  id v4 = [[_TtC4Maps33GEOAPCurrentUploadDebugController alloc] initWithStyle:2];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained navigationController];
  [v3 pushViewController:v4 animated:1];
}

void sub_100AFBC28(uint64_t a1)
{
  id v4 = [[_TtC4Maps36GEOAPHistoricalUploadDebugController alloc] initWithStyle:2];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained navigationController];
  [v3 pushViewController:v4 animated:1];
}

void sub_100AFBD68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100AFBD84(uint64_t a1, void *a2)
{
  id v3 = a2;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100AFBFA0;
  id v18[3] = &unk_1012E6708;
  objc_copyWeak(&v19, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Prompt Apple Connect Auth" action:v18];
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 3221225472;
  uint64_t v15 = sub_100AFC04C;
  uint64_t v16 = &unk_1012E6708;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v5 = [v3 addButtonRowWithTitle:@"Refresh Maps Auth Tokens" action:&v13];
  id v6 = [v3 addButtonRowWithTitle:@"Delete Maps Auth Tokens" action:&stru_101317648 v13, v14, v15, v16];
  [v6 setIsDestructive:1];

  id v7 = GEOConfigGetString();
  id v8 = GEOConfigGetString();
  if (v7) {
    CFStringRef v9 = @"Yes";
  }
  else {
    CFStringRef v9 = @"No";
  }
  id v10 = [v3 addReadOnlyRowWithTitle:@"Has MAT" value:v9];
  if (v8) {
    CFStringRef v11 = @"Yes";
  }
  else {
    CFStringRef v11 = @"No";
  }
  id v12 = [v3 addReadOnlyRowWithTitle:@"Has MRT" value:v11];

  objc_destroyWeak(&v17);
  objc_destroyWeak(&v19);
}

void sub_100AFBF70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AFBFA0(id *a1)
{
  uint64_t v2 = +[GEOMapsAuthServiceHelper sharedAuthHelper];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  [v2 addMapsAuthDidFinishObserver:WeakRetained forRequestType:GEOMapsAuthACToken];

  id v4 = objc_loadWeakRetained(a1);
  +[MapsAppleConnectAuthViewController presentAppleConnectAuthControllerFrom:v4 withProxyURL:0];
}

void sub_100AFC04C(uint64_t a1)
{
  uint64_t v2 = +[GEOMapsAuthServiceHelper sharedAuthHelper];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v2 addMapsAuthDidFinishObserver:WeakRetained forRequestType:GEOMapsAuthMRT];

  id v4 = +[GEOMapsAuthServiceHelper sharedAuthHelper];
  [v4 renewMapsAuthProxyToken:1 fromToken:0 authProxyURL:0 suppressNotification:1];
}

void sub_100AFC0F4(id a1)
{
  id v1 = +[GEOMapsAuthServiceHelper sharedAuthHelper];
  [v1 invalidateTokens];
}

void sub_100AFC2D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100AFC2F8(id *a1, void *a2)
{
  id v3 = a2;
  [a1[4] addObject:v3];
  [a1[5] addObject:v3];
  id v4 = [v3 addSectionWithTitle:@"Current Environment" content:&stru_101317668];
  id v6 = _NSConcreteStackBlock;
  uint64_t v7 = 3221225472;
  id v8 = sub_100AFC4B4;
  CFStringRef v9 = &unk_1012EE3E8;
  objc_copyWeak(&v11, a1 + 8);
  id v10 = a1[6];
  id v5 = [v3 addSectionWithTitle:@"Flags" content:&v6];
  [a1[7] _addAuthTokenSectionTo:v3, v6, v7, v8, v9];

  objc_destroyWeak(&v11);
}

void sub_100AFC404(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AFC41C(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  uint64_t v2 = +[GEOResourceManifestManager modernManager];
  id v3 = [v2 activeTileGroup];

  id v4 = [v3 environment];
  id v5 = [(MapsDebugTableSection *)v6 addReadOnlyRowWithTitle:v4 value:&stru_101324E70];
}

void sub_100AFC4B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_100AFC754;
  v20[3] = &unk_1012E6708;
  objc_copyWeak(&v21, (id *)(a1 + 40));
  id v4 = [v3 addButtonRowWithTitle:@"Get / Update Feature Flags" action:v20];
  id v5 = [v3 addButtonRowWithTitle:@"Delete Feature Flags" action:&stru_101317688];
  [v5 setIsDestructive:1];

  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v6 = [*(id *)(a1 + 32) features];
  id v7 = [v6 countByEnumeratingWithState:&v16 objects:v22 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        id v10 = v3;
        if (*(void *)v17 != v8) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        id v12 = [v11 name];
        void v14[4] = v11;
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        void v15[2] = sub_100AFC834;
        v15[3] = &unk_1012E7F80;
        void v15[4] = v11;
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472;
        v14[2] = sub_100AFC858;
        void v14[3] = &unk_1012E7D28;
        id v13 = [v10 addSwitchRowWithTitle:v12 get:v15 set:v14];

        id v3 = v10;
      }
      id v7 = [v6 countByEnumeratingWithState:&v16 objects:v22 count:16];
    }
    while (v7);
  }

  objc_destroyWeak(&v21);
}

void sub_100AFC728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
}

void sub_100AFC754(uint64_t a1)
{
  uint64_t v2 = +[GEOMapsAuthServiceHelper sharedAuthHelper];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v2 addMapsAuthDidFinishObserver:WeakRetained forRequestType:GEOMapsAuthFeatureFlags];

  id v4 = +[GEOMapsAuthServiceHelper sharedAuthHelper];
  [v4 requestFeatureFlagsWithURL:0 suppressNotification:1];
}

void sub_100AFC7F4(id a1)
{
  _GEOConfigRemoveValue();

  _GEOConfigRemoveValue();
}

BOOL sub_100AFC834(uint64_t a1)
{
  return [*(id *)(a1 + 32) state] == (id)1;
}

id sub_100AFC858(uint64_t a1, int a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  return [v2 setState:v3];
}

void sub_100AFC9B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AFC9D0(id *a1, void *a2)
{
  id v3 = a2;
  [a1[4] addObject:v3];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100AFCBC0;
  v17[3] = &unk_1012EE018;
  id v18 = a1[5];
  id v4 = [v3 addSectionWithTitle:0 content:v17];
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472;
  uint64_t v14 = sub_100AFDDFC;
  uint64_t v15 = &unk_1012E7EF8;
  objc_copyWeak(&v16, a1 + 7);
  id v5 = [v3 addSectionWithTitle:0 content:&v12];
  [a1[6] _addAuthTokenSectionTo:v3, v12, v13, v14, v15];
  id v6 = +[GEOPlatform sharedPlatform];
  unsigned int v7 = [v6 isInternalInstall];

  if (v7)
  {
    id v8 = [v3 addSectionWithTitle:@"Test auth push notifications" content:&stru_1013178F0];
    id v9 = [v3 addSectionWithTitle:0 content:&stru_1013179F0];
  }
  id v10 = [v3 addSectionWithTitle:@"Debug Service Flags" content:&stru_101317A50];
  id v11 = [v3 addSectionWithTitle:@"Show Environment on Map" content:&stru_101317AB0];
  objc_destroyWeak(&v16);
}

void sub_100AFCBA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AFCBC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v5 = [v3 addNavigationRowWithTitle:@"Active Tile Group" viewControllerContent:&stru_1013176D0];
  id v6 = [v3 addButtonRowWithTitle:@"Update Resource Manifest" action:&stru_1013176F0];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100AFD988;
  void v8[3] = &unk_1012F1368;
  id v9 = *(id *)(a1 + 32);
  id v7 = [v3 addNavigationRowWithTitle:@"Resource Filters" viewControllerContent:v8];
}

void sub_100AFCCC8(id a1, MapsDebugValuesViewController *a2)
{
  uint64_t v2 = a2;
  id v3 = +[GEOResourceManifestManager modernManager];
  id v4 = [v3 activeTileGroup];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100AFCD98;
  v7[3] = &unk_1012EE018;
  id v8 = v4;
  id v5 = v4;
  id v6 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:0 content:v7];
}

void sub_100AFCD98(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(v3, "addReadOnlyRowWithTitle:valueFormat:", @"Tile Group Id", @"%u", objc_msgSend(*(id *)(a1 + 32), "identifier"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100AFCE6C;
  void v6[3] = &unk_1012F1368;
  id v7 = *(id *)(a1 + 32);
  id v5 = [v3 addNavigationRowWithTitle:@"Tile Sets" viewControllerContent:v6];
}

void sub_100AFCE6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v4 = [*(id *)(a1 + 32) tileSets];
  id v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        id v10 = [v9 style];
        id v11 = @"RASTER_STANDARD";
        switch((int)v10)
        {
          case 0:
            break;
          case 1:
            id v11 = @"VECTOR_STANDARD";
            break;
          case 2:
            id v11 = @"VECTOR_TRAFFIC_SEGMENTS_FOR_RASTER";
            break;
          case 3:
            id v11 = @"VECTOR_TRAFFIC_INCIDENTS_FOR_RASTER";
            break;
          case 4:
            id v11 = @"VECTOR_TRAFFIC_SEGMENTS_AND_INCIDENTS_FOR_RASTER";
            break;
          case 5:
            id v11 = @"RASTER_STANDARD_BACKGROUND";
            break;
          case 6:
            id v11 = @"RASTER_HYBRID";
            break;
          case 7:
            id v11 = @"RASTER_SATELLITE";
            break;
          case 8:
            id v11 = @"RASTER_TERRAIN";
            break;
          case 11:
            id v11 = @"VECTOR_BUILDINGS";
            break;
          case 12:
            id v11 = @"VECTOR_TRAFFIC";
            break;
          case 13:
            id v11 = @"VECTOR_POI";
            break;
          case 14:
            id v11 = @"SPUTNIK_METADATA";
            break;
          case 15:
            id v11 = @"SPUTNIK_C3M";
            break;
          case 16:
            id v11 = @"SPUTNIK_DSM";
            break;
          case 17:
            id v11 = @"SPUTNIK_DSM_GLOBAL";
            break;
          case 18:
            id v11 = @"VECTOR_REALISTIC";
            break;
          case 19:
            id v11 = @"VECTOR_LEGACY_REALISTIC";
            break;
          case 20:
            id v11 = @"VECTOR_ROADS";
            break;
          case 21:
            id v11 = @"RASTER_VEGETATION";
            break;
          case 22:
            id v11 = @"VECTOR_TRAFFIC_SKELETON";
            break;
          case 23:
            id v11 = @"RASTER_COASTLINE_MASK";
            break;
          case 24:
            id v11 = @"RASTER_HILLSHADE";
            break;
          case 25:
            id v11 = @"VECTOR_TRAFFIC_WITH_GREEN";
            break;
          case 26:
            id v11 = @"VECTOR_TRAFFIC_STATIC";
            break;
          case 27:
            id v11 = @"RASTER_COASTLINE_DROP_MASK";
            break;
          case 28:
            id v11 = @"VECTOR_TRAFFIC_SKELETON_WITH_HISTORICAL";
            break;
          case 29:
            id v11 = @"VECTOR_SPEED_PROFILES";
            break;
          case 30:
            id v11 = @"VECTOR_VENUES";
            break;
          case 31:
            id v11 = @"RASTER_DOWN_SAMPLED";
            break;
          case 32:
            id v11 = @"RASTER_COLOR_BALANCED";
            break;
          case 33:
            id v11 = @"RASTER_SATELLITE_NIGHT";
            break;
          case 34:
            id v11 = @"SPUTNIK_VECTOR_BORDER";
            break;
          case 35:
            id v11 = @"RASTER_SATELLITE_DIGITIZE";
            break;
          case 36:
            id v11 = @"RASTER_HILLSHADE_PARKS";
            break;
          case 37:
            id v11 = @"VECTOR_TRANSIT";
            break;
          case 38:
            id v11 = @"RASTER_STANDARD_BASE";
            break;
          case 39:
            id v11 = @"RASTER_STANDARD_LABELS";
            break;
          case 40:
            id v11 = @"RASTER_HYBRID_ROADS";
            break;
          case 41:
            id v11 = @"RASTER_HYBRID_LABELS";
            break;
          case 42:
            id v11 = @"FLYOVER_C3M_MESH";
            break;
          case 43:
            id v11 = @"FLYOVER_C3M_JPEG_TEXTURE";
            break;
          case 44:
            id v11 = @"FLYOVER_C3M_ASTC_TEXTURE";
            break;
          case 45:
            id v11 = @"RASTER_SATELLITE_ASTC";
            break;
          case 46:
            id v11 = @"RASTER_HYBRID_ROADS_AND_LABELS";
            break;
          case 47:
            id v11 = @"VECTOR_TRANSIT_SELECTION";
            break;
          case 48:
            id v11 = @"VECTOR_COVERAGE";
            break;
          case 52:
            id v11 = @"FLYOVER_METADATA";
            break;
          case 53:
            id v11 = @"VECTOR_ROAD_NETWORK";
            break;
          case 54:
            id v11 = @"VECTOR_LAND_COVER";
            break;
          case 55:
            id v11 = @"VECTOR_DEBUG";
            break;
          case 56:
            id v11 = @"VECTOR_STREET_POI";
            break;
          case 57:
            id v11 = @"MUNIN_METADATA";
            break;
          case 58:
            id v11 = @"VECTOR_SPR_MERCATOR";
            break;
          case 59:
            id v11 = @"VECTOR_SPR_MODELS";
            break;
          case 60:
            id v11 = @"VECTOR_SPR_MATERIALS";
            break;
          case 61:
            id v11 = @"VECTOR_SPR_METADATA";
            break;
          case 62:
            id v11 = @"VECTOR_TRACKS";
            break;
          case 63:
            id v11 = @"VECTOR_RESERVED_2";
            break;
          case 64:
            id v11 = @"VECTOR_STREET_LANDMARKS";
            break;
          case 65:
            id v11 = @"COARSE_LOCATION_POLYGONS";
            break;
          case 66:
            id v11 = @"VECTOR_SPR_ROADS";
            break;
          case 67:
            id v11 = @"VECTOR_SPR_STANDARD";
            break;
          case 68:
            id v11 = @"VECTOR_POI_V2";
            break;
          case 69:
            id v11 = @"VECTOR_POLYGON_SELECTION";
            break;
          case 70:
            id v11 = @"VL_METADATA";
            break;
          case 71:
            id v11 = @"VL_DATA";
            break;
          case 72:
            id v11 = @"PROACTIVE_APP_CLIP";
            break;
          case 73:
            id v11 = @"VECTOR_BUILDINGS_V2";
            break;
          case 74:
            id v11 = @"POI_BUSYNESS";
            break;
          case 75:
            id v11 = @"POI_DP_BUSYNESS";
            break;
          case 76:
            id v11 = @"SMART_INTERFACE_SELECTION";
            break;
          case 77:
            id v11 = @"VECTOR_ASSETS";
            break;
          case 78:
            id v11 = @"SPR_ASSET_METADATA";
            break;
          case 79:
            id v11 = @"VECTOR_SPR_POLAR";
            break;
          case 80:
            id v11 = @"SMART_DATA_MODE";
            break;
          case 81:
            id v11 = @"CELLULAR_PERFORMANCE_SCORE";
            break;
          case 82:
            id v11 = @"VECTOR_SPR_MODELS_OCCLUSION";
            break;
          case 83:
            id v11 = @"VECTOR_TOPOGRAPHIC";
            break;
          case 84:
            id v11 = @"VECTOR_POI_V2_UPDATE";
            break;
          case 85:
            id v11 = @"VECTOR_LIVE_DATA_UPDATES";
            break;
          case 86:
            id v11 = @"VECTOR_TRAFFIC_V2";
            break;
          case 87:
            id v11 = @"VECTOR_ROAD_SELECTION";
            break;
          case 88:
            id v11 = @"VECTOR_REGION_METADATA";
            break;
          case 89:
            id v11 = @"RAY_TRACING";
            break;
          case 90:
            id v11 = @"VECTOR_CONTOURS";
            break;
          case 91:
            id v11 = @"RASTER_SATELLITE_POLAR";
            break;
          case 92:
            id v11 = @"VMAP4_ELEVATION";
            break;
          case 93:
            id v11 = @"VMAP4_ELEVATION_POLAR";
            break;
          case 94:
            id v11 = @"CELLULAR_COVERAGE_PLMN";
            break;
          case 95:
            id v11 = @"RASTER_SATELLITE_POLAR_NIGHT";
            break;
          case 96:
            id v11 = @"UNUSED_96";
            break;
          case 97:
            id v11 = @"UNUSED_97";
            break;
          case 98:
            id v11 = @"UNUSED_98";
            break;
          case 99:
            id v11 = @"UNUSED_99";
            break;
          case 100:
            id v11 = @"UNUSED_100";
            break;
          case 101:
            id v11 = @"UNUSED_101";
            break;
          case 102:
            id v11 = @"UNUSED_102";
            break;
          case 103:
            id v11 = @"UNUSED_103";
            break;
          case 104:
            id v11 = @"UNUSED_104";
            break;
          case 105:
            id v11 = @"UNUSED_105";
            break;
          case 106:
            id v11 = @"UNUSED_106";
            break;
          case 107:
            id v11 = @"UNUSED_107";
            break;
          case 108:
            id v11 = @"UNUSED_108";
            break;
          case 109:
            id v11 = @"UNUSED_109";
            break;
          case 110:
            id v11 = @"UNUSED_110";
            break;
          case 111:
            id v11 = @"UNUSED_111";
            break;
          case 112:
            id v11 = @"UNUSED_112";
            break;
          case 113:
            id v11 = @"UNUSED_113";
            break;
          case 114:
            id v11 = @"UNUSED_114";
            break;
          case 115:
            id v11 = @"UNUSED_115";
            break;
          case 116:
            id v11 = @"UNUSED_116";
            break;
          case 117:
            id v11 = @"UNUSED_117";
            break;
          case 118:
            id v11 = @"UNUSED_118";
            break;
          case 119:
            id v11 = @"UNUSED_119";
            break;
          default:
            id v11 = +[NSString stringWithFormat:@"(unknown: %i)", v10];
            break;
        }
        v13[0] = _NSConcreteStackBlock;
        v13[1] = 3221225472;
        id v13[2] = sub_100AFD784;
        v13[3] = &unk_1012EE018;
        void v13[4] = v9;
        id v12 = [v3 addSectionWithTitle:v11 content:v13];
      }
      id v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v6);
  }
}

void sub_100AFD784(uint64_t a1, void *a2)
{
  id v15 = a2;
  id v3 = [*(id *)(a1 + 32) size];
  if (v3 >= 3)
  {
    id v4 = +[NSString stringWithFormat:@"(unknown: %i)", v3];
  }
  else
  {
    id v4 = off_101317F10[(int)v3];
  }
  id v5 = [v15 addReadOnlyRowWithTitle:@"Size" value:v4];

  id v6 = [*(id *)(a1 + 32) scale];
  if (v6 >= 3)
  {
    uint64_t v7 = +[NSString stringWithFormat:@"(unknown: %i)", v6];
  }
  else
  {
    uint64_t v7 = off_101317F28[(int)v6];
  }
  id v8 = [v15 addReadOnlyRowWithTitle:@"Scale" value:v7];

  id v9 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%i", [*(id *)(a1 + 32) version]);
  id v10 = [v15 addReadOnlyRowWithTitle:@"Version" value:v9];

  id v11 = [*(id *)(a1 + 32) baseURL];
  id v12 = [v15 addReadOnlyRowWithTitle:@"Base URL" subtitle:v11];

  uint64_t v13 = [*(id *)(a1 + 32) localizationURL];
  id v14 = [v15 addReadOnlyRowWithTitle:@"Localization URL" subtitle:v13];
}

void sub_100AFD93C(id a1)
{
  id v1 = +[GEOResourceManifestManager modernManager];
  [v1 updateManifest:0];
}

void sub_100AFD988(uint64_t a1, void *a2)
{
  id v5 = a2;
  [*(id *)(a1 + 32) addObject:v5];
  id v3 = [v5 addSectionWithTitle:@"Scales" content:&stru_101317710];
  id v4 = [v5 addSectionWithTitle:@"Scenarios" content:&stru_101317770];
}

void sub_100AFDA18(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = 0;
  do
  {
    id v4 = +[UIScreen mainScreen];
    [v4 scale];
    int v5 = GEOResourceFilterScaleForScale();

    if ((v3 + 1) >= 4)
    {
      id v6 = +[NSString stringWithFormat:@"(unknown: %i)", v3 + 1];
    }
    else
    {
      id v6 = off_101317F40[v3];
    }
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100AFDBB4;
    v10[3] = &unk_101317730;
    BOOL v12 = v3 + 1 == v5;
    int v11 = v3 + 1;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100AFDC60;
    void v8[3] = &unk_101317750;
    int v9 = v3 + 1;
    uint64_t v7 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:v6 get:v10 set:v8];

    if (v3 + 1 == v5) {
      [v7 setEnabled:0];
    }

    ++v3;
  }
  while (v3 != 3);
}

uint64_t sub_100AFDBB4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36)) {
    return 1;
  }
  uint64_t v3 = +[GEOResourceManifestManager modernManager];
  id v4 = [v3 activeTileGroup];

  if ([v4 activeScalesCount])
  {
    unint64_t v5 = 0;
    do
    {
      unsigned int v6 = [v4 activeScaleAtIndex:v5];
      int v7 = *(_DWORD *)(a1 + 32);
      BOOL v1 = v6 == v7;
      if (v6 == v7) {
        break;
      }
      ++v5;
    }
    while (v5 < (unint64_t)[v4 activeScalesCount]);
  }
  else
  {
    BOOL v1 = 0;
  }

  return v1;
}

void sub_100AFDC60(uint64_t a1, int a2)
{
  id v4 = +[GEOResourceManifestManager modernManager];
  uint64_t v5 = *(unsigned int *)(a1 + 32);
  id v6 = v4;
  if (a2) {
    [v4 activateResourceScale:v5];
  }
  else {
    [v4 deactivateResourceScale:v5];
  }
}

void sub_100AFDCC8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"RESOURCE_FILTER_SCENARIO_CARPLAY" get:&stru_101317790 set:&stru_1013177B0];
}

BOOL sub_100AFDD04(id a1)
{
  BOOL v1 = +[GEOResourceManifestManager modernManager];
  id v2 = [v1 activeTileGroup];

  if ([v2 activeScenariosCount])
  {
    unint64_t v3 = 0;
    do
    {
      unsigned int v4 = [v2 activeScenarioAtIndex:v3];
      BOOL v5 = v4 == 1;
      if (v4 == 1) {
        break;
      }
      ++v3;
    }
    while (v3 < (unint64_t)[v2 activeScenariosCount]);
  }
  else
  {
    BOOL v5 = 0;
  }

  return v5;
}

void sub_100AFDD98(id a1, BOOL a2)
{
  BOOL v2 = a2;
  unint64_t v3 = +[GEOResourceManifestManager modernManager];
  id v4 = v3;
  if (v2) {
    [v3 activateResourceScenario:1];
  }
  else {
    [v3 deactivateResourceScenario:1];
  }
}

void sub_100AFDDFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v5 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100AFDF68;
  v10[3] = &unk_1012E6708;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addNavigationRowWithTitle:@"Test Environments" action:v10];
  id v7 = [v3 addSwitchRowWithTitle:@"Environment in Settings" defaultsKey:@"ShowEnvironmentInfoInSettings"];
  id v8 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v9 = [v3 addNavigationRowWithTitle:@"MPTCP" viewControllerContent:&stru_1013177D0];
  objc_destroyWeak(&v11);
}

void sub_100AFDF50(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AFDF68(uint64_t a1)
{
  id v4 = [[EnvironmentsViewController alloc] initWithStyle:1];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained navigationController];
  [v3 pushViewController:v4 animated:1];
}

void sub_100AFDFE8(id a1, MapsDebugValuesViewController *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Search/AC Mode" content:&stru_1013177F0];
  id v3 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Directions Mode" content:&stru_101317870];
}

void sub_100AFE05C(id a1, MapsDebugTableSection *a2)
{
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:get:set:change:](a2, "addCheckmarkRowsGroupForConfigKey:content:get:set:change:", GeoServicesConfig_SearchACMPTCPServiceType[0], GeoServicesConfig_SearchACMPTCPServiceType[1], &stru_101317810, &stru_101317830, &stru_101317850, 0);
}

void sub_100AFE0A8(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Default" value:0];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Handover" value:&off_1013AA3D8];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Interactive" value:&off_1013AA3F0];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Aggregate" value:&off_1013AA408];
}

id sub_100AFE158(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();
  if (Integer < 1)
  {
    id v2 = 0;
  }
  else
  {
    id v2 = +[NSNumber numberWithInteger:Integer];
  }

  return v2;
}

void sub_100AFE1B0(id a1, id a2)
{
  if (a2)
  {
    [a2 integerValue];
    GEOConfigSetInteger();
  }
  else
  {
    _GEOConfigRemoveValue();
  }
}

void sub_100AFE214(id a1, MapsDebugTableSection *a2)
{
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:get:set:change:](a2, "addCheckmarkRowsGroupForConfigKey:content:get:set:change:", GeoServicesConfig_DirectionsMPTCPServiceType[0], GeoServicesConfig_DirectionsMPTCPServiceType[1], &stru_101317890, &stru_1013178B0, &stru_1013178D0, 0);
}

void sub_100AFE260(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Default" value:0];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Handover" value:&off_1013AA3D8];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Interactive" value:&off_1013AA3F0];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Aggregate" value:&off_1013AA408];
}

id sub_100AFE310(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();
  if (Integer < 1)
  {
    id v2 = 0;
  }
  else
  {
    id v2 = +[NSNumber numberWithInteger:Integer];
  }

  return v2;
}

void sub_100AFE368(id a1, id a2)
{
  if (a2)
  {
    [a2 integerValue];
    GEOConfigSetInteger();
  }
  else
  {
    _GEOConfigRemoveValue();
  }
}

void sub_100AFE3CC(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addCheckmarkRowsGroupWithContent:&stru_101317910 get:&stru_101317930 set:&stru_101317950];
  id v3 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Send auth push notification" action:&stru_101317970];
}

void sub_100AFE448(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Invalid" value:&off_1013AA420];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Unknown" value:&off_1013AA390];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Bad MAT" value:&off_1013AA3A8];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Bad MRT" value:&off_1013AA3C0];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Bad AC" value:&off_1013AA438];
}

id sub_100AFE51C(id a1)
{
  return +[NSNumber numberWithInteger:qword_1015F41D8];
}

void sub_100AFE530(id a1, id a2)
{
  qword_1015F41D8 = (uint64_t)[a2 integerValue];
}

void sub_100AFE554(id a1)
{
}

void sub_100AFE570(id a1, GEOUserNotificationProvider *a2)
{
}

void sub_100AFE580(id a1, NSError *a2)
{
}

void sub_100AFE5AC(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Allow non-EV Certs" get:&stru_101317A10 set:&stru_101317A30];
}

BOOL sub_100AFE5E8(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100AFE5F8(id a1, BOOL a2)
{
}

void sub_100AFE60C(id a1, MapsDebugTableSection *a2)
{
  id v2 = a2;
  id v3 = [(MapsDebugTableSection *)v2 addTextFieldRowWithTitle:@"Dispatcher Debug Overlay" placeholderText:0 inputType:0 get:&stru_101317A70 set:&stru_101317A90];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100AFE7A4;
  v7[3] = &unk_1012EE360;
  id v8 = @"?internalmodes.enable=";
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100AFE820;
  _OWORD v5[3] = &unk_1012E78C8;
  id v6 = @"?internalmodes.enable=";
  id v4 = [(MapsDebugTableSection *)v2 addTextFieldRowWithTitle:@"Routing Service Internal Modes" placeholderText:&stru_101324E70 inputType:3 get:v7 set:v5];
}

NSString *__cdecl sub_100AFE734(id a1)
{
  return (NSString *)GEOConfigGetString();
}

void sub_100AFE744(id a1, NSString *a2)
{
  id v2 = a2;
  if ([(NSString *)v2 length]) {
    GEOConfigSetString();
  }
  else {
    _GEOConfigRemoveValue();
  }
}

id sub_100AFE7A4(uint64_t a1)
{
  id v2 = GEOConfigGetString();
  if ([v2 hasPrefix:*(void *)(a1 + 32)])
  {
    uint64_t v3 = [v2 substringFromIndex:[*(id *)(a1 + 32) length]];

    id v2 = (void *)v3;
  }

  return v2;
}

void sub_100AFE820(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([v4 length])
  {
    uint64_t v3 = [*(id *)(a1 + 32) stringByAppendingString:v4];
    GEOConfigSetString();
  }
  else
  {
    _GEOConfigRemoveValue();
  }
}

void sub_100AFE8AC(id a1, MapsDebugTableSection *a2)
{
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](a2, "addCheckmarkRowsGroupForConfigKey:content:", MapsConfig_ShowEnvironmentNameRule, off_1015EECB8, &stru_101317AD0);
}

void sub_100AFE8E4(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Never" value:&off_1013AA390];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"When non-default" value:&off_1013AA3A8];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Always" value:&off_1013AA3C0];
}

void sub_100AFEA04(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addNavigationRowForViewControllerClass:objc_opt_class()];
}

void sub_100AFEB1C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100AFEB38(uint64_t a1)
{
  uint64_t v10 = 0;
  id v11 = 0;
  unsigned __int8 v2 = +[MapsRadarAttachmentProviderTask getCurrentTileStateSnapshotWithDirectoryURL:&v11 debugTreeURLs:0 mapsActivityDataPath:0 error:&v10];
  id v3 = v11;
  id v4 = v3;
  if (v2)
  {
    id v5 = [v3 path];
    NSLog(@"Logged tile state to %@", v5);
    id v6 = +[NSString stringWithFormat:@"Logged Tile State to %@", v5];
  }
  else
  {
    NSLog(@"State snapshot creation failed");
    id v6 = @"State snapshot creation failed with Error";
  }
  id v7 = +[UIAlertController alertControllerWithTitle:@"State Snapshot" message:v6 preferredStyle:1];
  id v8 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:&stru_101317B38];
  [v7 addAction:v8];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained presentViewController:v7 animated:1 completion:0];
}

void sub_100AFED68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100AFED84(uint64_t a1)
{
  BOOL v1 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];

  id v6 = objc_alloc_init((Class)NSMutableString);
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v7 = v5;
  id v8 = [v7 countByEnumeratingWithState:&v39 objects:v43 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v35 = 0;
    uint64_t v10 = *(void *)v40;
    do
    {
      id v11 = 0;
      id v34 = v9;
      do
      {
        if (*(void *)v40 != v10) {
          objc_enumerationMutation(v7);
        }
        BOOL v12 = *(void **)(*((void *)&v39 + 1) + 8 * (void)v11);
        if ((unint64_t)[v7 count] >= 2)
        {
          uint64_t v13 = v10;
          id v14 = v7;
          id v15 = (char *)v11 + v35;
          id v16 = v6;
          id v17 = v6;
          id v18 = v12;
          long long v19 = [v18 window];
          [v19 frame];
          if (v19)
          {
            id v24 = NSStringFromCGRect(*(CGRect *)&v20);
            [v17 appendFormat:@" ===== Map view %@ (#%lu, in window %p, at %@)", v18, v15, v19, v24];
          }
          else
          {
            [v17 appendFormat:@" ===== Map view %@ (#%lu, not in a window)", v18, v15];
          }

          id v6 = v16;
          id v7 = v14;
          uint64_t v10 = v13;
          id v9 = v34;
        }
        id v25 = [v12 _mapLayer];
        uint64_t v26 = [v25 detailedDescription];
        [v6 appendString:v26];

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v39 objects:v43 count:16];
      v35 += (uint64_t)v11;
    }
    while (v9);
  }

  uint64_t v27 = NSTemporaryDirectory();
  id v28 = [v27 stringByAppendingPathComponent:@"Diagnostics.txt"];
  id v29 = +[NSURL fileURLWithPath:v28];

  id v38 = 0;
  [v6 writeToURL:v29 atomically:1 encoding:4 error:&v38];
  id v30 = v38;
  if (!v30)
  {
    __int16 v31 = [[MapsDebugFileExportController alloc] initWithFileAtURL:v29 presentingViewController:*(void *)(a1 + 32)];
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_100AFF0F0;
    v36[3] = &unk_1012E5D08;
    id v37 = v29;
    [(MapsDebugFileExportController *)v31 startWithCompletion:v36];
  }
  id v32 = +[UIPasteboard generalPasteboard];
  [v32 setString:v6];

  NSLog(@"Diagnostic String: %@", v6);
}

void sub_100AFF0F0(uint64_t a1)
{
  id v2 = +[NSFileManager defaultManager];
  [v2 removeItemAtURL:*(void *)(a1 + 32) error:0];
}

void sub_100AFF180(id a1, MapsDebugValuesViewController *a2)
{
  id v5 = a2;
  [(MapsDebugValuesViewController *)v5 setTitle:@"Tap-To-Radar"];
  id v2 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"TapToRadarKit" content:&stru_101317B78];
  id v3 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Allow Maps Attachments" content:&stru_101317B98];
  id v4 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Log archive type" content:&stru_101317BB8];
}

void sub_100AFF224(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable TapToRadarKit", MapsConfig_TapToRadarKitEnabled, off_1015F1608 geoConfigKey];
}

void sub_100AFF25C(id a1, MapsDebugTableSection *a2)
{
  id v14 = a2;
  id v2 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Floating control button", MapsConfig_EnableTapToRadarFloatingControlButton, off_1015F0A48 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"UIViewController descriptions attachments", MapsConfig_EnableTapToRadarUIViewControllerDescriptionsAttachmentProvider, off_1015F0A58 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"State attachments", MapsConfig_EnableTapToRadarStateAttachmentProvider, off_1015F0A68 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"MSg attachments", MapsConfig_EnableTapToRadarMSgAttachmentProvider, off_1015F0A78 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"MSP attachments", MapsConfig_EnableTapToRadarMSPAttachmentProvider, off_1015F0A88 geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"NSUserDefaults attachments", MapsConfig_EnableTapToRadarUserDefaultsAttachmentProvider, off_1015F0A98 geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Screenshot attachment", MapsConfig_EnableTapToRadarScreenshotAttachmentProvider, off_1015F0AB8 geoConfigKey];
  id v9 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Debug view frames screenshot attachment", MapsConfig_EnableTapToRadarDebugViewFramesScreenshotAttachmentProvider, off_1015F0AC8 geoConfigKey];
  id v10 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Debug layout guides screenshot attachment", MapsConfig_EnableTapToRadarDebugChromeLayoutGuidesScreenshotAttachmentProvider, off_1015F0DB8 geoConfigKey];
  id v11 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Inactive reasons screenshot attachment", MapsConfig_EnableTapToRadarDebugChromeInactiveReasonsScreenshotAttachmentProvider, off_1015F0FC8 geoConfigKey];
  id v12 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"VKMapView detailed description attachment", MapsConfig_EnableTapToRadarVKMapViewDetailedDescriptionAttachmentProvider, off_1015F0AA8 geoConfigKey];
  id v13 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Window view hierarchy attachments", MapsConfig_EnableTapToRadarViewHierarchyAttachmentProvider, off_1015F0FB8 geoConfigKey];
}

void sub_100AFF440(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Full log archive", MapsConfig_EnableTapToRadarLogArchiveFull, off_1015F0AD8 geoConfigKey];
}

void sub_100AFF588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100AFF5AC(uint64_t a1)
{
  BOOL v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100AFF66C;
  void v3[3] = &unk_1012E6708;
  objc_copyWeak(&v4, v1);
  [WeakRetained dismissViewControllerAnimated:1 completion:v3];

  objc_destroyWeak(&v4);
}

void sub_100AFF658(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100AFF66C(uint64_t a1)
{
  id v2 = sub_10057637C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = objc_loadWeakRetained((id *)(a1 + 32));
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    *(_DWORD *)long long buf = 138543362;
    id v11 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[%{public}@] Launching TTR from debug panel", buf, 0xCu);
  }
  id v9 = +[MapsRadarController sharedInstance];
  [v9 launchTTR];
}

void sub_100AFF848(id a1, MapsDebugValuesViewController *a2)
{
  id v3 = a2;
  [(MapsDebugValuesViewController *)v3 setTitle:@"Logging"];
  id v2 = [(MapsDebugValuesViewController *)v3 addSectionWithTitle:@"Log types enabled" content:&stru_101317BF8];
}

void sub_100AFF8AC(id a1, MapsDebugTableSection *a2)
{
  id v22 = a2;
  id v2 = sub_10057637C();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG);

  if (v3) {
    CFStringRef v4 = @"YES";
  }
  else {
    CFStringRef v4 = @"NO";
  }
  id v5 = [(MapsDebugTableSection *)v22 addReadOnlyRowWithTitle:@"DEBUG" value:v4];
  id v6 = sub_10057637C();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_INFO);

  if (v7) {
    CFStringRef v8 = @"YES";
  }
  else {
    CFStringRef v8 = @"NO";
  }
  id v9 = [(MapsDebugTableSection *)v22 addReadOnlyRowWithTitle:@"INFO" value:v8];
  id v10 = sub_10057637C();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11) {
    CFStringRef v12 = @"YES";
  }
  else {
    CFStringRef v12 = @"NO";
  }
  id v13 = [(MapsDebugTableSection *)v22 addReadOnlyRowWithTitle:@"DEFAULT" value:v12];
  id v14 = sub_10057637C();
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

  if (v15) {
    CFStringRef v16 = @"YES";
  }
  else {
    CFStringRef v16 = @"NO";
  }
  id v17 = [(MapsDebugTableSection *)v22 addReadOnlyRowWithTitle:@"ERROR" value:v16];
  id v18 = sub_10057637C();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_FAULT);

  if (v19) {
    CFStringRef v20 = @"YES";
  }
  else {
    CFStringRef v20 = @"NO";
  }
  id v21 = [(MapsDebugTableSection *)v22 addReadOnlyRowWithTitle:@"FAULT" value:v20];
}

void sub_100AFFA90(id a1, MapsDebugTableSection *a2)
{
  id v2 = a2;
  BOOL v3 = objc_alloc_init(MapsDebugTableRow);
  [(MapsDebugTableRow *)v3 setTitle:@"App bundle path:"];
  CFStringRef v4 = +[NSBundle mainBundle];
  id v5 = [v4 bundlePath];
  [(MapsDebugTableRow *)v3 setSubtitle:v5];

  [(MapsDebugTableRow *)v3 setConfigureBlock:&stru_101317C58];
  [(MapsDebugTableSection *)v2 addRow:v3];
  CFStringRef v8 = objc_alloc_init(MapsDebugTableRow);

  [(MapsDebugTableRow *)v8 setTitle:@"Data bundle path:"];
  id v6 = +[MSPMapsPaths pathsAtLocation:0];
  BOOL v7 = [v6 homeDirectory];
  [(MapsDebugTableRow *)v8 setSubtitle:v7];

  [(MapsDebugTableRow *)v8 setConfigureBlock:&stru_101317C78];
  [(MapsDebugTableSection *)v2 addRow:v8];
}

void sub_100AFFBC8(id a1, UITableViewCell *a2, UIListContentConfiguration *a3)
{
  id v3 = [(UIListContentConfiguration *)a3 secondaryTextProperties];
  [v3 setNumberOfLines:4];
}

void sub_100AFFC10(id a1, UITableViewCell *a2, UIListContentConfiguration *a3)
{
  id v3 = [(UIListContentConfiguration *)a3 secondaryTextProperties];
  [v3 setNumberOfLines:4];
}

void sub_100AFFC58(id a1, MapsDebugTableSection *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100AFFCE4;
  void v3[3] = &unk_101317CE0;
  CFStringRef v4 = a2;
  id v2 = v4;
  sub_10046F074(v3);
}

void sub_100AFFCE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  BOOL v7 = +[NSBundle bundleWithIdentifier:v5];
  if (!v7)
  {
    BOOL v7 = +[NSBundle bundleWithPath:v6];
  }
  CFStringRef v8 = objc_alloc_init(MapsDebugTableRow);
  id v19 = v5;
  id v9 = [v7 infoDictionary];
  id v10 = [v9 objectForKeyedSubscript:@"CFBundleVersion"];
  BOOL v11 = v10;
  if (v10)
  {
    CFStringRef v12 = v10;
  }
  else
  {
    id v13 = [v7 infoDictionary];
    uint64_t v14 = [v13 objectForKeyedSubscript:@"CFBundleShortVersionString"];
    BOOL v15 = (void *)v14;
    CFStringRef v16 = @"???";
    if (!v7) {
      CFStringRef v16 = @"Not Found";
    }
    if (v14) {
      CFStringRef v16 = (__CFString *)v14;
    }
    CFStringRef v12 = v16;
  }
  id v17 = +[NSString stringWithFormat:@"%@ - %@", v19, v12];

  [(MapsDebugTableRow *)v8 setTitle:v17];
  id v18 = [v7 bundlePath];
  [(MapsDebugTableRow *)v8 setSubtitle:v18];

  [(MapsDebugTableRow *)v8 setConfigureBlock:&stru_101317CB8];
  [*(id *)(a1 + 32) addRow:v8];
}

void sub_100AFFEB4(id a1, UITableViewCell *a2, UIListContentConfiguration *a3)
{
  id v3 = [(UIListContentConfiguration *)a3 secondaryTextProperties];
  [v3 setNumberOfLines:4];
}

void sub_100B0013C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_100B0018C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v5 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v6 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  BOOL v11 = sub_100B002EC;
  CFStringRef v12 = &unk_1012F8EA8;
  id v13 = *(id *)(a1 + 32);
  objc_copyWeak(&v14, (id *)(a1 + 40));
  id v7 = [v3 addNavigationRowWithTitle:@"GeoServices" viewControllerContent:&v9];
  id v8 = [v3 addNavigationRowForViewControllerClass:objc_opt_class() v9, v10, v11, v12];
  objc_destroyWeak(&v14);
}

void sub_100B002D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100B002EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) addObject:v3];
  [v3 setTitle:@"GeoSvc"];
  CFStringRef v12 = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472;
  id v14 = sub_100B0048C;
  BOOL v15 = &unk_1012E7EF8;
  objc_copyWeak(&v16, (id *)(a1 + 40));
  id v4 = [v3 addSectionWithTitle:@"GeoServices" content:&v12];
  id v5 = +[GEOPlatform sharedPlatform];
  unsigned int v6 = [v5 isInternalInstall];

  if (v6)
  {
    id v7 = +[NSString stringWithFormat:@"Route"];
    id v8 = [v3 addSectionWithTitle:v7 content:&stru_101317D00];

    id v9 = +[GEOAddressObject libraryVersion];
    uint64_t v10 = +[NSString stringWithFormat:@"AddressObject Library (ver. %@)", v9, v12, v13, v14, v15];
    id v11 = [v3 addSectionWithTitle:v10 content:&stru_101317D60];
  }
  objc_destroyWeak(&v16);
}

void sub_100B00474(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100B0048C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addGeoServicesSettingsToSection:v3];
}

void sub_100B004E8(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enable Lane Flowlines", MapsConfig_EnableLaneFlowline, off_1015EFC78 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Hide Invalid Route Elevation" get:&stru_101317D20 set:&stru_101317D40];
}

BOOL sub_100B00568(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100B00578(id a1, BOOL a2)
{
}

void sub_100B0058C(id a1, MapsDebugTableSection *a2)
{
  id v2 = a2;
  id v3 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Enable Debug-level logging" get:&stru_101317D80 set:&stru_101317DA0];
  id v4 = [(MapsDebugTableSection *)v2 addSwitchRowWithTitle:@"Mark AddressObject Strings" get:&stru_101317DC0 set:&stru_101317DE0];
  id v5 = +[NSString stringWithFormat:@"For marking strings: \n- ‘<>’ - created through fromContact \n-  ‘{}’  - created through fromLegacy \n- ‘><’ - created through InternalAddressObjectFactory::create() \n-  '!!'  - created during construction or modification of a VenueInfo object \n-  ‘()’  - returned from legacy accessors (getName, getAddress) \n-  ‘[]’  - returned from formatters; e.g. getFullAddress, getShortAddress, etc."];
  [(MapsDebugTableSection *)v2 setFooter:v5];
}

BOOL sub_100B00644(id a1)
{
  return +[GEOAddressObject isLoggingDebug];
}

void sub_100B00650(id a1, BOOL a2)
{
}

BOOL sub_100B00660(id a1)
{
  return +[GEOAddressObject isMarkingMMStrings];
}

void sub_100B0066C(id a1, BOOL a2)
{
}

void sub_100B0067C(id *a1, void *a2)
{
  id v6 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  [WeakRetained _addFeatureFlagsSettingsToSection:v6];

  id v4 = objc_loadWeakRetained(a1);
  [v4 _addServerConfigSettingsToSection:v6];

  id v5 = [v6 addNavigationRowForViewControllerClass:objc_opt_class()];
}

void sub_100B00714(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _addRadarEntriesToSection:v3];

  id v5 = objc_loadWeakRetained(v2);
  [v5 _addStateSnapshotToSection:v3];

  id v6 = objc_loadWeakRetained(v2);
  [v6 _addCopyDiagnosticsToSection:v3];

  id v7 = objc_loadWeakRetained(v2);
  [v7 _addTapToRadarAllowAttachmentsOptionToSection:v3];

  id v8 = objc_loadWeakRetained(v2);
  [v8 _addLoggingEntriesToSection:v3];
}

id sub_100B00C48(uint64_t a1)
{
  id v2 = +[GEOMapsAuthServiceHelper sharedAuthHelper];
  [v2 addMapsAuthDidFinishObserver:*(void *)(a1 + 32) forRequestType:GEOMapsAuthACToken];

  uint64_t v3 = *(void *)(a1 + 32);

  return +[MapsAppleConnectAuthViewController presentAppleConnectAuthControllerFrom:v3 withProxyURL:0];
}

id sub_100B00CB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

void sub_100B00F6C(id a1)
{
  id v1 = [objc_alloc((Class)NSXPCConnection) initWithMachServiceName:@"com.apple.Maps.mapspushd.geoservices" options:0];
  id v2 = (void *)qword_101610808;
  qword_101610808 = (uint64_t)v1;

  uint64_t v3 = +[NSXPCInterface geo_MapsNotificationDaemonFromGeodInterface];
  [(id)qword_101610808 setRemoteObjectInterface:v3];

  id v4 = +[NSXPCInterface interfaceWithProtocol:&OBJC_PROTOCOL___NSObject];
  [(id)qword_101610808 setExportedInterface:v4];

  [(id)qword_101610808 setExportedObject:objc_opt_class()];
  id v5 = (void *)qword_101610808;

  [v5 resume];
}

void sub_100B01118(uint64_t a1, void *a2)
{
  id v3 = a2;
  NSLog(@"Error sending message to mapspushd: %@", v3);
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B01878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B01894(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateWaypointsList];
}

void sub_100B01AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B01AE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateRefinements];
}

void sub_100B02CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_100B036F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = 0;
}

void sub_100B0370C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[SearchDotPlacePersonalizedItem alloc] initWithSearchDotPlace:v3];

  [(SearchDotPlacePersonalizedItem *)v4 setSource:*(void *)(a1 + 32)];
  -[SearchDotPlacePersonalizedItem setShouldBeHiddenFromMap:](v4, "setShouldBeHiddenFromMap:", [*(id *)(a1 + 32) shouldHideSearchDotPlaces]);
  [*(id *)(a1 + 40) addObject:v4];
}

void sub_100B037A4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100B046F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B04710(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateArrivalOverlaysWithRoute:WeakRetained[3]];
    id WeakRetained = v2;
  }
}

RoutePlanningSession *sub_100B0671C(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (!v7)
  {
    v115 = sub_1005762E4();
    if (os_log_type_enabled(v115, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v185 = 136315906;
      v186 = "id<MapsSession>  _Nonnull RoutePlanningSessionForDirectionItem(DirectionItem * _Nonnull __strong, GEOMapSer"
             "viceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *> * _Nullable __stron"
             "g, NSDictionary<NSString *,id> * _Nullable __strong)";
      __int16 v187 = 2080;
      v188 = "RoutePlanningSessionBuilder.m";
      __int16 v189 = 1024;
      int v190 = 85;
      __int16 v191 = 2080;
      v192 = "directionItem != nil";
      _os_log_impl((void *)&_mh_execute_header, v115, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", v185, 0x26u);
    }

    if (sub_100BB36BC())
    {
      v116 = sub_1005762E4();
      if (os_log_type_enabled(v116, OS_LOG_TYPE_ERROR))
      {
        v117 = +[NSThread callStackSymbols];
        *(_DWORD *)v185 = 138412290;
        v186 = v117;
        _os_log_impl((void *)&_mh_execute_header, v116, OS_LOG_TYPE_ERROR, "%@", v185, 0xCu);
      }
    }
  }
  if (!v8)
  {
    v118 = sub_1005762E4();
    if (os_log_type_enabled(v118, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v185 = 136315906;
      v186 = "id<MapsSession>  _Nonnull RoutePlanningSessionForDirectionItem(DirectionItem * _Nonnull __strong, GEOMapSer"
             "viceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *> * _Nullable __stron"
             "g, NSDictionary<NSString *,id> * _Nullable __strong)";
      __int16 v187 = 2080;
      v188 = "RoutePlanningSessionBuilder.m";
      __int16 v189 = 1024;
      int v190 = 86;
      __int16 v191 = 2080;
      v192 = "traits != nil";
      _os_log_impl((void *)&_mh_execute_header, v118, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", v185, 0x26u);
    }

    if (sub_100BB36BC())
    {
      v119 = sub_1005762E4();
      if (os_log_type_enabled(v119, OS_LOG_TYPE_ERROR))
      {
        v120 = +[NSThread callStackSymbols];
        *(_DWORD *)v185 = 138412290;
        v186 = v120;
        _os_log_impl((void *)&_mh_execute_header, v119, OS_LOG_TYPE_ERROR, "%@", v185, 0xCu);
      }
    }
  }
  uint64_t v11 = (uint64_t)[v7 transportType];
  if (v11 == 4)
  {
    if (sub_10008034C()) {
      uint64_t v11 = 4;
    }
    else {
      uint64_t v11 = 1;
    }
  }
  if (!v8)
  {
    CFStringRef v12 = +[UIApplication sharedMapsDelegate];
    uint64_t v13 = [v12 chromeViewController];
    id v8 = [v13 currentTraits];
  }
  [v8 useOnlineToOfflineFailoverRequestModeIfAllowed];
  if (v11 != 4)
  {
    id v29 = v7;
    id v170 = v8;
    id v30 = v8;
    id v31 = v9;
    id v168 = v10;
    id v32 = v10;
    if (!v7)
    {
      v130 = sub_1005762E4();
      if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v185 = 136315906;
        v186 = "RoutePlanningSession * _Nonnull _RoutePlanningSessionFromDirectionItem(DirectionItem * _Nonnull __strong,"
               " GEOMapServiceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *> * _Null"
               "able __strong, NSDictionary<NSString *,id> * _Nullable __strong)";
        __int16 v187 = 2080;
        v188 = "RoutePlanningSessionBuilder.m";
        __int16 v189 = 1024;
        int v190 = 129;
        __int16 v191 = 2080;
        v192 = "directionItem != nil";
        _os_log_impl((void *)&_mh_execute_header, v130, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", v185, 0x26u);
      }

      if (sub_100BB36BC())
      {
        v131 = sub_1005762E4();
        if (os_log_type_enabled(v131, OS_LOG_TYPE_ERROR))
        {
          v132 = +[NSThread callStackSymbols];
          *(_DWORD *)v185 = 138412290;
          v186 = v132;
          _os_log_impl((void *)&_mh_execute_header, v131, OS_LOG_TYPE_ERROR, "%@", v185, 0xCu);
        }
      }
    }
    if (!v30)
    {
      v133 = sub_1005762E4();
      if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v185 = 136315906;
        v186 = "RoutePlanningSession * _Nonnull _RoutePlanningSessionFromDirectionItem(DirectionItem * _Nonnull __strong,"
               " GEOMapServiceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *> * _Null"
               "able __strong, NSDictionary<NSString *,id> * _Nullable __strong)";
        __int16 v187 = 2080;
        v188 = "RoutePlanningSessionBuilder.m";
        __int16 v189 = 1024;
        int v190 = 130;
        __int16 v191 = 2080;
        v192 = "traits != nil";
        _os_log_impl((void *)&_mh_execute_header, v133, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", v185, 0x26u);
      }

      if (sub_100BB36BC())
      {
        v134 = sub_1005762E4();
        if (os_log_type_enabled(v134, OS_LOG_TYPE_ERROR))
        {
          v135 = +[NSThread callStackSymbols];
          *(_DWORD *)v185 = 138412290;
          v186 = v135;
          _os_log_impl((void *)&_mh_execute_header, v134, OS_LOG_TYPE_ERROR, "%@", v185, 0xCu);
        }
      }
    }
    if ([v29 transportType] == (id)4)
    {
      v136 = sub_1005762E4();
      if (os_log_type_enabled(v136, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v185 = 136315906;
        v186 = "RoutePlanningSession * _Nonnull _RoutePlanningSessionFromDirectionItem(DirectionItem * _Nonnull __strong,"
               " GEOMapServiceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *> * _Null"
               "able __strong, NSDictionary<NSString *,id> * _Nullable __strong)";
        __int16 v187 = 2080;
        v188 = "RoutePlanningSessionBuilder.m";
        __int16 v189 = 1024;
        int v190 = 131;
        __int16 v191 = 2080;
        v192 = "directionItem.transportType != TransportTypeRideshare";
        _os_log_impl((void *)&_mh_execute_header, v136, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", v185, 0x26u);
      }

      if (sub_100BB36BC())
      {
        v137 = sub_1005762E4();
        if (os_log_type_enabled(v137, OS_LOG_TYPE_ERROR))
        {
          v138 = +[NSThread callStackSymbols];
          *(_DWORD *)v185 = 138412290;
          v186 = v138;
          _os_log_impl((void *)&_mh_execute_header, v137, OS_LOG_TYPE_ERROR, "%@", v185, 0xCu);
        }
      }
    }
    if ([v29 transportType] == (id)4)
    {
      id v28 = 0;
LABEL_151:

      id v10 = v168;
      id v8 = v170;
      goto LABEL_152;
    }
    id v33 = [v29 drivePreferences];
    id v34 = v33;
    if (v33)
    {
      v161 = v33;
    }
    else
    {
      uint64_t v35 = [DrivePreferences alloc];
      id v36 = +[NSUserDefaults standardUserDefaults];
      v161 = [(DrivePreferences *)v35 initWithDefaults:v36];
    }
    id v37 = [v29 transitPreferences];
    id v38 = v37;
    if (v37)
    {
      v164 = v37;
    }
    else
    {
      long long v39 = [TransitPreferences alloc];
      long long v40 = +[NSUserDefaults standardUserDefaults];
      v164 = [(WatchSyncedPreferences *)v39 initWithDefaults:v40];
    }
    long long v41 = [v29 timing];
    long long v42 = v41;
    id v156 = v29;
    id v162 = v30;
    if (v41)
    {
      id v163 = v41;
    }
    else
    {
      long long v43 = [v29 startMapItem];
      long long v44 = [v43 timeZone];
      long long v45 = [v29 endMapItem];
      [v45 timeZone];
      id v46 = v9;
      long long v48 = v47 = v7;
      id v163 = +[RoutePlanningTiming timingWithDepartureDate:0 departureTimeZone:v44 arrivalTimeZone:v48];

      id v7 = v47;
      id v9 = v46;
      id v29 = v156;
    }
    if (v32)
    {
      uint64_t v49 = +[RoutePlanningTiming timingWithUserInfo:v32];
      long long v50 = (void *)v49;
      if (v49) {
        long long v51 = (void *)v49;
      }
      else {
        long long v51 = v163;
      }
      id v52 = v51;

      uint64_t v53 = [(TransitPreferences *)v164 transitPreferencesByOverridingPropertiesWithUserInfo:v32];

      id v163 = v52;
      v164 = (TransitPreferences *)v53;
    }
    id v54 = [v29 cyclePreferences];
    CGRect v55 = v54;
    if (v54)
    {
      v160 = v54;
    }
    else
    {
      id v56 = [CyclePreferences alloc];
      CGRect v57 = +[NSUserDefaults standardUserDefaults];
      v160 = [(CyclePreferences *)v56 initWithDefaults:v57];
    }
    id v166 = v9;

    id v58 = [v29 walkPreferences];
    long long v59 = v58;
    id v154 = v7;
    if (v58)
    {
      v159 = v58;
    }
    else
    {
      long long v60 = [WalkPreferences alloc];
      long long v61 = +[NSUserDefaults standardUserDefaults];
      v159 = [(WalkPreferences *)v60 initWithDefaults:v61];
    }
    id v62 = objc_alloc((Class)NSMutableArray);
    uint64_t v63 = [v29 items];
    id v64 = [v62 initWithCapacity:[v63 count]];

    long long v173 = 0u;
    long long v174 = 0u;
    long long v171 = 0u;
    long long v172 = 0u;
    unsigned int v65 = [v29 items];
    id v66 = [v65 countByEnumeratingWithState:&v171 objects:v185 count:16];
    if (v66)
    {
      id v67 = v66;
      uint64_t v68 = *(void *)v172;
      do
      {
        for (uint64_t i = 0; i != v67; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v172 != v68) {
            objc_enumerationMutation(v65);
          }
          id v70 = *(void **)(*((void *)&v171 + 1) + 8 * i);
          id v71 = [v70 composedWaypoint];
          unsigned __int8 v72 = [v71 isServerProvidedWaypoint];

          if ((v72 & 1) == 0)
          {
            id v73 = sub_100B07F18(v70, v31);
            [v64 addObject:v73];
          }
        }
        id v67 = [v65 countByEnumeratingWithState:&v171 objects:v185 count:16];
      }
      while (v67);
    }

    CGRect v74 = [[WalkingRequestInfoProvider alloc] initWithPreferences:v159 timing:v163];
    id v75 = [[DrivingRequestInfoProvider alloc] initWithPreferences:v161 timing:v163];
    CGRect v76 = [[TransitRequestInfoProvider alloc] initWithPreferences:v164 timing:v163];
    id v77 = [[CyclingRequestInfoProvider alloc] initWithPreferences:v160 timing:v163];
    CGRect v78 = [RequestTransportTypeInformation alloc];
    v183[0] = &off_1013AA528;
    v183[1] = &off_1013AA540;
    v152 = v76;
    v153 = v74;
    v184[0] = v74;
    v184[1] = v75;
    v155 = v75;
    v183[2] = &off_1013AA558;
    v183[3] = &off_1013AA570;
    v184[2] = v76;
    v184[3] = v77;
    v151 = v77;
    id v79 = +[NSDictionary dictionaryWithObjects:v184 forKeys:v183 count:4];
    CGRect v80 = [(RequestTransportTypeInformation *)v78 initWithDictionary:v79];

    id v9 = v166;
    v158 = v80;
    if (!v80)
    {
      v139 = sub_1005762E4();
      if (os_log_type_enabled(v139, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 136315906;
        v176 = "RoutePlanningSession * _Nonnull _RoutePlanningSessionFromDirectionItem(DirectionItem * _Nonnull __strong,"
               " GEOMapServiceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *> * _Null"
               "able __strong, NSDictionary<NSString *,id> * _Nullable __strong)";
        __int16 v177 = 2080;
        v178 = "RoutePlanningSessionBuilder.m";
        __int16 v179 = 1024;
        int v180 = 168;
        __int16 v181 = 2080;
        v182 = "transportTypeInfos != nil";
        _os_log_impl((void *)&_mh_execute_header, v139, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
      }

      if (sub_100BB36BC())
      {
        v140 = sub_1005762E4();
        if (os_log_type_enabled(v140, OS_LOG_TYPE_ERROR))
        {
          v141 = +[NSThread callStackSymbols];
          *(_DWORD *)long long buf = 138412290;
          v176 = v141;
          _os_log_impl((void *)&_mh_execute_header, v140, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
        }
      }
    }
    id v81 = [v32 objectForKeyedSubscript:@"DirectionsIsResumedNavigationSessionKey"];
    id v82 = [v81 BOOLValue];

    uint64_t v83 = [v32 objectForKeyedSubscript:@"DirectionsResumeRouteHandleStorageKey"];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v84 = [v32 objectForKeyedSubscript:@"DirectionsResumeRouteHandleStorageKey"];

      id v29 = v156;
      if (v84)
      {
        v150 = (void *)v84;
        id v85 = [objc_alloc((Class)GEOResumeRouteHandle) initWithGEOStorageResumeRouteHandle:v84];
      }
      else
      {
        id v85 = 0;
        v150 = 0;
      }
    }
    else
    {

      id v85 = 0;
      v150 = 0;
      id v29 = v156;
    }
    v86 = [NavdRouteLoadingTaskFactory alloc];
    v87 = [v29 persistentData];
    v157 = [(NavdRouteLoadingTaskFactory *)v86 initWithTransportTypes:v158 traits:v162 isResumingMultipointRoute:v82 resumeRouteHandle:v85 persistentData:v87];

    v88 = [v32 objectForKeyedSubscript:@"DirectionsCompanionRouteContextKey"];
    v89 = v88;
    if (v88)
    {
      id v90 = v88;
    }
    else
    {
      id v90 = +[GEOCompanionRouteContext context];
    }
    id v91 = v90;

    v92 = [RoutePlanningSessionConfiguration alloc];
    v93 = +[MKLocationManager sharedLocationManager];
    v94 = [(RoutePlanningSessionConfiguration *)v92 initWithWaypointRequests:v64 routeLoadingTaskFactory:v157 traits:v162 companionContext:v91 locationManager:v93];

    v95 = [v32 objectForKey:@"DirectionsNavigationAutoLaunchDelayKey"];
    [(RoutePlanningSessionConfiguration *)v94 setNavigationAutoLaunchDelay:v95];

    -[RoutePlanningSessionConfiguration setIgnoreMapType:](v94, "setIgnoreMapType:", [v29 ignoreMapType]);
    -[RoutePlanningSessionConfiguration setInitialTransportType:](v94, "setInitialTransportType:", [v29 transportType]);
    v96 = [v32 objectForKeyedSubscript:@"ShortcutIdentifier"];
    [(RoutePlanningSessionConfiguration *)v94 setShortcutIdentifier:v96];

    v97 = [v32 objectForKeyedSubscript:@"DirectionsRestoreCamera"];
    -[RoutePlanningSessionConfiguration setShouldRestoreCamera:](v94, "setShouldRestoreCamera:", [v97 BOOLValue]);

    v98 = [v32 objectForKey:@"DirectionsShouldRestoreLowGuidanceKey"];
    -[RoutePlanningSessionConfiguration setShouldRestoreToLowGuidance:](v94, "setShouldRestoreToLowGuidance:", [v98 BOOLValue]);

    v99 = [v32 objectForKeyedSubscript:@"DirectionsRouteUUIDKey"];
    [(RoutePlanningSessionConfiguration *)v94 setOriginalHistoryEntryIdentifier:v99];

    v100 = [v32 objectForKeyedSubscript:@"DirectionsStartShortestRouteKey"];
    -[RoutePlanningSessionConfiguration setShouldStartShortestRoute:](v94, "setShouldStartShortestRoute:", [v100 BOOLValue]);

    v101 = [v32 objectForKeyedSubscript:@"DirectionsStartFastestRouteKey"];
    -[RoutePlanningSessionConfiguration setShouldStartFastestRoute:](v94, "setShouldStartFastestRoute:", [v101 BOOLValue]);

    v102 = [v32 objectForKeyedSubscript:@"DirectionsRoutePlanningSessionSourceKey"];
    -[RoutePlanningSessionConfiguration setSource:](v94, "setSource:", [v102 integerValue]);

    v103 = [v32 objectForKeyedSubscript:@"DirectionsPreviousContactsForTripSharing"];
    v148 = v91;
    if ([v103 count])
    {
      id v104 = v85;
      v105 = sub_1005768D4();
      if (os_log_type_enabled(v105, OS_LOG_TYPE_INFO))
      {
        v147 = (const char *)[v103 count];
        id v106 = v103;
        v107 = v106;
        if (v106)
        {
          if ([v106 count])
          {
            v146 = [v107 componentsJoinedByString:@", "];
            v108 = +[NSString stringWithFormat:@"<%p> [%@]", v107, v146];
          }
          else
          {
            v108 = +[NSString stringWithFormat:@"<%p> (empty)", v107];
          }
        }
        else
        {
          v108 = @"<nil>";
        }

        *(_DWORD *)long long buf = 134218243;
        v176 = v147;
        __int16 v177 = 2113;
        v178 = (const char *)v108;
        _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_INFO, "DirectionItem has %lu autosharing contacts: %{private}@", buf, 0x16u);
      }
      [(RoutePlanningSessionConfiguration *)v94 setAutomaticSharingContacts:v103];
      id v85 = v104;
      id v9 = v166;
    }
    v109 = [v32 objectForKey:@"DirectionsSourceKey"];

    v149 = v85;
    if (v109)
    {
      v110 = [v32 objectForKey:@"DirectionsSourceKey"];
      id v111 = [v110 integerValue];

      uint64_t v112 = 5;
      switch((unint64_t)v111)
      {
        case 0uLL:
        case 1uLL:
          goto LABEL_143;
        case 3uLL:
          uint64_t v112 = 7;
          break;
        case 4uLL:
          goto LABEL_81;
        case 5uLL:
          uint64_t v112 = 4;
          break;
        case 6uLL:
          uint64_t v112 = 8;
          break;
        default:
          goto LABEL_150;
      }
      goto LABEL_150;
    }
    v113 = [v32 objectForKey:@"DirectionsSessionInitiatorKey"];

    if (v113)
    {
      v114 = [v32 objectForKey:@"DirectionsSessionInitiatorKey"];
      uint64_t v112 = (uint64_t)[v114 unsignedIntegerValue];

      if (v112 == 6)
      {
LABEL_81:
        if ([(RoutePlanningSessionConfiguration *)v94 shouldAutoLaunchNavigation]) {
          [(DrivingRequestInfoProvider *)v155 setMaximumRouteCountOverride:&off_1013AA588];
        }
        uint64_t v112 = 6;
        goto LABEL_150;
      }
      if (v112 == 3)
      {
        [(RoutePlanningSessionConfiguration *)v94 setInitialRoutesBeingFetchedExternally:GEOConfigGetBOOL() ^ 1];
LABEL_150:
        id v28 = [[RoutePlanningSession alloc] initWithInitiator:v112 configuration:v94];

        id v7 = v154;
        id v30 = v162;
        goto LABEL_151;
      }
      if (v112) {
        goto LABEL_150;
      }
    }
LABEL_143:
    v142 = sub_1005762E4();
    if (os_log_type_enabled(v142, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315906;
      v176 = "RoutePlanningSession * _Nonnull _RoutePlanningSessionFromDirectionItem(DirectionItem * _Nonnull __strong, G"
             "EOMapServiceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *> * _Nullable"
             " __strong, NSDictionary<NSString *,id> * _Nullable __strong)";
      __int16 v177 = 2080;
      v178 = "RoutePlanningSessionBuilder.m";
      __int16 v179 = 1024;
      int v180 = 211;
      __int16 v181 = 2080;
      v182 = "initiator != MapsSessionInitiatorUnknown";
      _os_log_impl((void *)&_mh_execute_header, v142, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
    }

    if (sub_100BB36BC())
    {
      v143 = sub_1005762E4();
      if (os_log_type_enabled(v143, OS_LOG_TYPE_ERROR))
      {
        v144 = +[NSThread callStackSymbols];
        *(_DWORD *)long long buf = 138412290;
        v176 = v144;
        _os_log_impl((void *)&_mh_execute_header, v143, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
    }
    uint64_t v112 = 0;
    goto LABEL_150;
  }
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  if (!v7)
  {
    v121 = sub_1005762E4();
    if (os_log_type_enabled(v121, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v185 = 136315906;
      v186 = "RideBookingPlanningSession * _Nonnull _RideBookingPlanningSessionFromDirectionItem(DirectionItem * _Nonnull"
             " __strong, GEOMapServiceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *>"
             " * _Nullable __strong)";
      __int16 v187 = 2080;
      v188 = "RoutePlanningSessionBuilder.m";
      __int16 v189 = 1024;
      int v190 = 111;
      __int16 v191 = 2080;
      v192 = "directionItem != nil";
      _os_log_impl((void *)&_mh_execute_header, v121, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", v185, 0x26u);
    }

    if (sub_100BB36BC())
    {
      v122 = sub_1005762E4();
      if (os_log_type_enabled(v122, OS_LOG_TYPE_ERROR))
      {
        v123 = +[NSThread callStackSymbols];
        *(_DWORD *)v185 = 138412290;
        v186 = v123;
        _os_log_impl((void *)&_mh_execute_header, v122, OS_LOG_TYPE_ERROR, "%@", v185, 0xCu);
      }
    }
  }
  if ([v14 transportType] != (id)4)
  {
    v124 = sub_1005762E4();
    if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v185 = 136315906;
      v186 = "RideBookingPlanningSession * _Nonnull _RideBookingPlanningSessionFromDirectionItem(DirectionItem * _Nonnull"
             " __strong, GEOMapServiceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *>"
             " * _Nullable __strong)";
      __int16 v187 = 2080;
      v188 = "RoutePlanningSessionBuilder.m";
      __int16 v189 = 1024;
      int v190 = 112;
      __int16 v191 = 2080;
      v192 = "directionItem.transportType == TransportTypeRideshare";
      _os_log_impl((void *)&_mh_execute_header, v124, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", v185, 0x26u);
    }

    if (sub_100BB36BC())
    {
      v125 = sub_1005762E4();
      if (os_log_type_enabled(v125, OS_LOG_TYPE_ERROR))
      {
        v126 = +[NSThread callStackSymbols];
        *(_DWORD *)v185 = 138412290;
        v186 = v126;
        _os_log_impl((void *)&_mh_execute_header, v125, OS_LOG_TYPE_ERROR, "%@", v185, 0xCu);
      }
    }
  }
  if (!v15)
  {
    v127 = sub_1005762E4();
    if (os_log_type_enabled(v127, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)v185 = 136315906;
      v186 = "RideBookingPlanningSession * _Nonnull _RideBookingPlanningSessionFromDirectionItem(DirectionItem * _Nonnull"
             " __strong, GEOMapServiceTraits * _Nonnull __strong, NSDictionary<id<WaypointRequest>,GEOComposedWaypoint *>"
             " * _Nullable __strong)";
      __int16 v187 = 2080;
      v188 = "RoutePlanningSessionBuilder.m";
      __int16 v189 = 1024;
      int v190 = 113;
      __int16 v191 = 2080;
      v192 = "traits != nil";
      _os_log_impl((void *)&_mh_execute_header, v127, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", v185, 0x26u);
    }

    if (sub_100BB36BC())
    {
      v128 = sub_1005762E4();
      if (os_log_type_enabled(v128, OS_LOG_TYPE_ERROR))
      {
        v129 = +[NSThread callStackSymbols];
        *(_DWORD *)v185 = 138412290;
        v186 = v129;
        _os_log_impl((void *)&_mh_execute_header, v128, OS_LOG_TYPE_ERROR, "%@", v185, 0xCu);
      }
    }
  }
  if ([v14 transportType] == (id)4)
  {
    id v167 = v10;
    id v169 = v8;
    id v165 = v9;
    id v17 = objc_alloc((Class)NSMutableArray);
    id v18 = [v14 items];
    id v19 = [v17 initWithCapacity:[v18 count]];

    long long v173 = 0u;
    long long v174 = 0u;
    long long v171 = 0u;
    long long v172 = 0u;
    CFStringRef v20 = [v14 items];
    id v21 = [v20 countByEnumeratingWithState:&v171 objects:v185 count:16];
    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = *(void *)v172;
      do
      {
        for (j = 0; j != v22; j = (char *)j + 1)
        {
          if (*(void *)v172 != v23) {
            objc_enumerationMutation(v20);
          }
          id v25 = sub_100B07F18(*(void **)(*((void *)&v171 + 1) + 8 * (void)j), v16);
          [v19 addObject:v25];
        }
        id v22 = [v20 countByEnumeratingWithState:&v171 objects:v185 count:16];
      }
      while (v22);
    }

    uint64_t v26 = [RideBookingPlanningSession alloc];
    id v27 = [v19 copy];
    id v28 = [(RideBookingPlanningSession *)v26 initWithInitiator:1 waypointRequests:v27 traits:v15];

    id v9 = v165;
    id v10 = v167;
    id v8 = v169;
  }
  else
  {
    id v28 = 0;
  }

LABEL_152:

  return v28;
}

id sub_100B07F18(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = RoutePlanningWaypointRequestFromSearchFieldItem(v3);
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000;
  id v15 = sub_100104360;
  id v16 = sub_100104A20;
  id v17 = 0;
  if (GEOConfigGetBOOL())
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_100B08490;
    v9[3] = &unk_1013168F0;
    id v10 = v5;
    uint64_t v11 = &v12;
    [v4 enumerateKeysAndObjectsUsingBlock:v9];
  }
  id v6 = (void *)v13[5];
  if (!v6) {
    id v6 = v5;
  }
  id v7 = v6;
  _Block_object_dispose(&v12, 8);

  return v7;
}

void sub_100B08068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

RoutePlanningSession *sub_100B08080(void *a1, uint64_t a2, int a3, void *a4)
{
  id v7 = a1;
  id v8 = objc_alloc_init((Class)GEOMapServiceTraits);
  id v9 = +[GEOCompanionRouteContext context];
  id v32 = 0;
  id v10 = [[TraceRouteLoadingTaskFactory alloc] initWithTracePath:v7 outError:&v32];

  id v11 = v32;
  uint64_t v12 = v11;
  if (v11 || !v10)
  {
    id v28 = 0;
    if (a4) {
      *a4 = v11;
    }
  }
  else
  {
    uint64_t v13 = [(TraceRouteLoadingTaskFactory *)v10 waypointRequests];
    id v14 = [v13 count];

    id v15 = [(TraceRouteLoadingTaskFactory *)v10 waypointRequests];
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472;
    v31[2] = sub_100B08334;
    v31[3] = &unk_101317F80;
    void v31[4] = v14;
    id v16 = sub_100099700(v15, v31);

    id v17 = [RoutePlanningSessionConfiguration alloc];
    id v18 = +[MKLocationManager sharedLocationManager];
    id v19 = [(RoutePlanningSessionConfiguration *)v17 initWithWaypointRequests:v16 routeLoadingTaskFactory:v10 traits:v8 companionContext:v9 locationManager:v18];

    if (a3)
    {
      id v20 = +[NSNumber numberWithDouble:5.0];
      id v21 = +[NSUserDefaults standardUserDefaults];
      [v21 objectForKey:@"NavigationAutoLaunchDelayKey"];
      id v22 = v30 = a2;

      if (v22) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = v20;
      }
      id v24 = v23;

      [v24 doubleValue];
      double v26 = v25;

      id v27 = +[NSNumber numberWithDouble:v26];
      [(RoutePlanningSessionConfiguration *)v19 setNavigationAutoLaunchDelay:v27];

      a2 = v30;
    }
    [(RoutePlanningSessionConfiguration *)v19 setInitialTransportType:[(TraceRouteLoadingTaskFactory *)v10 traceTransportType]];
    id v28 = [[RoutePlanningSession alloc] initWithInitiator:a2 configuration:v19];
  }

  return v28;
}

id sub_100B08334(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a3)
  {
    uint64_t v7 = *(void *)(a1 + 32) - 1;
    uint64_t v8 = [v5 waypointName];
    id v9 = (void *)v8;
    CFStringRef v10 = @"Waypoint";
    if (v8) {
      CFStringRef v10 = (const __CFString *)v8;
    }
    CFStringRef v11 = @"Destination";
    if (v8) {
      CFStringRef v11 = (const __CFString *)v8;
    }
    if (v7 == a3) {
      uint64_t v12 = (__CFString *)v11;
    }
    else {
      uint64_t v12 = (__CFString *)v10;
    }
  }
  else
  {
    uint64_t v12 = [v5 waypointName];
    id v9 = v12;
    if (!v12) {
      uint64_t v12 = @"Origin";
    }
  }
  uint64_t v13 = sub_100B083F8(v12, v6);

  return v13;
}

RoutePlanningWaypointRequest *sub_100B083F8(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [[WaypointPlaceholder alloc] initWithName:v4 displayableMarker:0];

  id v6 = [[RoutePlanningWaypointRequest alloc] initWithWaypointPlaceholder:v5 request:v3 preferredNameSource:1];

  return v6;
}

void sub_100B08490(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) waypointRequest];
  unsigned int v7 = [v15 isEquivalentToOtherRequest:v6];

  if (v7)
  {
    if ([v15 hasCachedResult]) {
      uint64_t v8 = (GEOComposedWaypointRequest *)v15;
    }
    else {
      uint64_t v8 = [[GEOComposedWaypointRequest alloc] initWithComposedWaypoint:v5];
    }
    id v9 = v8;
    CFStringRef v10 = [RoutePlanningWaypointRequest alloc];
    CFStringRef v11 = [*(id *)(a1 + 32) waypointPlaceholder];
    uint64_t v12 = -[RoutePlanningWaypointRequest initWithWaypointPlaceholder:request:preferredNameSource:](v10, "initWithWaypointPlaceholder:request:preferredNameSource:", v11, v9, [*(id *)(a1 + 32) preferredNameSource]);
    uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
    id v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
}

void sub_100B09C50(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableDictionary);
  id v2 = (void *)qword_101610818;
  qword_101610818 = (uint64_t)v1;
}

void sub_100B09D40(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v3 = [objc_alloc((Class)_UIFocusUpdateRequest) initWithEnvironment:v1];
    [v3 setAllowsDeferral:0];
    id v2 = +[UIFocusSystem focusSystemForEnvironment:v1];

    [v2 _requestFocusUpdate:v3];
  }
}

id *sub_100B0B548(id *result)
{
  if (((_BYTE)result[6] & 4) == 0)
  {
    id v1 = result;
    uint64_t result = (id *)GEOConfigGetBOOL();
    if (result)
    {
      uint64_t result = (id *)[v1[4] _removeOrphanedRAPWebBundles];
      if (result) {
        *(void *)(*((void *)v1[5] + 1) + 24) |= 4uLL;
      }
    }
  }
  return result;
}

void sub_100B0B5A4(uint64_t a1)
{
  id v2 = +[NSUserDefaults __maps_groupUserDefaults];
  [v2 setInteger:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) forKey:@"LegacyDataMigratorVersionCompletionStatus"];
}

void sub_100B0CB68(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_100B0CB80(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(id *)(a1 + 32);
  id v5 = v4;
  os_signpost_id_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  if (v6 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    LOWORD(v13) = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_INTERVAL_END, v6, "MigratePreCrystalFavoritesDuration", "", (uint8_t *)&v13, 2u);
  }

  unsigned int v7 = *(id *)(a1 + 32);
  uint64_t v8 = v7;
  os_signpost_id_t v9 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  if (v3)
  {
    if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
    {
      LOWORD(v13) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_EVENT, v9, "MigratePreCrystalFavoritesError", "", (uint8_t *)&v13, 2u);
    }

    uint64_t v8 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v13 = 138412290;
      id v14 = v3;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Favorites migration failed: %@", (uint8_t *)&v13, 0xCu);
    }
  }
  else if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    LOWORD(v13) = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_EVENT, v9, "MigratePreCrystalFavoritesSuccess", "", (uint8_t *)&v13, 2u);
  }

  CFStringRef v10 = *(id *)(a1 + 32);
  CFStringRef v11 = v10;
  os_signpost_id_t v12 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  if (v12 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    LOWORD(v13) = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_EVENT, v12, "MigratePreCrystalFavoritesFinished", "", (uint8_t *)&v13, 2u);
  }
}

void sub_100B0E730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100B0E748(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  uint64_t v8 = v7;
  if (v7)
  {
    id v12 = v7;
    id v9 = [v7 length];
    uint64_t v8 = v12;
    if (v9)
    {
      CFStringRef v10 = +[AutocompleteMatchInfo matchInfoWithType:a4];
      CFStringRef v11 = [[AutocompleteStringMatcher alloc] initWithString:v12 requiredMatchLength:a3 matchInfo:v10];
      [*(id *)(a1 + 32) addObject:v11];

      uint64_t v8 = v12;
    }
  }
}

void sub_100B0ED80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = 0;
}

void sub_100B0F0BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;
}

void sub_100B0FF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
}

void sub_100B0FFA8(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleEvent:v3];
}

void sub_100B10FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B11004(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setExpanded:0];
}

void sub_100B111E0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) superview];
  uint64_t v1 = [v2 superview];
  [v1 layoutIfNeeded];
}

void sub_100B1123C(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateContent];
  [*(id *)(a1 + 32) invalidateIntrinsicContentSize];
  id v3 = [*(id *)(a1 + 32) superview];
  id v2 = [v3 superview];
  [v2 layoutIfNeeded];
}

void sub_100B112AC(uint64_t a1)
{
  id v2 = sub_1005774B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      uint64_t v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      os_signpost_id_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        uint64_t v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    uint64_t v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    *(_DWORD *)long long buf = 138543362;
    CFStringRef v10 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] _animateContentUpdate completed", buf, 0xCu);
  }
}

void sub_100B12FE4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) presentingViewController];
  [v2 presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

id sub_100B13340(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [[RAPPhoto alloc] initWithPhoto:*(void *)(a1 + 40) date:v5 location:v6];

  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(v8 + 56);
  *(void *)(v8 + 56) = v7;

  *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
  [*(id *)(a1 + 32) _invokeChangeHandlers];
  uint64_t v10 = *(void *)(a1 + 32);
  CFStringRef v11 = *(void **)(v10 + 16);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_100B1342C;
  v13[3] = &unk_1012E5D08;
  void v13[4] = v10;
  return [v11 dismissViewControllerAnimated:1 completion:v13];
}

id sub_100B1342C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _clearImagePicker];
}

uint64_t sub_100B13434(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), a2, *(void *)(a1 + 32));
}

id sub_100B13510(uint64_t a1)
{
  return [*(id *)(a1 + 32) _clearImagePicker];
}

id sub_100B1358C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _proceedWithSourceType:1];
}

id sub_100B1360C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _proceedWithSourceType:0];
}

id sub_100B1368C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _cancel];
}

uint64_t sub_100B13750(void *a1)
{
  id v1 = a1;
  if ([v1 hasRecommended])
  {
    if ([v1 hasRecommended]) {
      uint64_t v2 = 2;
    }
    else {
      uint64_t v2 = 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id sub_100B1535C(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  [v3 setObject:*(void *)(a1 + 32) forKeyedSubscript:NSFontAttributeName];
  id v4 = [v3 copy];

  return v4;
}

uint64_t sub_100B15A88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100B15C54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B173AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,id a58)
{
}

void sub_100B173F0(uint64_t a1)
{
  uint64_t v2 = sub_1005774B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v6 = 134349056;
    id v7 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[%{public}p] Launching TTR from floating control with full archive", (uint8_t *)&v6, 0xCu);
  }
  id v4 = objc_opt_new();
  [v4 setCollectFullLogArchive:1];
  id v5 = +[MapsRadarController sharedInstance];
  [v5 launchTTRWithRadar:v4];
}

void sub_100B174E0(uint64_t a1)
{
  uint64_t v2 = sub_1005774B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v6 = 134349056;
    id v7 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[%{public}p] Launching TTR from floating control with regular archive", (uint8_t *)&v6, 0xCu);
  }
  id v4 = objc_opt_new();
  [v4 setCollectFullLogArchive:0];
  id v5 = +[MapsRadarController sharedInstance];
  [v5 launchTTRWithRadar:v4];
}

id sub_100B17838(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) traitCollection];
  unsigned int v3 = [v2 isLuminanceReduced];

  if (v3) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 0;
  }
  [*(id *)(*(void *)(a1 + 32) + 96) setOverrideUserInterfaceStyle:v4];
  id v5 = *(void **)(a1 + 32);

  return [v5 _updateContent];
}

id sub_100B17BB0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:*(double *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:*(double *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 32) setAlpha:*(double *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:*(double *)(a1 + 40)];
  double v2 = *(double *)(a1 + 40);
  unsigned int v3 = *(void **)(*(void *)(a1 + 32) + 48);

  return [v3 setAlpha:v2];
}

id sub_100B17DD4(uint64_t a1)
{
  [*(id *)(a1 + 32) _compassViewAlpha];
  double v2 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v2 setAlpha:];
}

id sub_100B18464(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setFrame:16.0, 16.0, 60.0, 60.0];
  double v2 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v2 layoutIfNeeded];
}

id sub_100B19078(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setConfiguration:*(void *)(a1 + 40)];
  double v2 = *(void **)(*(void *)(a1 + 32) + 16);

  return [v2 layoutBelowIfNeeded];
}

id sub_100B19DA0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateAudioPreferences];
}

void sub_100B1A0C0(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  double v2 = *(void **)(a1 + 32);
  if (v1)
  {
    _[v2 _scheduleTimerToDismissCompass];
  }
  else
  {
    unsigned int v3 = (void *)v2[8];
    v2[8] = 0;
  }
}

void sub_100B1A0E4(uint64_t a1)
{
  [*(id *)(a1 + 32) _compassViewAlpha];
  [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:];
  [*(id *)(a1 + 32) _insertCompassView];
  id v3 = [*(id *)(a1 + 32) view];
  double v2 = [v3 superview];
  [v2 layoutIfNeeded];
}

uint64_t sub_100B1A168(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B1A280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B1A2A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _animateOutCompassIfNeeded];
}

void sub_100B1A3DC(uint64_t a1)
{
  [*(id *)(a1 + 32) _compassViewAlpha];
  [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:];
  [*(id *)(a1 + 32) _removeCompassView];
  id v3 = [*(id *)(a1 + 32) view];
  double v2 = [v3 superview];
  [v2 layoutIfNeeded];
}

id sub_100B1A460(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) removeFromSuperview];
}

id sub_100B1A6B4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 96) setAlpha:*(double *)(a1 + 40)];
}

void sub_100B1A948(id a1, MapsDebugTableSection *a2)
{
  uint64_t v10 = a2;
  id v2 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Enable New Design", MapKitConfig_NewPuckEnabled[0], MapKitConfig_NewPuckEnabled[1] geoConfigKey];
  LODWORD(v3) = 1117782016;
  LODWORD(v4) = 11.0;
  id v5 = [(MapsDebugTableSection *)v10 addSliderRowWithTitle:@"Min Accuracy Radius" subtitleStringFormat:@"%.1f points" min:&stru_1013181D8 max:&stru_1013181F8 get:v4 set:v3];
  LODWORD(v6) = 1112014848;
  LODWORD(v7) = 10.0;
  id v8 = [(MapsDebugTableSection *)v10 addSliderRowWithTitle:@"Min Accuracy Uncertainty" subtitleStringFormat:@"%.1f meters" min:&stru_101318218 max:&stru_101318238 get:v7 set:v6];
  id v9 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Disable Location Pulse" defaultsKey:@"DisableLocationPulse"];
}

float sub_100B1AA38(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100B1AA60(id a1, float a2)
{
}

float sub_100B1AA74(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100B1AA9C(id a1, float a2)
{
}

void sub_100B1AAB0(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Force Elevated Terrain for Standard Map", MapKitConfig_ForceElevatedTerrainForStandardMap[0], MapKitConfig_ForceElevatedTerrainForStandardMap[1] geoConfigKey];
}

void sub_100B1AF80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if ((unint64_t)(v2 - 1) > 4) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = (uint64_t)*(&off_1013182C8 + v2 - 1);
  }
  double v4 = [*(id *)(a1 + 32) traitCollection];
  if ([v4 userInterfaceIdiom] == (id)5)
  {
    uint64_t v5 = +[UIImageSymbolConfiguration configurationWithTextStyle:UIFontTextStyleTitle3];
  }
  else
  {
    if (v2 == 5) {
      uint64_t v6 = 6;
    }
    else {
      uint64_t v6 = 4;
    }
    uint64_t v5 = +[UIImageSymbolConfiguration configurationWithPointSize:v6 weight:18.0];
  }
  double v7 = (void *)v5;
  id v19 = +[UIImage systemImageNamed:v3 withConfiguration:v5];

  uint64_t v8 = *(void *)(a1 + 40);
  if ((unint64_t)(v8 - 1) > 4) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = (uint64_t)*(&off_1013182C8 + v8 - 1);
  }
  uint64_t v10 = [*(id *)(a1 + 32) traitCollection];
  if ([v10 userInterfaceIdiom] == (id)5)
  {
    uint64_t v11 = +[UIImageSymbolConfiguration configurationWithTextStyle:UIFontTextStyleTitle3];
  }
  else
  {
    if (v8 == 5) {
      uint64_t v12 = 6;
    }
    else {
      uint64_t v12 = 4;
    }
    uint64_t v11 = +[UIImageSymbolConfiguration configurationWithPointSize:v12 weight:40.0];
  }
  int v13 = (void *)v11;
  id v14 = +[UIImage systemImageNamed:v9 withConfiguration:v11];

  uint64_t v15 = *(void *)(a1 + 40);
  if (v15 == 5 || v15 == 2)
  {
    uint64_t v16 = [v19 imageFlippedForRightToLeftLayoutDirection];

    uint64_t v17 = [v14 imageFlippedForRightToLeftLayoutDirection];

    id v18 = (id)v16;
    id v14 = (void *)v17;
  }
  else
  {
    id v18 = v19;
  }
  id v20 = v18;
  [*(id *)(*(void *)(a1 + 32) + 24) setImage:v18];
  [*(id *)(a1 + 32) setLargeContentImage:v14];
}

id sub_100B1C00C(uint64_t a1, void *a2)
{
  uint64_t v3 = (char *)[a2 integerValue];
  double v4 = v3 - 1;
  if ((unint64_t)(v3 - 1) > 4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = (uint64_t)*(&off_1013182C8 + (void)v4);
  }
  uint64_t v6 = [*(id *)(a1 + 32) traitCollection];
  if ([v6 userInterfaceIdiom] == (id)5)
  {
    uint64_t v7 = +[UIImageSymbolConfiguration configurationWithTextStyle:UIFontTextStyleTitle3];
  }
  else
  {
    if (v3 == (char *)5) {
      uint64_t v8 = 6;
    }
    else {
      uint64_t v8 = 4;
    }
    uint64_t v7 = +[UIImageSymbolConfiguration configurationWithPointSize:v8 weight:18.0];
  }
  uint64_t v9 = (void *)v7;
  uint64_t v10 = +[UIImage systemImageNamed:v5 withConfiguration:v7];

  uint64_t v11 = [v10 imageWithRenderingMode:2];
  uint64_t v12 = v11;
  switch((unint64_t)v4)
  {
    case 0uLL:
      [v11 setAccessibilityIdentifier:@"DriveButton"];
      int v13 = +[NSBundle mainBundle];
      id v14 = v13;
      CFStringRef v15 = @"Drive [Transport Type Picker, Accessibility]";
      goto LABEL_17;
    case 1uLL:
      [v11 setAccessibilityIdentifier:@"WalkButton"];
      int v13 = +[NSBundle mainBundle];
      id v14 = v13;
      CFStringRef v15 = @"Walk [Transport Type Picker, Accessibility]";
      goto LABEL_17;
    case 2uLL:
      [v11 setAccessibilityIdentifier:@"TransitButton"];
      int v13 = +[NSBundle mainBundle];
      id v14 = v13;
      CFStringRef v15 = @"Transit [Transport Type Picker, Accessibility]";
      goto LABEL_17;
    case 3uLL:
      [v11 setAccessibilityIdentifier:@"RideshareButton"];
      int v13 = +[NSBundle mainBundle];
      id v14 = v13;
      CFStringRef v15 = @"Ride [Transport Type Picker, Accessibility]";
      goto LABEL_17;
    case 4uLL:
      [v11 setAccessibilityIdentifier:@"CyclingButton"];
      int v13 = +[NSBundle mainBundle];
      id v14 = v13;
      CFStringRef v15 = @"Cycle [Transport Type Picker, Accessibility]";
LABEL_17:
      uint64_t v16 = [v13 localizedStringForKey:v15 value:@"localized string not found" table:0];

      break;
    default:
      [v11 setAccessibilityIdentifier:0];
      uint64_t v16 = 0;
      break;
  }
  [v12 setAccessibilityLabel:v16];

  return v12;
}

id sub_100B1C28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) insertSegmentWithImage:a2 atIndex:a3 animated:0];
}

void sub_100B1C2AC(uint64_t a1, void *a2)
{
  id v3 = [a2 integerValue];
  double v4 = [[TransportTypeSegment alloc] initWithTransportType:v3];
  [(TransportTypeSegment *)v4 setSelected:v3 == *(id *)(*(void *)(a1 + 32) + 40)];
  [(TransportTypeSegment *)v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [(TransportTypeSegment *)v4 addTarget:*(void *)(a1 + 32) action:"_didSelectSegment:" forControlEvents:64];
  [*(id *)(*(void *)(a1 + 32) + 48) addObject:v4];
}

void sub_100B1DCE8(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_101318310];
  uint64_t v2 = (void *)qword_101610838;
  qword_101610838 = v1;
}

void sub_100B1DD48(id a1, SmallButtonOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  uint64_t v8 = a2;
  uint64_t v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = v6;

  [(SmallButtonOutlineCell *)v8 setCellModel:v7];
}

void sub_100B1E0F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B1E120(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id v29 = WeakRetained;
    id obj = WeakRetained[11];
    id v6 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v32;
      do
      {
        for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v32 != v8) {
            objc_enumerationMutation(obj);
          }
          uint64_t v10 = *(void **)(*((void *)&v31 + 1) + 8 * i);
          uint64_t v11 = [v10 objectForKeyedSubscript:@"latitude"];
          [v11 doubleValue];
          uint64_t v13 = v12;

          id v14 = [v10 objectForKeyedSubscript:@"longitude"];
          [v14 doubleValue];
          uint64_t v16 = v15;

          uint64_t v17 = [v10 objectForKeyedSubscript:@"heading"];
          [v17 doubleValue];
          uint64_t v19 = v18;

          id v20 = [v10 objectForKeyedSubscript:@"pitch"];
          [v20 doubleValue];
          uint64_t v22 = v21;

          uint64_t v23 = [v10 objectForKeyedSubscript:@"zoom"];
          [v23 doubleValue];
          uint64_t v25 = v24;

          double v26 = +[NSString stringWithFormat:@"%0.4f %0.4f Z:%0.2f P:%0.2f H:%0.2f", v13, v16, v25, v22, v19];
          id v27 = [v3 addReadOnlyRowWithTitle:v26 value:&stru_101324E70];
        }
        id v7 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
      }
      while (v7);
    }

    uint64_t v5 = v29;
    id v28 = +[NSString stringWithFormat:@"Path: %@", v29[12]];
    [v3 setFooter:v28];
  }
}

void sub_100B1E3B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100B1E674;
  v17[3] = &unk_1012E6708;
  objc_copyWeak(&v18, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Clear All Locations" action:v17];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_100B1E7F0;
  v15[3] = &unk_1012E6708;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  id v5 = [v3 addButtonRowWithTitle:@"Add Current Framing" action:v15];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  id v13[2] = sub_100B1EB44;
  v13[3] = &unk_1012E6708;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  id v6 = [v3 addButtonRowWithTitle:@"Share key frame File" action:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100B1EC88;
  void v11[3] = &unk_1012E6708;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v7 = [v3 addButtonRowWithTitle:@"Copy key frame file path" action:v11];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_100B1ED00;
  v9[3] = &unk_1012E6708;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  id v8 = [v3 addButtonRowWithTitle:@"Play Animation" action:v9];
  objc_destroyWeak(&v10);
  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);
  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
}

void sub_100B1E620(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100B1E674(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[UIAlertController alertControllerWithTitle:@"Alert" message:@"Do you want to clear list" preferredStyle:1];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    void v5[2] = sub_100B1E7A4;
    _OWORD v5[3] = &unk_1012E6DE0;
    void v5[4] = WeakRetained;
    id v3 = +[UIAlertAction actionWithTitle:@"Yes" style:0 handler:v5];
    id v4 = +[UIAlertAction actionWithTitle:@"Cancel" style:0 handler:&stru_101318330];
    [v2 addAction:v3];
    [v2 addAction:v4];
    [WeakRetained presentViewController:v2 animated:1 completion:0];
  }
}

id sub_100B1E7A4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 88) removeAllObjects];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 saveFileAndReload];
}

void sub_100B1E7F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[UIAlertController alertControllerWithTitle:@"Alert" message:@"Do you want to add yoru current map view to list?" preferredStyle:1];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    void v5[2] = sub_100B1E920;
    _OWORD v5[3] = &unk_1012E6DE0;
    void v5[4] = WeakRetained;
    id v3 = +[UIAlertAction actionWithTitle:@"Yes" style:0 handler:v5];
    id v4 = +[UIAlertAction actionWithTitle:@"Cancel" style:0 handler:&stru_101318350];
    [v2 addAction:v3];
    [v2 addAction:v4];
    [WeakRetained presentViewController:v2 animated:1 completion:0];
  }
}

void sub_100B1E920(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) delegate];
  id v3 = [v2 allVisibleMapViewsForDebugController:*(void *)(a1 + 32)];
  id v4 = [v3 firstObject];

  id v5 = [v4 camera];
  v14[0] = @"latitude";
  [v5 centerCoordinate];
  id v6 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  v15[0] = v6;
  v14[1] = @"longitude";
  [v5 centerCoordinate];
  id v8 = +[NSNumber numberWithDouble:v7];
  v15[1] = v8;
  v14[2] = @"heading";
  [v5 heading];
  uint64_t v9 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  void v15[2] = v9;
  void v14[3] = @"pitch";
  [v5 pitch];
  id v10 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  v15[3] = v10;
  void v14[4] = @"zoom";
  [v5 centerCoordinateDistance];
  uint64_t v11 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  void v15[4] = v11;
  void v14[5] = @"animationDuration";
  id v12 = +[NSNumber numberWithDouble:10.0];
  void v15[5] = v12;
  uint64_t v13 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:6];

  [*(id *)(*(void *)(a1 + 32) + 88) addObject:v13];
  [*(id *)(a1 + 32) saveFileAndReload];
}

void sub_100B1EB44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[NSURL fileURLWithPath:WeakRetained[12]];
    id v3 = [[MapsDebugFileExportController alloc] initWithFileAtURL:v2 presentingViewController:WeakRetained];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    void v5[2] = sub_100B1EC2C;
    _OWORD v5[3] = &unk_1012E5D08;
    id v6 = v2;
    id v4 = v2;
    [(MapsDebugFileExportController *)v3 startWithCompletion:v5];
  }
}

void sub_100B1EC2C(uint64_t a1)
{
  id v2 = +[NSFileManager defaultManager];
  [v2 removeItemAtURL:*(void *)(a1 + 32) error:0];
}

void sub_100B1EC88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v1 = +[UIPasteboard generalPasteboard];
    [v1 setString:WeakRetained[12]];
  }
}

void sub_100B1ED00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _animationToIndex:0];
    [v2 dismissViewControllerAnimated:1 completion:0];
    id WeakRetained = v2;
  }
}

void sub_100B1F018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100B1F034(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCamera:*(void *)(a1 + 40)];
}

void sub_100B1F040(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _animationToIndex:*(void *)(a1 + 40) + 1];
}

id sub_100B2066C(id a1, TransitDirectionsBoardingInfoView *a2, unint64_t a3)
{
  id v3 = [(TransitDirectionsBoardingInfoView *)a2 resolvedLayout];
  if (v3)
  {
    id v3 = +[NSNumber numberWithUnsignedInteger:v3];
  }

  return v3;
}

void sub_100B206B0(uint64_t a1, void *a2, uint64_t a3)
{
  id v9 = a2;
  [v9 setForceVerticalAxis:*(unsigned __int8 *)(a1 + 48)];
  [v9 setUseAlternativeInstruction:a3 == 0];
  [v9 setSeparatorHidden:*(void *)(a1 + 40) == a3];
  if (*(void *)(a1 + 40) == a3)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(v5 + 72);
    id WeakRetained = objc_loadWeakRetained((id *)(v5 + 80));
    if (*(void *)(*(void *)(a1 + 32) + 88)) {
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 88);
    }
    else {
      uint64_t v8 = 0;
    }
    [v9 setButtonTitle:v6 target:WeakRetained action:v8];
  }
  else
  {
    [v9 setButtonTitle:0 target:0 action:0];
  }
}

void sub_100B20BE8(uint64_t a1, void *a2, unint64_t a3)
{
  id v5 = a2;
  double v6 = 0.0;
  if (!*(unsigned char *)(a1 + 56))
  {
    if (*(void *)(a1 + 48) - 1 <= a3) {
      double v6 = 0.0;
    }
    else {
      double v6 = -78.0;
    }
  }
  id v14 = v5;
  double v7 = [v5 fixedWidthConstraint];

  if (!v7)
  {
    uint64_t v8 = [v14 widthAnchor];
    id v9 = [*(id *)(a1 + 32) widthAnchor];
    id v10 = [v8 constraintEqualToAnchor:v9 multiplier:1.0];
    [v14 setFixedWidthConstraint:v10];
  }
  uint64_t v11 = [v14 fixedWidthConstraint];
  [v11 setConstant:v6];

  id v12 = *(void **)(a1 + 40);
  uint64_t v13 = [v14 fixedWidthConstraint];
  [v12 addObject:v13];
}

BOOL sub_100B21E80(uint64_t a1, uint64_t a2)
{
  return (*(void *)(a1 + 32) & a2) != 0;
}

void sub_100B22984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = 40;
  if (!a3) {
    uint64_t v5 = 32;
  }
  id v6 = *(id *)(a1 + v5);
  id v7 = +[NSAttributedString _mapkit_attributedStringForComposedString:a2 defaultAttributes:v6];
  [*(id *)(a1 + 48) addObject:v7];
}

id sub_100B23098()
{
  if (qword_101610850 != -1) {
    dispatch_once(&qword_101610850, &stru_101318470);
  }
  id v0 = (void *)qword_101610848;

  return v0;
}

void sub_100B23BD4(uint64_t a1, void *a2, unint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  BOOL v7 = *(void *)(a1 + 40) > a3 || *(void *)(a1 + 48) < a3;
  [v5 setHidden:v7];
  [v6 setDrawingScale:*(double *)(a1 + 56)];
  [v6 setVerticalOffset:*(double *)(a1 + 64)];
  if ([*(id *)(a1 + 32) shouldTransformWithVerticalScale])
  {
    [*(id *)(a1 + 32) verticalScale];
    if (v6)
    {
      [v6 _maps_transformScaledToTopAtScale:];
    }
    else
    {
      long long v11 = 0u;
      long long v12 = 0u;
      long long v10 = 0u;
    }
  }
  else
  {
    long long v8 = *(_OWORD *)&CGAffineTransformIdentity.c;
    long long v10 = *(_OWORD *)&CGAffineTransformIdentity.a;
    long long v11 = v8;
    long long v12 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  }
  v9[0] = v10;
  v9[1] = v11;
  id v9[2] = v12;
  [v6 setTransform:v9];
}

void sub_100B24FBC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavSignLaneGuidanceView");
  id v2 = (void *)qword_101610848;
  qword_101610848 = (uint64_t)v1;
}

void sub_100B251FC(id a1, RAPDirectionInstructionsIncorrectQuestion *a2, RAPReportComposerDirectionInstructionsIncorrectViewController *a3)
{
  id v6 = a3;
  BOOL v4 = [(RAPDirectionInstructionsIncorrectQuestion *)a2 isComplete];
  id v5 = [(RAPReportViewController *)v6 sendButtonItem];
  [v5 setEnabled:v4];

  [(RAPReportComposerDirectionInstructionsIncorrectViewController *)v6 _reloadTableViews];
}

void sub_100B260C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100B26154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100B26954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B2697C(uint64_t a1, void *a2)
{
}

void sub_100B2698C(id a1, NSError *a2)
{
  id v2 = sub_1005762E4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    int v5 = 136315650;
    id v6 = "-[RoutePlanningAnalyticsTask routePlanningSession:didUpdateRouteCollectionResult:forTransportType:]_block_invoke_2";
    __int16 v7 = 2080;
    long long v8 = "RoutePlanningAnalyticsTask.m";
    __int16 v9 = 1024;
    int v10 = 87;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", (uint8_t *)&v5, 0x1Cu);
  }

  if (sub_100BB36BC())
  {
    id v3 = sub_1005762E4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      BOOL v4 = +[NSThread callStackSymbols];
      int v5 = 138412290;
      id v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_100B26CE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 title];

  if (v4)
  {
    int v5 = *(void **)(a1 + 32);
    id v6 = [v3 title];
    __int16 v7 = +[NSString _navigation_stringForServerFormattedString:v6];
    [v5 addObject:v7];
  }
  long long v8 = [v3 messageStrings];

  if (v8)
  {
    id v9 = objc_alloc_init((Class)NSMutableArray);
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    int v10 = [v3 messageStrings];
    id v11 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v19;
      do
      {
        id v14 = 0;
        do
        {
          if (*(void *)v19 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = +[NSString _navigation_stringForServerFormattedString:*(void *)(*((void *)&v18 + 1) + 8 * (void)v14)];
          [v9 addObject:v15];

          id v14 = (char *)v14 + 1;
        }
        while (v12 != v14);
        id v12 = [v10 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v12);
    }

    id v16 = *(void **)(a1 + 32);
    uint64_t v17 = [v9 componentsJoinedByString:@"\n"];
    [v16 addObject:v17];
  }
}

void sub_100B27438(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateConstraints];
  [*(id *)(a1 + 32) setNeedsLayout];
  id v2 = [*(id *)(a1 + 32) containerLayoutDelegate];
  [v2 layoutNavContainer];
}

void sub_100B28DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B28DE4(uint64_t a1, void *a2)
{
  id v13 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  int v5 = v13;
  if (isKindOfClass)
  {
    id v6 = v13;
    __int16 v7 = [v6 image];
    [v7 size];
    double v9 = v8;
    int v10 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) image];
    [v10 size];
    double v12 = v11;

    if (v9 > v12) {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    }

    int v5 = v13;
  }
}

void sub_100B29CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B29D08(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  __int16 v7 = *(void **)(a1 + 32);
  id v8 = a2;
  double v9 = [v7 toggles];
  int v10 = [v9 objectAtIndexedSubscript:a3];
  unsigned int v11 = [v10 isSelected];
  unsigned int v12 = [v8 isSelected];

  if (v11 != v12)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    *a4 = 1;
  }
}

void sub_100B29DF8(id a1, AllRefinementsViewModelToggle *a2, unint64_t a3, BOOL *a4)
{
}

void sub_100B2A0CC(id a1, AllRefinementsViewModelMultiSelectElement *a2, unint64_t a3, BOOL *a4)
{
}

void sub_100B2A210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B2A228(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  __int16 v7 = *(void **)(a1 + 32);
  id v8 = a2;
  double v9 = [v7 elements];
  int v10 = [v9 objectAtIndexedSubscript:a3];
  unsigned int v11 = [v10 isSelected];
  unsigned int v12 = [v8 isSelected];

  if (v11 != v12)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    *a4 = 1;
  }
}

void sub_100B2B498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B2B4BC(uint64_t a1, void *a2, void *a3, int a4)
{
  id v7 = a2;
  id v8 = a3;
  if (!v8)
  {
    double v9 = (id *)(a1 + 40);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    unsigned int v11 = [WeakRetained model];
    unsigned int v12 = *(void **)(a1 + 32);

    if (v11 == v12)
    {
      if (a4) {
        double v13 = 0.0;
      }
      else {
        double v13 = 0.300000012;
      }
      id v14 = objc_loadWeakRetained(v9);
      uint64_t v15 = [v14 itemImageView];
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      void v16[2] = sub_100B2B634;
      v16[3] = &unk_1012E6690;
      objc_copyWeak(&v18, v9);
      id v17 = v7;
      +[UIView transitionWithView:v15 duration:5242882 options:v16 animations:0 completion:v13];

      objc_destroyWeak(&v18);
    }
  }
}

void sub_100B2B620(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100B2B634(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained itemImageView];
  [v2 setImage:v1];
}

void sub_100B2B7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B2B7E0(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v4 = WeakRetained;
  if (WeakRetained)
  {
    int v5 = *(void **)(a1 + 32);
    id v6 = [WeakRetained model];
    [v5 isEqual:v6];

    id v7 = [v4 poiIconImageView];
    [v7 setImage:];
  }
}

void sub_100B2CBE0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = objc_initWeak(&location, v1);
  id v3 = [v1 menuForAddButton];

  id v4 = objc_loadWeakRetained(&location);
  int v5 = [v4 addToLibraryOrUserCollectionsButton];
  if (v3) {
    [v5 setMenu:v3];
  }
  else {
    [v5 setEnabled:0];
  }

  objc_destroyWeak(&location);
}

void sub_100B2CC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_100B2CF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
}

void sub_100B2CFD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _tappedAddToUserCollection:*(void *)(a1 + 32)];
}

BOOL sub_100B2DAF0(id a1, GEOMapItemIdentifier *a2, NSDate *a3, BOOL *a4)
{
  [(NSDate *)a3 timeIntervalSinceNow];
  return fabs(v4) >= 86100.0;
}

id sub_100B2DB20(uint64_t a1)
{
  return _[*(id *)(a1 + 32) scheduleEviction];
}

BOOL sub_100B2E1D8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(__int16 *)(a1 + 32);
  id v3 = a2;
  double v4 = +[NSNumber numberWithShort:v2];
  int v5 = [v3 floorOrdinal];

  BOOL v6 = +[NSNumber number:v4 isEqualToNumber:v5];
  return v6;
}

BOOL sub_100B2E264(id a1, VenueAreaIdentifier *a2)
{
  uint64_t v2 = [(VenueAreaIdentifier *)a2 floorOrdinal];
  BOOL v3 = v2 != 0;

  return v3;
}

BOOL sub_100B2E9F4(id a1, VenueAreaIdentifier *a2)
{
  return 1;
}

void sub_100B2F264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B2F288(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  BOOL v6 = v5;
  if (!a3)
  {
    double v13 = v5;
    id v7 = [v5 count];
    BOOL v6 = v13;
    if (v7)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      if (WeakRetained)
      {
        double v9 = [v13 firstObject];
        if (*(unsigned char *)(a1 + 48))
        {
          int v10 = [WeakRetained actionCoordinator];
          unsigned int v11 = [v10 mapCameraController];
          [v11 frameMapItem:v9 animated:1 completion:0];
        }
        unsigned int v12 = [WeakRetained actionCoordinator];
        [v12 viewController:0 selectMapItem:v9 address:0 addToHistory:*(unsigned __int8 *)(a1 + 49) source:*(void *)(a1 + 40)];
      }
      BOOL v6 = v13;
    }
  }
}

void sub_100B2F4A4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) venueFloorViewController];
  [v1 setOpen:0 animated:1];
}

void sub_100B2FBA8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) venueFloorViewController];
  [v1 setOpen:0 animated:1];
}

void sub_100B30B58(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CRSUIDashboardWidgetWindowMapsExtras");
  uint64_t v2 = (void *)qword_101610858;
  qword_101610858 = (uint64_t)v1;
}

void sub_100B32DE8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 24) objectForKeyedSubscript:*(void *)(a1 + 40)];
  if (v2)
  {
    id v7 = v2;
    BOOL v3 = *(void **)(*(void *)(a1 + 32) + 32);
    if (!v3)
    {
      uint64_t v4 = +[NSMutableSet set];
      uint64_t v5 = *(void *)(a1 + 32);
      BOOL v6 = *(void **)(v5 + 32);
      *(void *)(v5 + 32) = v4;

      BOOL v3 = *(void **)(*(void *)(a1 + 32) + 32);
    }
    [v3 addObject:*(void *)(a1 + 40)];
    uint64_t v2 = v7;
  }
}

void sub_100B32EA0(id a1, NavigationFeedbackCollector *a2)
{
  uint64_t v2 = a2;
  id v4 = [(NavigationFeedbackCollector *)v2 feedbackCollector];
  wasEverConnectedToCarpladouble y = v2->_wasEverConnectedToCarplay;

  [v4 setWasEverConnectedToCarplay:wasEverConnectedToCarplay];
}

void sub_100B32FC4(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = [(NavigationFeedbackCollector *)a2 feedbackCollector];
  [v2 setIsEVRoute:1];
}

void sub_100B33018(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = [(NavigationFeedbackCollector *)a2 feedbackCollector];
  [v2 setDidSuggestWalkingRoute:1];
}

void sub_100B3306C(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = [(NavigationFeedbackCollector *)a2 feedbackCollector];
  [v2 setUserDidAcceptWalkingRoute:1];
}

void sub_100B330C0(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = [(NavigationFeedbackCollector *)a2 feedbackCollector];
  [v2 setDidSuggestFindMy:1];
}

void sub_100B33114(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = [(NavigationFeedbackCollector *)a2 feedbackCollector];
  [v2 setUserDidLaunchFindMy:1];
}

void sub_100B332CC(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = a2;
  [(GEOStepFeedback *)v2->_stepFeedback setRoutePaused:1];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  BOOL v3 = v2->_chargingSteps;
  id v4 = [(NSArray *)v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    id v6 = 0;
    uint64_t v7 = *(void *)v12;
    while (2)
    {
      id v8 = 0;
      double v9 = v6;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v3);
        }
        int v10 = *(void **)(*((void *)&v11 + 1) + 8 * (void)v8);
        if (!objc_msgSend(v10, "arrivedAtChargeLocation", (void)v11))
        {
          id v6 = v9;
          goto LABEL_12;
        }
        id v6 = v10;

        id v8 = (char *)v8 + 1;
        double v9 = v6;
      }
      while (v5 != v8);
      id v5 = [(NSArray *)v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  else
  {
    id v6 = 0;
  }
LABEL_12:

  [v6 setRoutePaused:1];
}

void sub_100B33424(id a1, NavigationFeedbackCollector *a2)
{
  a2->_batteryDied = 1;
  id v2 = [(NavigationFeedbackCollector *)a2 feedbackCollector];
  [v2 setBatteryDied:1];
}

void sub_100B33510(uint64_t a1, void *a2)
{
  long long v13 = a2;
  BOOL v3 = [*(id *)(a1 + 32) currentRoute];
  id v4 = [v3 waypoints];
  id v5 = [v4 count];
  id v6 = [*(id *)(a1 + 40) waypoints];
  id v7 = [v6 count];

  if (v5 >= v7)
  {
    long long v11 = objc_opt_new();
    double v9 = v11;
    if (*(unsigned char *)(a1 + 48)) {
      uint64_t v12 = 1;
    }
    else {
      uint64_t v12 = 2;
    }
    [v11 setDodgeballAction:v12];
    [v13[14] addObject:v9];
  }
  else
  {
    id v8 = objc_opt_new();
    double v9 = v8;
    if (*(unsigned char *)(a1 + 48)) {
      uint64_t v10 = 1;
    }
    else {
      uint64_t v10 = 2;
    }
    [v8 setStopAddedAction:v10];
    [v13[13] addObject:v9];
    if (*(unsigned char *)(a1 + 48)) {
      [v13[27] setChargingStopAdded:1];
    }
  }
}

BOOL sub_100B336F8(id a1, GEOComposedWaypoint *a2, unint64_t a3, BOOL *a4)
{
  id v5 = [(GEOComposedWaypoint *)a2 chargingInfo];

  if (v5) {
    *a4 = 1;
  }
  return v5 != 0;
}

void sub_100B3387C(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = a2;
  BOOL v3 = [(NavigationFeedbackCollector *)v2 currentRoute];
  unsigned int v4 = [v3 isEVRoute];

  if (v4)
  {
    [(NavigationEVBadTripFeedbackCollector *)v2->_badTripCollector startRecording];
    uint64_t v5 = [(NavigationFeedbackCollector *)v2 _stateOfChargeOfCurrentVehicle];
    initialStateOfCharge = v2->_initialStateOfCharge;
    v2->_initialStateOfCharge = (NSNumber *)v5;

    id v7 = [(NavigationFeedbackCollector *)v2 currentRoute];
    id v8 = [v7 steps];
    double v9 = [v8 lastObject];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    id v11 = v10;

    uint64_t v12 = [v11 evInfo];

    if (v12)
    {
      uint64_t v13 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v12 remainingBatteryCharge]);
      expectedFinalStateOfCharge = v2->_expectedFinalStateOfCharge;
      v2->_expectedFinalStateOfCharge = (NSNumber *)v13;
    }
    else
    {
      uint64_t v15 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "_saveExpectedFinalStateOfChargeIfNeeded: EV route didn't have a step info in the last step.", v16, 2u);
      }
    }
  }
}

GEOWaypointInfo *__cdecl sub_100B33C90(id a1, GEOComposedRouteLeg *a2, unint64_t a3)
{
  BOOL v3 = a2;
  id v4 = objc_alloc_init((Class)GEOWaypointInfo);
  uint64_t v5 = [(GEOComposedRouteLeg *)v3 destination];
  id v6 = [v5 latLng];
  [v4 setPosition:v6];

  id v7 = [(GEOComposedRouteLeg *)v3 chargingStationInfo];

  if (v7)
  {
    [v4 setMuid:[v7 muid]];
    id v8 = [v7 name];
    [v4 setName:v8];

    id v9 = objc_alloc_init((Class)GEOEVChargingInfo);
    [v7 batteryChargeAfterCharging];
    [v9 setBatteryChargeAfterCharging:v10];
    [v7 batteryPercentageAfterCharging];
    [v9 setBatteryPercentageAfterCharging:v11];
    [v7 chargingTime];
    [v9 setChargingTime:v12];
    [v4 setEvChargingInfo:v9];
  }

  return (GEOWaypointInfo *)v4;
}

void sub_100B33DCC(id a1, NavigationFeedbackCollector *a2)
{
  id v9 = a2;
  id v2 = [(NavigationFeedbackCollector *)v9 currentRoute];
  BOOL v3 = [v2 chargingStationInfos];
  id v4 = [v3 count];

  if (v4)
  {
    uint64_t v5 = [(NavigationFeedbackCollector *)v9 currentRoute];
    id v6 = [v5 chargingStationInfos];
    uint64_t v7 = sub_100099700(v6, &stru_101318968);
    chargingSteps = v9->_chargingSteps;
    v9->_chargingSteps = (NSArray *)v7;
  }
}

GEOChargeLocationDetails *__cdecl sub_100B33E84(id a1, GEOComposedRouteStep *a2, unint64_t a3)
{
  id v3 = objc_alloc_init((Class)GEOChargeLocationDetails);

  return (GEOChargeLocationDetails *)v3;
}

void sub_100B33F48(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 currentRoute];
  unsigned int v5 = [v4 isEVRoute];

  if (v5)
  {
    uint64_t v17 = 0;
    id v18 = &v17;
    uint64_t v19 = 0x2020000000;
    uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
    id v6 = [v3 currentRoute];
    uint64_t v7 = [v6 chargingStationInfos];
    double v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472;
    uint64_t v13 = sub_100B34170;
    long long v14 = &unk_101318990;
    id v15 = *(id *)(a1 + 32);
    id v16 = &v17;
    [v7 enumerateObjectsUsingBlock:&v11];

    unint64_t v8 = v18[3];
    if (v8 == 0x7FFFFFFFFFFFFFFFLL || v8 >= (unint64_t)objc_msgSend(v3[12], "count", v11, v12, v13, v14))
    {
      GEOFindOrCreateLog();
      id v9 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        double v10 = [*(id *)(a1 + 32) shortDescription];
        *(_DWORD *)long long buf = 138412290;
        uint64_t v22 = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "_captureArrivalAtWaypoint: %@, couldn't find correct charging step", buf, 0xCu);
      }
    }
    else
    {
      id v9 = [v3[12] objectAtIndexedSubscript:v18[3]];
      [v9 setArrivedAtChargeLocation:1];
    }

    _Block_object_dispose(&v17, 8);
  }
}

void sub_100B34148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B34170(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  id v7 = [*(id *)(a1 + 32) chargingInfo];
  if (v7 == v11)
  {

    goto LABEL_5;
  }
  id v8 = [v11 muid];
  id v9 = [*(id *)(a1 + 32) chargingInfo];
  id v10 = [v9 muid];

  if (v8 == v10)
  {
LABEL_5:
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_100B343E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      id v4 = NSStringFromSelector(*(SEL *)(a1 + 48));
      int v5 = 138412290;
      id v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "NavigationFeedbackCollector was deallocated in %@ before executing feedback collection block.", (uint8_t *)&v5, 0xCu);
    }
  }
}

int64_t sub_100B354A0(id a1, MNGuidanceEventFeedback *a2, MNGuidanceEventFeedback *a3)
{
  id v4 = a2;
  int v5 = a3;
  [(MNGuidanceEventFeedback *)v4 startTime];
  double v7 = v6;
  [(MNGuidanceEventFeedback *)v5 startTime];
  if (v7 >= v8)
  {
    [(MNGuidanceEventFeedback *)v4 startTime];
    double v11 = v10;
    [(MNGuidanceEventFeedback *)v5 startTime];
    int64_t v9 = v11 > v12;
  }
  else
  {
    int64_t v9 = -1;
  }

  return v9;
}

void sub_100B3574C(uint64_t a1)
{
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id obj = *(id *)(*(void *)(a1 + 32) + 152);
  id v43 = [obj countByEnumeratingWithState:&v44 objects:v52 count:16];
  os_log_t v1 = 0;
  id v2 = 0;
  if (v43)
  {
    uint64_t v42 = *(void *)v45;
    do
    {
      for (uint64_t i = 0; i != v43; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v45 != v42) {
          objc_enumerationMutation(obj);
        }
        id v4 = *(void **)(*((void *)&v44 + 1) + 8 * i);
        int v5 = [v4 error];
        double v6 = [v5 _geo_directionsErrorInfo];

        double v7 = [v4 error];
        double v8 = [v7 _geo_etaTrafficUpdateErrorInfo];

        if (([v6 shouldPromptForRadar] & 1) != 0
          || [v8 shouldPromptForRadar])
        {
          if (v2)
          {
            if (v1)
            {
LABEL_10:
              int64_t v9 = @"Directions";
              if (!v6) {
                int64_t v9 = @"ETAU";
              }
              double v10 = v9;
              double v11 = [v4 date];
              double v12 = v1;
              uint64_t v13 = [v1 stringFromDate:v11];
              long long v14 = +[NSMutableString stringWithFormat:@"• %@ (%@)", v13, v10];

              if (v6) {
                [v6 internalServerErrors];
              }
              else {
              id v15 = [v8 internalErrors];
              }
              id v16 = [v15 componentsJoinedByString:@"\n   "];
              [v14 appendFormat:@"\n   %@", v16];

              [v2 addObject:v14];
              os_log_t v1 = v12;
              goto LABEL_18;
            }
          }
          else
          {
            id v2 = +[NSMutableArray array];
            if (v1) {
              goto LABEL_10;
            }
          }
          os_log_t v1 = objc_opt_new();
          [v1 setDateFormat:@"YYYY-MM-dd HH:mm:ssZ"];
          goto LABEL_10;
        }
LABEL_18:
      }
      id v43 = [obj countByEnumeratingWithState:&v44 objects:v52 count:16];
    }
    while (v43);
  }

  if ([v2 count])
  {
    uint64_t v17 = v1;
    if (GEOConfigGetBOOL())
    {
      id v18 = objc_opt_new();
      [v18 setTitle:@"Routing service errors detected"];
      uint64_t v19 = [v2 componentsJoinedByString:@"\n\n"];
      uint64_t v20 = +[NSString stringWithFormat:@"%@\n", v19];
      [v18 setDescriptionText:v20];

      [v18 setClassification:7];
      [v18 setReproducibility:5];
      long long v21 = +[MapsRadarComponent mapsNavFrameworkComponent];
      [v18 setComponent:v21];

      uint64_t v22 = sub_10000AF10();
      uint64_t v23 = a1;
      if (!os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
LABEL_40:

        id v36 = +[MapsRadarController sharedInstance];
        [v36 launchTTRWithRadar:v18 promptTitle:@"routing service errors were detected during navigation" fromViewController:0];

        goto LABEL_43;
      }
      id v24 = *(id *)(a1 + 32);
      if (!v24)
      {
        id v29 = @"<nil>";
        goto LABEL_39;
      }
      uint64_t v25 = (objc_class *)objc_opt_class();
      double v26 = NSStringFromClass(v25);
      if (objc_opt_respondsToSelector())
      {
        id v27 = [v24 performSelector:"accessibilityIdentifier"];
        id v28 = v27;
        if (v27 && ![v27 isEqualToString:v26])
        {
          id v29 = +[NSString stringWithFormat:@"%@<%p, %@>", v26, v24, v28];

          goto LABEL_29;
        }
      }
      id v29 = +[NSString stringWithFormat:@"%@<%p>", v26, v24];
LABEL_29:

LABEL_39:
      *(_DWORD *)long long buf = 138543362;
      uint64_t v49 = v29;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[%{public}@] Launching TTR for Routing service errors.", buf, 0xCu);

      goto LABEL_40;
    }
    id v18 = sub_10000AF10();
    uint64_t v23 = a1;
    if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
LABEL_43:

      uint64_t v38 = *(void *)(v23 + 32);
      long long v39 = *(void **)(v38 + 152);
      *(void *)(v38 + 152) = 0;

      os_log_t v1 = v17;
      goto LABEL_44;
    }
    id v30 = *(id *)(a1 + 32);
    if (!v30)
    {
      uint64_t v35 = @"<nil>";
      goto LABEL_42;
    }
    long long v31 = (objc_class *)objc_opt_class();
    long long v32 = NSStringFromClass(v31);
    if (objc_opt_respondsToSelector())
    {
      long long v33 = [v30 performSelector:"accessibilityIdentifier"];
      long long v34 = v33;
      if (v33 && ![v33 isEqualToString:v32])
      {
        uint64_t v35 = +[NSString stringWithFormat:@"%@<%p, %@>", v32, v30, v34];

        goto LABEL_37;
      }
    }
    uint64_t v35 = +[NSString stringWithFormat:@"%@<%p>", v32, v30];
LABEL_37:

LABEL_42:
    id v37 = [v2 componentsJoinedByString:@"\n\n"];
    *(_DWORD *)long long buf = 138543618;
    uint64_t v49 = v35;
    __int16 v50 = 2112;
    long long v51 = v37;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "[%{public}@] Routing service errors were detected, but not asking for Radar. Errors:\n\n%@\n", buf, 0x16u);

    goto LABEL_43;
  }
LABEL_44:
}

void sub_100B35DC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 reset];
  id v4 = +[MNNavigationService sharedService];
  id v5 = [v4 navigationTransportType];
  if (v5 == 4)
  {
    double v6 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "At the start of navigation there wasn't a transport type.", v24, 2u);
    }

    id v5 = [v4 desiredTransportType];
  }
  double v7 = [v3 feedbackCollector];
  [v7 setTransportType:v5];

  double v8 = [v4 route];
  if (v8)
  {
    int64_t v9 = [v4 currentResponse];
    uint64_t v10 = [v9 directionsResponseID];
    double v11 = (void *)v3[1];
    v3[1] = v10;

    [v3 setCurrentRoute:v8];
    if ([v8 isEVRoute]) {
      [v3 _captureInitialEVRouteState];
    }
    id v12 = [v3 _navigationModeTypeForState:*(void *)(a1 + 32)];
    uint64_t v13 = [v3 feedbackCollector];
    [v13 startFeedbackSessionForResponseID:v3[1] withNavigationType:v12];

    long long v14 = [v8 steps];
    uint64_t v15 = [v14 firstObject];
    id v16 = (void *)v3[28];
    v3[28] = v15;

    [v3 _openNewStepFeedbackWithRoute:v8 step:v3[28]];
    uint64_t v17 = [v3 feedbackCollector];
    [v17 setOriginalExpectedTime:[v8 expectedTime]];
  }
  [v3 _runAsyncBlockOnMainQueue:&stru_1013189F0];
  id v18 = [v4 currentRequest];
  uint64_t v19 = [v4 currentResponse];
  uint64_t v20 = +[GEOUserSession sharedInstance];
  unsigned int v21 = [v19 hasDirectionsResponseID];
  if (v21)
  {
    uint64_t v22 = [v19 directionsResponseID];
  }
  else
  {
    uint64_t v22 = 0;
  }
  if ([v18 hasOriginalDirectionsResponseID])
  {
    uint64_t v23 = [v18 originalDirectionsResponseID];
    [v20 startNavigationSessionWithDirectionsID:v22 originalDirectionsID:v23];

    if (!v21) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  [v20 startNavigationSessionWithDirectionsID:v22 originalDirectionsID:0];
  if (v21) {
LABEL_16:
  }

LABEL_17:
}

void sub_100B36080(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = a2;
  id v3 = objc_alloc_init(NavigationAudioFeedbackCollector);
  [(NavigationFeedbackCollector *)v2 setAudioFeedbackCollector:v3];

  id v4 = [(NavigationFeedbackCollector *)v2 audioFeedbackCollector];

  [v4 startSession];
}

void sub_100B36174(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3[26] isEVRoute])
  {
    [v3 _updateFeedbackCollectorWithEVData];
    [v3 _captureSessionlessEVRouteMessageIfNeeded];
  }
  if (v3[6]) {
    [v3 _completeCurrentStepFeedback:0];
  }
  [v3 _flushModalitiesFeedback];
  id v4 = [v3 lastLocation];

  if (v4)
  {
    id v5 = [v3 feedbackCollector];
    double v6 = [v3 lastLocation];
    [v5 setFinalLocation:v6 asArrival:[v3 didArrive]];

    double v7 = [v3 feedbackCollector];
    double v8 = [v7 parkingDetectionLocation];

    if (!v8)
    {
      int64_t v9 = [v3 lastLocation];
      uint64_t v10 = [v3 feedbackCollector];
      [v10 setParkingDetectionLocation:v9];
    }
  }
  double v11 = [v3 feedbackCollector];
  unsigned int v12 = [v11 userDidAcceptWalkingRoute];

  uint64_t v13 = [v3 feedbackCollector];
  long long v14 = v13;
  if (v12)
  {
    uint64_t v15 = 3;
  }
  else
  {
    unsigned int v16 = [v13 userDidLaunchFindMy];

    if (v16)
    {
      uint64_t v13 = [v3 feedbackCollector];
      long long v14 = v13;
      uint64_t v15 = 4;
    }
    else if (v3[22])
    {
      uint64_t v13 = [v3 feedbackCollector];
      long long v14 = v13;
      uint64_t v15 = 2;
    }
    else
    {
      uint64_t v17 = *(void *)(a1 + 32);
      uint64_t v13 = [v3 feedbackCollector];
      long long v14 = v13;
      uint64_t v15 = v17;
    }
  }
  [v13 setEndReason:v15];

  id v18 = +[PedestrianARSessionUsageTracker sharedInstance];
  uint64_t v19 = [v3[26] uniqueRouteID];
  uint64_t v20 = [v19 UUIDString];
  unsigned int v21 = [v18 hasUserEnteredARForRoute:v20 entryPoint:1];

  if (v21)
  {
    uint64_t v22 = [v3 feedbackCollector];
    [v22 setARWalkingUsedInNavigation:1];
  }
  uint64_t v23 = [v3 audioFeedbackCollector];
  [v23 endSession];

  [v3 setAudioFeedbackCollector:0];
  id v24 = [v3 audioFeedbackCollector];
  id v25 = [v24 audioFeedback];

  double v26 = [v3 feedbackCollector];
  [v26 setAudioFeedback:v25];

  [v3 _addGuidance];
  [v3 _addArrival];
  if ([v3 _shouldSendFeedback])
  {
    id v27 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
    {
      id v28 = [v3 feedbackCollector];
      int v31 = 138477827;
      long long v32 = v28;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "Ending feedback session: %{private}@", (uint8_t *)&v31, 0xCu);
    }
    id v29 = [v3 feedbackCollector];
    [v29 endFeedbackSessionWithTracePath:v3[2]];
  }
  else
  {
    id v29 = [v3 feedbackCollector];
    [v29 reset];
  }

  id v30 = +[GEOUserSession sharedInstance];
  [v30 endNavigationSession];
}

void sub_100B365B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)GEOLocation);
  id v5 = [*(id *)(a1 + 32) rawLocation];
  id v6 = [v4 initWithCLLocation:v5];

  [v3 _setLastLocation:v6];
  if (([v3 didArrive] & 1) == 0)
  {
    double v7 = [*(id *)(a1 + 32) routeMatch];
    unsigned int v8 = [v7 isGoodMatch];

    if (v8)
    {
      id v9 = [*(id *)(a1 + 32) stepIndex];
      uint64_t v10 = [*(id *)(a1 + 32) routeMatch];
      double v11 = [v10 route];

      if (!v11) {
        goto LABEL_21;
      }
      if (v9 == (id)0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_21;
      }
      unsigned int v12 = [v11 steps];
      id v13 = [v12 count];

      if (v9 >= v13) {
        goto LABEL_21;
      }
      long long v14 = [v11 stepAtIndex:v9];
      uint64_t v15 = [v11 uniqueRouteID];
      unsigned int v16 = [*(id *)(*(void *)(a1 + 40) + 208) uniqueRouteID];
      unsigned __int8 v17 = [v15 isEqual:v16];

      if (v17)
      {
        id v18 = [v3 prevStep];

        if (v18)
        {
          uint64_t v19 = [v3 prevStep];
          unsigned int v20 = [v19 stepID];
          unsigned int v21 = [v14 stepID];

          if (v20 == v21)
          {
LABEL_20:

LABEL_21:
            goto LABEL_22;
          }
          uint64_t v22 = GEOFindOrCreateLog();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
          {
            unsigned int v23 = [v3[28] stepID];
            int v29 = 67109376;
            *(_DWORD *)id v30 = v23;
            *(_WORD *)&void v30[4] = 1024;
            *(_DWORD *)&v30[6] = [v14 stepID];
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "New step: %u => %u", (uint8_t *)&v29, 0xEu);
          }

          uint64_t v24 = 1;
LABEL_19:
          [v3 _completeCurrentStepFeedback:v24];
          [v3 _openNewStepFeedbackWithRoute:v11 step:v14];
          objc_storeStrong(v3 + 28, v14);
          goto LABEL_20;
        }
        id v28 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          int v29 = 134217984;
          *(void *)id v30 = [v14 stepID];
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "New start step: %lu", (uint8_t *)&v29, 0xCu);
        }
      }
      else
      {
        id v25 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          double v26 = [v3[26] uniqueRouteID];
          id v27 = [v11 uniqueRouteID];
          int v29 = 138412546;
          *(void *)id v30 = v26;
          *(_WORD *)&v30[8] = 2112;
          int v31 = v27;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "New route outside of reroute: %@ => %@", (uint8_t *)&v29, 0x16u);
        }
        [v3 setCurrentRoute:v11];
      }
      uint64_t v24 = 0;
      goto LABEL_19;
    }
  }
LABEL_22:
}

void sub_100B36CFC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = [v3 _navigationModeTypeForState:v2];
  id v5 = [v3 feedbackCollector];

  [v5 changeNavigationType:v4];
}

void sub_100B36D6C(id a1, NavigationFeedbackCollector *a2)
{
  id v4 = a2;
  if ([(GEOComposedRoute *)v4->_currentRoute isEVRoute])
  {
    BOOL v2 = [(NavigationEVBadTripFeedbackCollector *)v4->_badTripCollector isBadTrip];
    id v3 = [(NavigationFeedbackCollector *)v4 feedbackCollector];
    [v3 setIsBadEvExperience:v2];

    [(NavigationEVBadTripFeedbackCollector *)v4->_badTripCollector stopRecording];
  }
}

void sub_100B36F70(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = [*(id *)(a1 + 32) route];
  unsigned __int8 v4 = [v3 isLegIndexOfLastLeg:*(void *)(a1 + 48)];

  if ((v4 & 1) != 0
    || ([*(id *)(a1 + 40) chargingInfo],
        id v5 = objc_claimAutoreleasedReturnValue(),
        v5,
        !v5))
  {
    [v9 setDidArrive:1];
    [v9 _completeCurrentStepFeedback:1];
    id v6 = [v9 lastLocation];

    if (v6)
    {
      double v7 = [v9 feedbackCollector];
      unsigned int v8 = [v9 lastLocation];
      [v7 setFinalLocation:v8 asArrival:1];
    }
  }
  else
  {
    [v9 _captureArrivalAtWaypoint:*(void *)(a1 + 40)];
  }
}

void sub_100B3707C(id a1, NavigationFeedbackCollector *a2)
{
  id v2 = [(NavigationFeedbackCollector *)a2 feedbackCollector];
  [v2 setHasEnteredPreArrivalMode:1];
}

void sub_100B370DC(id a1, NavigationFeedbackCollector *a2)
{
}

void sub_100B371B8(uint64_t a1, void *a2)
{
  long long v34 = a2;
  [v34 _completeCurrentStepFeedback:0];
  id v3 = [*(id *)(a1 + 32) currentResponse];
  unsigned __int8 v4 = [v3 directionsResponseID];

  if (v4 && ([v4 isEqualToData:v34[1]] & 1) == 0)
  {
    [v34 _flushModalitiesFeedback];
    objc_storeStrong(v34 + 1, v4);
    id v5 = [v34 feedbackCollector];
    [v5 setupFeedbackSessionWithResponseID:v34[1]];
  }
  id v6 = [*(id *)(a1 + 40) steps];
  double v7 = [v6 firstObject];

  [v34 _openNewStepFeedbackWithRoute:*(void *)(a1 + 40) step:v7];
  [v34 setPrevStep:v7];
  if ([v34[8] containsObject:*(void *)(a1 + 40)])
  {
    unsigned int v8 = [*(id *)(a1 + 32) alternateRoutes];
    id v9 = [v34 currentRoute];
    unsigned int v10 = [v8 containsObject:v9];

    id v11 = objc_alloc_init((Class)GEOTrafficRerouteFeedback);
    [v11 setRerouteType:1];
    if (v10) {
      uint64_t v12 = 1;
    }
    else {
      uint64_t v12 = 5;
    }
    [v11 setActionType:v12];
    id v13 = [*(id *)(a1 + 40) serverRouteID];
    [v11 setReroutedRouteID:v13];

    [v11 setBackgrounded:*(unsigned __int8 *)(a1 + 48)];
    long long v14 = [*(id *)(a1 + 32) etaRouteForRoute:*(void *)(a1 + 40)];
    uint64_t v15 = v14;
    if (v14)
    {
      [v14 travelDuration];
      [v11 setReroutedRouteTravelTime:v16];
      [v15 historicTravelDuration];
      unint64_t v18 = v17;
    }
    else
    {
      [v11 setReroutedRouteTravelTime:[*(id *)(a1 + 40) expectedTime]];
      unint64_t v18 = (unint64_t)[*(id *)(a1 + 40) historicTravelTime];
    }
    [v11 setReroutedRouteHistoricTravelTime:v18];
    id v19 = v34[7];
    if (v19)
    {
      unsigned int v20 = [v19 routes];
      unsigned int v21 = [v20 firstObject];

      uint64_t v22 = [v21 routeID];
      [v11 setOldRouteID:v22];

      [v21 expectedTime];
      [v11 setOldRouteTravelTime:v23];
      [v11 setOldRouteHistoricTravelTime:[v21 historicTravelTime]];
      uint64_t v24 = [v21 incidentsOnETARoutes];
      [v11 setOldRouteIncidents:v24];

      id v25 = [v34[7] responseId];
      [v11 setResponseId:v25];
    }
    if (v10)
    {
      double v26 = [v34 previousAlert];

      if (v26)
      {
        id v27 = [v34 previousAlert];
        id v28 = [v27 bannerID];
        id v29 = [v28 copy];
        [v11 setDisplayedBannerId:v29];

        id v30 = [v34 previousAlert];
        [v30 distanceToDestination];
        [v11 setDistanceToDestination:];

        [v34 setPreviousAlert:0];
      }
    }
    int v31 = [v34 feedbackCollector];
    [v31 addTrafficRerouteFeedback:v11];
  }
  [v34 setCurrentRoute:*(void *)(a1 + 40)];
  uint64_t v32 = [*(id *)(a1 + 32) alternateRoutes];
  id v33 = v34[8];
  v34[8] = (id)v32;
}

void sub_100B375F0(uint64_t a1, uint64_t a2)
{
}

void sub_100B376C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = *(void **)(a1 + 32);
  id v6 = v3;
  id v5 = [v3 currentRoute];

  if (v4 == v5) {
    objc_storeStrong(v6 + 7, *(id *)(a1 + 40));
  }
}

void sub_100B377DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3[6] && !*((unsigned char *)v3 + 40))
  {
    unsigned __int8 v4 = v3;
    [v3[6] setLightGuidance:[*(id *)(a1 + 32) state] == 5];
    id v3 = v4;
  }
  if (*(double *)(a1 + 40) <= 0.0)
  {
    if (!*((unsigned char *)v3 + 40))
    {
      *((unsigned char *)v3 + 40) = 1;
      id v5 = v3;
      [v3 _didStartManeuver];
      id v3 = v5;
    }
  }
  else
  {
    *((unsigned char *)v3 + 40) = 0;
  }
}

void sub_100B37910(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v6 = [v2 copy];
  unsigned __int8 v4 = (void *)v3[3];

  id v5 = [v6 uniqueID];
  [v4 setObject:v6 forKeyedSubscript:v5];
}

void sub_100B37A20(uint64_t a1, void *a2)
{
  unsigned __int8 v4 = (void *)a2[3];
  id v5 = *(void **)(a1 + 32);
  id v6 = a2;
  double v7 = [v5 uniqueID];
  id v11 = [v4 objectForKey:v7];

  id v8 = [*(id *)(a1 + 32) copy];
  id v9 = (void *)a2[3];

  unsigned int v10 = [v8 uniqueID];
  [v9 setObject:v8 forKeyedSubscript:v10];

  if (v11)
  {
    [v8 setSelectedPrimaryStringIndex:[v11 selectedPrimaryStringIndex]];
    [v8 setSelectedSecondaryStringIndex:[v11 selectedSecondaryStringIndex]];
    [v11 maneuverTime];
    [v8 setManeuverTime:];
  }
}

void sub_100B37DF0(id a1, NavigationFeedbackCollector *a2)
{
}

void sub_100B37E64(uint64_t a1, void *a2)
{
  id v15 = a2;
  id v3 = objc_alloc_init((Class)GEOModality);
  +[NSDate timeIntervalSinceReferenceDate];
  [v3 setTimestamp:];
  [v3 setNotMoving:(*(void *)(a1 + 32) & 1) == 0];
  unsigned __int8 v4 = (void *)*((void *)v15 + 26);
  if (v4)
  {
    unsigned int v5 = [v4 transportType];
    BOOL v6 = 0;
    uint64_t v7 = 16;
    switch(v5)
    {
      case 0u:
        goto LABEL_6;
      case 1u:
      case 4u:
      case 5u:
      case 6u:
        goto LABEL_7;
      case 2u:
        uint64_t v7 = 6;
        goto LABEL_6;
      case 3u:
        uint64_t v7 = 8;
LABEL_6:
        BOOL v6 = (*(void *)(a1 + 32) & v7) != 0;
        goto LABEL_7;
      default:
        goto LABEL_8;
    }
  }
  BOOL v6 = 0;
LABEL_7:
  [v3 setExpectedModality:v6];
LABEL_8:
  if (*(void *)(a1 + 40) <= 2uLL) {
    [v3 setConfidence:];
  }
  id v8 = [*((id *)v15 + 9) lastObject];
  if (!v8
    || (unsigned int v9 = [v3 confidence], v9 != objc_msgSend(v8, "confidence"))
    || (unsigned int v10 = [v3 expectedModality],
        v10 != [v8 expectedModality])
    || (unsigned int v11 = [v3 notMoving], v11 != objc_msgSend(v8, "notMoving")))
  {
    uint64_t v12 = (void *)*((void *)v15 + 9);
    if (!v12)
    {
      uint64_t v13 = +[NSMutableArray array];
      long long v14 = (void *)*((void *)v15 + 9);
      *((void *)v15 + 9) = v13;

      uint64_t v12 = (void *)*((void *)v15 + 9);
    }
    [v12 addObject:v3];
  }
}

void sub_100B380C8(uint64_t a1, uint64_t a2)
{
}

void sub_100B380E4(id a1, NavigationFeedbackCollector *a2)
{
}

void sub_100B380FC(id a1, NavigationFeedbackCollector *a2)
{
}

void sub_100B381AC(uint64_t a1, void *a2)
{
  BOOL v6 = a2;
  id v3 = [v6 currentRoute];
  unsigned int v4 = [v3 isEVRoute];

  if (v4)
  {
    if ((((unint64_t)[*(id *)(a1 + 32) alertType] - 1) & 0xFFFFFFFFFFFFFFFALL) == 0)
    {
      unsigned int v5 = [*(id *)(a1 + 32) alternateRoute];

      if (v5) {
        v6[89] = 1;
      }
    }
  }
}

id sub_100B38474(uint64_t a1, void *a2)
{
  return _[a2 _didSelectAlternate:*(void *)(a1 + 40) forPrimaryString:*(unsigned __int8 *)(a1 + 48) inSign:*(void *)(a1 + 32)];
}

id sub_100B3852C(uint64_t a1, void *a2)
{
  return _[a2 _didSelectAlternate:*(void *)(a1 + 40) forPrimaryString:*(unsigned __int8 *)(a1 + 48) inSign:*(void *)(a1 + 32)];
}

id sub_100B38C90(uint64_t a1, void *a2)
{
  id v3 = [a2 canCreateSubmittableProblem];
  unsigned int v4 = *(void **)(a1 + 32);

  return [v4 setEnabled:v3];
}

id *sub_100B38DA0(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] invokeCompletionWithOutcome:1];
  }
  return result;
}

void sub_100B3908C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B390B0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3 == 1)
  {
    id v8 = v5;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v7 = +[RAPAcknowledgementOptions defaultOptions];
    [WeakRetained _sendWithFinalOutcome:1 acknowledgementOptions:v7];
  }
  else
  {
    if (a3) {
      goto LABEL_6;
    }
    id v8 = v5;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _cancelWithAnalyticsTarget:603];
  }

  id v5 = v8;
LABEL_6:
}

void sub_100B3943C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B39460(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3 == 1)
  {
    id v8 = v5;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v7 = +[RAPAcknowledgementOptions defaultOptions];
    [WeakRetained _sendWithFinalOutcome:1 acknowledgementOptions:v7];
  }
  else
  {
    if (a3) {
      goto LABEL_6;
    }
    id v8 = v5;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _cancelWithAnalyticsTarget:1151];
  }

  id v5 = v8;
LABEL_6:
}

void sub_100B39808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B3982C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (a3 == 1)
    {
      id v7 = WeakRetained;
      BOOL v6 = +[RAPAcknowledgementOptions defaultOptions];
      [v7 _sendWithFinalOutcome:1 acknowledgementOptions:v6];
    }
    else
    {
      if (a3) {
        goto LABEL_7;
      }
      id v7 = WeakRetained;
      [WeakRetained _cancelWithAnalyticsTarget:[*(id *)(a1 + 32) analyticTarget]];
    }
    id WeakRetained = v7;
  }
LABEL_7:
}

uint64_t sub_100B398CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100B398DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B39AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B39B28(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3 == 1)
  {
    id v8 = v5;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v7 = +[RAPAcknowledgementOptions defaultOptions];
    [WeakRetained _sendWithFinalOutcome:1 acknowledgementOptions:v7];
  }
  else
  {
    if (a3) {
      goto LABEL_6;
    }
    id v8 = v5;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _cancelWithAnalyticsTarget:0];
  }

  id v5 = v8;
LABEL_6:
}

void sub_100B3A44C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_100B3A484(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  +[RAPAnalyticsManager captureRAPAcknowledgementDoneActionFromReport:WeakRetained[2]];
  [WeakRetained _invokeCompletionWithOutcome:*(void *)(a1 + 40)];
}

void sub_100B3A4F4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = +[NSBundle mainBundle];
  BOOL v6 = [v5 localizedStringForKey:@"Report an Issue" value:@"localized string not found" table:0];
  id v7 = sub_100521B68();
  id v8 = +[UIAlertController alertControllerWithTitle:v6 message:v7 preferredStyle:1];

  unsigned int v9 = +[NSBundle mainBundle];
  unsigned int v10 = [v9 localizedStringForKey:@"RAP_Cancel" value:@"localized string not found" table:0];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100B3A748;
  v22[3] = &unk_1012E6E08;
  id v11 = v4;
  id v23 = v11;
  uint64_t v12 = +[UIAlertAction actionWithTitle:v10 style:1 handler:v22];
  [v8 addAction:v12];

  uint64_t v13 = +[NSBundle mainBundle];
  long long v14 = [v13 localizedStringForKey:@"OK" value:@"localized string not found" table:0];
  double v17 = _NSConcreteStackBlock;
  uint64_t v18 = 3221225472;
  id v19 = sub_100B3A75C;
  unsigned int v20 = &unk_1012E6E08;
  id v21 = v11;
  id v15 = v11;
  double v16 = +[UIAlertAction actionWithTitle:v14 style:0 handler:&v17];
  [v8 addAction:v16, v17, v18, v19, v20];

  [*(id *)(a1 + 32) presentViewController:v8 animated:1 completion:0];
}

uint64_t sub_100B3A748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100B3A75C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B3A770(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = sub_1009A033C();
    uint64_t v3 = *(void *)(a1 + 40);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;

    [*(id *)(*(void *)(a1 + 40) + 40) startAnimating];
    id v5 = *(void **)(a1 + 40);
    uint64_t v6 = v5[5];
    id v7 = [v5 topViewController];
    id v8 = [v7 navigationItem];
    unsigned int v9 = [v8 rightBarButtonItem];
    [v9 setCustomView:v6];

    id v12 = [*(id *)(a1 + 40) navigationBar];
    [v12 setUserInteractionEnabled:0];
  }
  else
  {
    unsigned int v10 = *(void **)(a1 + 40);
    uint64_t v11 = *(void *)(a1 + 48);
    [v10 _invokeCompletionWithOutcome:v11];
  }
}

void sub_100B3A874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  [*(id *)(*(void *)(a1 + 32) + 40) stopAnimating];
  id v5 = [*(id *)(a1 + 32) navigationBar];
  [v5 setUserInteractionEnabled:1];

  if (a3 || !*(void *)(a1 + 40))
  {
    uint64_t v6 = [*(id *)(a1 + 32) topViewController];
    id v7 = [v6 navigationItem];
    id v8 = [v7 rightBarButtonItem];
    [v8 setCustomView:0];

    sub_1009A038C();
    uint64_t v11 = (RAPSendingTitleView *)objc_claimAutoreleasedReturnValue();
    unsigned int v9 = [*(id *)(a1 + 32) topViewController];
    [v9 presentViewController:v11 animated:1 completion:0];
  }
  else
  {
    uint64_t v11 = objc_alloc_init(RAPSendingTitleView);
    [(RAPSendingTitleView *)v11 sizeToFit];
    unsigned int v10 = +[RAPSendingTitleView localizedSendingTitle];
    [*(id *)(a1 + 48) setTitle:v10];

    [*(id *)(a1 + 48) setBackBarButtonItem:0];
    [*(id *)(a1 + 48) setTitleView:v11];
    [*(id *)(a1 + 48) setPrompt:0];
    [*(id *)(a1 + 48) setLeftItemsSupplementBackButton:0];
    [*(id *)(a1 + 48) setRightBarButtonItems:&__NSArray0__struct];
    [*(id *)(a1 + 32) pushViewController:*(void *)(a1 + 40) animated:1];
    [*(id *)(a1 + 56) setValuesOnNavigationItem:*(void *)(a1 + 48) animated:0];
    [*(id *)(a1 + 64) setUserInteractionEnabled:1];
  }
}

id *sub_100B3BE98(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] invokeCompletionWithOutcome:1];
  }
  return result;
}

id *sub_100B3C468(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] invokeCompletionWithOutcome:1];
  }
  return result;
}

void sub_100B3CD38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  objc_destroyWeak(v34);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B3CD74(uint64_t a1)
{
  uint64_t v2 = [RAPReportComposerCategoryPart alloc];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(v3 + 72);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100B3CE4C;
  void v8[3] = &unk_101318D08;
  void v8[4] = v3;
  id v5 = [(RAPReportComposerCategoryPart *)v2 initWithCategoryQuestion:v4 selection:v8];
  [*(id *)(a1 + 40) addObject:v5];
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  uint64_t v6 = *(void *)(a1 + 40);
  id v7 = [*(id *)(a1 + 32) dataSource];
  [v7 setTableParts:v6];
}

id sub_100B3CE4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) proceedToNextQuestion:];
}

void sub_100B3CE54(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[7] mergeWithTrafficIncidentsLayout:v5];
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_100B3CEC8(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = WeakRetained;
  if (WeakRetained)
  {
    if (!a3) {
      [WeakRetained[7] mergeWithServerConfig:v7];
    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_100B3CF4C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained;
    [WeakRetained[8] stopAnimating];
    [v3[9] updateCategoriesFromLayoutManager:v3[7]];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id WeakRetained = v3;
  }
}

void sub_100B3DB58(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = [*(id *)(a1 + 40) question];
    uint64_t v4 = [v3 parentQuestion];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      uint64_t v6 = [*(id *)(a1 + 40) question];
      id v9 = [v6 parentQuestion];

      [v9 refreshMainMenuItemsWithCallback:&stru_101318D78];
    }
  }
  else
  {
    id v7 = sub_100B3DCC0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v11 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to save shortcut %@. with refined coordinate", buf, 0xCu);
    }
  }
}

id sub_100B3DCC0()
{
  if (qword_101610890 != -1) {
    dispatch_once(&qword_101610890, &stru_101318D98);
  }
  id v0 = (void *)qword_101610888;

  return v0;
}

void sub_100B3DD14(id a1)
{
  os_log_t v1 = sub_100B3DCC0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "Finished refreshing shortcuts", v2, 2u);
  }
}

void sub_100B3E0D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "HomeWorkShortcutMainMenu");
  uint64_t v2 = (void *)qword_101610888;
  qword_101610888 = (uint64_t)v1;
}

void sub_100B3E99C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B3F658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,void *a34)
{
  _Unwind_Resume(a1);
}

void sub_100B3FC4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B40DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24)
{
  _Unwind_Resume(a1);
}

void sub_100B41968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_100B41E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_100B4242C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_100B439BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_100B43A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_100B43C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_100B44D90(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = (id *)(*(void *)(a1 + 32) + 48);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v5 = [v4 cardView];

  [v5 setDelegate:WeakRetained];
}

BOOL sub_100B44EFC(id a1, CarCardConfiguration *a2, unint64_t a3, BOOL *a4)
{
  unsigned __int8 v5 = [(CarCardConfiguration *)a2 isHidden];
  if ((v5 & 1) == 0) {
    *a4 = 1;
  }
  return v5 ^ 1;
}

id sub_100B45024(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 _setShowContainerVisualisation:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100B4557C(id a1, NSString *a2, CarCardConfiguration *a3, BOOL *a4)
{
}

id sub_100B456D4(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 layoutInHost:*(void *)(a1 + 32) withLayoutGuide:*(void *)(a1 + 40)];
}

void sub_100B456E4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) contentView];
  [v1 layoutIfNeeded];
}

void sub_100B45B34(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _batchedUpdates];
  [v2 reloadCardConfiguration:*(void *)(a1 + 40) block:*(void *)(a1 + 48)];
}

void sub_100B45F40(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _batchedUpdates];
  [v2 insertCardConfiguration:*(void *)(a1 + 40) block:*(void *)(a1 + 48)];
}

id sub_100B462A8(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 configurationsByKey];
  unsigned __int8 v5 = [v4 objectForKeyedSubscript:v3];

  return v5;
}

void sub_100B46314(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v9 + 1) + 8 * (void)v6);
        uint64_t v8 = [*(id *)(a1 + 40) _batchedUpdates];
        [v8 insertCardConfiguration:v7 block:0];

        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }
}

void sub_100B466A8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _batchedUpdates];
  [v2 deleteCardConfiguration:*(void *)(a1 + 40)];
}

void sub_100B467C8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardView];
  [v1 setHidden:1];
}

void sub_100B468DC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardView];
  [v1 setHidden:0];
}

void sub_100B46C1C(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v9 + 1) + 8 * (void)v6);
        uint64_t v8 = [*(id *)(a1 + 40) _batchedUpdates];
        [v8 deleteCardConfiguration:v7];

        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }
}

uint64_t sub_100B47320(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B478D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B478F8(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v1 _updateDidComplete:WeakRetained];
}

BOOL sub_100B47D48(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  long long v9 = [v8 key];
  long long v10 = *(void **)(a1 + 32);
  long long v11 = [v8 key];

  long long v12 = [v10 _configurationForKey:v11 createIfNeeded:0];

  if (!v12)
  {
    uint64_t v13 = sub_100577A0C();
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
LABEL_21:

      goto LABEL_22;
    }
    id v14 = *(id *)(a1 + 32);
    if (!v14)
    {
      id v19 = @"<nil>";
      goto LABEL_17;
    }
    id v15 = (objc_class *)objc_opt_class();
    double v16 = NSStringFromClass(v15);
    if (objc_opt_respondsToSelector())
    {
      double v17 = [v14 performSelector:"accessibilityIdentifier"];
      uint64_t v18 = v17;
      if (v17 && ![v17 isEqualToString:v16])
      {
        id v19 = +[NSString stringWithFormat:@"%@<%p, %@>", v16, v14, v18];

        goto LABEL_13;
      }
    }
    id v19 = +[NSString stringWithFormat:@"%@<%p>", v16, v14];
LABEL_13:

LABEL_17:
    uint64_t v20 = *(void *)(*(void *)(a1 + 32) + 16);
    if (a2 > 2) {
      CFStringRef v21 = @"unknown";
    }
    else {
      CFStringRef v21 = off_101319118[a2];
    }
    *(_DWORD *)long long buf = 138544130;
    uint64_t v24 = v19;
    __int16 v25 = 2048;
    uint64_t v26 = v20;
    __int16 v27 = 2112;
    id v28 = v9;
    __int16 v29 = 2112;
    CFStringRef v30 = v21;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "[%{public}@] %p | %@'s configuration has been deleted, cancelling %@", buf, 0x2Au);

    goto LABEL_21;
  }
  switch(a2)
  {
    case 2uLL:
      [*(id *)(*(void *)(a1 + 32) + 16) insertCardConfiguration:v12 block:v7];
      break;
    case 1uLL:
      [*(id *)(*(void *)(a1 + 32) + 16) reloadCardConfiguration:v12 block:v7];
      break;
    case 0uLL:
      [*(id *)(*(void *)(a1 + 32) + 16) deleteCardConfiguration:v12];
      break;
  }
LABEL_22:

  return v12 != 0;
}

void sub_100B48644(void *a1, uint64_t a2, void *a3)
{
  id v10 = a3;
  if (([v10 isHidden] & 1) == 0)
  {
    id v4 = (void *)a1[4];
    uint64_t v5 = [v10 viewportConstraints];
    [v4 addObjectsFromArray:v5];

    uint64_t v6 = (void *)a1[5];
    id v7 = [v10 mapInsetsConstraints];
    [v6 addObjectsFromArray:v7];

    id v8 = (void *)a1[6];
    long long v9 = [v10 collisionConstraints];
    [v8 addObjectsFromArray:v9];
  }
}

void sub_100B48A58(id a1, CarCardConfiguration *a2, unint64_t a3, BOOL *a4)
{
}

id sub_100B49324(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 isValid];
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = sub_100577A0C();
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
LABEL_12:

      goto LABEL_13;
    }
    id v6 = *(id *)(a1 + 32);
    if (!v6)
    {
      long long v11 = @"<nil>";
      goto LABEL_11;
    }
    id v7 = (objc_class *)objc_opt_class();
    id v8 = NSStringFromClass(v7);
    if (objc_opt_respondsToSelector())
    {
      long long v9 = [v6 performSelector:"accessibilityIdentifier"];
      id v10 = v9;
      if (v9 && ![v9 isEqualToString:v8])
      {
        long long v11 = +[NSString stringWithFormat:@"%@<%p, %@>", v8, v6, v10];

        goto LABEL_9;
      }
    }
    long long v11 = +[NSString stringWithFormat:@"%@<%p>", v8, v6];
LABEL_9:

LABEL_11:
    *(_DWORD *)long long buf = 138543618;
    id v14 = v11;
    __int16 v15 = 2112;
    id v16 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}@] Filtering out invalid configuration: %@", buf, 0x16u);

    goto LABEL_12;
  }
LABEL_13:

  return v4;
}

id sub_100B494D4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 configurationKeys];
  long long v9 = [v7 key];

  id v10 = [v8 indexOfObject:v9];
  long long v11 = [*(id *)(a1 + 32) configurationKeys];
  long long v12 = [v6 key];

  id v13 = [v11 indexOfObject:v12];
  if (v10 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v18 = sub_1005762E4();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      int v24 = 136315906;
      __int16 v25 = "-[CarCardsOverlay cardsUpdate:applyConfigurations:]_block_invoke";
      __int16 v26 = 2080;
      __int16 v27 = "CarCardsOverlay.m";
      __int16 v28 = 1024;
      int v29 = 1771;
      __int16 v30 = 2080;
      int v31 = "index1 != NSNotFound";
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", (uint8_t *)&v24, 0x26u);
    }

    if (sub_100BB36BC())
    {
      id v19 = sub_1005762E4();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        uint64_t v20 = +[NSThread callStackSymbols];
        int v24 = 138412290;
        __int16 v25 = v20;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v24, 0xCu);
      }
    }
  }
  if (v13 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    CFStringRef v21 = sub_1005762E4();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      int v24 = 136315906;
      __int16 v25 = "-[CarCardsOverlay cardsUpdate:applyConfigurations:]_block_invoke";
      __int16 v26 = 2080;
      __int16 v27 = "CarCardsOverlay.m";
      __int16 v28 = 1024;
      int v29 = 1772;
      __int16 v30 = 2080;
      int v31 = "index2 != NSNotFound";
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", (uint8_t *)&v24, 0x26u);
    }

    if (sub_100BB36BC())
    {
      uint64_t v22 = sub_1005762E4();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        id v23 = +[NSThread callStackSymbols];
        int v24 = 138412290;
        __int16 v25 = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v24, 0xCu);
      }
    }
  }
  id v14 = +[NSNumber numberWithUnsignedInteger:v10];
  __int16 v15 = +[NSNumber numberWithUnsignedInteger:v13];
  id v16 = [v14 compare:v15];

  return v16;
}

void sub_100B499F8(id a1, NSString *a2, CarCardConfiguration *a3, BOOL *a4)
{
  id v4 = a3;
  [(CarCardConfiguration *)v4 _updateAvailableCardSize];
  id v7 = [(CarCardConfiguration *)v4 content];

  uint64_t v5 = [v7 view];
  [v5 setNeedsLayout];

  id v6 = [v7 view];
  [v6 layoutIfNeeded];
}

int64_t sub_100B49FEC(id a1, CarCardConfiguration *a2, CarCardConfiguration *a3)
{
  id v4 = a2;
  uint64_t v5 = a3;
  id v6 = [(CarCardConfiguration *)v4 focusSortValue];
  if (v6 <= (id)[(CarCardConfiguration *)v5 focusSortValue])
  {
    id v8 = [(CarCardConfiguration *)v4 focusSortValue];
    if (v8 >= (id)[(CarCardConfiguration *)v5 focusSortValue]) {
      int64_t v7 = 0;
    }
    else {
      int64_t v7 = -1;
    }
  }
  else
  {
    int64_t v7 = 1;
  }

  return v7;
}

id sub_100B4A6B0()
{
  if (qword_1016108A0 != -1) {
    dispatch_once(&qword_1016108A0, &stru_1013190F8);
  }
  id v0 = (void *)qword_101610898;

  return v0;
}

void sub_100B4AE7C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100B4AE9C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v13 = a2;
  uint64_t v6 = a1[5];
  int64_t v7 = [*(id *)(a1[4] + 40) objectForKey:v13];
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, void, id, void *, uint64_t))(v6 + 16))(v6, 0, v13, v7, a4);

  if ((v6 & 1) == 0)
  {
    id v8 = *(void **)(a1[4] + 16);
    long long v9 = [v13 key];
    [v8 removeObjectForKey:v9];
  }
  uint64_t v10 = *(void *)(a1[6] + 8);
  if (a4) {
    BOOL v11 = 0;
  }
  else {
    BOOL v11 = *(unsigned char *)(v10 + 24) == 0;
  }
  char v12 = !v11;
  *(unsigned char *)(v10 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v12;
}

void sub_100B4AF74(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v13 = a2;
  uint64_t v6 = a1[5];
  int64_t v7 = [*(id *)(a1[4] + 40) objectForKey:v13];
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t, id, void *, uint64_t))(v6 + 16))(v6, 1, v13, v7, a4);

  if ((v6 & 1) == 0)
  {
    [*(id *)(a1[4] + 40) removeObjectForKey:v13];
    id v8 = *(void **)(a1[4] + 24);
    long long v9 = [v13 key];
    [v8 removeObjectForKey:v9];
  }
  uint64_t v10 = *(void *)(a1[6] + 8);
  if (a4) {
    BOOL v11 = 0;
  }
  else {
    BOOL v11 = *(unsigned char *)(v10 + 24) == 0;
  }
  char v12 = !v11;
  *(unsigned char *)(v10 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v12;
}

void sub_100B4B05C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v13 = a2;
  uint64_t v6 = a1[5];
  int64_t v7 = [*(id *)(a1[4] + 40) objectForKey:v13];
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t, id, void *, uint64_t))(v6 + 16))(v6, 2, v13, v7, a4);

  if ((v6 & 1) == 0)
  {
    [*(id *)(a1[4] + 40) removeObjectForKey:v13];
    id v8 = *(void **)(a1[4] + 32);
    long long v9 = [v13 key];
    [v8 removeObjectForKey:v9];
  }
  uint64_t v10 = *(void *)(a1[6] + 8);
  if (a4) {
    BOOL v11 = 0;
  }
  else {
    BOOL v11 = *(unsigned char *)(v10 + 24) == 0;
  }
  char v12 = !v11;
  *(unsigned char *)(v10 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v12;
}

void sub_100B4D594(id *a1, int a2)
{
  if ([a1[4] count]) {
    [a1[4] removeObjectAtIndex:0];
  }
  if (!a2)
  {
    id v4 = sub_100B4A6B0();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_18;
    }
    id v5 = a1[5];
    if (!v5)
    {
      uint64_t v10 = @"<nil>";
      goto LABEL_17;
    }
    uint64_t v6 = (objc_class *)objc_opt_class();
    int64_t v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      long long v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        uint64_t v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_15;
      }
    }
    uint64_t v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_15:

LABEL_17:
    *(_DWORD *)long long buf = 138543362;
    uint64_t v32 = v10;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] Batch updates interrupted!", buf, 0xCu);

LABEL_18:
    if (![a1[4] count])
    {
LABEL_27:
      if ([a1[6] count])
      {
        uint64_t v18 = [a1[5] delegate];
        [v18 cardsUpdate:a1[5] finalizeUpdate:0 withCardConfigurations:a1[6]];
      }
      if ([a1[7] count])
      {
        id v19 = [a1[5] delegate];
        [v19 cardsUpdate:a1[5] finalizeUpdate:1 withCardConfigurations:a1[7]];
      }
      if ([a1[8] count])
      {
        uint64_t v20 = [a1[5] delegate];
        [v20 cardsUpdate:a1[5] finalizeUpdate:2 withCardConfigurations:a1[8]];
      }
      CFStringRef v21 = sub_100B4A6B0();
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_INFO)) {
        goto LABEL_43;
      }
      id v22 = a1[5];
      if (!v22)
      {
        __int16 v27 = @"<nil>";
        goto LABEL_42;
      }
      id v23 = (objc_class *)objc_opt_class();
      int v24 = NSStringFromClass(v23);
      if (objc_opt_respondsToSelector())
      {
        __int16 v25 = [v22 performSelector:"accessibilityIdentifier"];
        __int16 v26 = v25;
        if (v25 && ![v25 isEqualToString:v24])
        {
          __int16 v27 = +[NSString stringWithFormat:@"%@<%p, %@>", v24, v22, v26];

          goto LABEL_40;
        }
      }
      __int16 v27 = +[NSString stringWithFormat:@"%@<%p>", v24, v22];
LABEL_40:

LABEL_42:
      *(_DWORD *)long long buf = 138543362;
      uint64_t v32 = v27;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "[%{public}@] Updates completed, running completion blocks.", buf, 0xCu);

LABEL_43:
      [a1[5] runCompletionBlocks];
      return;
    }
    BOOL v11 = sub_100B4A6B0();
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
LABEL_46:

      int v29 = [a1[4] firstObject];
      [v29 runWithoutAnimation];

      return;
    }
    id v12 = a1[5];
    if (!v12)
    {
      double v17 = @"<nil>";
      goto LABEL_45;
    }
    id v13 = (objc_class *)objc_opt_class();
    id v14 = NSStringFromClass(v13);
    if (objc_opt_respondsToSelector())
    {
      __int16 v15 = [v12 performSelector:"accessibilityIdentifier"];
      id v16 = v15;
      if (v15 && ![v15 isEqualToString:v14])
      {
        double v17 = +[NSString stringWithFormat:@"%@<%p, %@>", v14, v12, v16];

        goto LABEL_26;
      }
    }
    double v17 = +[NSString stringWithFormat:@"%@<%p>", v14, v12];
LABEL_26:

LABEL_45:
    id v28 = [a1[4] count];
    *(_DWORD *)long long buf = 138543618;
    uint64_t v32 = v17;
    __int16 v33 = 2048;
    id v34 = v28;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "[%{public}@] Will execute remaining %lu updates without animation.", buf, 0x16u);

    goto LABEL_46;
  }
  if (![a1[4] count]) {
    goto LABEL_27;
  }
  id v30 = [a1[4] firstObject];
  [v30 runWithCurrentOptions];
}

id sub_100B4DAA0(uint64_t a1)
{
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    long long v9 = [*(id *)(a1 + 40) valueForKey:@"key"];
    *(_DWORD *)long long buf = 138543618;
    id v12 = v8;
    __int16 v13 = 2112;
    id v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] The following visible cards will begin transitioning: %@", buf, 0x16u);
  }
  return [*(id *)(a1 + 32) _markConfigurations:*(void *)(a1 + 40) asTransitioning:1];
}

id sub_100B4DC54(uint64_t a1)
{
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543618;
    id v12 = v8;
    __int16 v13 = 2048;
    id v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] %lu content reloads will apply and layout", buf, 0x16u);
  }
  return [*(id *)(a1 + 32) _applyAndPerformLayoutForConfigurations:*(void *)(a1 + 40) allowAnimations:1];
}

id sub_100B4DDF4(uint64_t a1)
{
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) valueForKey:@"key"];
    *(_DWORD *)long long buf = 138543618;
    id v12 = v8;
    __int16 v13 = 2112;
    id v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] The following visible cards will temporarily hide: %@", buf, 0x16u);
  }
  [*(id *)(a1 + 40) enumerateObjectsUsingBlock:&stru_1013190B8];
  return [*(id *)(a1 + 32) _performLayoutAllowingAnimations:1];
}

void sub_100B4DFB8(id a1, CarCardConfiguration *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  [(CarCardConfiguration *)v4 setTransitioning:1];
  [(CarCardConfiguration *)v4 setHidden:1];
}

id sub_100B4E004(uint64_t a1)
{
  [*(id *)(a1 + 32) _markConfigurations:*(void *)(a1 + 40) asTransitioning:0];
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543618;
    id v12 = v8;
    __int16 v13 = 2048;
    id v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] %lu layout reloads will apply and layout", buf, 0x16u);
  }
  return [*(id *)(a1 + 32) _applyAndPerformLayoutForConfigurations:*(void *)(a1 + 40) allowAnimations:0];
}

id sub_100B4E1B4(uint64_t a1)
{
  id v2 = sub_100577A0C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543618;
    id v12 = v8;
    __int16 v13 = 2048;
    id v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] %lu other reloads will apply and layout", buf, 0x16u);
  }
  return [*(id *)(a1 + 32) _applyAndPerformLayoutForConfigurations:*(void *)(a1 + 40) allowAnimations:0];
}

void sub_100B4E354(uint64_t a1)
{
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543618;
    id v22 = v8;
    __int16 v23 = 2048;
    id v24 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] %lu deletions will hide", buf, 0x16u);
  }
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v10 = *(id *)(a1 + 40);
  id v11 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v17 != v13) {
          objc_enumerationMutation(v10);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * i) setHidden:1];
      }
      id v12 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v12);
  }

  __int16 v15 = [*(id *)(a1 + 32) delegate];
  [v15 cardsUpdate:*(void *)(a1 + 32) applyConfigurations:*(void *)(a1 + 40)];
}

void sub_100B4E5A0(uint64_t a1)
{
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543618;
    CFStringRef v21 = v8;
    __int16 v22 = 2048;
    id v23 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] %lu deletions will be reset", buf, 0x16u);
  }
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v10 = *(id *)(a1 + 40);
  id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v13) {
          objc_enumerationMutation(v10);
        }
        [*(id *)(*((void *)&v15 + 1) + 8 * i) reset];
      }
      id v12 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v12);
  }
}

id sub_100B4E7CC(uint64_t a1)
{
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) valueForKey:@"key"];
    *(_DWORD *)long long buf = 138543618;
    id v12 = v8;
    __int16 v13 = 2112;
    id v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] The following visible cards will end temporary hiding: %@", buf, 0x16u);
  }
  return [*(id *)(a1 + 40) enumerateObjectsUsingBlock:&stru_1013190D8];
}

void sub_100B4E984(id a1, CarCardConfiguration *a2, unint64_t a3, BOOL *a4)
{
}

void sub_100B4E990(uint64_t a1)
{
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543618;
    __int16 v22 = v8;
    __int16 v23 = 2048;
    id v24 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] %lu insertions will unhide", buf, 0x16u);
  }
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v10 = *(id *)(a1 + 40);
  id v11 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v17 != v13) {
          objc_enumerationMutation(v10);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * i) setHidden:0];
      }
      id v12 = [v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v12);
  }

  if ([*(id *)(a1 + 40) count])
  {
    long long v15 = [*(id *)(a1 + 32) delegate];
    [v15 cardsUpdate:*(void *)(a1 + 32) applyConfigurations:*(void *)(a1 + 40)];
  }
}

id sub_100B4EBE8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _performLayoutAllowingAnimations:1];
}

id sub_100B4EBF4(uint64_t a1)
{
  id v2 = sub_100B4A6B0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      int64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 40) valueForKey:@"key"];
    *(_DWORD *)long long buf = 138543618;
    id v12 = v8;
    __int16 v13 = 2112;
    id v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] The following cards will end transitioning: %@", buf, 0x16u);
  }
  return [*(id *)(a1 + 32) _markConfigurations:*(void *)(a1 + 40) asTransitioning:0];
}

void sub_100B4EDA8(uint64_t a1, int a2)
{
  if ((a2 & 1) == 0) {
    [*(id *)(a1 + 32) _markConfigurations:*(void *)(a1 + 40) asTransitioning:0];
  }
  id v4 = sub_100B4A6B0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_12;
    }
    uint64_t v6 = (objc_class *)objc_opt_class();
    int64_t v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_10;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_10:

LABEL_12:
    uint64_t v11 = [*(id *)(a1 + 40) valueForKey:@"key"];
    id v12 = (void *)v11;
    CFStringRef v13 = @"was";
    *(_DWORD *)long long buf = 138543874;
    long long v15 = v10;
    __int16 v16 = 2112;
    if (a2) {
      CFStringRef v13 = @"wasn't";
    }
    uint64_t v17 = v11;
    __int16 v18 = 2112;
    CFStringRef v19 = v13;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] The following cards did end transitioning: %@. Animation %@ interrupted.", buf, 0x20u);
  }
}

void sub_100B4EF8C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) firstObject];
  [v1 runWithCurrentOptions];
}

void sub_100B4F1D8(id *a1)
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v2 = a1[4];
  id v3 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v5) {
          objc_enumerationMutation(v2);
        }
        int64_t v7 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        [*((id *)a1[5] + 5) objectForKey:v7];
        id v8 = (void (**)(void, void))objc_claimAutoreleasedReturnValue();
        if (v8)
        {
          if ([a1[5] _shouldClearConfiguration:v7 beforeUpdate:v8]) {
            [v7 clear];
          }
          ((void (**)(void, void *))v8)[2](v8, v7);
        }
        if (a1[6] && (unsigned __int8 v9 = [v7 invalidationState], v10 = a1 + 6, (v9 & 1) != 0)
          || a1[7] && (unsigned __int8 v11 = [v7 invalidationState], v10 = a1 + 7, (v11 & 2) != 0)
          || a1[8] && (v12 = [v7 invalidationState], id v10 = a1 + 8, (v12 & 4) != 0))
        {
          [*v10 addObject:v7];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v4);
  }
}

void sub_100B4F4F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 cardsUpdateWantsLayout:*(void *)(a1 + 32)];
}

void sub_100B4F614(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 cardsUpdate:*(void *)(a1 + 32) applyConfigurations:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) delegate];
  [v3 cardsUpdateWantsLayout:*(void *)(a1 + 32)];
}

void sub_100B4F964(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarCardsUpdate");
  id v2 = (void *)qword_101610898;
  qword_101610898 = (uint64_t)v1;
}

void sub_100B51240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B5125C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v2 = [WeakRetained _maps_mapsSceneDelegate];
    id v3 = [v2 appCoordinator];
    id v4 = [v3 baseActionCoordinator];

    [v4 viewControllerShowOfflineMaps:v5];
    id WeakRetained = v5;
  }
}

void sub_100B514E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B5150C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didTapOnAddAPlace];
}

void sub_100B523E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100B52414(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained contentView];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void sub_100B53D80(uint64_t a1, void *a2, id a3)
{
  id v10 = a2;
  if ([*(id *)(a1 + 32) unsignedLongValue] == a3)
  {
    id v5 = +[GEORefinementsFactory barMultiSelectResultRefinementsWith:*(void *)(a1 + 40)];
    uint64_t v6 = v5;
    if (v5)
    {
      int64_t v7 = *(void **)(a1 + 48);
      id v8 = [v5 convertToGEOPDResultRefinement];
      [v7 addRefinement:v8];
    }
  }
  else
  {
    unsigned __int8 v9 = *(void **)(a1 + 48);
    uint64_t v6 = [v10 convertToGEOPDResultRefinement];
    [v9 addRefinement:v6];
  }
}

void sub_100B541A0(uint64_t a1, void *a2, id a3)
{
  id v10 = a2;
  if ([*(id *)(a1 + 32) unsignedLongValue] == a3)
  {
    id v5 = +[GEORefinementsFactory updatedOpenOptionResultRefinementWith:*(void *)(a1 + 40)];
    uint64_t v6 = v5;
    if (v5)
    {
      int64_t v7 = *(void **)(a1 + 48);
      id v8 = [v5 convertToGEOPDResultRefinement];
      [v7 addRefinement:v8];
    }
  }
  else
  {
    unsigned __int8 v9 = *(void **)(a1 + 48);
    uint64_t v6 = [v10 convertToGEOPDResultRefinement];
    [v9 addRefinement:v6];
  }
}

void sub_100B55864(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id v7 = [v4 delegate];
  [v7 presentRouteLibraryWithAvailableRoutes:v6 unavailableRoutes:v5];
}

uint64_t sub_100B582F0(uint64_t a1, void *a2)
{
  [a2 CGContext];
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_100B58344(id a1, UIView *a2, CGContext *a3)
{
  id v4 = [(UIView *)a2 layer];
  [v4 renderInContext:a3];
}

void sub_100B58DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B58DE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (void *)*((void *)WeakRetained + 7);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100B58E7C;
    void v6[3] = &unk_1012E5D58;
    uint64_t v5 = *(void *)(a1 + 32);
    void v6[4] = v3;
    void v6[5] = v5;
    [v4 dismissViewControllerAnimated:1 completion:v6];
  }
}

uint64_t sub_100B58E7C(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    id v3 = *(void **)(*(void *)(a1 + 32) + 24);
    return (uint64_t)[v3 refinementCoordinatorRequestsChangeAddress:withShortcut:];
  }
  return result;
}

void sub_100B5934C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B59378(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (!WeakRetained[32])
    {
      id v6 = WeakRetained;
      GEOCalculateDistance();
      double v3 = v2;
      GEOConfigGetDouble();
      id WeakRetained = v6;
      if (v3 >= v4)
      {
        *((unsigned char *)v6 + 32) = 1;
        uint64_t v5 = [v6 _refinementAlertController];
        if (v5) {
          [*((id *)v6 + 7) presentViewController:v5 animated:1 completion:0];
        }

        id WeakRetained = v6;
      }
    }
  }
}

void sub_100B595A0(_Unwind_Exception *a1)
{
  double v3 = v1;
  objc_destroyWeak(v3);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100B595C4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v3 = WeakRetained;
    char v2 = objc_opt_respondsToSelector();
    id WeakRetained = v3;
    if (v2)
    {
      [v3[3] refinementCoordinatorDidComplete:v3];
      id WeakRetained = v3;
    }
  }
}

void sub_100B5962C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v3 = WeakRetained;
    char v2 = objc_opt_respondsToSelector();
    id WeakRetained = v3;
    if (v2)
    {
      [v3[3] refinementCoordinatorDidComplete:v3];
      id WeakRetained = v3;
    }
  }
}

void sub_100B5984C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100B59870(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v3 = WeakRetained;
    char v2 = objc_opt_respondsToSelector();
    id WeakRetained = v3;
    if (v2)
    {
      [v3[3] refinementCoordinatorDidComplete:v3];
      id WeakRetained = v3;
    }
  }
}

id sub_100B59DA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadData];
}

void sub_100B5A128(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Block_object_dispose((const void *)(v4 - 136), 8);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_100B5A180(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(MapsCountryCodeCheckmarkRow);
  uint64_t v5 = *(void *)(*(void *)(a1 + 64) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setTitle:@"Default"];
  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setSubtitle:*(void *)(*(void *)(a1 + 32) + 88)];
  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setValue:0];
  [v3 addRow:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v7 = *(id *)(a1 + 40);
  id v8 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = 0;
    uint64_t v11 = *(void *)v17;
    do
    {
      unsigned __int8 v12 = 0;
      do
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v7);
        }
        uint64_t v13 = *(void *)(*((void *)&v16 + 1) + 8 * (void)v12);
        long long v14 = [*(id *)(a1 + 48) objectAtIndexedSubscript:(char *)v12 + v10];
        long long v15 = objc_alloc_init(MapsCountryCodeCheckmarkRow);
        [(MapsDebugTableRow *)v15 setTitle:v14];
        [(MapsDebugTableRow *)v15 setSubtitle:v13];
        [(MapsDebugCheckmarkRow *)v15 setValue:v13];
        [v3 addRow:v15];
        [*(id *)(a1 + 56) addObject:v15];

        unsigned __int8 v12 = (char *)v12 + 1;
      }
      while (v9 != v12);
      id v9 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
      v10 += (uint64_t)v12;
    }
    while (v9);
  }
}

id sub_100B5A374(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  char v2 = [WeakRetained _countryCode];

  return v2;
}

void sub_100B5A3C0(uint64_t a1, void *a2)
{
  char v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _setCountryCode:v3];
}

id sub_100B5A41C(uint64_t a1, void *a2)
{
  return [a2 addRow:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

void sub_100B5A430(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        [v3 addRow:*(void *)(*((void *)&v9 + 1) + 8 * (void)v8) v9];
        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v6);
  }
}

void sub_100B5A530(uint64_t a1, void *a2)
{
  id v3 = a2;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_100B5A720;
  v12[3] = &unk_101319280;
  id v4 = (id *)(a1 + 32);
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v5 = [v3 addTextFieldRowWithTitle:@"Custom" placeholderText:@"XX" inputType:3 get:v12 set:&stru_1013192A0];
  id v6 = +[NSCharacterSet characterSetWithCharactersInString:@"ABCDEFGHIJKLMNOPQRSTUVWXYZ"];
  [v5 setMaximumNumberOfCharacters:2];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100B5A770;
  v10[3] = &unk_1013192C8;
  id v7 = v6;
  id v11 = v7;
  [v5 setFilter:v10];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100B5A7F8;
  void v8[3] = &unk_101301528;
  objc_copyWeak(&v9, v4);
  [v5 setDone:v8];
  objc_destroyWeak(&v9);

  objc_destroyWeak(&v13);
}

void sub_100B5A6F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_100B5A720(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  char v2 = [WeakRetained _countryCode];

  return v2;
}

BOOL sub_100B5A770(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 length])
  {
    id v4 = [v3 uppercaseString];
    id v5 = [v4 rangeOfCharacterFromSet:*(void *)(a1 + 32)];
    id v7 = v6;

    if (v5) {
      BOOL v8 = 0;
    }
    else {
      BOOL v8 = v7 == [v3 length];
    }
  }
  else
  {
    BOOL v8 = 1;
  }

  return v8;
}

void sub_100B5A7F8(uint64_t a1, void *a2)
{
  char v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = [v3 uppercaseString];

  [WeakRetained _setCountryCode:v4];
}

void sub_100B5AA24(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9 = a1;
  if (qword_1016108B0 != -1) {
    dispatch_once(&qword_1016108B0, &stru_1013192E8);
  }
  if (byte_1016108A8)
  {
    id v10 = [objc_alloc((Class)NSString) initWithFormat:v9 arguments:&a9];
    NSLog(@"RoutingApps: %@", v10);
  }
}

void sub_100B5AAC0(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  byte_1016108A8 = [v1 BOOLForKey:@"__internal__RoutingAppsLogging"];
}

int64_t sub_100B5AC74(id a1, FeatureDiscoverySource *a2, FeatureDiscoverySource *a3)
{
  id v4 = a3;
  id v5 = +[NSNumber numberWithInteger:[(FeatureDiscoverySource *)a2 priority]];
  id v6 = [(FeatureDiscoverySource *)v4 priority];

  id v7 = +[NSNumber numberWithInteger:v6];
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

uint64_t sub_100B5B214(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

FeatureDiscoveryModel *__cdecl sub_100B5B280(id a1, FeatureDiscoverySource *a2, unint64_t a3)
{
  id v3 = a2;
  if ([(FeatureDiscoverySource *)v3 isAvailable])
  {
    id v4 = [(FeatureDiscoverySource *)v3 model];
  }
  else
  {
    id v4 = 0;
  }

  return (FeatureDiscoveryModel *)v4;
}

void sub_100B5B550(id a1, FeatureDiscoverySource *a2, unint64_t a3, BOOL *a4)
{
  id v8 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v6 = v8;
  if (isKindOfClass)
  {
    id v7 = v8;
    if ([(FeatureDiscoverySource *)v7 isAvailable]) {
      [(FeatureDiscoverySource *)v7 markAsShown];
    }
    *a4 = 1;

    id v6 = v8;
  }
}

void sub_100B5D1E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v1 = 1.0;
  }
  else {
    double v1 = 0.0;
  }
  id v3 = [*(id *)(a1 + 32) titleHeaderView];
  char v2 = [v3 titleLabel];
  [v2 setAlpha:v1];
}

void sub_100B5D6A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B5D6C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained subscriptionManager];
    id v7 = [*(id *)(a1 + 32) subscription];
    id v8 = [v7 identifier];
    id v9 = &_dispatch_main_q;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100B5D81C;
    v10[3] = &unk_1012F02B0;
    objc_copyWeak(&v12, (id *)(a1 + 40));
    id v11 = *(id *)(a1 + 32);
    [v6 removeSubscriptionWithIdentifier:v8 callbackQueue:&_dispatch_main_q completionHandler:v10];

    objc_destroyWeak(&v12);
  }
}

void sub_100B5D808(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100B5D81C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v4)
    {
      id v6 = sub_1000493C0();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        int v9 = 138412546;
        uint64_t v10 = v7;
        __int16 v11 = 2112;
        id v12 = v4;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error removing subscriptionInfo: %@, error: %@", (uint8_t *)&v9, 0x16u);
      }
    }
    id v8 = [WeakRetained delegate];
    [v8 closeOfflineMapDetails];
  }
}

void sub_100B5DB64(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_1000493C0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412546;
      uint64_t v7 = v5;
      __int16 v8 = 2112;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error adding subscription to paired device: %@, error: %@", (uint8_t *)&v6, 0x16u);
    }
  }
}

void sub_100B5DFC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B5DFF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained subscriptionManager];
    uint64_t v5 = [*(id *)(a1 + 32) subscription];
    int v6 = [v5 identifier];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100B5E0E8;
    v7[3] = &unk_1012EB010;
    id v8 = *(id *)(a1 + 32);
    [v4 setSubscriptionWithIdentifier:v6 shouldSyncToPairedDevice:0 callbackQueue:&_dispatch_main_q completionHandler:v7];
  }
}

void sub_100B5E0E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_1000493C0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412546;
      uint64_t v7 = v5;
      __int16 v8 = 2112;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error removing subscription from paired device: %@, error: %@", (uint8_t *)&v6, 0x16u);
    }
  }
}

uint64_t sub_100B5E5E0()
{
  id v0 = +[MCProfileConnection sharedConnection];
  if (![v0 isOnDeviceAppInstallationAllowed]
    || [v0 userMode] == 1
    || ([v0 isEphemeralMultiUser] & 1) != 0)
  {
    uint64_t v1 = 0;
  }
  else
  {
    id v3 = +[ACAccountStore ams_sharedAccountStore];
    id v4 = [v3 ams_activeiTunesAccount];
    unsigned int v5 = [v4 ams_isManagedAppleID];

    uint64_t v1 = v5 ^ 1;
  }

  return v1;
}

id sub_100B5E7B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateMeCard:*(void *)(a1 + 40)];
}

void sub_100B5E904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B5E928(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _touchMapsSuggestionsEngine];
}

id sub_100B60994(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = 0.0;
  if (!*(unsigned char *)(v1 + 57)) {
    double v2 = 1.0;
  }
  return [*(id *)(v1 + 24) setAlpha:v2];
}

void sub_100B609C4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = [*(id *)(a1 + 32) superview];
  [v2 layoutIfNeeded];
}

id sub_100B60AD0(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) hideShareETASuggestion];
}

void sub_100B617D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100B617F4(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _removeImageForIdentifier:*(void *)(a1 + 32)];
  }
}

void sub_100B61E58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_100B61F44;
  _OWORD v9[3] = &unk_1012E85E0;
  id v10 = *(id *)(a1 + 32);
  id v11 = *(id *)(a1 + 40);
  id v12 = v6;
  id v13 = v5;
  id v7 = v5;
  id v8 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
}

void sub_100B61F44(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) identifier];
  id v3 = [*(id *)(a1 + 40) identifier];
  unsigned int v4 = [v2 isEqualToString:v3];

  if (v4)
  {
    [*(id *)(a1 + 32) endAnimatingActivityIndicatorWithError:*(void *)(a1 + 48)];
    if (*(void *)(a1 + 56))
    {
      id v5 = *(void **)(a1 + 32);
      [v5 setImage:];
    }
  }
}

void sub_100B62938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B62954(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    uint64_t v2 = [WeakRetained tableViewCell];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      unsigned int v4 = [v7 tableViewCell];
      [v4 set_mapkit_forceSeparatorFrameToCGRectZero:0];
    }
    id v5 = [v7 tableViewCell];
    id v6 = [v5 contentView];
    [v6 setBackgroundColor:0];

    id WeakRetained = v7;
  }
}

void sub_100B62DF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleConnectionInvalidated];
}

void sub_100B62E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsXPCConnectionsManager Maps broker connection interrupted.", a3, a4, a5, a6, a7, a8, v9);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _fetchListenerEndpoints];
}

void sub_100B63008(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100B63024(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsXPCConnectionsManager Maps broker connection invalidated.", v1, v2, v3, v4, v5, v6, v8);
    id v7 = (void *)WeakRetained[1];
    WeakRetained[1] = 0;
  }
}

uint64_t sub_100B63084(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100B63094(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B63224(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[IPCServer sharedServer];
  [v2 setSiriPluginListenerEndpoint:v1];
}

void sub_100B6327C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[IPCServer sharedServer];
  [v2 setCompanionDaemonListenerEndpoint:v1];
}

void sub_100B632D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[IPCServer sharedServer];
  [v2 setPushDaemonListenerEndpoint:v1];
}

CarAdvisoryView *sub_100B64D70(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (![v3 isClickable])
  {
    id v11 = [[CarAdvisoryView alloc] initWithAdvisory:v3];
    id v12 = +[MKMapService sharedService];
    [v12 captureUserAction:247 onTarget:1007 forAdvisory:v3];

    [(CarAdvisoryView *)v11 setTranslatesAutoresizingMaskIntoConstraints:0];
    goto LABEL_14;
  }
  uint64_t v4 = sub_100015DB4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_12;
    }
    uint64_t v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v8 = [v5 performSelector:"accessibilityIdentifier"];
      uint64_t v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_9;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_9:

LABEL_12:
    *(_DWORD *)long long buf = 138543618;
    long long v15 = v10;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] CarAdvisoriesView - skipping a clickable advisory %@.", buf, 0x16u);
  }
  id v11 = 0;
LABEL_14:

  return v11;
}

void sub_100B651B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v14 = 138412290;
      id v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "ReverseGeocodeAction resolveMapItem: %@", (uint8_t *)&v14, 0xCu);
    }
  }
  uint64_t v8 = [v5 firstObject];
  uint64_t v9 = [v8 placemark];
  id v10 = [v9 mkPostalAddressDictionary];

  id v11 = [objc_alloc((Class)MKPlacemark) initWithCoordinate:v10 addressDictionary:*(double *)(a1 + 48) *(double *)(a1 + 56)];
  id v12 = [objc_alloc((Class)MKMapItem) initWithPlacemark:v11];

  if (*(void *)(a1 + 32)) {
    [v12 setName:];
  }
  uint64_t v13 = *(void *)(a1 + 40);
  if (v13) {
    (*(void (**)(uint64_t, id))(v13 + 16))(v13, v12);
  }
}

uint64_t sub_100B65CB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B65DB4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_100B65DD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained applySnapshot];
    id WeakRetained = v2;
  }
}

void sub_100B66120(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v2 = [WeakRetained apiController];
    id v3 = [v2 currentState];

    id WeakRetained = v4;
    if (v3 == (id)1)
    {
      [v4 clearGuidesFromSnapshot];
      id WeakRetained = v4;
    }
  }
}

void sub_100B667E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100B66B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B66B74(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained collectionView];
  uint64_t v4 = sub_1000BBB44(v3);

  if (v4 == 5)
  {
    id v5 = objc_loadWeakRetained(v1);
    id v6 = [v5 apiController];
    id v14 = [v6 allCollectionViewFilters];

    id v7 = objc_loadWeakRetained(v1);
    uint64_t v8 = [v7 filterMenu];
    id v9 = objc_loadWeakRetained(v1);
    id v10 = [v9 selectedFilterIndexPath];
    id v11 = objc_loadWeakRetained(v1);
    id v12 = [v11 apiController];
    uint64_t v13 = [v12 allCollectionViewIdentifiers];
    [v8 configureForAllCollectionsWithRoutingDelegate:v9 withAllCollectionsResultFilters:v14 withSelectedFilterIndex:v10 selectedFilterResultsCount:[v13 count]];
  }
}

void sub_100B66DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B66E0C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained collectionView];
  uint64_t v4 = sub_1000BBB44(v3);

  if (v4 == 5)
  {
    id v5 = objc_loadWeakRetained(v1);
    id v6 = [v5 apiController];
    id v14 = [v6 allCollectionViewFilters];

    id v7 = objc_loadWeakRetained(v1);
    uint64_t v8 = [v7 filterMenu];
    id v9 = objc_loadWeakRetained(v1);
    id v10 = [v9 selectedFilterIndexPath];
    id v11 = objc_loadWeakRetained(v1);
    id v12 = [v11 apiController];
    uint64_t v13 = [v12 allCollectionViewIdentifiers];
    [v8 configureForAllCollectionsWithRoutingDelegate:v9 withAllCollectionsResultFilters:v14 withSelectedFilterIndex:v10 selectedFilterResultsCount:[v13 count]];
  }
}

void sub_100B6A4F0(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cleanUp];

  *(_DWORD *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x7A0], 8) = 21;
  id v4 = objc_loadWeakRetained(v2);
  [v4 logEvent];
}

void sub_100B6A66C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B6A7AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B6A898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100B6A970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B6AB78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B6AC30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B6AD2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B6AEA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100B6B2C0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100B6B2E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = *(NSObject **)(a1 + 32);
  id v7 = a3;
  dispatch_group_enter(v6);
  uint64_t v8 = [v5 imageUploadUrl];
  id v9 = +[NSURL URLWithString:v8];
  id v10 = +[NSMutableURLRequest requestWithURL:v9];

  id v11 = [v5 imageUploadHttpMethod];
  [v10 setHTTPMethod:v11];

  id v12 = +[NSString stringWithFormat:@"--data-binary"];
  [v10 setValue:v12 forHTTPHeaderField:@"Content-Type"];
  uint64_t v13 = sub_100109EF8();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    id v14 = [v5 clientImageUuid];
    id v15 = [v5 imageUploadUrl];
    *(_DWORD *)long long buf = 138412546;
    __int16 v33 = v14;
    __int16 v34 = 2112;
    uint64_t v35 = v15;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Submitting photo with client image identifier %@ to url %@", buf, 0x16u);
  }
  __int16 v16 = *(void **)(*(void *)(a1 + 40) + 8);
  id v17 = [v7 rawImageData];

  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100B6B60C;
  v26[3] = &unk_101319608;
  id v18 = v5;
  id v27 = v18;
  id v28 = *(id *)(a1 + 48);
  id v19 = *(id *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 72);
  id v29 = v19;
  uint64_t v31 = v20;
  id v30 = *(id *)(a1 + 32);
  CFStringRef v21 = [v16 uploadTaskWithRequest:v10 fromData:v17 completionHandler:v26];

  __int16 v22 = *(void **)(a1 + 64);
  __int16 v23 = [v21 progress];
  [v22 addChild:v23 withPendingUnitCount:1];

  id v24 = sub_100109EF8();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
  {
    __int16 v25 = [v18 imageUploadUrl];
    *(_DWORD *)long long buf = 138412290;
    __int16 v33 = v25;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Starting image upload to url %@", buf, 0xCu);
  }
  [v21 resume];
}

void sub_100B6B60C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100B6B74C;
  block[3] = &unk_1013195E0;
  id v16 = v8;
  id v17 = *(id *)(a1 + 32);
  id v18 = v9;
  id v19 = *(id *)(a1 + 40);
  id v20 = v7;
  id v21 = *(id *)(a1 + 48);
  long long v14 = *(_OWORD *)(a1 + 56);
  id v10 = (id)v14;
  long long v22 = v14;
  id v11 = v7;
  id v12 = v9;
  id v13 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100B6B74C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = sub_100109EF8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = [*(id *)(a1 + 40) imageUploadUrl];
    int v11 = 138412802;
    id v12 = v4;
    __int16 v13 = 2048;
    id v14 = [v2 statusCode];
    __int16 v15 = 2112;
    id v16 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Received response with for url %@ with status code %ld and body %@", (uint8_t *)&v11, 0x20u);
  }
  if (*(void *)(a1 + 48))
  {
    id v5 = sub_100109EF8();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v6 = [*(id *)(a1 + 40) clientImageUuid];
      int v11 = 138412290;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to submit image with client image identifier %@", (uint8_t *)&v11, 0xCu);
    }
    [*(id *)(a1 + 56) addObject:*(void *)(a1 + 48)];
  }
  else if (+[FeedbackSubmissionManager isStatusCodeSuccess:](FeedbackSubmissionManager, "isStatusCodeSuccess:", [v2 statusCode])&& *(void *)(a1 + 64))
  {
    id v7 = sub_100109EF8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = [*(id *)(a1 + 40) clientImageUuid];
      int v11 = 138412290;
      id v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Successfully submitted image with client image identifier %@", (uint8_t *)&v11, 0xCu);
    }
    id v9 = [*(id *)(a1 + 40) clientImageUuid];
    id v10 = +[GEORPImageUpdate newImageUpdateWithClientImageId:v9 responseData:*(void *)(a1 + 64)];

    [*(id *)(a1 + 72) addObject:v10];
    ++*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 80));
}

void sub_100B6B99C(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
  id v3 = [*(id *)(a1 + 32) imageUploadInfos];
  id v4 = [v3 count];

  if (v2 == v4)
  {
    id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 96));
    id v6 = WeakRetained;
    if (WeakRetained)
    {
      id v7 = objc_loadWeakRetained(WeakRetained + 3);
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = *(void *)(a1 + 56);
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      void v15[2] = sub_100B6BBA0;
      v15[3] = &unk_101319658;
      void v15[4] = v6;
      id v16 = *(id *)(a1 + 64);
      id v17 = *(id *)(a1 + 72);
      id v18 = *(id *)(a1 + 80);
      [v7 finishedUploadingImagesWithImageUpdate:v8 correctionsRequest:v9 completion:v15];
    }
  }
  else
  {
    id v10 = sub_100109EF8();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      int v11 = [*(id *)(a1 + 32) imageUploadInfos];
      id v12 = [v11 count];
      uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
      *(_DWORD *)long long buf = 134218240;
      id v20 = v12;
      __int16 v21 = 2048;
      uint64_t v22 = v13;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "We have a mismatch, expected %lu uploads but only did %lu uploads", buf, 0x16u);
    }
    uint64_t v14 = *(void *)(a1 + 80);
    id v6 = [*(id *)(a1 + 40) firstObject];
    (*(void (**)(uint64_t, void, void *))(v14 + 16))(v14, 0, v6);
  }
}

id sub_100B6BBA0(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _submitCorrectionsRequest:a2 traits:*(void *)(a1 + 40) parentProgress:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

void sub_100B6BDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B6BE0C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  if (!WeakRetained) {
    goto LABEL_14;
  }
  uint64_t v9 = sub_100109EF8();
  id v10 = v9;
  if (v7)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v19 = 138412290;
      id v20 = v7;
      int v11 = "Failed to submit corrections with error %@";
      id v12 = v10;
      os_log_type_t v13 = OS_LOG_TYPE_ERROR;
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v11, (uint8_t *)&v19, 0xCu);
    }
  }
  else if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    uint64_t v14 = *(void **)(a1 + 32);
    int v19 = 138412290;
    id v20 = v14;
    int v11 = "Successfully submitted corrections for identifier %@";
    id v12 = v10;
    os_log_type_t v13 = OS_LOG_TYPE_INFO;
    goto LABEL_7;
  }

  if (v6)
  {
    __int16 v15 = sub_100109EF8();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      id v16 = [v6 statusAsString:[v6 status]];
      int v19 = 138412290;
      id v20 = v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Received response with status code %@", (uint8_t *)&v19, 0xCu);
    }
  }
  id v17 = objc_loadWeakRetained(WeakRetained + 3);
  [v17 finishedCorrectionsUploadWithResponse:v6 request:*(void *)(a1 + 40) error:v7];

  uint64_t v18 = *(void *)(a1 + 48);
  if (v18) {
    (*(void (**)(uint64_t, id, id))(v18 + 16))(v18, v6, v7);
  }
LABEL_14:
}

id sub_100B6C484(uint64_t a1)
{
  double v2 = *(double *)(a1 + 40);
  v10.receiver = *(id *)(a1 + 32);
  v10.super_class = (Class)RelatedSearchSuggestionView;
  [super setAlpha:v2];
  [*(id *)(a1 + 32) frame];
  CGFloat Height = CGRectGetHeight(v11);
  [*(id *)(a1 + 32) alpha];
  if (v4 == 0.0)
  {
    CGAffineTransformMakeTranslation(&v9, 0.0, Height);
  }
  else
  {
    long long v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
    *(_OWORD *)&v9.a = *(_OWORD *)&CGAffineTransformIdentity.a;
    *(_OWORD *)&v9.c = v5;
    *(_OWORD *)&v9.tCGFloat x = *(_OWORD *)&CGAffineTransformIdentity.tx;
  }
  id v6 = *(void **)(a1 + 32);
  CGAffineTransform v8 = v9;
  return [v6 setTransform:&v8];
}

id sub_100B6C540(uint64_t a1)
{
  return [*(id *)(a1 + 32) setUserInteractionEnabled:1];
}

id sub_100B6C54C(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

id sub_100B6D3D4(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  double v4 = [v2 identifierCache];
  long long v5 = [v4 identifierForObject:v3];

  return v5;
}

TwoLinesHistoryEntryRecentsItemOutlineCellModel *sub_100B6D440(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [SidebarOutlineCellBackgroundModel alloc];
  long long v5 = [*(id *)(a1 + 32) delegate];
  id v6 = [v5 isCollectionViewFocusedWithSectionController:*(void *)(a1 + 32)];
  id v7 = [*(id *)(a1 + 32) delegate];
  id v8 = [v7 isCollectionViewProxyFocusedWithSectionController:*(void *)(a1 + 32)];
  CGAffineTransform v9 = [*(id *)(a1 + 32) delegate];
  objc_super v10 = -[SidebarOutlineCellBackgroundModel initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:](v4, "initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:", 0, 0, 1, v6, v8, [v9 hasCollectionViewDropSessionWithSectionController:*(void *)(a1 + 32)]);

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = v3;
    id v12 = &OBJC_PROTOCOL___MSPHistoryEntryTransitLineItem;
    objc_opt_class();
    id v13 = v11;
    if (objc_opt_isKindOfClass()) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    id v15 = v14;

    if (v15
      && ([v15 historyEntry],
          id v16 = objc_claimAutoreleasedReturnValue(),
          unsigned int v17 = [v16 conformsToProtocol:v12],
          v16,
          v17))
    {
      id v18 = v13;
    }
    else
    {
      id v18 = 0;
    }

    if (v18)
    {
      id v20 = [[TwoLineOutlineCellButtonAccessoryModel alloc] initWithAccessoryType:1 visibility:1 delegate:*(void *)(a1 + 32)];
      __int16 v21 = [TwoLinesHistoryEntryRecentsItemOutlineCellModel alloc];
      if (v20)
      {
        __int16 v25 = v20;
        uint64_t v22 = +[NSArray arrayWithObjects:&v25 count:1];
        __int16 v23 = [(TwoLinesHistoryEntryRecentsItemOutlineCellModel *)v21 initWithHistoryEntryRecentsItem:v13 accessoryModels:v22 backgroundModel:v10];

        goto LABEL_19;
      }
    }
    else
    {
      __int16 v21 = [TwoLinesHistoryEntryRecentsItemOutlineCellModel alloc];
    }
    int v19 = [(TwoLinesHistoryEntryRecentsItemOutlineCellModel *)v21 initWithHistoryEntryRecentsItem:v13 accessoryModels:&__NSArray0__struct backgroundModel:v10];
    goto LABEL_18;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v19 = [[TwoLinesRecentContactOutlineCellModel alloc] initWithRecentContact:v3 backgroundModel:v10];
LABEL_18:
    __int16 v23 = (TwoLinesHistoryEntryRecentsItemOutlineCellModel *)v19;
    goto LABEL_19;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v19 = [[TwoLinesSearchResultOutlineCellModel alloc] initWithSearchResult:v3 backgroundModel:v10];
    goto LABEL_18;
  }
  __int16 v23 = 0;
LABEL_19:

  return v23;
}

NSArray *__cdecl sub_100B6D72C(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return (NSArray *)&__NSArray0__struct;
}

BOOL sub_100B6D738(id a1, id a2, HomeOutlineSectionBuilderStack *a3)
{
  return 0;
}

void sub_100B6D8DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B6D918(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteSnapshot:*(void *)(a1 + 32)];
}

void sub_100B6DF58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100B6DF80(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [*(id *)(a1 + 32) deletions];
  long long v5 = [v3 identifierPath];
  id v6 = [v4 objectForKeyedSubscript:v5];

  if (v6)
  {
    id v7 = 0;
  }
  else
  {
    id v7 = [*(id *)(a1 + 32) deletionWithSnapshot:v3];
  }

  return v7;
}

id sub_100B6E030(id a1, HomeDeletion *a2, unint64_t a3)
{
  id v3 = [(HomeDeletion *)a2 object];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    double v4 = v3;
  }
  else {
    double v4 = 0;
  }
  id v5 = v4;

  id v6 = [v5 viewModel];

  if ([v6 conformsToProtocol:&OBJC_PROTOCOL___HomeRecentsItemCellModel]) {
    id v7 = v6;
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;

  CGAffineTransform v9 = [v8 homeRecentsItem];

  if (v9) {
    id v10 = v9;
  }

  return v9;
}

void sub_100B6E0F4(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v4 && WeakRetained) {
    [WeakRetained endFailedDeletions:*(void *)(a1 + 32) error:v4];
  }
}

void sub_100B6E164(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v4 && WeakRetained) {
    [WeakRetained endFailedDeletions:*(void *)(a1 + 32) error:v4];
  }
}

id sub_100B6E788(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v2 = [WeakRetained currentTraits];

  return v2;
}

uint64_t sub_100B6EF88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B6F014(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 728) setActive:*(void *)(a1 + 40) != 0];
  [*(id *)(*(void *)(a1 + 32) + 736) setActive:*(void *)(a1 + 40) == 0];
  double v2 = *(void **)(a1 + 40);
  if (v2)
  {
    id v3 = [v2 window];
    id v4 = [*(id *)(*(void *)(a1 + 32) + 712) window];

    if (v3 == v4)
    {
      +[NSLayoutConstraint deactivateConstraints:*(void *)(a1 + 48)];
      id v5 = [*(id *)(a1 + 40) constraintsForPositionInStatusBarBackgroundView:*(void *)(*(void *)(a1 + 32) + 712)];
      +[NSLayoutConstraint activateConstraints:v5];
    }
  }
  id v6 = [*(id *)(a1 + 32) view];
  [v6 layoutIfNeeded];

  id v7 = +[NSNotificationCenter defaultCenter];
  [v7 postNotificationName:@"IOSBasedChromeStatusBarHeightDidUpdateNotification" object:*(void *)(a1 + 32)];
}

void sub_100B6F3BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v22 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100B6F3F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    double v2 = [WeakRetained redoSearchOverlay];
    id v3 = [v5 coordinator];
    id v4 = [v3 containerViewController];
    objc_msgSend(v2, "updateContainerStyle:", objc_msgSend(v4, "containerStyle"));

    id WeakRetained = v5;
  }
}

void sub_100B6F488(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    unsigned int v3 = [WeakRetained _shouldShowSearchFloatingControl];
    id v4 = [v5 redoSearchOverlay];
    [v4 setHidden:v3 ^ 1 animated:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];

    id WeakRetained = v5;
  }
}

NSString *__cdecl sub_100B6F628(id a1)
{
  int BOOL = GEOConfigGetBOOL();
  CFStringRef v2 = @"OFF";
  if (BOOL) {
    CFStringRef v2 = @"ON";
  }
  return +[NSString stringWithFormat:@"CL-PedMM: %@", v2];
}

void sub_100B70474(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  CFStringRef v2 = [*(id *)(a1 + 32) contexts];
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector())
        {
          id v8 = [v7 desiredCards];
          [*(id *)(a1 + 40) addObjectsFromArray:v8];
        }
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }

  CGAffineTransform v9 = [*(id *)(a1 + 32) cardsOverlay];
  [v9 setControllerStack:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 56) completion:*(void *)(a1 + 48)];
}

id sub_100B705CC(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100B70648;
  void v3[3] = &unk_1012E69C0;
  uint64_t v1 = *(void *)(a1 + 40);
  void v3[4] = *(void *)(a1 + 32);
  void v3[5] = v1;
  return +[UIView performWithoutAnimation:v3];
}

void sub_100B70648(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) settingsController];
  [v2 setMapViewMode:*(void *)(a1 + 40) animated:0];
}

id sub_100B70824(uint64_t a1)
{
  [*(id *)(a1 + 32) setCompassEnabled:1];
  id v2 = +[MKMapService sharedService];
  [v2 captureUserAction:4 onTarget:601 eventValue:0];

  id v3 = [*(id *)(a1 + 40) cardsOverlay];
  [v3 setUseBackdropFullScreen:0];

  id v4 = [*(id *)(a1 + 40) cardsOverlay];
  uint64_t v5 = [v4 view];
  [v5 setNeedsLayout];

  id v6 = [*(id *)(a1 + 40) cardsOverlay];
  id v7 = [v6 view];
  [v7 layoutIfNeeded];

  [*(id *)(a1 + 40) setNeedsUpdateComponent:@"lookAroundButton" animated:1];
  [*(id *)(a1 + 40) setNeedsUpdateComponent:@"weatherOverlay" animated:1];
  id v8 = *(void **)(a1 + 40);

  return [v8 setNeedsUpdateComponent:@"floatingControls" animated:1];
}

void sub_100B71604(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && v5 && !a3)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100B716C4;
    v7[3] = &unk_1012E5D58;
    id v8 = v5;
    id v9 = WeakRetained;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
  }
}

void sub_100B716C4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) selectedVehicle];
  unsigned int v3 = [v2 isLPRWithElectricEngine];
  if (v2)
  {
    unsigned int v4 = 0;
  }
  else
  {
    id v5 = +[MapsExternalDevice sharedInstance];
    unsigned int v4 = ([v5 engineTypes] >> 16) & 1;
  }
  +[NSMutableSet set];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100B7193C;
  v21[3] = &unk_1012F0F88;
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v22 = v6;
  id v7 = objc_retainBlock(v21);
  if ((v3 | v4) == 1)
  {
    id v8 = VGChargingConnectorTypeOptionsList();
    ((void (*)(void *, void *))v7[2])(v7, v8);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v8 = [*(id *)(a1 + 32) vehicles];
    id v9 = [v8 countByEnumeratingWithState:&v17 objects:v23 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v18;
      do
      {
        long long v12 = 0;
        do
        {
          if (*(void *)v18 != v11) {
            objc_enumerationMutation(v8);
          }
          [*(id *)(*((void *)&v17 + 1) + 8 * (void)v12) supportedConnectors];
          long long v13 = VGChargingConnectorTypeOptionsUnpacked();
          ((void (*)(void *, void *))v7[2])(v7, v13);

          long long v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v17 objects:v23 count:16];
      }
      while (v10);
    }
  }

  uint64_t v14 = [v6 allObjects];
  id v15 = [*(id *)(a1 + 40) mapView];
  [v15 setShowsLiveEVData:[v14 count] != 0];

  id v16 = [*(id *)(a1 + 40) mapView];
  [v16 setSupportedEVConnectorTypes:v14];
}

void sub_100B7193C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = +[NSMutableArray array];
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      id v9 = 0;
      do
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        [*(id *)(*((void *)&v12 + 1) + 8 * (void)v9) unsignedIntegerValue];
        uint64_t v10 = GEOEvChargingConnectorTypeFromVGConnectorType();
        if (v10)
        {
          uint64_t v11 = +[NSNumber numberWithInt:v10];
          [v4 addObject:v11];
        }
        id v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }

  if ([v4 count]) {
    [*(id *)(a1 + 32) addObjectsFromArray:v4];
  }
}

void sub_100B71B18(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = +[MapsLightLevelController sharedController];
  [v1 updateLightLevelAnimated:0 lightLevel:[v2 currentLightLevel]];
}

void sub_100B72118(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  int v3 = *(unsigned __int8 *)(a1 + 48);
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v4 = 6;
  }
  else {
    uint64_t v4 = 1;
  }
  id v15 = 0;
  id v5 = sub_100B08080(v2, v4, v3, &v15);
  id v6 = v15;
  if (v6) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = v5 == 0;
  }
  if (!v7)
  {
    long long v14 = [*(id *)(a1 + 40) _maps_platformController];
    [v14 pushSession:v5];
LABEL_11:

    goto LABEL_12;
  }
  uint64_t v8 = +[GEOPlatform sharedPlatform];
  unsigned int v9 = [v8 isInternalInstall];

  if (v9)
  {
    uint64_t v10 = [v6 localizedDescription];
    long long v14 = +[UIAlertController alertControllerWithTitle:@"Error Loading Trace" message:v10 preferredStyle:1];

    uint64_t v11 = +[UIAlertAction actionWithTitle:@"OK" style:1 handler:0];
    [v14 addAction:v11];

    long long v12 = [*(id *)(a1 + 40) _maps_mapsSceneDelegate];
    long long v13 = [v12 topMostPresentedViewController];
    [v13 presentViewController:v14 animated:1 completion:0];

    goto LABEL_11;
  }
LABEL_12:
}

id sub_100B72AF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _teardownViewHierarchyWithActionCoordinator:*(void *)(a1 + 40) shouldAnimate:0];
}

id sub_100B72D70(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100B72DEC;
  v2[3] = &unk_1012E5D08;
  v2[4] = *(void *)(a1 + 32);
  return +[UIViewController _performWithoutDeferringTransitions:v2];
}

void sub_100B72DEC(uint64_t a1)
{
  [*(id *)(a1 + 32) _teardownViewHierarchyForTesting];
  id v2 = [*(id *)(a1 + 32) coordinator];
  [v2 endSearchForTesting];
}

void sub_100B72E44(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) coordinator];
  [v1 setViewMode:0 animated:0];
  [v1 exit3dMode];
}

void sub_100B72E98(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) coordinator];
  id v2 = [*(id *)(a1 + 32) mapView];
  [v2 setUserTrackingMode:1 animated:1];

  [v7 defaultZoom];
  int v3 = [*(id *)(a1 + 32) floatingControlsOverlay];
  [v3 setAlpha:1.0];

  uint64_t v4 = [*(id *)(a1 + 32) lookAroundOverlay];
  [v4 setAlpha:1.0];

  id v5 = [*(id *)(a1 + 32) redoSearchOverlay];
  [v5 setAlpha:1.0];

  id v6 = [*(id *)(a1 + 32) weatherOverlay];
  [v6 setAlpha:1.0];
}

void sub_100B730EC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) coordinator];
  [v1 viewControllerPresentSearchEndEditingAnimated:0];
  [v1 viewControllerClosed:0 animated:0];
  id v2 = [v1 searchPinsManager];
  [v2 clearSearchPins];

  int v3 = [v1 searchPinsManager];
  [v3 clearDirectionsPins];

  [v1 clearMapSelection];
  uint64_t v4 = sub_1000A930C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "_teardownViewHierarchyForTesting completed popToRootContextAnimated:NO", v5, 2u);
  }
}

uint64_t sub_100B73E98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B74288(uint64_t a1, void *a2)
{
  if (a2)
  {
    int v3 = *(void **)(a1 + 32);
    id v4 = a2;
    id v5 = [v3 coordinator];
    [v5 viewController:*(void *)(a1 + 32) selectParkedCar:v4 andPerformAction:*(void *)(a1 + 40)];
  }
}

id sub_100B76DF8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) objectForKey:*(void *)(a1 + 40)];

  if (!v2) {
    return (id)*(unsigned __int8 *)(a1 + 48);
  }
  int v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);

  return [v3 BOOLForKey:v4];
}

uint64_t sub_100B76E58(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setBool:a2 forKey:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) synchronize];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

uint64_t sub_100B76F88()
{
  return GEOConfigGetBOOL();
}

uint64_t sub_100B76F94()
{
  return GEOConfigSetBOOL();
}

uint64_t sub_100B770C4(uint64_t a1)
{
  if ((_GEOConfigHasValue() & 1) == 0) {
    return *(unsigned __int8 *)(a1 + 48);
  }

  return GEOConfigGetBOOL();
}

uint64_t sub_100B77118(uint64_t a1)
{
  GEOConfigSetBOOL();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    int v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_100B7744C(uint64_t a1, float a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v5 = 0;
  int v3 = +[NSString stringWithValidatedFormat:v2, @"%f", &v5, a2 validFormatSpecifiers error];

  return v3;
}

float sub_100B7761C(uint64_t a1)
{
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  int v3 = [v2 objectForKey:*(void *)(a1 + 32)];

  if (v3)
  {
    [v2 floatForKey:*(void *)(a1 + 32)];
    if (v4 >= *(float *)(a1 + 44)) {
      float v4 = *(float *)(a1 + 44);
    }
    if (v4 <= *(float *)(a1 + 48)) {
      float v5 = *(float *)(a1 + 48);
    }
    else {
      float v5 = v4;
    }
  }
  else
  {
    float v5 = *(float *)(a1 + 40);
  }

  return v5;
}

void sub_100B776A8(uint64_t a1, float a2)
{
  id v7 = +[NSUserDefaults standardUserDefaults];
  *(float *)&double v4 = a2;
  [v7 setFloat:*(void *)(a1 + 32) forKey:v4];
  float v5 = +[NSUserDefaults standardUserDefaults];
  [v5 synchronize];

  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(float))(v6 + 16))(a2);
  }
}

float sub_100B778A0(uint64_t a1)
{
  uint64_t Integer = GEOConfigGetInteger();
  uint64_t v3 = *(void *)(a1 + 48);
  if (Integer > v3) {
    uint64_t v3 = Integer;
  }
  if (v3 >= *(void *)(a1 + 56)) {
    return (float)*(uint64_t *)(a1 + 56);
  }
  return (float)v3;
}

uint64_t sub_100B778E4(uint64_t a1)
{
  GEOConfigSetInteger();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

float sub_100B7795C(id a1, float a2)
{
  return roundf(a2);
}

float sub_100B77AC4(uint64_t a1)
{
  unint64_t UInteger = GEOConfigGetUInteger();
  unint64_t v3 = *(void *)(a1 + 48);
  if (UInteger > v3) {
    unint64_t v3 = UInteger;
  }
  if (v3 >= *(void *)(a1 + 56)) {
    return (float)*(unint64_t *)(a1 + 56);
  }
  return (float)v3;
}

uint64_t sub_100B77B08(uint64_t a1)
{
  GEOConfigSetUInteger();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    unint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

float sub_100B77B80(id a1, float a2)
{
  return roundf(a2);
}

float sub_100B77CE8(uint64_t a1)
{
  unint64_t Uint64 = GEOConfigGetUint64();
  unint64_t v3 = *(void *)(a1 + 48);
  if (Uint64 > v3) {
    unint64_t v3 = Uint64;
  }
  if (v3 >= *(void *)(a1 + 56)) {
    return (float)*(unint64_t *)(a1 + 56);
  }
  return (float)v3;
}

uint64_t sub_100B77D2C(uint64_t a1)
{
  GEOConfigSetUint64();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    unint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

float sub_100B77DA4(id a1, float a2)
{
  return roundf(a2);
}

float sub_100B77EFC(uint64_t a1)
{
  GEOConfigGetDouble();
  if (v2 <= *(double *)(a1 + 48)) {
    double v2 = *(double *)(a1 + 48);
  }
  if (v2 >= *(double *)(a1 + 56)) {
    return *(double *)(a1 + 56);
  }
  return v2;
}

uint64_t sub_100B77F40(uint64_t a1, float a2)
{
  double v3 = a2;
  if (*(double *)(a1 + 40) >= v3) {
    double v3 = *(double *)(a1 + 40);
  }
  if (v3 >= *(double *)(a1 + 48)) {
    double v4 = *(double *)(a1 + 48);
  }
  else {
    double v4 = v3;
  }
  GEOConfigSetDouble();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v7 = *(uint64_t (**)(__n128))(result + 16);
    v5.n128_f64[0] = v4;
    return v7(v5);
  }
  return result;
}

float sub_100B78118(uint64_t a1)
{
  GEOConfigGetDouble();
  if (v2 <= *(double *)(a1 + 48)) {
    double v2 = *(double *)(a1 + 48);
  }
  if (v2 >= *(double *)(a1 + 56)) {
    return *(double *)(a1 + 56);
  }
  return v2;
}

uint64_t sub_100B7815C(uint64_t a1, float a2)
{
  double v3 = a2;
  if (*(double *)(a1 + 40) >= v3) {
    double v3 = *(double *)(a1 + 40);
  }
  if (v3 >= *(double *)(a1 + 48)) {
    double v4 = *(double *)(a1 + 48);
  }
  else {
    double v4 = v3;
  }
  GEOConfigSetDouble();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v7 = *(uint64_t (**)(__n128))(result + 16);
    v5.n128_f64[0] = v4;
    return v7(v5);
  }
  return result;
}

id sub_100B783F4(uint64_t a1)
{
  double v2 = +[NSUserDefaults standardUserDefaults];
  double v3 = [v2 objectForKey:*(void *)(a1 + 32)];

  if (v3)
  {
    double v4 = [v2 stringForKey:*(void *)(a1 + 32)];
  }
  else
  {
    double v4 = 0;
  }

  return v4;
}

void sub_100B7847C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = +[NSUserDefaults standardUserDefaults];
  [v5 setObject:v3 forKey:*(void *)(a1 + 32)];

  double v4 = +[NSUserDefaults standardUserDefaults];
  [v4 synchronize];
}

uint64_t sub_100B785CC()
{
  return GEOConfigGetString();
}

uint64_t sub_100B785D8()
{
  return GEOConfigSetString();
}

id sub_100B786AC()
{
  id v0 = +[NSNumber numberWithInteger:GEOConfigGetInteger()];
  id v1 = [v0 stringValue];

  return v1;
}

uint64_t sub_100B78714(uint64_t a1, void *a2)
{
  [a2 integerValue];

  return GEOConfigSetInteger();
}

id sub_100B78818()
{
  id v0 = +[NSNumber numberWithUnsignedInteger:GEOConfigGetUInteger()];
  id v1 = [v0 stringValue];

  return v1;
}

uint64_t sub_100B78880(uint64_t a1, void *a2)
{
  [a2 longLongValue];

  return GEOConfigSetUInteger();
}

id sub_100B78984()
{
  id v0 = +[NSNumber numberWithUnsignedLongLong:GEOConfigGetUint64()];
  id v1 = [v0 stringValue];

  return v1;
}

uint64_t sub_100B789EC(uint64_t a1, void *a2)
{
  [a2 longLongValue];

  return GEOConfigSetUint64();
}

id sub_100B78AF0()
{
  GEOConfigGetDouble();
  id v0 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  id v1 = [v0 stringValue];

  return v1;
}

uint64_t sub_100B78B54(uint64_t a1, void *a2)
{
  [a2 doubleValue];

  return GEOConfigSetDouble();
}

uint64_t sub_100B78C54()
{
  return GEOConfigGetDate();
}

uint64_t sub_100B78C60()
{
  return GEOConfigSetDate();
}

id sub_100B7919C(uint64_t a1)
{
  double v2 = +[NSUserDefaults standardUserDefaults];
  id v3 = [v2 objectForKey:*(void *)(a1 + 32)];

  double v4 = v3;
  if (!v3) {
    double v4 = *(void **)(a1 + 40);
  }
  id v5 = v4;

  return v5;
}

void sub_100B79208(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  double v4 = v3;
  uint64_t v5 = *(void *)(a1 + 32);
  if (v9) {
    [v3 setObject:v9 forKey:v5];
  }
  else {
    [v3 removeObjectForKey:v5];
  }

  uint64_t v6 = +[NSUserDefaults standardUserDefaults];
  [v6 synchronize];

  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = v9;
  if (v7)
  {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v9);
    uint64_t v8 = v9;
  }
}

void sub_100B79624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100B7964C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }
  else {
  double v2 = _GEOConfigGetDecodedValueWithSource();
  }

  return v2;
}

void sub_100B796A4(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 value];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = (id)v3;
  if (v4) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v4, v3);
  }
  else {
    _GEOConfigSetEncodedValue();
  }
}

void sub_100B79718(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if (v2) {
      (*(void (**)(void))(v2 + 16))();
    }
    else {
    uint64_t v3 = _GEOConfigGetDecodedValueWithSource();
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained update];
}

void sub_100B7B0C0(id a1)
{
  v13[0] = NSFontAttributeName;
  uint64_t v1 = +[UIFont boldSystemFontOfSize:20.0];
  v14[0] = v1;
  v13[1] = NSForegroundColorAttributeName;
  uint64_t v2 = +[UIColor labelColor];
  uint64_t v3 = MKServerFormattedStringArtworkFeatureTypeAttributeKey;
  v14[1] = v2;
  v14[2] = &off_1013AA900;
  uint64_t v4 = MKServerFormattedStringArtworkSizeAttributeKey;
  id v13[2] = MKServerFormattedStringArtworkFeatureTypeAttributeKey;
  v13[3] = MKServerFormattedStringArtworkSizeAttributeKey;
  void v14[3] = &off_1013AA918;
  uint64_t v5 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:4];
  uint64_t v6 = (void *)qword_101610900;
  qword_101610900 = v5;

  v11[0] = NSFontAttributeName;
  uint64_t v7 = +[UIFont systemFontOfSize:13.0];
  v12[0] = v7;
  v11[1] = NSForegroundColorAttributeName;
  uint64_t v8 = +[UIColor labelColor];
  v12[1] = v8;
  void v12[2] = &off_1013AA900;
  v11[2] = v3;
  void v11[3] = v4;
  v12[3] = &off_1013AA918;
  uint64_t v9 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:4];
  uint64_t v10 = (void *)qword_101610908;
  qword_101610908 = v9;
}

void sub_100B7BB38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100B7BB54(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = (id *)(a1 + 32);
    id v3 = a2;
    id WeakRetained = objc_loadWeakRetained(v2);
    id v4 = [v3 mutableCopy];

    uint64_t v5 = [v4 sortedArrayUsingSelector:"localizedCaseInsensitiveCompare:"];
    [WeakRetained setFullCategoryList:v5];

    uint64_t v6 = [WeakRetained fullCategoryList];
    id v7 = [v6 copy];
    [WeakRetained setPartialCategoryList:v7];

    uint64_t v8 = [WeakRetained searchBarDefaultPlaceholder];
    uint64_t v9 = [WeakRetained navigationItem];
    uint64_t v10 = [v9 searchController];
    uint64_t v11 = [v10 searchBar];
    [v11 setPlaceholder:v8];

    long long v12 = [WeakRetained selectedCategoryNames];
    [WeakRetained updateSelectedCategoryNames:v12];
  }
}

void sub_100B7C25C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) traitCollection];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 != (id)5)
  {
    id v7 = [*(id *)(a1 + 32) navigationItem];
    id v4 = [v7 searchController];
    uint64_t v5 = [v4 searchBar];
    uint64_t v6 = [v5 searchTextField];
    [v6 becomeFirstResponder];
  }
}

void sub_100B7D430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
}

void sub_100B7D468(id a1, MapsDebugTableSection *a2)
{
  uint64_t v6 = a2;
  uint64_t v2 = +[MSPSharedTripService sharedInstance];
  id v3 = [v2 sharingIdentity];
  id v4 = [v3 description];
  id v5 = [(MapsDebugTableSection *)v6 addReadOnlyRowWithTitle:@"Sharing not available" value:v4];
}

MSPSharedTripContact *__cdecl sub_100B7D504(id a1, MSPSharedTripContact *a2, unint64_t a3)
{
  id v3 = a2;
  if (+[MSPSharedTripContact isVirtualReceiver:v3])id v4 = v3; {
  else
  }
    id v4 = 0;

  return v4;
}

void sub_100B7D564(id a1, MapsDebugTableSection *a2)
{
}

void sub_100B7D574(uint64_t a1, void *a2)
{
  id v25 = a2;
  unint64_t v2 = (unint64_t)+[MSPSharedTripContact capabilityTypeForVirtualReceiver:*(void *)(a1 + 32)];
  if (v2 > 4) {
    CFStringRef v3 = @"Unknown";
  }
  else {
    CFStringRef v3 = off_101319F58[v2];
  }
  id v4 = +[NSString stringWithFormat:@"Sharing via %@", v3];
  id v5 = [*(id *)(a1 + 32) handleForIDS];
  id v6 = [v25 addReadOnlyRowWithTitle:v4 value:v5];

  +[MSPSharedTripContact capabilityVersionsForVirtualReceiver:*(void *)(a1 + 32)];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v7 = [obj countByEnumeratingWithState:&v32 objects:v37 count:16];
  if (v7)
  {
    uint64_t v23 = *(void *)v33;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v33 != v23) {
          objc_enumerationMutation(obj);
        }
        unint64_t v9 = (unint64_t)[*(id *)(*((void *)&v32 + 1) + 8 * i) unsignedIntegerValue];
        unint64_t v10 = v9;
        CFStringRef v11 = @"Unknown";
        if (v9 <= 2) {
          CFStringRef v11 = off_101319F40[v9];
        }
        v31[0] = _NSConcreteStackBlock;
        v31[1] = 3221225472;
        v31[2] = sub_100B7DA10;
        v31[3] = &unk_101319D48;
        void v31[4] = *(void *)(a1 + 32);
        void v31[5] = v9;
        long long v12 = +[UIAction actionWithTitle:@"Start" image:0 identifier:0 handler:v31];
        v36[0] = v12;
        v30[0] = _NSConcreteStackBlock;
        v30[1] = 3221225472;
        v30[2] = sub_100B7DA1C;
        v30[3] = &unk_101319D48;
        void v30[4] = *(void *)(a1 + 32);
        void v30[5] = v10;
        long long v13 = +[UIAction actionWithTitle:@"Stop" image:0 identifier:0 handler:v30];
        v36[1] = v13;
        long long v14 = +[NSArray arrayWithObjects:v36 count:2];
        id v15 = +[UIMenu menuWithTitle:@"Live Updates" children:v14];

        id v16 = [v25 addMenuRowWithTitle:v11 menu:v15];
        long long v17 = [*(id *)(a1 + 32) handleForDeviceVersion:v10];
        long long v18 = [v17 componentsSeparatedByString:@"/"];
        long long v19 = [v18 firstObject];

        v28[0] = _NSConcreteStackBlock;
        v28[1] = 3221225472;
        v28[2] = sub_100B7DA28;
        void v28[3] = &unk_101319D70;
        id v29 = v19;
        id v20 = v19;
        [v16 setConfigureBlock:v28];
      }
      id v7 = [obj countByEnumeratingWithState:&v32 objects:v37 count:16];
    }
    while (v7);
  }

  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100B7DAB8;
  v26[3] = &unk_1012E7ED0;
  void v26[4] = *(void *)(a1 + 32);
  objc_copyWeak(&v27, (id *)(a1 + 40));
  id v21 = [v25 addButtonRowWithTitle:@"Stop Sharing" action:v26];
  objc_destroyWeak(&v27);
}

void sub_100B7D9F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_100B7DA10(uint64_t a1)
{
  return _[*(id *)(a1 + 32) startLiveUpdatesForCapabilityVersion:*(void *)(a1 + 40)];
}

id sub_100B7DA1C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) stopLiveUpdatesForCapabilityVersion:*(void *)(a1 + 40)];
}

void sub_100B7DA28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a3;
  [v4 setSecondaryText:v3];
  id v6 = +[UIFont preferredFontForTextStyle:UIFontTextStyleCaption1];
  id v5 = [v4 secondaryTextProperties];

  [v5 setFont:v6];
}

void sub_100B7DAB8(uint64_t a1)
{
  unint64_t v2 = +[MSPSharedTripService sharedInstance];
  uint64_t v3 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_100B7DB84;
  void v4[3] = &unk_101316D00;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  [v2 stopSharingWithContact:v3 completion:v4];

  objc_destroyWeak(&v5);
}

void sub_100B7DB70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100B7DB84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained rebuildSections];
    id WeakRetained = v2;
  }
}

MSPSharedTripContact *__cdecl sub_100B7DBC8(id a1, NSString *a2, NSArray *a3)
{
  return (MSPSharedTripContact *)+[MSPSharedTripContact mapsVirtualReceiverWithName:a2 receiverCapabilityVersion:a3];
}

MSPSharedTripContact *__cdecl sub_100B7DBDC(id a1, NSString *a2, NSArray *a3)
{
  return (MSPSharedTripContact *)+[MSPSharedTripContact iMessageVirtualReceiverWithName:a2];
}

MSPSharedTripContact *__cdecl sub_100B7DBEC(id a1, NSString *a2, NSArray *a3)
{
  return (MSPSharedTripContact *)+[MSPSharedTripContact smsVirtualReceiverWithName:a2];
}

MSPSharedTripContact *__cdecl sub_100B7DBFC(id a1, NSString *a2, NSArray *a3)
{
  return (MSPSharedTripContact *)+[MSPSharedTripContact rcsVirtualReceiverWithName:a2];
}

void sub_100B7DD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B7DD4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x3032000000;
  v20[3] = sub_1001043C0;
  void v20[4] = sub_100104A50;
  id v21 = 0;
  uint64_t v4 = *(void *)(a1 + 32);
  void v18[4] = v20;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  id v19[2] = sub_100B7E078;
  v19[3] = &unk_101319E38;
  void v19[4] = v20;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100B7E088;
  id v18[3] = &unk_101319E60;
  id v5 = [v3 addTextFieldRowWithTitle:@"Name" placeholderText:v4 inputType:0 get:v19 set:v18];
  v16[0] = 0;
  v16[1] = v16;
  void v16[2] = 0x3032000000;
  v16[3] = sub_1001043C0;
  void v16[4] = sub_100104A50;
  id v17 = +[NSMutableArray array];
  if (*(unsigned char *)(a1 + 56))
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    void v15[2] = sub_100B7E15C;
    v15[3] = &unk_101319EA8;
    void v15[4] = v16;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100B7E16C;
    void v14[3] = &unk_1012F1768;
    void v14[4] = v16;
    id v6 = [v3 addCheckmarkRowsGroupWithContent:&stru_101319E80 get:v15 set:v14];
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100B7E1F0;
  void v8[3] = &unk_101319EF8;
  CFStringRef v11 = v20;
  id v9 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  long long v12 = v16;
  objc_copyWeak(&v13, (id *)(a1 + 48));
  id v7 = [v3 addButtonRowWithTitle:@"Start Sharing" action:v8];
  objc_destroyWeak(&v13);

  _Block_object_dispose(v16, 8);
  _Block_object_dispose(v20, 8);
}

void sub_100B7E038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_100B7E078(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
}

void sub_100B7E088(uint64_t a1, void *a2)
{
}

void sub_100B7E098(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"iOS 16+" subtitle:@"RoutingPathLegs, MSR" value:&off_1013AA930];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"iOS 15" subtitle:@"RoutingPathLegs, no MSR" value:&off_1013AA948];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"iOS 13-14" subtitle:@"No RoutingPathLegs, no MSR" value:&off_1013AA960];
  [(MapsDebugCheckmarkRowsGroup *)v5 setAllowMultipleSelection:1];
  [(MapsDebugCheckmarkRowsGroup *)v5 setMinimumSelectionCount:0];
}

id sub_100B7E15C(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
}

void sub_100B7E16C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v6 = a2;
  unsigned int v4 = [v3 containsObject:];
  id v5 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v4) {
    [v5 removeObject:v6];
  }
  else {
    [v5 addObject:v6];
  }
}

void sub_100B7E1F0(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (!v2) {
    id v2 = *(void **)(a1 + 32);
  }
  id v3 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
  unsigned int v4 = [v2 stringByTrimmingCharactersInSet:v3];

  id v5 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v6 = +[MSPSharedTripService sharedInstance];
  id v7 = [v6 receivers];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_100B7E528;
  v20[3] = &unk_1013125A8;
  id v8 = v4;
  id v21 = v8;
  id v9 = [v7 indexOfObjectPassingTest:v20];

  if (v9 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v10 = sub_100576A9C();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      CFStringRef v11 = [v5 handleForIDS];
      *(_DWORD *)long long buf = 138543362;
      uint64_t v23 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "DEBUG PANEL: will attempt to share with virtual receiver %{public}@", buf, 0xCu);
    }
    long long v12 = +[MSPSharedTripService sharedInstance];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_100B7E584;
    v17[3] = &unk_101319ED0;
    objc_copyWeak(&v19, (id *)(a1 + 64));
    id v18 = v5;
    [v12 startSharingWithContact:v18 completion:v17];

    objc_destroyWeak(&v19);
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    if (WeakRetained)
    {
      long long v14 = +[NSString stringWithFormat:@"'%@' Already Exists", v5];
      id v15 = +[UIAlertController alertControllerWithTitle:v14 message:@"Choose a different name for your new Virtual Receiver" preferredStyle:1];

      id v16 = +[UIAlertAction actionWithTitle:@"OK" style:1 handler:0];
      [v15 addAction:v16];

      [WeakRetained presentViewController:v15 animated:1 completion:0];
    }
  }
}

void sub_100B7E50C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_100B7E528(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 displayName];
  id v7 = [v6 isEqualToString:*(void *)(a1 + 32)];

  if (v7) {
    *a4 = 1;
  }
  return v7;
}

void sub_100B7E584(uint64_t a1, unint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v7 = sub_100576A9C();
    id v8 = v7;
    if (v5)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        id v9 = [*(id *)(a1 + 32) handleForIDS];
        *(_DWORD *)long long buf = 138543618;
        uint64_t v21 = (uint64_t)v9;
        __int16 v22 = 2114;
        CFStringRef v23 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "DEBUG PANEL: error sharing with virtual receiver %{public}@: %{public}@", buf, 0x16u);
      }
      id v10 = [(__CFString *)v5 debugDescription];
      id v11 = [v10 copy];
      long long v12 = +[UIAlertController alertControllerWithTitle:@"Error Sharing" message:v11 preferredStyle:1];

      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_100B7E800;
      id v18[3] = &unk_1012E6DE0;
      id v19 = v12;
      id v13 = v12;
      long long v14 = +[UIAlertAction actionWithTitle:@"OK" style:1 handler:v18];
      [v13 addAction:v14];

      [WeakRetained presentViewController:v13 animated:1 completion:0];
    }
    else
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        uint64_t v15 = [*(id *)(a1 + 32) handleForIDS];
        id v16 = (void *)v15;
        if (a2 > 4) {
          CFStringRef v17 = @"Unknown";
        }
        else {
          CFStringRef v17 = off_101319F58[a2];
        }
        *(_DWORD *)long long buf = 138543618;
        uint64_t v21 = v15;
        __int16 v22 = 2114;
        CFStringRef v23 = v17;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "DEBUG PANEL: sharing with virtual receiver %{public}@ via %{public}@", buf, 0x16u);
      }
      [WeakRetained rebuildSections];
    }
  }
}

id sub_100B7E800(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

id sub_100B7E834(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"RowSwipe_Delete" value:@"localized string not found" table:0];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100B7E938;
  v7[3] = &unk_101319F88;
  id v8 = v1;
  id v4 = v1;
  id v5 = +[UIContextualAction contextualActionWithStyle:1 title:v3 handler:v7];

  return v5;
}

uint64_t sub_100B7E938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a4);
  }
  return result;
}

id sub_100B7E954(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"Edit Location [Proactive Tray]" value:@"localized string not found" table:0];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100B7EA7C;
  void v8[3] = &unk_101319F88;
  id v9 = v1;
  id v4 = v1;
  id v5 = +[UIContextualAction contextualActionWithStyle:0 title:v3 handler:v8];

  id v6 = +[UIColor systemOrangeColor];
  [v5 setBackgroundColor:v6];

  return v5;
}

uint64_t sub_100B7EA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a4);
  }
  return result;
}

id sub_100B7EA98(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"RowSwipe_Share" value:@"localized string not found" table:0];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100B7EBC0;
  void v8[3] = &unk_101319F88;
  id v9 = v1;
  id v4 = v1;
  id v5 = +[UIContextualAction contextualActionWithStyle:0 title:v3 handler:v8];

  id v6 = +[UIColor systemBlueColor];
  [v5 setBackgroundColor:v6];

  return v5;
}

uint64_t sub_100B7EBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a4);
  }
  return result;
}

id sub_100B7EBDC(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"RowSwipe_Rename" value:@"localized string not found" table:0];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100B7ED04;
  void v8[3] = &unk_101319F88;
  id v9 = v1;
  id v4 = v1;
  id v5 = +[UIContextualAction contextualActionWithStyle:0 title:v3 handler:v8];

  id v6 = +[UIColor systemGrayColor];
  [v5 setBackgroundColor:v6];

  return v5;
}

uint64_t sub_100B7ED04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a4);
  }
  return result;
}

void sub_100B7F738(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100B7F75C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = (void *)*((void *)WeakRetained + 4);
    if (v5 == *(void **)(a1 + 32) || objc_msgSend(v5, "isEqual:"))
    {
      v4[40] = 0;
      [v4 _setBrandIcon:v6 fallbackToMapItemIcon:1];
    }
  }
}

void sub_100B80208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 144));
  _Unwind_Resume(a1);
}

id sub_100B80244(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = +[UIFont preferredFontForTextStyle:UIFontTextStyleSubheadline];
    id v4 = [v3 _mapkit_fontWithWeight:UIFontWeightBold];
    id v5 = [v4 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:*(void *)(a1 + 32)];

    NSAttributedStringKey v8 = NSFontAttributeName;
    id v9 = v5;
    id v6 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void sub_100B8035C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _addPhotosWithEntryPoint:1];
    id WeakRetained = v2;
  }
}

void sub_100B803A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _addPhotosWithEntryPoint:2];
    id WeakRetained = v2;
  }
}

void sub_100B86FF8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained batteryMonitorTokenWitnessedChangeInBatteryLevel:*(void *)(a1 + 32)];
}

id sub_100B879F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) startAtLocation:*(double *)(a1 + 40) *(double *)(a1 + 48)];
}

id sub_100B87AF0(uint64_t a1)
{
  [*(id *)(a1 + 32) startedTest];
  id v2 = *(void **)(a1 + 32);
  double v3 = *(double *)(a1 + 40);
  double v4 = *(double *)(a1 + 48);

  return [v2 doAfterStartedTestAtLocation:v3, v4];
}

id sub_100B88340(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _startRatingsAndPhotosFlowWithInformedConsentIfNeeded];
}

void sub_100B8850C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B88530(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  double v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setPresentingViewController:v5];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100B88708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B8872C(uint64_t a1, uint64_t a2, int a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    if (a3)
    {
      id v6 = [WeakRetained submissionStatusDelegate];
      [v6 poiEnrichmentCoordinator:v7 didUpdateUserConsent:a2];
    }
    if (a2) {
      [v7 _startRatingsAndPhotosFlowDependentUponReviewedPlaceLookup];
    }
    else {
      [v7 invokeCompletion];
    }
    id WeakRetained = v7;
  }
}

void sub_100B888D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B888F8(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    if (a2) {
      [WeakRetained _startRatingsAndPhotosFlowWithSubmissionLookup];
    }
    else {
      [WeakRetained _startPOIEnrichmentFlow];
    }
    id WeakRetained = v4;
  }
}

void sub_100B88C78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100B88CA8(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _handleLookupSubmissionCompletion:v8 lookupError:v5];
  }
}

void sub_100B88D20(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _handleLookupSubmissionCompletion:v8 lookupError:v5];
  }
}

void sub_100B89870(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

id sub_100B89890(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) willBeginSubmissionWithProgress:a2];
}

void sub_100B8989C(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v7 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained submissionCompletionWithViewController:*(void *)(a1 + 32) enrichmentForm:*(void *)(a1 + 40) policy:*(void *)(a1 + 64) newReviewedPlace:*(void *)(a1 + 48) response:v8 error:v5];
  }
}

id sub_100B89928(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) willBeginSubmissionWithProgress:a2];
}

void sub_100B89934(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v7 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained submissionCompletionWithViewController:*(void *)(a1 + 32) enrichmentForm:*(void *)(a1 + 40) policy:*(void *)(a1 + 64) newReviewedPlace:*(void *)(a1 + 48) response:v8 error:v5];
  }
}

void sub_100B89D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100B89D5C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) presentingViewController];
  [v2 dismissViewControllerAnimated:1 completion:0];

  [*(id *)(a1 + 32) _presentPushNotificationPromptIfNecessary];
  [*(id *)(a1 + 32) _presentThirdPartyPhotoSharePromptIfNecessaryForReviewedPlace:*(void *)(a1 + 40)];
  double v3 = *(void **)(a1 + 32);

  return [v3 invokeCompletion];
}

void sub_100B89DC0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100B89E88;
  void v3[3] = &unk_1012E6690;
  objc_copyWeak(&v5, (id *)(a1 + 48));
  id v4 = *(id *)(a1 + 40);
  [v2 dismissViewControllerAnimated:1 completion:v3];

  objc_destroyWeak(&v5);
}

void sub_100B89E74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100B89E88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    double v3 = [WeakRetained presentingViewController];
    [v3 dismissViewControllerAnimated:1 completion:0];

    [v4 _presentPushNotificationPromptIfNecessary];
    [v4 _presentThirdPartyPhotoSharePromptIfNecessaryForReviewedPlace:*(void *)(a1 + 32)];
    [v4 invokeCompletion];
    id WeakRetained = v4;
  }
}

void sub_100B89F0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _presentPushNotificationPromptIfNecessary];
    [v3 _presentThirdPartyPhotoSharePromptIfNecessaryForReviewedPlace:*(void *)(a1 + 32)];
    [v3 invokeCompletion];
    id WeakRetained = v3;
  }
}

void sub_100B8A4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

BOOL sub_100B8A4E4(uint64_t a1, void *a2, BOOL *a3)
{
  unint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v7 = [*(id *)(a1 + 32) allRatingCategories];
  id v8 = [v7 count];

  if (v6 < (unint64_t)v8)
  {
    id v9 = [*(id *)(a1 + 32) allRatingCategories];
    id v10 = [v9 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    *a3 = [v10 currentState] == (id)2;

    id v11 = [*(id *)(a1 + 32) allRatingCategories];
    uint64_t v12 = [v11 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    id v13 = [v12 geoCategoryRating];
    long long v14 = [v13 value];
    uint64_t v15 = [v14 categoryName];
    *a2 = [v15 stringValue];

    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return v6 < (unint64_t)v8;
}

BOOL sub_100B8A624(uint64_t a1, void *a2, BOOL *a3)
{
  unint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v7 = [*(id *)(a1 + 32) allRatingCategories];
  id v8 = [v7 count];

  if (v6 < (unint64_t)v8)
  {
    id v9 = [*(id *)(a1 + 32) allRatingCategories];
    id v10 = [v9 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    *a3 = [v10 currentState] == (id)2;

    id v11 = [*(id *)(a1 + 32) allRatingCategories];
    uint64_t v12 = [v11 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    id v13 = [v12 geoCategoryRating];
    long long v14 = [v13 value];
    uint64_t v15 = [v14 categoryName];
    *a2 = [v15 stringValue];

    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return v6 < (unint64_t)v8;
}

void sub_100B8A790(id a1, BOOL a2, int64_t a3)
{
  if (a2)
  {
    uint64_t v8 = 0;
    id v9 = &v8;
    uint64_t v10 = 0x3032000000;
    id v11 = sub_1001043D0;
    uint64_t v12 = sub_100104A58;
    id v13 = 0;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100B8A8D4;
    v7[3] = &unk_1012E9390;
    void v7[4] = &v8;
    id v3 = [[PushNotificationPrompt alloc] initWithReason:3 authorizationStatus:a3 completion:v7];
    id v4 = (void *)v9[5];
    void v9[5] = (uint64_t)v3;

    id v5 = +[UIApplication sharedMapsDelegate];
    unint64_t v6 = [v5 chromeViewController];
    [v6 _maps_topMostPresentViewController:v9[5] animated:1 completion:0];

    _Block_object_dispose(&v8, 8);
  }
}

void sub_100B8A8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B8A8D4(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) presentingViewController];
  [v1 dismissViewControllerAnimated:1 completion:0];
}