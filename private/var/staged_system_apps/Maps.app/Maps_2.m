uint64_t sub_1001E9070(uint64_t a1, void (*a2)(unint64_t, char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(unint64_t, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;

  v53 = a5;
  v51 = a4;
  v46 = a2;
  v47 = a3;
  v41 = a1;
  v50 = type metadata accessor for ContinuousClock();
  v57 = *(void *)(v50 - 8);
  v52 = *(void *)(v57 + 64);
  __chkstk_darwin(v50);
  v58 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for ContinuousClock.Instant();
  v56 = *(void *)(v48 - 8);
  v49 = *(void *)(v56 + 64);
  __chkstk_darwin(v48);
  v45 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1000FF33C(&qword_1015DC490);
  v54 = v8;
  v9 = *(void *)(v8 - 8);
  v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  v42 = v10;
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v12 - 8);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TimeoutActor();
  v15 = swift_allocObject();
  v55 = v15;
  swift_defaultActor_initialize();
  *(unsigned char *)(v15 + 112) = 0;
  v16 = type metadata accessor for TaskPriority();
  v17 = *(void *)(v16 - 8);
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v39 = v17 + 56;
  v38(v14, 1, 1, v16);
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v40(v11, a1, v8);
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = v9;
  v20 = (void *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v21 = v47;
  v20[4] = v46;
  v20[5] = v21;
  v20[6] = v55;
  v22 = *(void (**)(unint64_t, char *, uint64_t))(v19 + 32);
  v44 = v19 + 32;
  v46 = v22;
  v37 = v11;
  v23 = v54;
  v22((unint64_t)v20 + ((v18 + 56) & ~v18), v11, v54);
  swift_retain();
  swift_retain();
  v43 = v14;
  v47 = sub_100042AF4((uint64_t)v14, (uint64_t)&unk_1015D48B8, (uint64_t)v20);
  v38(v14, 1, 1, v16);
  v24 = v56;
  v25 = v45;
  v26 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v45, v51, v48);
  v27 = v57;
  v28 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v53, v50);
  v40(v11, v41, v23);
  v29 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v30 = (v49 + *(unsigned __int8 *)(v27 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v31 = (v52 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  *(void *)(v33 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v33 + v29, v25, v26);
  (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v33 + v30, v58, v28);
  v34 = v54;
  *(void *)(v33 + v31) = v55;
  *(void *)(v33 + v32) = v47;
  v46(v33 + ((v18 + v32 + 8) & ~v18), v37, v34);
  sub_100042AF4((uint64_t)v43, (uint64_t)&unk_1015D48C8, v33);
  return swift_release();
}

uint64_t sub_1001E954C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v10 = (uint64_t (*)(void *))((char *)a4 + *a4);
  v8 = (void *)swift_task_alloc();
  v7[7] = v8;
  void *v8 = v7;
  v8[1] = sub_1001E962C;
  return v10(v7 + 2);
}

uint64_t sub_1001E962C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = sub_1001E9788;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 40);
    v3 = sub_1001E9748;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1001E9748()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v1 + 112))
  {
    uint64_t v2 = sub_1001E9864;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_1001E97E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E9788()
{
  return _swift_task_switch(sub_1001E97A4, *(void *)(v0 + 40), 0);
}

uint64_t sub_1001E97A4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v1 + 112))
  {
    uint64_t v2 = sub_1001E9944;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_1001E98C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E97E4()
{
  v0[4] = v0[2];
  sub_1000FF33C(&qword_1015D48E8);
  CheckedContinuation.resume(returning:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001E9864()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001E98C4()
{
  v0[3] = v0[8];
  sub_1000FF33C(&qword_1015D48E8);
  CheckedContinuation.resume(throwing:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001E9944()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001E99A4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  v10 = (uint64_t (*)(void))((char *)a4 + *a4);
  v8 = (void *)swift_task_alloc();
  v7[5] = v8;
  void *v8 = v7;
  v8[1] = sub_1001E9A74;
  return v10();
}

uint64_t sub_1001E9A74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001E9BD4;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 24);
    uint64_t v3 = sub_1001E9B90;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1001E9B90()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    uint64_t v2 = sub_1001E9C34;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_1001E9C48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E9BD4()
{
  return _swift_task_switch(sub_1001E9BF0, *(void *)(v0 + 24), 0);
}

uint64_t sub_1001E9BF0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    uint64_t v2 = sub_1001E9CB8;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_1001E9D18;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E9C34()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E9C48()
{
  sub_1000FF33C(&qword_1015DC490);
  CheckedContinuation.resume(returning:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001E9CB8()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001E9D18()
{
  v0[2] = v0[6];
  sub_1000FF33C(&qword_1015DC490);
  CheckedContinuation.resume(throwing:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1001E9D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 1;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v8 + 80) = v11;
  uint64_t v12 = type metadata accessor for ContinuousClock();
  uint64_t v13 = sub_1001EC94C((unint64_t *)&qword_1015D48D0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  *uint64_t v11 = v8;
  v11[1] = sub_1001E9EB4;
  return static Task<>.sleep<A>(until:tolerance:clock:)(a4, v8 + 16, a5, v12, v13);
}

uint64_t sub_1001E9EB4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001EA014;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v3 = sub_1001E9FD0;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1001E9FD0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v1 + 112)) {
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1001EA070, 0, 0);
}

uint64_t sub_1001EA014()
{
  return _swift_task_switch(sub_1001EA030, *(void *)(v0 + 56), 0);
}

uint64_t sub_1001EA030()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v1 + 112))
  {
    uint64_t v2 = sub_1001EA1D0;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_1001EA128;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001EA070()
{
  Task.cancel()();
  sub_1001EBC10();
  *(void *)(v0 + 48) = swift_allocError();
  sub_1000FF33C(&qword_1015D48E8);
  CheckedContinuation.resume(throwing:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001EA128()
{
  uint64_t v1 = v0[11];
  Task.cancel()();
  v0[5] = v1;
  sub_1000FF33C(&qword_1015D48E8);
  CheckedContinuation.resume(throwing:)();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1001EA1D0()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001EA230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 1;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v8 + 80) = v11;
  uint64_t v12 = type metadata accessor for ContinuousClock();
  uint64_t v13 = sub_1001EC94C((unint64_t *)&qword_1015D48D0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  *uint64_t v11 = v8;
  v11[1] = sub_1001EA34C;
  return static Task<>.sleep<A>(until:tolerance:clock:)(a4, v8 + 16, a5, v12, v13);
}

uint64_t sub_1001EA34C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001EA4AC;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v3 = sub_1001EA468;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1001EA468()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v1 + 112)) {
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(unsigned char *)(v1 + 112) = 1;
  return _swift_task_switch(sub_1001EA50C, 0, 0);
}

uint64_t sub_1001EA4AC()
{
  return _swift_task_switch(sub_1001EA4C8, *(void *)(v0 + 56), 0);
}

uint64_t sub_1001EA4C8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    uint64_t v2 = sub_1001EC994;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_1001EA5C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001EA50C()
{
  Task.cancel()();
  sub_1001EBC10();
  *(void *)(v0 + 48) = swift_allocError();
  sub_1000FF33C(&qword_1015DC490);
  CheckedContinuation.resume(throwing:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001EA5C4()
{
  uint64_t v1 = v0[11];
  Task.cancel()();
  v0[5] = v1;
  sub_1000FF33C(&qword_1015DC490);
  CheckedContinuation.resume(throwing:)();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

unint64_t sub_1001EA66C(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();
  return sub_1001EACAC(a1, v2);
}

unint64_t sub_1001EA6A8(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_1001EAC0C(a1, v2);
}

unint64_t sub_1001EA714(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1001EAD48(a1 & 1, v2);
}

unint64_t sub_1001EA7BC(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_1001EAE90(a1, v2);
}

unint64_t sub_1001EA850(Swift::UInt32 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_1001EB008(a1, v2);
}

unint64_t sub_1001EA8BC(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1001EB0A4(a1, v2);
}

unint64_t sub_1001EA990(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100071B14(a1, v4, (unint64_t *)&unk_1015D6E30);
}

unint64_t sub_1001EA9E0(uint64_t a1)
{
  type metadata accessor for Handle();
  sub_1001EC94C(&qword_1015D4870, (void (*)(uint64_t))&type metadata accessor for Handle);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1001EB34C(a1, v2, (uint64_t (*)(void))&type metadata accessor for Handle, &qword_1015D4918, (void (*)(uint64_t))&type metadata accessor for Handle, (uint64_t)&protocol conformance descriptor for Handle);
}

unint64_t sub_1001EAAB4(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1001EB260(a1, v2);
}

unint64_t sub_1001EAB38(uint64_t a1)
{
  type metadata accessor for Date();
  sub_1001EC94C(&qword_1015D4890, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1001EB34C(a1, v2, (uint64_t (*)(void))&type metadata accessor for Date, &qword_1015D4898, (void (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_1001EAC0C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1001EACAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1001EAD48(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x74736574736166;
    }
    else {
      uint64_t v6 = 0x74736574726F6873;
    }
    if (a1) {
      unint64_t v7 = 0xE700000000000000;
    }
    else {
      unint64_t v7 = 0xE800000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x74736574736166 : 0x74736574726F6873;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE700000000000000 : 0xE800000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1001EAE90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1001EB008(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1001EB0A4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      unint64_t v7 = 0xEA00000000007466;
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v8 = 0x6F4E656D756C6F76;
          unint64_t v9 = 0xEC0000006C616D72;
          int v10 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v8 = 0x6F4C656D756C6F76;
          unint64_t v9 = 0xEA00000000006475;
          int v10 = a1;
          if (!a1)
          {
LABEL_17:
            if (v8 != 0x6F53656D756C6F76) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        uint64_t v8 = 0x6F53656D756C6F76;
        unint64_t v9 = 0xEA00000000007466;
        int v10 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v10 == 1) {
        uint64_t v11 = 0x6F4E656D756C6F76;
      }
      else {
        uint64_t v11 = 0x6F4C656D756C6F76;
      }
      if (v10 == 1) {
        unint64_t v7 = 0xEC0000006C616D72;
      }
      else {
        unint64_t v7 = 0xEA00000000006475;
      }
      if (v8 != v11) {
        goto LABEL_19;
      }
LABEL_18:
      if (v9 == v7)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1001EB260(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = *(void *)&aDriving_3[8 * a1];
    while (*(void *)&aDriving_3[8 * *(char *)(*(void *)(v2 + 48) + v4)] != v6)
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease_n();
      if ((v7 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1001EB34C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  v24 = a5;
  uint64_t v25 = a6;
  v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1001EC94C(v23, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_1001EB4EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D5A40);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001EB63C(uint64_t isStackAllocationSafe, double a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_1001EC2CC((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v8;
    }
  }
  else
  {
    int64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v4 = sub_1001EC2CC((unint64_t *)v9, v6, v4, a2);
    swift_slowDealloc();
  }
  return v4;
}

uint64_t sub_1001EB7A8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1001EB7E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 32);
  size_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10005056C;
  return sub_1001E7F08(a1, v4, v5, v6);
}

uint64_t sub_1001EB89C(uint64_t a1)
{
  return sub_1001E9070(a1, *(void (**)(unint64_t, char *, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001EB8A8()
{
  return sub_1001EBC7C(&qword_1015DC490);
}

uint64_t sub_1001EB8B4()
{
  uint64_t v2 = *(void *)(sub_1000FF33C(&qword_1015DC490) - 8);
  uint64_t v3 = *(int **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100105268;
  v6[3] = v4;
  v6[4] = v5;
  uint64_t v9 = (uint64_t (*)(void))((char *)v3 + *v3);
  size_t v7 = (void *)swift_task_alloc();
  v6[5] = v7;
  void *v7 = v6;
  v7[1] = sub_1001E9A74;
  return v9();
}

uint64_t sub_1001EBA20()
{
  return sub_1001EBED8(&qword_1015DC490);
}

uint64_t sub_1001EBA2C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for ContinuousClock() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(sub_1000FF33C(&qword_1015DC490) - 8) + 80);
  uint64_t v12 = v10 + v11 + 8;
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v15 = v1 + v5;
  uint64_t v16 = *(void *)(v1 + v9);
  uint64_t v17 = v1 + v8;
  uint64_t v18 = *(void *)(v1 + v10);
  uint64_t v19 = v1 + (v12 & ~v11);
  v20 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v20;
  void *v20 = v2;
  v20[1] = sub_100105268;
  return sub_1001EA230(a1, v13, v14, v15, v17, v16, v18, v19);
}

unint64_t sub_1001EBC10()
{
  unint64_t result = qword_1015D48D8;
  if (!qword_1015D48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D48D8);
  }
  return result;
}

uint64_t sub_1001EBC64(uint64_t a1)
{
  return sub_1001E8B94(a1, *(void (**)(unint64_t, char *, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1001EBC70()
{
  return sub_1001EBC7C(&qword_1015D48E8);
}

uint64_t sub_1001EBC7C(uint64_t *a1)
{
  uint64_t v2 = sub_1000FF33C(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1001EBD54()
{
  uint64_t v2 = *(void *)(sub_1000FF33C(&qword_1015D48E8) - 8);
  uint64_t v3 = *(int **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100105268;
  v6[5] = v4;
  v6[6] = v5;
  unint64_t v9 = (uint64_t (*)(void *))((char *)v3 + *v3);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[7] = v7;
  void *v7 = v6;
  v7[1] = sub_1001E962C;
  return v9(v6 + 2);
}

uint64_t sub_1001EBECC()
{
  return sub_1001EBED8(&qword_1015D48E8);
}

uint64_t sub_1001EBED8(uint64_t *a1)
{
  uint64_t v19 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v3 = *(void *)(v19 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = (v4 + 32) & ~v4;
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v18 = type metadata accessor for ContinuousClock();
  uint64_t v6 = *(void *)(v18 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v15 + v5 + v7) & ~v7;
  unint64_t v9 = (((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = sub_1000FF33C(a1);
  uint64_t v10 = *(void *)(v17 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v9 + v11 + 8) & ~v11;
  uint64_t v16 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v4 | v7 | v11 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v15, v19);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + v8, v18);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1 + v12, v17);

  return _swift_deallocObject(v1, v16, v13);
}

uint64_t sub_1001EC0E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ContinuousClock.Instant() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for ContinuousClock() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(sub_1000FF33C(&qword_1015D48E8) - 8) + 80);
  uint64_t v12 = v10 + v11 + 8;
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v15 = v1 + v5;
  uint64_t v16 = *(void *)(v1 + v9);
  uint64_t v17 = v1 + v8;
  uint64_t v18 = *(void *)(v1 + v10);
  uint64_t v19 = v1 + (v12 & ~v11);
  v20 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v20;
  void *v20 = v2;
  v20[1] = sub_10005056C;
  return sub_1001E9D98(a1, v13, v14, v15, v17, v16, v18, v19);
}

uint64_t sub_1001EC2CC(unint64_t *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v53 = a2;
  v54 = a1;
  uint64_t v67 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000FF33C(&qword_1015D4910);
  uint64_t v8 = __chkstk_darwin(v79);
  v65 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v64 = (char *)&v52 - v10;
  uint64_t v63 = type metadata accessor for Location();
  uint64_t v11 = *(void **)(v63 - 8);
  __chkstk_darwin(v63);
  v77 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for Handle();
  uint64_t result = __chkstk_darwin(v76);
  v74 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = 0;
  int64_t v16 = 0;
  v69 = (void *)a3;
  uint64_t v17 = *(void *)(a3 + 64);
  uint64_t v56 = a3 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v57 = (unint64_t)(v18 + 63) >> 6;
  v61 = v11 + 2;
  v62 = v14 + 2;
  v60 = (void (**)(char *, uint64_t))(v6 + 8);
  v78 = v11;
  v59 = v11 + 1;
  v75 = v14;
  v58 = v14 + 1;
  uint64_t v21 = v63;
  while (1)
  {
    if (v20)
    {
      uint64_t v72 = (v20 - 1) & v20;
      int64_t v73 = v16;
      unint64_t v22 = __clz(__rbit64(v20)) | (v16 << 6);
      goto LABEL_5;
    }
    int64_t v47 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v47 >= v57) {
      return sub_10033E37C(v54, v53, v55, v69);
    }
    unint64_t v48 = *(void *)(v56 + 8 * v47);
    int64_t v49 = v16 + 1;
    if (!v48)
    {
      int64_t v49 = v16 + 2;
      if (v16 + 2 >= v57) {
        return sub_10033E37C(v54, v53, v55, v69);
      }
      unint64_t v48 = *(void *)(v56 + 8 * v49);
      if (!v48)
      {
        int64_t v49 = v16 + 3;
        if (v16 + 3 >= v57) {
          return sub_10033E37C(v54, v53, v55, v69);
        }
        unint64_t v48 = *(void *)(v56 + 8 * v49);
        if (!v48) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v72 = (v48 - 1) & v48;
    int64_t v73 = v49;
    unint64_t v22 = __clz(__rbit64(v48)) + (v49 << 6);
LABEL_5:
    v23 = v69;
    v24 = v74;
    unint64_t v25 = v69[6] + v75[9] * v22;
    v70 = (void (*)(char *, unint64_t, uint64_t))v75[2];
    uint64_t v26 = v76;
    v70(v74, v25, v76);
    uint64_t v27 = v23[7];
    uint64_t v28 = v78[9];
    unint64_t v68 = v22;
    uint64_t v29 = v27 + v28 * v22;
    v30 = (void (*)(char *, uint64_t, uint64_t))v78[2];
    v31 = v77;
    v30(v77, v29, v21);
    uint64_t v32 = (uint64_t)v64;
    v71 = &v64[*(int *)(v79 + 48)];
    v33 = v71;
    v34 = v24;
    v35 = (void (*)(char *, uint64_t, uint64_t))v70;
    v70(v64, (unint64_t)v34, v26);
    v30(v33, (uint64_t)v31, v21);
    v36 = (void (*)(char *, char *, uint64_t))v30;
    v37 = v66;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    double v39 = v38;
    (*v60)(v37, v67);
    v40 = v65;
    v41 = &v65[*(int *)(v79 + 48)];
    uint64_t v42 = v76;
    v35(v65, v32, v76);
    v36(v41, v71, v21);
    Location.timestamp.getter();
    double v44 = v43;
    sub_1001EC8EC(v32);
    v45 = (void (*)(char *, uint64_t))v78[1];
    v45(v41, v21);
    v46 = (void (*)(char *, uint64_t))v75[1];
    v46(v40, v42);
    v45(v77, v21);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v46)(v74, v42);
    unint64_t v20 = v72;
    int64_t v16 = v73;
    if (v39 - v44 <= a4)
    {
      *(unint64_t *)((char *)v54 + ((v68 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v68;
      if (__OFADD__(v55++, 1))
      {
        __break(1u);
        return sub_10033E37C(v54, v53, v55, v69);
      }
    }
  }
  uint64_t v50 = v16 + 4;
  if (v16 + 4 >= v57) {
    return sub_10033E37C(v54, v53, v55, v69);
  }
  unint64_t v48 = *(void *)(v56 + 8 * v50);
  if (v48)
  {
    int64_t v49 = v16 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v49 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v49 >= v57) {
      return sub_10033E37C(v54, v53, v55, v69);
    }
    unint64_t v48 = *(void *)(v56 + 8 * v49);
    ++v50;
    if (v48) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1001EC8EC(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D4910);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001EC94C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1001EC9A4()
{
  id v1 = [v0 _type];
  if (v1 == (id)5)
  {
    id v6 = [v0 publisherResult];
    id v3 = v6;
    if (v6)
    {
      id v4 = [v6 publisher];

      if (v4)
      {
        id v5 = [v4 identifier];
        goto LABEL_9;
      }
      return 0;
    }
  }
  else
  {
    if (v1 != (id)4)
    {
      id v7 = [v0 mapItem];
      id v3 = v7;
      if (!v7) {
        return v3;
      }
      id v8 = [v7 _geoMapItem];

      if (v8)
      {
        id v3 = [v8 _identifier];
        swift_unknownObjectRelease();
        return v3;
      }
      return 0;
    }
    id v2 = [v0 collectionResult];
    id v3 = v2;
    if (v2)
    {
      id v4 = [v2 collection];

      if (v4)
      {
        id v5 = [v4 collectionIdentifier];
LABEL_9:
        id v3 = v5;

        return v3;
      }
      return 0;
    }
  }
  return v3;
}

uint64_t *sub_1001ECB18@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

void sub_1001ECDFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_searchString + 8);
  if (v6)
  {
    id v7 = *(void ***)(v0 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_searchString);
    swift_bridgeObjectRetain();
    if (String.count.getter() >= 1)
    {
      aBlock = v7;
      uint64_t v33 = v6;
      static CharacterSet.whitespaces.getter();
      sub_100180324();
      uint64_t v8 = StringProtocol.trimmingCharacters(in:)();
      uint64_t v10 = v9;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      aBlock = (void **)v8;
      uint64_t v33 = v10;
      uint64_t v38 = 32;
      unint64_t v39 = 0xE100000000000000;
      uint64_t v11 = StringProtocol.components<A>(separatedBy:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v31 = v1;
        uint64_t v38 = (uint64_t)_swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v13 = self;
        v30[1] = v11;
        uint64_t v14 = (uint64_t *)(v11 + 40);
        do
        {
          uint64_t v16 = *(v14 - 1);
          uint64_t v15 = *v14;
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v16;
          *(void *)(v17 + 24) = v15;
          v36 = sub_1001EF800;
          uint64_t v37 = v17;
          aBlock = _NSConcreteStackBlock;
          uint64_t v33 = 1107296256;
          v34 = sub_1001ED4A0;
          v35 = &unk_1012DDA80;
          uint64_t v18 = _Block_copy(&aBlock);
          swift_bridgeObjectRetain();
          id v19 = [v13 predicateWithBlock:v18];
          _Block_release(v18);
          swift_release();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v14 += 2;
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease();
        uint64_t v1 = v31;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_100100830(0, (unint64_t *)&unk_1015D4B30);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v22 = [self andPredicateWithSubpredicates:isa];

      id v23 = v22;
      unint64_t v24 = swift_bridgeObjectRetain();
      unint64_t v25 = sub_1001EF218(v24, v23);
      swift_bridgeObjectRelease();

      *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks) = v25;
      swift_bridgeObjectRelease();
      id v26 = v23;
      unint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = sub_1001EF218(v27, v26);
      swift_bridgeObjectRelease();

      *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks) = v28;
      swift_bridgeObjectRelease();
      Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong reloadData];
        swift_unknownObjectRelease();
      }

      return;
    }
    swift_bridgeObjectRelease();
  }
  *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks) = *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_suggestedNetworks);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks) = *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_otherNetworks);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v20 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v20)
  {
    [v20 reloadData];
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1001ED2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a4;
  uint64_t v6 = sub_1000FF33C(&qword_1015D0A30);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011D518(a1, (uint64_t)v22);
  if (!v22[3])
  {
    sub_1000FF2E0((uint64_t)v22, (uint64_t *)&unk_1015CD260);
    return 0;
  }
  sub_1000FF33C((uint64_t *)&unk_1015CE230);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v9 = v20;
  uint64_t v10 = *(void *)(v20 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v18 = v9;
  uint64_t v13 = (uint64_t *)(v9 + 40);
  while (1)
  {
    uint64_t v14 = *v13;
    v22[0] = *(v13 - 1);
    v22[1] = v14;
    uint64_t v20 = a3;
    uint64_t v21 = v19;
    v12(v8, 1, 1, v11);
    sub_100180324();
    swift_bridgeObjectRetain();
    StringProtocol.range<A>(of:options:range:locale:)();
    char v16 = v15;
    sub_1000FF2E0((uint64_t)v8, &qword_1015D0A30);
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      break;
    }
    v13 += 2;
    if (!--v10) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1001ED4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  id v5 = *(uint64_t (**)(long long *, uint64_t))(a1 + 32);
  if (!a2)
  {
    long long v8 = 0u;
    long long v9 = 0u;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  *((void *)&v9 + 1) = swift_getObjectType();
  *(void *)&long long v8 = a2;
  if (v3) {
LABEL_3:
  }
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  char v6 = v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000FF2E0((uint64_t)&v8, (uint64_t *)&unk_1015CD260);
  return v6 & 1;
}

unint64_t sub_1001ED570()
{
  uint64_t v1 = v0;
  uint64_t v2 = IndexPath.section.getter();
  if (v2 != 1)
  {
    if (v2) {
      return 0;
    }
    unint64_t result = IndexPath.row.getter();
    unint64_t v4 = result;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks);
    if ((v5 & 0xC000000000000001) != 0)
    {
LABEL_13:
      swift_bridgeObjectRetain();
      char v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      return (unint64_t)v6;
    }
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_15;
    }
    if (result < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_10:
      char v6 = *(void **)(v5 + 8 * v4 + 32);
      id v7 = v6;
      return (unint64_t)v6;
    }
    __break(1u);
  }
  unint64_t result = IndexPath.row.getter();
  unint64_t v4 = result;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks);
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_13;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1001ED658@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks);
  if (v4 >> 62) {
    goto LABEL_28;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  char v6 = &selRef_finalFrameForViewController_;
  if (v5) {
    goto LABEL_3;
  }
  do
  {
LABEL_10:
    swift_bridgeObjectRelease();
    unint64_t v2 = *(void *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        uint64_t v17 = type metadata accessor for IndexPath();
        uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
        uint64_t v19 = v17;
        uint64_t v20 = a2;
        uint64_t v21 = 1;
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v4) {
        goto LABEL_19;
      }
    }
    uint64_t v12 = 0;
    while (1)
    {
      id v13 = (v2 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v2 + 8 * v12 + 32);
      uint64_t v14 = v13;
      uint64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        break;
      }
      id v16 = [a1 v6[425]];
      if (v16 == [v14 v6[425]])
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = a2;
        IndexPath.init(row:section:)();

        goto LABEL_22;
      }

      ++v12;
      if (v15 == v4) {
        goto LABEL_19;
      }
    }
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    char v6 = &selRef_finalFrameForViewController_;
  }
  while (!v5);
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v4 + 8 * v7 + 32);
    }
    long long v9 = v8;
    uint64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v11 = [a1 v6[425]];
    if (v11 == [v9 v6[425]]) {
      break;
    }

    ++v7;
    if (v10 == v5) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = a2;
  IndexPath.init(row:section:)();

LABEL_22:
  uint64_t v23 = type metadata accessor for IndexPath();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v19 = v23;
  uint64_t v20 = v22;
  uint64_t v21 = 0;
LABEL_23:

  return v18(v20, v21, 1, v19);
}

id sub_1001EDA5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChargingNetworksDataSource();
  return [super dealloc];
}

uint64_t type metadata accessor for ChargingNetworksDataSource()
{
  return self;
}

uint64_t sub_1001EDB7C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (a2 == 1 && (uint64_t)[v2 tableView:a1 numberOfRowsInSection:1] > 0)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v3.super.Class isa = (Class)qword_101611820;
      unint64_t v4 = 0xD00000000000001BLL;
      unint64_t v5 = 0xD000000000000026;
      unint64_t v10 = 0x8000000100F7C460;
      unint64_t v6 = 0x8000000100F7C440;
      uint64_t v7 = 0x74654E2065726F4DLL;
      unint64_t v8 = 0xED0000736B726F77;
      return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v3, *(Swift::String *)&v7, *(Swift::String *)&v5)._countAndFlagsBits;
    }
  }
  else if ((uint64_t)[v2 tableView:a1 numberOfRowsInSection:0] >= 1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v3.super.Class isa = (Class)qword_101611820;
    unint64_t v5 = 0xD00000000000002BLL;
    unint64_t v10 = 0x8000000100F7C4B0;
    unint64_t v6 = 0x8000000100F7C490;
    unint64_t v4 = 0xD000000000000017;
    uint64_t v7 = 0x6574736567677553;
    unint64_t v8 = 0xE900000000000064;
    return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v3, *(Swift::String *)&v7, *(Swift::String *)&v5)._countAndFlagsBits;
  }
  return 0;
}

uint64_t sub_1001EDDAC(uint64_t a1, uint64_t a2)
{
  NSBundle v3 = v2;
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)UITableViewHeaderFooterView) init];
  static UIListContentConfiguration.prominentInsetGroupedHeader()();
  id v11 = [v3 tableView:a1 titleForHeaderInSection:a2];
  if (v11)
  {
    uint64_t v12 = v11;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  UIListContentConfiguration.text.setter();
  uint64_t v13 = *(void *)&v3[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_context];
  if (v13 != 2)
  {
    if (v13 != 1) {
      goto LABEL_9;
    }
    id v14 = [self secondaryLabelColor];
    uint64_t v15 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.color.setter();
    v15(v24, 0);
    if ([self _preferredFontForTextStyle:UIFontTextStyleSubheadline weight:UIFontWeightBold])
    {
LABEL_11:
      uint64_t v20 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
      UIListContentConfiguration.TextProperties.font.setter();
      v20(v24, 0);
      v24[3] = v6;
      v24[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
      uint64_t v21 = sub_100100B1C(v24);
      (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v21, v9, v6);
      UITableViewHeaderFooterView.contentConfiguration.setter();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (uint64_t)v10;
    }
    __break(1u);
  }
  UIListContentConfiguration.directionalLayoutMargins.setter();
  id v16 = [self secondaryLabelColor];
  uint64_t v17 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v17(v24, 0);
  if ([self _preferredFontForTextStyle:UIFontTextStyleSubheadline weight:UIFontWeightBold])
  {
    goto LABEL_11;
  }
  __break(1u);
LABEL_9:
  if (!v13)
  {
    id v18 = [self labelColor];
    uint64_t v19 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.color.setter();
    v19(v24, 0);
    if ([self _preferredFontForTextStyle:UIFontTextStyleTitle3 weight:UIFontWeightSemibold])
    {
      goto LABEL_11;
    }
    __break(1u);
  }
  v24[0] = v13;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t sub_1001EE24C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  NSString v8 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 dequeueReusableCellWithIdentifier:v8 forIndexPath:isa];

  unint64_t v11 = sub_1001ED570();
  if (!v11) {
    return (uint64_t)v10;
  }
  uint64_t v12 = (void *)v11;
  static UIListContentConfiguration.cell()();
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_context);
  switch(v13)
  {
    case 0:
      goto LABEL_6;
    case 1:
LABEL_10:
      id v20 = [v12 name];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      UIListContentConfiguration.text.setter();
      v24[3] = v4;
      v24[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
      uint64_t v21 = sub_100100B1C(v24);
      (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v5 + 16))(v21, v7, v4);
      UITableViewCell.contentConfiguration.setter();

      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      return (uint64_t)v10;
    case 2:
      UIListContentConfiguration.directionalLayoutMargins.setter();
LABEL_6:
      [v10 setSelectionStyle:0];
      id v14 = self;
      id v15 = v10;
      id v16 = [v14 tertiarySystemFillColor];
      [v15 setBackgroundColor:v16];

      uint64_t v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_selectedNetworks);
      swift_beginAccess();
      uint64_t v18 = *v17;
      swift_bridgeObjectRetain();
      LOBYTE(v16) = sub_100256678(v12, v18);
      swift_bridgeObjectRelease();
      if (v16) {
        uint64_t v19 = 3;
      }
      else {
        uint64_t v19 = 0;
      }
      [v15 setAccessoryType:v19];
      goto LABEL_10;
  }
  v24[0] = *(void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_context);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

void sub_1001EE650(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = IndexPath.section.getter();
  if (v4 == 1)
  {
LABEL_7:
    unint64_t v8 = IndexPath.row.getter();
    unint64_t v6 = v8;
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks);
    if ((v7 & 0xC000000000000001) == 0)
    {
      if ((v8 & 0x8000000000000000) == 0)
      {
        if (v8 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_10;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_22:
    swift_bridgeObjectRetain();
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (v4) {
    return;
  }
  unint64_t v5 = IndexPath.row.getter();
  unint64_t v6 = v5;
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks);
  if ((v7 & 0xC000000000000001) != 0) {
    goto LABEL_22;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v5 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_7;
  }
LABEL_10:
  id v9 = *(id *)(v7 + 8 * v6 + 32);
LABEL_11:
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_context);
  if (v10 != 2)
  {
    if (v10 == 1)
    {
      v11.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [a1 deselectRowAtIndexPath:v11.super.isa animated:1];
LABEL_17:

      goto LABEL_18;
    }
    if (v10)
    {
LABEL_26:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      return;
    }
  }
  swift_beginAccess();
  sub_10013C77C(&v15, v9);
  uint64_t v12 = v15;
  swift_endAccess();

  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v11.super.Class isa = (Class)[a1 cellForRowAtIndexPath:isa];

  if (v11.super.isa)
  {
    [(objc_class *)v11.super.isa setAccessoryType:3];
    goto LABEL_17;
  }
LABEL_18:
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong didSelectNetwork:v9 isSuggested:IndexPath.section.getter() == 0];
    swift_unknownObjectRelease();
  }
}

void sub_1001EE8A8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = IndexPath.section.getter();
  if (v4 != 1)
  {
    if (v4) {
      return;
    }
    unint64_t v5 = IndexPath.row.getter();
    unint64_t v6 = v5;
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks);
    if ((v7 & 0xC000000000000001) != 0) {
      goto LABEL_20;
    }
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v5 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_10:
      id v9 = *(id *)(v7 + 8 * v6 + 32);
      goto LABEL_11;
    }
    __break(1u);
  }
  unint64_t v8 = IndexPath.row.getter();
  unint64_t v6 = v8;
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks);
  if ((v7 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if (v8 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_10;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_context);
  if (v10 == 2) {
    goto LABEL_14;
  }
  if (v10 != 1)
  {
    if (!v10)
    {
LABEL_14:
      swift_beginAccess();
      NSIndexPath v11 = (void *)sub_10013DBEC(v9);
      swift_endAccess();

      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v13 = [a1 cellForRowAtIndexPath:isa];

      if (v13)
      {
        [v13 setAccessoryType:0];
      }
      goto LABEL_16;
    }
LABEL_24:
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
    return;
  }
LABEL_16:
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong didSelectNetwork:v9 isSuggested:IndexPath.section.getter() == 0];

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_1001EEAD8(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  NSIndexPath v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  a5(v12, v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001EEBE4(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1001EF210;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012DDA30;
  id v12 = _Block_copy(aBlock);
  id v13 = v1;
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10010B9B0();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

void sub_1001EEE78(char *a1, id a2)
{
  id v4 = [a2 suggestedNetworks];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_100100830(0, (unint64_t *)&unk_1015D4B20);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = a1;
    uint64_t v8 = sub_1001EF4E0(v6, (uint64_t)v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  *(void *)&a1[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_suggestedNetworks] = v8;
  swift_bridgeObjectRelease();
  id v9 = [a2 otherNetworks];
  if (v9)
  {
    uint64_t v10 = v9;
    sub_100100830(0, (unint64_t *)&unk_1015D4B20);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v12 = a1;
    id v13 = sub_1001EF4E0(v11, (uint64_t)v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = _swiftEmptyArrayStorage;
  }
  *(void *)&a1[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_otherNetworks] = v13;
  swift_bridgeObjectRelease();
  sub_1001ECDFC();
}

void sub_1001EF044(void *a1)
{
  id v2 = [a1 searchBar];
  id countAndFlagsBits = [v2 text];

  if (countAndFlagsBits)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v4 = String.lowercased()();
    id countAndFlagsBits = (id)v4._countAndFlagsBits;
    object = v4._object;
    swift_bridgeObjectRelease();
  }
  else
  {
    object = 0;
  }
  unint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_searchString);
  *unint64_t v6 = countAndFlagsBits;
  v6[1] = object;
  swift_bridgeObjectRelease();

  sub_1001ECDFC();
}

ValueMetadata *type metadata accessor for ChargingNetworksDataSourceContext()
{
  return &type metadata for ChargingNetworksDataSourceContext;
}

unint64_t sub_1001EF17C()
{
  unint64_t result = qword_1015D4B18;
  if (!qword_1015D4B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4B18);
  }
  return result;
}

uint64_t sub_1001EF1D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001EF210()
{
  sub_1001EEE78(*(char **)(v0 + 16), *(id *)(v0 + 24));
}

void *sub_1001EF218(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v29 = a2;
  uint64_t v28 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v28 - 8);
  __chkstk_darwin(v28);
  unint64_t v27 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v21[1] = v3;
      unint64_t v22 = a1;
      unint64_t v8 = 0;
      uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v26 = a1 & 0xC000000000000001;
      uint64_t v23 = v5 + 1;
      uint64_t v24 = v7;
      id v9 = v27;
      while (v26)
      {
        uint64_t v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v5 = (void (**)(char *, uint64_t))v10;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_15;
        }
        id v12 = [v10 name];
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        uint64_t v32 = v13;
        uint64_t v33 = v15;
        static CharacterSet.whitespaces.getter();
        sub_100180324();
        uint64_t v16 = StringProtocol.trimmingCharacters(in:)();
        uint64_t v18 = v17;
        (*v23)(v9, v28);
        uint64_t v32 = v16;
        uint64_t v33 = v18;
        uint64_t v30 = 32;
        unint64_t v31 = 0xE100000000000000;
        StringProtocol.components<A>(separatedBy:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v3 = (void **)[v29 evaluateWithObject:isa];

        if (v3)
        {
          uint64_t v3 = &v34;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        a1 = v22;
        ++v8;
        if (v11 == v24) {
          return v34;
        }
      }
      if (v8 < *(void *)(v25 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v10 = (char *)*(id *)(a1 + 8 * v8 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1001EF4E0(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v25 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      unint64_t v23 = v2 & 0xC000000000000001;
      uint64_t v21 = OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_excludedNetworks;
      uint64_t v22 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v19 = v3;
      uint64_t v20 = v2 + 32;
      while (v23)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v6 = v5;
        if (__OFADD__(v4++, 1)) {
          goto LABEL_23;
        }
        uint64_t v8 = *(void *)(a2 + v21);
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v2 = (uint64_t)v5;
          char v9 = __CocoaSet.contains(_:)();

          if (v9)
          {

            goto LABEL_5;
          }
        }
        else if (*(void *)(v8 + 16))
        {
          Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(v8 + 40));
          uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
          unint64_t v12 = v10 & ~v11;
          if ((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
          {
            uint64_t v2 = sub_100100830(0, (unint64_t *)&unk_1015D4B20);
            id v13 = *(id *)(*(void *)(v8 + 48) + 8 * v12);
            char v14 = static NSObject.== infix(_:_:)();

            if (v14)
            {
LABEL_19:

              uint64_t v3 = v19;
              goto LABEL_5;
            }
            uint64_t v15 = ~v11;
            while (1)
            {
              unint64_t v12 = (v12 + 1) & v15;
              uint64_t v3 = v19;
              if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
                break;
              }
              id v16 = *(id *)(*(void *)(v8 + 48) + 8 * v12);
              char v17 = static NSObject.== infix(_:_:)();

              if (v17) {
                goto LABEL_19;
              }
            }
          }
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        uint64_t v2 = (uint64_t)&v25;
        specialized ContiguousArray._endMutation()();
LABEL_5:
        if (v4 == v3) {
          return v25;
        }
      }
      if (v4 < *(void *)(v22 + 16)) {
        break;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v5 = *(id *)(v20 + 8 * v4);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001EF740(uint64_t a1)
{
  if (a1 == 1)
  {
    uint64_t v2 = OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks;
  }
  else
  {
    if (a1) {
      return 0;
    }
    uint64_t v2 = OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks;
  }
  unint64_t v3 = *(void *)(v1 + v2);
  if (!(v3 >> 62)) {
    return *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1001EF7C8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001EF800(uint64_t a1, uint64_t a2)
{
  return sub_1001ED2B0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1001EF808()
{
  unint64_t result = qword_1015D4B48;
  if (!qword_1015D4B48)
  {
    sub_100100830(255, (unint64_t *)&unk_1015D4B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4B48);
  }
  return result;
}

uint64_t *sub_1001EF878(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for RoundedCornerStyle();
    Swift::Int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1001EF960(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for RoundedCornerStyle();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1001EF9D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for RoundedCornerStyle();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1001EFA70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1001EFB0C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1001EFB88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001EFC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EFC28);
}

uint64_t sub_1001EFC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Capsule();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001EFCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EFCEC);
}

uint64_t sub_1001EFCEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Capsule();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for RefinementMultiSelectButton(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D4BA8);
}

uint64_t sub_1001EFDB4()
{
  uint64_t result = type metadata accessor for RoundedCornerStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1001EFE4C(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    unint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)v4 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    id v13 = (void *)((char *)v4 + v9);
    char v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[9];
    uint64_t v18 = (void *)((char *)v4 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001EFF68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1001F0000(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  id v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1001F00D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001F01D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1001F0278(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_1001F034C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F0360);
}

uint64_t sub_1001F0364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F0378);
}

uint64_t type metadata accessor for RefinementBarButton(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D4C38);
}

uint64_t sub_1001F039C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1001F044C(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    unint64_t v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)v4 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)v4 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[9];
    uint64_t v18 = a3[10];
    uint64_t v19 = (char *)v4 + v17;
    uint64_t v20 = (char *)a2 + v17;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    v19[16] = v20[16];
    *((void *)v19 + 3) = *((void *)v20 + 3);
    uint64_t v22 = (void *)((char *)v4 + v18);
    unint64_t v23 = (void *)((char *)a2 + v18);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001F0590(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1001F0634(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  uint64_t v20 = *(void *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (void *)(a2 + v17);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1001F072C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 8);
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(void *)(v14 + 8) = v16;
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001F0874(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = a3[10];
  uint64_t v11 = (_OWORD *)(a1 + v9);
  uint64_t v12 = (_OWORD *)(a2 + v9);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

uint64_t sub_1001F0928(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *long long v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_bridgeObjectRelease();
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(void *)(v19 + 24) = *(void *)(v20 + 24);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  swift_release();
  return a1;
}

uint64_t sub_1001F0A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F0A4C);
}

uint64_t sub_1001F0A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001F0B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F0B24);
}

uint64_t sub_1001F0B28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RefinementMenu(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D4CD8);
}

uint64_t sub_1001F0C04()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001F0CC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F0CDC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[5];
  a9[4] = v13[4];
  a9[5] = v24;
  a9[6] = v13[6];
  *(_OWORD *)((char *)a9 + 105) = *(_OWORD *)((char *)v13 + 105);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  long long v26 = v13[3];
  a9[2] = v13[2];
  a9[3] = v26;
  a9[8] = v28;
  a9[9] = v29;
  a9[13] = v33;
  a9[14] = v34;
  a9[11] = v31;
  a9[12] = v32;
  a9[10] = v30;

  return sub_1001F7EB8((uint64_t)v13);
}

uint64_t sub_1001F0EAC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_10017FDF0(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

__n128 sub_1001F10A0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = sub_1000FF33C((uint64_t *)&unk_1015D8550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  long long v25 = (_OWORD *)(a9 + *(int *)(sub_1000FF33C(&qword_1015D5088) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *long long v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

__n128 sub_1001F128C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1000FF27C(v13, a9, &qword_1015D4F18);
  uint64_t v24 = (_OWORD *)(a9 + *(int *)(sub_1000FF33C(&qword_1015D4F20) + 36));
  v24[4] = v30;
  uint64_t v24[5] = v31;
  v24[6] = v32;
  _OWORD *v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_1001F144C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v1 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D5070);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D5078);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(&qword_1015D5080);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  if (ButtonStyleConfiguration.isPressed.getter()) {
    double v16 = 0.85;
  }
  else {
    double v16 = 1.0;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  *(double *)&v8[*(int *)(v6 + 44)] = v16;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  char v17 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_1000FF27C((uint64_t)v8, (uint64_t)v12, &qword_1015D5070);
  long long v26 = &v12[*(int *)(v10 + 44)];
  *long long v26 = v17;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  v26[40] = 0;
  sub_1000FF2E0((uint64_t)v8, &qword_1015D5070);
  if (ButtonStyleConfiguration.isPressed.getter())
  {
    id v27 = [self tertiarySystemFillColor];
    uint64_t v28 = Color.init(uiColor:)();
  }
  else
  {
    uint64_t v28 = static Color.clear.getter();
  }
  uint64_t v29 = v28;
  char v30 = static Edge.Set.all.getter();
  sub_1000FF27C((uint64_t)v12, (uint64_t)v15, &qword_1015D5078);
  long long v31 = &v15[*(int *)(v13 + 36)];
  *(void *)long long v31 = v29;
  v31[8] = v30;
  sub_1000FF2E0((uint64_t)v12, &qword_1015D5078);
  return sub_100101750((uint64_t)v15, v34, &qword_1015D5080);
}

uint64_t sub_1001F1754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v111 = a1;
  uint64_t v2 = type metadata accessor for AccessibilityTraits();
  uint64_t v109 = *(void *)(v2 - 8);
  uint64_t v110 = v2;
  __chkstk_darwin(v2);
  v108 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v112);
  v107 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v94 = (char *)&v88 - v6;
  uint64_t v7 = sub_1000FF33C(&qword_1015D09E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RefinementBarButton(0);
  uint64_t v11 = v10 - 8;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v10);
  uint64_t v14 = sub_1000FF33C(&qword_1015D4DB0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000FF33C(&qword_1015D4DB8);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  v89 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000FF33C(&qword_1015D4DC0) - 8;
  __chkstk_darwin(v96);
  v95 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000FF33C(&qword_1015D4DC8);
  __chkstk_darwin(v97);
  uint64_t v98 = (uint64_t)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1000FF33C(&qword_1015D4DD0);
  __chkstk_darwin(v103);
  v99 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000FF33C(&qword_1015D4DD8);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  v102 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000FF33C(&qword_1015D4DE0);
  __chkstk_darwin(v104);
  v101 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v100 = (char *)&v88 - v27;
  uint64_t v88 = v1;
  sub_1001F5F38(v1, (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RefinementBarButton);
  unint64_t v28 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v29 = swift_allocObject();
  sub_1001F5ED0((uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28, type metadata accessor for RefinementBarButton);
  uint64_t v113 = v1;
  sub_1000FF33C(&qword_1015D4DE8);
  sub_1001F60E8();
  Button.init(action:label:)();
  char v30 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  long long v39 = v89;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v89, v17, v14);
  v40 = &v39[*(int *)(v19 + 44)];
  uint64_t v41 = (uint64_t)v39;
  char *v40 = v30;
  *((void *)v40 + 1) = v32;
  *((void *)v40 + 2) = v34;
  *((void *)v40 + 3) = v36;
  *((void *)v40 + 4) = v38;
  v40[40] = 0;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v42 = v94;
  double v43 = &v94[*(int *)(v112 + 20)];
  uint64_t v44 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v45 = type metadata accessor for RoundedCornerStyle();
  uint64_t v46 = *(void *)(v45 - 8);
  int64_t v47 = *(void (**)(char *, void, uint64_t))(v46 + 104);
  unsigned int v93 = v44;
  v92 = v47;
  uint64_t v91 = v46 + 104;
  v47(v43, v44, v45);
  __asm { FMOV            V0.2D, #16.0 }
  long long v90 = _Q0;
  *uint64_t v42 = _Q0;
  [objc_allocWithZone((Class)UIColor) initWithRed:0.780392157 green:0.780392157 blue:0.8 alpha:1.0];
  uint64_t v53 = Color.init(uiColor:)();
  uint64_t v54 = *(int *)(v11 + 36);
  uint64_t v55 = v88;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  sub_1001F5F38((uint64_t)v42, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v56 = &v9[*(int *)(sub_1000FF33C(&qword_1015D0A08) + 36)];
  long long v57 = v119;
  *(_OWORD *)uint64_t v56 = v118;
  *((_OWORD *)v56 + 1) = v57;
  *((void *)v56 + 4) = v120;
  uint64_t v58 = sub_1000FF33C(&qword_1015D0A10);
  *(void *)&v9[*(int *)(v58 + 52)] = v53;
  *(_WORD *)&v9[*(int *)(v58 + 56)] = 256;
  uint64_t v59 = static Alignment.center.getter();
  uint64_t v61 = v60;
  v62 = (uint64_t *)&v9[*(int *)(sub_1000FF33C(&qword_1015D0A18) + 36)];
  uint64_t *v62 = v59;
  v62[1] = v61;
  sub_1001F6748((uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v63 = static Alignment.center.getter();
  uint64_t v65 = v64;
  uint64_t v66 = (uint64_t)v95;
  uint64_t v67 = (uint64_t)&v95[*(int *)(v96 + 44)];
  sub_1000FF27C((uint64_t)v9, v67, &qword_1015D09E0);
  unint64_t v68 = (uint64_t *)(v67 + *(int *)(sub_1000FF33C(&qword_1015D0A20) + 36));
  *unint64_t v68 = v63;
  v68[1] = v65;
  uint64_t v69 = v55;
  sub_1000FF27C(v41, v66, &qword_1015D4DB8);
  sub_1000FF2E0((uint64_t)v9, &qword_1015D09E0);
  sub_1000FF2E0(v41, &qword_1015D4DB8);
  if (*(unsigned char *)(v55 + v54) == 1) {
    uint64_t v70 = static Color.blue.getter();
  }
  else {
    uint64_t v70 = static Color.clear.getter();
  }
  uint64_t v71 = v70;
  char v72 = static Edge.Set.all.getter();
  uint64_t v73 = v98;
  sub_1000FF27C(v66, v98, &qword_1015D4DC0);
  uint64_t v74 = v73 + *(int *)(v97 + 36);
  *(void *)uint64_t v74 = v71;
  *(unsigned char *)(v74 + 8) = v72;
  sub_1000FF2E0(v66, &qword_1015D4DC0);
  v75 = v107;
  v92(&v107[*(int *)(v112 + 20)], v93, v45);
  _OWORD *v75 = v90;
  uint64_t v76 = (void *)v103;
  uint64_t v77 = (uint64_t)v99;
  uint64_t v78 = (uint64_t)&v99[*(int *)(v103 + 36)];
  sub_1001F5F38((uint64_t)v75, v78, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v78 + *(int *)(sub_1000FF33C(&qword_1015CFF60) + 36)) = 256;
  sub_1000FF27C(v73, v77, &qword_1015D4DC8);
  sub_1001F6748((uint64_t)v75, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000FF2E0(v73, &qword_1015D4DC8);
  unint64_t v79 = sub_1001F61AC();
  unint64_t v80 = sub_1001F642C();
  v81 = v102;
  View.buttonStyle<A>(_:)();
  sub_1000FF2E0(v77, &qword_1015D4DD0);
  v82 = v108;
  if (*(unsigned char *)(v69 + v54) == 1)
  {
    static AccessibilityTraits.isSelected.getter();
    uint64_t v83 = v110;
  }
  else
  {
    v114 = _swiftEmptyArrayStorage;
    sub_1001F5CEC(&qword_1015D4E30, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_1000FF33C((uint64_t *)&unk_1015D8120);
    sub_1001010F8(&qword_1015D4E38, (uint64_t *)&unk_1015D8120);
    uint64_t v83 = v110;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  v114 = v76;
  v115 = &type metadata for RefinementButtonStyle;
  unint64_t v116 = v79;
  unint64_t v117 = v80;
  swift_getOpaqueTypeConformance2();
  uint64_t v84 = (uint64_t)v101;
  uint64_t v85 = v106;
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v82, v83);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v81, v85);
  uint64_t v86 = (uint64_t)v100;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  sub_1000FF2E0(v84, &qword_1015D4DE0);
  return sub_100101750(v86, v111, &qword_1015D4DE0);
}

uint64_t sub_1001F22F0()
{
  return swift_release();
}

uint64_t sub_1001F2368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = static VerticalAlignment.center.getter();
  sub_1001F2F2C(a1, type metadata accessor for RefinementBarButton, (uint64_t)v18);
  uint64_t v4 = v18[0];
  uint64_t v5 = v18[1];
  uint64_t v6 = v18[2];
  uint64_t v7 = v18[3];
  char v8 = v19;
  uint64_t v9 = v20;
  uint64_t v10 = v21;
  uint64_t v11 = v22;
  uint64_t v15 = v24;
  uint64_t v16 = v23;
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for RefinementBarButton(0) + 28)) == 1) {
    uint64_t v12 = static Color.white.getter();
  }
  else {
    uint64_t v12 = static Color.primary.getter();
  }
  uint64_t v13 = v12;
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = 0x4010000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v7;
  *(unsigned char *)(a2 + 56) = v8;
  *(void *)(a2 + 64) = v9;
  *(void *)(a2 + 72) = v10;
  *(void *)(a2 + 80) = v11;
  *(void *)(a2 + 88) = v16;
  *(void *)(a2 + 96) = v15;
  *(void *)(a2 + 104) = result;
  *(void *)(a2 + 112) = v13;
  return result;
}

uint64_t sub_1001F2464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = sub_1000FF33C(&qword_1015D4D28);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D4D30);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000FF33C(&qword_1015D4D38);
  __chkstk_darwin(v26);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v25 = (char *)&v24 - v13;
  uint64_t v31 = v2;
  uint64_t v30 = v2;
  sub_1000FF33C(&qword_1015D4D40);
  sub_1000FF33C(&qword_1015D4D48);
  sub_1001F7D8C(&qword_1015D4D50, &qword_1015D4D40, (void (*)(void))sub_1001F5784);
  sub_1001F5824();
  Menu.init(content:label:)();
  uint64_t v14 = type metadata accessor for RefinementMenu(0);
  LOBYTE(v32) = *(unsigned char *)(v2 + *(int *)(v14 + 28));
  uint64_t v15 = sub_1001010F8(&qword_1015D4D88, &qword_1015D4D28);
  unint64_t v16 = sub_1001F58E8();
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v17 = (uint64_t *)(v2 + *(int *)(v14 + 20));
  unint64_t v18 = v17[1];
  if (v18)
  {
    uint64_t v19 = *v17;
    unint64_t v20 = v18;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  uint64_t v36 = v19;
  unint64_t v37 = v20;
  swift_bridgeObjectRetain();
  uint64_t v32 = v3;
  uint64_t v33 = &type metadata for RefinementMenuStyle;
  uint64_t v34 = v15;
  unint64_t v35 = v16;
  swift_getOpaqueTypeConformance2();
  sub_100180324();
  uint64_t v21 = v28;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v21);
  uint64_t v22 = (uint64_t)v25;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  sub_1000FF2E0((uint64_t)v11, &qword_1015D4D38);
  return sub_100101750(v22, v29, &qword_1015D4D38);
}

uint64_t sub_1001F283C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RefinementMenu(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  v9[1] = *(void *)(a1 + *(int *)(v5 + 44));
  sub_1001F5F38(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RefinementMenu);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_1001F5ED0((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for RefinementMenu);
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D4D98);
  type metadata accessor for UUID();
  type metadata accessor for SubmenuButton(0);
  sub_1001010F8(&qword_1015D4DA0, &qword_1015D4D98);
  sub_1001F5CEC(&qword_1015D4D80, (void (*)(uint64_t))type metadata accessor for SubmenuButton);
  sub_1001F5CEC(&qword_1015D4DA8, (void (*)(uint64_t))type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1001F2A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for RefinementMenu(0);
  uint64_t v7 = v6 - 8;
  uint64_t v38 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v39 = v8;
  v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for SubmenuButton(0);
  __n128 v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v14);
  uint64_t v17 = type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element(0);
  unint64_t v18 = (uint64_t *)(a1 + *(int *)(v17 + 20));
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = a2 + *(int *)(v7 + 44);
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = 8;
  if (*(unsigned char *)(v21 + 16)) {
    uint64_t v23 = 24;
  }
  uint64_t v24 = *(void *)(v22 + 16);
  uint64_t v42 = v9;
  uint64_t v43 = a3;
  uint64_t v41 = v19;
  if (v24)
  {
    uint64_t v37 = a2;
    uint64_t v25 = *(void *)(v21 + v23);
    uint64_t v26 = v22
        + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
    uint64_t v27 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v36 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while ((static UUID.== infix(_:_:)() & 1) == 0)
    {
      --v25;
      v26 += v27;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    LOBYTE(v24) = v25 == 0;
LABEL_10:
    uint64_t v29 = (uint64_t)v40;
    a2 = v37;
    uint64_t v30 = v38;
    uint64_t v28 = v36;
  }
  else
  {
    uint64_t v28 = v20;
    swift_bridgeObjectRetain();
    uint64_t v29 = (uint64_t)v40;
    uint64_t v30 = v38;
  }
  sub_1001F5F38(a2, v29, type metadata accessor for RefinementMenu);
  unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = swift_allocObject();
  sub_1001F5ED0(v29, v32 + v31, type metadata accessor for RefinementMenu);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v12, v42);
  uint64_t v33 = &v16[v13[5]];
  *(void *)uint64_t v33 = v41;
  *((void *)v33 + 1) = v28;
  v16[v13[6]] = v24;
  uint64_t v34 = (uint64_t (**)(uint64_t))&v16[v13[7]];
  void *v34 = sub_1001F5E58;
  v34[1] = (uint64_t (*)(uint64_t))v32;
  return sub_1001F5ED0((uint64_t)v16, v43, type metadata accessor for SubmenuButton);
}

uint64_t sub_1001F2DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static VerticalAlignment.center.getter();
  sub_1001F2F2C(a1, type metadata accessor for RefinementMenu, (uint64_t)&v28);
  uint64_t v5 = v29;
  uint64_t v6 = v30;
  char v7 = v31;
  long long v26 = v32;
  long long v27 = v28;
  long long v25 = v33;
  uint64_t v8 = v34;
  LOBYTE(a1) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v36 = 0;
  char v35 = 0;
  char v17 = static Edge.Set.vertical.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  char v19 = v36;
  char v20 = v35;
  LOBYTE(v28) = 0;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0x4010000000000000;
  *(unsigned char *)(a2 + 16) = v19;
  *(_OWORD *)(a2 + 24) = v27;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(unsigned char *)(a2 + 56) = v7;
  *(_OWORD *)(a2 + 64) = v26;
  *(_OWORD *)(a2 + 80) = v25;
  *(void *)(a2 + 96) = v8;
  *(unsigned char *)(a2 + 104) = a1;
  *(void *)(a2 + 112) = v10;
  *(void *)(a2 + 120) = v12;
  *(void *)(a2 + 128) = v14;
  *(void *)(a2 + 136) = v16;
  *(unsigned char *)(a2 + 144) = v20;
  *(unsigned char *)(a2 + 152) = v17;
  *(void *)(a2 + 160) = v21;
  *(void *)(a2 + 168) = v22;
  *(void *)(a2 + 176) = v23;
  *(void *)(a2 + 184) = v24;
  *(unsigned char *)(a2 + 192) = v28;
  return result;
}

uint64_t sub_1001F2F2C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a2(0);
  uint64_t v6 = v5;
  char v7 = (uint64_t *)(a1 + *(int *)(v5 + 20));
  if (v7[1])
  {
    uint64_t v23 = *v7;
    uint64_t v24 = v7[1];
    sub_100180324();
    swift_bridgeObjectRetain();
    uint64_t v8 = Text.init<A>(_:)();
    uint64_t v10 = v9;
    char v12 = v11 & 1;
    static Font.subheadline.getter();
    Text.font(_:)();
    swift_release();
    sub_10017F958(v8, v10, v12);
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1000FF33C(&qword_1015D0920);
    sub_1001F5BC8();
    _ConditionalContent<>.init(storage:)();
    uint64_t v13 = v23;
    uint64_t v14 = v24;
    uint64_t v15 = v25;
    uint64_t v16 = v26;
    unsigned __int8 v17 = v27;
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(a1 + *(int *)(v5 + 24) + 8);
  if (v13)
  {
    swift_bridgeObjectRetain();
    Image.init(systemName:)();
    static Font.subheadline.getter();
    swift_getKeyPath();
    goto LABEL_5;
  }
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  unsigned __int8 v17 = -1;
LABEL_6:
  if (*(unsigned char *)(a1 + *(int *)(v6 + 32)) == 1)
  {
    uint64_t v18 = Image.init(systemName:)();
    uint64_t v19 = static Font.caption2.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v21 = 0x3FF0000000000000;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t KeyPath = 0;
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  *(void *)a3 = v13;
  *(void *)(a3 + 8) = v14;
  *(void *)(a3 + 16) = v15;
  *(void *)(a3 + 24) = v16;
  *(unsigned char *)(a3 + 32) = v17;
  *(void *)(a3 + 40) = v18;
  *(void *)(a3 + 48) = KeyPath;
  *(void *)(a3 + 56) = v19;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = v21;
  sub_1001F593C(v13, v14, v15, v16, v17);
  sub_1001F59E0(v18);
  sub_1001F5A30(v18);
  return sub_1001F5A7C(v13, v14, v15, v16, v17);
}

uint64_t sub_1001F31C4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v91 = a3;
  uint64_t v4 = type metadata accessor for AccessibilityTraits();
  uint64_t v89 = *(void *)(v4 - 8);
  uint64_t v90 = v4;
  __chkstk_darwin(v4);
  uint64_t v88 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v92);
  uint64_t v86 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v74 - v8;
  uint64_t v9 = sub_1000FF33C(&qword_1015D09E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v80 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MenuStyleConfiguration();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000FF33C(&qword_1015D5008);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015D5010);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000FF33C(&qword_1015D5018);
  __chkstk_darwin(v76);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000FF33C(&qword_1015D5020);
  __chkstk_darwin(v77);
  uint64_t v75 = (uint64_t)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000FF33C(&qword_1015D5028);
  __chkstk_darwin(v79);
  v81 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000FF33C(&qword_1015D5030);
  __chkstk_darwin(v83);
  uint64_t v84 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000FF33C(&qword_1015D5038);
  __n128 v28 = __chkstk_darwin(v27 - 8);
  v82 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v14, v78, v11, v28);
  Menu<>.init(_:)();
  if (a2) {
    uint64_t v30 = static Color.white.getter();
  }
  else {
    uint64_t v30 = static Color.primary.getter();
  }
  uint64_t v31 = v30;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v18, v15);
  long long v33 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  uint64_t *v33 = KeyPath;
  v33[1] = v31;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  int v87 = a2;
  if (a2) {
    uint64_t v34 = static Color.blue.getter();
  }
  else {
    uint64_t v34 = static Color.clear.getter();
  }
  uint64_t v35 = v34;
  char v36 = static Edge.Set.all.getter();
  sub_1000FF27C((uint64_t)v21, (uint64_t)v23, &qword_1015D5010);
  uint64_t v37 = &v23[*(int *)(v76 + 36)];
  *(void *)uint64_t v37 = v35;
  v37[8] = v36;
  sub_1000FF2E0((uint64_t)v21, &qword_1015D5010);
  uint64_t v38 = static Font.subheadline.getter();
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = v75;
  sub_1000FF27C((uint64_t)v23, v75, &qword_1015D5018);
  uint64_t v41 = (uint64_t *)(v40 + *(int *)(v77 + 36));
  uint64_t *v41 = v39;
  v41[1] = v38;
  sub_1000FF2E0((uint64_t)v23, &qword_1015D5018);
  uint64_t v42 = v85;
  uint64_t v43 = &v85[*(int *)(v92 + 20)];
  uint64_t v44 = enum case for RoundedCornerStyle.continuous(_:);
  LODWORD(v77) = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v45 = type metadata accessor for RoundedCornerStyle();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v76 = *(void *)(v46 + 104);
  uint64_t v78 = v46 + 104;
  ((void (*)(char *, uint64_t, uint64_t))v76)(v43, v44, v45);
  __asm { FMOV            V0.2D, #16.0 }
  long long v74 = _Q0;
  *uint64_t v42 = _Q0;
  [objc_allocWithZone((Class)UIColor) initWithRed:0.780392157 green:0.780392157 blue:0.8 alpha:1.0];
  uint64_t v52 = Color.init(uiColor:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v53 = v80;
  sub_1001F5F38((uint64_t)v42, v80, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v54 = v53 + *(int *)(sub_1000FF33C(&qword_1015D0A08) + 36);
  long long v55 = v95;
  *(_OWORD *)uint64_t v54 = v94;
  *(_OWORD *)(v54 + 16) = v55;
  *(void *)(v54 + 32) = v96;
  uint64_t v56 = sub_1000FF33C(&qword_1015D0A10);
  *(void *)(v53 + *(int *)(v56 + 52)) = v52;
  *(_WORD *)(v53 + *(int *)(v56 + 56)) = 256;
  uint64_t v57 = static Alignment.center.getter();
  uint64_t v59 = v58;
  uint64_t v60 = (uint64_t *)(v53 + *(int *)(sub_1000FF33C(&qword_1015D0A18) + 36));
  *uint64_t v60 = v57;
  v60[1] = v59;
  sub_1001F6748((uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v61 = static Alignment.center.getter();
  uint64_t v63 = v62;
  uint64_t v64 = (uint64_t)v81;
  uint64_t v65 = (uint64_t)&v81[*(int *)(v79 + 36)];
  sub_1000FF27C(v53, v65, &qword_1015D09E0);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(sub_1000FF33C(&qword_1015D0A20) + 36));
  uint64_t *v66 = v61;
  v66[1] = v63;
  sub_1000FF27C(v40, v64, &qword_1015D5020);
  sub_1000FF2E0(v53, &qword_1015D09E0);
  sub_1000FF2E0(v40, &qword_1015D5020);
  uint64_t v67 = v86;
  ((void (*)(char *, void, uint64_t))v76)(&v86[*(int *)(v92 + 20)], v77, v45);
  *uint64_t v67 = v74;
  uint64_t v68 = (uint64_t)v84;
  uint64_t v69 = (uint64_t)&v84[*(int *)(v83 + 36)];
  sub_1001F5F38((uint64_t)v67, v69, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v69 + *(int *)(sub_1000FF33C(&qword_1015CFF60) + 36)) = 256;
  sub_1000FF27C(v64, v68, &qword_1015D5028);
  sub_1001F6748((uint64_t)v67, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000FF2E0(v64, &qword_1015D5028);
  if (v87)
  {
    uint64_t v70 = v88;
    static AccessibilityTraits.isSelected.getter();
    uint64_t v71 = v90;
  }
  else
  {
    unsigned int v93 = _swiftEmptyArrayStorage;
    sub_1001F5CEC(&qword_1015D4E30, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_1000FF33C((uint64_t *)&unk_1015D8120);
    sub_1001010F8(&qword_1015D4E38, (uint64_t *)&unk_1015D8120);
    uint64_t v70 = v88;
    uint64_t v71 = v90;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  sub_1001F77FC();
  uint64_t v72 = (uint64_t)v82;
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v70, v71);
  sub_1000FF2E0(v68, &qword_1015D5030);
  return sub_100101750(v72, v91, &qword_1015D5038);
}

uint64_t sub_1001F3B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001F31C4(a1, *v2, a2);
}

uint64_t sub_1001F3B74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v2 = type metadata accessor for AccessibilityTraits();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  uint64_t v28 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SubmenuButton(0);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v6);
  uint64_t v10 = sub_1000FF33C(&qword_1015D4FD8);
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000FF33C(&qword_1015D4FE0);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - v16;
  sub_1001F5F38(v1, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SubmenuButton);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1001F5ED0((uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for SubmenuButton);
  uint64_t v30 = v1;
  sub_1000FF33C(&qword_1015D4FE8);
  sub_1001F7754();
  Button.init(action:label:)();
  if (*(unsigned char *)(v1 + *(int *)(v7 + 32)) == 1)
  {
    static AccessibilityTraits.isSelected.getter();
    uint64_t v20 = v27;
  }
  else
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
    sub_1001F5CEC(&qword_1015D4E30, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_1000FF33C((uint64_t *)&unk_1015D8120);
    sub_1001010F8(&qword_1015D4E38, (uint64_t *)&unk_1015D8120);
    uint64_t v21 = v27;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v20 = v21;
  }
  sub_1001010F8(&qword_1015D4FF8, &qword_1015D4FD8);
  uint64_t v22 = v26;
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v20);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v22);
  ModifiedContent<>.accessibilityIdentifier(_:)();
  sub_1000FF2E0((uint64_t)v14, &qword_1015D4FE0);
  return sub_100101750((uint64_t)v17, v29, &qword_1015D4FE0);
}

uint64_t sub_1001F3FD0(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D5000);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C((uint64_t *)&unk_1015D8500);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SubmenuButton(0);
  if (*(unsigned char *)(a1 + *(int *)(v9 + 24)) == 1)
  {
    __chkstk_darwin(v9);
    v16[-2] = a1;
    Label.init(title:icon:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    swift_storeEnumTagMultiPayload();
    sub_1001010F8(&qword_1015D8520, (uint64_t *)&unk_1015D8500);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v11 = (void *)(a1 + *(int *)(v9 + 20));
    uint64_t v12 = v11[1];
    v16[0] = *v11;
    v16[1] = v12;
    sub_100180324();
    swift_bridgeObjectRetain();
    *(void *)uint64_t v4 = Text.init<A>(_:)();
    *((void *)v4 + 1) = v13;
    v4[16] = v14 & 1;
    *((void *)v4 + 3) = v15;
    swift_storeEnumTagMultiPayload();
    sub_1001010F8(&qword_1015D8520, (uint64_t *)&unk_1015D8500);
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1001F42B8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SubmenuButton(0);
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1001F4338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_1001F437C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v112 = a1;
  uint64_t v2 = sub_1000FF33C(&qword_1015CE6E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v111 = (uint64_t)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v109 = (char *)&v90 - v5;
  __chkstk_darwin(v6);
  uint64_t v110 = (char *)&v90 - v7;
  uint64_t v108 = type metadata accessor for AccessibilityTraits();
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Capsule();
  __chkstk_darwin(v9 - 8);
  uint64_t v97 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D4E40);
  __chkstk_darwin(v11 - 8);
  uint64_t v94 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for RefinementMultiSelectButton(0);
  uint64_t v13 = *(void *)(v93 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v93);
  uint64_t v15 = sub_1000FF33C(&qword_1015D4E48);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015D4E50);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000FF33C(&qword_1015D4E58);
  __chkstk_darwin(v92);
  uint64_t v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000FF33C(&qword_1015D4E60);
  __chkstk_darwin(v91);
  long long v95 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1000FF33C(&qword_1015D4E68);
  __chkstk_darwin(v113);
  uint64_t v96 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000FF33C(&qword_1015D4E70);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v98 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000FF33C(&qword_1015D4E78);
  __chkstk_darwin(v28 - 8);
  uint64_t v101 = (uint64_t)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v103 = (char *)&v90 - v31;
  uint64_t v105 = sub_1000FF33C(&qword_1015D4E80);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000FF33C(&qword_1015D4E88);
  __chkstk_darwin(v33 - 8);
  v102 = (char *)&v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F5F38(v1, (uint64_t)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RefinementMultiSelectButton);
  unint64_t v35 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v36 = swift_allocObject();
  sub_1001F5ED0((uint64_t)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35, type metadata accessor for RefinementMultiSelectButton);
  uint64_t v114 = v1;
  sub_1000FF33C(&qword_1015D4E90);
  sub_1001F667C();
  Button.init(action:label:)();
  char v37 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v18, v15);
  uint64_t v46 = &v22[*(int *)(v20 + 44)];
  *uint64_t v46 = v37;
  *((void *)v46 + 1) = v39;
  *((void *)v46 + 2) = v41;
  *((void *)v46 + 3) = v43;
  *((void *)v46 + 4) = v45;
  v46[40] = 0;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v119 == 1) {
    uint64_t v47 = static Color.blue.getter();
  }
  else {
    uint64_t v47 = static Color.clear.getter();
  }
  uint64_t v48 = v47;
  char v49 = static Edge.Set.all.getter();
  sub_1000FF27C((uint64_t)v22, (uint64_t)v24, &qword_1015D4E50);
  uint64_t v50 = &v24[*(int *)(v92 + 36)];
  *(void *)uint64_t v50 = v48;
  v50[8] = v49;
  sub_1000FF2E0((uint64_t)v22, &qword_1015D4E50);
  uint64_t v51 = v1 + *(int *)(v93 + 20);
  uint64_t v52 = (uint64_t)v95;
  uint64_t v53 = (uint64_t)&v95[*(int *)(v91 + 36)];
  sub_1001F5F38(v51, v53, (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(_WORD *)(v53 + *(int *)(sub_1000FF33C(&qword_1015D4EB0) + 36)) = 256;
  sub_100101750((uint64_t)v24, v52, &qword_1015D4E58);
  uint64_t v54 = v97;
  sub_1001F5F38(v51, v97, (uint64_t (*)(void))&type metadata accessor for Capsule);
  [objc_allocWithZone((Class)UIColor) initWithRed:0.780392157 green:0.780392157 blue:0.8 alpha:1.0];
  uint64_t v55 = Color.init(uiColor:)();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v56 = v94;
  sub_1001F5F38(v54, v94, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v57 = v56 + *(int *)(sub_1000FF33C(&qword_1015D4EB8) + 36);
  long long v58 = v120;
  *(_OWORD *)uint64_t v57 = v119;
  *(_OWORD *)(v57 + 16) = v58;
  *(void *)(v57 + 32) = v121;
  uint64_t v59 = sub_1000FF33C(&qword_1015D4EC0);
  *(void *)(v56 + *(int *)(v59 + 52)) = v55;
  *(_WORD *)(v56 + *(int *)(v59 + 56)) = 256;
  uint64_t v60 = static Alignment.center.getter();
  uint64_t v62 = v61;
  uint64_t v63 = (uint64_t *)(v56 + *(int *)(sub_1000FF33C(&qword_1015D4EC8) + 36));
  *uint64_t v63 = v60;
  v63[1] = v62;
  sub_1001F6748(v54, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v64 = static Alignment.center.getter();
  uint64_t v66 = v65;
  uint64_t v67 = (uint64_t)v96;
  uint64_t v68 = (uint64_t)&v96[*(int *)(v113 + 36)];
  sub_1000FF27C(v56, v68, &qword_1015D4E40);
  uint64_t v69 = (uint64_t *)(v68 + *(int *)(sub_1000FF33C(&qword_1015D4ED0) + 36));
  uint64_t *v69 = v64;
  v69[1] = v66;
  sub_1000FF27C(v52, v67, &qword_1015D4E60);
  sub_1000FF2E0(v56, &qword_1015D4E40);
  sub_1000FF2E0(v52, &qword_1015D4E60);
  unint64_t v70 = sub_1001F67A8();
  unint64_t v71 = sub_1001F642C();
  uint64_t v72 = v98;
  View.buttonStyle<A>(_:)();
  sub_1000FF2E0(v67, &qword_1015D4E68);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v115 == 1)
  {
    uint64_t v73 = v106;
    static AccessibilityTraits.isSelected.getter();
    uint64_t v74 = v108;
  }
  else
  {
    v115 = _swiftEmptyArrayStorage;
    sub_1001F5CEC(&qword_1015D4E30, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_1000FF33C((uint64_t *)&unk_1015D8120);
    sub_1001010F8(&qword_1015D4E38, (uint64_t *)&unk_1015D8120);
    uint64_t v73 = v106;
    uint64_t v74 = v108;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  v115 = (void *)v113;
  unint64_t v116 = &type metadata for RefinementButtonStyle;
  unint64_t v117 = v70;
  unint64_t v118 = v71;
  swift_getOpaqueTypeConformance2();
  uint64_t v75 = (uint64_t)v103;
  uint64_t v76 = v100;
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v73, v74);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v72, v76);
  uint64_t v77 = enum case for ContentSizeCategory.accessibilityLarge(_:);
  uint64_t v78 = type metadata accessor for ContentSizeCategory();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = (uint64_t)v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v110, v77, v78);
  v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56);
  v81(v80, 0, 1, v78);
  uint64_t v82 = (uint64_t)v109;
  v81((uint64_t)v109, 1, 1, v78);
  uint64_t v83 = v111;
  sub_1000FF27C(v80, v111, &qword_1015CE6E8);
  uint64_t v84 = v101;
  sub_1000FF27C(v75, v101, &qword_1015D4E78);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v86 = v105;
  uint64_t v87 = (uint64_t)v104;
  *(void *)&v104[*(int *)(v105 + 40)] = KeyPath;
  sub_1000FF33C(&qword_1015CE6F0);
  swift_storeEnumTagMultiPayload();
  sub_100101750(v82, v87, &qword_1015CE6E8);
  sub_100101750(v83, v87 + *(int *)(v86 + 36), &qword_1015CE6E8);
  sub_100101750(v84, v87 + *(int *)(v86 + 44), &qword_1015D4E78);
  sub_1000FF2E0(v80, &qword_1015CE6E8);
  sub_1000FF2E0(v75, &qword_1015D4E78);
  sub_1001010F8(&qword_1015D4F10, &qword_1015D4E80);
  uint64_t v88 = (uint64_t)v102;
  View.accessibilityIdentifier(_:)();
  sub_1000FF2E0(v87, &qword_1015D4E80);
  return sub_100101750(v88, v112, &qword_1015D4E88);
}

uint64_t sub_1001F51E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RefinementMultiSelectButton(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v5 = v10[15];
  sub_1001F5F38(a1, (uint64_t)v4, type metadata accessor for RefinementMultiSelectButton);
  if (v5 == 1)
  {
    sub_1001F6748((uint64_t)v4, type metadata accessor for RefinementMultiSelectButton);
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t))(*((void *)v4 + 1)
                                           + OBJC_IVAR____TtC4Maps35RefinementsMultiSelectCellViewModel_allowsSelection);
    uint64_t v7 = swift_retain();
    LOBYTE(v6) = v6(v7);
    swift_release();
    uint64_t result = sub_1001F6748((uint64_t)v4, type metadata accessor for RefinementMultiSelectButton);
    if ((v6 & 1) == 0) {
      return result;
    }
  }
  uint64_t v9 = static Animation.easeInOut(duration:)();
  __chkstk_darwin(v9);
  *(void *)&v10[-16] = a1;
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t sub_1001F53BC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(BOOL))(*(void *)(a1 + 8)
                                   + OBJC_IVAR____TtC4Maps35RefinementsMultiSelectCellViewModel_tapHandler);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  v1((v3 & 1) == 0);
  return swift_release();
}

double sub_1001F5488@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static VerticalAlignment.center.getter();
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v29 = v4;
  *(void *)uint64_t v30 = *(void *)(v5 + 16);
  *(void *)&v30[8] = v6;
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Font.body.getter();
  uint64_t v12 = Text.font(_:)();
  uint64_t v28 = v13;
  LOBYTE(v6) = v14;
  uint64_t v16 = v15;
  swift_release();
  LOBYTE(v6) = v6 & 1;
  sub_10017F958(v7, v9, v11);
  swift_bridgeObjectRelease();
  double v17 = *(double *)(v5 + OBJC_IVAR____TtC4Maps35RefinementsMultiSelectCellViewModel_maxWidth) + -8.0;
  uint64_t v18 = static Alignment.center.getter();
  sub_1001F0EAC(0.0, 1, 0.0, 1, v17, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, 0.0, 1, v18, v19, v12, v28, v6, v16);
  sub_10017F958(v12, v28, v6);
  swift_bridgeObjectRelease();
  long long v38 = *(_OWORD *)&v30[96];
  long long v39 = *(_OWORD *)&v30[112];
  long long v40 = *(_OWORD *)&v30[128];
  long long v34 = *(_OWORD *)&v30[32];
  long long v35 = *(_OWORD *)&v30[48];
  long long v36 = *(_OWORD *)&v30[64];
  long long v37 = *(_OWORD *)&v30[80];
  long long v32 = *(_OWORD *)v30;
  long long v33 = *(_OWORD *)&v30[16];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v30[0] == 1) {
    uint64_t v20 = static Color.white.getter();
  }
  else {
    uint64_t v20 = static Color.primary.getter();
  }
  uint64_t v21 = v20;
  *(_OWORD *)&v30[87] = v37;
  *(_OWORD *)&v30[103] = v38;
  *(_OWORD *)&v30[119] = v39;
  *(_OWORD *)&v30[135] = v40;
  *(_OWORD *)&v30[23] = v33;
  *(_OWORD *)&v30[39] = v34;
  *(_OWORD *)&v30[55] = v35;
  *(_OWORD *)&v30[71] = v36;
  char v31 = 0;
  *(_OWORD *)&v30[7] = v32;
  uint64_t KeyPath = swift_getKeyPath();
  long long v23 = *(_OWORD *)&v30[112];
  *(_OWORD *)(a2 + 113) = *(_OWORD *)&v30[96];
  *(_OWORD *)(a2 + 129) = v23;
  *(_OWORD *)(a2 + 145) = *(_OWORD *)&v30[128];
  long long v24 = *(_OWORD *)&v30[48];
  *(_OWORD *)(a2 + 49) = *(_OWORD *)&v30[32];
  *(_OWORD *)(a2 + 65) = v24;
  long long v25 = *(_OWORD *)&v30[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v30[64];
  *(_OWORD *)(a2 + 97) = v25;
  double result = *(double *)v30;
  long long v27 = *(_OWORD *)&v30[16];
  *(_OWORD *)(a2 + 17) = *(_OWORD *)v30;
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = 0x4010000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 160) = *(void *)&v30[143];
  *(_OWORD *)(a2 + 33) = v27;
  *(_WORD *)(a2 + 168) = 1;
  *(void *)(a2 + 176) = KeyPath;
  *(void *)(a2 + 184) = v21;
  return result;
}

uint64_t sub_1001F573C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F5758()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F5774()
{
  return sub_1001F283C(*(void *)(v0 + 16));
}

uint64_t sub_1001F577C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F2DF4(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001F5784()
{
  unint64_t result = qword_1015D4D58;
  if (!qword_1015D4D58)
  {
    sub_10010118C(&qword_1015D4D60);
    sub_1001010F8(&qword_1015D4D68, &qword_1015D4D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4D58);
  }
  return result;
}

unint64_t sub_1001F5824()
{
  unint64_t result = qword_1015D4D78;
  if (!qword_1015D4D78)
  {
    sub_10010118C(&qword_1015D4D48);
    sub_1001F5CEC(&qword_1015D4D80, (void (*)(uint64_t))type metadata accessor for SubmenuButton);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4D78);
  }
  return result;
}

uint64_t type metadata accessor for SubmenuButton(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D4F80);
}

unint64_t sub_1001F58E8()
{
  unint64_t result = qword_1015D4D90;
  if (!qword_1015D4D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4D90);
  }
  return result;
}

uint64_t sub_1001F593C(uint64_t result, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return sub_1001F5954(result, a2, a3, a4, a5 & 1);
  }
  return result;
}

uint64_t sub_1001F5954(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  else
  {
    sub_10017FDF0(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1001F59E0(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1001F5A30(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001F5A7C(uint64_t result, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return sub_1001F5A94(result, a2, a3, a4, a5 & 1);
  }
  return result;
}

uint64_t sub_1001F5A94(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_10017F958(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001F5B18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001F5B44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001F5B70()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1001F5B9C()
{
  return EnvironmentValues.font.setter();
}

unint64_t sub_1001F5BC8()
{
  unint64_t result = qword_1015D0918;
  if (!qword_1015D0918)
  {
    sub_10010118C(&qword_1015D0920);
    sub_1001010F8((unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0918);
  }
  return result;
}

uint64_t sub_1001F5C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for RefinementMenu(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1001F2A68(a1, v6, a2);
}

uint64_t sub_1001F5CEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001F5D38()
{
  uint64_t v1 = *(void *)(type metadata accessor for RefinementMenu(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1001F5E58(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RefinementMenu(0);
  uint64_t v4 = *(void *)(v3 - 8);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v1
                                                              + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                                                              + *(int *)(v3 + 40)))(v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), a1);
}

uint64_t sub_1001F5ED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001F5F38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001F5FA0()
{
  uint64_t v1 = *(void *)(type metadata accessor for RefinementBarButton(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1001F60B4()
{
  return sub_1001F65F8(type metadata accessor for RefinementBarButton, (uint64_t (*)(uint64_t))sub_1001F22F0);
}

uint64_t sub_1001F60E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F2368(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001F60E8()
{
  unint64_t result = qword_1015D4DF0;
  if (!qword_1015D4DF0)
  {
    sub_10010118C(&qword_1015D4DE8);
    sub_1001010F8(&qword_1015D4D68, &qword_1015D4D70);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4DF0);
  }
  return result;
}

unint64_t sub_1001F61AC()
{
  unint64_t result = qword_1015D4DF8;
  if (!qword_1015D4DF8)
  {
    sub_10010118C(&qword_1015D4DD0);
    sub_1001F624C();
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4DF8);
  }
  return result;
}

unint64_t sub_1001F624C()
{
  unint64_t result = qword_1015D4E00;
  if (!qword_1015D4E00)
  {
    sub_10010118C(&qword_1015D4DC8);
    sub_1001F62EC();
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4E00);
  }
  return result;
}

unint64_t sub_1001F62EC()
{
  unint64_t result = qword_1015D4E08;
  if (!qword_1015D4E08)
  {
    sub_10010118C(&qword_1015D4DC0);
    sub_1001F638C();
    sub_1001010F8(&qword_1015D4E20, &qword_1015D0A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4E08);
  }
  return result;
}

unint64_t sub_1001F638C()
{
  unint64_t result = qword_1015D4E10;
  if (!qword_1015D4E10)
  {
    sub_10010118C(&qword_1015D4DB8);
    sub_1001010F8(&qword_1015D4E18, &qword_1015D4DB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4E10);
  }
  return result;
}

unint64_t sub_1001F642C()
{
  unint64_t result = qword_1015D4E28;
  if (!qword_1015D4E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4E28);
  }
  return result;
}

uint64_t sub_1001F6488()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for RefinementBarButton(0);
  return (*(uint64_t (**)(uint64_t))(v1 + *(int *)(v2 + 36)))(v1);
}

uint64_t sub_1001F64D8()
{
  uint64_t v1 = (int *)(type metadata accessor for RefinementMultiSelectButton(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1001F65CC()
{
  return sub_1001F65F8(type metadata accessor for RefinementMultiSelectButton, sub_1001F51E0);
}

uint64_t sub_1001F65F8(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

double sub_1001F6674@<D0>(uint64_t a1@<X8>)
{
  return sub_1001F5488(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001F667C()
{
  unint64_t result = qword_1015D4E98;
  if (!qword_1015D4E98)
  {
    sub_10010118C(&qword_1015D4E90);
    sub_1001010F8(&qword_1015D4EA0, &qword_1015D4EA8);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4E98);
  }
  return result;
}

uint64_t sub_1001F6748(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001F67A8()
{
  unint64_t result = qword_1015D4ED8;
  if (!qword_1015D4ED8)
  {
    sub_10010118C(&qword_1015D4E68);
    sub_1001F6848();
    sub_1001010F8(&qword_1015D4F08, &qword_1015D4ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4ED8);
  }
  return result;
}

unint64_t sub_1001F6848()
{
  unint64_t result = qword_1015D4EE0;
  if (!qword_1015D4EE0)
  {
    sub_10010118C(&qword_1015D4E60);
    sub_1001F68E8();
    sub_1001010F8(&qword_1015D4F00, &qword_1015D4EB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4EE0);
  }
  return result;
}

unint64_t sub_1001F68E8()
{
  unint64_t result = qword_1015D4EE8;
  if (!qword_1015D4EE8)
  {
    sub_10010118C(&qword_1015D4E58);
    sub_1001F6988();
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4EE8);
  }
  return result;
}

unint64_t sub_1001F6988()
{
  unint64_t result = qword_1015D4EF0;
  if (!qword_1015D4EF0)
  {
    sub_10010118C(&qword_1015D4E50);
    sub_1001010F8(&qword_1015D4EF8, &qword_1015D4E48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4EF0);
  }
  return result;
}

uint64_t sub_1001F6A30()
{
  return sub_1001F53BC(*(void *)(v0 + 16));
}

uint64_t getEnumTagSinglePayload for PlaceSummaryUnitRatings(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RefinementMenuStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001F6BB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RefinementMenuStyle()
{
  return &type metadata for RefinementMenuStyle;
}

void *sub_1001F6BF0(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (void *)((char *)v4 + v8);
    char v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    *((unsigned char *)v4 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v13 = a3[7];
    char v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *char v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001F6CE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1001F6D70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1001F6E1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001F6EE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001F6F78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  swift_release();
  return a1;
}

uint64_t sub_1001F7024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F7038);
}

uint64_t sub_1001F7038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001F70FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F7110);
}

uint64_t sub_1001F7110(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1001F71D0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RefinementButtonStyle()
{
  return &type metadata for RefinementButtonStyle;
}

unint64_t sub_1001F7290()
{
  unint64_t result = qword_1015D4FC0;
  if (!qword_1015D4FC0)
  {
    sub_10010118C(&qword_1015D4D38);
    sub_10010118C(&qword_1015D4D28);
    sub_1001010F8(&qword_1015D4D88, &qword_1015D4D28);
    sub_1001F58E8();
    swift_getOpaqueTypeConformance2();
    sub_1001F5CEC((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4FC0);
  }
  return result;
}

unint64_t sub_1001F73B4()
{
  unint64_t result = qword_1015D4FC8;
  if (!qword_1015D4FC8)
  {
    sub_10010118C(&qword_1015D4DE0);
    sub_10010118C(&qword_1015D4DD0);
    sub_1001F61AC();
    sub_1001F642C();
    swift_getOpaqueTypeConformance2();
    sub_1001F5CEC((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4FC8);
  }
  return result;
}

unint64_t sub_1001F74B4()
{
  unint64_t result = qword_1015D4FD0;
  if (!qword_1015D4FD0)
  {
    sub_10010118C(&qword_1015D4E88);
    sub_1001010F8(&qword_1015D4F10, &qword_1015D4E80);
    sub_1001F5CEC((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4FD0);
  }
  return result;
}

uint64_t sub_1001F7584()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F75A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F75BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F75D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SubmenuButton(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1001F76DC()
{
  uint64_t v1 = type metadata accessor for SubmenuButton(0);
  uint64_t v2 = *(void *)(v1 - 8);
  return (*(uint64_t (**)(unint64_t))(v0
                                                     + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                                                     + *(int *)(v1 + 28)))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t sub_1001F774C()
{
  return sub_1001F3FD0(*(void *)(v0 + 16));
}

unint64_t sub_1001F7754()
{
  unint64_t result = qword_1015D4FF0;
  if (!qword_1015D4FF0)
  {
    sub_10010118C(&qword_1015D4FE8);
    sub_1001010F8(&qword_1015D8520, (uint64_t *)&unk_1015D8500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4FF0);
  }
  return result;
}

uint64_t sub_1001F77F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F42B8(a1);
}

unint64_t sub_1001F77FC()
{
  unint64_t result = qword_1015D5040;
  if (!qword_1015D5040)
  {
    sub_10010118C(&qword_1015D5030);
    sub_1001F789C();
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5040);
  }
  return result;
}

unint64_t sub_1001F789C()
{
  unint64_t result = qword_1015D5048;
  if (!qword_1015D5048)
  {
    sub_10010118C(&qword_1015D5028);
    sub_1001F793C();
    sub_1001010F8(&qword_1015D4E20, &qword_1015D0A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5048);
  }
  return result;
}

unint64_t sub_1001F793C()
{
  unint64_t result = qword_1015D5050;
  if (!qword_1015D5050)
  {
    sub_10010118C(&qword_1015D5020);
    sub_1001F79DC();
    sub_1001010F8((unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5050);
  }
  return result;
}

unint64_t sub_1001F79DC()
{
  unint64_t result = qword_1015D5058;
  if (!qword_1015D5058)
  {
    sub_10010118C(&qword_1015D5018);
    sub_1001F7A7C();
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5058);
  }
  return result;
}

unint64_t sub_1001F7A7C()
{
  unint64_t result = qword_1015D5060;
  if (!qword_1015D5060)
  {
    sub_10010118C(&qword_1015D5010);
    sub_1001010F8(&qword_1015D5068, &qword_1015D5008);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5060);
  }
  return result;
}

unint64_t sub_1001F7B44()
{
  unint64_t result = qword_1015D5090;
  if (!qword_1015D5090)
  {
    sub_10010118C(&qword_1015D4FE0);
    sub_1001010F8(&qword_1015D4FF8, &qword_1015D4FD8);
    sub_1001F5CEC((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5090);
  }
  return result;
}

unint64_t sub_1001F7C18()
{
  unint64_t result = qword_1015D5098;
  if (!qword_1015D5098)
  {
    sub_10010118C(&qword_1015D5038);
    sub_1001F77FC();
    sub_1001F5CEC((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5098);
  }
  return result;
}

unint64_t sub_1001F7CC8()
{
  unint64_t result = qword_1015D50A0;
  if (!qword_1015D50A0)
  {
    sub_10010118C(&qword_1015D5080);
    sub_1001F7D8C(&qword_1015D50A8, &qword_1015D5078, (void (*)(void))sub_1001F7E0C);
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D50A0);
  }
  return result;
}

uint64_t sub_1001F7D8C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001F7E0C()
{
  unint64_t result = qword_1015D50B0;
  if (!qword_1015D50B0)
  {
    sub_10010118C(&qword_1015D5070);
    sub_1001F5CEC(&qword_1015D13B0, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D50B0);
  }
  return result;
}

uint64_t sub_1001F7EB8(uint64_t a1)
{
  return a1;
}

id sub_1001F7FEC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AutocompleteQueryToken();
  return [super dealloc];
}

uint64_t type metadata accessor for AutocompleteQueryToken()
{
  return self;
}

void sub_1001F83E0(uint64_t a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (v2)
  {
    if (a1)
    {
      id v4 = objc_allocWithZone((Class)PlaceCardItem);
      id v5 = v2;
      id v6 = [v4 initWithMapItem:a1];
      uint64_t v7 = (objc_class *)type metadata accessor for PlaceCardContextConfiguration();
      uint64_t v8 = objc_allocWithZone(v7);
      *(void *)&v8[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem] = v6;
      v8[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory] = 0;
      *(void *)&v8[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent] = 0;
      v13.receiver = v8;
      v13.super_class = v7;
      id v9 = v6;
      id v10 = [super init];
      id v11 = objc_allocWithZone((Class)type metadata accessor for PlaceCardContext());
      id v12 = sub_100322024(v10);
      [v5 pushContext:v12 animated:1 completion:v13.receiver, v13.super_class];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001F8508(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  *(void *)&double v5 = __chkstk_darwin(v4 - 8).n128_u64[0];
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v2 iosBasedChromeViewController:v5];
  if (v8)
  {
    id v9 = v8;
    id v10 = [v8 _currentContainerViewController];

    if (v10)
    {
      id v11 = [objc_allocWithZone((Class)MapsWebLinkPresenter) initWithPresentingViewController:v10];
      sub_1001F86F8(a1, (uint64_t)v7);
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
      {
        __break(1u);
      }
      else
      {
        URL._bridgeToObjectiveC()(v14);
        uint64_t v16 = v15;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
        [v11 presentWebURL:v16];
      }
    }
  }
}

uint64_t sub_1001F8698(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F86F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F8BF4()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem____lazy_storage___autocompletionStrings;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem____lazy_storage___autocompletionStrings);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    uint64_t v3 = sub_1001F8CD0();
    uint64_t v4 = *(void *)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    swift_bridgeObjectRetain();
    sub_1001F94BC(v4);
  }
  sub_1001F94CC(v2);
  return v3;
}

uint64_t sub_1001F8CD0()
{
  id v0 = [objc_allocWithZone((Class)AutocompleteMatchInfo) initWithType:1];
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
  id v3 = objc_allocWithZone((Class)AutocompleteStringMatcher);
  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithString:v4 requiredMatchLength:1 matchInfo:v1];

  *(void *)(v2 + 32) = v5;
  specialized Array._endMutation()();
  uint64_t v6 = v2;

  return v6;
}

uint64_t sub_1001F8F00()
{
  uint64_t v1 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(45);
  v2._object = (void *)0x8000000100F7CEC0;
  v2._id countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v2);
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem__mapItem), "name"));
  if (v3)
  {
    NSString v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v1 = v6;
  }
  else
  {
    uint64_t v5 = 0;
  }
  v7._id countAndFlagsBits = v5;
  v7._object = v1;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._id countAndFlagsBits = 0x756374726F687320;
  v8._object = (void *)0xEF203A6570795474;
  String.append(_:)(v8);
  type metadata accessor for MapsSuggestionsShortcutType(0);
  _print_unlocked<A, B>(_:_:)();
  return 0;
}

id sub_1001F9220()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for MapsSyncStore();
  id v3 = (void *)static MapsSyncStore.sharedStore.getter();
  id v4 = v1;
  dispatch thunk of MapsSyncStore.unsubscribe(_:)();

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return [super dealloc];
}

uint64_t type metadata accessor for PersonalizedFavoriteItemSource()
{
  return self;
}

uint64_t sub_1001F943C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F9474()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F94AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F94BC(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001F94CC(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1001F94E4()
{
  unint64_t result = qword_1015D5320;
  if (!qword_1015D5320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5320);
  }
  return result;
}

uint64_t sub_1001F9538()
{
  return sub_1001010F8(&qword_1015D5328, &qword_1015D5330);
}

uint64_t sub_1001F9574()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  Swift::String v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611588);
  sub_1000F2248(v10, (uint64_t)qword_101611588);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1001F984C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_1016115A0);
  sub_1000F2248(v0, (uint64_t)qword_1016115A0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001F98B0()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_1016115B8);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_1016115B8);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1001F9968()
{
  uint64_t result = swift_getKeyPath();
  qword_1016115D0 = result;
  return result;
}

uint64_t sub_1001F9990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_1001F99B4, 0, 0);
}

uint64_t sub_1001F99B4()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBC68 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1016115D0;
  *(void *)(v0 + 80) = qword_1016115D0;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D5430, &qword_1015D5438);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_1001F9B10;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_1001F9B10()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_1001F9C64;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001F9C64()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_1016115D0;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_1001F9D40()
{
  if (qword_1015CBC68 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1001F9DA0()
{
  unint64_t result = qword_1015D5338;
  if (!qword_1015D5338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5338);
  }
  return result;
}

unint64_t sub_1001F9DF8()
{
  unint64_t result = qword_1015D5340;
  if (!qword_1015D5340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5340);
  }
  return result;
}

uint64_t sub_1001F9E4C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1001F9E80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F9ED0@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBC58, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1016115A0, a1);
}

uint64_t sub_1001F9F08@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBC60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_1016115B8);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_1001F9F84(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_1001F99B4, 0, 0);
}

uint64_t sub_1001FA038@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001FAEC4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001FA060()
{
  return 0xD000000000000027;
}

unint64_t sub_1001FA080()
{
  unint64_t result = qword_1015D5350;
  if (!qword_1015D5350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5350);
  }
  return result;
}

unint64_t sub_1001FA0D8()
{
  unint64_t result = qword_1015D5358;
  if (!qword_1015D5358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5358);
  }
  return result;
}

unint64_t sub_1001FA130()
{
  unint64_t result = qword_1015D5360;
  if (!qword_1015D5360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5360);
  }
  return result;
}

unint64_t sub_1001FA188()
{
  unint64_t result = qword_1015D5368;
  if (!qword_1015D5368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5368);
  }
  return result;
}

unint64_t sub_1001FA1E0()
{
  unint64_t result = qword_1015D5370;
  if (!qword_1015D5370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5370);
  }
  return result;
}

unint64_t sub_1001FA238()
{
  unint64_t result = qword_1015D5378;
  if (!qword_1015D5378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5378);
  }
  return result;
}

uint64_t sub_1001FA28C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1001FA2AC, 0, 0);
}

uint64_t sub_1001FA2AC()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)TransitMutablePreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 isModeDisabled:1];
  unsigned char *v1 = v2 ^ 1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001FA380(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1001FA3A4, 0, 0);
}

uint64_t sub_1001FA3A4()
{
  char v1 = *(unsigned char *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)TransitMutablePreferences) initWithDefaults:v2];

  [v3 setMode:1 disabled:(v1 & 1) == 0];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_1001FA4B0()
{
  unint64_t result = qword_1015D5380;
  if (!qword_1015D5380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5380);
  }
  return result;
}

unint64_t sub_1001FA508()
{
  unint64_t result = qword_1015D5388;
  if (!qword_1015D5388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5388);
  }
  return result;
}

unint64_t sub_1001FA560()
{
  unint64_t result = qword_1015D5390;
  if (!qword_1015D5390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5390);
  }
  return result;
}

unint64_t sub_1001FA5B8()
{
  unint64_t result = qword_1015D5398;
  if (!qword_1015D5398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5398);
  }
  return result;
}

uint64_t sub_1001FA60C@<X0>(uint64_t *a1@<X8>)
{
  sub_1001FA858();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001FA64C@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBC50, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611588, a1);
}

uint64_t sub_1001FA684()
{
  return sub_1001010F8(&qword_1015D53A0, &qword_1015D53A8);
}

uint64_t sub_1001FA6C0(uint64_t a1)
{
  unint64_t v2 = sub_1001FA080();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001FA710()
{
  unint64_t result = qword_1015D53B0;
  if (!qword_1015D53B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D53B0);
  }
  return result;
}

uint64_t sub_1001FA764(uint64_t a1)
{
  unint64_t v2 = sub_1001FA858();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1001FA7B0(uint64_t a1)
{
  unint64_t v2 = sub_1001FA5B8();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001FA800()
{
  unint64_t result = qword_1015D53B8;
  if (!qword_1015D53B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D53B8);
  }
  return result;
}

unint64_t sub_1001FA858()
{
  unint64_t result = qword_1015D53C0[0];
  if (!qword_1015D53C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D53C0);
  }
  return result;
}

uint64_t sub_1001FA8AC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1001FA93C, 0, 0);
}

uint64_t sub_1001FA93C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D5330);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D5430, &qword_1015D5438);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001FAA4C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1001FA0D8();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1001FAB00()
{
  unint64_t result = qword_1015D53D8;
  if (!qword_1015D53D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D53D8);
  }
  return result;
}

unint64_t sub_1001FAB58()
{
  unint64_t result = qword_1015D53E0[0];
  if (!qword_1015D53E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D53E0);
  }
  return result;
}

uint64_t sub_1001FABAC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001FA0D8();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1001FAC60(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1001FA0D8();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1001FAD14()
{
  unint64_t result = qword_1015D53F8;
  if (!qword_1015D53F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D53F8);
  }
  return result;
}

unint64_t sub_1001FAD6C()
{
  unint64_t result = qword_1015D5400;
  if (!qword_1015D5400)
  {
    sub_10010118C(qword_1015D5408);
    sub_1001FA560();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5400);
  }
  return result;
}

uint64_t sub_1001FADE0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001FA238();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TransitPreferBusQuery()
{
  return &type metadata for TransitPreferBusQuery;
}

ValueMetadata *type metadata accessor for TransitPreferBusEntity.UpdateIntent_value()
{
  return &type metadata for TransitPreferBusEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for TransitPreferBusEntity()
{
  return &type metadata for TransitPreferBusEntity;
}

uint64_t sub_1001FAEC4()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D5440);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001FA080();
  uint64_t v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_1001FB304@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

unint64_t sub_1001FB310(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 1u);
      unint64_t v4 = 1819043139;
      goto LABEL_20;
    case 2:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 2u);
      unint64_t v4 = 0x7472616843;
      unint64_t v6 = 0xE500000000000000;
      goto LABEL_21;
    case 3:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 3u);
      uint64_t v7 = 1734438217;
      goto LABEL_16;
    case 4:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 4u);
      unint64_t v4 = 0x6C6562614CLL;
      unint64_t v6 = 0xE500000000000000;
      goto LABEL_21;
    case 5:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 5u);
      unint64_t v4 = 1802398028;
      goto LABEL_20;
    case 6:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 6u);
      unint64_t v4 = 1953720652;
      goto LABEL_20;
    case 7:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 7u);
      unint64_t v4 = 0x6E6F6974636553;
      unint64_t v6 = 0xE700000000000000;
      goto LABEL_21;
    case 8:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 8u);
      unint64_t v4 = 0x546E6F6974636553;
      unint64_t v6 = 0xEC000000656C7469;
      goto LABEL_21;
    case 9:
      swift_bridgeObjectRetain();
      return a1;
    case 10:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 0xAu);
      unint64_t v4 = 7366996;
      unint64_t v6 = 0xE300000000000000;
      goto LABEL_21;
    case 11:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 0xBu);
      uint64_t v7 = 1819568468;
LABEL_16:
      unint64_t v4 = v7 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      unint64_t v6 = 0xE500000000000000;
      goto LABEL_21;
    case 12:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 0xCu);
      unint64_t v4 = 0x726564616548;
      goto LABEL_18;
    case 13:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 0xDu);
      unint64_t v4 = 2003134806;
LABEL_20:
      unint64_t v6 = 0xE400000000000000;
      goto LABEL_21;
    case 14:
      unint64_t result = 0x747475426B636142;
      switch(a1)
      {
        case 1:
          unint64_t result = 0x74754265736F6C43;
          break;
        case 2:
          unint64_t result = 0x614C7265746F6F46;
          break;
        case 3:
          unint64_t result = 0x67616D496E6F6349;
          break;
        case 4:
          unint64_t result = 0x747475426F666E49;
          break;
        case 5:
          unint64_t result = 0x64657463656C6553;
          break;
        case 6:
          unint64_t result = 0x6F74617261706553;
          break;
        case 7:
          unint64_t result = 0x656C746974627553;
          break;
        case 8:
          unint64_t result = 0x7972616974726554;
          break;
        case 9:
          unint64_t result = 0x62614C656C746954;
          break;
        case 10:
          unint64_t result = 0x656C67676F54;
          break;
        case 11:
          unint64_t result = 0xD000000000000012;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v8 = a1;
      sub_10019A644(a1, a2, 0);
      unint64_t v4 = 0x6E6F74747542;
LABEL_18:
      unint64_t v6 = 0xE600000000000000;
LABEL_21:
      String.append(_:)(*(Swift::String *)&v4);
      return v8;
  }
}

uint64_t sub_1001FB768(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 0xDu) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 14);
  }
}

uint64_t sub_1001FB780(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xE)
  {
    *(void *)unint64_t result = a2 - 14;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 14;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MapsAccessibilityString()
{
  return &type metadata for MapsAccessibilityString;
}

uint64_t sub_1001FB7A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(id, char *, void *))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  v14[3] = swift_getObjectType();
  v14[0] = a4;
  swift_retain();
  id v12 = a2;
  swift_unknownObjectRetain();
  v11(v12, v10, v14);

  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1000FF22C((uint64_t)v14);
}

uint64_t sub_1001FBA88(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, void *a7, uint64_t (*a8)(id, id, uint64_t, id, id))
{
  id v13 = a3;
  id v14 = a4;
  swift_unknownObjectRetain();
  id v15 = a6;
  id v16 = a7;
  uint64_t v17 = a8(v13, v14, a5, v15, v16);

  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_1001FBBCC(uint64_t a1)
{
  sub_10011D518(a1, (uint64_t)v13);
  if (!v14)
  {
    sub_1001189D4((uint64_t)v13);
    return 0;
  }
  type metadata accessor for PlaceSummaryOutlineCellModel();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  unint64_t v4 = v3 == 0;
  if (!Strong)
  {
LABEL_10:
    unint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult);
    uint64_t v7 = *(void *)&v12[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult];
    if (v6)
    {
      if (v7 && objc_msgSend(v6, "isEqual:"))
      {
LABEL_13:
        uint64_t v8 = *(void **)&v12[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_placeSummaryViewModelTemplate];
        id v9 = *(id *)(v1 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_placeSummaryViewModelTemplate);
        id v10 = v8;
        unsigned __int8 v11 = [v9 isEqual:v10];

        if (v11) {
          return v4;
        }
        return 0;
      }
    }
    else if (!v7)
    {
      goto LABEL_13;
    }

    return 0;
  }
  if (!v3)
  {
    unint64_t v4 = 0;
    goto LABEL_9;
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v4 = (unint64_t)[Strong isEqual:result];
    swift_unknownObjectRelease();
LABEL_9:
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id sub_1001FBF20@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult))
  {
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult);
    uint64_t v9 = sub_100100830(0, &qword_1015CF700);
    *(void *)&long long v8 = v7;
    sub_1000EFD84(&v8, (_OWORD *)a1);
    uint64_t v3 = v7;
  }
  else
  {
    unint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_rapObject);
    if (v4)
    {
      *(void *)(a1 + 24) = sub_100100830(0, &qword_1015D5668);
      *(void *)a1 = v4;
    }
    else
    {
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    id v5 = v4;
    uint64_t v3 = 0;
  }

  return v3;
}

id sub_1001FC0A4()
{
  return sub_1001FD9E4(type metadata accessor for PlaceSummaryOutlineCellModel);
}

uint64_t type metadata accessor for PlaceSummaryOutlineCellModel()
{
  return self;
}

uint64_t sub_1001FC16C()
{
  type metadata accessor for PlaceSummaryOutlineCellRegistration();
  type metadata accessor for PlaceSummaryOutlineCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4[4] = sub_1001FC250;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1001FB7A8;
  v4[3] = &unk_1012DDFC0;
  uint64_t v1 = _Block_copy(v4);
  id v2 = [(id)swift_getObjCClassFromMetadata() registrationWithCellClass:ObjCClassFromMetadata configurationHandler:v1];
  _Block_release(v1);
  uint64_t result = swift_release();
  qword_1016115D8 = (uint64_t)v2;
  return result;
}

uint64_t sub_1001FC250(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000F2354(a3, (uint64_t)v12);
  sub_100100830(0, (unint64_t *)&qword_1015CE3D0);
  if (swift_dynamicCast())
  {
    type metadata accessor for PlaceSummaryOutlineCell();
    uint64_t v4 = swift_dynamicCastClass();
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = a1;
      id v7 = [v11 viewModel];
      type metadata accessor for PlaceSummaryOutlineCellModel();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8)
      {
        uint64_t v9 = *(void **)(v5 + OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_viewModel);
        *(void *)(v5 + OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_viewModel) = v8;
        swift_unknownObjectRetain_n();

        sub_1001FC4B4();
        return swift_unknownObjectRelease_n();
      }

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1001FC3F0()
{
  return sub_1001FD9E4(type metadata accessor for PlaceSummaryOutlineCellRegistration);
}

uint64_t type metadata accessor for PlaceSummaryOutlineCellRegistration()
{
  return self;
}

void sub_1001FC4B4()
{
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_viewModel];
  if (v1)
  {
    id v2 = v0;
    uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_asyncDataManager];
    uint64_t v4 = OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_placeSummaryViewModelTemplate;
    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_placeSummaryViewModelTemplate];
    swift_getKeyPath();
    swift_getKeyPath();
    id v6 = v5;
    id v7 = v3;
    uint64_t v8 = v1;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    id v9 = [self sharedInstance];
    if (v9)
    {
      id v10 = v9;
      [v9 screenScale];
      double v12 = v11;

      sub_10023C168(v26, v12);
      id v13 = *(void **)&v8[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult];
      if (v13)
      {
        id v14 = [v13 placeCollection];
        if (v14)
        {
          id v15 = v14;
          int v16 = *(unsigned __int8 *)(*(void *)&v1[v4]
                                   + OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_containsPhotoCarouselLine);
          id v17 = objc_allocWithZone((Class)type metadata accessor for CuratedGuideViewModel());
          id v18 = v15;
          id v19 = sub_1001FF84C(v18, v16);

          uint64_t v20 = *(void **)&v8[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_curatedCollectionImageDownloader];
          uint64_t v21 = (char *)v19;
          id v22 = v20;
          sub_1002D95D4(v21);

          id v23 = sub_1001FFAA8(1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
          uint64_t v24 = *(void **)&v21[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_metrics];
          *(void *)&v21[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_metrics] = v23;

          uint64_t v25 = *(void **)&v2[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_curatedGuideViewModel];
          *(void *)&v2[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_curatedGuideViewModel] = v21;
        }
      }
      [v2 setNeedsUpdateConfiguration];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001FC74C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015D5510);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  id v7 = (objc_class *)type metadata accessor for PlaceSummaryOutlineCell();
  v29.receiver = v1;
  v29.super_class = v7;
  [super _bridgedUpdateConfigurationUsingState:isa];

  uint64_t v8 = OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_viewModel;
  id v9 = *(void **)&v1[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_viewModel];
  if (v9)
  {
    uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_curatedGuideViewModel];
    v26[0] = swift_getObjectType();
    id v11 = v9;
    sub_1000FF33C(&qword_1015D5508);
    uint64_t v12 = String.init<A>(describing:)();
    if (v10)
    {
      uint64_t v14 = 0x646574617275432ELL;
      uint64_t v15 = 0xED00006564697547;
    }
    else
    {
      uint64_t v14 = 0x736563616C502ELL;
      uint64_t v15 = 0xE700000000000000;
    }
    v26[0] = v14;
    v26[1] = v15;
    uint64_t v27 = v12;
    uint64_t v28 = v13;
    swift_bridgeObjectRetain();
    uint64_t v27 = String.init<A>(_:)();
    uint64_t v28 = v16;
    String.append<A>(contentsOf:)();
    swift_bridgeObjectRelease();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setAccessibilityIdentifier:v17];

    __chkstk_darwin(v18);
    *(&v25 - 2) = (uint64_t)v1;
    *(&v25 - 1) = (uint64_t)v9;
    sub_1000FF33C(&qword_1015D5518);
    sub_1001FDAD0(&qword_1015D5520, &qword_1015D5518, (void (*)(void))sub_1001FDA94, (void (*)(void))sub_1001FDC98);
    UIHostingConfiguration<>.init(content:)();
    static Edge.Set.all.getter();
    v26[3] = v2;
    v26[4] = sub_1001010F8((unint64_t *)&unk_1015D5640, &qword_1015D5510);
    sub_100100B1C(v26);
    UIHostingConfiguration.margins(_:_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    UICollectionViewCell.contentConfiguration.setter();
    uint64_t v19 = *(void *)&v1[v8];
    if (v19)
    {
      uint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult);
      if (v20)
      {
        id v21 = [v20 mapItem];
        if (v21)
        {
          id v22 = v21;
          id v23 = [v21 _venueFeatureType];
          uint64_t v24 = &selRef__maps_addDisclosureIndicator;
          if (v23 != (id)1) {
            uint64_t v24 = &selRef__maps_removeDisclosureIndicator;
          }
          [v1 *v24];

          id v9 = v22;
        }
      }
    }
  }
}

double sub_1001FCAF8@<D0>(uint64_t a1@<X0>, char *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_curatedGuideViewModel);
  if (v4)
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_1001FE318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    id v5 = v4;
    EnvironmentObject.init()();
    static ObservableObject.environmentStore.getter();
    id v21 = v5;
    sub_1000FF33C((uint64_t *)&unk_1015D5540);
    sub_1000FF33C(&qword_1015D4470);
    sub_1001FDB58();
    sub_1001FDBF8();
    _ConditionalContent<>.init(storage:)();
    long long v22 = v63;
    long long v23 = v64;
    long long v42 = v63;
    long long v43 = v64;
    LOBYTE(v44) = v65;
    sub_1001FE360((uint64_t)&v42);
    sub_1001FE2B0((uint64_t)&v42, (uint64_t)&v63);
    sub_1001FE368((void *)v22, *((uint64_t *)&v22 + 1), v23, *((void **)&v23 + 1));
    sub_1000FF33C((uint64_t *)&unk_1015D5530);
    sub_1000FF33C(&qword_1015D5580);
    sub_1001FDA94();
    sub_1001FDC98();
    _ConditionalContent<>.init(storage:)();

    sub_1001FE3A8((void *)v22, *((uint64_t *)&v22 + 1), v23, *((void **)&v23 + 1));
    long long v71 = v40[8];
    long long v72 = v40[9];
    v73[0] = v41[0];
    *(_OWORD *)((char *)v73 + 9) = *(_OWORD *)((char *)v41 + 9);
    long long v67 = v40[4];
    long long v68 = v40[5];
    long long v69 = v40[6];
    long long v70 = v40[7];
    long long v63 = v40[0];
    long long v64 = v40[1];
    long long v65 = v40[2];
    long long v66 = v40[3];
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001FE318((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t v7 = EnvironmentObject.init()();
    uint64_t v38 = v8;
    uint64_t v39 = v7;
    char IsEnabled_SearchAndDiscovery = MapsFeature_IsEnabled_SearchAndDiscovery();
    id v36 = *(id *)&a2[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_placeSummaryViewModelTemplate];
    uint64_t v35 = static ObservableObject.environmentStore.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a2;
    uint64_t v32 = swift_getKeyPath();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    uint64_t v31 = swift_getKeyPath();
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = a2;
    uint64_t v30 = swift_getKeyPath();
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = a2;
    uint64_t v14 = swift_getKeyPath();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = a2;
    uint64_t v17 = swift_getKeyPath();
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = a2;
    *(void *)&long long v42 = v39;
    *((void *)&v42 + 1) = v38;
    LOBYTE(v43) = IsEnabled_SearchAndDiscovery;
    *((void *)&v43 + 1) = v35;
    id v44 = v36;
    uint64_t v45 = KeyPath;
    uint64_t v46 = sub_1001FE18C;
    uint64_t v47 = v33;
    uint64_t v48 = v32;
    char v49 = sub_1001FE19C;
    uint64_t v50 = v9;
    uint64_t v51 = v31;
    uint64_t v52 = sub_1001FE1E8;
    uint64_t v53 = v11;
    uint64_t v54 = v30;
    uint64_t v55 = sub_1001FE218;
    uint64_t v56 = v13;
    uint64_t v57 = v14;
    long long v58 = sub_1001FE248;
    uint64_t v59 = v16;
    uint64_t v60 = v17;
    uint64_t v61 = sub_1001FE29C;
    uint64_t v62 = v19;
    sub_1001FE2A4((uint64_t)&v42);
    sub_1001FE2B0((uint64_t)&v42, (uint64_t)v40);
    uint64_t v20 = a2;
    sub_1000FF33C((uint64_t *)&unk_1015D5530);
    sub_1000FF33C(&qword_1015D5580);
    sub_1001FDA94();
    sub_1001FDC98();
    _ConditionalContent<>.init(storage:)();
  }
  long long v24 = v72;
  a3[8] = v71;
  a3[9] = v24;
  a3[10] = v73[0];
  *(_OWORD *)((char *)a3 + 169) = *(_OWORD *)((char *)v73 + 9);
  long long v25 = v68;
  a3[4] = v67;
  a3[5] = v25;
  long long v26 = v70;
  a3[6] = v69;
  a3[7] = v26;
  long long v27 = v64;
  *a3 = v63;
  a3[1] = v27;
  double result = *(double *)&v65;
  long long v29 = v66;
  a3[2] = v65;
  a3[3] = v29;
  return result;
}

void *sub_1001FD0A0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  double result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result didTapOnUserGeneratedGuide:v1];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001FD108(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (unint64_t)*a1 >> 62;
  if (!v2)
  {
    uint64_t v3 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_16;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v4 = *(id *)(v1 + 32);
  }
  id v10 = v4;
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5 != 1) {
      goto LABEL_8;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_8:

LABEL_17:
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    uint64_t v8 = (void *)Strong;
    sub_100100830(0, (unint64_t *)&qword_1015D5660);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v8 didTapOnCuratedGuides:isa];

    goto LABEL_19;
  }
  id v6 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    [v6 didTapOnCuratedGuide:v10];

LABEL_19:
    swift_unknownObjectRelease();
    return;
  }
}

void *sub_1001FD2E8(uint64_t *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5 = *a1;
  swift_beginAccess();
  double result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {

    double result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result *a4:v5];
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_1001FD374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    uint64_t v5 = *(void **)(a3 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult);
    if (v5)
    {
      uint64_t v6 = swift_unknownObjectWeakLoadStrong();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        id v8 = v5;
        [v7 didTapOnUserNote:v8];

        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_1001FD414(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    uint64_t v6 = *(void **)(a3 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult);
    if (v6)
    {
      uint64_t v7 = swift_unknownObjectWeakLoadStrong();
      if (v7)
      {
        id v8 = (void *)v7;
        id v9 = v6;
        [v8 didTapOnPhotoCarousel:v9 index:v4];

        swift_unknownObjectRelease();
      }
    }
  }
}

id sub_1001FD5AC(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_curatedGuideViewModel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_viewModel] = 0;
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for PlaceSummaryOutlineCell();
  [super initWithFrame:a1, a2, a3, a4];
  swift_getObjectType();
  id v10 = v9;
  sub_1000FF33C(&qword_1015D5508);
  String.init<A>(describing:)();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setAccessibilityIdentifier:v11];

  return v10;
}

void sub_1001FD80C(char a1)
{
  if ([v1 isHovering] != (a1 & 1))
  {
    uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_viewModel];
    if (v2)
    {
      uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult);
      if (v3)
      {
        id v4 = [v3 mapItem];
        if (v4)
        {
          id v7 = v4;
          id v5 = [v4 _venueFeatureType];
          uint64_t v6 = &selRef__maps_addDisclosureIndicator;
          if (v5 != (id)1) {
            uint64_t v6 = &selRef__maps_removeDisclosureIndicator;
          }
          [v1 *v6];
        }
      }
    }
  }
}

void sub_1001FD8DC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC4Maps23PlaceSummaryOutlineCell_viewModel];
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult);
    if (v2)
    {
      id v3 = [v2 mapItem];
      if (v3)
      {
        id v6 = v3;
        id v4 = [v3 _venueFeatureType];
        id v5 = &selRef__maps_addDisclosureIndicator;
        if (v4 != (id)1) {
          id v5 = &selRef__maps_removeDisclosureIndicator;
        }
        [v0 *v5];
      }
    }
  }
}

id sub_1001FD9CC()
{
  return sub_1001FD9E4(type metadata accessor for PlaceSummaryOutlineCell);
}

id sub_1001FD9E4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryOutlineCell()
{
  return self;
}

double sub_1001FDA8C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001FCAF8(*(void *)(v1 + 16), *(char **)(v1 + 24), a1);
}

uint64_t sub_1001FDA94()
{
  return sub_1001FDAD0(&qword_1015D5528, (uint64_t *)&unk_1015D5530, (void (*)(void))sub_1001FDB58, (void (*)(void))sub_1001FDBF8);
}

uint64_t sub_1001FDAD0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001FDB58()
{
  unint64_t result = qword_1015D4430;
  if (!qword_1015D4430)
  {
    sub_10010118C((uint64_t *)&unk_1015D5540);
    sub_1001D7408();
    sub_1001010F8((unint64_t *)&unk_1015D5550, &qword_1015D4440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4430);
  }
  return result;
}

unint64_t sub_1001FDBF8()
{
  unint64_t result = qword_1015D5560;
  if (!qword_1015D5560)
  {
    sub_10010118C(&qword_1015D4470);
    sub_1001D75C0();
    sub_1001010F8((unint64_t *)&unk_1015D5550, &qword_1015D4440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5560);
  }
  return result;
}

unint64_t sub_1001FDC98()
{
  unint64_t result = qword_1015D5578;
  if (!qword_1015D5578)
  {
    sub_10010118C(&qword_1015D5580);
    sub_1001FDD38();
    sub_1001010F8(&qword_1015D5630, &qword_1015D5638);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5578);
  }
  return result;
}

unint64_t sub_1001FDD38()
{
  unint64_t result = qword_1015D5588;
  if (!qword_1015D5588)
  {
    sub_10010118C(&qword_1015D5590);
    sub_1001FDDD8();
    sub_1001010F8(&qword_1015D5620, &qword_1015D5628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5588);
  }
  return result;
}

unint64_t sub_1001FDDD8()
{
  unint64_t result = qword_1015D5598;
  if (!qword_1015D5598)
  {
    sub_10010118C(&qword_1015D55A0);
    sub_1001FDE78();
    sub_1001010F8(&qword_1015D5620, &qword_1015D5628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5598);
  }
  return result;
}

unint64_t sub_1001FDE78()
{
  unint64_t result = qword_1015D55A8;
  if (!qword_1015D55A8)
  {
    sub_10010118C(&qword_1015D55B0);
    sub_1001FDF18();
    sub_1001010F8(&qword_1015D5620, &qword_1015D5628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D55A8);
  }
  return result;
}

unint64_t sub_1001FDF18()
{
  unint64_t result = qword_1015D55B8;
  if (!qword_1015D55B8)
  {
    sub_10010118C(&qword_1015D55C0);
    sub_1001FDFB8();
    sub_1001010F8((unint64_t *)&unk_1015D5610, &qword_1015D4448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D55B8);
  }
  return result;
}

unint64_t sub_1001FDFB8()
{
  unint64_t result = qword_1015D55C8;
  if (!qword_1015D55C8)
  {
    sub_10010118C(&qword_1015D55D0);
    sub_1001FE058();
    sub_1001010F8(&qword_1015D5600, &qword_1015D5608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D55C8);
  }
  return result;
}

unint64_t sub_1001FE058()
{
  unint64_t result = qword_1015D55D8;
  if (!qword_1015D55D8)
  {
    sub_10010118C(&qword_1015D55E0);
    sub_1001FE0F8();
    sub_1001010F8(&qword_1015D55F0, &qword_1015D55F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D55D8);
  }
  return result;
}

unint64_t sub_1001FE0F8()
{
  unint64_t result = qword_1015D55E8;
  if (!qword_1015D55E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D55E8);
  }
  return result;
}

uint64_t sub_1001FE154()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_1001FE18C(uint64_t *a1)
{
  return sub_1001FD0A0(a1);
}

void sub_1001FE19C(uint64_t *a1)
{
}

uint64_t sub_1001FE1AC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_1001FE1E8(uint64_t *a1)
{
  return sub_1001FD2E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (SEL *)&selRef_didTapOnContainment_);
}

void *sub_1001FE218(uint64_t *a1)
{
  return sub_1001FD2E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (SEL *)&selRef_didTapOnUserLibrary_);
}

void sub_1001FE248(uint64_t a1)
{
  sub_1001FD374(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001FE25C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001FE29C(uint64_t *a1)
{
  sub_1001FD414(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001FE2A4(uint64_t result)
{
  *(unsigned char *)(result + 184) = 1;
  return result;
}

uint64_t sub_1001FE2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FE318(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001FE360(uint64_t result)
{
  *(unsigned char *)(result + 184) = 0;
  return result;
}

uint64_t sub_1001FE368(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id v6 = a1;

  return swift_retain();
}

void sub_1001FE3A8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_release();
}

id sub_1001FE3FC(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  *(void *)&v5[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult] = 0;
  uint64_t v10 = OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_rapObject;
  *(void *)&v5[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_rapObject] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_placeSummaryViewModelTemplate] = a2;
  NSString v11 = *(void **)&v5[v10];
  *(void *)&v5[v10] = a1;
  uint64_t v12 = v5;
  id v13 = a2;
  id v14 = a1;

  swift_unknownObjectWeakAssign();
  *(void *)&v12[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_asyncDataManager] = a4;
  *(void *)&v12[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_curatedCollectionImageDownloader] = a5;
  id v15 = a4;
  id v16 = a5;

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for PlaceSummaryOutlineCellModel();
  return [super init];
}

id sub_1001FE4F4(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10 = OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult;
  *(void *)&v5[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_searchResult] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_rapObject] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_placeSummaryViewModelTemplate] = a2;
  NSString v11 = *(void **)&v5[v10];
  *(void *)&v5[v10] = a1;
  uint64_t v12 = v5;
  id v13 = a2;
  id v14 = a1;

  swift_unknownObjectWeakAssign();
  *(void *)&v12[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_asyncDataManager] = a4;
  *(void *)&v12[OBJC_IVAR____TtC4Maps28PlaceSummaryOutlineCellModel_curatedCollectionImageDownloader] = a5;
  id v15 = a4;
  id v16 = a5;

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for PlaceSummaryOutlineCellModel();
  return [super init];
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitContainment()
{
  return &type metadata for PlaceSummaryUnitContainment;
}

unsigned char *_s4Maps27PlaceSummaryUnitContainmentV31PlaceSummaryUnitContainmentTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001FE6D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitContainment.PlaceSummaryUnitContainmentType()
{
  return &type metadata for PlaceSummaryUnitContainment.PlaceSummaryUnitContainmentType;
}

unint64_t sub_1001FE710()
{
  unint64_t result = qword_1015D5670;
  if (!qword_1015D5670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5670);
  }
  return result;
}

double sub_1001FE85C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double sub_1001FE948@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001FE9C8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1001FEA40()
{
  return sub_1001A4384();
}

uint64_t sub_1001FEA54()
{
  return sub_1001A4384();
}

uint64_t sub_1001FEB18()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  double v1 = (void *)qword_101611820;
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F5CF70;
  id v6 = [*(id *)(v0 + OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection) numberOfItems];
  *(void *)(v5 + 56) = &type metadata for UInt;
  *(void *)(v5 + 64) = &protocol witness table for UInt;
  *(void *)(v5 + 32) = v6;
  uint64_t v7 = static String.localizedStringWithFormat(_:_:)();
  id v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0xD000000000000022;
  v21._uint64_t countAndFlagsBits = 0xD000000000000035;
  v21._object = (void *)0x8000000100F7D620;
  v10._object = (void *)0x8000000100F7D5F0;
  v11._uint64_t countAndFlagsBits = 0x4544495547;
  v11._object = (void *)0xE500000000000000;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)qword_101611820, v11, v21);
  id v13 = [self sharedApplication];
  id v14 = [v13 userInterfaceLayoutDirection];

  if (v14 == (id)1)
  {
    uint64_t v20 = v7;
    v15._uint64_t countAndFlagsBits = 548913696;
    v15._object = (void *)0xA400000000000000;
    String.append(_:)(v15);
    uint64_t countAndFlagsBits = v12._countAndFlagsBits;
    object = v12._object;
  }
  else
  {
    uint64_t v20 = v12._countAndFlagsBits;
    v18._uint64_t countAndFlagsBits = 548913696;
    v18._object = (void *)0xA400000000000000;
    String.append(_:)(v18);
    uint64_t countAndFlagsBits = v7;
    object = v9;
  }
  String.append(_:)(*(Swift::String *)&countAndFlagsBits);
  swift_bridgeObjectRelease();
  return v20;
}

double sub_1001FEF28()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_useRichLayout);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 == 1) {
    return v3 + -32.0 + -6.0;
  }
  else {
    return v3 * 0.203562341;
  }
}

double sub_1001FF02C()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_useRichLayout);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 == 1) {
    double v2 = 0.656509695;
  }
  else {
    double v2 = 0.203562341;
  }
  return v4 * v2;
}

uint64_t sub_1001FF0E8(uint64_t a1)
{
  sub_10011D518(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1001189D4((uint64_t)v5);
    goto LABEL_5;
  }
  type metadata accessor for CuratedGuideViewModel();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v2 = 0;
    return v2 & 1;
  }
  sub_1001FF80C();
  id v1 = *(id *)&v4[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
  char v2 = static NSObject.== infix(_:_:)();

  return v2 & 1;
}

id sub_1001FF28C()
{
  return sub_1001FF798(0, type metadata accessor for CuratedGuideViewModel);
}

uint64_t sub_1001FF3C0()
{
  return type metadata accessor for CuratedGuideViewModel();
}

uint64_t type metadata accessor for CuratedGuideViewModel()
{
  uint64_t result = qword_1015D56D0;
  if (!qword_1015D56D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001FF414()
{
  sub_1001FF504();
  if (v0 <= 0x3F)
  {
    sub_1001FF55C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1001FF504()
{
  if (!qword_1015D1D18)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015D1D18);
    }
  }
}

void sub_1001FF55C()
{
  if (!qword_1015D23C0)
  {
    sub_10010118C((uint64_t *)&unk_1015D23C8);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015D23C0);
    }
  }
}

uint64_t sub_1001FF5B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CuratedGuideViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id sub_1001FF688(char a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  *(double *)&v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_leadingMargin] = a2;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_trailingMargin] = a3;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_topMargin] = a4;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_bottomMargin] = a5;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_topLeadingCornerRadius] = a6;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_topTrailingCornerRadius] = a7;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_bottomLeadingCornerRadius] = a8;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_bottomTrailingCornerRadius] = a9;
  v9[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_showsDivider] = a1;
  v11.receiver = v9;
  v11.super_class = (Class)type metadata accessor for GuideSummaryMetrics();
  return [super init];
}

id sub_1001FF780(uint64_t a1)
{
  return sub_1001FF798(a1, type metadata accessor for GuideSummaryMetrics);
}

id sub_1001FF798(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for GuideSummaryMetrics()
{
  return self;
}

unint64_t sub_1001FF80C()
{
  unint64_t result = qword_1015CE490;
  if (!qword_1015CE490)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CE490);
  }
  return result;
}

id sub_1001FF84C(void *a1, int a2)
{
  int v21 = a2;
  uint64_t v4 = sub_1000FF33C(&qword_1015D2B18);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000FF33C(&qword_1015D2AE0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  objc_super v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&v2[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_metrics] = 0;
  Swift::String v12 = &v2[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel__width];
  uint64_t v23 = 0;
  id v13 = v2;
  Published.init(initialValue:)();
  (*(void (**)(char *, unsigned char *, uint64_t))(v9 + 32))(v12, v11, v8);
  id v14 = &v13[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel__publisherIcon];
  uint64_t v23 = 0;
  sub_1000FF33C((uint64_t *)&unk_1015D23C8);
  Published.init(initialValue:)();
  Swift::String v15 = *(void (**)(char *, unsigned char *, uint64_t))(v5 + 32);
  v15(v14, v7, v4);
  id v16 = &v13[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel__collectionImage];
  uint64_t v23 = 0;
  Published.init(initialValue:)();
  v15(v16, v7, v4);
  *(void *)&v13[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection] = a1;
  v13[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_useRichLayout] = v21;
  id v17 = a1;

  Swift::String v18 = (objc_class *)type metadata accessor for CuratedGuideViewModel();
  v22.receiver = v13;
  v22.super_class = v18;
  return [super init];
}

id sub_1001FFAA8(char a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  Swift::String v18 = (objc_class *)type metadata accessor for GuideSummaryMetrics();
  uint64_t v19 = objc_allocWithZone(v18);
  *(double *)&v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_leadingMargin] = a2;
  *(double *)&v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_trailingMargin] = a3;
  *(double *)&v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_topMargin] = a4;
  *(double *)&v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_bottomMargin] = a5;
  *(double *)&v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_topLeadingCornerRadius] = a6;
  *(double *)&v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_topTrailingCornerRadius] = a7;
  *(double *)&v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_bottomLeadingCornerRadius] = a8;
  *(double *)&v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_bottomTrailingCornerRadius] = a9;
  v19[OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_showsDivider] = a1;
  v21.receiver = v19;
  v21.super_class = v18;
  return [super init];
}

void sub_1001FFCCC(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v3 = Strong;
    id v4 = [Strong mapView];

    if (v4)
    {
      id v5 = [v4 preferredConfiguration];
      void aBlock[6] = &OBJC_PROTOCOL___MKMapConfigurationHiking;
      uint64_t v6 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v6)
      {
        uint64_t v7 = v6;
        if (a1)
        {
          id v5 = v5;
          id v8 = a1;
          id v9 = [v8 mapItem];
          if (v9)
          {
            uint64_t v10 = v9;
            id v11 = [v9 _geoMapItem];

            if (!v11)
            {
              __break(1u);
              return;
            }
            id v12 = [v11 _placeData];
            swift_unknownObjectRelease();
            if (v12)
            {
              if ([v12 hasMapDisplayType]) {
                objc_msgSend(v7, "setShowsTopographicFeatures:", objc_msgSend(v12, "mapDisplayType") == 1);
              }
            }
          }
          if ([v8 isDroppedPin]
            && (id v13 = [v8 mapItem]) != 0)
          {
            id v14 = v13;
            [v13 _coordinate];
            double v16 = v15;
            double v18 = v17;
            uint64_t v19 = swift_allocObject();
            *(void *)(v19 + 16) = v7;
            aBlock[4] = sub_100201228;
            aBlock[5] = v19;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1002007EC;
            aBlock[3] = &unk_1012DE1C0;
            uint64_t v20 = _Block_copy(aBlock);
            id v21 = v5;
            swift_release();
            [v4 checkIfCoordinate:v20 isInHikingContextualRegionWithCompletionHandler:v16, v18];

            _Block_release(v20);
            id v5 = v14;
          }
          else
          {
          }
          goto LABEL_17;
        }
        [v6 setShowsTopographicFeatures:0];
      }

LABEL_17:
    }
  }
}

void sub_1002003A0(uint64_t a1, NSString a2, uint64_t a3)
{
  if (a2) {
    a2 = String._bridgeToObjectiveC()();
  }
  id v4 = a2;
  (*(void (**)(uint64_t))(a3 + 16))(a3);
}

void sub_100200568(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  double v15 = (char *)Strong;
  if (a5)
  {
    if (a1)
    {
      swift_retain();
      a5(a2, a3);
      sub_10006C5D8((uint64_t)a5);
      double v16 = *(void **)&v15[OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController];
      *(void *)&v15[OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController] = 0;

LABEL_6:
      if (!a9)
      {
        __break(1u);
        return;
      }
      String._mapsui_nilIfEmpty.getter();
      uint64_t v19 = v18;
      if (v18) {
        swift_bridgeObjectRelease();
      }
      _s4Maps16LibraryAnalyticsC26captureAddOrEditNoteAction9placeMUID05isNewH0ys6UInt64V_SbtFZ_0(a7, v19 != 0);
      goto LABEL_11;
    }
    uint64_t v20 = *(void **)(Strong + OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController);
    *(void *)(Strong + OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController) = 0;
  }
  else
  {
    double v17 = *(void **)(Strong + OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController);
    *(void *)(Strong + OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController) = 0;

    if (a1) {
      goto LABEL_6;
    }
  }
LABEL_11:
  id v21 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v21)
  {
    objc_super v22 = v21;
    [v21 setNeedsUpdateComponent:@"cards" animated:1];
  }
}

uint64_t sub_1002007EC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7 = *(void (**)(uint64_t, double, double))(a1 + 32);
  swift_retain();
  v7(a2, a3, a4);

  return swift_release();
}

void sub_100200858(uint64_t a1)
{
  char v2 = v1;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  *(void *)&double v5 = __chkstk_darwin(v4 - 8).n128_u64[0];
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v2 iosBasedChromeViewController:v5];
  if (v8)
  {
    id v9 = v8;
    id v10 = [v8 _currentContainerViewController];

    if (v10)
    {
      id v11 = [objc_allocWithZone((Class)MapsWebLinkPresenter) initWithPresentingViewController:v10];
      sub_1000FF27C(a1, (uint64_t)v7, (uint64_t *)&unk_1015D5160);
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
      {
        __break(1u);
      }
      else
      {
        URL._bridgeToObjectiveC()(v14);
        double v16 = v15;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
        [v11 presentWebURL:v16];
      }
    }
  }
}

void sub_1002009F0(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1
    && (id v7 = objc_msgSend(a1, "mapItem", v4)) != 0
    && (id v8 = v7,
        id v9 = objc_msgSend(v7, "_mapsui_trailSelectionInfoForMap"),
        v8,
        v9))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
LABEL_9:

LABEL_13:
      sub_1001FFCCC(a1);
      return;
    }
    id v11 = Strong;
    id v12 = [Strong mapSelectionManager];

    if (v12)
    {
      id v20 = [v9 trailID];
      NSString v13 = [v9 trailName];
      if (!v13)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      id v14 = [self currentLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      Locale.identifier.getter();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v12 selectTrailWithId:v20 name:v13 locale:v15];

      goto LABEL_9;
    }
  }
  else
  {
    double v16 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v16) {
      goto LABEL_13;
    }
    uint64_t v17 = v16;
    id v18 = [v16 mapSelectionManager];

    if (v18)
    {
      [v18 deselectTrails];

      goto LABEL_13;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100200C80(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (a1)
    {
      uint64_t v3 = (void *)Strong;
      double v4 = (objc_class *)type metadata accessor for TransitLineContext();
      uint64_t v5 = (char *)objc_allocWithZone(v4);
      *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController] = 0;
      uint64_t v6 = OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem;
      *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem] = 0;
      *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker] = 0;
      *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController] = 0;
      *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController] = 0;
      *(void *)&v5[v6] = a1;
      swift_unknownObjectRetain_n();
      swift_unknownObjectRelease();
      v8.receiver = v5;
      v8.super_class = v4;
      [super init];
      swift_unknownObjectRelease();
      [v3 pushContext:v7 animated:1 completion:0];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100200DA0(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [v2 iosChromeViewController];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 _currentContainerViewController];

    if (v6)
    {
      sub_1000FF27C(a1, (uint64_t)v14, (uint64_t *)&unk_1015CD260);
      uint64_t v7 = v15;
      if (v15)
      {
        objc_super v8 = sub_1000FF380(v14, v15);
        uint64_t v9 = *(void *)(v7 - 8);
        __n128 v10 = __chkstk_darwin(v8);
        id v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
        uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
        sub_1000FF22C((uint64_t)v14);
      }
      else
      {
        uint64_t v13 = 0;
      }
      [v6 copy:v13];

      swift_unknownObjectRelease();
    }
  }
}

void sub_100200F30(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController;
  if (!*(void *)(v5 + OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController))
  {
    id v12 = objc_allocWithZone((Class)type metadata accessor for PlaceNoteEditViewController());
    swift_bridgeObjectRetain();
    id v13 = PlaceNoteEditViewController.init(note:)(a1, a2);
    id v14 = *(void **)(v5 + v6);
    *(void *)(v5 + v6) = v13;

    uint64_t v15 = *(void *)(v5 + v6);
    if (v15)
    {
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v16;
      v17[3] = a4;
      v17[4] = a5;
      v17[5] = a3;
      v17[6] = a1;
      v17[7] = a2;
      id v18 = (uint64_t *)(v15 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler);
      swift_beginAccess();
      uint64_t v19 = *v18;
      *id v18 = (uint64_t)sub_100201180;
      v18[1] = (uint64_t)v17;
      swift_bridgeObjectRetain();
      sub_1000F4F24(a4);
      sub_10006C5D8(v19);
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v21 = Strong;
      [Strong setNeedsUpdateComponent:@"cards" animated:1];
    }
  }
}

uint64_t sub_1002010B8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002010F0(uint64_t a1, void *a2)
{
  sub_1002003A0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1002010F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100201130()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100201180(char a1, uint64_t a2, uint64_t a3)
{
  sub_100200568(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(uint64_t, uint64_t))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56));
}

unint64_t sub_1002011B0()
{
  unint64_t result = qword_1015D5660;
  if (!qword_1015D5660)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D5660);
  }
  return result;
}

uint64_t sub_1002011F0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100201228(char a1)
{
  return [*(id *)(v1 + 16) setShowsTopographicFeatures:a1 & 1];
}

void *sub_100201248(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    id v18 = _swiftEmptyArrayStorage;
    sub_10025AEF4(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v16 = *i;
      a1(v17, &v16);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v17[0];
      uint64_t v9 = v17[1];
      id v18 = v6;
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1)
      {
        sub_10025AEF4(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v18;
      }
      v6[2] = v12 + 1;
      id v13 = &v6[2 * v12];
      v13[4] = v10;
      v13[5] = v9;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

double sub_100201358()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (unsigned char *)(v0 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 60));
  if ((v12[16] & 1) == 0) {
    return *(double *)v12;
  }
  uint64_t v29 = v0;
  uint64_t v13 = *(void *)(v0 + 16);
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    goto LABEL_10;
  }
  uint64_t v28 = &v11[*(int *)(v8 + 24)];
  uint64_t v15 = v13 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v16 = *(void *)(v9 + 72);
  uint64_t v26 = v13;
  uint64_t v27 = v16;
  uint64_t v17 = v2;
  id v18 = (void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v19 = (void (**)(char *, uint64_t))(v17 + 8);
  swift_bridgeObjectRetain();
  double v20 = INFINITY;
  double v21 = -INFINITY;
  do
  {
    sub_100206128(v15, (uint64_t)v11, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);
    (*v18)(v4, v28, v1);
    sub_100206190((uint64_t)v11, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);
    Measurement<>.converted(to:)();
    objc_super v22 = *v19;
    (*v19)(v4, v1);
    Measurement.value.getter();
    double v24 = v23;
    v22(v7, v1);
    if (v24 < v20) {
      double v20 = v24;
    }
    if (v21 < v24) {
      double v21 = v24;
    }
    v15 += v27;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  if (v20 > v21)
  {
LABEL_10:
    __break(1u);
    return *(double *)v12;
  }
  return v20;
}

uint64_t sub_10020160C()
{
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  uint64_t v0 = self;
  id v1 = [v0 feet];
  char v2 = static NSObject.== infix(_:_:)();

  if (v2) {
    return 1282;
  }
  id v4 = [v0 miles];
  char v5 = static NSObject.== infix(_:_:)();

  if (v5) {
    return 1284;
  }
  id v6 = [v0 meters];
  char v7 = static NSObject.== infix(_:_:)();

  if (v7) {
    return 11;
  }
  id v8 = [v0 kilometers];
  char v9 = static NSObject.== infix(_:_:)();

  if (v9) {
    return 14;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002017A4()
{
  uint64_t v1 = type metadata accessor for MapsElevationChartViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v6 = (char *)&v41 - v5;
  double v7 = sub_100201358();
  double v8 = *(double *)(v0 + 40);
  double v10 = ceil(v9 / v8);
  uint64_t v11 = *(int *)(v1 + 56);
  double v12 = floor(v7 / v8);
  int v13 = *(unsigned __int8 *)(*(void *)(v0 + v11) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle);
  sub_100206128(v0, (uint64_t)v6, type metadata accessor for MapsElevationChartViewModel);
  if (v13 == 1)
  {
    sub_100206190((uint64_t)v6, type metadata accessor for MapsElevationChartViewModel);
    sub_100206128(v0, (uint64_t)v3, type metadata accessor for MapsElevationChartViewModel);
LABEL_4:
    sub_100206190((uint64_t)v3, type metadata accessor for MapsElevationChartViewModel);
    goto LABEL_5;
  }
  int v14 = *(unsigned __int8 *)(*(void *)&v6[*(int *)(v1 + 56)]
                           + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle);
  sub_100206190((uint64_t)v6, type metadata accessor for MapsElevationChartViewModel);
  sub_100206128(v0, (uint64_t)v3, type metadata accessor for MapsElevationChartViewModel);
  if (v14 == 2) {
    goto LABEL_4;
  }
  int64_t v16 = *(unsigned __int8 *)(*(void *)&v3[*(int *)(v1 + 56)]
                           + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle);
  sub_100206190((uint64_t)v3, type metadata accessor for MapsElevationChartViewModel);
  if (v16 == 3)
  {
LABEL_5:
    double v15 = fabs(fmod(v10 - v12, 3.0));
    if (v15 > 2.22507386e-308)
    {
      if (v15 <= 1.0)
      {
        if (v12 <= 0.0)
        {
          double v10 = v10 + 2.0;
        }
        else
        {
          double v10 = v10 + 1.0;
          double v12 = v12 + -1.0;
        }
      }
      else
      {
        double v10 = v10 + 1.0;
      }
    }
    double v21 = *(double *)(v0 + 40);
    double v20 = (double *)sub_1001D03A4(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v18 = *((void *)v20 + 2);
    unint64_t v17 = *((void *)v20 + 3);
    int64_t v29 = v17 >> 1;
    int64_t v16 = v18 + 1;
    if (v17 >> 1 > v18) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
  unint64_t v18 = 0;
  uint64_t v19 = 0;
  double v20 = (double *)_swiftEmptyArrayStorage;
  double v21 = v10;
  BOOL v22 = v10 == v12;
  if (v10 <= v12) {
    goto LABEL_13;
  }
  while (!__OFADD__(v19++, 1))
  {
    double v24 = v10 - (double)v19;
    double v25 = *(double *)(v0 + 40);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_19;
    }
LABEL_23:
    double v20 = (double *)sub_1001D03A4(0, *((void *)v20 + 2) + 1, 1, v20);
    while (1)
    {
LABEL_19:
      unint64_t v28 = *((void *)v20 + 2);
      unint64_t v27 = *((void *)v20 + 3);
      int64_t v16 = v28 + 1;
      if (v28 >= v27 >> 1) {
        double v20 = (double *)sub_1001D03A4((void *)(v27 > 1), v28 + 1, 1, v20);
      }
      *((void *)v20 + 2) = v16;
      unint64_t v17 = (unint64_t)&v20[v28];
      *(double *)(v17 + 32) = v21 * v25;
      double v21 = v24;
      BOOL v22 = v24 == v12;
      if (v24 > v12) {
        break;
      }
LABEL_13:
      int v26 = !v22;
      if ((v26 | v18)) {
        goto LABEL_35;
      }
      double v25 = *(double *)(v0 + 40);
      unint64_t v18 = 1;
      double v24 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_23;
      }
      double v24 = v21;
    }
  }
  __break(1u);
LABEL_40:
  double v20 = (double *)sub_1001D03A4((void *)(v17 > 1), v16, 1, v20);
  unint64_t v17 = *((void *)v20 + 3);
  int64_t v29 = v17 >> 1;
LABEL_28:
  double v30 = v10 * v21;
  *((void *)v20 + 2) = v16;
  v20[v18 + 4] = v30;
  unint64_t v31 = v18 + 2;
  if (v29 < (uint64_t)(v18 + 2)) {
    double v20 = (double *)sub_1001D03A4((void *)(v17 > 1), v18 + 2, 1, v20);
  }
  double v32 = v12 * v21;
  *((void *)v20 + 2) = v31;
  v20[v16 + 4] = v32 / 3.0 + (v30 + v30) / 3.0;
  unint64_t v33 = *((void *)v20 + 3);
  unint64_t v34 = v18 + 3;
  if ((uint64_t)(v18 + 3) > (uint64_t)(v33 >> 1)) {
    double v20 = (double *)sub_1001D03A4((void *)(v33 > 1), v18 + 3, 1, v20);
  }
  *((void *)v20 + 2) = v34;
  v20[v31 + 4] = v30 / 3.0 + (v32 + v32) / 3.0;
  unint64_t v35 = *((void *)v20 + 3);
  if ((uint64_t)(v18 + 4) > (uint64_t)(v35 >> 1)) {
    double v20 = (double *)sub_1001D03A4((void *)(v35 > 1), v18 + 4, 1, v20);
  }
  *((void *)v20 + 2) = v18 + 4;
  v20[v34 + 4] = v32;
LABEL_35:
  if (*(unsigned char *)(*(void *)(v0 + v11) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle) != 5) {
    return (uint64_t)v20;
  }
  sub_1000FF33C(&qword_1015D1BD0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_100F5CF80;
  uint64_t v37 = *((void *)v20 + 2);
  if (v37)
  {
    uint64_t v38 = result;
    *(double *)(result + 32) = v20[4];
    uint64_t v39 = (uint64_t)&v20[v37 + 4];
    *(double *)(result + 40) = (v20[4] + *(double *)(v39 - 8)) * 0.5;
    uint64_t v40 = *(void *)(v39 - 8);
    swift_bridgeObjectRelease();
    *(void *)(v38 + 48) = v40;
    return v38;
  }
  __break(1u);
  return result;
}

uint64_t sub_100201C84()
{
  uint64_t v3 = v0;
  int64_t v4 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *(void *)(v0 + 16);
  unint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    __break(1u);
LABEL_10:
    uint64_t v1 = (uint64_t)sub_1001D04B4((void *)(v9 > 1), v4, 1, (void *)v1);
    goto LABEL_8;
  }
  unint64_t v10 = v9 - 1;
  uint64_t v11 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  (*(void (**)(char *, unint64_t, int64_t))(v5 + 16))(v7, v8+ ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80))+ *(void *)(*(void *)(v11 - 8) + 72) * v10+ *(int *)(v11 + 20), v4);
  Measurement.value.getter();
  double v13 = v12;
  int v14 = *(void (**)(char *, int64_t))(v5 + 8);
  v14(v7, v4);
  LODWORD(v10) = *(unsigned __int8 *)(*(void *)(v3
                                                + *(int *)(type metadata accessor for MapsElevationChartViewModel(0)
                                                         + 56))
                                    + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle);
  sub_1000FF33C(&qword_1015D6FE0);
  if (v10 != 2)
  {
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_100F656F0;
    *(void *)(result + 32) = 0;
    *(unsigned char *)(result + 40) = 0;
    *(double *)(result + 48) = v13 * 0.25;
    *(unsigned char *)(result + 56) = 0;
    *(double *)(result + 64) = v13 * 0.5;
    *(unsigned char *)(result + 72) = 0;
    *(double *)(result + 80) = v13 * 0.75;
    *(unsigned char *)(result + 88) = 0;
    *(double *)(result + 96) = v13;
    *(unsigned char *)(result + 104) = 0;
    return result;
  }
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5F5F0;
  *(double *)(v1 + 32) = v13 * 0.25;
  *(unsigned char *)(v1 + 40) = 0;
  *(double *)(v1 + 48) = v13 * 0.5;
  *(unsigned char *)(v1 + 56) = 0;
  *(double *)(v1 + 64) = v13 * 0.75;
  *(unsigned char *)(v1 + 72) = 0;
  *(double *)(v1 + 80) = v13;
  *(unsigned char *)(v1 + 88) = 0;
  id v15 = [self meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v2 = v16;
  v14(v7, v4);
  if (v2 <= 2.22507386e-308)
  {
    unint64_t v8 = 4;
    unint64_t v9 = 8;
  }
  else
  {
    unint64_t v8 = 5;
    uint64_t v1 = (uint64_t)sub_1001D04B4((void *)1, 5, 1, (void *)v1);
    *(void *)(v1 + 16) = 5;
    *(void *)(v1 + 96) = 0;
    *(unsigned char *)(v1 + 104) = 0;
    unint64_t v9 = *(void *)(v1 + 24);
  }
  int64_t v4 = v8 + 1;
  if (v8 >= v9 >> 1) {
    goto LABEL_10;
  }
LABEL_8:
  *(void *)(v1 + 16) = v4;
  unint64_t v18 = v1 + 16 * v8;
  *(double *)(v18 + 32) = v2;
  *(unsigned char *)(v18 + 40) = 1;
  uint64_t v20 = v1;
  swift_bridgeObjectRetain_n();
  sub_100203390(&v20, sub_1003561C8, sub_100203414);
  swift_bridgeObjectRelease_n();
  return v20;
}

void *sub_100202038()
{
  uint64_t v0 = sub_100201C84();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    sub_10025AFB8(0, v1, 0);
    unint64_t v2 = _swiftEmptyArrayStorage[2];
    uint64_t v3 = 32;
    do
    {
      uint64_t v4 = *(void *)(v0 + v3);
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v2 >= v5 >> 1) {
        sub_10025AFB8(v5 > 1, v2 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v2 + 1;
      _swiftEmptyArrayStorage[v2 + 4] = v4;
      v3 += 16;
      ++v2;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100202128()
{
  return *(void *)v0;
}

unint64_t sub_100202130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  void v17[2] = a1;
  unint64_t result = sub_100202BEC((uint64_t (*)(unint64_t))sub_100206210, (uint64_t)v17, v4);
  if (v8) {
    goto LABEL_10;
  }
  if ((v7 & 1) == 0)
  {
    uint64_t v9 = result + v6;
    if (__OFADD__(result, v6))
    {
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    if (v9 >= 0) {
      uint64_t v10 = result + v6;
    }
    else {
      uint64_t v10 = v9 + 1;
    }
    if (v9 < -1) {
      goto LABEL_18;
    }
    uint64_t v11 = v10 >> 1;
    if (v10 >> 1 < *(void *)(v4 + 16))
    {
LABEL_12:
      uint64_t v13 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
      unint64_t v14 = v4
          + ((*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80))
          + *(void *)(*(void *)(v13 - 8) + 72) * v11
          + *(int *)(v13 + 24);
LABEL_15:
      uint64_t v16 = sub_1000FF33C(&qword_1015D16E8);
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a2, v14, v16);
    }
    __break(1u);
LABEL_10:
    uint64_t v12 = *(void *)(v4 + 16);
    if (v12)
    {
      uint64_t v11 = v12 - 1;
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_17;
  }
  if (*(void *)(v4 + 16))
  {
    uint64_t v15 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
    unint64_t v14 = v4
        + *(int *)(v15 + 24)
        + ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80));
    goto LABEL_15;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1002022CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015D88B0);
  __chkstk_darwin(v2 - 8);
  unint64_t v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Text.Measurements();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v14 = v13 - 1;
  uint64_t v15 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, v12+ ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80))+ *(void *)(*(void *)(v15 - 8) + 72) * v14+ *(int *)(v15 + 20), v8);
  Measurement.value.getter();
  double v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v17 < 0.0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  if (*(unsigned char *)(*(void *)(v1 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 56))
                + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle) == 5)
  {
    double v18 = *(double *)(v1 + 8) + *(double *)v1 * 0.5;
    double v32 = (double *)v1;
    unint64_t v33 = sub_1002030E8();
    uint64_t v19 = v33[2];
    double v20 = 0.0;
    uint64_t v21 = (uint64_t)v34;
    if (v19)
    {
      BOOL v22 = (void (**)(char *, uint64_t))(v5 + 8);
      double v23 = v33 + 7;
      do
      {
        uint64_t v24 = *(v23 - 3);
        uint64_t v25 = *(v23 - 2);
        char v26 = *((unsigned char *)v23 - 8);
        v23 += 4;
        sub_10017FDF0(v24, v25, v26);
        swift_bridgeObjectRetain();
        Text.Measurements.init()();
        uint64_t v27 = type metadata accessor for Text.WritingMode();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v21, 1, 1, v27);
        Text.Measurements.size(of:in:writingMode:)();
        uint64_t v21 = (uint64_t)v34;
        double v29 = v28;
        sub_10017F958(v24, v25, v26);
        swift_bridgeObjectRelease();
        sub_1000FF2E0(v21, &qword_1015D88B0);
        (*v22)(v7, v4);
        if (v29 + -2.0 > v20) {
          double v20 = v29 + -2.0;
        }
        --v19;
      }
      while (v19);
    }
    swift_bridgeObjectRelease();
    double v30 = v32[1] + v20 + *v32 * 0.5 + v32[1];
    double v31 = v32[3];
    if (v18 + v30 < v31 && -(v17 / (v31 - (v18 + v30)) * v18) > v17 + v30 * (v17 / (v31 - (v18 + v30)))) {
      goto LABEL_14;
    }
  }
}

uint64_t sub_1002026EC(uint64_t a1, uint64_t a2)
{
  return (*(double *)a1 == *(double *)a2) & (*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8) ^ 1u);
}

uint64_t sub_100202714@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(char *, uint64_t)@<X6>, void (*a8)(char *, uint64_t)@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, void *a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17)
{
  long long v72 = a7;
  uint64_t v73 = a8;
  uint64_t v69 = a5;
  uint64_t v70 = a6;
  uint64_t v24 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __asm { FMOV            V0.2D, #12.0 }
  *(_OWORD *)a9 = _Q0;
  uint64_t v33 = *(void *)(a1 + 16);
  if (v33)
  {
    uint64_t v74 = a17;
    uint64_t v67 = a16;
    int v66 = a15;
    uint64_t v64 = a13;
    uint64_t v65 = a14;
    *(void *)(a9 + 16) = a1;
    *(double *)(a9 + 24) = a10;
    *(void *)(a9 + 32) = a2;
    *(double *)(a9 + 40) = a11;
    id v71 = a3;
    *(void *)(a9 + 48) = a3;
    uint64_t v34 = type metadata accessor for MapsElevationChartViewModel(0);
    id v68 = a2;
    unint64_t v35 = (int *)v34;
    uint64_t v36 = a9 + *(int *)(v34 + 44);
    uint64_t v75 = v25;
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    uint64_t v63 = a4;
    v37(v36, a4, v24);
    uint64_t v38 = (void *)(a9 + v35[12]);
    uint64_t v39 = v70;
    *uint64_t v38 = v69;
    v38[1] = v39;
    uint64_t v40 = (void (**)(char *, uint64_t))(a9 + v35[13]);
    uint64_t v41 = v73;
    uint64_t v42 = v74;
    char *v40 = v72;
    v40[1] = v41;
    *(void *)(a9 + v35[14]) = a12;
    uint64_t v43 = a9 + v35[15];
    uint64_t v44 = v65;
    *(void *)uint64_t v43 = v64;
    *(void *)(v43 + 8) = v44;
    *(unsigned char *)(v43 + 16) = v66 & 1;
    uint64_t v45 = (void *)(a9 + v35[16]);
    *uint64_t v45 = v67;
    v45[1] = v42;
    uint64_t v46 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
    v37((uint64_t)v27, a1+ ((*(unsigned __int8 *)(*(void *)(v46 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v46 - 8) + 80))+ *(void *)(*(void *)(v46 - 8) + 72) * (v33 - 1)+ *(int *)(v46 + 20), v24);
    uint64_t v47 = v75;
    swift_bridgeObjectRetain();
    id v48 = v68;
    uint64_t v73 = (void (*)(char *, uint64_t))v71;
    id v71 = a12;
    swift_retain();
    Measurement.value.getter();
    double v50 = v49;
    long long v72 = *(void (**)(char *, uint64_t))(v47 + 8);
    v72(v27, v24);
    uint64_t v51 = swift_bridgeObjectRetain();
    sub_100204A58(v51, a1, v50 * 0.25);
    swift_bridgeObjectRelease_n();
    uint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v53 = sub_10034EC44(v52);
    swift_bridgeObjectRelease();
    v76[0] = (uint64_t)v53;
    sub_100203390(v76, (uint64_t (*)(uint64_t))sub_1003561DC, sub_100203B0C);
    uint64_t v75 = v47 + 8;
    swift_bridgeObjectRelease();
    *(void *)(a9 + v35[17]) = v76[0];
    id v54 = [objc_allocWithZone((Class)NSLengthFormatter) init];
    id v55 = [v54 numberFormatter];
    if (v55)
    {
      uint64_t v56 = v55;
      [v55 setMaximumFractionDigits:1];

      *(void *)(a9 + v35[18]) = v54;
      id v57 = objc_allocWithZone((Class)NSLengthFormatter);
      id v58 = v54;
      id v59 = [v57 init];
      id v60 = [v59 numberFormatter];
      if (v60)
      {
        uint64_t v61 = v60;
        [v60 setMaximumFractionDigits:0];

        swift_release();
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v72)(v63, v24);
        *(void *)(a9 + v35[19]) = v59;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MapsElevationChartViewModel(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D5908);
}

uint64_t type metadata accessor for MapsElevationChartViewModel.ElevationDatum(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D5868);
}

unint64_t sub_100202BEC(uint64_t (*a1)(unint64_t), uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = *(void *)(type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0) - 8);
  unint64_t v28 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v7 = a3 + v28;
  uint64_t v8 = a1(a3 + v28);
  if (v8)
  {
    if (v8 == -1) {
      return 0;
    }
LABEL_10:
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t i = v3 - 1;
    uint64_t v14 = a1(v7 + v13 * (v3 - 1));
    if (v14 == 1) {
      return i;
    }
    if (v14)
    {
      if (v3 != 1)
      {
LABEL_20:
        unint64_t v17 = 0;
        uint64_t i = v3 - 1;
        while (!__OFSUB__(i, v17))
        {
          uint64_t v18 = (uint64_t)(i - v17) / 2;
          unint64_t v19 = v17 + v18;
          if (__OFADD__(v17, v18)) {
            goto LABEL_57;
          }
          if (v19 >= v3) {
            goto LABEL_58;
          }
          uint64_t v20 = a1(v7 + v19 * v13);
          if (v20 == -1)
          {
            uint64_t i = v17 + (uint64_t)(i - v17) / 2;
          }
          else
          {
            if (!v20)
            {
              if (v19 + 1 != v3)
              {
                unint64_t v22 = v17 + v18;
                uint64_t v23 = a3 + v28 + v13 * (v19 + 1);
                while ((uint64_t)(v22 + 1) < v3)
                {
                  if (!a1(v23))
                  {
                    ++v22;
                    v23 += v13;
                    if (v3 - 1 != v22) {
                      continue;
                    }
                  }
                  goto LABEL_48;
                }
                goto LABEL_62;
              }
LABEL_48:
              if (!v19) {
                return 0;
              }
              uint64_t v24 = a3 + v28 + v13 * (v17 + v18 - 1);
              uint64_t v25 = -v13;
              for (uint64_t i = v19; (uint64_t)v19 >= i; --i)
              {
                uint64_t v26 = i - 1;
                if (i - 1 >= v3) {
                  goto LABEL_61;
                }
                if (a1(v24)) {
                  return i;
                }
                v24 += v25;
                if (!v26) {
                  return v19;
                }
              }
              goto LABEL_60;
            }
            unint64_t v17 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_59;
            }
          }
          if (i < (uint64_t)v17) {
            return i;
          }
          if (i == v17) {
            goto LABEL_37;
          }
        }
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
        return 0;
      }
    }
    else if (v3 != 1)
    {
      unint64_t v15 = a3 + v28 + v13 * (v3 - 2);
      while (1)
      {
        uint64_t v16 = i - 1;
        if (i - 1 >= v3) {
          break;
        }
        if (a1(v15)) {
          return i;
        }
        v15 -= v13;
        --i;
        if (!v16) {
          goto LABEL_20;
        }
      }
      __break(1u);
      goto LABEL_56;
    }
    unint64_t v17 = 0;
LABEL_37:
    if (v17 < v3)
    {
      uint64_t v21 = a1(v7 + v17 * v13);
      if (v21 == 1) {
        return v17;
      }
      if (v21 == -1) {
        return v17 - 1;
      }
      return v17;
    }
    goto LABEL_63;
  }
  if (v3 == 1) {
    goto LABEL_10;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *(void *)(v6 + 72);
  unint64_t v12 = a3 + v11 + v28;
  while (!a1(v12))
  {
    ++v10;
    v12 += v11;
    if (v3 - 1 == v10) {
      goto LABEL_10;
    }
  }
  return 0;
}

uint64_t sub_100202F6C@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D0A30);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = *a1;
  uint64_t v10 = *(void **)(a2 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 76));
  id v11 = [v10 stringFromValue:sub_10020160C() unit:v9];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  v20[0] = v12;
  v20[1] = v14;
  static Locale.current.getter();
  uint64_t v15 = type metadata accessor for Locale();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
  sub_100180324();
  uint64_t v16 = StringProtocol.uppercased(with:)();
  uint64_t v18 = v17;
  sub_1000FF2E0((uint64_t)v8, &qword_1015D0A30);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v16;
  a3[1] = v18;
  return result;
}

void *sub_1002030E8()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015D8DB0);
  __chkstk_darwin(v1 - 8);
  uint64_t v27 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1002017A4();
  uint64_t v31 = v0;
  uint64_t v4 = sub_100201248((void (*)(void *__return_ptr, uint64_t *))sub_1002061F0, (uint64_t)v30, v3);
  swift_bridgeObjectRelease();
  int64_t v5 = v4[2];
  if (v5)
  {
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_10025AF98(0, v5, 0);
    unint64_t v6 = sub_100180324();
    v26[1] = v4;
    v26[2] = v6;
    uint64_t v7 = v4 + 5;
    do
    {
      uint64_t v8 = *v7;
      uint64_t v32 = *(v7 - 1);
      uint64_t v33 = v8;
      swift_bridgeObjectRetain_n();
      uint64_t v9 = Text.init<A>(_:)();
      uint64_t v11 = v10;
      char v13 = v12 & 1;
      static Font.Weight.medium.getter();
      uint64_t v14 = type metadata accessor for Font.Design();
      uint64_t v15 = (uint64_t)v27;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v27, 1, 1, v14);
      static Font.system(size:weight:design:)();
      sub_1000FF2E0(v15, &qword_1015D8DB0);
      uint64_t v28 = Text.font(_:)();
      uint64_t v29 = v16;
      uint64_t v18 = v17;
      char v20 = v19;
      swift_release();
      sub_10017F958(v9, v11, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10025AF98(0, v21[2] + 1, 1);
        uint64_t v21 = v34;
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_10025AF98(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v34;
      }
      v7 += 2;
      void v21[2] = v23 + 1;
      uint64_t v24 = &v21[4 * v23];
      v24[4] = v28;
      uint64_t v24[5] = v18;
      *((unsigned char *)v24 + 48) = v20 & 1;
      v24[7] = v29;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v21;
}

uint64_t sub_100203390(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

Swift::Int sub_100203414(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = -1;
      uint64_t v86 = 1;
      uint64_t v87 = *a1;
      do
      {
        uint64_t v88 = v85;
        uint64_t v89 = v87;
        do
        {
          double v90 = *(double *)(v89 + 16);
          if (v90 >= *(double *)v89) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          char v91 = *(unsigned char *)(v89 + 24);
          *(_OWORD *)(v89 + 16) = *(_OWORD *)v89;
          *(double *)uint64_t v89 = v90;
          *(unsigned char *)(v89 + 8) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        ++v86;
        v87 += 16;
        --v85;
      }
      while (v86 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  Swift::Int v6 = result;
  v102 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      char v12 = (char *)_swiftEmptyArrayStorage;
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v102;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_1002041E0((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_10035503C((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = (void *)v8;
    __dst = (double *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v103 = *a1 + 32;
  uint64_t v101 = *a1 - 16;
  char v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v105 = v6;
  Swift::Int v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      double v17 = *(double *)(v11 + 16 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (double *)(v103 + 16 * v14);
        while (v15 < v17 != *v18 >= *(v18 - 2))
        {
          ++v10;
          v18 += 2;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          Swift::Int v20 = v10;
          Swift::Int v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              unint64_t v23 = (_OWORD *)(v11 + v16);
              uint64_t v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              char v26 = *(unsigned char *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                _OWORD *v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(unsigned char *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    Swift::Int v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      Swift::Int v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = v101 + 16 * v10;
      do
      {
        Swift::Int v29 = v14;
        uint64_t v30 = v28;
        do
        {
          double v31 = *(double *)(v30 + 16);
          if (v31 >= *(double *)v30) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          char v32 = *(unsigned char *)(v30 + 24);
          *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
          *(double *)uint64_t v30 = v31;
          *(unsigned char *)(v30 + 8) = v32;
          v30 -= 16;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v28 += 16;
      }
      while (v10 != v27);
      Swift::Int v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_10035496C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_10035496C((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      char v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    unint64_t v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          double v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            long long v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        id v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        id v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        uint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_1002041E0((double *)(v11 + 16 * *(void *)v78), (double *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        char v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v105;
    Swift::Int v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_100203B0C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = 0;
      uint64_t v86 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = *(void *)(v86 + 16 * i);
        uint64_t v89 = v85;
        do
        {
          if (v88 >= *(void *)(v86 + v89)) {
            break;
          }
          if (!v86) {
            goto LABEL_140;
          }
          double v90 = (void *)(v86 + v89);
          uint64_t v91 = *(void *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *double v90 = v88;
          v90[1] = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      char v12 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      uint64_t v92 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v93 = *v101;
        do
        {
          unint64_t v94 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v93) {
            goto LABEL_144;
          }
          unint64_t v95 = v92;
          uint64_t v96 = *(void *)&v92[16 * v94 + 32];
          uint64_t v97 = *(void *)&v92[16 * v13 + 24];
          sub_100204460((char *)(v93 + 16 * v96), (char *)(v93 + 16 * *(void *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v95 = sub_10035503C((uint64_t)v95);
          }
          if (v94 >= *((void *)v95 + 2)) {
            goto LABEL_133;
          }
          uint64_t v98 = &v95[16 * v94 + 32];
          *(void *)uint64_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v95 + 2);
          if (v13 > v99) {
            goto LABEL_134;
          }
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          uint64_t v92 = v95;
          *((void *)v95 + 2) = v99 - 1;
          unint64_t v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_1000FF33C((uint64_t *)&unk_1015D6F10);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 32;
  uint64_t v100 = *a1 - 16;
  char v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v104 = v6;
  Swift::Int v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      uint64_t v17 = *(void *)(v11 + 16 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (uint64_t *)(v102 + 16 * v14);
        uint64_t v19 = v15;
        while (1)
        {
          uint64_t v21 = *v18;
          v18 += 2;
          uint64_t v20 = v21;
          if (v15 < v17 == v21 >= v19) {
            break;
          }
          ++v10;
          uint64_t v19 = v20;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v22 = 16 * v10;
          Swift::Int v23 = v10;
          Swift::Int v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = *(void *)(v11 + v16);
              uint64_t v27 = *(void *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(void *)(v25 - 16) = v26;
              *(void *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v28 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v28 >= v3) {
      Swift::Int v28 = v3;
    }
    if (v28 < v14) {
      break;
    }
    if (v10 != v28)
    {
      uint64_t v29 = v100 + 16 * v10;
      do
      {
        uint64_t v30 = *(void *)(v11 + 16 * v10);
        Swift::Int v31 = v14;
        uint64_t v32 = v29;
        do
        {
          if (v30 >= *(void *)v32) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v33 = *(void *)(v32 + 24);
          *(_OWORD *)(v32 + 16) = *(_OWORD *)v32;
          *(void *)uint64_t v32 = v30;
          *(void *)(v32 + 8) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      Swift::Int v10 = v28;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_10035496C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v35 = *((void *)v12 + 2);
    unint64_t v34 = *((void *)v12 + 3);
    unint64_t v13 = v35 + 1;
    uint64_t v11 = v106;
    if (v35 >= v34 >> 1)
    {
      uint64_t v84 = sub_10035496C((char *)(v34 > 1), v35 + 1, 1, v12);
      uint64_t v11 = v106;
      char v12 = v84;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v36 = v12 + 32;
    unint64_t v37 = &v12[16 * v35 + 32];
    *(void *)unint64_t v37 = v14;
    *((void *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        unint64_t v38 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v43 = &v36[16 * v13];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_119;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_120;
          }
          unint64_t v50 = v13 - 2;
          uint64_t v51 = &v36[16 * v13 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_122;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_125;
          }
          if (v55 >= v46)
          {
            uint64_t v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_129;
            }
            BOOL v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v67 = *((void *)v12 + 4);
            uint64_t v68 = *((void *)v12 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
            goto LABEL_77;
          }
          uint64_t v40 = *((void *)v12 + 4);
          uint64_t v39 = *((void *)v12 + 5);
          BOOL v49 = __OFSUB__(v39, v40);
          uint64_t v41 = v39 - v40;
          char v42 = v49;
        }
        if (v42) {
          goto LABEL_121;
        }
        unint64_t v50 = v13 - 2;
        uint64_t v56 = &v36[16 * v13 - 32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        char v61 = v59;
        if (v59) {
          goto LABEL_124;
        }
        uint64_t v62 = &v36[16 * v38];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v49 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v49) {
          goto LABEL_127;
        }
        if (__OFADD__(v60, v65)) {
          goto LABEL_128;
        }
        if (v60 + v65 >= v41)
        {
          BOOL v66 = v41 < v65;
LABEL_83:
          if (v66) {
            unint64_t v38 = v50;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v61) {
          goto LABEL_123;
        }
        uint64_t v69 = &v36[16 * v38];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v49 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v49) {
          goto LABEL_126;
        }
        if (v72 < v60) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v78 = v12;
        uint64_t v79 = &v36[16 * v77];
        uint64_t v80 = *(void *)v79;
        uint64_t v81 = &v36[16 * v38];
        uint64_t v82 = *((void *)v81 + 1);
        sub_100204460((char *)(v11 + 16 * *(void *)v79), (char *)(v11 + 16 * *(void *)v81), v11 + 16 * v82, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v82 < v80) {
          goto LABEL_116;
        }
        if (v38 > *((void *)v78 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v79 = v80;
        *(void *)&v36[16 * v77 + 8] = v82;
        unint64_t v83 = *((void *)v78 + 2);
        if (v38 >= v83) {
          goto LABEL_118;
        }
        char v12 = v78;
        unint64_t v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((void *)v78 + 2) = v83 - 1;
        uint64_t v11 = v106;
        if (v83 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v104;
    Swift::Int v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002041E0(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v25 = __dst;
  uint64_t v26 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v17 = 2 * v13;
      if (__dst != a2 || &a2[v17] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v18 = &v4[v17];
      Swift::Int v24 = &v4[v17];
      uint64_t v26 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v19 = (double *)(a3 - 16);
        uint64_t v20 = v6;
        while (1)
        {
          uint64_t v21 = v19 + 2;
          double v22 = *(v20 - 2);
          v20 -= 2;
          if (*(v18 - 2) >= v22)
          {
            Swift::Int v24 = v18 - 2;
            if (v21 < v18 || v19 >= v18 || v21 != v18) {
              *(_OWORD *)uint64_t v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v20 = v6;
            v18 -= 2;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= v6) {
              *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
            }
            uint64_t v26 = v20;
            if (v20 <= v7) {
              goto LABEL_42;
            }
          }
          v19 -= 2;
          Swift::Int v6 = v20;
          if (v18 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 2 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14 * 8);
    }
    uint64_t v15 = &v4[v14];
    Swift::Int v24 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 2;
          uint64_t v25 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 2;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 2;
        if (v4 >= v15) {
          break;
        }
        Swift::Int v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v26 = v7;
    }
LABEL_42:
    sub_100354B24((void **)&v26, (const void **)&v25, &v24);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100204460(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v24 = __src;
  Swift::Int v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v16 = &v4[16 * v13];
      double v22 = v16;
      Swift::Int v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v17 = (char *)(a3 - 16);
        uint64_t v18 = v6;
        while (1)
        {
          uint64_t v19 = v17 + 16;
          uint64_t v20 = *((void *)v18 - 2);
          v18 -= 16;
          if (*((void *)v16 - 2) >= v20)
          {
            double v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)uint64_t v17 = *((_OWORD *)v16 - 1);
            }
            uint64_t v18 = v6;
            v16 -= 16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
            }
            Swift::Int v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 16;
          Swift::Int v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    size_t v14 = &v4[16 * v10];
    double v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          Swift::Int v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        Swift::Int v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      Swift::Int v24 = v7;
    }
LABEL_42:
    sub_100354BE0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002046DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D5978);
  __chkstk_darwin(v4 - 8);
  Swift::Int v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v24 - v12;
  void v26[3] = v14;
  v26[4] = sub_100206258();
  uint64_t v15 = sub_100100B1C(v26);
  uint64_t v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  v16(v15, a1, v7);
  sub_1000FF4D4((uint64_t)v26, (uint64_t)v25);
  sub_1000FF33C(&qword_1015D5988);
  int v17 = swift_dynamicCast();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v17)
  {
    v18(v6, 0, 1, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    if (dispatch thunk of static Comparable.< infix(_:_:)())
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      uint64_t v19 = -1;
    }
    else
    {
      char v20 = dispatch thunk of static Comparable.> infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      uint64_t v19 = v20 & 1;
    }
    sub_1000FF22C((uint64_t)v26);
    return v19;
  }
  else
  {
    v18(v6, 1, 1, v7);
    sub_1000FF2E0((uint64_t)v6, &qword_1015D5978);
    v16((uint64_t *)v10, a2, v7);
    sub_1000FF4D4((uint64_t)v26, (uint64_t)v25);
    v24[0] = 0;
    v24[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(41);
    _print_unlocked<A, B>(_:_:)();
    v22._uint64_t countAndFlagsBits = 0x20646E6120;
    v22._object = (void *)0xE500000000000000;
    String.append(_:)(v22);
    _print_unlocked<A, B>(_:_:)();
    v23._object = (void *)0x8000000100F7D840;
    v23._uint64_t countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v23);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100204A58(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v45 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  __chkstk_darwin(v45);
  uint64_t v48 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v49 = (uint64_t)&v41 - v9;
  uint64_t v10 = _swiftEmptyDictionarySingleton;
  unint64_t v50 = _swiftEmptyDictionarySingleton;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return (uint64_t)v10;
  }
  uint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = (v13 + 32) & ~v13;
    uint64_t v15 = a1 + v14;
    uint64_t v41 = a2;
    uint64_t v16 = *(void *)(v8 + 72);
    uint64_t v17 = a2 + v14 + v16 * (v12 - 1);
    uint64_t v18 = *(int *)(v45 + 20);
    uint64_t v46 = v14;
    uint64_t v47 = v17 + v18;
    uint64_t v44 = v16 + v14;
    uint64_t v43 = v13 | 7;
    long long v42 = xmmword_100F5CF70;
    while (1)
    {
      sub_100206128(v15, v49, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);
      sub_100100830(0, (unint64_t *)&qword_1015D19E8);
      if (static Measurement.== infix<A, B>(_:_:)())
      {
        uint64_t v20 = 3;
      }
      else
      {
        sub_1000FF33C(&qword_1015D16E8);
        Measurement.value.getter();
        double v22 = floor(v21 / a3);
        if ((~*(void *)&v22 & 0x7FF0000000000000) == 0) {
          goto LABEL_25;
        }
        if (v22 <= -9.22337204e18) {
          goto LABEL_26;
        }
        if (v22 >= 9.22337204e18) {
          goto LABEL_27;
        }
        uint64_t v20 = (uint64_t)v22;
      }
      unint64_t v24 = sub_1001EA66C(v20);
      uint64_t v25 = v10[2];
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        break;
      }
      char v28 = v23;
      if (v10[3] < v27)
      {
        sub_10035027C(v27, 1);
        uint64_t v10 = v50;
        unint64_t v29 = sub_1001EA66C(v20);
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_30;
        }
        unint64_t v24 = v29;
      }
      if (v28)
      {
        uint64_t v31 = v10[7];
        sub_100204E30(v49, v48);
        unint64_t v32 = *(void *)(v31 + 8 * v24);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v31 + 8 * v24) = v32;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v32 = sub_1001D0870(0, *(void *)(v32 + 16) + 1, 1, v32);
          *(void *)(v31 + 8 * v24) = v32;
        }
        unint64_t v35 = *(void *)(v32 + 16);
        unint64_t v34 = *(void *)(v32 + 24);
        if (v35 >= v34 >> 1)
        {
          unint64_t v32 = sub_1001D0870(v34 > 1, v35 + 1, 1, v32);
          *(void *)(v31 + 8 * v24) = v32;
        }
        uint64_t v19 = v46;
        *(void *)(v32 + 16) = v35 + 1;
        sub_100204E30(v48, v32 + v19 + v35 * v16);
      }
      else
      {
        sub_1000FF33C(&qword_1015D4128);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = v42;
        sub_100204E30(v49, v36 + v46);
        v10[(v24 >> 6) + 8] |= 1 << v24;
        *(void *)(v10[6] + 8 * v24) = v20;
        *(void *)(v10[7] + 8 * v24) = v36;
        uint64_t v37 = v10[2];
        BOOL v38 = __OFADD__(v37, 1);
        uint64_t v39 = v37 + 1;
        if (v38) {
          goto LABEL_28;
        }
        v10[2] = v39;
      }
      v15 += v16;
      if (!--v11) {
        return (uint64_t)v10;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100204E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_100204E94(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_1000FF33C(&qword_1015D16E8);
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[a3[6]], &a2[a3[6]], v10);
    v4[a3[7]] = a2[a3[7]];
  }
  return v4;
}

uint64_t sub_100204FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);

  return v8(v6, v5);
}

char *sub_100205054(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_100205118(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_1002051DC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_1002052A0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_100205364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100205378);
}

uint64_t sub_100205378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100205450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100205464);
}

uint64_t sub_100205464(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

void sub_100205528()
{
  sub_1002055D0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1002055D0()
{
  if (!qword_1015D5878)
  {
    sub_100100830(255, (unint64_t *)&qword_1015D19E8);
    unint64_t v0 = type metadata accessor for Measurement();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015D5878);
    }
  }
}

uint64_t *sub_100205638(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v9 = (void *)a2[4];
    uint64_t v8 = a2[5];
    a1[4] = (uint64_t)v9;
    a1[5] = v8;
    uint64_t v10 = (void *)a2[6];
    uint64_t v11 = a3[11];
    unsigned int v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    a1[6] = (uint64_t)v10;
    swift_bridgeObjectRetain();
    id v14 = v9;
    id v15 = v10;
    uint64_t v16 = sub_1000FF33C(&qword_1015D16E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v12, v13, v16);
    uint64_t v17 = a3[12];
    uint64_t v18 = a3[13];
    uint64_t v19 = (uint64_t *)((char *)v4 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    double v22 = (uint64_t *)((char *)v4 + v18);
    char v23 = (uint64_t *)((char *)a2 + v18);
    uint64_t v24 = v23[1];
    *double v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[14];
    uint64_t v26 = a3[15];
    uint64_t v27 = *(void **)((char *)a2 + v25);
    *(uint64_t *)((char *)v4 + v25) = (uint64_t)v27;
    char v28 = (char *)v4 + v26;
    unint64_t v29 = (char *)a2 + v26;
    *(_OWORD *)char v28 = *(_OWORD *)v29;
    v28[16] = v29[16];
    uint64_t v30 = a3[16];
    uint64_t v31 = a3[17];
    unint64_t v32 = (uint64_t *)((char *)v4 + v30);
    uint64_t v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *unint64_t v32 = *v33;
    v32[1] = v34;
    *(uint64_t *)((char *)v4 + v31) = *(uint64_t *)((char *)a2 + v31);
    uint64_t v35 = a3[18];
    uint64_t v36 = a3[19];
    uint64_t v37 = *(void **)((char *)a2 + v35);
    *(uint64_t *)((char *)v4 + v35) = (uint64_t)v37;
    BOOL v38 = *(void **)((char *)a2 + v36);
    *(uint64_t *)((char *)v4 + v36) = (uint64_t)v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v39 = v27;
    swift_retain();
    swift_bridgeObjectRetain();
    id v40 = v37;
    id v41 = v38;
  }
  return v4;
}

void sub_1002057E4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + a2[11];
  uint64_t v5 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v6 = *(void **)(a1 + a2[19]);
}

uint64_t sub_1002058D8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v8 = *(void **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v7;
  uint64_t v9 = *(void **)(a2 + 48);
  uint64_t v10 = a3[11];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRetain();
  id v13 = v8;
  id v14 = v9;
  uint64_t v15 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12, v15);
  uint64_t v16 = a3[12];
  uint64_t v17 = a3[13];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (void *)(a1 + v17);
  double v22 = (void *)(a2 + v17);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[14];
  uint64_t v25 = a3[15];
  uint64_t v26 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v26;
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(unsigned char *)(v27 + 16) = *(unsigned char *)(v28 + 16);
  uint64_t v29 = a3[16];
  uint64_t v30 = a3[17];
  uint64_t v31 = (void *)(a1 + v29);
  unint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  void *v31 = *v32;
  v31[1] = v33;
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  uint64_t v34 = a3[18];
  uint64_t v35 = a3[19];
  uint64_t v36 = *(void **)(a2 + v34);
  *(void *)(a1 + v34) = v36;
  uint64_t v37 = *(void **)(a2 + v35);
  *(void *)(a1 + v35) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v38 = v26;
  swift_retain();
  swift_bridgeObjectRetain();
  id v39 = v36;
  id v40 = v37;
  return a1;
}

void *sub_100205A34(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  uint64_t v6 = (void *)a2[4];
  uint64_t v7 = (void *)a1[4];
  a1[4] = v6;
  id v8 = v6;

  a1[5] = a2[5];
  uint64_t v9 = (void *)a2[6];
  uint64_t v10 = (void *)a1[6];
  a1[6] = v9;
  id v11 = v9;

  uint64_t v12 = a3[11];
  id v13 = (char *)a1 + v12;
  id v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[12];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[13];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  void *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[14];
  uint64_t v23 = *(void **)((char *)a2 + v22);
  uint64_t v24 = *(void **)((char *)a1 + v22);
  *(void *)((char *)a1 + v22) = v23;
  id v25 = v23;

  uint64_t v26 = a3[15];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  char v29 = v28[16];
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  v27[16] = v29;
  uint64_t v30 = a3[16];
  uint64_t v31 = (void *)((char *)a1 + v30);
  unint64_t v32 = (void *)((char *)a2 + v30);
  uint64_t v33 = v32[1];
  void *v31 = *v32;
  v31[1] = v33;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[18];
  uint64_t v35 = *(void **)((char *)a2 + v34);
  uint64_t v36 = *(void **)((char *)a1 + v34);
  *(void *)((char *)a1 + v34) = v35;
  id v37 = v35;

  uint64_t v38 = a3[19];
  id v39 = *(void **)((char *)a2 + v38);
  id v40 = *(void **)((char *)a1 + v38);
  *(void *)((char *)a1 + v38) = v39;
  id v41 = v39;

  return a1;
}

uint64_t sub_100205C18(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[11];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v12 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  uint64_t v15 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t sub_100205D18(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v8 = a3[11];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[12];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[13];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[14];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v24 = a3[15];
  uint64_t v25 = a3[16];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(unsigned char *)(v26 + 16) = *(unsigned char *)(v27 + 16);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  swift_release();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[18];
  char v29 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);

  uint64_t v30 = a3[19];
  uint64_t v31 = *(void **)(a1 + v30);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);

  return a1;
}

uint64_t sub_100205EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100205EB4);
}

uint64_t sub_100205EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D16E8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100205F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100205F7C);
}

uint64_t sub_100205F7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000FF33C(&qword_1015D16E8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100206028()
{
  sub_1002055D0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_10020611C()
{
  return &protocol witness table for Int;
}

uint64_t sub_100206128(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100206190(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002061F0@<X0>(double *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100202F6C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100206210(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0) + 20);

  return sub_1002046DC(v3, v2);
}

unint64_t sub_100206258()
{
  unint64_t result = qword_1015D5980;
  if (!qword_1015D5980)
  {
    sub_10010118C(&qword_1015D16E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5980);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MapsElevationChartViewModel.ElevationMark(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MapsElevationChartViewModel.ElevationMark(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapsElevationChartViewModel.ElevationMark()
{
  return &type metadata for MapsElevationChartViewModel.ElevationMark;
}

uint64_t sub_10020635C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021AE24(a1, a2, a3, &qword_1015D5A18);
}

uint64_t sub_100206368()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void sub_1002063B0()
{
}

void sub_1002063D8()
{
}

uint64_t sub_1002063FC@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, unsigned __int8 a10, void *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v40 = a9;
  id v37 = a3;
  uint64_t v38 = a5;
  id v39 = a11;
  char v18 = a7 & 1;
  uint64_t v19 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v34 = v18;
  uint64_t v22 = a4;
  uint64_t v33 = a4;
  int v36 = a8;
  LOBYTE(v31) = a8;
  uint64_t v23 = v38;
  uint64_t v24 = v37;
  int v35 = a10;
  sub_10020D784(a1, a11, a2, v38, v37, a10, v21, a12, a13, v31, v33, a6, v34);
  uint64_t v25 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25) == 1)
  {
    uint64_t v27 = v40;
    sub_1000FF2E0((uint64_t)v21, &qword_1015D2AD8);
    uint64_t v28 = a2[16];
    if (v28)
    {
      swift_retain();
      LOBYTE(v32) = v35 & 1;
      sub_1002063FC(a1, v28, v24, v22, v23, 0, 1, v36 & 1, v32, 0, 0, 0);
      return swift_release();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v27, 1, 1, v25);
    }
  }
  else
  {
    uint64_t v30 = v40;
    sub_100223DBC((uint64_t)v21, v40, type metadata accessor for PlaceSummaryViewModelUnit);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
  }
}

unint64_t sub_100206640(void *a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D5AD0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v74 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v73 = (uint64_t)&v65 - v16;
  uint64_t v17 = type metadata accessor for URL();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  if (!a2) {
    return 0xF000000000000007;
  }
  int v71 = a3;
  uint64_t v69 = v7;
  uint64_t v70 = v6;
  uint64_t v23 = *(void *)(a2 + 16);
  if (!v23) {
    return 0xF000000000000007;
  }
  uint64_t v65 = (char *)&v65 - v21;
  uint64_t v66 = v22;
  uint64_t v67 = v9;
  uint64_t v68 = v11;
  uint64_t v24 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v75 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v76 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  uint64_t v26 = &selRef__displayNavigationAnimated_;
  uint64_t v72 = v23;
  while (2)
  {
    char v27 = *(unsigned char *)(a2 + v25 + 32);
    switch(v27)
    {
      case 2:
        swift_bridgeObjectRelease();
        uint64_t v38 = v73;
        sub_10021B858(a1, v73);
        if ((*v76)(v38, 1, v17) == 1)
        {
          sub_1000FF2E0(v38, (uint64_t *)&unk_1015D5160);
          id v39 = [objc_allocWithZone((Class)MapsUIImageGEOFeatureSpec) init];
          [v39 setSize:4];
          [v39 setTransparent:1];
          id v40 = [a1 _styleAttributes];
          [v39 setStyle:v40];

          uint64_t v41 = sub_1000FF33C(&qword_1015D0F40);
          uint64_t v42 = swift_allocBox();
          uint64_t v44 = v43;
          uint64_t v45 = (char *)v43 + *(int *)(v41 + 96);
          uint64_t v46 = *(int *)(v41 + 112);
          *uint64_t v43 = v39;
          v43[1] = 0;
          v43[3] = 0;
          uint64_t v47 = enum case for Image.TemplateRenderingMode.template(_:);
          uint64_t v48 = type metadata accessor for Image.TemplateRenderingMode();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v45, v47, v48);
          uint64_t v49 = self;
          id v50 = v39;
          id v51 = [v49 systemGray5Color];
          *(void *)((char *)v44 + v46) = Color.init(uiColor:)();
          *((unsigned char *)v44 + 16) = 0;
          uint64_t v52 = (uint64_t)v68;
          *uint64_t v68 = v42;
          swift_storeEnumTagMultiPayload();
          type metadata accessor for PlaceSummaryImageViewModel(0);
          uint64_t v60 = swift_allocObject();
          uint64_t v77 = 0;
          sub_1000FF33C((uint64_t *)&unk_1015D23C8);
          Published.init(initialValue:)();
          UUID.init()();
          sub_100223DBC(v52, v60 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);

          uint64_t v53 = v60 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
          *(void *)uint64_t v53 = 0;
          *(unsigned char *)(v53 + 8) = 1;
        }
        else
        {
          uint64_t v62 = v65;
          uint64_t v61 = v66;
          (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v65, v38, v17);
          uint64_t v63 = (uint64_t)v68;
          (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 16))(v68, v62, v17);
          swift_storeEnumTagMultiPayload();
          type metadata accessor for PlaceSummaryImageViewModel(0);
          uint64_t v60 = swift_allocObject();
          uint64_t v77 = 0;
          sub_1000FF33C((uint64_t *)&unk_1015D23C8);
          Published.init(initialValue:)();
          UUID.init()();
          sub_100223DBC(v63, v60 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
          uint64_t v64 = v60 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
          *(void *)uint64_t v64 = 0;
          *(unsigned char *)(v64 + 8) = 1;
          (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v17);
        }
        return v60;
      case 3:
        id v28 = [a1 v26[277]];

        if (!v28) {
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        return 0x8000000000000000;
      case 4:
        if (![a1 _hasLookAroundStorefront]) {
          goto LABEL_5;
        }
        uint64_t v60 = 0x8000000000000008;
        swift_bridgeObjectRelease();
        return v60;
      case 5:
        id v29 = [a1 phoneNumber];
        if (!v29) {
          goto LABEL_5;
        }
        uint64_t v30 = v29;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v26 = &selRef__displayNavigationAnimated_;
        uint64_t v31 = String.count.getter();
        uint64_t v23 = v72;
        swift_bridgeObjectRelease();
        if (v31 <= 0) {
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        return 0x8000000000000010;
      case 6:
        id v32 = [a1 url];
        if (!v32)
        {
          (*v24)(v14, 1, 1, v17);
          goto LABEL_16;
        }
        uint64_t v33 = v32;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        (*v75)(v14, v19, v17);
        (*v24)(v14, 0, 1, v17);
        if ((*v76)((uint64_t)v14, 1, v17) == 1)
        {
LABEL_16:
          sub_1000FF2E0((uint64_t)v14, (uint64_t *)&unk_1015D5160);
          goto LABEL_5;
        }
        sub_1000FF2E0((uint64_t)v14, (uint64_t *)&unk_1015D5160);
        swift_bridgeObjectRelease();
        return 0x8000000000000018;
      case 7:
LABEL_5:
        if (v23 != ++v25) {
          continue;
        }
        swift_bridgeObjectRelease();
        return 0xF000000000000007;
      case 8:
        swift_bridgeObjectRelease();
        id v54 = [a1 _detourInfo];

        char v55 = (v54 != 0) | ~(_BYTE)v71;
        type metadata accessor for AccessoryButtonViewModel(0);
        uint64_t v56 = swift_allocObject();
        uint64_t v57 = v56 + OBJC_IVAR____TtC4Maps24AccessoryButtonViewModel__isDriveable;
        LOBYTE(v77) = 1;
        id v58 = a1;
        BOOL v59 = v74;
        Published.init(initialValue:)();
        (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v57, v59, v70);
        UUID.init()();
        *(void *)(v56 + OBJC_IVAR____TtC4Maps24AccessoryButtonViewModel_mapItem) = v58;
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v77) = v55 & 1;
        swift_retain();
        static Published.subscript.setter();
        return v56 | 0x4000000000000000;
      case 9:
        swift_bridgeObjectRelease();
        type metadata accessor for HikeRouteSnapshotViewModel(0);
        uint64_t v36 = swift_allocObject();
        uint64_t v77 = 0;
        id v37 = a1;
        sub_1000FF33C((uint64_t *)&unk_1015D23C8);
        Published.init(initialValue:)();
        LOBYTE(v77) = 1;
        Published.init(initialValue:)();
        *(void *)(v36 + OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel_mapItem) = v37;
        return v36 | 0x6000000000000000;
      default:
        swift_bridgeObjectRelease();
        type metadata accessor for DirectionsETAModel(0);
        swift_allocObject();
        id v35 = a1;
        return sub_1001A24FC(v27 & 1, (uint64_t)v35, v71 & 1) | 0x2000000000000000;
    }
  }
}

id sub_1002070B4(void *a1, char *a2, void *a3, int a4, uint64_t a5)
{
  uint64_t v91 = a3;
  uint64_t v92 = a5;
  uint64_t v9 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v85 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v89 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v84 = (uint64_t)&v68 - v14;
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v71 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v78 = (uint64_t)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v70 = (uint64_t)&v68 - v21;
  int v93 = a4;
  uint64_t v22 = sub_100264F94(a1, a2, a4);
  if (!v22) {
    return 0;
  }
  uint64_t v69 = v22;
  uint64_t v23 = (unint64_t *)[a1 mapItem];
  if (!v23)
  {

    return 0;
  }
  uint64_t v24 = v23;
  uint64_t v88 = a2;
  uint64_t v86 = a1;
  id result = [a1 mapItem];
  if (result)
  {
    uint64_t v26 = result;
    id v27 = [result _geoMapItem];

    if (v27)
    {
      id v28 = [v27 _identifier];
      swift_unknownObjectRelease();
    }
    else
    {
      id v28 = 0;
    }
    id v29 = v69;
    if (v88)
    {
      uint64_t v30 = *(void *)&v88[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_serverOverrides];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v30 = 0;
    }
    id v31 = sub_10021EE28(v28, v30);
    swift_bridgeObjectRelease();

    uint64_t v32 = *(void *)&v29[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines];
    uint64_t v33 = *(void *)(v32 + 16);
    unint64_t v83 = v24;
    uint64_t v77 = v33;
    if (v33)
    {
      uint64_t v87 = (uint64_t)v31;
      uint64_t v76 = v32 + 32;
      char v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
      uint64_t v73 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
      uint64_t v72 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
      uint64_t v68 = v32;
      swift_bridgeObjectRetain_n();
      uint64_t v35 = 0;
      uint64_t v36 = _swiftEmptyArrayStorage;
      uint64_t v75 = v18;
      uint64_t v74 = v17;
      do
      {
        uint64_t v37 = v76 + 16 * v35;
        unint64_t v38 = *(void *)v37;
        int v79 = *(unsigned __int8 *)(v37 + 8);
        unint64_t v39 = *(unsigned __int8 *)(v37 + 9);
        if (v38 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          uint64_t v18 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
        }
        int v80 = v39;
        uint64_t v81 = v35;
        uint64_t v82 = v36;
        if (v18)
        {
          if (v18 < 1)
          {
            __break(1u);
            goto LABEL_68;
          }
          uint64_t v40 = 0;
          uint64_t v41 = _swiftEmptyArrayStorage;
          do
          {
            if ((v38 & 0xC000000000000001) != 0)
            {
              uint64_t v42 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v42 = *(uint64_t **)(v38 + 8 * v40 + 32);
              swift_retain();
            }
            sub_1002063FC(v24, v42, v91, v87, 0, 0, 1, 0, (uint64_t)v11, v93 & 1, v86, (uint64_t)v88, v92);
            swift_release();
            if ((*v34)(v11, 1, v90) == 1)
            {
              sub_1000FF2E0((uint64_t)v11, &qword_1015D2AD8);
            }
            else
            {
              uint64_t v43 = v84;
              sub_100223DBC((uint64_t)v11, v84, type metadata accessor for PlaceSummaryViewModelUnit);
              sub_100223DBC(v43, v89, type metadata accessor for PlaceSummaryViewModelUnit);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v41 = (void *)sub_1001D00BC(0, v41[2] + 1, 1, (unint64_t)v41);
              }
              unint64_t v45 = v41[2];
              unint64_t v44 = v41[3];
              if (v45 >= v44 >> 1) {
                uint64_t v41 = (void *)sub_1001D00BC(v44 > 1, v45 + 1, 1, (unint64_t)v41);
              }
              _OWORD v41[2] = v45 + 1;
              sub_100223DBC(v89, (uint64_t)v41+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v45, type metadata accessor for PlaceSummaryViewModelUnit);
              uint64_t v24 = v83;
            }
            ++v40;
          }
          while (v18 != v40);
        }
        else
        {
          uint64_t v41 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease_n();
        char v46 = v80;
        uint64_t v47 = sub_10021CFF0((uint64_t)v41, v80);
        swift_bridgeObjectRelease();
        uint64_t v48 = (uint64_t)v74;
        if (v47[2])
        {
          UUID.init()();
          uint64_t v18 = v75;
          *(void *)(v48 + *(int *)(v75 + 20)) = v47;
          *(unsigned char *)(v48 + *(int *)(v18 + 24)) = v79;
          *(unsigned char *)(v48 + *(int *)(v18 + 28)) = v46;
          (*v73)(v48, 0, 1, v18);
        }
        else
        {
          uint64_t v18 = v75;
          (*v73)((uint64_t)v74, 1, 1, v75);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v36 = v82;
        if ((*v72)(v48, 1, v18) == 1)
        {
          sub_1000FF2E0(v48, (uint64_t *)&unk_1015D59D0);
        }
        else
        {
          uint64_t v49 = v48;
          uint64_t v50 = v70;
          sub_100223DBC(v49, v70, type metadata accessor for PlaceSummaryViewModelLine);
          sub_100223DBC(v50, v78, type metadata accessor for PlaceSummaryViewModelLine);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v36 = (void *)sub_1001D08A4(0, v36[2] + 1, 1, (unint64_t)v36);
          }
          unint64_t v52 = v36[2];
          unint64_t v51 = v36[3];
          if (v52 >= v51 >> 1) {
            uint64_t v36 = (void *)sub_1001D08A4(v51 > 1, v52 + 1, 1, (unint64_t)v36);
          }
          v36[2] = v52 + 1;
          sub_100223DBC(v78, (uint64_t)v36+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v52, type metadata accessor for PlaceSummaryViewModelLine);
        }
        uint64_t v35 = v81 + 1;
      }
      while (v81 + 1 != v77);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      id v29 = v69;
      if (v36[2])
      {
LABEL_43:
        uint64_t v53 = v29;
        uint64_t v54 = *(void *)&v29[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_trailingEntities];
        swift_bridgeObjectRetain();
        uint64_t v11 = (char *)sub_100206640(v24, v54, v93 & 1);
        swift_bridgeObjectRelease();
        sub_10012E3C4((unint64_t)v11);
        uint64_t v55 = static Color.clear.getter();
        id v56 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
        id v5 = sub_1001A035C((unint64_t)v36, 0xF000000000000007, (unint64_t)v11, 0, 0, 0, 2, 0, v55, 0);
        if (v5)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          unint64_t v57 = *(void *)(v94[0] + 16);
          swift_bridgeObjectRelease();
          if (v57 >= 3) {
            unint64_t v38 = 3;
          }
          else {
            unint64_t v38 = v57;
          }
          unint64_t v58 = *(void *)(sub_1001A0CB8(0) + 16);
          swift_bridgeObjectRelease();
          if (v58 >= v38
            || (swift_getKeyPath(),
                swift_getKeyPath(),
                static Published.subscript.getter(),
                swift_release(),
                swift_release(),
                unint64_t v59 = *(void *)(v94[0] + 16),
                swift_bridgeObjectRelease(),
                v58 >= v59))
          {

            sub_10012E49C((unint64_t)v11);
          }
          else
          {
            swift_getKeyPath();
            swift_getKeyPath();
            uint64_t v35 = static Published.subscript.modify();
            uint64_t v24 = v60;
            unint64_t v39 = *v60;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t *v24 = v39;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              goto LABEL_69;
            }
            while (1)
            {
              uint64_t v24 = v83;
              if (*(void *)(v39 + 16))
              {
                *(unsigned char *)(v39
                         + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))
                         + *(int *)(v18 + 24)) = 0;
                ((void (*)(void *, void))v35)(v94, 0);
                swift_release();
                swift_release();
                if (v38 == 1) {
                  goto LABEL_60;
                }
                swift_getKeyPath();
                swift_getKeyPath();
                uint64_t v35 = static Published.subscript.modify();
                uint64_t v63 = v62;
                unint64_t v39 = *v62;
                char v64 = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v63 = v39;
                if ((v64 & 1) == 0)
                {
                  unint64_t v39 = sub_1003481E4(v39);
                  *uint64_t v63 = v39;
                }
                uint64_t v24 = v83;
                if (*(void *)(v39 + 16) >= 2uLL)
                {
                  *(unsigned char *)(v39
                           + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))
                           + *(void *)(v71 + 72)
                           + *(int *)(v18 + 24)) = 0;
                  ((void (*)(void *, void))v35)(v94, 0);
                  swift_release();
                  swift_release();
                  if (v38 == 2) {
                    goto LABEL_60;
                  }
                  swift_getKeyPath();
                  swift_getKeyPath();
                  uint64_t v35 = static Published.subscript.modify();
                  uint64_t v66 = v65;
                  unint64_t v39 = *v65;
                  char v67 = swift_isUniquelyReferenced_nonNull_native();
                  unint64_t *v66 = v39;
                  if ((v67 & 1) == 0)
                  {
                    unint64_t v39 = sub_1003481E4(v39);
                    unint64_t *v66 = v39;
                  }
                  uint64_t v24 = v83;
                  if (*(void *)(v39 + 16) >= 3uLL) {
                    break;
                  }
                }
              }
LABEL_68:
              __break(1u);
LABEL_69:
              unint64_t v39 = sub_1003481E4(v39);
              unint64_t *v24 = v39;
            }
            *(unsigned char *)(v39
                     + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))
                     + 2 * *(void *)(v71 + 72)
                     + *(int *)(v18 + 24)) = 0;
            ((void (*)(void *, void))v35)(v94, 0);
            swift_release();
            swift_release();
LABEL_60:

            sub_10012E49C((unint64_t)v11);
          }
        }
        else
        {
          sub_10012E49C((unint64_t)v11);
        }
        return v5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = _swiftEmptyArrayStorage;
      if (_swiftEmptyArrayStorage[2]) {
        goto LABEL_43;
      }
    }

    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_100207DC8(void *a1, char *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, char a7, int a8, double a9)
{
  uint64_t v100 = a6;
  uint64_t v98 = a4;
  uint64_t v99 = a5;
  uint64_t v97 = a3;
  uint64_t v14 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v91 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v95 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v90 = (uint64_t)&v74 - v19;
  uint64_t v20 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v78 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v85 = (uint64_t)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v77 = (uint64_t)&v74 - v26;
  id v27 = sub_100265FEC(a1, a2);
  if (!v27) {
    return 0;
  }
  id v28 = v27;
  int v76 = a8;
  id v29 = sub_1001EC9A4();
  if (a2)
  {
    uint64_t v30 = *(void *)&a2[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_serverOverrides];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v30 = 0;
  }
  id v32 = sub_10021EE28(v29, v30);
  swift_bridgeObjectRelease();

  uint64_t v33 = *(void *)&v28[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines];
  uint64_t v84 = *(void *)(v33 + 16);
  if (v84)
  {
    uint64_t v92 = (uint64_t)a2;
    uint64_t v93 = (uint64_t)v32;
    uint64_t v75 = v28;
    unint64_t v94 = a1;
    uint64_t v83 = v33 + 32;
    char v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
    int v79 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56);
    uint64_t v82 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
    uint64_t v74 = v33;
    swift_bridgeObjectRetain_n();
    uint64_t v35 = 0;
    uint64_t v36 = _swiftEmptyArrayStorage;
    char v37 = a7 & 1;
    uint64_t v81 = v22;
    uint64_t v80 = v23;
    do
    {
      uint64_t v89 = v36;
      unint64_t v38 = (uint64_t *)(v83 + 16 * v35);
      unint64_t v39 = *v38;
      int v40 = *((unsigned __int8 *)v38 + 8);
      int v41 = *((unsigned __int8 *)v38 + 9);
      if ((unint64_t)*v38 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v42 = result;
      }
      else
      {
        uint64_t v42 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
      }
      uint64_t v88 = v35;
      int v86 = v40;
      int v87 = v41;
      if (v42)
      {
        if (v42 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v44 = 0;
        unint64_t v45 = _swiftEmptyArrayStorage;
        do
        {
          if ((v39 & 0xC000000000000001) != 0)
          {
            char v46 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            char v46 = *(void **)(v39 + 8 * v44 + 32);
            swift_retain();
          }
          sub_100208680(v94, v46, v97, v98, v93, v99, v100, v37, (uint64_t)v16, v92);
          swift_release();
          if ((*v34)(v16, 1, v96) == 1)
          {
            sub_1000FF2E0((uint64_t)v16, &qword_1015D2AD8);
          }
          else
          {
            uint64_t v47 = v90;
            sub_100223DBC((uint64_t)v16, v90, type metadata accessor for PlaceSummaryViewModelUnit);
            sub_100223DBC(v47, v95, type metadata accessor for PlaceSummaryViewModelUnit);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v45 = (void *)sub_1001D00BC(0, v45[2] + 1, 1, (unint64_t)v45);
            }
            unint64_t v49 = v45[2];
            unint64_t v48 = v45[3];
            if (v49 >= v48 >> 1) {
              unint64_t v45 = (void *)sub_1001D00BC(v48 > 1, v49 + 1, 1, (unint64_t)v45);
            }
            v45[2] = v49 + 1;
            sub_100223DBC(v95, (uint64_t)v45+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v49, type metadata accessor for PlaceSummaryViewModelUnit);
          }
          ++v44;
        }
        while (v42 != v44);
      }
      else
      {
        unint64_t v45 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n();
      char v50 = v87;
      unint64_t v51 = sub_10021CFF0((uint64_t)v45, v87);
      swift_bridgeObjectRelease();
      uint64_t v52 = (uint64_t)v81;
      if (v51[2])
      {
        UUID.init()();
        uint64_t v53 = v80;
        *(void *)(v52 + *(int *)(v80 + 20)) = v51;
        *(unsigned char *)(v52 + *(int *)(v53 + 24)) = v86;
        *(unsigned char *)(v52 + *(int *)(v53 + 28)) = v50;
        (*v79)(v52, 0, 1, v53);
      }
      else
      {
        uint64_t v53 = v80;
        (*v79)((uint64_t)v81, 1, 1, v80);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      int v54 = (*v82)(v52, 1, v53);
      uint64_t v36 = v89;
      if (v54 == 1)
      {
        sub_1000FF2E0(v52, (uint64_t *)&unk_1015D59D0);
      }
      else
      {
        uint64_t v55 = v52;
        uint64_t v56 = v77;
        sub_100223DBC(v55, v77, type metadata accessor for PlaceSummaryViewModelLine);
        sub_100223DBC(v56, v85, type metadata accessor for PlaceSummaryViewModelLine);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v36 = (void *)sub_1001D08A4(0, v36[2] + 1, 1, (unint64_t)v36);
        }
        unint64_t v58 = v36[2];
        unint64_t v57 = v36[3];
        if (v58 >= v57 >> 1) {
          uint64_t v36 = (void *)sub_1001D08A4(v57 > 1, v58 + 1, 1, (unint64_t)v36);
        }
        v36[2] = v58 + 1;
        sub_100223DBC(v85, (uint64_t)v36+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v58, type metadata accessor for PlaceSummaryViewModelLine);
      }
      uint64_t v35 = v88 + 1;
    }
    while (v88 + 1 != v84);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a1 = v94;
    id v28 = v75;
    if (!v36[2]) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = _swiftEmptyArrayStorage;
  if (_swiftEmptyArrayStorage[2])
  {
LABEL_38:
    if (*(void *)&v28[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_leadingEntities]) {
      unint64_t v59 = *(_UNKNOWN ***)&v28[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_leadingEntities];
    }
    else {
      unint64_t v59 = &off_1012D7E40;
    }
    uint64_t v60 = (char *)v59[2];
    if (v60)
    {
      uint64_t v61 = (unsigned __int8 *)(v59 + 4);
      while (1)
      {
        int v62 = *v61++;
        if (v62 == 2) {
          break;
        }
        if (!--v60) {
          goto LABEL_45;
        }
      }
      uint64_t v63 = v28;
      swift_bridgeObjectRetain();
      unint64_t v64 = sub_10021F6D4(a1);
    }
    else
    {
LABEL_45:
      uint64_t v63 = v28;
      swift_bridgeObjectRetain();
      unint64_t v64 = 0xF000000000000007;
    }
    swift_bridgeObjectRelease();
    if ([a1 hasQueryAcceleratorAffordanceEnabled]) {
      unint64_t v65 = 0x8000000000000020;
    }
    else {
      unint64_t v65 = 0xF000000000000007;
    }
    sub_100220B84(a1, a9);
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    sub_100220F08(a1);
    uint64_t v71 = v70;
    uint64_t v72 = static Color.clear.getter();
    id v73 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
    id v31 = sub_1001A035C((unint64_t)v36, v64, v65, v67, v69, v71, 1, 0, v72, v76 & 1);

    return (uint64_t)v31;
  }
LABEL_47:

  swift_bridgeObjectRelease();
  return 0;
}

void sub_100208680(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v26 = a4;
  uint64_t v16 = sub_1000FF33C(&qword_1015D2AD8);
  *(void *)&double v17 = __chkstk_darwin(v16 - 8).n128_u64[0];
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v29 = 0;
  id v20 = [a1 directionIntent:v17];

  if (v20)
  {
    id v20 = [objc_allocWithZone((Class)DirectionIntentCellViewModel) initWithLocalSearchCompletion:a1];
    id v29 = v20;
  }
  uint64_t v25 = a7;
  sub_1002148A0(a1, a2, a3, a10, a8 & 1, v26, (uint64_t)v19, &v29, v28, a7, v27);
  uint64_t v21 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) == 1)
  {
    sub_1000FF2E0((uint64_t)v19, &qword_1015D2AD8);
    uint64_t v23 = a2[16];
    if (v23)
    {
      swift_retain();
      sub_100208680(a1, v23, a3, v26, v27, v28, v25, a8 & 1, 0);
      swift_release();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(a9, 1, 1, v21);
    }
  }
  else
  {

    sub_100223DBC((uint64_t)v19, a9, type metadata accessor for PlaceSummaryViewModelUnit);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a9, 0, 1, v21);
  }
}

uint64_t sub_1002089EC(uint64_t a1, uint64_t a2, int a3)
{
  return sub_10020AF14(a1, a2, a3, (uint64_t (*)(__n128))sub_100266324, (void (*)(uint64_t, uint64_t, uint64_t))sub_100208A2C, (uint64_t (*)(void))sub_100221414);
}

uint64_t sub_100208A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_10020C928(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_100216DFC, (void (*)(uint64_t, uint64_t, uint64_t))sub_100208A2C, a4);
}

uint64_t sub_100208AE0(void *a1, void *a2, void *a3, int a4, double a5)
{
  uint64_t v90 = a2;
  uint64_t v91 = a3;
  uint64_t v8 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v88 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v86 = (uint64_t)&v69 - v13;
  uint64_t v14 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v73 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v80 = (uint64_t)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v72 = (uint64_t)&v69 - v20;
  uint64_t v21 = (char *)sub_1002664D4();
  if (!v21) {
    return 0;
  }
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)&v21[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines];
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v85 = a1;
  uint64_t v79 = v24;
  if (v24)
  {
    uint64_t v70 = v22;
    int v71 = a4;
    uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
    uint64_t v74 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
    uint64_t v77 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
    uint64_t v78 = v23 + 32;
    uint64_t v69 = v23;
    swift_bridgeObjectRetain_n();
    uint64_t v26 = 0;
    uint64_t v27 = _swiftEmptyArrayStorage;
    uint64_t v75 = v17;
    int v76 = v16;
    do
    {
      uint64_t v84 = v27;
      id v29 = (uint64_t *)(v78 + 16 * v26);
      unint64_t v30 = *v29;
      int v31 = *((unsigned __int8 *)v29 + 8);
      int v32 = *((unsigned __int8 *)v29 + 9);
      if ((unint64_t)*v29 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v33 = result;
      }
      else
      {
        uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
      }
      uint64_t v82 = v26;
      int v83 = v32;
      int v81 = v31;
      if (v33)
      {
        if (v33 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v35 = 0;
        uint64_t v36 = _swiftEmptyArrayStorage;
        do
        {
          if ((v30 & 0xC000000000000001) != 0)
          {
            char v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            char v37 = *(void **)(v30 + 8 * v35 + 32);
            swift_retain();
          }
          sub_1002093C4(a1, v37, v90, v91, (uint64_t)v10);
          swift_release();
          if ((*v25)(v10, 1, v89) == 1)
          {
            sub_1000FF2E0((uint64_t)v10, &qword_1015D2AD8);
          }
          else
          {
            uint64_t v38 = v86;
            sub_100223DBC((uint64_t)v10, v86, type metadata accessor for PlaceSummaryViewModelUnit);
            sub_100223DBC(v38, v88, type metadata accessor for PlaceSummaryViewModelUnit);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v36 = (void *)sub_1001D00BC(0, v36[2] + 1, 1, (unint64_t)v36);
            }
            unint64_t v40 = v36[2];
            unint64_t v39 = v36[3];
            if (v40 >= v39 >> 1) {
              uint64_t v36 = (void *)sub_1001D00BC(v39 > 1, v40 + 1, 1, (unint64_t)v36);
            }
            v36[2] = v40 + 1;
            sub_100223DBC(v88, (uint64_t)v36+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v40, type metadata accessor for PlaceSummaryViewModelUnit);
            a1 = v85;
          }
          ++v35;
        }
        while (v33 != v35);
      }
      else
      {
        uint64_t v36 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n();
      char v41 = v83;
      uint64_t v42 = sub_10021CFF0((uint64_t)v36, v83);
      swift_bridgeObjectRelease();
      if (v42[2])
      {
        uint64_t v43 = (uint64_t)v76;
        UUID.init()();
        uint64_t v44 = v75;
        *(void *)(v43 + *(int *)(v75 + 20)) = v42;
        *(unsigned char *)(v43 + *(int *)(v44 + 24)) = v81;
        *(unsigned char *)(v43 + *(int *)(v44 + 28)) = v41;
        (*v74)(v43, 0, 1, v44);
      }
      else
      {
        uint64_t v44 = v75;
        uint64_t v43 = (uint64_t)v76;
        (*v74)((uint64_t)v76, 1, 1, v75);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      int v45 = (*v77)(v43, 1, v44);
      uint64_t v27 = v84;
      if (v45 == 1)
      {
        sub_1000FF2E0(v43, (uint64_t *)&unk_1015D59D0);
        uint64_t v28 = v82;
      }
      else
      {
        uint64_t v46 = v43;
        uint64_t v47 = v72;
        sub_100223DBC(v46, v72, type metadata accessor for PlaceSummaryViewModelLine);
        sub_100223DBC(v47, v80, type metadata accessor for PlaceSummaryViewModelLine);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v28 = v82;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v27 = (void *)sub_1001D08A4(0, v27[2] + 1, 1, (unint64_t)v27);
        }
        unint64_t v50 = v27[2];
        unint64_t v49 = v27[3];
        if (v50 >= v49 >> 1) {
          uint64_t v27 = (void *)sub_1001D08A4(v49 > 1, v50 + 1, 1, (unint64_t)v27);
        }
        v27[2] = v50 + 1;
        sub_100223DBC(v80, (uint64_t)v27+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v50, type metadata accessor for PlaceSummaryViewModelLine);
      }
      uint64_t v26 = v28 + 1;
    }
    while (v26 != v79);
    swift_bridgeObjectRelease_n();
    LOBYTE(a4) = v71;
    uint64_t v22 = v70;
    if (!v27[2]) {
      goto LABEL_45;
    }
LABEL_34:
    uint64_t v51 = *(void *)&v22[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_leadingEntities];
    if (v51)
    {
      uint64_t v52 = *(void *)(v51 + 16);
      if (v52)
      {
        uint64_t v53 = 0;
        while (*(unsigned char *)(v51 + v53 + 32) != 2)
        {
          if (v52 == ++v53) {
            goto LABEL_39;
          }
        }
        swift_bridgeObjectRetain();
        id v64 = [a1 geoMapItem];
        if (v64)
        {
          id v65 = [self _itemWithGeoMapItem:v64];
          if (v65)
          {
            uint64_t v66 = v65;
            uint64_t v67 = v27;
            id v68 = [v65 _styleAttributes];
            unint64_t v54 = sub_10021EFD8((uint64_t)v68, 1, 0);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();

            uint64_t v27 = v67;
            a1 = v85;
            goto LABEL_40;
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        unint64_t v54 = 0xF000000000000007;
        a1 = v85;
        goto LABEL_40;
      }
    }
LABEL_39:
    unint64_t v54 = 0xF000000000000007;
LABEL_40:
    id v55 = [a1 geoMapItem];
    uint64_t v56 = (uint64_t)v55;
    if (v55)
    {
      id v57 = [v55 _childItems];
      swift_unknownObjectRelease();
      if (v57)
      {
        sub_100100830(0, &qword_1015D5A38);
        unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1002207CC(v58, a5);
        id v57 = v59;
        uint64_t v56 = v60;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v56 = 0;
      }
    }
    else
    {
      id v57 = 0;
    }
    uint64_t v62 = static Color.clear.getter();
    id v63 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
    id v61 = sub_1001A035C((unint64_t)v27, v54, 0xF000000000000007, (uint64_t)v57, v56, 0, 1, 0, v62, a4 & 1);

    return (uint64_t)v61;
  }
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (_swiftEmptyArrayStorage[2]) {
    goto LABEL_34;
  }
LABEL_45:

  swift_bridgeObjectRelease();
  return 0;
}

void sub_1002093C4(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_1000FF33C(&qword_1015D2AD8);
  *(void *)&double v12 = __chkstk_darwin(v11 - 8).n128_u64[0];
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a1 geoMapItem:v12];
  if (v15)
  {
    id v16 = [self _itemWithGeoMapItem:v15];
    if (v16)
    {
      uint64_t v17 = v16;
      id v18 = [v16 name];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v37 = a5;
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v36 = a4;
        uint64_t v21 = v20;
        unint64_t v23 = v22;

        uint64_t v34 = v5;
        uint64_t v35 = a2;
        uint64_t v24 = v21;
        uint64_t v25 = v36;
        uint64_t v33 = a3;
        sub_100217338(a1, a2, v24, v23, a3, v36, (uint64_t)v14, v17);
        swift_bridgeObjectRelease();
        uint64_t v26 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, v26) == 1)
        {
          sub_1000FF2E0((uint64_t)v14, &qword_1015D2AD8);
          uint64_t v28 = v35[16];
          if (v28)
          {
            swift_retain();
            sub_1002093C4(a1, v28, v33, v25);
            swift_unknownObjectRelease();

            swift_release();
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v37, 1, 1, v26);
            swift_unknownObjectRelease();
          }
        }
        else
        {

          swift_unknownObjectRelease();
          uint64_t v31 = v37;
          sub_100223DBC((uint64_t)v14, v37, type metadata accessor for PlaceSummaryViewModelUnit);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
        }
        return;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v29 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  unint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);

  v30(a5, 1, 1, v29);
}

uint64_t sub_100209790(uint64_t a1, uint64_t a2, int a3)
{
  return sub_10020C19C(a1, a2, a3, (uint64_t (*)(__n128))sub_1002666C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1002097D0, (uint64_t (*)(void, void))sub_1002215EC);
}

uint64_t sub_1002097D0@<X0>(void *a1@<X0>, int8x16_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100217E8C(a1, a2, a3, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1000FF2E0((uint64_t)v10, &qword_1015D2AD8);
    uint64_t v13 = a2[8].i64[0];
    if (v13)
    {
      swift_retain();
      sub_1002097D0(a1, v13, a3);
      return swift_release();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a4, 1, 1, v11);
    }
  }
  else
  {
    sub_100223DBC((uint64_t)v10, a4, type metadata accessor for PlaceSummaryViewModelUnit);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a4, 0, 1, v11);
  }
}

void sub_100209984(unsigned char *a1, char *a2, int a3)
{
  int v119 = a3;
  v165 = a2;
  uint64_t v117 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v117);
  unint64_t v118 = (void *)((char *)v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v147 = sub_1000FF33C(&qword_1015D5A88);
  uint64_t v5 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  v146 = (char *)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1000FF33C(&qword_1015D5A90);
  uint64_t v7 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  v144 = (char *)v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1000FF33C(&qword_1015D5A98);
  uint64_t v9 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  v142 = (char *)v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v11 - 8);
  v152 = (char *)v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for AttributedString();
  uint64_t v13 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  v150 = (char *)v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v159 = *(void *)(v18 - 8);
  uint64_t v160 = v18;
  __chkstk_darwin(v18);
  uint64_t v164 = (uint64_t)v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v158 = (uint64_t)v115 - v21;
  uint64_t v22 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v121 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v128 = (uint64_t)v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v120 = (uint64_t)v115 - v28;
  uint64_t v29 = (char *)sub_1002666D4();
  if (!v29) {
    return;
  }
  uint64_t v30 = *(void *)&v29[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines];
  uint64_t v127 = *(void *)(v30 + 16);
  if (!v127)
  {
    uint64_t v33 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_65;
    }
    goto LABEL_72;
  }
  unint64_t v116 = v29;
  uint64_t v157 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  uint64_t v133 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle;
  v154 = &v165[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_typedAutocompleteQuery];
  uint64_t v155 = OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type;
  uint64_t v126 = v30 + 32;
  unsigned int v140 = enum case for ListFormatStyle.ListType.and<A, B>(_:);
  v139 = (void (**)(char *, void, uint64_t))(v7 + 104);
  v138 = (void (**)(char *, void, uint64_t))(v5 + 104);
  v137 = (void (**)(char *, uint64_t))(v5 + 8);
  v136 = (void (**)(char *, uint64_t))(v7 + 8);
  v135 = (void (**)(char *, uint64_t))(v9 + 8);
  v149 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v148 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  unsigned int v134 = enum case for ListFormatStyle.Width.standard<A, B>(_:);
  v156 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56);
  uint64_t v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48);
  v123 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56);
  v122 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
  v115[1] = v30;
  swift_bridgeObjectRetain_n();
  uint64_t v32 = 0;
  uint64_t v33 = _swiftEmptyArrayStorage;
  v161 = a1;
  uint64_t v34 = v160;
  uint64_t v124 = v25;
  v153 = v31;
  v141 = v17;
  v125 = v24;
  do
  {
    uint64_t v131 = v32;
    uint64_t v35 = (unint64_t *)(v126 + 16 * v32);
    unint64_t v36 = *v35;
    int v129 = *((unsigned __int8 *)v35 + 8);
    int v130 = *((unsigned __int8 *)v35 + 9);
    if (v36 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    v132 = v33;
    if (v37)
    {
      unint64_t v168 = v36 & 0xC000000000000001;
      uint64_t v38 = 4;
      v169 = _swiftEmptyArrayStorage;
      uint64_t v166 = v37;
      unint64_t v167 = v36;
      uint64_t v39 = v34;
      while (1)
      {
        uint64_t v40 = v38 - 4;
        if (v168)
        {
          uint64_t v41 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v42 = v38 - 3;
          if (__OFADD__(v40, 1)) {
            goto LABEL_74;
          }
        }
        else
        {
          uint64_t v41 = *(void *)(v36 + 8 * v38);
          swift_retain();
          uint64_t v42 = v38 - 3;
          if (__OFADD__(v40, 1))
          {
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
            goto LABEL_77;
          }
        }
        if (*(void *)(v41 + 104) >> 60 == 3)
        {
          uint64_t v162 = v41;
          uint64_t v163 = v42;
          uint64_t v43 = sub_100221850(a1);
          uint64_t v45 = v44;
          if (v43[2] == 1)
          {
            uint64_t v47 = v43[4];
            unint64_t v46 = v43[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            type metadata accessor for PlaceSummaryStackedImageViewModel(0);
            uint64_t v48 = swift_allocObject();
            uint64_t v171 = 0;
            sub_1000FF33C((uint64_t *)&unk_1015D5AB0);
            Published.init(initialValue:)();
            *(void *)(v48 + OBJC_IVAR____TtC4Maps33PlaceSummaryStackedImageViewModel_imageSpecs) = v45;
            uint64_t v49 = HIBYTE(v46) & 0xF;
            if ((v46 & 0x2000000000000000) == 0) {
              uint64_t v49 = v47 & 0xFFFFFFFFFFFFLL;
            }
            if (v49)
            {
              swift_bridgeObjectRetain();
              AttributeContainer.init()();
              unint64_t v50 = v150;
              AttributedString.init(_:attributes:)();
              UUID.init()();
              uint64_t v51 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
              uint64_t v52 = v151;
              (*v149)(&v17[v51[12]], 1, 1, v151);
              uint64_t v53 = v52;
              uint64_t v31 = v153;
              (*v148)(&v17[v51[5]], v50, v53);
              unint64_t v54 = &v17[v51[6]];
              *(void *)unint64_t v54 = 0;
              *((void *)v54 + 1) = 0;
              *(void *)&v17[v51[7]] = 0;
              *(void *)&v17[v51[8]] = 0;
              *(void *)&v17[v51[9]] = 0;
              *(void *)&v17[v51[10]] = v48;
              id v55 = &v17[v51[11]];
              *(void *)id v55 = 1;
              v55[8] = 0;
              swift_storeEnumTagMultiPayload();
              (*v156)(v17, 0, 1, v39);
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              (*v156)(v17, 1, 1, v39);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
            }
            a1 = v161;
          }
          else
          {
            v170 = v43;
            id v61 = v144;
            uint64_t v62 = v145;
            (*v139)(v144, v140, v145);
            id v63 = v146;
            uint64_t v64 = v147;
            (*v138)(v146, v134, v147);
            sub_1000FF33C((uint64_t *)&unk_1015CE230);
            sub_1001010F8(&qword_1015D5AA0, (uint64_t *)&unk_1015CE230);
            id v65 = v142;
            static FormatStyle.list<A>(type:width:)();
            (*v137)(v63, v64);
            (*v136)(v61, v62);
            sub_1001010F8(&qword_1015D5AA8, &qword_1015D5A98);
            uint64_t v66 = v143;
            Sequence.formatted<A>(_:)();
            (*v135)(v65, v66);
            swift_bridgeObjectRelease();
            uint64_t v68 = v171;
            unint64_t v67 = v172;
            type metadata accessor for PlaceSummaryStackedImageViewModel(0);
            uint64_t v69 = swift_allocObject();
            v170 = 0;
            sub_1000FF33C((uint64_t *)&unk_1015D5AB0);
            Published.init(initialValue:)();
            *(void *)(v69 + OBJC_IVAR____TtC4Maps33PlaceSummaryStackedImageViewModel_imageSpecs) = v45;
            uint64_t v70 = HIBYTE(v67) & 0xF;
            if ((v67 & 0x2000000000000000) == 0) {
              uint64_t v70 = v68 & 0xFFFFFFFFFFFFLL;
            }
            if (v70)
            {
              swift_bridgeObjectRetain();
              AttributeContainer.init()();
              int v71 = v150;
              AttributedString.init(_:attributes:)();
              uint64_t v17 = v141;
              UUID.init()();
              uint64_t v72 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
              uint64_t v73 = v151;
              (*v149)(&v17[v72[12]], 1, 1, v151);
              (*v148)(&v17[v72[5]], v71, v73);
              uint64_t v74 = &v17[v72[6]];
              *(void *)uint64_t v74 = 0;
              *((void *)v74 + 1) = 0;
              *(void *)&v17[v72[7]] = 0;
              *(void *)&v17[v72[8]] = 0;
              *(void *)&v17[v72[9]] = 0;
              *(void *)&v17[v72[10]] = v69;
              uint64_t v75 = &v17[v72[11]];
              *(void *)uint64_t v75 = 1;
              v75[8] = 0;
              uint64_t v39 = v160;
              swift_storeEnumTagMultiPayload();
              (*v156)(v17, 0, 1, v39);
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v17 = v141;
              uint64_t v39 = v160;
              (*v156)(v141, 1, 1, v160);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
            }
            a1 = v161;
            uint64_t v31 = v153;
          }
          unint64_t v36 = v167;
          uint64_t v42 = v163;
          goto LABEL_46;
        }
        uint64_t v56 = *(void **)&a1[v157];
        if (v56) {
          break;
        }
        int v76 = *(void **)&a1[v133];
        if (v76)
        {
          id v58 = v76;
          Handle.prettyName.getter();
          if (!v77) {
            Handle.identifier.getter();
          }
LABEL_33:
          NSString v78 = String._bridgeToObjectiveC()();

          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        uint64_t v93 = v165;
        unint64_t v87 = 0;
        uint64_t v80 = 0;
        unint64_t v82 = 0;
LABEL_40:
        id v88 = v165;
        sub_100215FD4(v80, v82, v87, *(unsigned char *)(*(void *)&v165[v155] + OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, (uint64_t)v17);
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v36 = v167;
        uint64_t v39 = v160;
LABEL_46:
        if ((*v31)(v17, 1, v39) == 1)
        {
          sub_1000FF2E0((uint64_t)v17, &qword_1015D2AD8);
        }
        else
        {
          uint64_t v89 = v158;
          sub_100223DBC((uint64_t)v17, v158, type metadata accessor for PlaceSummaryViewModelUnit);
          sub_100223DBC(v89, v164, type metadata accessor for PlaceSummaryViewModelUnit);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v169 = (void *)sub_1001D00BC(0, v169[2] + 1, 1, (unint64_t)v169);
          }
          unint64_t v91 = v169[2];
          unint64_t v90 = v169[3];
          if (v91 >= v90 >> 1) {
            v169 = (void *)sub_1001D00BC(v90 > 1, v91 + 1, 1, (unint64_t)v169);
          }
          uint64_t v92 = v169;
          v169[2] = v91 + 1;
          sub_100223DBC(v164, (uint64_t)v92+ ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80))+ *(void *)(v159 + 72) * v91, type metadata accessor for PlaceSummaryViewModelUnit);
        }
        ++v38;
        if (v42 == v166) {
          goto LABEL_54;
        }
      }
      id v57 = self;
      id v58 = v56;
      id v59 = [v57 stringFromContact:v58 style:0];
      if (v59)
      {
        uint64_t v60 = v59;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        goto LABEL_33;
      }
      id v79 = [v58 givenName];
      if (!v79) {
        goto LABEL_75;
      }
      NSString v78 = v79;

LABEL_36:
      uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v82 = v81;

      int v83 = v165;
      NSString v84 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRetain();
      NSString v85 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v86 = [v84 _maps_prefixMatchesForSearchString:v85];

      if (v86)
      {
        sub_100100830(0, (unint64_t *)&unk_1015D5A28);
        unint64_t v87 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        unint64_t v87 = 0;
      }
      a1 = v161;
      goto LABEL_40;
    }
    v169 = _swiftEmptyArrayStorage;
    uint64_t v39 = v34;
LABEL_54:
    uint64_t v34 = v39;
    swift_bridgeObjectRelease_n();
    char v94 = v130;
    uint64_t v95 = sub_10021CFF0((uint64_t)v169, v130);
    swift_bridgeObjectRelease();
    uint64_t v96 = (uint64_t)v125;
    if (v95[2])
    {
      UUID.init()();
      uint64_t v97 = v124;
      *(void *)(v96 + *(int *)(v124 + 20)) = v95;
      uint64_t v98 = v97;
      *(unsigned char *)(v96 + *(int *)(v97 + 24)) = v129;
      *(unsigned char *)(v96 + *(int *)(v97 + 28)) = v94;
      (*v123)(v96, 0, 1, v97);
    }
    else
    {
      uint64_t v99 = v124;
      (*v123)((uint64_t)v125, 1, 1, v124);
      swift_bridgeObjectRelease();
      uint64_t v98 = v99;
    }
    swift_bridgeObjectRelease();
    uint64_t v33 = v132;
    if ((*v122)(v96, 1, v98) == 1)
    {
      sub_1000FF2E0(v96, (uint64_t *)&unk_1015D59D0);
    }
    else
    {
      uint64_t v100 = v120;
      sub_100223DBC(v96, v120, type metadata accessor for PlaceSummaryViewModelLine);
      sub_100223DBC(v100, v128, type metadata accessor for PlaceSummaryViewModelLine);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = (void *)sub_1001D08A4(0, v33[2] + 1, 1, (unint64_t)v33);
      }
      unint64_t v102 = v33[2];
      unint64_t v101 = v33[3];
      if (v102 >= v101 >> 1) {
        uint64_t v33 = (void *)sub_1001D08A4(v101 > 1, v102 + 1, 1, (unint64_t)v33);
      }
      v33[2] = v102 + 1;
      sub_100223DBC(v128, (uint64_t)v33+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(void *)(v121 + 72) * v102, type metadata accessor for PlaceSummaryViewModelLine);
    }
    uint64_t v32 = v131 + 1;
  }
  while (v131 + 1 != v127);
  swift_bridgeObjectRelease_n();
  uint64_t v29 = v116;
  if (!v33[2])
  {
LABEL_72:

    swift_bridgeObjectRelease();
    return;
  }
LABEL_65:
  uint64_t v103 = v29;
  id v104 = [self sharedCache];
  if (!v104) {
    goto LABEL_76;
  }
  Swift::Int v105 = v104;
  id v106 = [v104 searchImage];

  if (v106)
  {
    uint64_t v107 = (uint64_t)v118;
    *unint64_t v118 = v106;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for PlaceSummaryImageViewModel(0);
    unint64_t v108 = swift_allocObject();
    uint64_t v171 = 0;
    sub_1000FF33C((uint64_t *)&unk_1015D23C8);
    Published.init(initialValue:)();
    UUID.init()();
    sub_100223DBC(v107, v108 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    unint64_t v109 = v108 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
    *(void *)unint64_t v109 = 0;
    *(unsigned char *)(v109 + 8) = 1;
    uint64_t v110 = *(void **)&a1[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
    if (v110)
    {
      id v111 = v110;
      unint64_t v112 = sub_10021F208(v110, 0, 0);

      if ((~v112 & 0xF000000000000007) != 0)
      {
        swift_release();
        unint64_t v108 = v112;
      }
    }
    sub_10012E3D8(v108);
    uint64_t v113 = static Color.clear.getter();
    id v114 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
    sub_1001A035C((unint64_t)v33, v108, 0xF000000000000007, 0, 0, 0, 1, 0, v113, v119 & 1);
    sub_10012E4B0(v108);
  }
  else
  {
LABEL_77:
    __break(1u);
  }
}

id sub_10020AE48(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t (*a6)(id, id, uint64_t))
{
  swift_getObjCClassMetadata();
  id v10 = a3;
  id v11 = a4;
  uint64_t v12 = (void *)a6(v10, v11, a5);

  return v12;
}

uint64_t sub_10020AED4(uint64_t a1, uint64_t a2, int a3)
{
  return sub_10020AF14(a1, a2, a3, (uint64_t (*)(__n128))sub_100266858, (void (*)(uint64_t, uint64_t, uint64_t))sub_10020B66C, (uint64_t (*)(void))sub_100222F10);
}

uint64_t sub_10020AF14(uint64_t a1, uint64_t a2, int a3, uint64_t (*a4)(__n128), void (*a5)(uint64_t, uint64_t, uint64_t), uint64_t (*a6)(void))
{
  uint64_t v78 = a2;
  id v79 = a5;
  uint64_t v77 = a1;
  uint64_t v9 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v75 = (uint64_t)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v73 = (uint64_t)v56 - v14;
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v61 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v68 = (uint64_t)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v60 = (uint64_t)v56 - v22;
  uint64_t v23 = a4(v21);
  if (!v23) {
    return 0;
  }
  uint64_t v24 = (void *)v23;
  uint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v67 = *(void *)(v25 + 16);
  if (v67)
  {
    id v57 = v24;
    id v58 = a6;
    int v59 = a3;
    uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    uint64_t v62 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
    id v65 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
    uint64_t v66 = v25 + 32;
    v56[1] = v25;
    swift_bridgeObjectRetain_n();
    uint64_t v27 = 0;
    uint64_t v28 = _swiftEmptyArrayStorage;
    uint64_t v63 = v18;
    uint64_t v64 = v17;
    do
    {
      uint64_t v72 = v28;
      uint64_t v29 = (uint64_t *)(v66 + 16 * v27);
      unint64_t v30 = *v29;
      int v31 = *((unsigned __int8 *)v29 + 8);
      int v32 = *((unsigned __int8 *)v29 + 9);
      if ((unint64_t)*v29 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v33 = result;
      }
      else
      {
        uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
      }
      uint64_t v70 = v27;
      int v71 = v32;
      int v69 = v31;
      if (v33)
      {
        if (v33 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v35 = 0;
        unint64_t v36 = _swiftEmptyArrayStorage;
        do
        {
          if ((v30 & 0xC000000000000001) != 0)
          {
            uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v37 = *(void *)(v30 + 8 * v35 + 32);
            swift_retain();
          }
          v79(v77, v37, v78);
          swift_release();
          if ((*v26)(v11, 1, v76) == 1)
          {
            sub_1000FF2E0((uint64_t)v11, &qword_1015D2AD8);
          }
          else
          {
            uint64_t v38 = v73;
            sub_100223DBC((uint64_t)v11, v73, type metadata accessor for PlaceSummaryViewModelUnit);
            sub_100223DBC(v38, v75, type metadata accessor for PlaceSummaryViewModelUnit);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v36 = (void *)sub_1001D00BC(0, v36[2] + 1, 1, (unint64_t)v36);
            }
            unint64_t v40 = v36[2];
            unint64_t v39 = v36[3];
            if (v40 >= v39 >> 1) {
              unint64_t v36 = (void *)sub_1001D00BC(v39 > 1, v40 + 1, 1, (unint64_t)v36);
            }
            v36[2] = v40 + 1;
            sub_100223DBC(v75, (uint64_t)v36+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v40, type metadata accessor for PlaceSummaryViewModelUnit);
          }
          ++v35;
        }
        while (v33 != v35);
      }
      else
      {
        unint64_t v36 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n();
      char v41 = v71;
      uint64_t v42 = sub_10021CFF0((uint64_t)v36, v71);
      swift_bridgeObjectRelease();
      if (v42[2])
      {
        uint64_t v43 = (uint64_t)v64;
        UUID.init()();
        uint64_t v44 = v63;
        *(void *)(v43 + *(int *)(v63 + 20)) = v42;
        *(unsigned char *)(v43 + *(int *)(v44 + 24)) = v69;
        *(unsigned char *)(v43 + *(int *)(v44 + 28)) = v41;
        (*v62)(v43, 0, 1, v44);
      }
      else
      {
        uint64_t v44 = v63;
        uint64_t v43 = (uint64_t)v64;
        (*v62)((uint64_t)v64, 1, 1, v63);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v45 = v70;
      int v46 = (*v65)(v43, 1, v44);
      uint64_t v28 = v72;
      if (v46 == 1)
      {
        sub_1000FF2E0(v43, (uint64_t *)&unk_1015D59D0);
      }
      else
      {
        uint64_t v47 = v43;
        uint64_t v48 = v60;
        sub_100223DBC(v47, v60, type metadata accessor for PlaceSummaryViewModelLine);
        sub_100223DBC(v48, v68, type metadata accessor for PlaceSummaryViewModelLine);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v28 = (void *)sub_1001D08A4(0, v28[2] + 1, 1, (unint64_t)v28);
        }
        unint64_t v50 = v28[2];
        unint64_t v49 = v28[3];
        if (v50 >= v49 >> 1) {
          uint64_t v28 = (void *)sub_1001D08A4(v49 > 1, v50 + 1, 1, (unint64_t)v28);
        }
        v28[2] = v50 + 1;
        sub_100223DBC(v68, (uint64_t)v28+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v50, type metadata accessor for PlaceSummaryViewModelLine);
      }
      uint64_t v27 = v45 + 1;
    }
    while (v27 != v67);
    swift_bridgeObjectRelease_n();
    LOBYTE(a3) = v59;
    a6 = v58;
    uint64_t v24 = v57;
    if (!v28[2]) {
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  uint64_t v28 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
  {
LABEL_36:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_34:
  uint64_t v51 = swift_bridgeObjectRetain();
  unint64_t v52 = a6(v51);
  swift_bridgeObjectRelease();
  uint64_t v53 = static Color.clear.getter();
  id v54 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
  id v55 = sub_1001A035C((unint64_t)v28, v52, 0xF000000000000007, 0, 0, 0, 1, 0, v53, a3 & 1);

  return (uint64_t)v55;
}

uint64_t sub_10020B66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_10020C928(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_100218508, (void (*)(uint64_t, uint64_t, uint64_t))sub_10020B66C, a4);
}

uint64_t sub_10020B6B0(void *a1, char *a2, void *a3, int a4, double a5)
{
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  uint64_t v8 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v74 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v72 = (uint64_t)&v55 - v13;
  uint64_t v14 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v66 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v59 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v64 = (uint64_t)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = __chkstk_darwin(v17).n128_u64[0];
  uint64_t v58 = (uint64_t)&v55 - v19;
  if (objc_msgSend(a1, "type", v18) != 3)
  {
    uint64_t v20 = (char *)sub_100265AE4(0);
    if (v20) {
      goto LABEL_3;
    }
    return 0;
  }
  uint64_t v20 = (char *)sub_1002669CC();
  if (!v20) {
    return 0;
  }
LABEL_3:
  uint64_t v21 = *(void *)&v20[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines];
  uint64_t v63 = *(void *)(v21 + 16);
  if (v63)
  {
    uint64_t v56 = v20;
    int v57 = a4;
    uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    uint64_t v60 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
    uint64_t v61 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    uint64_t v62 = v21 + 32;
    uint64_t v55 = v21;
    swift_bridgeObjectRetain_n();
    uint64_t v23 = 0;
    uint64_t v24 = _swiftEmptyArrayStorage;
    int v71 = a1;
    do
    {
      uint64_t v25 = (unint64_t *)(v62 + 16 * v23);
      unint64_t v26 = *v25;
      int v27 = *((unsigned __int8 *)v25 + 8);
      int v69 = *((unsigned __int8 *)v25 + 9);
      if (v26 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v28 = result;
      }
      else
      {
        uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
      }
      uint64_t v68 = v24;
      uint64_t v70 = v23;
      int v67 = v27;
      if (v28)
      {
        if (v28 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v30 = 0;
        int v31 = _swiftEmptyArrayStorage;
        do
        {
          if ((v26 & 0xC000000000000001) != 0)
          {
            uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v32 = *(void *)(v26 + 8 * v30 + 32);
            swift_retain();
          }
          sub_10020BF04(a1, v32, v76, v77, (uint64_t)v10);
          swift_release();
          if ((*v22)(v10, 1, v75) == 1)
          {
            sub_1000FF2E0((uint64_t)v10, &qword_1015D2AD8);
          }
          else
          {
            uint64_t v33 = v72;
            sub_100223DBC((uint64_t)v10, v72, type metadata accessor for PlaceSummaryViewModelUnit);
            sub_100223DBC(v33, v74, type metadata accessor for PlaceSummaryViewModelUnit);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              int v31 = (void *)sub_1001D00BC(0, v31[2] + 1, 1, (unint64_t)v31);
            }
            unint64_t v35 = v31[2];
            unint64_t v34 = v31[3];
            if (v35 >= v34 >> 1) {
              int v31 = (void *)sub_1001D00BC(v34 > 1, v35 + 1, 1, (unint64_t)v31);
            }
            v31[2] = v35 + 1;
            sub_100223DBC(v74, (uint64_t)v31+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v35, type metadata accessor for PlaceSummaryViewModelUnit);
            a1 = v71;
          }
          ++v30;
        }
        while (v28 != v30);
      }
      else
      {
        int v31 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n();
      char v36 = v69;
      uint64_t v37 = sub_10021CFF0((uint64_t)v31, v69);
      swift_bridgeObjectRelease();
      if (v37[2])
      {
        uint64_t v38 = (uint64_t)v66;
        UUID.init()();
        uint64_t v39 = v65;
        *(void *)(v38 + *(int *)(v65 + 20)) = v37;
        *(unsigned char *)(v38 + *(int *)(v39 + 24)) = v67;
        *(unsigned char *)(v38 + *(int *)(v39 + 28)) = v36;
        (*v60)(v38, 0, 1, v39);
      }
      else
      {
        uint64_t v39 = v65;
        uint64_t v38 = (uint64_t)v66;
        (*v60)((uint64_t)v66, 1, 1, v65);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v24 = v68;
      if ((*v61)(v38, 1, v39) == 1)
      {
        sub_1000FF2E0(v38, (uint64_t *)&unk_1015D59D0);
      }
      else
      {
        uint64_t v40 = v38;
        uint64_t v41 = v58;
        sub_100223DBC(v40, v58, type metadata accessor for PlaceSummaryViewModelLine);
        sub_100223DBC(v41, v64, type metadata accessor for PlaceSummaryViewModelLine);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v24 = (void *)sub_1001D08A4(0, v24[2] + 1, 1, (unint64_t)v24);
        }
        unint64_t v43 = v24[2];
        unint64_t v42 = v24[3];
        if (v43 >= v42 >> 1) {
          uint64_t v24 = (void *)sub_1001D08A4(v42 > 1, v43 + 1, 1, (unint64_t)v24);
        }
        void v24[2] = v43 + 1;
        sub_100223DBC(v64, (uint64_t)v24+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v43, type metadata accessor for PlaceSummaryViewModelLine);
      }
      uint64_t v23 = v70 + 1;
    }
    while (v70 + 1 != v63);
    swift_bridgeObjectRelease_n();
    LOBYTE(a4) = v57;
    uint64_t v20 = v56;
    if (!v24[2]) {
      goto LABEL_42;
    }
    goto LABEL_37;
  }
  uint64_t v24 = _swiftEmptyArrayStorage;
  if (_swiftEmptyArrayStorage[2])
  {
LABEL_37:
    uint64_t v45 = *(void *)&v20[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_leadingEntities];
    swift_bridgeObjectRetain();
    id v46 = sub_100223118(a1, v45);
    swift_bridgeObjectRelease();
    id v47 = [a1 mapItem];
    id v48 = v47;
    if (!v47) {
      goto LABEL_43;
    }
    id v49 = [v47 _geoMapItem];

    if (!v49)
    {
      id v48 = 0;
      goto LABEL_45;
    }
    id v48 = [v49 _childItems];
    swift_unknownObjectRelease();
    if (v48)
    {
      sub_100100830(0, &qword_1015D5A38);
      unint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1002207CC(v50, a5);
      id v48 = v51;
      id v49 = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_43:
      id v49 = 0;
    }
LABEL_45:
    uint64_t v53 = static Color.clear.getter();
    id v54 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
    id v44 = sub_1001A035C((unint64_t)v24, (unint64_t)v46, 0xF000000000000007, (uint64_t)v48, (uint64_t)v49, 0, 1, 0, v53, a4 & 1);

    return (uint64_t)v44;
  }
LABEL_42:

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10020BF04@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100218B68(a1, a2, a3, a4, (uint64_t)v12);
  uint64_t v13 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1000FF2E0((uint64_t)v12, &qword_1015D2AD8);
    uint64_t v15 = *(void *)(a2 + 128);
    if (v15)
    {
      swift_retain();
      sub_10020BF04(a1, v15, a3, a4);
      return swift_release();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a5, 1, 1, v13);
    }
  }
  else
  {
    sub_100223DBC((uint64_t)v12, a5, type metadata accessor for PlaceSummaryViewModelUnit);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a5, 0, 1, v13);
  }
}

uint64_t sub_10020C15C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_10020C19C(a1, a2, a3, (uint64_t (*)(__n128))sub_100266B4C, (void (*)(uint64_t, uint64_t, uint64_t))sub_10020C8FC, (uint64_t (*)(void, void))sub_100223250);
}

uint64_t sub_10020C19C(uint64_t a1, uint64_t a2, int a3, uint64_t (*a4)(__n128), void (*a5)(uint64_t, uint64_t, uint64_t), uint64_t (*a6)(void, void))
{
  uint64_t v77 = a2;
  uint64_t v78 = a5;
  uint64_t v79 = a1;
  uint64_t v9 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v75 = (uint64_t)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v73 = (uint64_t)v56 - v14;
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v61 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v68 = (uint64_t)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v60 = (uint64_t)v56 - v22;
  uint64_t v23 = a4(v21);
  if (!v23) {
    return 0;
  }
  uint64_t v24 = (char *)v23;
  uint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v67 = *(void *)(v25 + 16);
  if (v67)
  {
    int v57 = v24;
    uint64_t v58 = a6;
    int v59 = a3;
    unint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    uint64_t v62 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
    uint64_t v65 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
    uint64_t v66 = v25 + 32;
    v56[1] = v25;
    swift_bridgeObjectRetain_n();
    uint64_t v27 = 0;
    uint64_t v28 = _swiftEmptyArrayStorage;
    uint64_t v63 = v18;
    uint64_t v64 = v17;
    do
    {
      uint64_t v72 = v28;
      uint64_t v29 = (uint64_t *)(v66 + 16 * v27);
      unint64_t v30 = *v29;
      int v31 = *((unsigned __int8 *)v29 + 8);
      int v32 = *((unsigned __int8 *)v29 + 9);
      if ((unint64_t)*v29 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v33 = result;
      }
      else
      {
        uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
      }
      uint64_t v70 = v27;
      int v71 = v32;
      int v69 = v31;
      if (v33)
      {
        if (v33 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v35 = 0;
        char v36 = _swiftEmptyArrayStorage;
        do
        {
          if ((v30 & 0xC000000000000001) != 0)
          {
            uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v37 = *(void *)(v30 + 8 * v35 + 32);
            swift_retain();
          }
          v78(v79, v37, v77);
          swift_release();
          if ((*v26)(v11, 1, v76) == 1)
          {
            sub_1000FF2E0((uint64_t)v11, &qword_1015D2AD8);
          }
          else
          {
            uint64_t v38 = v73;
            sub_100223DBC((uint64_t)v11, v73, type metadata accessor for PlaceSummaryViewModelUnit);
            sub_100223DBC(v38, v75, type metadata accessor for PlaceSummaryViewModelUnit);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v36 = (void *)sub_1001D00BC(0, v36[2] + 1, 1, (unint64_t)v36);
            }
            unint64_t v40 = v36[2];
            unint64_t v39 = v36[3];
            if (v40 >= v39 >> 1) {
              char v36 = (void *)sub_1001D00BC(v39 > 1, v40 + 1, 1, (unint64_t)v36);
            }
            v36[2] = v40 + 1;
            sub_100223DBC(v75, (uint64_t)v36+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v40, type metadata accessor for PlaceSummaryViewModelUnit);
          }
          ++v35;
        }
        while (v33 != v35);
      }
      else
      {
        char v36 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n();
      char v41 = v71;
      unint64_t v42 = sub_10021CFF0((uint64_t)v36, v71);
      swift_bridgeObjectRelease();
      if (v42[2])
      {
        uint64_t v43 = (uint64_t)v64;
        UUID.init()();
        uint64_t v44 = v63;
        *(void *)(v43 + *(int *)(v63 + 20)) = v42;
        *(unsigned char *)(v43 + *(int *)(v44 + 24)) = v69;
        *(unsigned char *)(v43 + *(int *)(v44 + 28)) = v41;
        (*v62)(v43, 0, 1, v44);
      }
      else
      {
        uint64_t v44 = v63;
        uint64_t v43 = (uint64_t)v64;
        (*v62)((uint64_t)v64, 1, 1, v63);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v45 = v70;
      int v46 = (*v65)(v43, 1, v44);
      uint64_t v28 = v72;
      if (v46 == 1)
      {
        sub_1000FF2E0(v43, (uint64_t *)&unk_1015D59D0);
      }
      else
      {
        uint64_t v47 = v43;
        uint64_t v48 = v60;
        sub_100223DBC(v47, v60, type metadata accessor for PlaceSummaryViewModelLine);
        sub_100223DBC(v48, v68, type metadata accessor for PlaceSummaryViewModelLine);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v28 = (void *)sub_1001D08A4(0, v28[2] + 1, 1, (unint64_t)v28);
        }
        unint64_t v50 = v28[2];
        unint64_t v49 = v28[3];
        if (v50 >= v49 >> 1) {
          uint64_t v28 = (void *)sub_1001D08A4(v49 > 1, v50 + 1, 1, (unint64_t)v28);
        }
        v28[2] = v50 + 1;
        sub_100223DBC(v68, (uint64_t)v28+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v50, type metadata accessor for PlaceSummaryViewModelLine);
      }
      uint64_t v27 = v45 + 1;
    }
    while (v27 != v67);
    swift_bridgeObjectRelease_n();
    LOBYTE(a3) = v59;
    a6 = v58;
    uint64_t v24 = v57;
    if (!v28[2]) {
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  uint64_t v28 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
  {
LABEL_36:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_34:
  uint64_t v51 = *(void *)&v24[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_leadingEntities];
  swift_bridgeObjectRetain();
  unint64_t v52 = a6(v79, v51);
  swift_bridgeObjectRelease();
  uint64_t v53 = static Color.clear.getter();
  id v54 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
  id v55 = sub_1001A035C((unint64_t)v28, v52, 0xF000000000000007, 0, 0, 0, 1, 0, v53, a3 & 1);

  return (uint64_t)v55;
}

uint64_t sub_10020C8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_10020C928(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_1002192F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10020C8FC, a4);
}

uint64_t sub_10020C928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128)@<X3>, void (*a5)(uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v13 = sub_1000FF33C(&qword_1015D2AD8);
  __n128 v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(a2, a2, v6, a1, a3, v14);
  uint64_t v17 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1000FF2E0((uint64_t)v16, &qword_1015D2AD8);
    uint64_t v19 = *(void *)(a2 + 128);
    if (v19)
    {
      swift_retain();
      a5(a1, v19, a3);
      return swift_release();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a6, 1, 1, v17);
    }
  }
  else
  {
    sub_100223DBC((uint64_t)v16, a6, type metadata accessor for PlaceSummaryViewModelUnit);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a6, 0, 1, v17);
  }
}

uint64_t sub_10020CB6C(int a1)
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v2.super.Class isa = (Class)qword_101611820;
  v12._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v12._object = (void *)0x8000000100F7D9D0;
  v3._object = (void *)0x8000000100F7D9B0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000012;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v12);
  v6._uint64_t countAndFlagsBits = 0xD000000000000013;
  v13._uint64_t countAndFlagsBits = 0xD000000000000030;
  v13._object = (void *)0x8000000100F7DA20;
  v6._object = (void *)0x8000000100F7DA00;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, v2, v7, v13);
  sub_1000FF33C(&qword_1015CE220);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CFA0;
  *(Swift::String *)(inited + 32) = v5;
  *(Swift::String *)(inited + 48) = v8;
  uint64_t v10 = sub_10020CCF4(inited, 0x8000000000000028, 0, a1);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v10;
}

uint64_t sub_10020CCF4(uint64_t a1, unint64_t a2, int a3, int a4)
{
  uint64_t v8 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v73 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v74 = (uint64_t)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v72 = (uint64_t)v53 - v14;
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v59 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v66 = (uint64_t)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v58 = (uint64_t)v53 - v21;
  uint64_t v22 = (char *)sub_100266CC0(a1);
  if (!v22) {
    return 0;
  }
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)&v22[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines];
  uint64_t v65 = *(void *)(v24 + 16);
  if (v65)
  {
    id v54 = v23;
    int v55 = a3;
    unint64_t v56 = a2;
    int v57 = a4;
    uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    uint64_t v60 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
    uint64_t v63 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    uint64_t v64 = v24 + 32;
    v53[1] = v24;
    swift_bridgeObjectRetain_n();
    uint64_t v26 = 0;
    uint64_t v67 = _swiftEmptyArrayStorage;
    uint64_t v71 = v11;
    uint64_t v61 = v18;
    uint64_t v62 = v17;
    do
    {
      uint64_t v27 = (uint64_t *)(v64 + 16 * v26);
      unint64_t v28 = *v27;
      int v29 = *((unsigned __int8 *)v27 + 8);
      int v30 = *((unsigned __int8 *)v27 + 9);
      if ((unint64_t)*v27 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v31 = result;
      }
      else
      {
        uint64_t v31 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
      }
      uint64_t v69 = v26;
      int v70 = v30;
      int v68 = v29;
      if (v31)
      {
        if (v31 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v33 = 0;
        unint64_t v34 = _swiftEmptyArrayStorage;
        do
        {
          if ((v28 & 0xC000000000000001) != 0)
          {
            uint64_t v35 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v35 = *(void **)(v28 + 8 * v33 + 32);
            swift_retain();
          }
          sub_10020D41C(v35, (uint64_t)v10);
          swift_release();
          if ((*v25)(v10, 1, v11) == 1)
          {
            sub_1000FF2E0((uint64_t)v10, &qword_1015D2AD8);
          }
          else
          {
            uint64_t v36 = v72;
            sub_100223DBC((uint64_t)v10, v72, type metadata accessor for PlaceSummaryViewModelUnit);
            sub_100223DBC(v36, v74, type metadata accessor for PlaceSummaryViewModelUnit);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v34 = (void *)sub_1001D00BC(0, v34[2] + 1, 1, (unint64_t)v34);
            }
            unint64_t v38 = v34[2];
            unint64_t v37 = v34[3];
            if (v38 >= v37 >> 1) {
              unint64_t v34 = (void *)sub_1001D00BC(v37 > 1, v38 + 1, 1, (unint64_t)v34);
            }
            v34[2] = v38 + 1;
            sub_100223DBC(v74, (uint64_t)v34+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v38, type metadata accessor for PlaceSummaryViewModelUnit);
            uint64_t v11 = v71;
          }
          ++v33;
        }
        while (v31 != v33);
      }
      else
      {
        unint64_t v34 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n();
      char v39 = v70;
      unint64_t v40 = sub_10021CFF0((uint64_t)v34, v70);
      swift_bridgeObjectRelease();
      if (v40[2])
      {
        uint64_t v41 = (uint64_t)v62;
        UUID.init()();
        uint64_t v42 = v61;
        *(void *)(v41 + *(int *)(v61 + 20)) = v40;
        *(unsigned char *)(v41 + *(int *)(v42 + 24)) = v68;
        *(unsigned char *)(v41 + *(int *)(v42 + 28)) = v39;
        (*v60)(v41, 0, 1, v42);
      }
      else
      {
        uint64_t v42 = v61;
        uint64_t v41 = (uint64_t)v62;
        (*v60)((uint64_t)v62, 1, 1, v61);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      int v43 = (*v63)(v41, 1, v42);
      unint64_t v44 = (unint64_t)v67;
      if (v43 == 1)
      {
        sub_1000FF2E0(v41, (uint64_t *)&unk_1015D59D0);
      }
      else
      {
        uint64_t v45 = v58;
        sub_100223DBC(v41, v58, type metadata accessor for PlaceSummaryViewModelLine);
        sub_100223DBC(v45, v66, type metadata accessor for PlaceSummaryViewModelLine);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v44 = sub_1001D08A4(0, *(void *)(v44 + 16) + 1, 1, v44);
        }
        unint64_t v47 = *(void *)(v44 + 16);
        unint64_t v46 = *(void *)(v44 + 24);
        if (v47 >= v46 >> 1) {
          unint64_t v44 = sub_1001D08A4(v46 > 1, v47 + 1, 1, v44);
        }
        *(void *)(v44 + 16) = v47 + 1;
        unint64_t v48 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
        uint64_t v67 = (void *)v44;
        sub_100223DBC(v66, v44 + v48 + *(void *)(v59 + 72) * v47, type metadata accessor for PlaceSummaryViewModelLine);
      }
      uint64_t v26 = v69 + 1;
    }
    while (v69 + 1 != v65);
    swift_bridgeObjectRelease_n();
    a4 = v57;
    a2 = v56;
    LOBYTE(a3) = v55;
    uint64_t v23 = v54;
    unint64_t v49 = v67;
    if (!v67[2]) {
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  unint64_t v49 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2])
  {
LABEL_36:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_34:
  sub_10012E3C4(a2);
  uint64_t v50 = static Color.clear.getter();
  id v51 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
  id v52 = sub_1001A035C((unint64_t)v49, a2, 0xF000000000000007, 0, 0, 0, a4, 0, v50, a3 & 1);

  return (uint64_t)v52;
}

uint64_t sub_10020D41C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = a1[13];
  if (v7 >> 60 == 6)
  {
    uint64_t v8 = (void *)a1[14];
    uint64_t v9 = a1[12];
    uint64_t v11 = a1[9];
    uint64_t v10 = a1[10];
    uint64_t v26 = a1[11];
    uint64_t v27 = v10;
    uint64_t v13 = a1[7];
    uint64_t v12 = a1[8];
    uint64_t v14 = a1[5];
    uint64_t v30 = a1[6];
    uint64_t v31 = v12;
    uint64_t v15 = a1[4];
    uint64_t v32 = a2;
    uint64_t v16 = a1[3];
    uint64_t v28 = a1[2];
    uint64_t v29 = v15;
    v33[0] = v28;
    v33[1] = v16;
    v33[2] = v15;
    v33[3] = v14;
    v33[4] = v30;
    v33[5] = v13;
    v33[6] = v12;
    v33[7] = v11;
    v33[8] = v10;
    char v34 = v26 & 1;
    uint64_t v35 = v9;
    char v36 = v7 & 1;
    unint64_t v37 = v8;
    id v17 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100211324(v33, 1, (uint64_t)v6);
    uint64_t v18 = v16;
    a2 = v32;
    sub_100223808(v28, v18, v29, v14, v30, v13, v31, v11, v27, v26, v9, v7, v8);
    uint64_t v19 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) != 1)
    {
      sub_100223DBC((uint64_t)v6, a2, type metadata accessor for PlaceSummaryViewModelUnit);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(a2, 0, 1, v19);
    }
  }
  else
  {
    uint64_t v22 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
  }
  sub_1000FF2E0((uint64_t)v6, &qword_1015D2AD8);
  if (a1[16])
  {
    uint64_t v23 = swift_retain();
    sub_10020D41C(v23);
    return swift_release();
  }
  else
  {
    uint64_t v24 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 1, 1, v24);
  }
}

id sub_10020D72C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryViewModelTemplateFactory();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryViewModelTemplateFactory()
{
  return self;
}

void sub_10020D784(id a1@<X3>, id a2@<X7>, uint64_t *a3@<X1>, void *a4@<X4>, void *a5@<X5>, char a6@<W6>, uint64_t *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v15 = a13 & 1;
  uint64_t v16 = a3[2];
  uint64_t v17 = a3[3];
  uint64_t v19 = a3[4];
  uint64_t v18 = a3[5];
  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v27 = a3[12];
  unint64_t v26 = a3[13];
  unint64_t v28 = a3[14];
  switch(v26 >> 60)
  {
    case 1uLL:
      sub_10020EB2C(a3[2], 0, a1, a5, a6 & 1, (uint64_t)a7);
      return;
    case 2uLL:
      char v100 = v16 & 1;
      uint64_t v102 = a3[2];
      uint64_t v105 = a3[9];
      uint64_t v117 = a3[8];
      uint64_t v107 = (void *)a3[14];
      id v120 = (id)a3[13];
      swift_bridgeObjectRetain();
      sub_10020EEF0(v100, v17, a1, a8, a9, (uint64_t)a7);
      v135 = v107;
      uint64_t v133 = v27;
      unint64_t v134 = (unint64_t)v120;
      uint64_t v131 = v24;
      uint64_t v132 = v25;
      uint64_t v36 = v102;
      uint64_t v37 = v105;
      uint64_t v38 = v17;
      uint64_t v39 = v19;
      uint64_t v40 = v20;
      uint64_t v41 = v18;
      uint64_t v42 = v21;
      uint64_t v43 = v117;
      goto LABEL_19;
    case 3uLL:
      uint64_t v44 = (uint64_t)a7;
      switch(a3[2])
      {
        case 1u:
          [a1 _addressFormattedAsCity:v15];
          goto LABEL_47;
        case 2u:
          id v45 = [a1 _addressFormattedAsShortenedAddress:v15];
          goto LABEL_47;
        case 3u:
          goto LABEL_119;
        default:
          id v45 = [a1 _addressFormattedAsName:v15];
          goto LABEL_47;
      }
    case 4uLL:
      sub_10020FB0C(a1, a10 & 1, v16 & 1, (uint64_t)a7);
      return;
    case 5uLL:
      sub_1002103B0(a3[2], a1, (uint64_t)a7);
      return;
    case 6uLL:
      *(void *)&long long v123 = a3[2];
      *((void *)&v123 + 1) = v17;
      *(void *)&long long v124 = v19;
      *((void *)&v124 + 1) = v18;
      *(void *)&long long v125 = v20;
      *((void *)&v125 + 1) = v21;
      *(void *)&long long v126 = v23;
      *((void *)&v126 + 1) = v22;
      *(void *)&long long v127 = v24;
      BYTE8(v127) = v25 & 1;
      *(void *)&long long v128 = v27;
      BYTE8(v128) = v26 & 1;
      unint64_t v129 = v28;
      uint64_t v103 = v16;
      uint64_t v118 = v23;
      id v121 = (id)v26;
      int v55 = (void *)v28;
      uint64_t v56 = v22;
      id v57 = (id)v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100211324(&v123, 1, (uint64_t)a7);
      v135 = v55;
      uint64_t v133 = v27;
      unint64_t v134 = (unint64_t)v121;
      uint64_t v131 = v24;
      uint64_t v132 = v25;
      uint64_t v36 = v103;
      uint64_t v38 = v17;
      uint64_t v39 = v19;
      uint64_t v40 = v20;
      uint64_t v41 = v18;
      uint64_t v42 = v21;
      uint64_t v43 = v118;
      uint64_t v37 = v56;
LABEL_19:
      sub_100223808(v36, v38, v39, v41, v40, v42, v43, v37, v131, v132, v133, v134, v135);
      return;
    case 7uLL:
      if (!a11) {
        goto LABEL_30;
      }
      uint64_t v46 = *(void *)(a11 + 16);
      if (!v46) {
        goto LABEL_30;
      }
      unint64_t v47 = (long long *)(a11 + 32);
      while (1)
      {
        long long v48 = v47[5];
        unint64_t v49 = *((void *)v47 + 12);
        long long v50 = v47[3];
        long long v127 = v47[4];
        long long v51 = v47[1];
        long long v52 = v47[2];
        long long v123 = *v47;
        long long v124 = v51;
        unint64_t v129 = v49;
        long long v128 = v48;
        long long v125 = v52;
        long long v126 = v50;
        if ((BYTE8(v127) & 1) == 0 && (void)v127 == v16) {
          break;
        }
        unint64_t v47 = (long long *)((char *)v47 + 104);
        if (!--v46) {
          goto LABEL_30;
        }
      }
      uint64_t v53 = (uint64_t)a7;
      sub_100223C50((uint64_t)&v123);
      sub_100211324(&v123, 1, v53);
      sub_100223CC8((uint64_t)&v123);
      return;
    case 8uLL:
      if (a6) {
        goto LABEL_30;
      }
      sub_100211AD8(a1, a3[2], a7);
      return;
    case 9uLL:
      sub_100212194(a1, a3[2], (uint64_t)a7);
      return;
    case 0xAuLL:
      if (v26 == 0xA000000000000000 && !(v17 | v16 | v19 | v18 | v20 | v21 | v23 | v22 | v24 | v25 | v27 | v28))
      {
        id v59 = [a1 name:v15];
        if (v59)
        {
          uint64_t v60 = v59;
          uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v63 = v62;

          if (a4)
          {
            if (v63)
            {
              uint64_t v64 = a4;
              NSString v65 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRetain();
              NSString v66 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v67 = [v65 _maps_prefixMatchesForSearchString:v66];

              if (v67)
              {
                sub_100100830(0, (unint64_t *)&unk_1015D5A28);
                unint64_t v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_64:
                sub_100215FD4(v61, v63, v68, *(unsigned char *)(*(void *)&v64[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type]+ OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, (uint64_t)a7);

                swift_bridgeObjectRelease();
                goto LABEL_51;
              }
LABEL_63:
              unint64_t v68 = 0;
              goto LABEL_64;
            }
LABEL_62:
            uint64_t v64 = a4;
            unint64_t v63 = 0;
            goto LABEL_63;
          }
        }
        else
        {
          if (a4)
          {
            uint64_t v61 = 0;
            goto LABEL_62;
          }
          unint64_t v63 = 0;
          uint64_t v61 = 0;
        }
        sub_10020E76C(v61, v63, 0, 0, 0, 0, 0, 0, (uint64_t)a7, 0);
        goto LABEL_51;
      }
      uint64_t v75 = v19 | v17 | v18 | v20 | v21 | v23 | v22 | v24 | v25 | v27;
      if (!v28 && v26 == 0xA000000000000000 && v16 == 1 && !v75)
      {
        uint64_t v44 = (uint64_t)a7;
        id v76 = [a1 _firstLocalizedCategoryName:v15];
        if (v76)
        {
          id v77 = v76;
LABEL_48:
          uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v80 = v79;

LABEL_50:
          sub_10020E76C(v78, v80, 0, 0, 0, 0, 0, 0, v44, 0);
LABEL_51:
          swift_bridgeObjectRelease();
          return;
        }
LABEL_49:
        uint64_t v78 = 0;
        unint64_t v80 = 0;
        goto LABEL_50;
      }
      if (!v28 && v26 == 0xA000000000000000 && v16 == 2 && !v75)
      {
        uint64_t v44 = (uint64_t)a7;
        if (objc_msgSend(a1, "_hasPriceDescription", v15)) {
          id v45 = [a1 _priceDescription];
        }
        else {
          id v45 = [a1 _priceRangeString];
        }
LABEL_47:
        id v77 = v45;
        if (v77) {
          goto LABEL_48;
        }
        goto LABEL_49;
      }
      if (!v28 && v26 == 0xA000000000000000 && v16 == 3 && !v75)
      {
        unint64_t v81 = a7;
        if (!objc_msgSend(a1, "_hasTransitLabels", v15))
        {
          uint64_t v84 = type metadata accessor for PlaceSummaryViewModelUnit(0);
          uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56);
          uint64_t v72 = v84;
          uint64_t v73 = (uint64_t)v81;
          goto LABEL_31;
        }
        UUID.init()();
        *(uint64_t *)((char *)v81
                   + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0) + 20)) = (uint64_t)a1;
        uint64_t v82 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
        id v83 = a1;
        return;
      }
      if (!v28 && v26 == 0xA000000000000000 && v16 == 4 && !v75)
      {
        sub_10021023C((uint64_t)a1, (uint64_t)a7);
        return;
      }
      if (!v28 && v26 == 0xA000000000000000 && v16 == 5 && !v75)
      {
        sub_100210F08(a1, a7);
        return;
      }
      if (!v28 && v26 == 0xA000000000000000 && v16 == 6 && !v75)
      {
        NSString v85 = a7;
        if ([self shouldShowAppleRatingsForMapItem:a1])
        {
          id v86 = [self locallyCachedReviewedPlaceForMUID:[a1 _muid]];
          if (v86)
          {
            id v87 = v86;
            if ([v87 recommendState])
            {
              BOOL v88 = [v87 recommendState] == (id)2;
              UUID.init()();

              *((unsigned char *)v85
              + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0) + 20)) = v88;
              uint64_t v89 = type metadata accessor for PlaceSummaryViewModelUnit(0);
              swift_storeEnumTagMultiPayload();
              uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56);
              uint64_t v73 = (uint64_t)v85;
              uint64_t v74 = 0;
              uint64_t v72 = v89;
              goto LABEL_32;
            }
          }
        }
        uint64_t v92 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56);
        uint64_t v72 = v92;
        uint64_t v73 = (uint64_t)v85;
        goto LABEL_31;
      }
      if ((v28 || v26 != 0xA000000000000000 || v16 != 7 || v75)
        && (v28 || v26 != 0xA000000000000000 || v16 != 8 || v75))
      {
        uint64_t v44 = (uint64_t)a7;
        if (!v28 && v26 == 0xA000000000000000 && v16 == 9 && !v75
          || !v28 && v26 == 0xA000000000000000 && v16 == 10 && !v75
          || !v28 && v26 == 0xA000000000000000 && v16 == 11 && !v75
          || !v28 && v26 == 0xA000000000000000 && v16 == 12 && !v75)
        {
          goto LABEL_119;
        }
        if (!v28 && v26 == 0xA000000000000000 && v16 == 13 && !v75)
        {
          sub_100210BAC(a1, a7);
          return;
        }
        if (!v28 && v26 == 0xA000000000000000 && v16 == 14 && !v75)
        {
          id v93 = [a1 _maps_detourTextForIdiom:0];
          if (v93)
          {
            char v94 = v93;
            uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v97 = v96;

            if (String.count.getter() > 0)
            {
              *(void *)&long long v123 = v95;
              *((void *)&v123 + 1) = v97;
              long long v124 = 0u;
              long long v125 = 0u;
              long long v126 = 0u;
              *(void *)&long long v127 = 0;
              BYTE8(v127) = 1;
              *(void *)&long long v128 = 0;
              BYTE8(v128) = 0;
              unint64_t v129 = 0;
              sub_100211324(&v123, 0, v44);
              swift_bridgeObjectRelease_n();
              goto LABEL_51;
            }
            swift_bridgeObjectRelease();
          }
          goto LABEL_119;
        }
        if (v28 || v26 != 0xA000000000000000 || v16 != 15 || v75)
        {
          if (v28 || v26 != 0xA000000000000000 || v16 != 16 || v75)
          {
            if (!v28 && v26 == 0xA000000000000000 && v16 == 17 && !v75)
            {
              sub_100212D54(a1, (uint64_t)a7);
              return;
            }
            if (v28 || v26 != 0xA000000000000000 || v16 != 18 || v75)
            {
              if (!v28 && v26 == 0xA000000000000000 && v16 == 19 && !v75)
              {
                sub_100213604(a1, (uint64_t)a7);
                return;
              }
              if (v28 || v26 != 0xA000000000000000 || v16 != 20 || v75)
              {
                if (!v28 && v26 == 0xA000000000000000 && v16 == 21 && !v75)
                {
                  sub_100213DF8(a1, (uint64_t)a7);
                  return;
                }
                if (!v28 && v26 == 0xA000000000000000 && v16 == 22 && !v75)
                {
                  sub_1002144C0(a1, a7);
                  return;
                }
                if (!v28 && v26 == 0xA000000000000000 && v16 == 23 && !v75)
                {
                  sub_10021468C(a1, a7);
                  return;
                }
                if (!v28 && v26 == 0xA000000000000000 && v16 == 24 && !v75)
                {
                  sub_1002125C8(a1, a12, v15, (uint64_t)a7);
                  return;
                }
                if (!v28 && v26 == 0xA000000000000000 && v16 == 25 && !v75)
                {
                  sub_100212714(a1, (uint64_t)a7);
                  return;
                }
                if ((v28 || v26 != 0xA000000000000000 || v16 != 26 || v75)
                  && (v28 || v26 != 0xA000000000000000 || v16 != 27 || v75)
                  && (v28 || v26 != 0xA000000000000000 || v16 != 28 || v75)
                  && (v28 || v26 != 0xA000000000000000 || v16 != 29 || v75)
                  && (v28 || v26 != 0xA000000000000000 || v16 != 30 || v75)
                  && (v28 || v26 != 0xA000000000000000 || v16 != 31 || v75))
                {
                  sub_100212968(a2, (uint64_t)a7);
                  return;
                }
                goto LABEL_119;
              }
              uint64_t v99 = &selRef_durationString;
            }
            else
            {
              uint64_t v99 = &selRef_hikeTypeNameString;
            }
            sub_100213B04(a1, (SEL *)v99, (uint64_t)a7);
            return;
          }
          if (MapsFeature_IsEnabled_HikingWatch())
          {
            id v90 = [a1 _hikingTrailLengthFactoid];
            if (!v90) {
              goto LABEL_120;
            }
            goto LABEL_148;
          }
        }
        else if (MapsFeature_IsEnabled_HikingWatch())
        {
          id v90 = [a1 _hikingTrailDifficultyFactoid];
          if (!v90) {
            goto LABEL_120;
          }
LABEL_148:
          uint64_t v98 = v90;
          id v122 = [self viewModelForFactoid:v90];
          sub_10021B334(v122, v44);

          return;
        }
LABEL_119:
        id v90 = 0;
LABEL_120:
        uint64_t v91 = type metadata accessor for PlaceSummaryViewModelUnit((uint64_t)v90);
        uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56);
        uint64_t v72 = v91;
        uint64_t v73 = v44;
        goto LABEL_31;
      }
LABEL_30:
      uint64_t v69 = a7;
      uint64_t v70 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
      uint64_t v72 = v70;
      uint64_t v73 = (uint64_t)v69;
LABEL_31:
      uint64_t v74 = 1;
LABEL_32:
      v71(v73, v74, 1, v72);
      return;
    default:
      uint64_t v114 = a3[4];
      uint64_t v115 = a3[6];
      uint64_t v116 = a3[8];
      id v119 = (id)a3[13];
      uint64_t v104 = a3[9];
      id v106 = (void *)a3[14];
      uint64_t v29 = a3[2];
      swift_bridgeObjectRetain();
      id v30 = [a1 _secondaryName];
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v34 = v33;
      }
      else
      {
        uint64_t v32 = 0;
        unint64_t v34 = 0;
      }
      sub_10020E76C(v32, v34, v29, v17, 0, 0, 0, 0, (uint64_t)a7, 0);
      sub_100223808(v29, v17, v114, v18, v115, v21, v116, v104, v24, v25, v27, (unint64_t)v119, v106);
      goto LABEL_51;
  }
}

uint64_t sub_10020E76C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v37 = a7;
  uint64_t v38 = a8;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v15 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for AttributedString();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    goto LABEL_10;
  }
  uint64_t v20 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v20 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    swift_bridgeObjectRetain();
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    if (a5)
    {
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v34 - 2) = v22;
      swift_getKeyPath();
      uint64_t v39 = a5;
      sub_100180AE8();
      swift_retain();
      AttributedString.subscript.setter();
    }
    if (a6)
    {
      uint64_t v23 = swift_getKeyPath();
      __chkstk_darwin(v23);
      *(&v34 - 2) = v24;
      swift_getKeyPath();
      uint64_t v39 = a6;
      sub_100223A8C();
      swift_retain();
      AttributedString.subscript.setter();
    }
    UUID.init()();
    uint64_t v25 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a9 + v25[12], 1, 1, v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a9 + v25[5], v19, v16);
    unint64_t v26 = (void *)(a9 + v25[6]);
    uint64_t v27 = v36;
    *unint64_t v26 = v35;
    v26[1] = v27;
    uint64_t v28 = v38;
    *(void *)(a9 + v25[7]) = v37;
    *(void *)(a9 + v25[8]) = v28;
    *(void *)(a9 + v25[9]) = 0;
    *(void *)(a9 + v25[10]) = a10;
    uint64_t v29 = a9 + v25[11];
    *(void *)uint64_t v29 = 1;
    *(unsigned char *)(v29 + 8) = 0;
    uint64_t v30 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a9, 0, 1, v30);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  else
  {
LABEL_10:
    uint64_t v32 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    unint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    return v33(a9, 1, 1, v32);
  }
}

uint64_t sub_10020EB2C@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (a4)
  {
    if (a2)
    {
      id v17 = a4;
      id v13 = 0;
    }
    else
    {
      id v11 = objc_allocWithZone((Class)NSNumber);
      id v12 = a4;
      id v13 = [v11 initWithUnsignedLongLong:a1];
    }
    char v32 = 1;
    if (a5)
    {
      id v18 = [a3 _maps_distanceStringFromDetourInformation];
      if (v18)
      {
        id v19 = v18;
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v20 = self;
      id v21 = a4;
      [a3 _coordinate];
      id v19 = [v20 distanceStringFromLocation:v21 toCoordinate:a3 withMapItem:&v32 showsDistance:0 onlyUseThreshold:v13 maximumDistance:1 useShortThreshold:1];

      if (v19)
      {
LABEL_12:
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;

        if (MapsFeature_IsEnabled_HikingWatch()
          && [a3 _placeCategoryType] == 1)
        {
          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v34._object = (void *)0xEB00000000796177;
          v25._uint64_t countAndFlagsBits = 0x636E61747369645BLL;
          v25._object = (void *)0xEF79617761205D65;
          v26._uint64_t countAndFlagsBits = 0x79617761204025;
          v26._object = (void *)0xE700000000000000;
          v34._uint64_t countAndFlagsBits = 0x6120696D20303031;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)qword_101611820, v26, v34);
          sub_1000FF33C((uint64_t *)&unk_1015D59C0);
          uint64_t v27 = swift_allocObject();
          *(_OWORD *)(v27 + 16) = xmmword_100F5CF70;
          *(void *)(v27 + 56) = &type metadata for String;
          *(void *)(v27 + 64) = sub_10011A750();
          *(void *)(v27 + 32) = v22;
          *(void *)(v27 + 40) = v24;
          uint64_t v22 = String.init(format:_:)();
          uint64_t v24 = v28;
          swift_bridgeObjectRelease();
        }
        UUID.init()();

        uint64_t v29 = (uint64_t *)(a6 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Distance(0) + 20));
        *uint64_t v29 = v22;
        v29[1] = v24;
        uint64_t v30 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a6, 0, 1, v30);
      }
    }
    uint64_t v31 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a6, 1, 1, v31);
  }
  uint64_t v14 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);

  return v15(a6, 1, 1, v14);
}

void sub_10020EEF0(char a1@<W0>, BOOL a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v104 = *(void *)(v12 - 8);
  uint64_t v105 = v12;
  __chkstk_darwin(v12);
  uint64_t v103 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D0A30);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000FF33C(&qword_1015D0A38);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000FF33C(&qword_1015D0A40);
  uint64_t v101 = *(void *)(v20 - 8);
  uint64_t v102 = v20;
  __chkstk_darwin(v20);
  uint64_t v99 = (uint64_t)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v100 = (uint64_t)&v95 - v23;
  uint64_t v24 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v24 - 8);
  uint64_t v25 = type metadata accessor for AttributedString();
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  if (!a2)
  {
    uint64_t v57 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
    uint64_t v59 = v57;
    uint64_t v60 = a6;
LABEL_28:
    v58(v60, 1, 1, v59);
    return;
  }
  uint64_t v107 = a6;
  uint64_t v97 = v30;
  uint64_t v98 = v32;
  if (a4 && *(unsigned char *)(a4 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_useCase) == 2)
  {
    Swift::String v34 = (char *)&v95 - v31;
    uint64_t v35 = v33;
    uint64_t IsEnabled_SearchAndDiscovery = MapsFeature_IsEnabled_SearchAndDiscovery();
  }
  else
  {
    Swift::String v34 = (char *)&v95 - v31;
    uint64_t v35 = v33;
    uint64_t IsEnabled_SearchAndDiscovery = 0;
  }
  id v37 = [a3 searchResultsHoursWithConciseStyle:IsEnabled_SearchAndDiscovery openAt:a5];
  if (!v37)
  {
LABEL_27:
    uint64_t v77 = type metadata accessor for PlaceSummaryViewModelUnit((uint64_t)v37);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56);
    uint64_t v59 = v77;
    uint64_t v60 = v107;
    goto LABEL_28;
  }
  id v106 = v37;
  if (!sub_10021E330(a2, v37)) {
    goto LABEL_22;
  }
  if ((a1 & 1) == 0)
  {
    id v38 = [v106 localizedOperatingHours];
    if (v38)
    {
      uint64_t v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      if (String.count.getter() >= 1)
      {
        swift_bridgeObjectRetain();
        AttributeContainer.init()();
        uint64_t v41 = v34;
        AttributedString.init(_:attributes:)();
        id v42 = [v106 localizedOpenState];
        if (v42)
        {
          uint64_t v43 = v42;
          uint64_t v95 = v40;
          uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v46 = v45;

          uint64_t v47 = v98;
          long long v48 = *(void (**)(uint64_t, char *, uint64_t))(v98 + 16);
          uint64_t v96 = v34;
          uint64_t v49 = v97;
          v48(v35, v34, v97);
          v108[0] = v44;
          v108[1] = v46;
          uint64_t v50 = type metadata accessor for Locale();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v16, 1, 1, v50);
          sub_100223D3C(&qword_1015D0A60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
          sub_100180324();
          AttributedStringProtocol.range<A>(of:options:locale:)();
          sub_1000FF2E0((uint64_t)v16, &qword_1015D0A30);
          long long v51 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
          v51(v35, v49);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v19, 1, v102) != 1)
          {
            uint64_t v79 = v100;
            sub_100101750((uint64_t)v19, v100, &qword_1015D0A40);
            id v80 = [self secondaryLabelColor];
            [v106 updateHoursLabelColorWithDefaultLabelColor:v80];

            id v81 = [v106 hoursStateLabelColor];
            if (v81)
            {
              uint64_t v82 = v81;
              swift_bridgeObjectRelease();
              uint64_t v83 = v99;
              sub_1000FF27C(v79, v99, &qword_1015D0A40);
              uint64_t KeyPath = swift_getKeyPath();
              __chkstk_darwin(KeyPath);
              *(&v95 - 2) = v85;
              swift_getKeyPath();
              id v86 = v82;
              v108[4] = Color.init(uiColor:)();
              sub_1001010F8(&qword_1015D0A70, &qword_1015D0A40);
              id v87 = v96;
              BOOL v88 = (void (*)(void *, void))AttributedString.subscript.modify();
              sub_100180AE8();
              AttributedSubstring.subscript.setter();
              v88(v108, 0);
              sub_1000FF2E0(v83, &qword_1015D0A40);
              uint64_t v89 = v103;
              UUID.init()();

              sub_1000FF2E0(v79, &qword_1015D0A40);
              uint64_t v90 = type metadata accessor for PlaceSummaryViewModelUnit.Hours(0);
              uint64_t v55 = v107;
              (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v107 + *(int *)(v90 + 20), v87, v97);
              (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v55, v89, v105);
            }
            else
            {
              AttributeContainer.init()();
              AttributedString.init(_:attributes:)();
              uint64_t v91 = v103;
              UUID.init()();

              sub_1000FF2E0(v79, &qword_1015D0A40);
              uint64_t v92 = v97;
              v51((uint64_t)v96, v97);
              uint64_t v55 = v107;
              (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v107, v91, v105);
              uint64_t v93 = type metadata accessor for PlaceSummaryViewModelUnit.Hours(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v55 + *(int *)(v93 + 20), v35, v92);
            }
            goto LABEL_35;
          }
          sub_1000FF2E0((uint64_t)v19, &qword_1015D0A38);
          uint64_t v41 = v96;
        }
        AttributeContainer.init()();
        AttributedString.init(_:attributes:)();
        long long v52 = v103;
        UUID.init()();

        uint64_t v54 = v97;
        uint64_t v53 = v98;
        (*(void (**)(char *, uint64_t))(v98 + 8))(v41, v97);
        uint64_t v55 = v107;
        (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v107, v52, v105);
        uint64_t v56 = type metadata accessor for PlaceSummaryViewModelUnit.Hours(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v55 + *(int *)(v56 + 20), v35, v54);
LABEL_35:
        uint64_t v94 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v55, 0, 1, v94);
        return;
      }
      swift_bridgeObjectRelease();
    }
    goto LABEL_26;
  }
  unint64_t v61 = (unint64_t)[v106 state];
  if (v61 <= 6)
  {
    if (((1 << v61) & 0x5E) == 0)
    {
LABEL_26:

      id v37 = 0;
      goto LABEL_27;
    }
    id v62 = [v106 localizedOpenState];
    uint64_t v63 = v107;
    if (!v62)
    {

      uint64_t v78 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56);
      uint64_t v59 = v78;
      uint64_t v60 = v63;
      goto LABEL_28;
    }
    uint64_t v64 = v62;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    id v65 = [v106 hoursStateLabelColor];
    if (v65)
    {
      NSString v66 = v65;
      uint64_t v67 = swift_getKeyPath();
      __chkstk_darwin(v67);
      *(&v95 - 2) = v68;
      swift_getKeyPath();
      id v69 = v66;
      v108[0] = Color.init(uiColor:)();
      sub_100180AE8();
      AttributedString.subscript.setter();
    }
    uint64_t v71 = v97;
    uint64_t v70 = v98;
    (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v35, v27, v97);
    uint64_t v72 = v103;
    UUID.init()();

    (*(void (**)(char *, uint64_t))(v70 + 8))(v27, v71);
    (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v63, v72, v105);
    uint64_t v73 = type metadata accessor for PlaceSummaryViewModelUnit.Hours(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v63 + *(int *)(v73 + 20), v35, v71);
    uint64_t v74 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v63, 0, 1, v74);
  }
  else
  {
LABEL_22:
    uint64_t v75 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v107, 1, 1, v75);
    id v76 = v106;
  }
}

void sub_10020FB0C(void *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v65[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self shouldShowAppleRatingsForMapItem:a1])
  {
    id v14 = [a1 _geoMapItem];
    if (v14)
    {
      id v15 = [v14 _overallAppleRating];
      swift_unknownObjectRelease();
      if (!v15)
      {
        uint64_t v40 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
        uint64_t v28 = v40;
        uint64_t v26 = a4;
        uint64_t v27 = 1;
        goto LABEL_25;
      }
      [v15 percentage];
      double v17 = v16;
      uint64_t v18 = self;
      id v19 = &selRef_labelColor;
      if (v17 <= 0.5) {
        id v19 = &selRef__maps_systemGrayColor;
      }
      id v20 = [v18 *v19];
      UUID.init()();
      [a1 _normalizedUserRatingScore];
      float v22 = v21;

      if ((~LODWORD(v22) & 0x7F800000) != 0)
      {
        if (v22 > -9.2234e18)
        {
          if (v22 < 9.2234e18)
          {
            uint64_t PartyRatings = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0);
            *(void *)(a4 + *(int *)(PartyRatings + 20)) = (uint64_t)v22;
            *(void *)(a4 + *(int *)(PartyRatings + 24)) = v20;
            uint64_t v24 = type metadata accessor for PlaceSummaryViewModelUnit(0);
            swift_storeEnumTagMultiPayload();
            uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
            uint64_t v26 = a4;
            uint64_t v27 = 0;
            uint64_t v28 = v24;
LABEL_25:
            v25(v26, v27, 1, v28);
            return;
          }
          __break(1u);
          goto LABEL_79;
        }
        __break(1u);
        goto LABEL_77;
      }
      __break(1u);
LABEL_74:
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    goto LABEL_82;
  }
  if ([a1 _sampleSizeForUserRatingScore])
  {
    [a1 _normalizedUserRatingScore];
    float v22 = v29;
    id v30 = [a1 _localizedSampleSizeForUserRatingScoreString];
    if (!v30)
    {
LABEL_83:
      __break(1u);
      return;
    }
    uint64_t v31 = v30;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v4 = v32;

    uint64_t v33 = HIBYTE(v4) & 0xF;
    uint64_t v34 = v5 & 0xFFFFFFFFFFFFLL;
    if ((v4 & 0x2000000000000000) != 0) {
      uint64_t v35 = HIBYTE(v4) & 0xF;
    }
    else {
      uint64_t v35 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (!v35) {
      goto LABEL_74;
    }
    if ((v4 & 0x1000000000000000) != 0)
    {
LABEL_77:
      uint64_t v37 = sub_10021C514(v5, v4, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10021C60C);
      char v39 = v63;
LABEL_52:
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
      {
        UUID.init()();
        id v45 = sub_1002199C4(v22);
        id v46 = [a1 _reviewsDisplayName];
        if (v46)
        {
          uint64_t v47 = v46;
          uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v50 = v49;
        }
        else
        {
          uint64_t v48 = 0;
          uint64_t v50 = 0;
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a4, v13, v10);
        long long v51 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
        *(float *)(a4 + v51[5]) = v22;
        *(void *)(a4 + v51[6]) = v45;
        *(void *)(a4 + v51[7]) = v37;
        long long v52 = (uint64_t *)(a4 + v51[8]);
        *long long v52 = v48;
        v52[1] = v50;
        *(unsigned char *)(a4 + v51[9]) = a3 & 1;
        uint64_t v53 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(a4, 0, 1, v53);
        return;
      }
LABEL_75:
      uint64_t v62 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(a4, 1, 1, v62);
      return;
    }
    if ((v4 & 0x2000000000000000) == 0)
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        uint64_t v36 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_20:
        uint64_t v37 = (uint64_t)sub_10021C60C(v36, v34, 10);
        char v39 = v38 & 1;
        goto LABEL_52;
      }
LABEL_79:
      uint64_t v36 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      goto LABEL_20;
    }
    v65[0] = v5;
    v65[1] = v4 & 0xFFFFFFFFFFFFFFLL;
    if (v5 == 43)
    {
      if (!v33) {
        goto LABEL_81;
      }
      if (v33 != 1 && (BYTE1(v5) - 48) <= 9u)
      {
        uint64_t v37 = (BYTE1(v5) - 48);
        if (v33 == 2) {
          goto LABEL_51;
        }
        if ((BYTE2(v5) - 48) <= 9u)
        {
          uint64_t v37 = 10 * (BYTE1(v5) - 48) + (BYTE2(v5) - 48);
          uint64_t v41 = v33 - 3;
          if (v41)
          {
            id v42 = (unsigned __int8 *)v65 + 3;
            while (1)
            {
              unsigned int v43 = *v42 - 48;
              if (v43 > 9) {
                goto LABEL_49;
              }
              uint64_t v44 = 10 * v37;
              if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63) {
                goto LABEL_49;
              }
              uint64_t v37 = v44 + v43;
              if (__OFADD__(v44, v43)) {
                goto LABEL_49;
              }
              char v39 = 0;
              ++v42;
              if (!--v41) {
                goto LABEL_52;
              }
            }
          }
          goto LABEL_51;
        }
      }
    }
    else
    {
      if (v5 == 45)
      {
        if (v33)
        {
          if (v33 == 1 || (BYTE1(v5) - 48) > 9u) {
            goto LABEL_49;
          }
          if (v33 == 2)
          {
            char v39 = 0;
            uint64_t v37 = -(uint64_t)(BYTE1(v5) - 48);
            goto LABEL_52;
          }
          if ((BYTE2(v5) - 48) > 9u) {
            goto LABEL_49;
          }
          uint64_t v37 = -10 * (BYTE1(v5) - 48) - (BYTE2(v5) - 48);
          uint64_t v58 = v33 - 3;
          if (v58)
          {
            uint64_t v59 = (unsigned __int8 *)v65 + 3;
            while (1)
            {
              unsigned int v60 = *v59 - 48;
              if (v60 > 9) {
                goto LABEL_49;
              }
              uint64_t v61 = 10 * v37;
              if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63) {
                goto LABEL_49;
              }
              uint64_t v37 = v61 - v60;
              if (__OFSUB__(v61, v60)) {
                goto LABEL_49;
              }
              char v39 = 0;
              ++v59;
              if (!--v58) {
                goto LABEL_52;
              }
            }
          }
LABEL_51:
          char v39 = 0;
          goto LABEL_52;
        }
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      if (v33 && (v5 - 48) <= 9u)
      {
        uint64_t v37 = (v5 - 48);
        if (v33 == 1) {
          goto LABEL_51;
        }
        if ((BYTE1(v5) - 48) <= 9u)
        {
          uint64_t v37 = 10 * (v5 - 48) + (BYTE1(v5) - 48);
          uint64_t v54 = v33 - 2;
          if (v54)
          {
            uint64_t v55 = (unsigned __int8 *)v65 + 2;
            while (1)
            {
              unsigned int v56 = *v55 - 48;
              if (v56 > 9) {
                goto LABEL_49;
              }
              uint64_t v57 = 10 * v37;
              if ((unsigned __int128)(v37 * (__int128)10) >> 64 != (10 * v37) >> 63) {
                goto LABEL_49;
              }
              uint64_t v37 = v57 + v56;
              if (__OFADD__(v57, v56)) {
                goto LABEL_49;
              }
              char v39 = 0;
              ++v55;
              if (!--v54) {
                goto LABEL_52;
              }
            }
          }
          goto LABEL_51;
        }
      }
    }
LABEL_49:
    uint64_t v37 = 0;
    char v39 = 1;
    goto LABEL_52;
  }

  sub_100219824(a2 & 1, a4);
}

uint64_t sub_10021023C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [self sharedManager];
  id v5 = [v4 firstUserGuideContainingMapItem:a1 requiresOrdering:0];

  if (v5)
  {
    id v6 = v5;
    UUID.init()();
    id v7 = [v6 title];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    uint64_t v11 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
    uint64_t v12 = (uint64_t *)(a2 + *(int *)(v11 + 20));
    *uint64_t v12 = v8;
    v12[1] = v10;
    *(void *)(a2 + *(int *)(v11 + 24)) = v6;
    uint64_t v13 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    swift_storeEnumTagMultiPayload();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

void sub_1002103B0(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a2 _placeCollections:v8];
  if (!v11)
  {
    uint64_t v20 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v18 = v20;
    uint64_t v19 = a3;
    goto LABEL_8;
  }
  uint64_t v12 = v11;
  uint64_t v86 = a3;
  sub_100100830(0, (unint64_t *)&qword_1015D5660);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v14 = v13 >> 62;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v15 & 0x8000000000000000) != 0) {
      goto LABEL_5;
    }
  }
  else
  {
    unint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 >= a1)
  {
    if (v15 < 2)
    {
      if (v15 != 1) {
        goto LABEL_5;
      }
      if (v14)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v51 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (!v51) {
        goto LABEL_5;
      }
      if ((v13 & 0xC000000000000001) != 0)
      {
        id v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          return;
        }
        id v60 = *(id *)(v13 + 32);
      }
      uint64_t v61 = v60;
      swift_bridgeObjectRelease();
      id v62 = [v61 publisherAttribution];
      if (v62)
      {
        char v63 = v62;
        uint64_t v64 = self;
        id v65 = [v63 iconIdentifier];
        id v66 = [self mainScreen];
        [v66 scale];
        double v68 = v67;

        id v69 = [v64 imageForIconID:v65 contentScale:1 sizeGroup:0 nightMode:v68];
        if (v69)
        {
          uint64_t v70 = v69;
          id v71 = [v63 displayName];
          if (!v71)
          {
            swift_unknownObjectRelease();

            goto LABEL_6;
          }
          uint64_t v72 = v71;
          uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v75 = v74;

          uint64_t v38 = v86;
          UUID.init()();
          id v76 = [v61 collectionTitle];
          uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v79 = v78;
          swift_unknownObjectRelease();

          id v80 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
          *(void *)(v38 + v80[5]) = v70;
          id v81 = (uint64_t *)(v38 + v80[6]);
          uint64_t *v81 = v73;
          v81[1] = v75;
          uint64_t v82 = (uint64_t *)(v38 + v80[7]);
          uint64_t *v82 = v77;
          v82[1] = v79;
          *(void *)(v38 + v80[8]) = v61;
          uint64_t v50 = type metadata accessor for PlaceSummaryViewModelUnit(0);
          goto LABEL_39;
        }
        swift_unknownObjectRelease();
      }

      goto LABEL_6;
    }
    if (!MapsFeature_IsEnabled_SearchAndDiscovery())
    {
      UUID.init()();
      swift_bridgeObjectRelease();
      id v52 = [a2 _placeCollections];
      if (v52)
      {
        uint64_t v53 = v52;
        uint64_t v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v55 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
        uint64_t v56 = v86;
        uint64_t v57 = v86 + v55[7];
        uint64_t v58 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
        (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v56, v10, v6);
        *(void *)(v56 + v55[5]) = v15;
        *(void *)(v56 + v55[6]) = v54;
        uint64_t v59 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v56, 0, 1, v59);
        return;
      }
      goto LABEL_52;
    }
    if (v14)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v22)
      {
LABEL_16:
        if ((v13 & 0xC000000000000001) != 0)
        {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_19;
        }
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v23 = *(id *)(v13 + 32);
LABEL_19:
          uint64_t v24 = v23;
          swift_bridgeObjectRelease();
          id v25 = [v24 publisherAttribution];
          if (!v25)
          {

            goto LABEL_5;
          }
          uint64_t v26 = v25;
          uint64_t v27 = self;
          id v28 = [v26 iconIdentifier];
          id v29 = [self mainScreen];
          [v29 scale];
          double v31 = v30;

          id v32 = [v27 imageForIconID:v28 contentScale:1 sizeGroup:0 nightMode:v31];
          if (!v32)
          {

            swift_unknownObjectRelease();
            goto LABEL_5;
          }
          uint64_t v33 = v32;
          id v34 = [v26 displayName];
          if (!v34)
          {

            swift_unknownObjectRelease();
            goto LABEL_5;
          }
          uint64_t v35 = v34;
          uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v83 = v37;
          uint64_t v84 = v36;

          uint64_t v85 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
          uint64_t v38 = v86;
          uint64_t v39 = v86 + *(int *)(v85 + 28);
          UUID.init()();
          id v40 = v33;
          id v41 = [v24 collectionTitle];
          uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v44 = v43;

          id v45 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
          *(void *)(v39 + v45[5]) = v40;
          id v46 = (uint64_t *)(v39 + v45[6]);
          uint64_t v47 = v83;
          *id v46 = v84;
          v46[1] = v47;
          uint64_t v48 = (uint64_t *)(v39 + v45[7]);
          *uint64_t v48 = v42;
          v48[1] = v44;
          *(void *)(v39 + v45[8]) = v24;
          UUID.init()();
          swift_unknownObjectRelease();

          (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v45 - 1) + 56))(v39, 0, 1, v45);
          uint64_t v49 = v85;
          *(void *)(v38 + *(int *)(v85 + 20)) = v15;
          *(void *)(v38 + *(int *)(v49 + 24)) = v13;
          uint64_t v50 = type metadata accessor for PlaceSummaryViewModelUnit(0);
LABEL_39:
          swift_storeEnumTagMultiPayload();
          uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
          uint64_t v19 = v38;
          uint64_t v21 = 0;
          uint64_t v18 = v50;
          goto LABEL_9;
        }
        __break(1u);
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_5:
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v16 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = v86;
LABEL_8:
  uint64_t v21 = 1;
LABEL_9:

  v17(v19, v21, 1, v18);
}

uint64_t sub_100210BAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1 && (id v4 = [a1 _realTimeAvailableEVCharger]) != 0)
  {
    id v5 = v4;
    sub_1003166D4(v4, 0);
    id v6 = [self sharedSearchVirtualGarageManager];
    id v7 = [v6 virtualGarage];

    if (v7)
    {
      id v8 = [self getRealTimeEVChargerInfo:v7 charger:v5];
      [v8 status];
    }
    else
    {
      [v5 _realTimePlugAvailabilityStatus];
    }
    type metadata accessor for PlaceSummaryEVChargerViewModel(0);
    uint64_t v12 = swift_allocObject();
    id v13 = a1;
    UUID.init()();
    swift_beginAccess();
    Published.init(initialValue:)();
    swift_endAccess();
    swift_beginAccess();
    type metadata accessor for GEOEVChargerAvailability_RealTimeStatus(0);
    Published.init(initialValue:)();
    swift_endAccess();
    *(void *)(v12 + OBJC_IVAR____TtC4Maps30PlaceSummaryEVChargerViewModel_mapItem) = a1;
    type metadata accessor for PlaceSummaryViewModelUnit.RealTimeAvailableCharger(0);
    uint64_t v14 = swift_allocObject();
    UUID.init()();
    unint64_t v15 = (uint64_t *)(v14 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit24RealTimeAvailableCharger__chargerViewModel);
    swift_beginAccess();
    sub_100223D3C((unint64_t *)&unk_1015D5A50, (void (*)(uint64_t))type metadata accessor for PlaceSummaryEVChargerViewModel);
    swift_retain();
    *unint64_t v15 = ObservedObject.init(wrappedValue:)();
    v15[1] = v16;
    swift_endAccess();

    swift_release();
    *a2 = v14;
    uint64_t v17 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 0, 1, v17);
  }
  else
  {
    uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a2, 1, 1, v9);
  }
}

uint64_t sub_100210F08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = [a1 _chargerNumberString];
  if (v4)
  {
    id v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    type metadata accessor for PlaceSummaryEVChargerViewModel(0);
    uint64_t v6 = swift_allocObject();
    id v7 = a1;
    UUID.init()();
    swift_beginAccess();
    Published.init(initialValue:)();
    swift_endAccess();
    swift_beginAccess();
    type metadata accessor for GEOEVChargerAvailability_RealTimeStatus(0);
    Published.init(initialValue:)();
    swift_endAccess();
    *(void *)(v6 + OBJC_IVAR____TtC4Maps30PlaceSummaryEVChargerViewModel_mapItem) = a1;
    type metadata accessor for PlaceSummaryViewModelUnit.RealTimeAvailableCharger(0);
    uint64_t v8 = swift_allocObject();
    UUID.init()();
    uint64_t v9 = (uint64_t *)(v8 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit24RealTimeAvailableCharger__chargerViewModel);
    swift_beginAccess();
    sub_100223D3C((unint64_t *)&unk_1015D5A50, (void (*)(uint64_t))type metadata accessor for PlaceSummaryEVChargerViewModel);
    swift_retain();
    *uint64_t v9 = ObservedObject.init(wrappedValue:)();
    v9[1] = v10;
    swift_endAccess();
    swift_release();
    *a2 = v8;
    uint64_t v11 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 0, 1, v11);
  }
  else
  {
    uint64_t v13 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a2, 1, 1, v13);
  }
}

uint64_t sub_1002111AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if ([self shouldShowAppleRatingsForMapItem:a1])
  {
    id v4 = [self locallyCachedReviewedPlaceForMUID:[a1 _muid]];
    if (v4)
    {
      id v5 = v4;
      if ([v5 recommendState])
      {
        BOOL v6 = [v5 recommendState] == (id)2;
        UUID.init()();

        *(unsigned char *)(a2 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0) + 20)) = v6;
        uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
        uint64_t v9 = a2;
        uint64_t v10 = 0;
        uint64_t v11 = v7;
        goto LABEL_7;
      }
    }
  }
  uint64_t v12 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v11 = v12;
  uint64_t v9 = a2;
  uint64_t v10 = 1;
LABEL_7:

  return v8(v9, v10, 1, v11);
}

void sub_100211324(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a3;
  uint64_t v78 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v72 = (char *)&v65 - v9;
  uint64_t v74 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  __chkstk_darwin(v74);
  uint64_t v73 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v66);
  uint64_t v12 = (uint64_t *)((char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for AttributedString();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v71 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v65 - v18;
  uint64_t v20 = a1[3];
  uint64_t v21 = &selRef__localeForCode_;
  id v80 = a1;
  uint64_t v75 = v5;
  double v67 = v7;
  if (v20)
  {
    char v22 = a2;
    id v23 = (char *)&v65 - v18;
    uint64_t v24 = v14;
    uint64_t v25 = v17;
    uint64_t v26 = self;
    NSString v27 = String._bridgeToObjectiveC()();
    id v28 = [v26 _maps_colorFromHexString:v27];

    if (!v28)
    {
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v79 = Color.init(uiColor:)();
    uint64_t v17 = v25;
    uint64_t v14 = v24;
    uint64_t v19 = v23;
    a1 = v80;
    a2 = v22;
    uint64_t v21 = &selRef__localeForCode_;
  }
  else
  {
    uint64_t v79 = 0;
  }
  uint64_t v69 = v17;
  uint64_t v29 = a1[7];
  if (v29)
  {
    double v30 = v21;
    double v31 = self;
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = [v31 v30[247] v32];

    if (v33)
    {
      uint64_t v29 = Color.init(uiColor:)();
      a1 = v80;
      goto LABEL_8;
    }
LABEL_16:
    __break(1u);
    return;
  }
LABEL_8:
  sub_100219A40(a1[10], v79, 0, a2 & 1, (uint64_t)v19);
  id v34 = (void *)a1[12];
  uint64_t v77 = v19;
  uint64_t v68 = v29;
  if (v34)
  {
    id v35 = objc_allocWithZone((Class)MapsUIImageGEOFeatureSpec);
    id v36 = v34;
    id v37 = [v35 init];
    [v37 setStyle:v36];
    [v37 setMarkerFallback:0];
    uint64_t v38 = sub_1000FF33C(&qword_1015D0F40);
    uint64_t v39 = swift_allocBox();
    uint64_t v41 = v40;
    uint64_t v42 = v40 + *(int *)(v38 + 96);
    uint64_t v43 = v14;
    uint64_t v44 = *(int *)(v38 + 112);
    *(void *)uint64_t v40 = v37;
    *(void *)(v40 + 8) = 0;
    *(void *)(v40 + 24) = 0;
    *(unsigned char *)(v40 + 16) = 0;
    uint64_t v45 = enum case for Image.TemplateRenderingMode.original(_:);
    uint64_t v46 = type metadata accessor for Image.TemplateRenderingMode();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v42, v45, v46);
    id v47 = v37;
    *(void *)(v41 + v44) = static Color.clear.getter();
    uint64_t v14 = v43;
    *uint64_t v12 = v39;
    uint64_t v19 = v77;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for PlaceSummaryImageViewModel(0);
    uint64_t v48 = swift_allocObject();
    v81[0] = 0;
    sub_1000FF33C((uint64_t *)&unk_1015D23C8);
    Published.init(initialValue:)();
    UUID.init()();
    sub_100223DBC((uint64_t)v12, v48 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    uint64_t v49 = v48 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
    *(void *)uint64_t v49 = 0;
    *(unsigned char *)(v49 + 8) = 1;
  }
  else
  {
    uint64_t v48 = 0;
  }
  uint64_t v50 = v72;
  UUID.init()();
  uint64_t v51 = v71;
  id v52 = v19;
  uint64_t v53 = v69;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v71, v52, v69);
  LODWORD(v70) = v80[11] & 1;
  BOOL v54 = v70 == 0;
  uint64_t v55 = v14;
  sub_100101750((uint64_t)(v80 + 4), (uint64_t)v81, &qword_1015D0E70);
  uint64_t v57 = (uint64_t)v73;
  uint64_t v56 = (int *)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(&v73[*(int *)(v74 + 48)], 1, 1, v53);
  uint64_t v75 = *(void *)(v75 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v75)(v57, v50, v78);
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v57 + v56[5], v51, v53);
  sub_100101750((uint64_t)v81, v57 + v56[6], &qword_1015D0E70);
  *(void *)(v57 + v56[7]) = v68;
  *(void *)(v57 + v56[8]) = 0;
  *(void *)(v57 + v56[9]) = v48;
  *(void *)(v57 + v56[10]) = 0;
  uint64_t v58 = v57 + v56[11];
  *(void *)uint64_t v58 = v54;
  *(unsigned char *)(v58 + 8) = v70;
  uint64_t v59 = sub_1001CBC48();
  if (v59)
  {
    id v60 = v59;
    sub_100183030((uint64_t)v81);
    swift_retain();
    swift_retain();
    uint64_t v61 = v67;
    UUID.init()();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v77, v53);
    uint64_t v62 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
    uint64_t v63 = v76;
    sub_100223DBC(v57, v76 + *(int *)(v62 + 20), type metadata accessor for PlaceSummaryViewModelUnit.Label);
    ((void (*)(uint64_t, char *, uint64_t))v75)(v63, v61, v78);
    *(void *)(v63 + *(int *)(v62 + 24)) = v60;
  }
  else
  {
    sub_100183030((uint64_t)v81);
    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v77, v53);
    uint64_t v63 = v76;
    sub_100223DBC(v57, v76, type metadata accessor for PlaceSummaryViewModelUnit.Label);
  }
  uint64_t v64 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PlaceSummaryViewModelUnit(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
}

void sub_100211AD8(id a1@<X1>, char a2@<W0>, uint64_t *a3@<X8>)
{
  if (!a2)
  {
    id v12 = [a1 _geoMapItem];
    if (!v12
      || (id v13 = [v12 _containedPlace],
          swift_unknownObjectRelease(),
          !v13)
      || (id v14 = [v13 parent], v13, !v14)
      || (id v15 = [v14 _identifier], swift_unknownObjectRelease(), !v15))
    {
      id v5 = [a1 _venueInfo];
      if (!v5) {
        goto LABEL_20;
      }
      id v16 = [v5 parent];
      swift_unknownObjectRelease();
      if (!v16)
      {
LABEL_19:
        id v5 = 0;
        goto LABEL_20;
      }
      id v17 = [v16 businessID];

      uint64_t v18 = (DataSource *)[a1 _coordinate];
      CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:)(v18, v19);
      id v5 = [objc_allocWithZone((Class)GEOMapItemIdentifier) initWithMUID:v17 coordinate:v20];
      id v15 = v5;
      if (!v5) {
        goto LABEL_20;
      }
    }
    id v22 = [objc_allocWithZone((Class)MKMapItemIdentifier) initWithGEOMapItemIdentifier:v15];

    if (v22)
    {
      type metadata accessor for PlaceSummaryViewModelUnit.ContainmentParent(0);
      uint64_t v23 = swift_allocObject();
      id v24 = v22;
      UUID.init()();
      sub_1000FF33C((uint64_t *)&unk_1015D1DD8);
      Published.init(initialValue:)();
      *(void *)(v23 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_parentIdentifier) = v24;

      *a3 = v23;
      uint64_t v25 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a3, 0, 1, v25);
      return;
    }
    goto LABEL_19;
  }
  if (a2 == 1)
  {
    id v5 = [objc_allocWithZone((Class)PlaceSummaryContainmentGeoViewModel) initWithMapItem:a1];
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = [v5 containment];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v11 = v10;
      }
      else
      {
        uint64_t v9 = 0;
        unint64_t v11 = 0;
      }
      sub_10020E76C(v9, v11, 0, 0, 0, 0, 0, 0, (uint64_t)a3, 0);

      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_20;
  }
  id v5 = [objc_allocWithZone((Class)PlaceSummaryContainmentGeoViewModel) initWithMapItem:a1];
  if (!v5)
  {
LABEL_20:
    uint64_t v37 = type metadata accessor for PlaceSummaryViewModelUnit((uint64_t)v5);
    uint64_t v38 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
    v38(a3, 1, 1, v37);
    return;
  }
  uint64_t v26 = v5;
  id v60 = a3;
  id v27 = [v5 prefix];
  if (v27)
  {
    id v28 = v27;
    unint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    double v31 = v30;

    NSString v32 = sub_1000FB364(0, 1, 1, _swiftEmptyArrayStorage);
    uint64_t v34 = v32[2];
    unint64_t v33 = v32[3];
    id v35 = (uint64_t *)(v34 + 1);
    if (v34 >= v33 >> 1) {
      goto LABEL_51;
    }
    goto LABEL_18;
  }
  NSString v32 = _swiftEmptyArrayStorage;
LABEL_28:
  id v39 = [v26 containment];
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      NSString v32 = sub_1000FB364(0, v32[2] + 1, 1, v32);
    }
    unint64_t v45 = v32[2];
    unint64_t v44 = v32[3];
    if (v45 >= v44 >> 1) {
      NSString v32 = sub_1000FB364((void *)(v44 > 1), v45 + 1, 1, v32);
    }
    v32[2] = v45 + 1;
    uint64_t v46 = &v32[2 * v45];
    v46[4] = v41;
    v46[5] = v43;
  }
  uint64_t v47 = (uint64_t)v60;
  id v48 = [self sharedApplication];
  id v49 = [v48 userInterfaceLayoutDirection];

  if (v49 == (id)1)
  {
    uint64_t v50 = v32[2];
    if (v50)
    {
      unint64_t v29 = v50 - 1;
      if (v50 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          NSString v32 = sub_1003481F8(v32);
        }
        double v31 = &v32[2 * v50 + 3];
        id v35 = v32 + 5;
        uint64_t v34 = 1;
        while (1)
        {
          unint64_t v33 = v34 - 1;
          if (v34 - 1 != v29)
          {
            unint64_t v52 = v32[2];
            if (v33 >= v52)
            {
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              NSString v32 = sub_1000FB364((void *)(v33 > 1), (int64_t)v35, 1, v32);
LABEL_18:
              v32[2] = v35;
              id v36 = &v32[2 * v34];
              v36[4] = v29;
              v36[5] = v31;
              goto LABEL_28;
            }
            if (v29 >= v52) {
              goto LABEL_49;
            }
            uint64_t v53 = *(v35 - 1);
            uint64_t v54 = *v35;
            uint64_t v55 = *v31;
            *(v35 - 1) = *(v31 - 1);
            uint64_t *v35 = v55;
            unint64_t v56 = v32[2];
            swift_bridgeObjectRetain();
            if (v29 >= v56) {
              goto LABEL_50;
            }
            *(v31 - 1) = v53;
            uint64_t *v31 = v54;
            swift_bridgeObjectRelease();
          }
          --v29;
          v31 -= 2;
          v35 += 2;
          if (v34++ >= (uint64_t)v29)
          {
            uint64_t v47 = (uint64_t)v60;
            break;
          }
        }
      }
    }
  }
  sub_1000FF33C((uint64_t *)&unk_1015CE230);
  sub_1001010F8((unint64_t *)&qword_1015D5A60, (uint64_t *)&unk_1015CE230);
  uint64_t v57 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v59 = v58;
  swift_bridgeObjectRelease();
  sub_10020E76C(v57, v59, 0, 0, 0, 0, 0, 0, v47, 0);
  swift_bridgeObjectRelease();
}

void sub_100212194(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v5 = [a1 _encyclopedicInfo];
  if (!v5) {
    goto LABEL_23;
  }
  id v6 = [v5 placeSummaryFactoids];
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_23:
    uint64_t v38 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    id v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
    v39(a3, 1, 1, v38);
    return;
  }
  id v7 = v6;
  sub_1000FF33C(&qword_1015D5A70);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62) {
    goto LABEL_21;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
  {
LABEL_22:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  while (1)
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (a2 < 0)
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a2) {
        goto LABEL_28;
      }
      uint64_t v9 = *(void *)(v8 + 8 * a2 + 32);
      swift_unknownObjectRetain();
    }
    swift_bridgeObjectRelease();
    unint64_t v8 = (unint64_t)[self viewModelForFactoid:v9];
    sub_1000FF33C(&qword_1015CE220);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100F5F5F0;
    id v11 = [(id)v8 titleString];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = v14;
    *(void *)(v10 + 48) = 58;
    *(void *)(v10 + 56) = 0xE100000000000000;
    *(void *)(v10 + 64) = 32;
    *(void *)(v10 + 72) = 0xE100000000000000;
    id v15 = [(id)v8 valueString];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    *(void *)(v10 + 80) = v16;
    *(void *)(v10 + 88) = v18;
    a2 = (uint64_t)[self sharedApplication];
    id v19 = [(id)a2 userInterfaceLayoutDirection];

    if (v19 != (id)1) {
      break;
    }
    double v20 = (uint64_t *)(v10 + 88);
    double v21 = (uint64_t *)(v10 + 40);
    uint64_t v22 = 3;
    uint64_t v23 = 1;
    while (1)
    {
      unint64_t v24 = *(void *)(v10 + 16);
      if (v23 - 1 >= v24) {
        break;
      }
      if (v22 >= v24) {
        goto LABEL_20;
      }
      uint64_t v26 = *(v21 - 1);
      uint64_t v25 = *v21;
      uint64_t v27 = *v20;
      *(v21 - 1) = *(v20 - 1);
      *double v21 = v27;
      a2 = *v20;
      *(v20 - 1) = v26;
      uint64_t *v20 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      --v22;
      v20 -= 2;
      v21 += 2;
      if (v23++ >= v22) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v37 <= a2) {
      goto LABEL_22;
    }
  }
LABEL_14:
  sub_1000FF33C((uint64_t *)&unk_1015CE230);
  sub_1001010F8((unint64_t *)&qword_1015D5A60, (uint64_t *)&unk_1015CE230);
  uint64_t v29 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();
  id v32 = [(id)v8 symbolName];
  if (v32)
  {
    unint64_t v33 = v32;
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  sub_10020E76C(v29, v31, v34, v36, 0, 0, 0, 0, a3, 0);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1002125C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a3) {
    a2 = 2;
  }
  id v6 = [a1 venueLabelWithContext:a2];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    if (String.count.getter() > 0)
    {
      v14[0] = v8;
      v14[1] = v10;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      uint64_t v18 = 0;
      char v19 = 1;
      uint64_t v20 = 0;
      char v21 = 0;
      uint64_t v22 = 0;
      sub_100211324(v14, 0, a4);
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);

  return v13(a4, 1, 1, v12);
}

uint64_t sub_100212714@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 _venueInfo];
  if (!v3 || (id v4 = [v3 contents], swift_unknownObjectRelease(), !v4))
  {
    id v6 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2]) {
      goto LABEL_4;
    }
LABEL_8:
    v13[0] = v6;
    sub_1000FF33C((uint64_t *)&unk_1015CE230);
    sub_1001010F8((unint64_t *)&qword_1015D5A60, (uint64_t *)&unk_1015CE230);
    uint64_t v9 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (String.count.getter() <= 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
    }
    else
    {
      v13[0] = v9;
      v13[1] = v11;
      long long v14 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      uint64_t v17 = 0;
      char v18 = 1;
      uint64_t v19 = 0;
      char v20 = 0;
      uint64_t v21 = 0;
      sub_100211324(v13, 0, a2);
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  id v5 = [v4 items];
  swift_unknownObjectRelease();
  id v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6[2]) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100212968@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t countAndFlagsBits = (uint64_t)a1;
  if (a1)
  {
    switch([a1 locationType])
    {
      case 0u:
        id v4 = [(id)countAndFlagsBits address];
        if (!v4)
        {
          __break(1u);
          JUMPOUT(0x100212D40);
        }
        id v5 = v4;
        id v6 = [v4 localizedLabel];

        if (v6) {
          goto LABEL_21;
        }
        goto LABEL_5;
      case 1u:
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v8.super.Class isa = (Class)qword_101611820;
        unint64_t v9 = 0xD000000000000027;
        unint64_t v22 = 0x8000000100F7DF50;
        unint64_t v10 = 0x8000000100F7DF30;
        unint64_t v11 = 0xD000000000000014;
        uint64_t v12 = 1701670728;
        goto LABEL_18;
      case 2u:
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v8.super.Class isa = (Class)qword_101611820;
        unint64_t v9 = 0xD000000000000027;
        unint64_t v22 = 0x8000000100F7DF00;
        unint64_t v10 = 0x8000000100F7DEE0;
        unint64_t v11 = 0xD000000000000014;
        uint64_t v12 = 1802661719;
LABEL_18:
        unint64_t v13 = 0xE400000000000000;
        goto LABEL_19;
      case 3u:
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v8.super.Class isa = (Class)qword_101611820;
        unint64_t v11 = 0xD000000000000016;
        unint64_t v9 = 0xD000000000000029;
        unint64_t v22 = 0x8000000100F7DEB0;
        unint64_t v10 = 0x8000000100F7DE90;
        uint64_t v12 = 0x6C6F6F686353;
        unint64_t v13 = 0xE600000000000000;
LABEL_19:
        Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v11, (Swift::String_optional)0, v8, *(Swift::String *)&v12, *(Swift::String *)&v9);
        uint64_t countAndFlagsBits = v16._countAndFlagsBits;
        unint64_t object = (unint64_t)v16._object;
        goto LABEL_22;
      case 4u:
        id v14 = [(id)countAndFlagsBits autocompletePerson];
        if (v14)
        {
          long long v15 = v14;
          id v6 = sub_10032554C();
        }
        else
        {
          sub_100100830(0, &qword_1015D5A78);
          id v6 = (id)NSString.init(stringLiteral:)();
        }
LABEL_21:
        uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t object = v17;

        goto LABEL_22;
      default:
LABEL_5:
        uint64_t countAndFlagsBits = 0;
        break;
    }
  }
  unint64_t object = 0xE000000000000000;
LABEL_22:
  uint64_t v18 = HIBYTE(object) & 0xF;
  if ((object & 0x2000000000000000) == 0) {
    uint64_t v18 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v18 && String.count.getter() >= 1)
  {
    v23[0] = countAndFlagsBits;
    v23[1] = object;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    uint64_t v27 = 0;
    char v28 = 1;
    uint64_t v29 = 0;
    char v30 = 0;
    uint64_t v31 = 0;
    sub_100211324(v23, 0, a2);
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    return v21(a2, 1, 1, v20);
  }
}

uint64_t sub_100212D54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0);
  __chkstk_darwin(v4);
  id v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v7 = a1;
    id v8 = [v7 _identifier];
    if (v8)
    {
      unint64_t v9 = v8;
      id v10 = [v7 _searchResultPhotoCarousel];
      if (v10)
      {
        unint64_t v11 = v10;
        sub_1000FF33C(&qword_1015D0DB8);
        unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        type metadata accessor for PlaceSummaryPhotoCarouselViewModel(0);
        swift_allocObject();
        id v13 = v7;
        uint64_t v14 = sub_1001A451C((uint64_t)v13, 0);
        swift_retain();
        UUID.init()();
        long long v15 = (uint64_t *)&v6[*(int *)(v4 + 20)];
        sub_100223D3C((unint64_t *)&unk_1015CFD50, (void (*)(uint64_t))type metadata accessor for PlaceSummaryPhotoCarouselViewModel);
        *long long v15 = ObservedObject.init(wrappedValue:)();
        v15[1] = v16;
        if (qword_1015CBD50 != -1) {
          swift_once();
        }
        uint64_t v17 = type metadata accessor for Logger();
        sub_1000F2248(v17, (uint64_t)qword_1016117A8);
        id v18 = v13;
        id v19 = v9;
        id v20 = v18;
        id v21 = v19;
        swift_bridgeObjectRetain();
        unint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v58 = v14;
          uint64_t v59 = a2;
          uint64_t v24 = swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          v60[0] = v57;
          *(_DWORD *)uint64_t v24 = 136381187;
          id v25 = [v20 name];
          if (v25)
          {
            long long v26 = v25;
            uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v29 = v28;
          }
          else
          {
            uint64_t v27 = 0;
            unint64_t v29 = 0xE000000000000000;
          }
          uint64_t v61 = sub_1000F2280(v27, v29, v60);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v24 + 12) = 2049;
          id v48 = [v21 muid];

          uint64_t v61 = (uint64_t)v48;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          *(_WORD *)(v24 + 22) = 2048;
          if (v12 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v49 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = v59;
          swift_bridgeObjectRelease();
          uint64_t v61 = v49;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "[Place Summary] Mapitem %{private}s, muid: %{private}llu has photo carousel with %ld photos", (uint8_t *)v24, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_release();
        }
        else
        {

          swift_release();
          swift_bridgeObjectRelease_n();
        }
        sub_100223DBC((uint64_t)v6, a2, type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel);
        uint64_t v50 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(a2, 0, 1, v50);
      }
      else
      {
        if (qword_1015CBD50 != -1) {
          swift_once();
        }
        uint64_t v37 = type metadata accessor for Logger();
        sub_1000F2248(v37, (uint64_t)qword_1016117A8);
        id v38 = v7;
        id v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v59 = a2;
          uint64_t v41 = swift_slowAlloc();
          uint64_t v42 = (void *)swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          uint64_t v61 = v58;
          *(_DWORD *)uint64_t v41 = 136315395;
          id v43 = [v38 name];
          if (v43)
          {
            unint64_t v44 = v43;
            uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v47 = v46;
          }
          else
          {
            uint64_t v45 = 0;
            uint64_t v47 = 0;
          }
          v60[0] = v45;
          v60[1] = v47;
          sub_1000FF33C(&qword_1015D0E70);
          uint64_t v51 = String.init<A>(describing:)();
          v60[0] = sub_1000F2280(v51, v52, &v61);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2113;
          id v53 = [v38 _identifier];
          id v54 = v53;
          if (v53) {
            v60[0] = (uint64_t)v53;
          }
          else {
            v60[0] = 0;
          }
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v42 = v54;

          _os_log_impl((void *)&_mh_execute_header, v39, v40, "[Place Summary] Photo carousel is nil for mapItem %s, muid: %{private}@", (uint8_t *)v41, 0x16u);
          sub_1000FF33C((uint64_t *)&unk_1015CF600);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          a2 = v59;
        }
        else
        {
        }
        uint64_t v55 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(a2, 1, 1, v55);
      }
    }
  }
  if (qword_1015CBD50 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_1000F2248(v30, (uint64_t)qword_1016117A8);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "[Place Summary] No Mapitem (or nil identifier) when building photo carousel unit", v33, 2u);
    swift_slowDealloc();
  }

  uint64_t v34 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);

  return v35(a2, 1, 1, v34);
}

uint64_t sub_100213604@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v39 = a1;
  uint64_t v3 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for AttributedString();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  id v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale.MeasurementSystem();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v13 = (char *)&v36 - v12;
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MapsFeature_IsEnabled_HikingiOS())
  {
    static Locale.current.getter();
    Locale.measurementSystem.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    static Locale.MeasurementSystem.us.getter();
    char v18 = static Locale.MeasurementSystem.== infix(_:_:)();
    id v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v10, v7);
    v19(v13, v7);
    id v20 = self;
    id v21 = &selRef_miles;
    if ((v18 & 1) == 0) {
      id v21 = &selRef_kilometers;
    }
    id v22 = [v20 *v21];
    id v23 = [v39 _hikeSummary];
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = [v23 lengthStringForUnit:v22];
      if (v25)
      {
        long long v26 = v25;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        AttributeContainer.init()();
        AttributedString.init(_:attributes:)();
        UUID.init()();
        uint64_t v27 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        uint64_t v29 = v37;
        uint64_t v28 = v38;
        (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(a2 + v27[5], v6, v38);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(a2 + v27[12], 1, 1, v28);
        *(_OWORD *)(a2 + v27[6]) = xmmword_100F657F0;
        *(void *)(a2 + v27[7]) = 0;
        *(void *)(a2 + v27[8]) = 0;
        *(void *)(a2 + v27[9]) = 0;
        *(void *)(a2 + v27[10]) = 0;
        uint64_t v30 = a2 + v27[11];
        *(void *)uint64_t v30 = 1;
        *(unsigned char *)(v30 + 8) = 0;
        uint64_t v31 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a2, 0, 1, v31);

        return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v6, v28);
      }
    }
    uint64_t v35 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a2, 1, 1, v35);
  }
  else
  {
    uint64_t v33 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    return v34(a2, 1, 1, v33);
  }
}

uint64_t sub_100213B04@<X0>(void *a1@<X0>, SEL *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MapsFeature_IsEnabled_HikingiOS())
  {
    id v11 = [a1 _hikeSummary];
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = [v11 *a2];
      if (v13)
      {
        uint64_t v14 = v13;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        AttributeContainer.init()();
        AttributedString.init(_:attributes:)();
        UUID.init()();
        uint64_t v15 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a3 + v15[5], v10, v7);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a3 + v15[12], 1, 1, v7);
        uint64_t v16 = (void *)(a3 + v15[6]);
        *uint64_t v16 = 0;
        v16[1] = 0;
        *(void *)(a3 + v15[7]) = 0;
        *(void *)(a3 + v15[8]) = 0;
        *(void *)(a3 + v15[9]) = 0;
        *(void *)(a3 + v15[10]) = 0;
        uint64_t v17 = a3 + v15[11];
        *(void *)uint64_t v17 = 1;
        *(unsigned char *)(v17 + 8) = 0;
        uint64_t v18 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 0, 1, v18);

        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
  }
  uint64_t v20 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  id v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);

  return v21(a3, 1, 1, v20);
}

uint64_t sub_100213DF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  __chkstk_darwin(v5);
  id v60 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale.MeasurementSystem();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v13 = (char *)&v55 - v12;
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MapsFeature_IsEnabled_HikingiOS())
  {
    static Locale.current.getter();
    Locale.measurementSystem.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    static Locale.MeasurementSystem.us.getter();
    char v18 = static Locale.MeasurementSystem.== infix(_:_:)();
    id v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v10, v7);
    v19(v13, v7);
    uint64_t v20 = self;
    id v21 = &selRef_feet;
    if ((v18 & 1) == 0) {
      id v21 = &selRef_meters;
    }
    id v22 = [v20 *v21];
    id v23 = [a1 _hikeSummary];
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = [v23 elevationGainStringForUnit:v22];
      if (v25)
      {
        long long v26 = v25;
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v29 = v28;

        id v30 = [v24 elevationLossStringForUnit:v22];
        if (v30)
        {
          uint64_t v31 = v30;
          uint64_t v57 = v27;
          uint64_t v59 = v29;
          uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v33 = v32;

          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v66._unint64_t object = (void *)0xA200000000000000;
          v34._unint64_t object = (void *)0x8000000100F7DF80;
          v34._uint64_t countAndFlagsBits = 0xD000000000000011;
          v35._uint64_t countAndFlagsBits = 16421;
          v35._unint64_t object = (void *)0xE200000000000000;
          v66._uint64_t countAndFlagsBits = 47042;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)qword_101611820, v35, v66);
          sub_1000FF33C((uint64_t *)&unk_1015D59C0);
          uint64_t v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = xmmword_100F5CF70;
          *(void *)(v36 + 56) = &type metadata for String;
          *(void *)(v36 + 64) = sub_10011A750();
          *(void *)(v36 + 32) = 47042;
          *(void *)(v36 + 40) = 0xA200000000000000;
          uint64_t v56 = static String.localizedStringWithFormat(_:_:)();
          uint64_t v38 = v37;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v63 = 0;
          unint64_t v64 = 0xE000000000000000;
          _StringGuts.grow(_:)(16);
          swift_bridgeObjectRelease();
          uint64_t v63 = 546801378;
          unint64_t v64 = 0xA400000000000000;
          v39._uint64_t countAndFlagsBits = v57;
          v39._unint64_t object = v59;
          String.append(_:)(v39);
          swift_bridgeObjectRelease();
          v40._uint64_t countAndFlagsBits = 32;
          v40._unint64_t object = (void *)0xE100000000000000;
          String.append(_:)(v40);
          v41._uint64_t countAndFlagsBits = v56;
          v41._unint64_t object = v38;
          String.append(_:)(v41);
          swift_bridgeObjectRelease();
          v42._uint64_t countAndFlagsBits = 0x209886E220;
          v42._unint64_t object = (void *)0xA500000000000000;
          String.append(_:)(v42);
          v43._uint64_t countAndFlagsBits = v58;
          v43._unint64_t object = v33;
          String.append(_:)(v43);
          swift_bridgeObjectRelease();
          AttributeContainer.init()();
          unint64_t v44 = v60;
          AttributedString.init(_:attributes:)();
          UUID.init()();
          uint64_t v45 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
          uint64_t v47 = v61;
          uint64_t v46 = v62;
          (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(a2 + v45[5], v44, v62);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(a2 + v45[12], 1, 1, v46);
          id v48 = (void *)(a2 + v45[6]);
          *id v48 = 0;
          v48[1] = 0;
          *(void *)(a2 + v45[7]) = 0;
          *(void *)(a2 + v45[8]) = 0;
          *(void *)(a2 + v45[9]) = 0;
          *(void *)(a2 + v45[10]) = 0;
          uint64_t v49 = a2 + v45[11];
          *(void *)uint64_t v49 = 1;
          *(unsigned char *)(v49 + 8) = 0;
          uint64_t v50 = type metadata accessor for PlaceSummaryViewModelUnit(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(a2, 0, 1, v50);

          return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v44, v46);
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }

    uint64_t v54 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(a2, 1, 1, v54);
  }
  uint64_t v52 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  id v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);

  return v53(a2, 1, 1, v52);
}

uint64_t sub_1002144C0@<X0>(id a1@<X0>, uint64_t *a2@<X8>)
{
  if (qword_1015CBDD8 != -1) {
    swift_once();
  }
  if (byte_1016118B0 == 1)
  {
    id v4 = [self sharedManager];
    id v5 = [v4 lookupMapItem:a1];

    if (v5)
    {

      type metadata accessor for PlaceSummaryViewModelUnit.UserLibrary(0);
      swift_allocObject();
      id v6 = a1;
      char v7 = 1;
LABEL_8:
      *a2 = sub_1001A1C0C(v6, v7);
      uint64_t v10 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
      uint64_t v12 = a2;
      uint64_t v13 = 0;
      uint64_t v14 = v10;
      goto LABEL_10;
    }
  }
  id v8 = [a1 _hikeAssociatedInfo];
  if (v8)
  {
    uint64_t v9 = v8;
    [v8 hasEncryptedTourMuid];

    type metadata accessor for PlaceSummaryViewModelUnit.UserLibrary(0);
    swift_allocObject();
    id v6 = a1;
    char v7 = 0;
    goto LABEL_8;
  }
  uint64_t v15 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v14 = v15;
  uint64_t v12 = a2;
  uint64_t v13 = 1;
LABEL_10:

  return v11(v12, v13, 1, v14);
}

uint64_t sub_10021468C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (qword_1015CBDD8 != -1) {
    swift_once();
  }
  if (byte_1016118B0 == 1)
  {
    id v4 = [self sharedManager];
    id v5 = [v4 lookupMapItem:a1];

    if (v5)
    {
      id v6 = [v5 placeItem];
      uint64_t v7 = dispatch thunk of CollectionPlaceItem.placeItemNote.getter();
      unint64_t v9 = v8;

      if (v9)
      {
        uint64_t v10 = HIBYTE(v9) & 0xF;
        if ((v9 & 0x2000000000000000) == 0) {
          uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
        }
        if (v10)
        {
          type metadata accessor for PlaceSummaryViewModelUnit.UserNote(0);
          uint64_t v11 = swift_allocObject();
          id v12 = a1;
          UUID.init()();
          *(void *)(v11 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit8UserNote_mapItem) = v12;
          uint64_t v13 = (uint64_t *)(v11 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit8UserNote_userNote);
          *uint64_t v13 = v7;
          v13[1] = v9;

          *a2 = v11;
          uint64_t v14 = type metadata accessor for PlaceSummaryViewModelUnit(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
          uint64_t v16 = a2;
          uint64_t v17 = 0;
          uint64_t v18 = v14;
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v19 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v18 = v19;
  uint64_t v16 = a2;
  uint64_t v17 = 1;
LABEL_13:

  return v15(v16, v17, 1, v18);
}

void sub_1002148A0(id a1@<X2>, void *a2@<X1>, void *a3@<X4>, uint64_t a4@<X5>, char a5@<W6>, void *a6@<X7>, uint64_t a7@<X8>, id *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13 = a2[2];
  uint64_t v14 = a2[3];
  uint64_t v16 = a2[4];
  uint64_t v15 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v18 = a2[7];
  uint64_t v19 = a2[8];
  uint64_t v20 = a2[9];
  uint64_t v21 = a2[10];
  uint64_t v22 = a2[11];
  uint64_t v24 = a2[12];
  unint64_t v23 = a2[13];
  unint64_t v25 = a2[14];
  switch(v23 >> 60)
  {
    case 1uLL:
      sub_100215B80(a1, v13, 0, a3, a7);
      return;
    case 2uLL:
      uint64_t v139 = a2[6];
      uint64_t v142 = a2[8];
      v137 = (void *)a2[14];
      unint64_t v145 = a2[13];
      uint64_t v153 = a2[2];
      swift_bridgeObjectRetain();
      id v37 = [a1 mapItem];
      if (v37)
      {
        uint64_t v38 = v37;
        sub_10020EEF0(v153 & 1, v14, v37, a4, 0, a7);
      }
      else
      {
        uint64_t v71 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(a7, 1, 1, v71);
      }
      sub_100223808(v153, v14, v16, v15, v139, v18, v142, v20, v21, v22, v24, v145, v137);
      return;
    case 3uLL:
      sub_100215E10(a1, v13, a6, a7);
      return;
    case 4uLL:
      uint64_t v32 = a2[2];
      uint64_t v33 = (uint64_t *)a7;
      id v34 = [a1 mapItem];
      if (!v34) {
        goto LABEL_32;
      }
      id v152 = v34;
      sub_10020FB0C(v34, 0, v32 & 1, (uint64_t)v33);
      goto LABEL_72;
    case 5uLL:
      unint64_t v48 = a2[2];
      uint64_t v33 = (uint64_t *)a7;
      id v34 = [a1 mapItem];
      if (!v34) {
        goto LABEL_32;
      }
      id v152 = v34;
      if ((a5 & 1) == 0) {
        goto LABEL_71;
      }
      sub_1002103B0(v48, v34, (uint64_t)v33);
      goto LABEL_72;
    case 6uLL:
      *(void *)&long long v155 = a2[2];
      *((void *)&v155 + 1) = v14;
      *(void *)&long long v156 = v16;
      *((void *)&v156 + 1) = v15;
      *(void *)&long long v157 = v17;
      *((void *)&v157 + 1) = v18;
      *(void *)&long long v158 = v19;
      *((void *)&v158 + 1) = v20;
      *(void *)&long long v159 = v21;
      BYTE8(v159) = v22 & 1;
      *(void *)&long long v160 = v24;
      BYTE8(v160) = v23 & 1;
      unint64_t v161 = v25;
      id v154 = (id)v13;
      uint64_t v140 = v17;
      uint64_t v143 = v19;
      unint64_t v146 = v23;
      uint64_t v49 = (void *)v25;
      id v51 = (id)v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100211324(&v155, a5 & 1, a7);
      sub_100223808((uint64_t)v154, v14, v16, v15, v140, v18, v143, v20, v21, v22, v24, v146, v49);
      return;
    case 7uLL:
      if (!a11) {
        goto LABEL_31;
      }
      uint64_t v39 = *(void *)(a11 + 16);
      if (!v39) {
        goto LABEL_31;
      }
      Swift::String v40 = (long long *)(a11 + 32);
      do
      {
        long long v41 = v40[5];
        unint64_t v42 = *((void *)v40 + 12);
        long long v43 = v40[3];
        long long v159 = v40[4];
        long long v44 = v40[1];
        long long v45 = v40[2];
        long long v155 = *v40;
        long long v156 = v44;
        unint64_t v161 = v42;
        long long v160 = v41;
        long long v157 = v45;
        long long v158 = v43;
        if ((BYTE8(v159) & 1) == 0 && (void)v159 == v13)
        {
          uint64_t v46 = a7;
          sub_100223C50((uint64_t)&v155);
          sub_100211324(&v155, 1, v46);
          sub_100223CC8((uint64_t)&v155);
          return;
        }
        Swift::String v40 = (long long *)((char *)v40 + 104);
        --v39;
      }
      while (v39);
LABEL_31:
      uint64_t v33 = (uint64_t *)a7;
      id v34 = 0;
      goto LABEL_32;
    case 8uLL:
      uint64_t v57 = a2[2];
      uint64_t v33 = (uint64_t *)a7;
      id v34 = [a1 mapItem];
      if (!v34) {
        goto LABEL_32;
      }
      id v152 = v34;
      if ((a5 & 1) == 0) {
        goto LABEL_71;
      }
      sub_100211AD8(v34, v57, v33);
      goto LABEL_72;
    case 9uLL:
      uint64_t v35 = a2[2];
      uint64_t v33 = (uint64_t *)a7;
      id v34 = [a1 mapItem];
      if (!v34) {
        goto LABEL_32;
      }
      id v152 = v34;
      sub_100212194(v34, v35, (uint64_t)v33);
      goto LABEL_72;
    case 0xAuLL:
      if (v23 == 0xA000000000000000 && !(v14 | v13 | v16 | v15 | v17 | v18 | v19 | v20 | v21 | v22 | v24 | v25))
      {
        uint64_t v52 = a7;
        id v53 = [a1 mapItem];
        if (v53)
        {
          uint64_t v54 = v53;
          id v55 = [v53 name];
          goto LABEL_40;
        }
LABEL_42:
        uint64_t v69 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56);
        uint64_t v60 = v69;
        uint64_t v61 = v52;
        goto LABEL_43;
      }
      uint64_t v63 = v16 | v14 | v15 | v17 | v18 | v19 | v20 | v21 | v22 | v24;
      if (v25 || v23 != 0xA000000000000000 || v13 != 1 || v63)
      {
        if (!v25 && v23 == 0xA000000000000000 && v13 == 2 && !v63)
        {
          uint64_t v72 = a7;
          id v73 = [a1 mapItem];
          if (v73)
          {
            uint64_t v74 = v73;
            if ([v73 _hasPriceDescription]) {
              id v75 = [v74 _priceDescription];
            }
            else {
              id v75 = [v74 _priceRangeString];
            }
            id v83 = v75;
            if (v83)
            {
              uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v86 = v85;
            }
            else
            {
              uint64_t v84 = 0;
              unint64_t v86 = 0;
            }
            sub_10020E76C(v84, v86, 0, 0, 0, 0, 0, 0, v72, 0);

            goto LABEL_88;
          }
          uint64_t v82 = type metadata accessor for PlaceSummaryViewModelUnit(0);
          uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56);
          uint64_t v60 = v82;
          uint64_t v61 = v72;
          goto LABEL_43;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 3 && !v63)
        {
          uint64_t v76 = a7;
          id v77 = [a1 mapItem];
          if (!v77)
          {
            uint64_t v87 = type metadata accessor for PlaceSummaryViewModelUnit(0);
            uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56);
            uint64_t v60 = v87;
            uint64_t v61 = v76;
            goto LABEL_43;
          }
          id v152 = v77;
          if ([v77 _hasTransitLabels])
          {
            UUID.init()();
            *(void *)(v76 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0) + 20)) = v152;
            uint64_t v78 = type metadata accessor for PlaceSummaryViewModelUnit(0);
            swift_storeEnumTagMultiPayload();
            uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56);
            uint64_t v61 = v76;
            uint64_t v70 = 0;
            uint64_t v60 = v78;
            goto LABEL_44;
          }
          uint64_t v88 = type metadata accessor for PlaceSummaryViewModelUnit(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v76, 1, 1, v88);
          goto LABEL_72;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 4 && !v63)
        {
          uint64_t v33 = (uint64_t *)a7;
          id v34 = [a1 mapItem];
          if (v34)
          {
            id v152 = v34;
            if (a5)
            {
              sub_10021023C((uint64_t)v34, (uint64_t)v33);
            }
            else
            {
LABEL_71:
              uint64_t v80 = type metadata accessor for PlaceSummaryViewModelUnit(0);
              (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v33, 1, 1, v80);
            }
            goto LABEL_72;
          }
LABEL_32:
          uint64_t v58 = type metadata accessor for PlaceSummaryViewModelUnit((uint64_t)v34);
          uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56);
          uint64_t v60 = v58;
          uint64_t v61 = (uint64_t)v33;
LABEL_43:
          uint64_t v70 = 1;
LABEL_44:
          v59(v61, v70, 1, v60);
          return;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 5 && !v63)
        {
          uint64_t v33 = (uint64_t *)a7;
          id v34 = [a1 mapItem];
          if (!v34) {
            goto LABEL_32;
          }
          id v152 = v34;
          sub_100210F08(v34, v33);
LABEL_72:
          id v81 = v152;
LABEL_73:

          return;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 6 && !v63)
        {
          uint64_t v33 = (uint64_t *)a7;
          id v34 = [a1 mapItem];
          if (!v34) {
            goto LABEL_32;
          }
          id v152 = v34;
          sub_1002111AC(v34, (uint64_t)v33);
          goto LABEL_72;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 7 && !v63)
        {
          uint64_t v89 = a7;
          id v90 = [self autocompleteClientSourceTitleWithType:a10];
          if (v90)
          {
            uint64_t v91 = v90;
            uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v94 = v93;
          }
          else
          {
            uint64_t v92 = 0;
            unint64_t v94 = 0;
          }
          sub_10020E76C(v92, v94, 0, 0, 0, 0, 0, 0, v89, 0);
          goto LABEL_88;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 8 && !v63)
        {
          uint64_t v96 = a7;
          swift_beginAccess();
          if (*a8)
          {
            id v97 = *a8;
            id v98 = [v97 titleCellString];
LABEL_117:
            id v100 = v98;
            if (v100)
            {
              uint64_t v101 = v100;
              uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v104 = v103;
            }
            else
            {
              uint64_t v102 = 0;
              unint64_t v104 = 0;
            }
            sub_10020E76C(v102, v104, 0, 0, 0, 0, 0, 0, v96, 0);

            swift_bridgeObjectRelease();
            return;
          }
          id v105 = [a1 title];
          uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v108 = v107;

          id v109 = [a1 titleHighlightRanges];
          sub_100100830(0, (unint64_t *)&unk_1015D5A28);
          uint64_t v110 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          char v111 = *(unsigned char *)(a9 + OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type);
          uint64_t v112 = v96;
          uint64_t v113 = v106;
          unint64_t v114 = v108;
          unint64_t v115 = v110;
          char v116 = 1;
          goto LABEL_135;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 9 && !v63)
        {
          uint64_t v96 = a7;
          swift_beginAccess();
          if (*a8)
          {
            id v97 = *a8;
            id v98 = [v97 subtitleCellString];
            goto LABEL_117;
          }
          id v118 = [a1 subtitle];
          uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v121 = v120;

          id v122 = [a1 subtitleHighlightRanges];
          sub_100100830(0, (unint64_t *)&unk_1015D5A28);
          uint64_t v123 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v112 = v96;
          uint64_t v113 = v119;
          unint64_t v114 = v121;
          unint64_t v115 = v123;
          char v111 = 0;
          char v116 = 0;
LABEL_135:
          sub_100215FD4(v113, v114, v115, v111, v116, v112);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 10 && !v63)
        {
          sub_100216BB0(a1, (SEL *)&selRef_displayName, a7);
          return;
        }
        uint64_t v117 = (uint64_t *)a7;
        if (!v25 && v23 == 0xA000000000000000 && v13 == 11 && !v63)
        {
          sub_100216958(a1, a7);
          return;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 12 && !v63)
        {
          sub_100216BB0(a1, (SEL *)&selRef_subtitle, a7);
          return;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 13 && !v63)
        {
          id v152 = [a1 mapItem];
          sub_100210BAC(v152, v117);
          goto LABEL_72;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 14 && !v63) {
          goto LABEL_150;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 15 && !v63)
        {
          id v124 = [a1 mapItem];
          id v152 = v124;
          if (!v124) {
            goto LABEL_151;
          }
          if (MapsFeature_IsEnabled_HikingWatch())
          {
            id v126 = [v152 _hikingTrailDifficultyFactoid];
            if (v126)
            {
LABEL_167:
              long long v127 = v126;
              id v150 = [self viewModelForFactoid:v126];
              sub_10021B334(v150, (uint64_t)v117);

              id v81 = v150;
              goto LABEL_73;
            }
          }
LABEL_168:
          uint64_t v128 = type metadata accessor for PlaceSummaryViewModelUnit(0);
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v117, 1, 1, v128);
          goto LABEL_72;
        }
        if (!v25 && v23 == 0xA000000000000000 && v13 == 16 && !v63)
        {
          id v124 = [a1 mapItem];
          id v152 = v124;
          if (!v124) {
            goto LABEL_151;
          }
          if (MapsFeature_IsEnabled_HikingWatch())
          {
            id v126 = [v152 _hikingTrailLengthFactoid];
            if (v126) {
              goto LABEL_167;
            }
          }
          goto LABEL_168;
        }
        if (v25 || v23 != 0xA000000000000000 || v13 != 17 || v63)
        {
          if (!v25 && v23 == 0xA000000000000000 && v13 == 18 && !v63)
          {
            id v129 = [a1 mapItem];
            if (v129)
            {
              int v130 = v129;
              uint64_t v131 = &selRef_hikeTypeNameString;
LABEL_179:
              id v152 = v130;
              sub_100213B04(v130, (SEL *)v131, (uint64_t)v117);
              goto LABEL_72;
            }
            __break(1u);
            goto LABEL_200;
          }
          if (!v25 && v23 == 0xA000000000000000 && v13 == 19 && !v63)
          {
            id v132 = [a1 mapItem];
            if (v132)
            {
              id v152 = v132;
              sub_100213604(v132, (uint64_t)v117);
              goto LABEL_72;
            }
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
            goto LABEL_202;
          }
          if (!v25 && v23 == 0xA000000000000000 && v13 == 20 && !v63)
          {
            id v133 = [a1 mapItem];
            if (v133)
            {
              int v130 = v133;
              uint64_t v131 = &selRef_durationString;
              goto LABEL_179;
            }
            goto LABEL_201;
          }
          if (!v25 && v23 == 0xA000000000000000 && v13 == 21 && !v63)
          {
            id v134 = [a1 mapItem];
            if (v134)
            {
              id v152 = v134;
              sub_100213DF8(v134, (uint64_t)v117);
              goto LABEL_72;
            }
LABEL_202:
            __break(1u);
            JUMPOUT(0x100215B54);
          }
        }
LABEL_150:
        id v124 = 0;
LABEL_151:
        uint64_t v125 = type metadata accessor for PlaceSummaryViewModelUnit((uint64_t)v124);
        uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56);
        uint64_t v60 = v125;
        uint64_t v61 = (uint64_t)v117;
        goto LABEL_43;
      }
      uint64_t v52 = a7;
      id v64 = [a1 mapItem];
      if (!v64) {
        goto LABEL_42;
      }
      uint64_t v54 = v64;
      id v55 = [v64 _firstLocalizedCategoryName];
LABEL_40:
      id v65 = v55;

      if (!v65) {
        goto LABEL_42;
      }
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v68 = v67;

      sub_10020E76C(v66, v68, 0, 0, 0, 0, 0, 0, v52, 0);
LABEL_88:
      swift_bridgeObjectRelease();
      return;
    default:
      uint64_t v138 = a2[6];
      uint64_t v141 = a2[8];
      v136 = (void *)a2[14];
      unint64_t v144 = a2[13];
      id v151 = (id)a2[2];
      swift_bridgeObjectRetain();
      id v27 = [a1 mapItem];
      if (v27)
      {
        uint64_t v28 = v27;
        id v29 = [v27 _secondaryName];

        if (v29)
        {
          uint64_t v135 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v31 = v30;

          sub_10020E76C(v135, v31, (uint64_t)v151, v14, 0, 0, 0, 0, a7, 0);
          sub_100223808((uint64_t)v151, v14, v16, v15, v138, v18, v141, v20, v21, v22, v24, v144, v136);
          goto LABEL_88;
        }
      }
      sub_100223808((uint64_t)v151, v14, v16, v15, v138, v18, v141, v20, v21, v22, v24, v144, v136);
      uint64_t v62 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56);
      uint64_t v60 = v62;
      uint64_t v61 = a7;
      goto LABEL_43;
  }
}

void sub_100215B80(id a1@<X2>, uint64_t a2@<X0>, char a3@<W1>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v10 = [a1 mapItem];
  if (v10)
  {
    uint64_t v11 = v10;
    int v12 = a3 & 1;
    if ([a1 _type] == (id)2)
    {
      double v26 = 0.0;
      double v27 = 0.0;
      if ([a1 getCoordinate:&v26])
      {
        double v13 = v26;
        double v14 = v27;
        if (v12) {
          id v15 = 0;
        }
        else {
          id v15 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:a2];
        }
        char v25 = 1;
        id v18 = [self distanceStringFromLocation:a4 toCoordinate:v11 withMapItem:&v25 showsDistance:0 onlyUseThreshold:v15 maximumDistance:v13 useShortThreshold:v14];
        if (v18)
        {
          uint64_t v19 = v18;
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v22 = v21;

          UUID.init()();
          unint64_t v23 = (uint64_t *)(a5 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Distance(0) + 20));
          uint64_t *v23 = v20;
          v23[1] = v22;
          uint64_t v24 = type metadata accessor for PlaceSummaryViewModelUnit(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a5, 0, 1, v24);
          return;
        }
      }
    }
    sub_10020EB2C(a2, v12, v11, a4, 0, a5);
  }
  else
  {
    uint64_t v16 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v17(a5, 1, 1, v16);
  }
}

uint64_t sub_100215E10@<X0>(id a1@<X1>, char a2@<W0>, void *a3@<X2>, uint64_t a4@<X8>)
{
  if (a2 == 3)
  {
    return sub_10021AE7C(a1, a3, a4);
  }
  else
  {
    id v7 = [a1 mapItem];
    if (v7)
    {
      unint64_t v8 = v7;
      if (a2)
      {
        if (a2 == 1) {
          id v9 = [v7 _addressFormattedAsCity];
        }
        else {
          id v9 = [v7 _addressFormattedAsShortenedAddress];
        }
      }
      else
      {
        id v9 = [v7 _addressFormattedAsName];
      }
      id v12 = v9;
      if (v12)
      {
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v15 = v14;
      }
      else
      {
        uint64_t v13 = 0;
        unint64_t v15 = 0;
      }
      sub_10020E76C(v13, v15, 0, 0, 0, 0, 0, 0, a4, 0);

      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
      return v11(a4, 1, 1, v10);
    }
  }
}

uint64_t sub_100215FD4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1000FF33C(&qword_1015D0A38);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000FF33C(&qword_1015D0A40);
  uint64_t v67 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v62 = (char *)&v54 - v18;
  uint64_t v19 = type metadata accessor for AttributedString();
  uint64_t v56 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v69 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)&v54 - v22;
  if (!a2 || String.count.getter() < 1)
  {
    uint64_t v28 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    id v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
    return v29(a6, 1, 1, v28);
  }
  if (!a3)
  {
LABEL_36:
    if (a4)
    {
      if (a4 == 1)
      {
        static Color.primary.getter();
        uint64_t v52 = Color.opacity(_:)();
        swift_release();
      }
      else
      {
        uint64_t v52 = static Color.primary.getter();
      }
      uint64_t v53 = 0;
    }
    else
    {
      if (a5) {
        static Font.body.getter();
      }
      else {
        static Font.subheadline.getter();
      }
      static Font.Weight.regular.getter();
      uint64_t v53 = Font.weight(_:)();
      swift_release();
      uint64_t v52 = 0;
    }
    sub_10020E76C(a1, a2, 0, 0, v52, v53, 0, 0, a6, 0);
    swift_release();
    return swift_release();
  }
  uint64_t v63 = v16;
  uint64_t v61 = v19;
  unint64_t v24 = a3 >> 62;
  if (!(a3 >> 62))
  {
    uint64_t v25 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25 >= 1) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter() < 1)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_6:
  sub_100219614(a4, a5 & 1);
  if (a4)
  {
    if (a4 == 1)
    {
      uint64_t result = static Color.primary.getter();
      uint64_t v27 = result;
    }
    else
    {
      static Color.primary.getter();
      uint64_t v27 = Color.opacity(_:)();
      uint64_t result = swift_release();
    }
    uint64_t v60 = 0;
    uint64_t v30 = a3 & 0xFFFFFFFFFFFFFF8;
    if (!v24) {
      goto LABEL_16;
    }
  }
  else
  {
    if (a5) {
      static Font.headline.getter();
    }
    else {
      static Font.subheadline.getter();
    }
    static Font.Weight.semibold.getter();
    uint64_t v60 = Font.weight(_:)();
    uint64_t result = swift_release();
    uint64_t v27 = 0;
    uint64_t v30 = a3 & 0xFFFFFFFFFFFFFF8;
    if (!v24)
    {
LABEL_16:
      uint64_t v31 = *(void *)(v30 + 16);
      uint64_t v32 = v61;
      if (!v31)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v33 = v56;
        id v34 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
LABEL_33:
        uint64_t v46 = v69;
        v34(v69, v23, v32);
        UUID.init()();
        uint64_t v47 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        v34((char *)(a6 + v47[5]), v46, v32);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(a6 + v47[12], 1, 1, v32);
        unint64_t v48 = (void *)(a6 + v47[6]);
        *unint64_t v48 = 0;
        v48[1] = 0;
        *(void *)(a6 + v47[7]) = 0;
        *(void *)(a6 + v47[8]) = 0;
        *(void *)(a6 + v47[9]) = 0;
        *(void *)(a6 + v47[10]) = 0;
        uint64_t v49 = a6 + v47[11];
        *(void *)uint64_t v49 = 1;
        *(unsigned char *)(v49 + 8) = 0;
        uint64_t v50 = type metadata accessor for PlaceSummaryViewModelUnit(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(a6, 0, 1, v50);
        swift_release();
        swift_release();
        id v51 = *(void (**)(char *, uint64_t))(v33 + 8);
        v51(v46, v32);
        return ((uint64_t (*)(char *, uint64_t))v51)(v23, v32);
      }
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v32 = v61;
  if (!v31) {
    goto LABEL_17;
  }
LABEL_21:
  uint64_t v59 = v27;
  uint64_t v70 = v23;
  uint64_t v55 = a6;
  if (v31 >= 1)
  {
    uint64_t v35 = 0;
    unint64_t v68 = a3;
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v56 + 16);
    id v65 = (unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    unint64_t v66 = a3 & 0xC000000000000001;
    unint64_t v54 = (v56 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v37 = (uint64_t)v62;
    uint64_t v67 = v31;
    uint64_t v57 = (void (**)(char *, char *, uint64_t))(v56 + 16);
    uint64_t v58 = v14;
    do
    {
      if (v66) {
        id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v38 = *(id *)(v68 + 8 * v35 + 32);
      }
      uint64_t v39 = v38;
      [v38 rangeValue];
      id v64 = *v36;
      v64(v69, v70, v32);
      sub_100223D3C(&qword_1015D0A60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
      Range<>.init<A>(_:in:)();
      if ((*v65)(v14, 1, v71) == 1)
      {

        sub_1000FF2E0((uint64_t)v14, &qword_1015D0A38);
      }
      else
      {
        sub_100101750((uint64_t)v14, v37, &qword_1015D0A40);
        uint64_t v40 = (uint64_t)v63;
        uint64_t v41 = v59;
        if (v59)
        {
          sub_1000FF27C(v37, (uint64_t)v63, &qword_1015D0A40);
          uint64_t KeyPath = swift_getKeyPath();
          __chkstk_darwin(KeyPath);
          swift_getKeyPath();
          uint64_t v73 = v41;
          swift_retain_n();
          sub_1001010F8(&qword_1015D0A70, &qword_1015D0A40);
          long long v43 = (void (*)(unsigned char *, void))AttributedString.subscript.modify();
          sub_100180AE8();
          AttributedSubstring.subscript.setter();
          v43(v72, 0);
          uint64_t v40 = (uint64_t)v63;
          swift_release();
          sub_1000FF2E0(v40, &qword_1015D0A40);
        }
        sub_1000FF27C(v37, v40, &qword_1015D0A40);
        uint64_t v44 = swift_getKeyPath();
        __chkstk_darwin(v44);
        swift_getKeyPath();
        uint64_t v73 = v60;
        swift_retain();
        sub_1001010F8(&qword_1015D0A70, &qword_1015D0A40);
        long long v45 = (void (*)(unsigned char *, void))AttributedString.subscript.modify();
        sub_100223A8C();
        uint64_t v37 = (uint64_t)v62;
        AttributedSubstring.subscript.setter();
        v45(v72, 0);

        sub_1000FF2E0(v40, &qword_1015D0A40);
        sub_1000FF2E0(v37, &qword_1015D0A40);
        uint64_t v32 = v61;
        uint64_t v36 = v57;
        unint64_t v14 = v58;
      }
      ++v35;
    }
    while (v67 != v35);
    swift_bridgeObjectRelease();
    a6 = v55;
    uint64_t v33 = v56;
    unint64_t v23 = v70;
    id v34 = v64;
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

uint64_t sub_100216958@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 collectionResult];
  if (v3 && (id v4 = v3, v5 = [v3 collection], v4, v5))
  {
    id v6 = [v5 numberOfItems];

    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    id v7 = (void *)qword_101611820;
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100F5CF70;
    *(void *)(v11 + 56) = &type metadata for UInt;
    *(void *)(v11 + 64) = &protocol witness table for UInt;
    *(void *)(v11 + 32) = v6;
    uint64_t v12 = static String.localizedStringWithFormat(_:_:)();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10020E76C(v12, v14, 0, 0, 0, 0, 0, 0, a2, 0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    return v17(a2, 1, 1, v16);
  }
}

uint64_t sub_100216BB0@<X0>(void *a1@<X0>, SEL *a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = [a1 publisherResult];
  if (v6)
  {
    id v7 = v6;
    id v8 = [v6 publisher];

    if (v8)
    {
      id v9 = [v8 publisherAttribution];

      if (v9)
      {
        id v10 = [v9 *a2];
        swift_unknownObjectRelease();
        if (v10)
        {
          uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v13 = v12;

          sub_10020E76C(v11, v13, 0, 0, 0, 0, 0, 0, a3, 0);
LABEL_11:
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  id v14 = [a1 collectionResult];
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = [v14 collection];

    if (v16)
    {
      id v17 = [v16 publisherAttribution];

      if (v17)
      {
        id v18 = [v17 *a2];
        swift_unknownObjectRelease();
        if (v18)
        {
          uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v21 = v20;

          sub_10020E76C(v19, v21, 0, 0, 0, 0, 0, 0, a3, 0);
          goto LABEL_11;
        }
      }
    }
  }
  uint64_t v23 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);

  return v24(a3, 1, 1, v23);
}

uint64_t sub_100216DFC@<X0>(void *a1@<X1>, void *a2@<X3>, char *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v8 - 8);
  unint64_t v9 = a1[13];
  if (v9 >> 60 != 10) {
    goto LABEL_20;
  }
  uint64_t v10 = a1[14];
  uint64_t v11 = a1[5];
  uint64_t v13 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v14 = a1[2];
  if (v9 == 0xA000000000000000)
  {
    v15.i64[0] = a1[9];
    v15.i64[1] = a1[8];
    v16.i64[0] = a1[14];
    v16.i64[1] = a1[12];
    v17.i64[0] = a1[7];
    v17.i64[1] = a1[6];
    v18.i64[0] = a1[11];
    v18.i64[1] = a1[10];
    int8x16_t v19 = vorrq_s8(vorrq_s8(v16, v15), vorrq_s8(v18, v17));
    if (!(v13 | *(void *)&vorr_s8(*(int8x8_t *)v19.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL)) | v12 | v11 | v14))
    {
      id v20 = [a2 query];
      if (v20)
      {
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v23 = v22;

        unint64_t v24 = a3;
        NSString v25 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRetain();
        NSString v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v27 = [v25 _maps_prefixMatchesForSearchString:v26];

        if (v27)
        {
          sub_100100830(0, (unint64_t *)&unk_1015D5A28);
          id v20 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          id v20 = 0;
        }
      }
      else
      {
        long long v43 = a3;
        uint64_t v21 = 0;
        unint64_t v23 = 0;
      }
      sub_100215FD4(v21, v23, (unint64_t)v20, *(unsigned char *)(*(void *)&a3[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type]+ OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, a4);

      swift_bridgeObjectRelease();
LABEL_27:
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v28 = a1[11] | a1[12] | a1[10] | a1[9] | a1[8] | a1[7] | a1[6] | v11 | v12 | v13;
  if (!v10 && v9 == 0xA000000000000000 && v14 == 7 && !v28)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v45._unint64_t object = (void *)0x8000000100F7E130;
    v29._uint64_t countAndFlagsBits = 0x5320746E65636552;
    v29._unint64_t object = (void *)0xED00006863726165;
    v30._uint64_t countAndFlagsBits = 0;
    v30._unint64_t object = (void *)0xE000000000000000;
    v45._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
    Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)qword_101611820, v30, v45);
    sub_10020E76C(v31._countAndFlagsBits, (unint64_t)v31._object, 0, 0, 0, 0, 0, 0, a4, 0);
    goto LABEL_27;
  }
  if (!v10 && v9 == 0xA000000000000000 && v14 == 26 && !v28)
  {
    id v32 = [a2 locationDisplayString];
    if (v32)
    {
      uint64_t v33 = v32;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      UUID.init()();
      AttributeContainer.init()();
      id v34 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
      AttributedString.init(_:attributes:)();
      uint64_t v35 = a4 + v34[12];
      uint64_t v36 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
      uint64_t v37 = (void *)(a4 + v34[6]);
      void *v37 = 0;
      v37[1] = 0;
      *(void *)(a4 + v34[7]) = 0;
      *(void *)(a4 + v34[8]) = 0;
      *(void *)(a4 + v34[9]) = 0;
      *(void *)(a4 + v34[10]) = 0;
      uint64_t v38 = a4 + v34[11];
      *(void *)uint64_t v38 = 1;
      *(unsigned char *)(v38 + 8) = 0;
      uint64_t v39 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a4, 0, 1, v39);
    }
  }
  else
  {
LABEL_20:
    id v32 = 0;
  }
  uint64_t v41 = type metadata accessor for PlaceSummaryViewModelUnit((uint64_t)v32);
  unint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);

  return v42(a4, 1, 1, v41);
}

void sub_100217338(id a1@<X6>, void *a2@<X1>, uint64_t a3@<X3>, unint64_t a4@<X4>, void *a5@<X5>, void *a6@<X7>, uint64_t a7@<X8>, void *a8)
{
  uint64_t v9 = a2[2];
  unint64_t v10 = a2[13];
  if (v10 >> 60 != 1)
  {
    if (v10 >> 60 == 10)
    {
      uint64_t v12 = a2[14];
      uint64_t v14 = a2[11];
      uint64_t v13 = a2[12];
      uint64_t v16 = a2[9];
      uint64_t v15 = a2[10];
      uint64_t v18 = a2[7];
      uint64_t v17 = a2[8];
      uint64_t v19 = a2[5];
      uint64_t v20 = a2[6];
      unint64_t v23 = a2 + 3;
      uint64_t v21 = a2[3];
      uint64_t v22 = v23[1];
      if (v10 == 0xA000000000000000)
      {
        v25.i64[0] = v16;
        v25.i64[1] = v17;
        v26.i64[0] = v12;
        v26.i64[1] = v13;
        v27.i64[0] = v18;
        v27.i64[1] = v20;
        v28.i64[0] = v14;
        v28.i64[1] = v15;
        int8x16_t v29 = vorrq_s8(vorrq_s8(v26, v25), vorrq_s8(v28, v27));
        if (!(v21 | *(void *)&vorr_s8(*(int8x8_t *)v29.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL)) | v22 | v19 | v9))
        {
          Swift::String v30 = a5;
          NSString v31 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRetain();
          NSString v32 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v33 = [v31 _maps_prefixMatchesForSearchString:v32];

          if (v33)
          {
            sub_100100830(0, (unint64_t *)&unk_1015D5A28);
            unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
            unint64_t v34 = 0;
          }
          sub_100215FD4(a3, a4, v34, *(unsigned char *)(*(void *)&v30[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type]+ OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, a7);

LABEL_30:
          swift_bridgeObjectRelease();
          return;
        }
      }
      uint64_t v38 = v14 | v13 | v15 | v16 | v17 | v18 | v20 | v19 | v22 | v21;
      if (!v12 && v10 == 0xA000000000000000 && v9 == 7 && !v38)
      {
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v46._unint64_t object = (void *)0x8000000100F7E0E0;
        v39._uint64_t countAndFlagsBits = 0x796C746E65636552;
        v39._unint64_t object = (void *)0xEF64657765695620;
        v40._uint64_t countAndFlagsBits = 0;
        v40._unint64_t object = (void *)0xE000000000000000;
        v46._uint64_t countAndFlagsBits = 0xD00000000000004CLL;
        Swift::String v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)qword_101611820, v40, v46);
        sub_10020E76C(v41._countAndFlagsBits, (unint64_t)v41._object, 0, 0, 0, 0, 0, 0, a7, 0);
        goto LABEL_30;
      }
      if (!v12 && v10 == 0xA000000000000000 && v9 == 27 && !v38)
      {
        sub_100217770(a8, a7);
        return;
      }
    }
    goto LABEL_25;
  }
  id v36 = [a1 geoMapItem];
  if (!v36)
  {
LABEL_25:
    uint64_t v42 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    long long v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
    v43(a7, 1, 1, v42);
    return;
  }
  id v37 = [objc_allocWithZone((Class)MKMapItem) initWithGeoMapItem:v36 isPlaceHolderPlace:0];
  if (!v37)
  {
    swift_unknownObjectRelease();
    goto LABEL_25;
  }
  id v44 = v37;
  sub_10020EB2C(v9, 0, v37, a6, 0, a7);
  swift_unknownObjectRelease();
}

uint64_t sub_100217770@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 name];
  if (v4)
  {
    id v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    if ([a1 _venueFeatureType] == (id)4)
    {
      swift_bridgeObjectRelease();
      id v6 = [a1 venueLabelWithContext:2];
      if (v6)
      {
        id v7 = v6;
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v10 = v9;
      }
      else
      {
        uint64_t v8 = 0;
        unint64_t v10 = 0;
      }
      id v23 = [a1 _venueInfo];
      if (!v23
        || (id v24 = [v23 parent], swift_unknownObjectRelease(), !v24)
        || (unsigned int v25 = [v24 featureType], v24, v25 != 2))
      {
        id v26 = [a1 _geoMapItem];
        if (v26)
        {
          id v27 = [v26 addressObject];
          swift_unknownObjectRelease();
          if (v27)
          {
            id v28 = [v27 venueShortAddress];

            if (v28)
            {
              uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v31 = v30;

              if (String.count.getter() >= 1)
              {
                swift_bridgeObjectRelease();
                sub_10020E76C(v29, v31, 0, 0, 0, 0, 0, 0, a2, 0);
                goto LABEL_39;
              }
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      sub_10020E76C(v8, v10, 0, 0, 0, 0, 0, 0, a2, 0);
LABEL_39:
      return swift_bridgeObjectRelease();
    }
    id v11 = [a1 _addressFormattedAsShortenedAddress];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v15 = v14;

      if ([a1 _isMapItemTypeAddress])
      {
        sub_100180324();
        if (StringProtocol.contains<A>(_:)())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v16 = [a1 _geoAddress];
          uint64_t v17 = v16;
          if (v16)
          {
            id v18 = [v16 structuredAddress];

            if (v18)
            {
              id v19 = [v18 locality];

              if (v19)
              {
                id v18 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v17 = v20;

LABEL_51:
                sub_10020E76C((uint64_t)v18, (unint64_t)v17, 0, 0, 0, 0, 0, 0, a2, 0);
                return swift_bridgeObjectRelease();
              }
              id v18 = 0;
            }
            uint64_t v17 = 0;
            goto LABEL_51;
          }
          id v18 = 0;
          goto LABEL_51;
        }
      }
      Swift::String v21 = String.uppercased()();
      Swift::String v22 = String.uppercased()();
      if (v21._countAndFlagsBits == v22._countAndFlagsBits && v21._object == v22._object)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_10020E76C(v13, v15, 0, 0, 0, 0, 0, 0, a2, 0);
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      id v36 = [a1 _geoAddress];
      if (v36)
      {
        id v37 = v36;
        id v38 = [v36 structuredAddress];

        if (v38)
        {
          id v39 = [v38 administrativeArea];
          if (v39)
          {
            Swift::String v40 = v39;
            uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v43 = v42;

            id v44 = [v38 country];
            if (v44)
            {
              Swift::String v45 = v44;
              uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v48 = v47;

              Swift::String v49 = String.uppercased()();
              swift_bridgeObjectRelease();
              Swift::String v50 = String.uppercased()();
              if (v49._countAndFlagsBits == v50._countAndFlagsBits && v49._object == v50._object)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v52 & 1) == 0 && String.count.getter() < 1) {
                  goto LABEL_52;
                }
              }
              if (String.count.getter() >= 1)
              {
                swift_bridgeObjectRelease();
                sub_10020E76C(v46, v48, 0, 0, 0, 0, 0, 0, a2, 0);

                return swift_bridgeObjectRelease();
              }
            }
LABEL_52:
            swift_bridgeObjectRelease();
            sub_10020E76C(v41, v43, 0, 0, 0, 0, 0, 0, a2, 0);

            return swift_bridgeObjectRelease();
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v51 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(a2, 1, 1, v51);
    }
    swift_bridgeObjectRelease();
    id v4 = 0;
  }
  uint64_t v32 = type metadata accessor for PlaceSummaryViewModelUnit((uint64_t)v4);
  id v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);

  return v33(a2, 1, 1, v32);
}

uint64_t sub_100217E8C@<X0>(id a1@<X2>, int8x16_t *a2@<X1>, char *a3@<X4>, uint64_t a4@<X8>)
{
  unint64_t v6 = a2[6].u64[1];
  if (v6 >> 60 == 3)
  {
    if (a2[1].i64[0] == 2)
    {
      id v12 = [a1 shortAddress];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v16 = v15;
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v16 = 0;
      }
      sub_10020E76C(v14, v16, 0, 0, 0, 0, 0, 0, a4, 0);
      goto LABEL_22;
    }
  }
  else if (v6 >> 60 == 10 && v6 == 0xA000000000000000)
  {
    v7.i64[0] = a2[6].i64[0];
    v7.i64[1] = a2[7].i64[0];
    int8x16_t v8 = vorrq_s8(a2[5], a2[3]);
    int8x16_t v9 = vorrq_s8(v7, vorrq_s8(vextq_s8(a2[4], a2[4], 8uLL), vextq_s8(v8, v8, 8uLL)));
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v9.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)) | a2[2].i64[1] | a2[2].i64[0] | a2[1].i64[1] | a2[1].i64[0]))
    {
      if ([a1 isMeCard]) {
        id v11 = [a1 localizedLabel];
      }
      else {
        id v11 = [a1 compositeName];
      }
      id v20 = v11;
      if (v20)
      {
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v23 = v22;

        id v24 = a3;
        NSString v25 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRetain();
        NSString v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v27 = [v25 _maps_prefixMatchesForSearchString:v26];

        if (v27)
        {
          sub_100100830(0, (unint64_t *)&unk_1015D5A28);
          unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          unint64_t v28 = 0;
        }
      }
      else
      {
        uint64_t v29 = a3;
        unint64_t v28 = 0;
        uint64_t v21 = 0;
        unint64_t v23 = 0;
      }
      sub_100215FD4(v21, v23, v28, *(unsigned char *)(*(void *)&a3[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type]+ OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, a4);

      swift_bridgeObjectRelease();
LABEL_22:
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v17 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  id v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);

  return v18(a4, 1, 1, v17);
}

id sub_1002181AC(void *a1)
{
  id v2 = [objc_allocWithZone((Class)MapsUIImageGEOFeatureSpec) init];
  [v2 setMarkerFallback:0];
  id v3 = [a1 label];
  if (!v3) {
    goto LABEL_3;
  }
  id v4 = v3;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  uint64_t v27 = v5;
  uint64_t v29 = v7;
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v8;
  sub_100180324();
  uint64_t v9 = StringProtocol.caseInsensitiveCompare<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v9)
  {
    id v20 = &selRef_homeWithHalo;
  }
  else
  {
LABEL_3:
    id v10 = [a1 label:v23, v25, v27, v29];
    if (!v10) {
      goto LABEL_5;
    }
    id v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    uint64_t v28 = v12;
    uint64_t v30 = v14;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v15;
    sub_100180324();
    uint64_t v16 = StringProtocol.caseInsensitiveCompare<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v16)
    {
      id v20 = &selRef_workWithHalo;
    }
    else
    {
LABEL_5:
      id v17 = [a1 label:v24, v26, v28, v30];
      if (!v17) {
        goto LABEL_7;
      }
      id v18 = v17;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100180324();
      uint64_t v19 = StringProtocol.caseInsensitiveCompare<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v19) {
        id v20 = &selRef_schoolWithHalo;
      }
      else {
LABEL_7:
      }
        id v20 = &selRef_markerWithHalo;
    }
  }
  id v21 = [self *v20];
  [v2 setStyle:v21];

  return v2;
}

uint64_t sub_100218408(void *a1, uint64_t a2)
{
  id v4 = (void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  unint64_t v6 = *(void *)(a2 + 16);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8 > 2) {
      return result;
    }
  }
  else if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) > 2)
  {
    return result;
  }
  swift_beginAccess();
  id v7 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_100218508@<X0>(id a1@<X3>, void *a2@<X1>, char *a3@<X4>, uint64_t a4@<X8>)
{
  unint64_t v5 = a2[13];
  if (v5 >> 60 == 10)
  {
    uint64_t v7 = a2[14];
    uint64_t v9 = a2[11];
    uint64_t v8 = a2[12];
    uint64_t v10 = a2[9];
    uint64_t v11 = a2[10];
    uint64_t v13 = a2[7];
    uint64_t v12 = a2[8];
    uint64_t v15 = a2[5];
    uint64_t v14 = a2[6];
    uint64_t v16 = a2[2];
    uint64_t v19 = a2 + 3;
    uint64_t v18 = a2[3];
    uint64_t v17 = v19[1];
    if (v5 == 0xA000000000000000)
    {
      v20.i64[0] = v10;
      v20.i64[1] = v12;
      v21.i64[0] = v7;
      v21.i64[1] = v8;
      v22.i64[0] = v13;
      v22.i64[1] = v14;
      v23.i64[0] = v9;
      v23.i64[1] = v11;
      int8x16_t v24 = vorrq_s8(vorrq_s8(v21, v20), vorrq_s8(v23, v22));
      if (!(v18 | *(void *)&vorr_s8(*(int8x8_t *)v24.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v24, v24, 8uLL)) | v17 | v15 | v16))
      {
        id v25 = [a1 address];
        if (v25)
        {
          uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v28 = v27;

          uint64_t v29 = a3;
          NSString v30 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRetain();
          NSString v31 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v32 = [v30 _maps_prefixMatchesForSearchString:v31];

          if (v32)
          {
            sub_100100830(0, (unint64_t *)&unk_1015D5A28);
            id v25 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
            id v25 = 0;
          }
        }
        else
        {
          id v36 = a3;
          uint64_t v26 = 0;
          unint64_t v28 = 0;
        }
        sub_100215FD4(v26, v28, (unint64_t)v25, *(unsigned char *)(*(void *)&a3[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type]+ OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, a4);

        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    if (v5 == 0xA000000000000000 && v16 == 28 && !(v8 | v7 | v9 | v11 | v10 | v12 | v13 | v14 | v15 | v17 | v18)) {
      return sub_1002187D8(a1, a4);
    }
  }
  uint64_t v34 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  char v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);

  return v35(a4, 1, 1, v34);
}

uint64_t sub_1002187D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 metadata];
  if (!v3) {
    goto LABEL_18;
  }
  id v4 = v3;
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1000EFD94((uint64_t)v26), (v7 & 1) != 0))
  {
    sub_1000F2354(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v27);
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000F351C((uint64_t)v26);
  if (*((void *)&v28 + 1))
  {
    sub_1000FF33C(&qword_1015D5A80);
    if (swift_dynamicCast())
    {
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (!*(void *)(v25 + 16) || (unint64_t v10 = sub_100103580(v8, v9), (v11 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      uint64_t v12 = *(void *)(*(void *)(v25 + 56) + 8 * v10);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v27 = v12;
      if (swift_dynamicCast())
      {
        uint64_t v14 = v26[0];
        uint64_t v13 = v26[1];
        if (String.count.getter() >= 1)
        {
          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v15._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
          v29._uint64_t countAndFlagsBits = 0xD00000000000005FLL;
          v29._unint64_t object = (void *)0x8000000100F7E060;
          v15._unint64_t object = (void *)0x8000000100F7E040;
          v16._uint64_t countAndFlagsBits = 0;
          v16._unint64_t object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)qword_101611820, v16, v29);
          sub_1000FF33C((uint64_t *)&unk_1015D59C0);
          uint64_t v17 = swift_allocObject();
          *(_OWORD *)(v17 + 16) = xmmword_100F5CF70;
          *(void *)(v17 + 56) = &type metadata for String;
          *(void *)(v17 + 64) = sub_10011A750();
          *(void *)(v17 + 32) = v14;
          *(void *)(v17 + 40) = v13;
          uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
          unint64_t object = v19;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
        goto LABEL_17;
      }
    }
  }
  else
  {
    sub_1000FF2E0((uint64_t)&v27, (uint64_t *)&unk_1015CD260);
  }
LABEL_18:
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v30._uint64_t countAndFlagsBits = 0xD000000000000050;
  v30._unint64_t object = (void *)0x8000000100F7DFE0;
  v21._unint64_t object = (void *)0x8000000100F7DFC0;
  v21._uint64_t countAndFlagsBits = 0xD000000000000016;
  v22._uint64_t countAndFlagsBits = 0;
  v22._unint64_t object = (void *)0xE000000000000000;
  Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)qword_101611820, v22, v30);
  uint64_t countAndFlagsBits = v23._countAndFlagsBits;
  unint64_t object = v23._object;
LABEL_21:
  sub_10020E76C(countAndFlagsBits, (unint64_t)object, 0, 0, 0, 0, 0, 0, a2, 0);
  return swift_bridgeObjectRelease();
}

void sub_100218B68(id a1@<X3>, uint64_t a2@<X1>, char *a3@<X4>, void *a4@<X5>, uint64_t a5@<X8>)
{
  unint64_t v9 = *(void *)(a2 + 104);
  if (v9 >> 60 != 10) {
    goto LABEL_22;
  }
  uint64_t v10 = *(void *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 16);
  int8x16_t v12 = vorrq_s8(vorrq_s8(*(int8x16_t *)(a2 + 40), *(int8x16_t *)(a2 + 72)), vorrq_s8(*(int8x16_t *)(a2 + 56), *(int8x16_t *)(a2 + 88)));
  uint64_t v13 = *(void *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | *(void *)(a2 + 32) | *(void *)(a2 + 24);
  if (!v10)
  {
    BOOL v14 = v9 == 0xA000000000000000 && v11 == 29;
    if (v14 && v13 == 0)
    {
      sub_100218D3C(a1, a3, a5);
      return;
    }
  }
  if (!v10 && (v9 == 0xA000000000000000 ? (BOOL v16 = v11 == 30) : (BOOL v16 = 0), v16 ? (v17 = v13 == 0) : (v17 = 0), v17))
  {
    sub_1002190A4(a1, a5);
  }
  else
  {
LABEL_22:
    id v18 = [a1 mapItem];
    if (v18)
    {
      id v21 = v18;
      sub_1002063FC(v18, (uint64_t *)a2, a4, 0, a3, 0, 1, 0, a5, 0, 0, 0, 0);
    }
    else
    {
      uint64_t v19 = type metadata accessor for PlaceSummaryViewModelUnit(0);
      int8x16_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
      v20(a5, 1, 1, v19);
    }
  }
}

uint64_t sub_100218D3C@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = [a1 mapItem];
  if (v6)
  {
    char v7 = v6;
    id v8 = [v6 _addressFormattedAsShortenedAddress];

    if (v8)
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;

      if (String.count.getter() >= 1)
      {
        String.lowercased()();
        String.lowercased()();
        sub_100180324();
        char v12 = StringProtocol.contains<A>(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v12)
        {
          uint64_t v13 = a2;
          NSString v14 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRetain();
          NSString v15 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v16 = [v14 _maps_prefixMatchesForSearchString:v15];

          if (v16)
          {
            sub_100100830(0, (unint64_t *)&unk_1015D5A28);
            unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
          }
          else
          {
            unint64_t v17 = 0;
          }
          sub_100215FD4(v9, v11, v17, *(unsigned char *)(*(void *)&v13[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type]+ OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, a3);
          swift_bridgeObjectRelease();

          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  id v18 = [a1 name];
  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    Swift::String v22 = a2;
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRetain();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v25 = [v23 _maps_prefixMatchesForSearchString:v24];

    if (v25)
    {
      sub_100100830(0, (unint64_t *)&unk_1015D5A28);
      id v18 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      id v18 = 0;
    }
  }
  else
  {
    uint64_t v26 = a2;
    uint64_t v19 = 0;
    unint64_t v21 = 0;
  }
  sub_100215FD4(v19, v21, (unint64_t)v18, *(unsigned char *)(*(void *)&a2[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type]+ OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, a3);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002190A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 mapItem];
  if (v3
    && (id v4 = v3,
        id v5 = [v3 _addressFormattedAsShortenedAddress],
        v4,
        v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;

    if (String.count.getter() >= 1
      && (String.lowercased()(),
          String.lowercased()(),
          sub_100180324(),
          char v9 = StringProtocol.contains<A>(_:)(),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v9 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v17._unint64_t object = (void *)0x8000000100F7DE00;
      v10._uint64_t countAndFlagsBits = 0x4C2064656B72614DLL;
      v10._unint64_t object = (void *)0xEF6E6F697461636FLL;
      v11._uint64_t countAndFlagsBits = 0;
      v11._unint64_t object = (void *)0xE000000000000000;
      v17._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
      Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)qword_101611820, v11, v17);
      sub_10020E76C(v12._countAndFlagsBits, (unint64_t)v12._object, 0, 0, 0, 0, 0, 0, a2, 0);
    }
    else
    {
      sub_10020E76C(v6, v8, 0, 0, 0, 0, 0, 0, a2, 0);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = type metadata accessor for PlaceSummaryViewModelUnit(0);
    NSString v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a2, 1, 1, v13);
  }
}

uint64_t sub_1002192F8@<X0>(id a1@<X3>, void *a2@<X1>, void *a3@<X4>, uint64_t a4@<X8>)
{
  unint64_t v5 = a2[13];
  if (v5 >> 60 == 10)
  {
    uint64_t v7 = a2[14];
    uint64_t v9 = a2[11];
    uint64_t v8 = a2[12];
    uint64_t v10 = a2[9];
    uint64_t v11 = a2[10];
    uint64_t v13 = a2[7];
    uint64_t v12 = a2[8];
    uint64_t v15 = a2[5];
    uint64_t v14 = a2[6];
    uint64_t v16 = a2[2];
    uint64_t v19 = a2 + 3;
    uint64_t v18 = a2[3];
    uint64_t v17 = v19[1];
    if (v5 == 0xA000000000000000)
    {
      v20.i64[0] = v10;
      v20.i64[1] = v12;
      v21.i64[0] = v7;
      v21.i64[1] = v8;
      v22.i64[0] = v13;
      v22.i64[1] = v14;
      v23.i64[0] = v9;
      v23.i64[1] = v11;
      int8x16_t v24 = vorrq_s8(vorrq_s8(v21, v20), vorrq_s8(v23, v22));
      if (!(v18 | *(void *)&vorr_s8(*(int8x8_t *)v24.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v24, v24, 8uLL)) | v17 | v15 | v16))
      {
        id v25 = [a1 title];
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v28 = v27;

        Swift::String v29 = a3;
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRetain();
        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v32 = [v30 _maps_prefixMatchesForSearchString:v31];

        if (v32)
        {
          sub_100100830(0, (unint64_t *)&unk_1015D5A28);
          unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          unint64_t v33 = 0;
        }
        sub_100215FD4(v26, v28, v33, *(unsigned char *)(*(void *)&v29[OBJC_IVAR____TtC4Maps38PlaceSummaryTextHighlightConfiguration_type]+ OBJC_IVAR____TtC4Maps29PlaceSummaryTextHighlightType_type), 1, a4);
        swift_bridgeObjectRelease();

LABEL_18:
        return swift_bridgeObjectRelease();
      }
    }
    if (v5 == 0xA000000000000000 && v16 == 31 && !(v8 | v7 | v9 | v11 | v10 | v12 | v13 | v14 | v15 | v17 | v18))
    {
      id v34 = [a1 subtitle];
      if (v34)
      {
        char v35 = v34;
        uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v38 = v37;
      }
      else
      {
        uint64_t v36 = 0;
        unint64_t v38 = 0;
      }
      sub_10020E76C(v36, v38, 0, 0, 0, 0, 0, 0, a4, 0);
      goto LABEL_18;
    }
  }
  uint64_t v39 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  Swift::String v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);

  return v40(a4, 1, 1, v39);
}

uint64_t sub_100219614(char a1, char a2)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  if (a1)
  {
    if (a1 == 1)
    {
      static Color.primary.getter();
      uint64_t v5 = Color.opacity(_:)();
      swift_release();
    }
    else
    {
      uint64_t v5 = static Color.primary.getter();
    }
    uint64_t v6 = 0;
  }
  else
  {
    if (a2) {
      static Font.body.getter();
    }
    else {
      static Font.subheadline.getter();
    }
    static Font.Weight.regular.getter();
    uint64_t v6 = Font.weight(_:)();
    swift_release();
    uint64_t v5 = 0;
  }
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v12 - 2) = v8;
  swift_getKeyPath();
  uint64_t v13 = v5;
  sub_100180AE8();
  swift_retain();
  AttributedString.subscript.setter();
  uint64_t v9 = swift_getKeyPath();
  __chkstk_darwin(v9);
  *(&v12 - 2) = v10;
  swift_getKeyPath();
  uint64_t v13 = v6;
  sub_100223A8C();
  swift_retain();
  AttributedString.subscript.setter();
  swift_release();
  return swift_release();
}

uint64_t sub_100219824@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v3._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v16._unint64_t object = (void *)0x8000000100F7DE70;
    v3._unint64_t object = (void *)0x8000000100F7DE50;
    v4._uint64_t countAndFlagsBits = 0x6569766552206F4ELL;
    v4._unint64_t object = (void *)0xEA00000000007377;
    v16._uint64_t countAndFlagsBits = 0xD000000000000017;
    Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v16);
    if (String.count.getter() > 0)
    {
      v9[0] = v5;
      memset(&v9[1], 0, 48);
      uint64_t v10 = 0;
      char v11 = 1;
      uint64_t v12 = 0;
      char v13 = 0;
      uint64_t v14 = 0;
      sub_100211324(v9, 0, a2);
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a2, 1, 1, v7);
}

id sub_1002199C4(float a1)
{
  if (a1 >= 4.0 || a1 < 0.0) {
    double v2 = dbl_100F65800[a1 == 4.0];
  }
  else {
    double v2 = 0.68627451;
  }
  id v3 = objc_allocWithZone((Class)UIColor);

  return [v3 initWithRed:1.0 green:v2 blue:0.0 alpha:1.0];
}

uint64_t sub_100219A40@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  int v89 = a4;
  int v81 = a3;
  uint64_t v8 = sub_1000FF33C(&qword_1015D59E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v88 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for AttributedSubstring();
  uint64_t v10 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  id v90 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v87 = (char *)&v78 - v13;
  uint64_t v14 = sub_1000FF33C(&qword_1015D0A38);
  __chkstk_darwin(v14 - 8);
  id v98 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000FF33C(&qword_1015D0A40);
  uint64_t v99 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  uint64_t v100 = v16;
  __chkstk_darwin(v16);
  uint64_t v85 = (uint64_t)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v86 = (uint64_t)&v78 - v19;
  __chkstk_darwin(v20);
  uint64_t v91 = (char *)&v78 - v21;
  __chkstk_darwin(v22);
  uint64_t v97 = (uint64_t)&v78 - v23;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v78 - v25;
  __chkstk_darwin(v27);
  uint64_t v95 = (uint64_t)&v78 - v28;
  __chkstk_darwin(v29);
  NSString v31 = (char *)&v78 - v30;
  uint64_t v32 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v32 - 8);
  uint64_t v84 = type metadata accessor for AttributedString();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  id v34 = (char *)&v78 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v103[0] = a2;
  unint64_t v35 = sub_100180AE8();
  swift_retain();
  unint64_t v80 = v35;
  uint64_t v101 = v34;
  AttributedString.subscript.setter();
  if (!a1) {
    goto LABEL_29;
  }
  uint64_t v36 = *(void *)(a1 + 16);
  if (!v36) {
    goto LABEL_29;
  }
  uint64_t v82 = v26;
  uint64_t v79 = a5;
  unint64_t v37 = v99 + 6;
  unint64_t v94 = (void (**)(char *, uint64_t))(v10 + 8);
  swift_bridgeObjectRetain();
  unint64_t v38 = &qword_1015D0A40;
  uint64_t v78 = a1;
  uint64_t v39 = (unint64_t *)(a1 + 48);
  uint64_t v40 = (uint64_t)v98;
  uint64_t v41 = (uint64_t)v91;
  uint64_t v99 = v37;
  unint64_t v93 = v31;
  while (1)
  {
    unint64_t v47 = *(v39 - 1);
    unint64_t v46 = *v39;
    unint64_t v48 = (void *)*(v39 - 2);
    sub_1001CC388(v48);
    sub_10021A700(v47, v46, (uint64_t)v101, v40);
    if ((*v37)(v40, 1, v100) == 1) {
      break;
    }
    sub_100101750(v40, (uint64_t)v31, v38);
    if (!v48)
    {
      sub_1000FF27C((uint64_t)v31, v95, v38);
      uint64_t v62 = swift_getKeyPath();
      __chkstk_darwin(v62);
      *(&v78 - 2) = v63;
      uint64_t v92 = swift_getKeyPath();
      uint64_t v64 = (uint64_t)v82;
      sub_1000FF27C((uint64_t)v31, (uint64_t)v82, v38);
      uint64_t v65 = swift_getKeyPath();
      __chkstk_darwin(v65);
      *(&v78 - 2) = v66;
      swift_getKeyPath();
      uint64_t v60 = v38;
      swift_beginAccess();
      sub_1001010F8(&qword_1015D0A70, v38);
      uint64_t v67 = v87;
      AttributedString.subscript.getter();
      sub_100223A8C();
      AttributedSubstring.subscript.getter();
      (*v94)(v67, v96);
      if (v104)
      {
        swift_endAccess();
        swift_release();
        sub_1000FF2E0(v64, v38);
      }
      else
      {
        swift_endAccess();
        swift_release();
        sub_1000FF2E0(v64, v38);
        static Font.subheadline.getter();
      }
      uint64_t v71 = Font.bold()();
      swift_release();
      unint64_t v37 = v99;
      uint64_t v105 = v71;
      swift_beginAccess();
      uint64_t v72 = v95;
      uint64_t v73 = (void (*)(void *, void))AttributedString.subscript.modify();
      AttributedSubstring.subscript.setter();
      v73(v103, 0);
      swift_endAccess();
      sub_1000FF2E0(v72, v60);
      uint64_t v45 = (uint64_t)v93;
      sub_1000FF2E0((uint64_t)v93, v60);
      uint64_t v40 = (uint64_t)v98;
      goto LABEL_6;
    }
    if (v48 == (void *)1)
    {
      sub_1000FF27C((uint64_t)v31, v97, v38);
      uint64_t v56 = swift_getKeyPath();
      __chkstk_darwin(v56);
      *(&v78 - 2) = v57;
      uint64_t v92 = swift_getKeyPath();
      sub_1000FF27C((uint64_t)v31, v41, v38);
      uint64_t v58 = swift_getKeyPath();
      __chkstk_darwin(v58);
      *(&v78 - 2) = v59;
      swift_getKeyPath();
      uint64_t v60 = v38;
      swift_beginAccess();
      sub_1001010F8(&qword_1015D0A70, v38);
      uint64_t v61 = v90;
      AttributedString.subscript.getter();
      sub_100223A8C();
      AttributedSubstring.subscript.getter();
      (*v94)(v61, v96);
      if (v104)
      {
        swift_endAccess();
        swift_release();
        sub_1000FF2E0(v41, v38);
      }
      else
      {
        swift_endAccess();
        swift_release();
        sub_1000FF2E0(v41, v38);
        static Font.subheadline.getter();
      }
      uint64_t v42 = Font.italic()();
      swift_release();
      uint64_t v105 = v42;
      swift_beginAccess();
      uint64_t v43 = v97;
      id v44 = (void (*)(void *, void))AttributedString.subscript.modify();
      AttributedSubstring.subscript.setter();
      v44(v103, 0);
      swift_endAccess();
      sub_1000FF2E0(v43, v60);
      uint64_t v45 = (uint64_t)v93;
      sub_1000FF2E0((uint64_t)v93, v60);
      uint64_t v40 = (uint64_t)v98;
      unint64_t v37 = v99;
LABEL_6:
      unint64_t v38 = v60;
      NSString v31 = (char *)v45;
      goto LABEL_7;
    }
    if (v48 == (void *)2)
    {
      uint64_t v49 = v86;
      sub_1000FF27C((uint64_t)v31, v86, v38);
      uint64_t v50 = swift_getKeyPath();
      __chkstk_darwin(v50);
      *(&v78 - 2) = v51;
      swift_getKeyPath();
      char v52 = v88;
      static Text.LineStyle.single.getter();
      uint64_t v53 = type metadata accessor for Text.LineStyle();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 0, 1, v53);
      swift_beginAccess();
      sub_1001010F8(&qword_1015D0A70, &qword_1015D0A40);
      unint64_t v54 = (void (*)(void *, void))AttributedString.subscript.modify();
      sub_1002239B4();
      unint64_t v38 = &qword_1015D0A40;
      AttributedSubstring.subscript.setter();
      v54(v103, 0);
      swift_endAccess();
      uint64_t v55 = v49;
      unint64_t v37 = v99;
      uint64_t v41 = (uint64_t)v91;
LABEL_25:
      sub_1000FF2E0(v55, &qword_1015D0A40);
      sub_1000FF2E0((uint64_t)v31, &qword_1015D0A40);
      goto LABEL_7;
    }
    if (v89)
    {
      sub_1000FF27C((uint64_t)v31, v85, v38);
      uint64_t v68 = swift_getKeyPath();
      __chkstk_darwin(v68);
      *(&v78 - 2) = v69;
      uint64_t v92 = swift_getKeyPath();
      if (v81) {
        uint64_t v70 = static Color.white.getter();
      }
      else {
        uint64_t v70 = static Color.blue.getter();
      }
      uint64_t v105 = v70;
      swift_beginAccess();
      sub_1001010F8(&qword_1015D0A70, v38);
      uint64_t v74 = v85;
      id v75 = (void (*)(void *, void))AttributedString.subscript.modify();
      AttributedSubstring.subscript.setter();
      v75(v103, 0);
      unint64_t v38 = &qword_1015D0A40;
      swift_endAccess();
      sub_100223984(v48);
      uint64_t v55 = v74;
      goto LABEL_25;
    }
    sub_1000FF2E0((uint64_t)v31, v38);
    sub_100223984(v48);
LABEL_7:
    v39 += 3;
    if (!--v36)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease();
  sub_100223984(v48);
  sub_1000FF2E0(v40, &qword_1015D0A38);
LABEL_28:
  a5 = v79;
LABEL_29:
  uint64_t v76 = (uint64_t)v101;
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 32))(a5, v76, v84);
}

uint64_t sub_10021A700@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v78 = a2;
  unint64_t v74 = a1;
  uint64_t v69 = sub_1000FF33C(&qword_1015D5A08);
  __chkstk_darwin(v69);
  uint64_t v70 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v67 = (char *)&v59 - v8;
  uint64_t v79 = sub_1000FF33C(&qword_1015D0A40);
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v68 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for AttributedString();
  unint64_t v80 = *(char **)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AttributedString.Index();
  uint64_t v75 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v71 = (char *)&v59 - v16;
  __chkstk_darwin(v17);
  uint64_t v76 = (char *)&v59 - v18;
  uint64_t v19 = type metadata accessor for AttributedString.CharacterView();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v59 - v24;
  swift_beginAccess();
  AttributedString.characters.getter();
  swift_endAccess();
  unint64_t v26 = AttributedString.CharacterView._count.getter();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v27 = v20 + 8;
  uint64_t v29 = v25;
  uint64_t v30 = v19;
  NSString v31 = v28;
  v28(v29, v30);
  uint64_t v32 = 1;
  if ((v26 & 0x8000000000000000) != 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(a4, v32, 1, v79);
  }
  if (v26 < v78) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(a4, v32, 1, v79);
  }
  uint64_t v73 = v30;
  unint64_t v33 = v74;
  if (v74 >= v78) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(a4, v32, 1, v79);
  }
  uint64_t v63 = v31;
  uint64_t v64 = v27;
  uint64_t v65 = v14;
  uint64_t v60 = a4;
  swift_beginAccess();
  AttributedString.characters.getter();
  id v34 = v80;
  uint64_t v35 = v72;
  uint64_t v62 = (void (*)(char *, uint64_t, uint64_t))*((void *)v80 + 2);
  v62(v11, a3, v72);
  swift_endAccess();
  uint64_t v36 = v71;
  AttributedString.startIndex.getter();
  uint64_t v37 = v35;
  uint64_t v40 = (uint64_t (*)(char *, uint64_t))*((void *)v34 + 1);
  uint64_t v39 = v34 + 8;
  unint64_t v38 = v40;
  uint64_t result = v40(v11, v37);
  if ((v33 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v80 = v39;
  uint64_t v61 = v38;
  AttributedString.CharacterView._index(_:offsetBy:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v75 + 8);
  unint64_t v74 = v75 + 8;
  uint64_t v66 = v42;
  v42(v36, v12);
  uint64_t v43 = v63;
  v63(v22, v73);
  swift_beginAccess();
  AttributedString.characters.getter();
  v62(v11, a3, v37);
  swift_endAccess();
  id v44 = v65;
  AttributedString.startIndex.getter();
  uint64_t result = v61(v11, v37);
  if ((v78 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  AttributedString.CharacterView._index(_:offsetBy:)();
  v66(v44, v12);
  v43(v22, v73);
  sub_100223D3C(&qword_1015D5A10, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
  uint64_t v45 = v76;
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    unint64_t v46 = v36;
    uint64_t v47 = v69;
    unint64_t v48 = v67;
    uint64_t v49 = &v67[*(int *)(v69 + 48)];
    uint64_t v50 = v75;
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
    v51(v67, v45, v12);
    unint64_t v80 = v49;
    v51(v49, v46, v12);
    char v52 = v70;
    uint64_t v53 = &v70[*(int *)(v47 + 48)];
    unint64_t v54 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    v54(v70, v48, v12);
    v54(v53, v49, v12);
    uint64_t v55 = v68;
    v51(v68, v52, v12);
    uint64_t v56 = v66;
    v66(v53, v12);
    uint64_t v57 = &v52[*(int *)(v47 + 48)];
    v51(v52, v48, v12);
    v51(v57, v80, v12);
    v51(&v55[*(int *)(v79 + 36)], v57, v12);
    v56(v52, v12);
    uint64_t v58 = (uint64_t)v55;
    a4 = v60;
    sub_100101750(v58, v60, &qword_1015D0A40);
    uint64_t v32 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(a4, v32, 1, v79);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10021AE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_10021AE7C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v5 = [a1 clientResolved];
  if (v5)
  {
    uint64_t v6 = v5;
    switch([v5 itemType])
    {
      case 1u:
        id v7 = [self sharedManager];
        if (!v7)
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          JUMPOUT(0x10021B31CLL);
        }
        uint64_t v8 = v7;
        id v9 = [v7 meCardHomeAddress];

        if (v9) {
          goto LABEL_23;
        }
        goto LABEL_25;
      case 2u:
        id v10 = [self sharedManager];
        if (!v10) {
          goto LABEL_32;
        }
        uint64_t v11 = v10;
        id v9 = [v10 meCardWorkAddress];

        if (v9) {
          goto LABEL_23;
        }
        goto LABEL_25;
      case 3u:
        id v12 = [self sharedManager];
        id v9 = [v12 parkedCar];

        if (!v9) {
          goto LABEL_25;
        }
        id v13 = [v9 locationDisplayString];

        goto LABEL_24;
      case 4u:
        if (!a2) {
          goto LABEL_17;
        }
        id v14 = [a2 mapItem];
        if (!v14) {
          goto LABEL_17;
        }
        uint64_t v15 = v14;
        id v16 = [v14 _addressFormattedAsShortenedAddress];

        if (!v16) {
          goto LABEL_17;
        }
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v34._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
        v34._unint64_t object = (void *)0x8000000100F7E1A0;
        v20._unint64_t object = (void *)0x8000000100F7E180;
        v20._uint64_t countAndFlagsBits = 0xD000000000000015;
        v21._uint64_t countAndFlagsBits = 0x4025207261654ELL;
        v21._unint64_t object = (void *)0xE700000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)qword_101611820, v21, v34);
        sub_1000FF33C((uint64_t *)&unk_1015D59C0);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_100F5CF70;
        *(void *)(v22 + 56) = &type metadata for String;
        *(void *)(v22 + 64) = sub_10011A750();
        *(void *)(v22 + 32) = v17;
        *(void *)(v22 + 40) = v19;
        uint64_t v23 = static String.localizedStringWithFormat(_:_:)();
        unint64_t v25 = v24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10020E76C(v23, v25, 0, 0, 0, 0, 0, 0, a3, 0);

        goto LABEL_28;
      case 6u:
        id v29 = [self sharedManager];
        if (!v29) {
          goto LABEL_33;
        }
        uint64_t v30 = v29;
        id v9 = [v29 meCardSchoolAddress];

        if (v9)
        {
LABEL_23:
          id v13 = [v9 shortAddress];

          if (v13)
          {
LABEL_24:
            uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v9 = v32;
          }
          else
          {
            uint64_t v31 = 0;
            id v9 = 0;
          }
        }
        else
        {
LABEL_25:
          uint64_t v31 = 0;
        }
        sub_10020E76C(v31, (unint64_t)v9, 0, 0, 0, 0, 0, 0, a3, 0);

LABEL_28:
        uint64_t result = swift_bridgeObjectRelease();
        break;
      default:
LABEL_17:

        id v5 = 0;
        goto LABEL_18;
    }
  }
  else
  {
LABEL_18:
    uint64_t v26 = type metadata accessor for PlaceSummaryViewModelUnit((uint64_t)v5);
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    return v27(a3, 1, 1, v26);
  }
  return result;
}

uint64_t sub_10021B334@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if ([a1 symbolColor]) {
    uint64_t v4 = Color.init(uiColor:)();
  }
  else {
    uint64_t v4 = 0;
  }
  if ([a1 darkSymbolColor]) {
    uint64_t v5 = Color.init(uiColor:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = [a1 valueString];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v9 = v8;

  id v10 = [a1 symbolName];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  sub_10020E76C(v7, v9, v12, v14, 0, 0, v4, v5, a2, 0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10021B494(void *a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v7 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_100223490();
  if ((v16 & 1) == 0)
  {
    unint64_t v17 = result;
    unint64_t v26 = v15;
    sub_10020EB2C(0, 1, a2, a1, a4 & 1, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
      return sub_1000FF2E0((uint64_t)v9, &qword_1015D2AD8);
    }
    sub_100223DBC((uint64_t)v9, (uint64_t)v13, type metadata accessor for PlaceSummaryViewModelUnit);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v18 = (void (*)(unsigned char *, void))static Published.subscript.modify();
    Swift::String v20 = v19;
    unint64_t v21 = *v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v20 = v21;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v17 & 0x8000000000000000) == 0) {
        goto LABEL_6;
      }
    }
    else
    {
      unint64_t v21 = sub_1003481E4(v21);
      unint64_t *v20 = v21;
      if ((v17 & 0x8000000000000000) == 0)
      {
LABEL_6:
        if (v17 < *(void *)(v21 + 16))
        {
          uint64_t v23 = type metadata accessor for PlaceSummaryViewModelLine(0);
          unint64_t v17 = v21
              + ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80))
              + *(void *)(*(void *)(v23 - 8) + 72) * v17;
          Swift::String v20 = (unint64_t *)*(int *)(v23 + 20);
          unint64_t v21 = *(unint64_t *)((char *)v20 + v17);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *(unint64_t *)((char *)v20 + v17) = v21;
          if (result)
          {
            unint64_t v24 = v26;
            if ((v26 & 0x8000000000000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_16;
          }
LABEL_15:
          uint64_t result = sub_10034820C(v21);
          unint64_t v21 = result;
          *(unint64_t *)((char *)v20 + v17) = result;
          unint64_t v24 = v26;
          if ((v26 & 0x8000000000000000) == 0)
          {
LABEL_9:
            if (v24 < *(void *)(v21 + 16))
            {
              sub_1002237A4((uint64_t)v13, v21+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v24);
              v18(v27, 0);
              swift_release();
              swift_release();
              return sub_100223BF0((uint64_t)v13, type metadata accessor for PlaceSummaryViewModelUnit);
            }
LABEL_17:
            __break(1u);
            return result;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

void sub_10021B858(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v72 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v72 - v11;
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v72 - v14;
  id v16 = [self mainScreen];
  [v16 scale];
  double v18 = v17;

  if (MapsFeature_IsEnabled_SearchAndDiscovery())
  {
    id v19 = [a1 _searchResultPhotoCarousel];
    if (!v19) {
      goto LABEL_27;
    }
    Swift::String v20 = v19;
    sub_1000FF33C(&qword_1015D0DB8);
    unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v38) {
        goto LABEL_5;
      }
    }
    else if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v21 & 0xC000000000000001) != 0)
      {
        uint64_t v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_8;
      }
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v22 = *(void **)(v21 + 32);
        swift_unknownObjectRetain();
LABEL_8:
        swift_bridgeObjectRelease();
        id v23 = [v22 largestPhoto];
        swift_unknownObjectRelease();
        if (!v23)
        {
LABEL_54:
          __break(1u);
          return;
        }
        id v24 = [v23 url];
        swift_unknownObjectRelease();
        if (v24)
        {
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v25 = type metadata accessor for URL();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 0, 1, v25);
        }
        else
        {
          uint64_t v25 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
        }
        sub_100101750((uint64_t)v12, (uint64_t)v15, (uint64_t *)&unk_1015D5160);
        type metadata accessor for URL();
        uint64_t v37 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v15, 1, v25) != 1)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(a2, v15, v25);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(a2, 0, 1, v25);
          return;
        }
        goto LABEL_26;
      }
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v15, 1, 1, v39);
LABEL_26:
    sub_1000FF2E0((uint64_t)v15, (uint64_t *)&unk_1015D5160);
LABEL_27:
    if (qword_1015CBD50 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_1000F2248(v40, (uint64_t)qword_1016117A8);
    id v41 = a1;
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v72 = a2;
      id v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(_DWORD *)id v44 = 136315138;
      id v45 = [v41 name];
      if (v45)
      {
        unint64_t v46 = v45;
        uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v49 = v48;
      }
      else
      {
        uint64_t v47 = 0;
        unint64_t v49 = 0xE000000000000000;
      }
      uint64_t v73 = v47;
      unint64_t v74 = v49;
      uint64_t v50 = String.init<A>(_:)();
      uint64_t v73 = sub_1000F2280(v50, v51, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[Place Summary] No photo carousel images for  %s were found, using mapItem photos", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a2 = v72;
    }
    else
    {
    }
    id v52 = [v41 _geoMapItem];
    if (v52)
    {
      id v53 = [v52 _photos];
      swift_unknownObjectRelease();
      if (v53)
      {
        sub_1000FF33C(&qword_1015D0DB8);
        unint64_t v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        id v55 = sub_10021C2B0(v54, v18 * 64.0, v18 * 64.0);
        swift_bridgeObjectRelease();
        if (v55)
        {
          id v56 = [v55 url];
          if (v56)
          {
            uint64_t v57 = v56;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            swift_unknownObjectRelease();
            uint64_t v58 = type metadata accessor for URL();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v9, 0, 1, v58);
          }
          else
          {
            swift_unknownObjectRelease();
            uint64_t v68 = type metadata accessor for URL();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v9, 1, 1, v68);
          }
          uint64_t v36 = (uint64_t)v9;
LABEL_46:
          sub_100101750(v36, a2, (uint64_t *)&unk_1015D5160);
          return;
        }
      }
      else
      {
        id v59 = v41;
        uint64_t v60 = Logger.logObject.getter();
        uint64_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, (os_log_type_t)v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc();
          uint64_t v75 = swift_slowAlloc();
          *(_DWORD *)uint64_t v62 = 136315138;
          id v63 = [v59 name];
          if (v63)
          {
            uint64_t v64 = v63;
            uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v67 = v66;
          }
          else
          {
            uint64_t v65 = 0;
            unint64_t v67 = 0xE000000000000000;
          }
          uint64_t v73 = v65;
          unint64_t v74 = v67;
          uint64_t v69 = String.init<A>(_:)();
          uint64_t v73 = sub_1000F2280(v69, v70, &v75);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v61, "No photos found for map item %s", v62, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
      }
      uint64_t v71 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(a2, 1, 1, v71);
      return;
    }
    goto LABEL_53;
  }
  id v26 = [a1 _geoMapItem];
  if (!v26) {
    goto LABEL_52;
  }
  id v27 = [v26 _photos];
  swift_unknownObjectRelease();
  if (v27)
  {
    sub_1000FF33C(&qword_1015D0DB8);
    unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v29 = sub_10021C2B0(v28, v18 * 64.0, v18 * 64.0);
    swift_bridgeObjectRelease();
    if (v29)
    {
      id v30 = [v29 url];
      if (v30)
      {
        uint64_t v31 = v30;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        swift_unknownObjectRelease();
        uint64_t v32 = type metadata accessor for URL();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 0, 1, v32);
      }
      else
      {
        swift_unknownObjectRelease();
        uint64_t v35 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v6, 1, 1, v35);
      }
      uint64_t v36 = (uint64_t)v6;
      goto LABEL_46;
    }
  }
  uint64_t v33 = type metadata accessor for URL();
  Swift::String v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);

  v34(a2, 1, 1, v33);
}

id sub_10021C2B0(unint64_t a1, double a2, double a3)
{
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v7 = a1 & 0xC000000000000001;
    uint64_t v8 = 4;
    while (1)
    {
      uint64_t v9 = v8 - 4;
      if (v7)
      {
        uint64_t v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v9, 1)) {
          break;
        }
        goto LABEL_9;
      }
      uint64_t v10 = *(void **)(a1 + 8 * v8);
      swift_unknownObjectRetain();
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v9, 1)) {
        break;
      }
LABEL_9:
      id v12 = [v10 bestPhotoForSize:0 allowSmaller:a2, a3];
      swift_unknownObjectRelease();
      if (v12) {
        goto LABEL_20;
      }
      ++v8;
      if (v11 == v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v13 = 4;
        while (1)
        {
          uint64_t v14 = v13 - 4;
          if (v7)
          {
            unint64_t v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v16 = v13 - 3;
            if (__OFADD__(v14, 1)) {
              goto LABEL_23;
            }
          }
          else
          {
            unint64_t v15 = *(void **)(a1 + 8 * v13);
            swift_unknownObjectRetain();
            uint64_t v16 = v13 - 3;
            if (__OFADD__(v14, 1)) {
              goto LABEL_23;
            }
          }
          id v12 = [v15 bestPhotoForSize:1 allowSmaller:a2, a3];
          swift_unknownObjectRelease();
          if (v12) {
            break;
          }
          ++v13;
          if (v16 == v6) {
            goto LABEL_19;
          }
        }
LABEL_20:
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10021C468(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_10021C4E4(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_10021C888(a1, a2, a3);
}

uint64_t sub_10021C4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021C514(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10021C888);
}

uint64_t sub_10021C514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_10021CB04();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_10021C60C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  double v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_10021C888(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10021CB04()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_10021CB84(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10021CB84(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10021CCDC(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1000F4088(v9, 0),
          unint64_t v12 = sub_10021CDDC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10021CCDC(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_10021C468(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_10021C468(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return String.UTF8View._foreignDistance(from:to:)();
}

unint64_t sub_10021CDDC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    Swift::String v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10021C468(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_10021C468(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_10021CFF0(uint64_t a1, int a2)
{
  int v144 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v177 = *(void **)(v3 - 8);
  uint64_t v178 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v131 - v7;
  uint64_t v161 = type metadata accessor for AttributedString();
  uint64_t v9 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  long long v158 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v138 = (char *)&v131 - v12;
  __chkstk_darwin(v13);
  v137 = (char *)&v131 - v14;
  __chkstk_darwin(v15);
  id v151 = (char *)&v131 - v16;
  __chkstk_darwin(v17);
  v176 = (char *)&v131 - v18;
  uint64_t v19 = sub_1000FF33C(&qword_1015D5A20);
  __chkstk_darwin(v19 - 8);
  uint64_t v135 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v163 = (char *)&v131 - v22;
  uint64_t v23 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  unint64_t v172 = *(unsigned int (***)(void, void, void))(v23 - 8);
  v173 = (int *)v23;
  __chkstk_darwin(v23);
  unsigned __int8 v25 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  unint64_t v28 = (char *)&v131 - v27;
  __chkstk_darwin(v29);
  unint64_t v31 = (char *)&v131 - v30;
  __chkstk_darwin(v32);
  Swift::String v34 = (char *)&v131 - v33;
  __chkstk_darwin(v35);
  uint64_t v168 = (uint64_t)&v131 - v36;
  uint64_t v174 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v180 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v170 = (uint64_t)&v131 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v141 = (uint64_t)&v131 - v39;
  __chkstk_darwin(v40);
  uint64_t v136 = (uint64_t)&v131 - v41;
  __chkstk_darwin(v42);
  uint64_t v139 = (uint64_t)&v131 - v43;
  __chkstk_darwin(v44);
  unint64_t v46 = (char *)&v131 - v45;
  __chkstk_darwin(v47);
  uint64_t v169 = (uint64_t)&v131 - v48;
  __chkstk_darwin(v49);
  uint64_t v181 = (uint64_t)&v131 - v50;
  uint64_t v51 = sub_1000FF33C(&qword_1015CFD80);
  __chkstk_darwin(v51 - 8);
  __chkstk_darwin(v52);
  uint64_t v143 = (char *)&v131 - v53;
  __chkstk_darwin(v54);
  uint64_t v152 = (uint64_t)&v131 - v55;
  __n128 v59 = __chkstk_darwin(v56);
  uint64_t v60 = (char *)&v131 - v57;
  unint64_t v61 = *(void *)(a1 + 16);
  unint64_t v140 = v61 - 1;
  if (v61 > 1)
  {
    uint64_t v149 = v58;
    unint64_t v146 = v31;
    id v132 = v25;
    id v63 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v62 = v9 + 56;
    unint64_t v179 = v61;
    long long v157 = v63;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v63)((char *)&v131 - v57, 1, 1, v161, v59);
    unint64_t v156 = (*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80);
    uint64_t v175 = a1 + v156;
    long long v160 = v34;
    unint64_t v145 = v34 + 8;
    uint64_t v180 = *(void *)(v180 + 72);
    id v134 = v28;
    uint64_t v131 = v28 + 8;
    uint64_t v171 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v172 + 7);
    v172 += 6;
    uint64_t v166 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 - 8);
    v148 = (void (**)(char *, uint64_t, uint64_t))(v62 - 24);
    long long v159 = (void (**)(char *, uint64_t))(v62 - 48);
    uint64_t v64 = (void (**)(uint64_t, uint64_t))(v177 + 1);
    uint64_t v133 = a1;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    unint64_t v66 = v179;
    uint64_t v67 = 0;
    v177 = _swiftEmptyArrayStorage;
    uint64_t v68 = (uint64_t)v163;
    uint64_t v162 = v60;
    uint64_t v154 = v62;
    long long v155 = (void (**)(char *, uint64_t, uint64_t))(v62 - 40);
    uint64_t v142 = v5;
    uint64_t v147 = v8;
    while (1)
    {
      if (v67 == v66)
      {
        __break(1u);
LABEL_54:
        __break(1u);
        return result;
      }
      uint64_t v69 = v181;
      sub_100223B88(v175 + v180 * v67, v181, type metadata accessor for PlaceSummaryViewModelUnit);
      uint64_t v70 = v169;
      sub_100223B88(v69, v169, type metadata accessor for PlaceSummaryViewModelUnit);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v71 = *v171;
        uint64_t v72 = v173;
        (*v171)(v68, 1, 1, v173);
        sub_100223BF0(v70, type metadata accessor for PlaceSummaryViewModelUnit);
        goto LABEL_12;
      }
      uint64_t v73 = v70;
      uint64_t v74 = (uint64_t)v160;
      sub_100223DBC(v73, (uint64_t)v160, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      uint64_t v72 = v173;
      uint64_t v75 = *(void *)&v145[v173[6]];
      uint64_t v76 = v74;
      uint64_t v77 = (uint64_t)v146;
      sub_100223B88(v76, (uint64_t)v146, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      if (v75) {
        break;
      }
      uint64_t v78 = *(void *)(v77 + v72[9]);
      sub_100223BF0(v77, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      if (v78) {
        goto LABEL_11;
      }
      sub_100223DBC((uint64_t)v160, v68, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      uint64_t v71 = *v171;
      (*v171)(v68, 0, 1, v72);
LABEL_12:
      unint64_t v167 = (unsigned int (*)(uint64_t, uint64_t, int *))*v172;
      if (v167(v68, 1, v72) == 1)
      {
        sub_1000FF2E0(v68, &qword_1015D5A20);
        sub_100223B88(v181, v170, type metadata accessor for PlaceSummaryViewModelUnit);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v177 = (void *)sub_1001D00BC(0, v177[2] + 1, 1, (unint64_t)v177);
        }
        unint64_t v80 = v177[2];
        unint64_t v79 = v177[3];
        if (v80 >= v79 >> 1) {
          v177 = (void *)sub_1001D00BC(v79 > 1, v80 + 1, 1, (unint64_t)v177);
        }
        int v81 = v177;
        v177[2] = v80 + 1;
        sub_100223DBC(v170, (uint64_t)v81 + v156 + v80 * v180, type metadata accessor for PlaceSummaryViewModelUnit);
LABEL_47:
        uint64_t result = (void *)sub_100223BF0(v181, type metadata accessor for PlaceSummaryViewModelUnit);
        goto LABEL_48;
      }
      id v150 = (void (*)(char *, uint64_t, uint64_t, int *))v71;
      uint64_t v164 = v67;
      uint64_t v82 = v168;
      sub_100223DBC(v68, v168, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      uint64_t v83 = v82 + v72[5];
      uint64_t v84 = *v155;
      uint64_t v85 = v176;
      uint64_t v86 = v161;
      (*v155)(v176, v83, v161);
      uint64_t v87 = (uint64_t)v162;
      uint64_t v88 = v152;
      sub_1000FF27C((uint64_t)v162, v152, &qword_1015CFD80);
      v165 = *v166;
      int v89 = v165(v88, 1, v86);
      uint64_t v153 = v84;
      if (v89 == 1)
      {
        sub_1000FF2E0(v87, &qword_1015CFD80);
        sub_1000FF2E0(v88, &qword_1015CFD80);
        v84((char *)v87, (uint64_t)v85, v86);
        v157(v87, 0, 1, v86);
      }
      else
      {
        id v90 = v151;
        (*v148)(v151, v88, v86);
        if (v144)
        {
          uint64_t v91 = v143;
          static AttributedString.+ infix(_:_:)();
          (*v159)(v90, v86);
          uint64_t v87 = (uint64_t)v162;
          sub_1000FF2E0((uint64_t)v162, &qword_1015CFD80);
          v157((uint64_t)v91, 0, 1, v86);
          uint64_t v92 = (uint64_t)v91;
        }
        else
        {
          unint64_t v93 = v138;
          AttributedString.init(stringLiteral:)();
          unint64_t v94 = v137;
          static AttributedString.+ infix(_:_:)();
          uint64_t v95 = *v159;
          (*v159)(v93, v86);
          uint64_t v96 = v143;
          static AttributedString.+ infix(_:_:)();
          v95(v94, v86);
          v95(v151, v86);
          uint64_t v87 = (uint64_t)v162;
          uint64_t v68 = (uint64_t)v163;
          sub_1000FF2E0((uint64_t)v162, &qword_1015CFD80);
          v157((uint64_t)v96, 0, 1, v86);
          uint64_t v92 = (uint64_t)v96;
        }
        sub_100101750(v92, v87, &qword_1015CFD80);
      }
      uint64_t v97 = (uint64_t)v147;
      uint64_t v98 = v149;
      sub_1000FF27C(v87, v149, &qword_1015CFD80);
      if (v165(v98, 1, v86) != 1)
      {
        (*v148)(v158, v98, v86);
        uint64_t v99 = 0;
        uint64_t v100 = v175;
        uint64_t v67 = v164;
        uint64_t v101 = (uint64_t)v142;
        while (1)
        {
          sub_100223B88(v100, (uint64_t)v46, type metadata accessor for PlaceSummaryViewModelUnit);
          sub_1001A4F6C(v97);
          sub_1001A4F6C(v101);
          char v102 = static UUID.== infix(_:_:)();
          unint64_t v103 = *v64;
          uint64_t v104 = v178;
          (*v64)(v101, v178);
          v103(v97, v104);
          uint64_t result = (void *)sub_100223BF0((uint64_t)v46, type metadata accessor for PlaceSummaryViewModelUnit);
          if (v102) {
            break;
          }
          ++v99;
          v100 += v180;
          if (v179 == v99)
          {
            uint64_t v105 = *v159;
            uint64_t v106 = v161;
            (*v159)(v158, v161);
            unint64_t v107 = v176;
LABEL_46:
            v105(v107, v106);
            sub_100223BF0(v168, type metadata accessor for PlaceSummaryViewModelUnit.Label);
            goto LABEL_47;
          }
        }
        unint64_t v108 = v158;
        if (v140 == v99) {
          goto LABEL_40;
        }
        if (__OFADD__(v99, 1)) {
          goto LABEL_54;
        }
        uint64_t v109 = v139;
        sub_100223B88(v175 + (v99 + 1) * v180, v139, type metadata accessor for PlaceSummaryViewModelUnit);
        uint64_t v110 = v136;
        sub_100223B88(v109, v136, type metadata accessor for PlaceSummaryViewModelUnit);
        if (swift_getEnumCaseMultiPayload())
        {
          uint64_t v111 = (uint64_t)v135;
          uint64_t v112 = v173;
          v150(v135, 1, 1, v173);
          sub_100223BF0(v110, type metadata accessor for PlaceSummaryViewModelUnit);
LABEL_39:
          uint64_t v119 = (uint64_t (*)(uint64_t, uint64_t, int *))v167;
          sub_100223BF0(v139, type metadata accessor for PlaceSummaryViewModelUnit);
          LODWORD(v119) = v119(v111, 1, v112);
          sub_1000FF2E0(v111, &qword_1015D5A20);
          unint64_t v108 = v158;
          if (v119 != 1)
          {
            uint64_t v105 = *v159;
            int v130 = v176;
            uint64_t v106 = v161;
            (*v159)(v158, v161);
            unint64_t v107 = v130;
            goto LABEL_46;
          }
LABEL_40:
          uint64_t v120 = v141;
          UUID.init()();
          unint64_t v121 = v173;
          uint64_t v122 = v161;
          v153((char *)(v120 + v173[5]), (uint64_t)v108, v161);
          v157(v120 + v121[12], 1, 1, v122);
          uint64_t v123 = (void *)(v120 + v121[6]);
          *uint64_t v123 = 0;
          v123[1] = 0;
          *(void *)(v120 + v121[7]) = 0;
          *(void *)(v120 + v121[8]) = 0;
          *(void *)(v120 + v121[9]) = 0;
          *(void *)(v120 + v121[10]) = 0;
          uint64_t v124 = v120 + v121[11];
          *(void *)uint64_t v124 = 1;
          *(unsigned char *)(v124 + 8) = 0;
          swift_storeEnumTagMultiPayload();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v177 = (void *)sub_1001D00BC(0, v177[2] + 1, 1, (unint64_t)v177);
          }
          unint64_t v126 = v177[2];
          unint64_t v125 = v177[3];
          if (v126 >= v125 >> 1) {
            v177 = (void *)sub_1001D00BC(v125 > 1, v126 + 1, 1, (unint64_t)v177);
          }
          long long v127 = v177;
          v177[2] = v126 + 1;
          sub_100223DBC(v141, (uint64_t)v127 + v156 + v126 * v180, type metadata accessor for PlaceSummaryViewModelUnit);
          uint64_t v128 = *v159;
          (*v159)(v158, v122);
          v128(v176, v122);
          sub_100223BF0(v168, type metadata accessor for PlaceSummaryViewModelUnit.Label);
          sub_100223BF0(v181, type metadata accessor for PlaceSummaryViewModelUnit);
          uint64_t v129 = (uint64_t)v162;
          sub_1000FF2E0((uint64_t)v162, &qword_1015CFD80);
          uint64_t result = (void *)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v157)(v129, 1, 1, v122);
LABEL_48:
          uint64_t v68 = (uint64_t)v163;
          goto LABEL_4;
        }
        uint64_t v113 = (uint64_t)v134;
        sub_100223DBC(v110, (uint64_t)v134, type metadata accessor for PlaceSummaryViewModelUnit.Label);
        uint64_t v112 = v173;
        uint64_t v114 = *(void *)&v131[v173[6]];
        uint64_t v115 = (uint64_t)v132;
        sub_100223B88(v113, (uint64_t)v132, type metadata accessor for PlaceSummaryViewModelUnit.Label);
        uint64_t v111 = (uint64_t)v135;
        if (v114)
        {
          sub_100223BF0(v115, type metadata accessor for PlaceSummaryViewModelUnit.Label);
          goto LABEL_37;
        }
        uint64_t v116 = *(void *)(v115 + v112[9]);
        sub_100223BF0(v115, type metadata accessor for PlaceSummaryViewModelUnit.Label);
        if (v116)
        {
LABEL_37:
          sub_100223BF0((uint64_t)v134, type metadata accessor for PlaceSummaryViewModelUnit.Label);
          uint64_t v117 = v111;
          uint64_t v118 = 1;
        }
        else
        {
          sub_100223DBC((uint64_t)v134, v111, type metadata accessor for PlaceSummaryViewModelUnit.Label);
          uint64_t v117 = v111;
          uint64_t v118 = 0;
        }
        v150((char *)v117, v118, 1, v112);
        goto LABEL_39;
      }
      (*v159)(v176, v86);
      sub_100223BF0(v168, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      sub_100223BF0(v181, type metadata accessor for PlaceSummaryViewModelUnit);
      uint64_t result = (void *)sub_1000FF2E0(v98, &qword_1015CFD80);
      uint64_t v67 = v164;
LABEL_4:
      ++v67;
      unint64_t v66 = v179;
      if (v67 == v179)
      {
        swift_bridgeObjectRelease();
        sub_1000FF2E0((uint64_t)v162, &qword_1015CFD80);
        return v177;
      }
    }
    sub_100223BF0(v77, type metadata accessor for PlaceSummaryViewModelUnit.Label);
LABEL_11:
    sub_100223BF0((uint64_t)v160, type metadata accessor for PlaceSummaryViewModelUnit.Label);
    uint64_t v71 = *v171;
    (*v171)(v68, 1, 1, v72);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  return (void *)a1;
}

BOOL sub_10021E330(BOOL result, id a2)
{
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(result + 16);
    if (!v3) {
      goto LABEL_10;
    }
    if (*(unsigned char *)(result + 32) == 6) {
      return 1;
    }
    if (v3 == 1)
    {
LABEL_10:
      uint64_t v6 = (char *)[a2 state];
      if ((unint64_t)(v6 - 1) > 5)
      {
        return 0;
      }
      else
      {
        unint64_t v7 = 0x40305020100uLL >> (8 * (v6 - 1));
        return sub_100278048(v7, v2);
      }
    }
    else
    {
      uint64_t v4 = 33;
      while (1)
      {
        uint64_t v5 = v4 - 31;
        if (__OFADD__(v4 - 32, 1)) {
          break;
        }
        if (*(unsigned char *)(result + v4) == 6) {
          return 1;
        }
        ++v4;
        if (v5 == v3) {
          goto LABEL_10;
        }
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10021E3FC(void *a1, unint64_t a2)
{
  unint64_t v78 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v74 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v76 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v73 = (uint64_t)&v58 - v8;
  uint64_t v9 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v61 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v67 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v60 = (uint64_t)&v58 - v15;
  uint64_t v16 = (char *)sub_100263694(a1);
  if (!v16) {
    return 0;
  }
  uint64_t v17 = v16;
  id v75 = [a1 mapItem];
  if (!v75)
  {

    return 0;
  }
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines];
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v68 = v12;
  uint64_t v66 = v19;
  if (!v19)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    id v23 = v75;
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_36;
    }
LABEL_51:

    swift_bridgeObjectRelease();
    return 0;
  }
  __n128 v59 = v17;
  uint64_t v65 = v18 + 32;
  uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  uint64_t v62 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
  uint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  uint64_t v58 = v18;
  swift_bridgeObjectRetain_n();
  uint64_t v21 = 0;
  uint64_t v22 = _swiftEmptyArrayStorage;
  id v23 = v75;
  id v63 = v11;
  do
  {
    unsigned __int8 v25 = (unint64_t *)(v65 + 16 * v21);
    unint64_t v26 = *v25;
    int v27 = *((unsigned __int8 *)v25 + 8);
    int v72 = *((unsigned __int8 *)v25 + 9);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v28 = result;
    }
    else
    {
      uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
    }
    uint64_t v70 = v21;
    uint64_t v71 = v22;
    int v69 = v27;
    if (v28)
    {
      if (v28 < 1)
      {
        __break(1u);
        goto LABEL_57;
      }
      uint64_t v30 = 0;
      unint64_t v31 = _swiftEmptyArrayStorage;
      do
      {
        if ((v26 & 0xC000000000000001) != 0)
        {
          uint64_t v32 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v32 = *(uint64_t **)(v26 + 8 * v30 + 32);
          swift_retain();
        }
        sub_1002063FC(v23, v32, 0, 0, 0, v78, 0, 1, (uint64_t)v5, 0, 0, 0, 0);
        swift_release();
        if ((*v20)(v5, 1, v77) == 1)
        {
          sub_1000FF2E0((uint64_t)v5, &qword_1015D2AD8);
        }
        else
        {
          uint64_t v33 = v73;
          sub_100223DBC((uint64_t)v5, v73, type metadata accessor for PlaceSummaryViewModelUnit);
          sub_100223DBC(v33, v76, type metadata accessor for PlaceSummaryViewModelUnit);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v31 = (void *)sub_1001D00BC(0, v31[2] + 1, 1, (unint64_t)v31);
          }
          unint64_t v35 = v31[2];
          unint64_t v34 = v31[3];
          if (v35 >= v34 >> 1) {
            unint64_t v31 = (void *)sub_1001D00BC(v34 > 1, v35 + 1, 1, (unint64_t)v31);
          }
          v31[2] = v35 + 1;
          sub_100223DBC(v76, (uint64_t)v31+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v35, type metadata accessor for PlaceSummaryViewModelUnit);
          id v23 = v75;
        }
        ++v30;
      }
      while (v28 != v30);
    }
    else
    {
      unint64_t v31 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease_n();
    char v36 = v72;
    uint64_t v37 = sub_10021CFF0((uint64_t)v31, v72);
    swift_bridgeObjectRelease();
    uint64_t v38 = (uint64_t)v63;
    if (v37[2])
    {
      UUID.init()();
      uint64_t v39 = v68;
      *(void *)(v38 + *(int *)(v68 + 20)) = v37;
      *(unsigned char *)(v38 + *(int *)(v39 + 24)) = v69;
      *(unsigned char *)(v38 + *(int *)(v39 + 28)) = v36;
      (*v62)(v38, 0, 1, v39);
    }
    else
    {
      uint64_t v39 = v68;
      (*v62)((uint64_t)v63, 1, 1, v68);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v71;
    if ((*v64)(v38, 1, v39) == 1)
    {
      sub_1000FF2E0(v38, (uint64_t *)&unk_1015D59D0);
      id v23 = v75;
      uint64_t v24 = v70;
    }
    else
    {
      uint64_t v40 = v60;
      sub_100223DBC(v38, v60, type metadata accessor for PlaceSummaryViewModelLine);
      sub_100223DBC(v40, v67, type metadata accessor for PlaceSummaryViewModelLine);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = (void *)sub_1001D08A4(0, v22[2] + 1, 1, (unint64_t)v22);
      }
      uint64_t v24 = v70;
      unint64_t v42 = v22[2];
      unint64_t v41 = v22[3];
      if (v42 >= v41 >> 1) {
        uint64_t v22 = (void *)sub_1001D08A4(v41 > 1, v42 + 1, 1, (unint64_t)v22);
      }
      v22[2] = v42 + 1;
      sub_100223DBC(v67, (uint64_t)v22+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v42, type metadata accessor for PlaceSummaryViewModelLine);
      id v23 = v75;
    }
    uint64_t v21 = v24 + 1;
  }
  while (v21 != v66);
  swift_bridgeObjectRelease_n();
  uint64_t v17 = v59;
  if (!v22[2]) {
    goto LABEL_51;
  }
LABEL_36:
  uint64_t v44 = *(void *)&v17[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_trailingEntities];
  swift_bridgeObjectRetain();
  unint64_t v45 = sub_100206640(v23, v44, 0);
  swift_bridgeObjectRelease();
  sub_10012E3C4(v45);
  uint64_t v46 = static Color.clear.getter();
  id v47 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryViewModelTemplate(0));
  id v43 = sub_1001A035C((unint64_t)v22, 0xF000000000000007, v45, 0, 0, 0, 2, 0, v46, 0);
  if (!v43)
  {
    sub_10012E49C(v45);

    return (uint64_t)v43;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v48 = *(void *)(v79[0] + 16);
  swift_bridgeObjectRelease();
  if (v48 >= 3) {
    unint64_t v49 = 3;
  }
  else {
    unint64_t v49 = v48;
  }
  unint64_t v50 = *(void *)(sub_1001A0CB8(0) + 16);
  swift_bridgeObjectRelease();
  if (v50 >= v49
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        unint64_t v51 = *(void *)(v79[0] + 16),
        swift_bridgeObjectRelease(),
        v50 >= v51))
  {

    sub_10012E49C(v45);
    return (uint64_t)v43;
  }
  unint64_t v78 = v45;
  __n128 v59 = v17;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v52 = *(void *)(v79[0] + 16);
  swift_bridgeObjectRelease();
  if (!v52)
  {
LABEL_54:

    sub_10012E49C(v78);
    return (uint64_t)v43;
  }
  unint64_t v53 = 0;
  while (1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v54 = (void (*)(uint64_t *, void))static Published.subscript.modify();
    uint64_t v56 = v55;
    unint64_t v57 = *v55;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v56 = v57;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1003481E4(v57);
      unint64_t v57 = result;
      *uint64_t v56 = result;
    }
    if (v53 >= *(void *)(v57 + 16)) {
      break;
    }
    *(unsigned char *)(v57
             + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))
             + *(void *)(v61 + 72) * v53
             + *(int *)(v68 + 24)) = 0;
    v54(v79, 0);
    swift_release();
    swift_release();
    if (v52 == ++v53) {
      goto LABEL_54;
    }
  }
LABEL_57:
  __break(1u);
  return result;
}

id sub_10021EE28(void *a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (!a1) {
    return 0;
  }
  uint64_t v13 = *(void *)(a2 + 16);
  if (!v13) {
    return 0;
  }
  uint64_t v14 = a2 + 32;
  swift_bridgeObjectRetain();
  id v3 = a1;
  uint64_t v4 = 0;
  while (1)
  {
    uint64_t v5 = (uint64_t *)(v14 + 16 * v4);
    uint64_t v6 = *v5;
    uint64_t v15 = v5[1];
    if ((unint64_t)*v5 >> 62) {
      break;
    }
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_8;
    }
LABEL_5:
    ++v4;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v4 == v13)
    {

      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v8 = 4;
  while (1)
  {
    id result = (v6 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v6 + 8 * v8);
    uint64_t v10 = result;
    uint64_t v11 = v8 - 3;
    if (__OFADD__(v8 - 4, 1)) {
      break;
    }
    unsigned int v12 = [result isEqualToGEOMapItemIdentifier:v3];

    if (v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return (id)v15;
    }
    ++v8;
    if (v11 == v7) {
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10021EFD8(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1 && (a2 & 1) == 0) {
    return 0xF000000000000007;
  }
  id v10 = [objc_allocWithZone((Class)MapsUIImageGEOFeatureSpec) init];
  [v10 setStyle:a1];
  [v10 setMarkerFallback:a2 & 1];
  uint64_t v11 = sub_1000FF33C(&qword_1015D0F40);
  uint64_t v12 = swift_allocBox();
  uint64_t v14 = v13;
  uint64_t v15 = v13 + *(int *)(v11 + 96);
  uint64_t v16 = *(int *)(v11 + 112);
  *(void *)uint64_t v13 = v10;
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = a3 & 1;
  *(void *)(v13 + 24) = 0;
  uint64_t v17 = enum case for Image.TemplateRenderingMode.original(_:);
  uint64_t v18 = type metadata accessor for Image.TemplateRenderingMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v15, v17, v18);
  id v19 = v10;
  *(void *)(v14 + v16) = static Color.clear.getter();
  uint64_t *v8 = v12;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PlaceSummaryImageViewModel(0);
  uint64_t v9 = swift_allocObject();
  v22[1] = 0;
  sub_1000FF33C((uint64_t *)&unk_1015D23C8);
  Published.init(initialValue:)();
  UUID.init()();
  sub_100223DBC((uint64_t)v8, v9 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);

  uint64_t v20 = v9 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  return v9;
}

unint64_t sub_10021F208(void *a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1) {
    return 0xF000000000000007;
  }
  id v9 = objc_allocWithZone((Class)MapsUIImageContactSpec);
  id v10 = a1;
  id v11 = [v9 init];
  [v11 setContact:v10];
  [v11 setUseAvatarImageRendered:1];
  if (a2 || (a3 & 1) != 0)
  {
    id v22 = [objc_allocWithZone((Class)MapsUIImageGEOFeatureSpec) init];
    [v22 setStyle:a2];
    [v22 setMarkerFallback:a3 & 1];
    uint64_t v23 = sub_1000FF33C(&qword_1015D0F40);
    uint64_t v24 = swift_allocBox();
    id v48 = v10;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t v28 = v26 + *(int *)(v23 + 96);
    uint64_t v29 = *(int *)(v23 + 112);
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = 0;
    *(void *)(v26 + 24) = 0;
    *(unsigned char *)(v26 + 16) = 0;
    uint64_t v30 = enum case for Image.TemplateRenderingMode.original(_:);
    unsigned int v45 = enum case for Image.TemplateRenderingMode.original(_:);
    uint64_t v44 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v31 = *(void *)(v44 - 8);
    id v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 104);
    uint64_t v46 = v31 + 104;
    v43(v28, v30, v44);
    id v47 = v22;
    *(void *)(v27 + v29) = static Color.clear.getter();
    uint64_t *v8 = v25;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for PlaceSummaryImageViewModel(0);
    uint64_t v32 = swift_allocObject();
    uint64_t v49 = 0;
    sub_1000FF33C((uint64_t *)&unk_1015D23C8);
    Published.init(initialValue:)();
    UUID.init()();
    sub_100223DBC((uint64_t)v8, v32 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    uint64_t v33 = v32 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
    *(void *)uint64_t v33 = 0;
    *(unsigned char *)(v33 + 8) = 1;
    uint64_t v34 = swift_allocBox();
    uint64_t v36 = v35;
    uint64_t v37 = v35 + *(int *)(v23 + 96);
    uint64_t v38 = *(int *)(v23 + 112);
    *(void *)uint64_t v35 = v11;
    *(void *)(v35 + 8) = 0;
    *(void *)(v35 + 24) = v32;
    *(unsigned char *)(v35 + 16) = 0;
    v43(v37, v45, v44);
    id v39 = v11;
    *(void *)(v36 + v38) = static Color.clear.getter();
    uint64_t *v8 = v34;
    swift_storeEnumTagMultiPayload();
    id v10 = v48;
    uint64_t v21 = swift_allocObject();
    uint64_t v49 = 0;
    Published.init(initialValue:)();
    UUID.init()();
    sub_100223DBC((uint64_t)v8, v21 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);

    id v20 = v47;
  }
  else
  {
    uint64_t v12 = sub_1000FF33C(&qword_1015D0F40);
    uint64_t v13 = swift_allocBox();
    uint64_t v15 = v14;
    uint64_t v16 = v14 + *(int *)(v12 + 96);
    uint64_t v17 = *(int *)(v12 + 112);
    *(void *)uint64_t v14 = v11;
    *(void *)(v14 + 8) = 0;
    *(void *)(v14 + 24) = 0;
    *(unsigned char *)(v14 + 16) = 0;
    uint64_t v18 = enum case for Image.TemplateRenderingMode.original(_:);
    uint64_t v19 = type metadata accessor for Image.TemplateRenderingMode();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v16, v18, v19);
    id v20 = v11;
    *(void *)(v15 + v17) = static Color.clear.getter();
    uint64_t *v8 = v13;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for PlaceSummaryImageViewModel(0);
    uint64_t v21 = swift_allocObject();
    uint64_t v49 = 0;
    sub_1000FF33C((uint64_t *)&unk_1015D23C8);
    Published.init(initialValue:)();
    UUID.init()();
    sub_100223DBC((uint64_t)v8, v21 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  }

  uint64_t v40 = v21 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 1;
  return v21;
}

unint64_t sub_10021F6D4(void *a1)
{
  uint64_t v2 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v65 - v6);
  *(void *)&double v9 = __chkstk_darwin(v8).n128_u64[0];
  id v11 = (uint64_t *)((char *)&v65 - v10);
  id v12 = [a1 mapItem:v9];
  if (v12
    && (uint64_t v13 = v12,
        id v14 = [v12 _styleAttributes],
        v13,
        v14)
    || (id v15 = [a1 category]) != 0
    && (v16 = v15, id v14 = [v15 styleAttributes],
                   v16,
                   v14))
  {
    id v17 = v14;
    unint64_t v18 = sub_10021EFD8((uint64_t)v14, 0, 0);

LABEL_6:
    return v18;
  }
  id v20 = [a1 directionIntent];

  if (v20)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [self imageNamed:v21];

    if (v22)
    {
      *id v11 = v22;
      swift_storeEnumTagMultiPayload();
      type metadata accessor for PlaceSummaryImageViewModel(0);
      unint64_t v23 = swift_allocObject();
      uint64_t v66 = 0;
      sub_1000FF33C((uint64_t *)&unk_1015D23C8);
      Published.init(initialValue:)();
      UUID.init()();
      sub_100223DBC((uint64_t)v11, v23 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
      unint64_t v24 = v23 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
      *(void *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 8) = 1;
      return v23;
    }
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v25 = [a1 clientResolved];
  if (v25)
  {
    uint64_t v26 = v25;
    switch([v25 itemType])
    {
      case 1u:
        id v27 = [self homeStyleAttributes];
        goto LABEL_23;
      case 2u:
        id v27 = [self workStyleAttributes];
        goto LABEL_23;
      case 3u:
        id v27 = [self parkedCarStyleAttributes];
        goto LABEL_23;
      case 4u:
        id v28 = [self sharedManager];
        if (!v28) {
          goto LABEL_42;
        }
        uint64_t v29 = v28;
        id v30 = [v28 meCard];

        unint64_t v23 = sub_10021F208(v30, 0, 0);
        return v23;
      case 6u:
        id v27 = [self schoolStyleAttributes];
LABEL_23:
        id v17 = v27;
        unint64_t v18 = sub_10021EFD8((uint64_t)v17, 0, 0);

        goto LABEL_6;
      default:

        return 0xF000000000000007;
    }
  }
  if ([a1 _type] == (id)2 || objc_msgSend(a1, "_type") == (id)1)
  {
    id v17 = [self markerStyleAttributes];
    unint64_t v18 = sub_10021EFD8((uint64_t)v17, 0, 0);
    goto LABEL_6;
  }
  id v31 = [a1 collectionResult];
  if (v31)
  {
    uint64_t v32 = v31;
    id v33 = [v31 collection];

    if (v33)
    {
      id v34 = [v33 publisherAttribution];

      if (v34)
      {
        id v35 = [v34 iconIdentifier];
        swift_unknownObjectRelease();
        id v36 = [objc_allocWithZone((Class)MapsUIImagePublisherSpec) initWithIconIdentifier:v35];
        if (v36)
        {
          uint64_t v37 = v36;
          uint64_t v38 = sub_1000FF33C(&qword_1015D0F40);
          a1 = (void *)swift_allocBox();
          uint64_t v40 = v39;
          *id v39 = v37;
          uint64_t v4 = v37;
          NSString v41 = String._bridgeToObjectiveC()();
          id v42 = [self imageNamed:v41];

          if (v42) {
            goto LABEL_35;
          }
          __break(1u);
        }
      }
    }
  }
  id v43 = [a1 publisherResult];
  if (v43)
  {
    uint64_t v44 = v43;
    id v45 = [v43 publisher];

    if (v45)
    {
      id v46 = [v45 publisherAttribution];

      if (v46)
      {
        id v47 = [v46 iconIdentifier];
        swift_unknownObjectRelease();
        id v48 = [objc_allocWithZone((Class)MapsUIImagePublisherSpec) initWithIconIdentifier:v47];
        if (v48)
        {
          uint64_t v49 = v48;
          uint64_t v38 = sub_1000FF33C(&qword_1015D0F40);
          a1 = (void *)swift_allocBox();
          uint64_t v40 = v50;
          *unint64_t v50 = v49;
          uint64_t v4 = v49;
          NSString v51 = String._bridgeToObjectiveC()();
          id v42 = [self imageNamed:v51];

          if (!v42)
          {
LABEL_45:
            __break(1u);
            JUMPOUT(0x100220028);
          }
LABEL_35:
          uint64_t v52 = (char *)v40 + *(int *)(v38 + 96);
          uint64_t v53 = *(int *)(v38 + 112);
          v40[1] = v42;
          v40[3] = 0;
          *((unsigned char *)v40 + 16) = 0;
          uint64_t v54 = enum case for Image.TemplateRenderingMode.original(_:);
          uint64_t v55 = type metadata accessor for Image.TemplateRenderingMode();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 104))(v52, v54, v55);
          *(void *)((char *)v40 + v53) = static Color.clear.getter();
          void *v7 = a1;
          swift_storeEnumTagMultiPayload();
          type metadata accessor for PlaceSummaryImageViewModel(0);
          unint64_t v23 = swift_allocObject();
          uint64_t v66 = 0;
          sub_1000FF33C((uint64_t *)&unk_1015D23C8);
          Published.init(initialValue:)();
          UUID.init()();
          sub_100223DBC((uint64_t)v7, v23 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);

          unint64_t v56 = v23 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
          *(void *)unint64_t v56 = 0x4014000000000000;
          *(unsigned char *)(v56 + 8) = 0;
          return v23;
        }
      }
    }
  }
  id v57 = [a1 iconStyleAttributes];
  if (!v57)
  {
    id v61 = [self sharedCache];
    if (v61)
    {
      uint64_t v62 = v61;
      id v63 = [v61 searchImage];

      if (v63)
      {
        *uint64_t v4 = v63;
        swift_storeEnumTagMultiPayload();
        type metadata accessor for PlaceSummaryImageViewModel(0);
        unint64_t v23 = swift_allocObject();
        uint64_t v66 = 0;
        sub_1000FF33C((uint64_t *)&unk_1015D23C8);
        Published.init(initialValue:)();
        UUID.init()();
        sub_100223DBC((uint64_t)v4, v23 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
        unint64_t v64 = v23 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
        *(void *)unint64_t v64 = 0;
        *(unsigned char *)(v64 + 8) = 1;
        return v23;
      }
      goto LABEL_44;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v58 = v57;
  id v59 = [objc_allocWithZone((Class)GEOFeatureStyleAttributes) initWithGEOStyleAttributes:v57];
  unint64_t v60 = sub_10021EFD8((uint64_t)v59, 0, 1);

  return v60;
}

uint64_t sub_100220040(void *a1)
{
  id v2 = [a1 childItemType];
  if (v2 == (id)3)
  {
    id v7 = [a1 publisherResult];
    id v4 = v7;
    if (!v7) {
      return (uint64_t)v4;
    }
    id v8 = [v7 publisher];

    if (v8)
    {
      id v9 = [v8 totalCollectionCount];
LABEL_11:
      id v10 = v9;

      if (v10 == (id)1)
      {
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v11.super.Class isa = (Class)qword_101611820;
        unint64_t v12 = 0xD000000000000018;
        unint64_t v13 = 0xD000000000000040;
        unint64_t v27 = 0x8000000100F7DAF0;
        unint64_t v14 = 0x8000000100F7DAD0;
        uint64_t v15 = 0x6564697547;
        unint64_t v16 = 0xE500000000000000;
      }
      else
      {
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v11.super.Class isa = (Class)qword_101611820;
        unint64_t v13 = 0xD000000000000041;
        unint64_t v27 = 0x8000000100F7DA80;
        unint64_t v14 = 0x8000000100F7DA60;
        unint64_t v12 = 0xD000000000000019;
        uint64_t v15 = 0x736564697547;
        unint64_t v16 = 0xE600000000000000;
      }
      return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, v11, *(Swift::String *)&v15, *(Swift::String *)&v13)._countAndFlagsBits;
    }
    return 0;
  }
  if (v2 == (id)2)
  {
    id v17 = [a1 childItemAction];
    unint64_t v18 = v17;
    if (v17)
    {
      id v19 = [v17 childActionType];

      switch((unint64_t)v19)
      {
        case 1uLL:
          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v11.super.Class isa = (Class)qword_101611820;
          unint64_t v13 = 0xD000000000000032;
          unint64_t v27 = 0x8000000100F7DDC0;
          unint64_t v14 = 0x8000000100F7DDA0;
          unint64_t v12 = 0xD000000000000019;
          uint64_t v15 = 0x6F69746365726944;
          unint64_t v16 = 0xEA0000000000736ELL;
          return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, v11, *(Swift::String *)&v15, *(Swift::String *)&v13)._countAndFlagsBits;
        case 2uLL:
          id v22 = [self sharedPlatform];
          if (!v22)
          {
            __break(1u);
            JUMPOUT(0x1002207ACLL);
          }
          unint64_t v23 = v22;
          unsigned int v24 = [v22 supportsARMode];

          if (v24)
          {
            if (qword_1015CBD78 != -1) {
              swift_once();
            }
            v11.super.Class isa = (Class)qword_101611820;
            unint64_t v12 = 0xD000000000000016;
            unint64_t v13 = 0xD000000000000034;
            unint64_t v27 = 0x8000000100F7DD60;
            unint64_t v14 = 0x8000000100F7DD40;
            uint64_t v15 = 0x7265766F796C46;
            unint64_t v16 = 0xE700000000000000;
          }
          else
          {
            if (qword_1015CBD78 != -1) {
              swift_once();
            }
            v11.super.Class isa = (Class)qword_101611820;
            unint64_t v12 = 0xD00000000000001BLL;
            unint64_t v13 = 0xD000000000000039;
            unint64_t v27 = 0x8000000100F7DD00;
            unint64_t v14 = 0x8000000100F7DCE0;
            uint64_t v15 = 0x207265766F796C46;
            unint64_t v16 = 0xEC00000072756F54;
          }
          return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, v11, *(Swift::String *)&v15, *(Swift::String *)&v13)._countAndFlagsBits;
        case 3uLL:
          id v20 = [a1 childItemAction];
          NSString v21 = v20;
          if (!v20) {
            return 0;
          }
          id v4 = [v20 childActionSearch];

          if (!v4) {
            return (uint64_t)v4;
          }
          id v5 = [v4 displayString];
          goto LABEL_6;
        case 4uLL:
          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v11.super.Class isa = (Class)qword_101611820;
          unint64_t v12 = 0xD00000000000001ALL;
          unint64_t v13 = 0xD000000000000037;
          unint64_t v27 = 0x8000000100F7DCA0;
          unint64_t v14 = 0x8000000100F7DC80;
          uint64_t v15 = 0x6F7241206B6F6F4CLL;
          unint64_t v16 = 0xEB00000000646E75;
          return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, v11, *(Swift::String *)&v15, *(Swift::String *)&v13)._countAndFlagsBits;
        case 5uLL:
          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v11.super.Class isa = (Class)qword_101611820;
          unint64_t v12 = 0xD000000000000013;
          unint64_t v13 = 0xD00000000000004ELL;
          unint64_t v27 = 0x8000000100F7DC30;
          unint64_t v14 = 0x8000000100F7DC10;
          uint64_t v15 = 1819042115;
          unint64_t v16 = 0xE400000000000000;
          return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, v11, *(Swift::String *)&v15, *(Swift::String *)&v13)._countAndFlagsBits;
        case 6uLL:
          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v11.super.Class isa = (Class)qword_101611820;
          unint64_t v12 = 0xD000000000000016;
          unint64_t v13 = 0xD00000000000003DLL;
          unint64_t v27 = 0x8000000100F7DBD0;
          unint64_t v14 = 0x8000000100F7DBB0;
          uint64_t v15 = 0x65746973626557;
          unint64_t v16 = 0xE700000000000000;
          return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, v11, *(Swift::String *)&v15, *(Swift::String *)&v13)._countAndFlagsBits;
        case 7uLL:
          id v25 = [a1 childItemAction];
          id v4 = v25;
          if (!v25) {
            return (uint64_t)v4;
          }
          id v8 = [v25 guideLocation];

          if (!v8) {
            return 0;
          }
          id v9 = [v8 numberOfGuides];
          break;
        case 8uLL:
          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v11.super.Class isa = (Class)qword_101611820;
          unint64_t v12 = 0xD00000000000001FLL;
          unint64_t v13 = 0xD000000000000047;
          unint64_t v27 = 0x8000000100F7DB60;
          unint64_t v14 = 0x8000000100F7DB40;
          uint64_t v15 = 0x64616F6C6E776F44;
          unint64_t v16 = 0xE800000000000000;
          return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, v11, *(Swift::String *)&v15, *(Swift::String *)&v13)._countAndFlagsBits;
        default:
          return 0;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v2 != (id)1) {
    return 0;
  }
  id v3 = [a1 childItemPlace];
  id v4 = v3;
  if (!v3) {
    return (uint64_t)v4;
  }
  id v5 = [v3 name];
LABEL_6:
  id v6 = v5;

  if (!v6) {
    return 0;
  }
  id v4 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();

  return (uint64_t)v4;
}

void sub_1002207CC(unint64_t a1, double a2)
{
  id v4 = (int *)type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  uint64_t v30 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v32 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v29 - v7;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v9) {
      return;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      return;
    }
  }
  id v10 = [self system15Semibold];
  if (!v10)
  {
LABEL_24:
    __break(1u);
    return;
  }
  NSBundle v11 = v10;
  id v12 = objc_allocWithZone((Class)ChildItemsViewModel);
  sub_100100830(0, &qword_1015D5A38);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithChildItems:isa, v11, 8.0, a2 + -72.0, 0.0, 10.0, 0.0, 10.0];

  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v31 = v9;
  unint64_t v15 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  id v17 = _swiftEmptyArrayStorage;
  unint64_t v18 = a1;
  do
  {
    if (v15) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v19 = *(id *)(a1 + 8 * v16 + 32);
    }
    id v20 = v19;
    uint64_t v21 = sub_100220040(v19);
    if (v22)
    {
      uint64_t v23 = v21;
      uint64_t v24 = v22;
      UUID.init()();
      id v25 = &v8[v4[5]];
      *(void *)id v25 = v23;
      *((void *)v25 + 1) = v24;
      *(void *)&v8[v4[6]] = v14;
      *(void *)&v8[v4[7]] = v16;
      sub_100223B88((uint64_t)v8, v32, type metadata accessor for PlaceSummaryViewModelActionButtons.Button);
      id v26 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v17 = (void *)sub_1001D08D8(0, v17[2] + 1, 1, (unint64_t)v17);
      }
      unint64_t v28 = v17[2];
      unint64_t v27 = v17[3];
      if (v28 >= v27 >> 1) {
        id v17 = (void *)sub_1001D08D8(v27 > 1, v28 + 1, 1, (unint64_t)v17);
      }
      void v17[2] = v28 + 1;
      sub_100223DBC(v32, (uint64_t)v17+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v28, type metadata accessor for PlaceSummaryViewModelActionButtons.Button);

      sub_100223BF0((uint64_t)v8, type metadata accessor for PlaceSummaryViewModelActionButtons.Button);
    }
    else
    {
    }
    ++v16;
    a1 = v18;
  }
  while (v31 != v16);
  swift_bridgeObjectRelease();
  if (v17[2])
  {
    [v14 numberOfColumns];
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

void sub_100220B84(void *a1, double a2)
{
  id v3 = a1;
  id v4 = [a1 childItems];
  if (v4)
  {
    sub_100100830(0, &qword_1015D5A38);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62)
    {
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_4:
        uint64_t v7 = 4;
        uint64_t v23 = v3;
        do
        {
          if ((v5 & 0xC000000000000001) != 0) {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v8 = *(id *)(v5 + 8 * v7);
          }
          uint64_t v9 = v8;
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v7 - 4, 1))
          {
            __break(1u);
            goto LABEL_27;
          }
          id v11 = [v8 childItemAction];
          if (v11 && (id v12 = v11, v13 = [v11 childActionType], v12, v13 == (id)8))
          {
            id v14 = [v3 mapItem];
            if (!v14)
            {
              __break(1u);
LABEL_33:
              __break(1u);
              return;
            }
            unint64_t v15 = v14;
            id v16 = [v14 _geoMapItem];

            if (!v16) {
              goto LABEL_33;
            }
            id v17 = [v16 offlineDownloadRegion];
            swift_unknownObjectRelease();
            if (v17)
            {
              id v18 = [self sharedHelper];
              unsigned __int8 v19 = [v18 isRegionDownloaded:v17 requireFullyDownloaded:0];

              if (v19)
              {
              }
              else
              {
                id v20 = v9;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                id v3 = v23;
              }
            }
          }
          else
          {
            id v21 = v9;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }

          ++v7;
        }
        while (v10 != v6);
        swift_bridgeObjectRelease();
        if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
          goto LABEL_29;
        }
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_25;
      }
LABEL_30:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_24:
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_25:
      sub_1002207CC((unint64_t)_swiftEmptyArrayStorage, a2);
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_30;
  }
}

void sub_100220F08(void *a1)
{
  uint64_t v41 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D5AC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button(0);
  uint64_t v43 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v42 = (uint64_t)&v36 - v12;
  [a1 resultRefinements:v11];
  if (!v13) {
    return;
  }
  id v14 = v13;
  sub_100100830(0, &qword_1015D5AC8);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_4;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_24;
  }
LABEL_4:
  if (v16 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v37 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  id v46 = (void (**)(char *, uint64_t, uint64_t, int *))(v43 + 56);
  unint64_t v47 = v15 & 0xC000000000000001;
  id v45 = (unsigned int (**)(char *, uint64_t, int *))(v43 + 48);
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  id v18 = _swiftEmptyArrayStorage;
  uint64_t v38 = v9;
  id v39 = v7;
  do
  {
    if (v47) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v19 = *(id *)(v15 + 8 * v17 + 32);
    }
    id v20 = v19;
    if ([v19 type] == (id)1
      && (id v21 = [v20 toggle]) != 0)
    {
      uint64_t v22 = v21;
      uint64_t v23 = v40;
      UUID.init()();
      id v24 = [v22 displayName];
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v18;
      unint64_t v26 = v15;
      uint64_t v27 = v25;
      uint64_t v28 = v16;
      uint64_t v30 = v29;

      id v20 = v20;
      LOBYTE(v24) = [v22 showAsSelected];

      uint64_t v31 = v23;
      uint64_t v7 = v39;
      (*v37)(v6, v31, v41);
      uint64_t v32 = &v6[v7[5]];
      *(void *)uint64_t v32 = v27;
      *((void *)v32 + 1) = v30;
      unint64_t v15 = v26;
      id v18 = v44;
      uint64_t v16 = v28;
      *(void *)&v6[v7[6]] = v20;
      v6[v7[7]] = (char)v24;
      uint64_t v9 = v38;
      (*v46)(v6, 0, 1, v7);
    }
    else
    {
      (*v46)(v6, 1, 1, v7);
    }

    if ((*v45)(v6, 1, v7) == 1)
    {
      sub_1000FF2E0((uint64_t)v6, &qword_1015D5AC0);
    }
    else
    {
      uint64_t v33 = v42;
      sub_100223DBC((uint64_t)v6, v42, type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button);
      sub_100223DBC(v33, (uint64_t)v9, type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v18 = (void *)sub_1001D090C(0, v18[2] + 1, 1, (unint64_t)v18);
      }
      unint64_t v35 = v18[2];
      unint64_t v34 = v18[3];
      if (v35 >= v34 >> 1) {
        id v18 = (void *)sub_1001D090C(v34 > 1, v35 + 1, 1, (unint64_t)v18);
      }
      v18[2] = v35 + 1;
      sub_100223DBC((uint64_t)v9, (uint64_t)v18+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v35, type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button);
    }
    ++v17;
  }
  while (v16 != v17);
  swift_bridgeObjectRelease_n();
  if (!v18[2]) {
    goto LABEL_24;
  }
}

void sub_100221414(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (void *)((char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      uint64_t v6 = 0;
      while (*(unsigned char *)(a1 + v6 + 32) != 2)
      {
        if (v5 == ++v6) {
          return;
        }
      }
      uint64_t v7 = self;
      swift_bridgeObjectRetain();
      id v8 = [v7 sharedCache];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = [v8 searchImage];

        if (v10)
        {
          swift_bridgeObjectRelease();
          *uint64_t v4 = v10;
          swift_storeEnumTagMultiPayload();
          type metadata accessor for PlaceSummaryImageViewModel(0);
          uint64_t v11 = swift_allocObject();
          v13[1] = 0;
          sub_1000FF33C((uint64_t *)&unk_1015D23C8);
          Published.init(initialValue:)();
          UUID.init()();
          sub_100223DBC((uint64_t)v4, v11 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
          uint64_t v12 = v11 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
          *(void *)uint64_t v12 = 0;
          *(unsigned char *)(v12 + 8) = 1;
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

unint64_t sub_1002215EC(id a1, uint64_t a2)
{
  if (!a2) {
    return 0xF000000000000007;
  }
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0xF000000000000007;
  }
  uint64_t v4 = (unsigned __int8 *)(a2 + 32);
  while (1)
  {
    int v5 = *v4++;
    if (v5 == 2) {
      break;
    }
    if (!--v2) {
      return 0xF000000000000007;
    }
  }
  unsigned int v8 = [a1 isMeCard];
  switch([a1 addressType])
  {
    case 1u:
      if (v8)
      {
        id v9 = [self homeStyleAttributes];
        goto LABEL_16;
      }
      id v12 = [a1 contact];
      id v13 = [self homeStyleAttributes];
      goto LABEL_21;
    case 2u:
      if (v8)
      {
        id v9 = [self workStyleAttributes];
        goto LABEL_16;
      }
      id v12 = [a1 contact];
      id v13 = [self workStyleAttributes];
      goto LABEL_21;
    case 3u:
      if (v8)
      {
        id v9 = [self schoolStyleAttributes];
LABEL_16:
        id v10 = v9;
        unint64_t v11 = sub_10021EFD8((uint64_t)v10, 0, 0);
LABEL_17:
        unint64_t v6 = v11;
      }
      else
      {
        id v12 = [a1 contact];
        id v13 = [self schoolStyleAttributes];
LABEL_21:
        id v14 = v13;
        unint64_t v6 = sub_10021F208(v12, (uint64_t)v14, 0);
      }
      break;
    default:
      id v10 = [a1 contact];
      unint64_t v11 = sub_10021F208(v10, 0, v8 == 0);
      goto LABEL_17;
  }
  return v6;
}

void *sub_100221850(unsigned char *a1)
{
  unint64_t v3 = swift_allocObject();
  uint64_t v4 = _swiftEmptyArrayStorage;
  *(void *)(v3 + 16) = _swiftEmptyArrayStorage;
  uint64_t v5 = v3 + 16;
  if (*(void *)&a1[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle])
  {
    NSString v6 = sub_10032554C();
    Swift::String v7 = String.init(_:)(v6);
    uint64_t countAndFlagsBits = v7._countAndFlagsBits;
    uint64_t object = (uint64_t)v7._object;
    id v10 = sub_1000FB364(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    int64_t v13 = v12 + 1;
    if (v12 >= v11 >> 1) {
      goto LABEL_89;
    }
    goto LABEL_3;
  }
  uint64_t v152 = _swiftEmptyArrayStorage;
LABEL_7:
  if (a1[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_placeSummaryShowsStackedIconsAndLabels] == 1)
  {
    id v18 = *(void **)&a1[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
    if (v18)
    {
      unint64_t v12 = v18;
      id v19 = [(id)v12 postalAddresses];
      int v20 = sub_1000FF33C((uint64_t *)&unk_1015DC510);
      unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v22 >= 1)
      {
        uint64_t countAndFlagsBits = (uint64_t)[(id)v12 postalAddresses];
        uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        v156[0] = v4;
        if ((unint64_t)v23 >> 62)
        {
          if (v23 < 0) {
            uint64_t countAndFlagsBits = v23;
          }
          else {
            uint64_t countAndFlagsBits = v23 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain();
          uint64_t object = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t object = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        unint64_t v148 = v3;
        int v149 = v20;
        id v150 = (id)v12;
        if (object)
        {
          if (object < 1)
          {
            __break(1u);
            goto LABEL_204;
          }
          uint64_t v24 = 0;
          uint64_t v5 = (uint64_t)&type metadata for String;
          do
          {
            if ((v23 & 0xC000000000000001) != 0) {
              uint64_t v25 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v25 = *(id *)(v23 + 8 * v24 + 32);
            }
            uint64_t v4 = v25;
            id v26 = [v25 label];
            if (!v26) {
              goto LABEL_17;
            }
            uint64_t v27 = v26;
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            LODWORD(v1) = v28;
            sub_100180324();
            uint64_t v29 = StringProtocol.caseInsensitiveCompare<A>(_:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v29)
            {
LABEL_17:
            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              uint64_t v1 = *(void *)(v156[0] + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            ++v24;
          }
          while (object != v24);
          swift_bridgeObjectRelease();
          uint64_t v147 = v156[0];
          int v20 = v149;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v147 = (uint64_t)_swiftEmptyArrayStorage;
        }
        uint64_t countAndFlagsBits = (uint64_t)[(id)v12 postalAddresses];
        uint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        v156[0] = _swiftEmptyArrayStorage;
        if ((unint64_t)v30 >> 62)
        {
          if (v30 < 0) {
            uint64_t countAndFlagsBits = v30;
          }
          else {
            uint64_t countAndFlagsBits = v30 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain();
          uint64_t object = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t object = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (!object)
        {
          swift_bridgeObjectRelease();
          unint64_t v146 = _swiftEmptyArrayStorage;
LABEL_43:
          uint64_t countAndFlagsBits = (uint64_t)[(id)v12 postalAddresses];
          uint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          v156[0] = _swiftEmptyArrayStorage;
          if ((unint64_t)v37 >> 62)
          {
            if (v37 < 0) {
              uint64_t countAndFlagsBits = v37;
            }
            else {
              uint64_t countAndFlagsBits = v37 & 0xFFFFFFFFFFFFFF8;
            }
            swift_bridgeObjectRetain();
            uint64_t object = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t object = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (!object)
          {
            swift_bridgeObjectRelease();
            uint64_t v5 = (uint64_t)_swiftEmptyArrayStorage;
            goto LABEL_58;
          }
          if (object >= 1)
          {
            for (uint64_t i = 0; i != object; ++i)
            {
              if ((v37 & 0xC000000000000001) != 0) {
                id v39 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v39 = *(id *)(v37 + 8 * i + 32);
              }
              uint64_t v4 = v39;
              id v40 = [v39 label];
              if (!v40) {
                goto LABEL_48;
              }
              uint64_t v41 = v40;
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              static String._unconditionallyBridgeFromObjectiveC(_:)();
              LODWORD(v1) = v42;
              sub_100180324();
              uint64_t countAndFlagsBits = StringProtocol.caseInsensitiveCompare<A>(_:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (countAndFlagsBits)
              {
LABEL_48:
              }
              else
              {
                uint64_t countAndFlagsBits = (uint64_t)v156;
                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                uint64_t v1 = *(void *)(v156[0] + 16);
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized ContiguousArray._endMutation()();
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v5 = v156[0];
LABEL_58:
            id v43 = [(id)v12 postalAddresses];
            unint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            v156[0] = _swiftEmptyArrayStorage;
            if (v44 >> 62)
            {
              swift_bridgeObjectRetain();
              int64_t v13 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              int64_t v13 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            uint64_t v145 = v5;
            if (v13)
            {
              unint64_t v3 = 0;
              uint64_t v5 = v44 & 0xFFFFFFFFFFFFFF8;
              a1 = &type metadata for String;
              while (1)
              {
                if ((v44 & 0xC000000000000001) != 0)
                {
                  id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  unint64_t v11 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v3 >= v11)
                  {
                    __break(1u);
LABEL_88:
                    __break(1u);
LABEL_89:
                    id v10 = sub_1000FB364((void *)(v11 > 1), v13, 1, v10);
LABEL_3:
                    v10[2] = v13;
                    uint64_t v152 = v10;
                    id v14 = &v10[2 * v12];
                    void v14[4] = countAndFlagsBits;
                    v14[5] = object;
                    id v15 = [objc_allocWithZone((Class)MapsUIImageGEOFeatureSpec) init];
                    id v16 = [self sharedLocationWithHalo];
                    [v15 setStyle:v16];

                    [v15 setMarkerFallback:1];
                    id v17 = v15;
                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                    if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                    specialized Array._endMutation()();

                    goto LABEL_7;
                  }
                  id v45 = *(id *)(v44 + 8 * v3 + 32);
                }
                uint64_t object = (uint64_t)v45;
                uint64_t v4 = (void *)(v3 + 1);
                if (__OFADD__(v3, 1)) {
                  goto LABEL_88;
                }
                id v46 = [v45 label];
                if (v46)
                {
                  unint64_t v47 = v46;
                  static String._unconditionallyBridgeFromObjectiveC(_:)();
                  LODWORD(v1) = v48;

                  static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v12 = v49;
                  sub_100180324();
                  uint64_t countAndFlagsBits = StringProtocol.caseInsensitiveCompare<A>(_:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (!countAndFlagsBits) {
                    goto LABEL_62;
                  }
                }
                id v50 = [(id)object label];
                if (v50)
                {
                  NSString v51 = v50;
                  static String._unconditionallyBridgeFromObjectiveC(_:)();
                  LODWORD(v1) = v52;

                  static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v12 = v53;
                  sub_100180324();
                  uint64_t countAndFlagsBits = StringProtocol.caseInsensitiveCompare<A>(_:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (!countAndFlagsBits) {
                    goto LABEL_62;
                  }
                }
                id v54 = [(id)object label];
                if (!v54) {
                  goto LABEL_74;
                }
                uint64_t v55 = v54;
                static String._unconditionallyBridgeFromObjectiveC(_:)();
                LODWORD(v1) = v56;

                static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v12 = v57;
                sub_100180324();
                uint64_t countAndFlagsBits = StringProtocol.caseInsensitiveCompare<A>(_:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (!countAndFlagsBits)
                {
LABEL_62:
                }
                else
                {
LABEL_74:
                  uint64_t countAndFlagsBits = (uint64_t)v156;
                  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                  unint64_t v12 = *(void *)(v156[0] + 16);
                  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized ContiguousArray._endMutation()();
                }
                ++v3;
                if (v4 == (void *)v13)
                {
                  uint64_t countAndFlagsBits = v156[0];
                  unint64_t v3 = v148;
                  uint64_t v5 = v145;
                  goto LABEL_78;
                }
              }
            }
            uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
LABEL_78:
            swift_bridgeObjectRelease();
            uint64_t object = (uint64_t)v146;
            int v20 = v147 < 0 || (v147 & 0x4000000000000000) != 0;
            if (v20 == 1)
            {
              swift_retain();
              if (_CocoaArrayWrapper.endIndex.getter())
              {
LABEL_83:
                if ((v147 & 0xC000000000000001) == 0)
                {
                  if (!*(void *)(v147 + 16))
                  {
                    __break(1u);
                    goto LABEL_208;
                  }
                  id v59 = *(id *)(v147 + 32);
                  goto LABEL_86;
                }
LABEL_206:
                id v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_86:
                unint64_t v60 = v59;
                swift_release();
                id v61 = sub_1002181AC(v60);
                sub_100218408(v61, v3);

                goto LABEL_106;
              }
            }
            else
            {
              uint64_t v58 = *(void *)(v147 + 16);
              swift_retain();
              if (v58) {
                goto LABEL_83;
              }
            }
            swift_release();
LABEL_106:
            LODWORD(v4) = object < 0 || (object & 0x4000000000000000) != 0;
            if (v4 == 1)
            {
              swift_retain();
              if (_CocoaArrayWrapper.endIndex.getter())
              {
LABEL_111:
                if ((object & 0xC000000000000001) == 0)
                {
                  if (!*(void *)(object + 16))
                  {
                    __break(1u);
                    goto LABEL_210;
                  }
                  id v63 = *(id *)(object + 32);
                  goto LABEL_114;
                }
LABEL_208:
                id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_114:
                unint64_t v64 = v63;
                swift_release();
                id v65 = sub_1002181AC(v64);
                sub_100218408(v65, v3);

                goto LABEL_117;
              }
            }
            else
            {
              uint64_t v62 = *(void *)(object + 16);
              swift_retain();
              if (v62) {
                goto LABEL_111;
              }
            }
            swift_release();
LABEL_117:
            LODWORD(v1) = v5 < 0 || (v5 & 0x4000000000000000) != 0;
            if (v1 == 1)
            {
              swift_retain();
              if (_CocoaArrayWrapper.endIndex.getter())
              {
LABEL_122:
                if ((v5 & 0xC000000000000001) == 0)
                {
                  if (!*(void *)(v5 + 16))
                  {
                    __break(1u);
                    goto LABEL_212;
                  }
                  id v67 = *(id *)(v5 + 32);
                  goto LABEL_125;
                }
LABEL_210:
                id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_125:
                uint64_t v68 = v67;
                swift_release();
                id v69 = sub_1002181AC(v68);
                sub_100218408(v69, v3);

                goto LABEL_128;
              }
            }
            else
            {
              uint64_t v66 = *(void *)(v5 + 16);
              swift_retain();
              if (v66) {
                goto LABEL_122;
              }
            }
            swift_release();
LABEL_128:
            LODWORD(v5) = countAndFlagsBits < 0 || (countAndFlagsBits & 0x4000000000000000) != 0;
            if (v5 == 1)
            {
              swift_retain();
              uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
              if (v70)
              {
LABEL_133:
                if ((countAndFlagsBits & 0xC000000000000001) == 0)
                {
                  if (!*(void *)(countAndFlagsBits + 16))
                  {
                    __break(1u);
                    goto LABEL_214;
                  }
                  id v71 = *(id *)(countAndFlagsBits + 32);
                  goto LABEL_136;
                }
LABEL_212:
                id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_136:
                int v72 = v71;
                swift_release();
                id v73 = sub_1002181AC(v72);
                sub_100218408(v73, v3);

                goto LABEL_139;
              }
            }
            else
            {
              uint64_t v70 = *(void *)(countAndFlagsBits + 16);
              swift_retain();
              if (v70) {
                goto LABEL_133;
              }
            }
            swift_release();
LABEL_139:
            int v151 = (int)v4;
            int v153 = v20;
            if (qword_1015CBD78 != -1) {
              swift_once();
            }
            unint64_t v74 = 0xD000000000000014;
            id v75 = (void *)qword_101611820;
            NSString v76 = String._bridgeToObjectiveC()();
            NSString v77 = String._bridgeToObjectiveC()();
            id v78 = [v75 localizedStringForKey:v76 value:v77 table:0];

            unint64_t v79 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            if (v152[2] == 1)
            {
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              sub_1000FF33C((uint64_t *)&unk_1015D59C0);
              uint64_t v70 = swift_allocObject();
              *(_OWORD *)(v70 + 16) = xmmword_100F5CF70;
              id v80 = [v150 postalAddresses];
              unint64_t v81 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (!(v81 >> 62))
              {
                uint64_t v82 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_144:
                swift_bridgeObjectRelease();
                *(void *)(v70 + 56) = &type metadata for Int;
                *(void *)(v70 + 64) = &protocol witness table for Int;
                *(void *)(v70 + 32) = v82;
                uint64_t v83 = static String.localizedStringWithFormat(_:_:)();
                uint64_t v85 = v84;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v152 = sub_1000FB364(0, v152[2] + 1, 1, v152);
                }
                uint64_t v86 = v152;
                unint64_t v88 = v152[2];
                unint64_t v87 = v152[3];
                if (v88 >= v87 >> 1) {
                  uint64_t v86 = sub_1000FB364((void *)(v87 > 1), v88 + 1, 1, v152);
                }
                v86[2] = v88 + 1;
                uint64_t v152 = v86;
                int v89 = &v86[2 * v88];
                v89[4] = v83;
                v89[5] = v85;

                goto LABEL_218;
              }
LABEL_214:
              swift_bridgeObjectRetain();
              uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              goto LABEL_144;
            }
            id v90 = [v150 postalAddresses];
            unint64_t v91 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            if (v91 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v92 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (v92 == 1)
            {
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v93 = (uint64_t)v150;
              id v94 = [v150 postalAddresses];
              unint64_t v95 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (v95 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v96 = (void *)_CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (v96)
                {
LABEL_154:
                  if ((v95 & 0xC000000000000001) != 0)
                  {
                    id v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (!*(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    {
                      __break(1u);
                      goto LABEL_223;
                    }
                    id v97 = *(id *)(v95 + 32);
                  }
                  uint64_t v96 = v97;
                  swift_bridgeObjectRelease();
                  id v98 = [v96 value];
                  id v99 = [v98 street];

                  uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v102 = v101;

                  uint64_t v154 = v100;
                  uint64_t v155 = v102;
                  v103._uint64_t countAndFlagsBits = 8236;
                  v103._uint64_t object = (void *)0xE200000000000000;
                  String.append(_:)(v103);
                  id v104 = [v96 value];
                  id v105 = [v104 city];

                  uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v108 = v107;

                  v109._uint64_t countAndFlagsBits = v106;
                  v109._uint64_t object = v108;
                  String.append(_:)(v109);
                  swift_bridgeObjectRelease();
                  uint64_t v93 = v154;
                  uint64_t v92 = v155;
                  if (swift_isUniquelyReferenced_nonNull_native())
                  {
LABEL_158:
                    uint64_t v110 = v152;
                    unint64_t v112 = v152[2];
                    unint64_t v111 = v152[3];
                    if (v112 >= v111 >> 1) {
                      uint64_t v110 = sub_1000FB364((void *)(v111 > 1), v112 + 1, 1, v152);
                    }
                    v110[2] = v112 + 1;
                    uint64_t v152 = v110;
                    uint64_t v113 = &v110[2 * v112];
                    v113[4] = v93;
                    v113[5] = v92;

                    goto LABEL_218;
                  }
LABEL_223:
                  uint64_t v152 = sub_1000FB364(0, v152[2] + 1, 1, v152);
                  goto LABEL_158;
                }
              }
              else
              {
                uint64_t v96 = *(void **)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (v96) {
                  goto LABEL_154;
                }
              }

              swift_bridgeObjectRelease();
LABEL_218:
              swift_beginAccess();
              goto LABEL_219;
            }
            id v114 = [v150 postalAddresses];
            unint64_t v115 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            if (v115 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v116 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v116 = *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (v116 < 2)
            {
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              swift_release();

              goto LABEL_218;
            }
            sub_1000FF33C((uint64_t *)&unk_1015D59C0);
            uint64_t v117 = swift_allocObject();
            *(_OWORD *)(v117 + 16) = xmmword_100F5CF70;
            id v118 = [v150 postalAddresses];
            unint64_t v119 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            if (v119 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v120 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v120 = *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (__OFSUB__(v120, 1))
            {
              __break(1u);
              goto LABEL_226;
            }
            *(void *)(v117 + 56) = &type metadata for Int;
            *(void *)(v117 + 64) = &protocol witness table for Int;
            *(void *)(v117 + 32) = v120 - 1;
            uint64_t v121 = static String.localizedStringWithFormat(_:_:)();
            uint64_t v120 = v122;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v153)
            {
              swift_bridgeObjectRetain();
              uint64_t v123 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
            }
            else
            {
              uint64_t v123 = *(void *)(v147 + 16);
            }
            unint64_t v79 = v150;
            swift_release();
            if (v123 < 1)
            {
              if (v151)
              {
                swift_bridgeObjectRetain();
                uint64_t v129 = _CocoaArrayWrapper.endIndex.getter();
                swift_release();
              }
              else
              {
                uint64_t v129 = v146[2];
              }
              swift_release();
              if (v129 < 1)
              {
                if (v1)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v137 = _CocoaArrayWrapper.endIndex.getter();
                  swift_release();
                }
                else
                {
                  uint64_t v137 = *(void *)(v145 + 16);
                }
                swift_release();
                if (v137 < 1)
                {
                  if (v5)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v138 = _CocoaArrayWrapper.endIndex.getter();
                    swift_release();
                  }
                  else
                  {
                    uint64_t v138 = *(void *)(countAndFlagsBits + 16);
                  }
                  swift_release();
                  if (v138 >= 1)
                  {
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v152 = sub_1000FB364(0, v152[2] + 1, 1, v152);
                    }
                    uint64_t v139 = v152;
                    unint64_t v141 = v152[2];
                    unint64_t v140 = v152[3];
                    if (v141 >= v140 >> 1) {
                      uint64_t v139 = sub_1000FB364((void *)(v140 > 1), v141 + 1, 1, v152);
                    }
                    v139[2] = v141 + 1;
                    uint64_t v152 = v139;
                    uint64_t v142 = &v139[2 * v141];
                    v142[4] = v121;
                    v142[5] = v120;
                    goto LABEL_188;
                  }
                  goto LABEL_184;
                }
                swift_release();
                v124.super.Class isa = (Class)qword_101611820;
                unint64_t v127 = 0xD000000000000016;
                unint64_t v125 = 0xD000000000000029;
                unint64_t v144 = 0x8000000100F7DEB0;
                unint64_t v126 = 0x8000000100F7DE90;
                uint64_t v128 = 0x6C6F6F686353;
                unint64_t v130 = 0xE600000000000000;
LABEL_179:
                Swift::String v131 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v127, (Swift::String_optional)0, v124, *(Swift::String *)&v128, *(Swift::String *)&v125);
                uint64_t v117 = v131._countAndFlagsBits;
                uint64_t countAndFlagsBits = (uint64_t)v131._object;
                unint64_t v74 = v121;
                if (swift_isUniquelyReferenced_nonNull_native())
                {
LABEL_180:
                  id v132 = v152;
                  unint64_t v134 = v152[2];
                  unint64_t v133 = v152[3];
                  if (v134 >= v133 >> 1) {
                    id v132 = sub_1000FB364((void *)(v133 > 1), v134 + 1, 1, v152);
                  }
                  v132[2] = v134 + 1;
                  uint64_t v135 = &v132[2 * v134];
                  v135[4] = v117;
                  v135[5] = countAndFlagsBits;
                  if (!v134)
                  {
                    unint64_t v136 = v132[3];
                    if (v136 <= 3) {
                      id v132 = sub_1000FB364((void *)(v136 > 1), 2, 1, v132);
                    }
                    v132[2] = 2;
                    v132[6] = v74;
                    v132[7] = v120;
                    uint64_t v152 = v132;
                    goto LABEL_188;
                  }
                  uint64_t v152 = v132;
LABEL_184:
                  swift_bridgeObjectRelease();
LABEL_188:

                  goto LABEL_218;
                }
LABEL_226:
                uint64_t v152 = sub_1000FB364(0, v152[2] + 1, 1, v152);
                goto LABEL_180;
              }
              swift_release();
              swift_release();
              v124.super.Class isa = (Class)qword_101611820;
              unint64_t v125 = 0xD000000000000027;
              unint64_t v144 = 0x8000000100F7DF00;
              unint64_t v126 = 0x8000000100F7DEE0;
              unint64_t v127 = 0xD000000000000014;
              uint64_t v128 = 1802661719;
            }
            else
            {
              swift_release();
              swift_release();
              swift_release();
              v124.super.Class isa = (Class)qword_101611820;
              unint64_t v125 = 0xD000000000000027;
              unint64_t v144 = 0x8000000100F7DF50;
              unint64_t v126 = 0x8000000100F7DF30;
              unint64_t v127 = 0xD000000000000014;
              uint64_t v128 = 1701670728;
            }
            unint64_t v130 = 0xE400000000000000;
            goto LABEL_179;
          }
LABEL_205:
          __break(1u);
          goto LABEL_206;
        }
        if (object >= 1)
        {
          uint64_t v31 = 0;
          uint64_t v5 = (uint64_t)&type metadata for String;
          do
          {
            if ((v30 & 0xC000000000000001) != 0) {
              uint64_t v32 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v32 = *(id *)(v30 + 8 * v31 + 32);
            }
            uint64_t v4 = v32;
            id v33 = [v32 label];
            if (!v33) {
              goto LABEL_33;
            }
            unint64_t v34 = v33;
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            LODWORD(v1) = v35;
            sub_100180324();
            uint64_t v36 = StringProtocol.caseInsensitiveCompare<A>(_:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v36)
            {
LABEL_33:
            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              uint64_t v1 = *(void *)(v156[0] + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            ++v31;
          }
          while (object != v31);
          swift_bridgeObjectRelease();
          unint64_t v146 = (void *)v156[0];
          int v20 = v149;
          goto LABEL_43;
        }
LABEL_204:
        __break(1u);
        goto LABEL_205;
      }
    }
  }
LABEL_219:
  swift_bridgeObjectRetain();
  swift_release();
  return v152;
}

unint64_t sub_100222F10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (void *)((char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1) {
    return 0xF000000000000007;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return 0xF000000000000007;
  }
  NSString v6 = (unsigned __int8 *)(a1 + 32);
  while (1)
  {
    int v7 = *v6++;
    if (v7 == 2) {
      break;
    }
    if (!--v5) {
      return 0xF000000000000007;
    }
  }
  id v10 = self;
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 _maps_applicationIconWithBundleIdentifier:v11];

  if (v12)
  {
    *uint64_t v4 = v12;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for PlaceSummaryImageViewModel(0);
    unint64_t v8 = swift_allocObject();
    v16[1] = 0;
    id v13 = v12;
    sub_1000FF33C((uint64_t *)&unk_1015D23C8);
    Published.init(initialValue:)();
    UUID.init()();
    sub_100223DBC((uint64_t)v4, v8 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);

    unint64_t v14 = v8 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
    *(void *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 8) = 1;
  }
  else
  {
    id v15 = [self markerStyleAttributes];
    unint64_t v8 = sub_10021EFD8((uint64_t)v15, 0, 0);
  }
  return v8;
}

id sub_100223118(void *a1, uint64_t a2)
{
  if (!a2) {
    return (id)0xF000000000000007;
  }
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return (id)0xF000000000000007;
  }
  uint64_t v4 = 0;
  while (*(unsigned char *)(a2 + v4 + 32) != 2)
  {
    if (v2 == ++v4) {
      return (id)0xF000000000000007;
    }
  }
  swift_bridgeObjectRetain();
  if (![a1 isDynamicCurrentLocation])
  {
    swift_bridgeObjectRelease();
    id v10 = [a1 mapItem];
    id v8 = [v10 _styleAttributes];

    unint64_t v9 = sub_10021EFD8((uint64_t)v8, 1, 0);
    goto LABEL_12;
  }
  id result = [self sharedManager];
  if (result)
  {
    int v7 = result;
    swift_bridgeObjectRelease();
    id v8 = [v7 meCard];

    unint64_t v9 = sub_10021F208(v8, 0, 0);
LABEL_12:
    unint64_t v5 = v9;

    return (id)v5;
  }
  __break(1u);
  return result;
}

id sub_100223250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v4);
  NSString v6 = (void *)((char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a2) {
    return (id)0xF000000000000007;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  if (!v7) {
    return (id)0xF000000000000007;
  }
  uint64_t v8 = 0;
  while (*(unsigned char *)(a2 + v8 + 32) != 2)
  {
    if (v7 == ++v8) {
      return (id)0xF000000000000007;
    }
  }
  id v11 = objc_allocWithZone((Class)MapsUIImageSuggestionSpec);
  swift_bridgeObjectRetain();
  id result = [v11 initWithSuggestion:a1];
  if (result)
  {
    id v12 = result;
    uint64_t v13 = sub_1000FF33C(&qword_1015D0F40);
    uint64_t v14 = swift_allocBox();
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = v16 + *(int *)(v13 + 96);
    uint64_t v18 = *(int *)(v13 + 112);
    *(void *)uint64_t v16 = v12;
    *(void *)(v16 + 8) = 0;
    *(void *)(v16 + 24) = 0;
    *(unsigned char *)(v16 + 16) = 0;
    uint64_t v19 = enum case for Image.TemplateRenderingMode.original(_:);
    uint64_t v20 = type metadata accessor for Image.TemplateRenderingMode();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v17, v19, v20);
    *(void *)(v16 + v18) = static Color.clear.getter();
    *NSString v6 = v14;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for PlaceSummaryImageViewModel(0);
    uint64_t v9 = swift_allocObject();
    v22[1] = 0;
    sub_1000FF33C((uint64_t *)&unk_1015D23C8);
    Published.init(initialValue:)();
    UUID.init()();
    sub_100223DBC((uint64_t)v6, v9 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    uint64_t v21 = v9 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
    *(void *)uint64_t v21 = 0;
    *(unsigned char *)(v21 + 8) = 1;
    return (id)v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_100223490()
{
  uint64_t v0 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v9 = v22;
  uint64_t v20 = *(void *)(v22 + 16);
  if (v20)
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(int *)(v4 + 20);
    uint64_t v21 = v22 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v18 = v5;
    uint64_t v19 = v1;
    uint64_t v17 = v11;
    while (1)
    {
      if (v10 >= *(void *)(v9 + 16))
      {
        __break(1u);
        return result;
      }
      sub_100223B88(v21 + *(void *)(v5 + 72) * v10, (uint64_t)v7, type metadata accessor for PlaceSummaryViewModelLine);
      uint64_t v12 = *(void *)&v7[v11];
      swift_bridgeObjectRetain();
      sub_100223BF0((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelLine);
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
      if (++v10 == v20) {
        goto LABEL_11;
      }
    }
    uint64_t v14 = 0;
    uint64_t v15 = v12 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v16 = *(void *)(v1 + 72);
    while (1)
    {
      sub_100223B88(v15, (uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
      if (swift_getEnumCaseMultiPayload() == 1) {
        break;
      }
      ++v14;
      sub_100223BF0((uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
      v15 += v16;
      if (v13 == v14)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v5 = v18;
        uint64_t v1 = v19;
        uint64_t v11 = v17;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100223BF0((uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

uint64_t sub_1002237A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_100223808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, void *a13)
{
  unint64_t v13 = a12 >> 60;
  if (a12 >> 60 == 6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v13 == 2 || !v13)
  {
    swift_bridgeObjectRelease();
  }
}

void sub_1002238E0()
{
}

void sub_100223900()
{
}

uint64_t sub_100223928()
{
  return 8;
}

uint64_t sub_100223934()
{
  return swift_release();
}

uint64_t sub_10022393C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100223948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021AE24(a1, a2, a3, &qword_1015D5A18) & 1;
}

uint64_t sub_10022396C(uint64_t a1, uint64_t a2)
{
  return sub_100223B44(a1, a2, &qword_1015D5A18);
}

void *sub_100223978(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_100223984(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

void sub_100223994()
{
}

unint64_t sub_1002239B4()
{
  unint64_t result = qword_1015D59E8;
  if (!qword_1015D59E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D59E8);
  }
  return result;
}

void sub_100223A08()
{
}

uint64_t sub_100223A30()
{
  return 8;
}

uint64_t sub_100223A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021AE24(a1, a2, a3, &qword_1015D5A00) & 1;
}

uint64_t sub_100223A60(uint64_t a1, uint64_t a2)
{
  return sub_100223B44(a1, a2, &qword_1015D5A00);
}

void sub_100223A6C()
{
}

unint64_t sub_100223A8C()
{
  unint64_t result = qword_1015D59F0;
  if (!qword_1015D59F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D59F0);
  }
  return result;
}

void sub_100223AE0()
{
}

uint64_t sub_100223B08()
{
  return 8;
}

uint64_t sub_100223B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021AE24(a1, a2, a3, &qword_1015D59F8) & 1;
}

uint64_t sub_100223B38(uint64_t a1, uint64_t a2)
{
  return sub_100223B44(a1, a2, &qword_1015D59F8);
}

uint64_t sub_100223B44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t sub_100223B88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100223BF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100223C50(uint64_t a1)
{
  id v2 = *(id *)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100223CC8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_100223D3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100223D84()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100223DBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100223E44()
{
  uint64_t result = GEOConfigGetDouble();
  qword_101611600 = v1;
  return result;
}

uint64_t sub_100223E74()
{
  uint64_t result = GEOConfigGetInteger();
  qword_101611608 = result;
  return result;
}

uint64_t sub_100223EA4()
{
  uint64_t result = GEOConfigGetInteger();
  qword_101611610 = result;
  return result;
}

uint64_t sub_100223ED4()
{
  uint64_t result = GEOConfigGetUInteger();
  qword_101611618 = result;
  return result;
}

void sub_100223F04()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager____lazy_storage___msgRoutine;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager____lazy_storage___msgRoutine);
  if (v2) {
    goto LABEL_5;
  }
  id v3 = sub_100018584();
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 oneRoutine];

    if (v5)
    {
      uint64_t v6 = *(void **)(v0 + v1);
      *(void *)(v0 + v1) = v5;
      v5;

      id v2 = 0;
LABEL_5:
      id v7 = v2;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100224090()
{
  uint64_t v1 = (os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  id v2 = *v1 + 4;
  id v3 = *v1 + 6;
  os_unfair_lock_lock(v3);
  sub_1000A18E0(v2);
  os_unfair_lock_unlock(v3);
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_10022414C()
{
  uint64_t v1 = (os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__sortedShortcuts);
  swift_beginAccess();
  id v2 = *v1 + 4;
  id v3 = *v1 + 6;
  os_unfair_lock_lock(v3);
  sub_1000A18E0(v2);
  os_unfair_lock_unlock(v3);
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

Class sub_1002241F0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (os_unfair_lock_s **)&a1[*a3];
  swift_beginAccess();
  id v5 = *v4;
  uint64_t v6 = *v4 + 4;
  id v7 = a1;
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_1000A2B84(v6, &v10);
  os_unfair_lock_unlock(v5 + 6);

  swift_release();
  type metadata accessor for MapsFavoriteItem();
  v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v8.super.isa;
}

void sub_1002242E0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  type metadata accessor for MapsFavoriteItem();
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = a1;
  a4(v6);
}

uint64_t sub_100224360()
{
  uint64_t v1 = (os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__suggestions);
  swift_beginAccess();
  id v2 = *v1 + 4;
  id v3 = *v1 + 6;
  os_unfair_lock_lock(v3);
  sub_1000A18E0(v2);
  os_unfair_lock_unlock(v3);
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

unint64_t sub_1002244B8()
{
  return sub_1000A0EA8(&OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
}

uint64_t sub_1002244DC()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__sortedShortcuts);
  swift_beginAccess();
  unint64_t i = *v1;
  id v3 = (void *)(*v1 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(i + 24));
  uint64_t v4 = 0;
  sub_1000A2B84(v3, &v23);
  os_unfair_lock_unlock((os_unfair_lock_t)(i + 24));
  uint64_t v5 = (uint64_t)v23;
  swift_release();
  uint64_t v23 = _swiftEmptyArrayStorage;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v4 = v5;
    }
    else {
      uint64_t v4 = v5 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v5 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_17;
  }
LABEL_3:
  if (v6 < 1)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  for (unint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v5 + 8 * i + 32);
    }
    NSArray v8 = v7;
    if ([v7 type] == (id)6)
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t)v23;
LABEL_18:
  BOOL v9 = v5 < 0 || (v5 & 0x4000000000000000) != 0;
  if (!v9)
  {
    if (*(uint64_t *)(v5 + 16) >= 20) {
      uint64_t v10 = 20;
    }
    else {
      uint64_t v10 = *(void *)(v5 + 16);
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v4 >= 20) {
    uint64_t v21 = 20;
  }
  else {
    uint64_t v21 = v4;
  }
  if (v4 >= 0) {
    uint64_t v10 = v21;
  }
  else {
    uint64_t v10 = 20;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_release();
  if (v22 >= v10)
  {
LABEL_25:
    if ((v5 & 0xC000000000000001) != 0 && v10)
    {
      type metadata accessor for MapsFavoriteItem();
      Swift::Int v11 = 0;
      do
      {
        Swift::Int v12 = v11 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v11);
        Swift::Int v11 = v12;
      }
      while (v10 != v12);
    }
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v6 = v14;
      uint64_t v4 = v15;
      unint64_t i = v16;
      swift_release_n();
      uint64_t v5 = v13;
      if (i)
      {
LABEL_34:
        type metadata accessor for __ContiguousArrayStorageBase();
        swift_unknownObjectRetain_n();
        uint64_t v18 = (void *)swift_dynamicCastClass();
        if (!v18)
        {
          swift_unknownObjectRelease();
          uint64_t v18 = _swiftEmptyArrayStorage;
        }
        uint64_t v19 = v18[2];
        swift_release();
        if (!__OFSUB__(i >> 1, v4))
        {
          if (v19 == (i >> 1) - v4)
          {
            uint64_t v17 = (void *)swift_dynamicCastClass();
            if (!v17)
            {
              swift_unknownObjectRelease();
              uint64_t v17 = _swiftEmptyArrayStorage;
            }
            goto LABEL_40;
          }
          goto LABEL_45;
        }
LABEL_44:
        __break(1u);
LABEL_45:
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = v5 + 32;
      unint64_t i = (2 * v10) | 1;
      if (i) {
        goto LABEL_34;
      }
    }
    uint64_t v17 = sub_10034EC78(v5, v6, v4, i);
LABEL_40:
    swift_unknownObjectRelease();
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002248B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000F2248(v5, (uint64_t)qword_1016115E0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    NSArray v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSArray v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "ViewMode changed", v8, 2u);
    swift_slowDealloc();
  }

  BOOL v9 = (os_unfair_lock_s **)&v1[OBJC_IVAR____TtC4Maps20MapsFavoritesManager__hasInitialData];
  swift_beginAccess();
  uint64_t v10 = *v9;
  Swift::Int v11 = *v9 + 4;
  swift_retain();
  os_unfair_lock_lock(v10 + 5);
  sub_1000F3E3C(v11, &v17);
  os_unfair_lock_unlock(v10 + 5);
  LODWORD(v11) = v17;
  uint64_t result = swift_release();
  if (v11 == 1)
  {
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = 0;
    void v14[3] = 0;
    void v14[4] = v1;
    uint64_t v15 = v1;
    sub_100042AF4((uint64_t)v4, (uint64_t)&unk_1015D5EC0, (uint64_t)v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_100224AD8(uint64_t a1, uint64_t a2)
{
  return sub_10022ED38(a2);
}

uint64_t sub_100224AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 32) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10010E94C;
  return sub_10010E8B8();
}

uint64_t sub_100224B74()
{
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016115E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error loading shortcuts %@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100224D78(uint64_t a1)
{
  v2[38] = a1;
  v2[39] = v1;
  uint64_t v3 = type metadata accessor for Date();
  v2[40] = v3;
  v2[41] = *(void *)(v3 - 8);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  return _swift_task_switch(sub_100224E48, 0, 0);
}

uint64_t sub_100224E48()
{
  uint64_t v46 = v0;
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__needsSuggestions;
  *(void *)(v0 + 352) = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__needsSuggestions;
  uint64_t v3 = (os_unfair_lock_s **)(v1 + v2);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = *v3 + 4;
  swift_retain();
  os_unfair_lock_lock(v4 + 5);
  sub_1000F3E3C(v5, v45);
  os_unfair_lock_unlock(v4 + 5);
  char v6 = v45[0];
  swift_release();
  if (v6)
  {
    *(void *)(v0 + 248) = _swiftEmptyArrayStorage;
    id v7 = sub_100227EBC();
    if (v7)
    {
      id v8 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v0 + 248) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 248) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    Date.init()();
    if (qword_1015CBC88 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void *)(v0 + 336);
    uint64_t v10 = *(void *)(v0 + 320);
    uint64_t v11 = *(void *)(v0 + 328);
    Date.addingTimeInterval(_:)();
    Swift::Int v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    *(void *)(v0 + 360) = v12;
    *(void *)(v0 + 368) = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v12(v9, v10);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10022551C;
    uint64_t v14 = *(void *)(v0 + 312);
    v13[9] = 0;
    v13[10] = v14;
    v13[7] = 0;
    v13[8] = sub_1002261E0;
    v13[6] = sub_100226170;
    uint64_t v15 = (uint64_t)sub_1002281C4;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    return _swift_task_switch(v15, v16, v17);
  }
  uint64_t v18 = (os_unfair_lock_s **)(*(void *)(v0 + 312) + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__suggestions);
  if (*(void *)(v0 + 304))
  {
    swift_beginAccess();
    uint64_t v19 = *v18;
    uint64_t v20 = *v18 + 4;
    swift_retain();
    os_unfair_lock_lock(v19 + 6);
    sub_1000A2B84(v20, v45);
    os_unfair_lock_unlock(v19 + 6);
    unint64_t v21 = v45[0];
    uint64_t v15 = swift_release();
    v45[0] = (uint64_t)_swiftEmptyArrayStorage;
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v15 = swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22)
      {
LABEL_14:
        if (v22 < 1)
        {
          __break(1u);
          return _swift_task_switch(v15, v16, v17);
        }
        for (uint64_t i = 0; i != v22; ++i)
        {
          if ((v21 & 0xC000000000000001) != 0) {
            id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v24 = *(id *)(v21 + 8 * i + 32);
          }
          uint64_t v25 = v24;
          id v26 = *(id *)(v0 + 304);
          if ([v24 type] == v26)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  swift_beginAccess();
  uint64_t v27 = *v18;
  int v28 = *v18 + 4;
  swift_retain();
  os_unfair_lock_lock(v27 + 6);
  sub_1000A2B84(v28, v45);
  os_unfair_lock_unlock(v27 + 6);
  swift_release();
LABEL_27:
  id v29 = *(id *)(v0 + 312);
  unint64_t v30 = swift_bridgeObjectRetain();
  sub_10022E8F4(v30, (unint64_t)v29);
  uint64_t v32 = v31;

  swift_bridgeObjectRelease_n();
  *(void *)(v0 + 288) = v32;
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  id v33 = (void *)(v0 + 288);
  uint64_t v34 = type metadata accessor for Logger();
  sub_1000F2248(v34, (uint64_t)qword_1016115E0);
  int v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    v45[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 134218242;
    swift_beginAccess();
    if (*v33 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = *(void *)((*v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v0 + 272) = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2080;
    type metadata accessor for MapsFavoriteItem();
    swift_bridgeObjectRetain();
    uint64_t v39 = Array.description.getter();
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 256) = sub_1000F2280(v39, v41, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Returning %ld suggested LOIs: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t v42 = *(void *)(v0 + 288);
  swift_task_dealloc();
  swift_task_dealloc();
  id v43 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v43(v42);
}

uint64_t sub_10022551C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 384) = a1;
  *(void *)(v4 + 392) = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3 + 360))(*(void *)(v3 + 344), *(void *)(v3 + 320));
  if (v1) {
    uint64_t v5 = sub_1002260F8;
  }
  else {
    uint64_t v5 = sub_100225694;
  }
  return _swift_task_switch(v5, 0, 0);
}

void sub_100225694()
{
  uint64_t v66 = v0;
  unint64_t v2 = v0[48];
  v65[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v64 = v0;
  if (v3)
  {
    if (v3 < 1)
    {
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v4 = 0;
    unint64_t v5 = v2 & 0xC000000000000001;
    uint64_t v62 = v0[48] + 32;
    id v63 = (objc_super *)(v0 + 29);
    do
    {
      if (v5) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v62 + 8 * v4);
      }
      uint64_t v7 = v6;
      id v8 = (objc_class *)type metadata accessor for MapsFavoriteItem();
      uint64_t v9 = objc_allocWithZone(v8);
      uint64_t v10 = &v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
      *uint64_t v10 = 0;
      v10[1] = 0;
      v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
      uint64_t v11 = &v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
      *uint64_t v11 = 0x6966654472657355;
      v11[1] = 0xEB0000000064656ELL;
      *(void *)&v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
      v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
      v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
      v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
      uint64_t v12 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
      uint64_t v13 = qword_1015CBCC0;
      uint64_t v14 = v9;
      if (v13 != -1) {
        swift_once();
      }
      v9[v12] = byte_101611638;
      *(void *)&v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
      *(void *)&v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = v7;
      id v15 = v7;

      uint64_t v0 = v64;
      v64[29] = v14;
      v64[30] = v8;
      uint64_t v16 = [(objc_super *)v63 init];

      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v65[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v4;
    }
    while (v3 != v4);
    uint64_t v17 = (void *)v65[0];
  }
  else
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = v0 + 33;
  uint64_t v19 = v0 + 31;
  swift_bridgeObjectRelease_n();
  sub_1000A18A4((unint64_t)v17);
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  id v61 = v0 + 36;
  uint64_t v20 = type metadata accessor for Logger();
  sub_1000F2248(v20, (uint64_t)qword_1016115E0);
  unint64_t v2 = Logger.logObject.getter();
  LOBYTE(v3) = static os_log_type_t.default.getter();
  uint64_t v60 = v20;
  if (os_log_type_enabled((os_log_t)v2, (os_log_type_t)v3))
  {
    uint64_t v58 = v0 + 26;
    id v59 = v0 + 33;
    uint64_t v1 = swift_slowAlloc();
    v65[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v1 = 134218242;
    swift_beginAccess();
    if (!(*v19 >> 62))
    {
      uint64_t v21 = *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_23:
      uint64_t v0 = v64;
      v64[37] = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v1 + 12) = 2080;
      type metadata accessor for MapsFavoriteItem();
      swift_bridgeObjectRetain();
      uint64_t v22 = Array.description.getter();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      v64[35] = sub_1000F2280(v22, v24, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v2, (os_log_type_t)v3, "Fetched %ld suggested items: %s", (uint8_t *)v1, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v18 = v59;
      goto LABEL_25;
    }
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }

LABEL_25:
  uint64_t v25 = v0[49];
  uint64_t v26 = v0[39];
  swift_beginAccess();
  uint64_t v27 = v0[31];
  int v28 = (os_unfair_lock_s **)(v26 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__suggestions);
  swift_beginAccess();
  v0[33] = v27;
  id v29 = *v28;
  *(void *)(swift_task_alloc() + 16) = v18;
  unint64_t v30 = v29 + 4;
  v29 += 6;
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v29);
  sub_1000A18E0(v30);
  os_unfair_lock_unlock(v29);
  if (v25) {
    return;
  }
  uint64_t v31 = (os_unfair_lock_s **)(v0[39] + v0[44]);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  *((unsigned char *)v0 + 400) = 0;
  uint64_t v32 = *v31;
  *(void *)(swift_task_alloc() + 16) = v0 + 50;
  id v33 = v32 + 4;
  v32 += 5;
  os_unfair_lock_lock(v32);
  sub_10023165C(v33);
  os_unfair_lock_unlock(v32);
  swift_task_dealloc();
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v34 = (os_unfair_lock_s **)(v0[39] + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__suggestions);
  if (v0[38])
  {
    swift_beginAccess();
    int v35 = *v34;
    os_log_type_t v36 = *v34 + 4;
    swift_retain();
    os_unfair_lock_lock(v35 + 6);
    sub_1000A2B84(v36, v65);
    os_unfair_lock_unlock(v35 + 6);
    unint64_t v37 = v65[0];
    swift_release();
    v65[0] = (uint64_t)_swiftEmptyArrayStorage;
    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v38) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v38)
      {
LABEL_31:
        if (v38 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v38; ++i)
        {
          if ((v37 & 0xC000000000000001) != 0) {
            id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v40 = *(id *)(v37 + 8 * i + 32);
          }
          unint64_t v41 = v40;
          id v42 = (id)v64[38];
          if (objc_msgSend(v40, "type", v58, v59, v60) == v42)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v0 = v64;
        goto LABEL_47;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    id v43 = *v34;
    unint64_t v44 = *v34 + 4;
    swift_retain();
    os_unfair_lock_lock(v43 + 6);
    sub_1000A2B84(v44, v65);
    os_unfair_lock_unlock(v43 + 6);
    swift_release();
  }
LABEL_47:
  id v45 = (id)v0[39];
  unint64_t v46 = swift_bridgeObjectRetain();
  sub_10022E8F4(v46, (unint64_t)v45);
  uint64_t v48 = v47;

  swift_bridgeObjectRelease_n();
  v0[36] = v48;
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  sub_1000F2248(v60, (uint64_t)qword_1016115E0);
  unint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    v65[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 134218242;
    swift_beginAccess();
    if (*v61 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v52 = *(void *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v0[34] = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v51 + 12) = 2080;
    type metadata accessor for MapsFavoriteItem();
    swift_bridgeObjectRetain();
    uint64_t v53 = Array.description.getter();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    v0[32] = sub_1000F2280(v53, v55, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Returning %ld suggested LOIs: %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v0 = v64;
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t v56 = v0[36];
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v57 = (void (*)(uint64_t))v0[1];
  v57(v56);
}

uint64_t sub_1002260F8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL sub_100226170(void *a1)
{
  id v1 = [a1 visitCount];
  if (qword_1015CBC90 != -1) {
    swift_once();
  }
  return qword_101611608 < 1 || (unint64_t)v1 >= qword_101611608;
}

BOOL sub_1002261E0(void *a1)
{
  id v2 = [a1 visitCount];
  if (qword_1015CBC98 != -1) {
    swift_once();
  }
  BOOL v3 = qword_101611610 < 1 || (unint64_t)v2 >= qword_101611610;
  return v3
      && [a1 type] != (id)2
      && [a1 type] != (id)3
      && [a1 type] != (id)5;
}

uint64_t sub_100226414(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  id v6 = (void *)swift_task_alloc();
  v3[4] = v6;
  *id v6 = v3;
  v6[1] = sub_1002264D0;
  return sub_100224D78(a1);
}

uint64_t sub_1002264D0()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  if (v2)
  {
    uint64_t v6 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    Class isa = 0;
    uint64_t v8 = (void *)v6;
  }
  else
  {
    type metadata accessor for MapsFavoriteItem();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v8 = isa;
  }
  uint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  ((void (**)(void, Class, uint64_t))v9)[2](v9, isa, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

void (**sub_100226660(void *a1))(void, void, void, void)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void (***)(void, void, void, void))(v3 - 8);
  __chkstk_darwin(v3);
  os_log_type_t v50 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000FF33C(&qword_1015D5DD8);
  __chkstk_darwin(v59);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v55 = (uint64_t)&v48 - v12;
  *(void *)&double v14 = __chkstk_darwin(v13).n128_u64[0];
  uint64_t v60 = (uint64_t)&v48 - v15;
  id v52 = a1;
  id v16 = [a1 _geoMapItem:v14];
  if (!v16) {
    return 0;
  }
  id v17 = v16;
  id v18 = [(id)swift_unknownObjectRetain() _clientAttributes];
  uint64_t v61 = v3;
  if (v18
    && (uint64_t v19 = v18,
        id v20 = [v18 mapsSyncAttributes],
        v19,
        v20)
    && (id v21 = [v20 mapsSyncIdentifier], v20, v21))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4[7](v60, 1, 1, v3);
    swift_unknownObjectRelease();
  }
  uint64_t v22 = (os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  unint64_t v23 = *v22;
  unint64_t v24 = *v22 + 4;
  swift_retain();
  os_unfair_lock_lock(v23 + 6);
  sub_1000A2B84(v24, &v62);
  os_unfair_lock_unlock(v23 + 6);
  unint64_t v25 = v62;
  swift_release();
  unint64_t v54 = v10;
  id v48 = v17;
  if (v25 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v27 = v55;
    if (v26) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v27 = v55;
    if (v26)
    {
LABEL_9:
      unint64_t v58 = v25 & 0xC000000000000001;
      int v28 = (unsigned int (**)(char *, uint64_t, unint64_t))(v4 + 6);
      unint64_t v49 = (void (**)(char *, uint64_t, uint64_t))(v4 + 4);
      uint64_t v53 = (void (**)(uint64_t, unint64_t))(v4 + 1);
      uint64_t v29 = 4;
      uint64_t v56 = v26;
      unint64_t v57 = v25;
      while (1)
      {
        if (v58) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v25 + 8 * v29);
        }
        uint64_t v4 = (void (**)(void, void, void, void))v32;
        uint64_t v33 = v29 - 3;
        unint64_t v25 = v61;
        if (__OFADD__(v29 - 4, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        dispatch thunk of MapsSyncObject.identifier.getter();
        uint64_t v34 = (uint64_t)&v7[*(int *)(v59 + 48)];
        sub_1001CD278(v27, (uint64_t)v7);
        sub_1001CD278(v60, v34);
        int v35 = *v28;
        if ((*v28)(v7, 1, v25) == 1) {
          break;
        }
        uint64_t v36 = (uint64_t)v54;
        sub_1001CD278((uint64_t)v7, (uint64_t)v54);
        if (v35((char *)v34, 1, v25) == 1)
        {
          uint64_t v37 = v55;
          sub_1000FF2E0(v55, (uint64_t *)&unk_1015D5DE0);
          uint64_t v38 = v36;
          uint64_t v27 = v37;
          (*v53)(v38, v25);
LABEL_22:
          sub_1000FF2E0((uint64_t)v7, &qword_1015D5DD8);
          goto LABEL_24;
        }
        uint64_t v39 = v50;
        (*v49)(v50, v34, v61);
        sub_10007FF4C(&qword_1015DC450, (void (*)(uint64_t))&type metadata accessor for UUID);
        int v51 = dispatch thunk of static Equatable.== infix(_:_:)();
        id v40 = *v53;
        (*v53)((uint64_t)v39, v61);
        uint64_t v41 = v55;
        sub_1000FF2E0(v55, (uint64_t *)&unk_1015D5DE0);
        uint64_t v42 = v36;
        uint64_t v27 = v41;
        v40(v42, v61);
        sub_1000FF2E0((uint64_t)v7, (uint64_t *)&unk_1015D5DE0);
        if (v51) {
          goto LABEL_30;
        }
LABEL_24:
        id v43 = [v4 mapItemStorage:v48];
        if (v43)
        {
          unint64_t v44 = v43;
          id v31 = [v43 _identifier];

          if (v31)
          {
            id v45 = [v52 _geoMapItem];
            if (!v45
              || (id v46 = [v45 _identifier],
                  swift_unknownObjectRelease(),
                  !v46))
            {

              goto LABEL_12;
            }
            unsigned int v30 = [v31 isEqualToGEOMapItemIdentifier:v46];

            if (v30) {
              goto LABEL_30;
            }
          }
        }
        id v31 = v4;
LABEL_12:

        ++v29;
        unint64_t v25 = v57;
        if (v33 == v56) {
          goto LABEL_33;
        }
      }
      sub_1000FF2E0(v27, (uint64_t *)&unk_1015D5DE0);
      if (v35((char *)v34, 1, v25) == 1)
      {
        sub_1000FF2E0((uint64_t)v7, (uint64_t *)&unk_1015D5DE0);
LABEL_30:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_34;
      }
      goto LABEL_22;
    }
  }
LABEL_33:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = 0;
LABEL_34:
  sub_1000FF2E0(v60, (uint64_t *)&unk_1015D5DE0);
  return v4;
}

uint64_t sub_100226EF0(char a1, void *aBlock)
{
  *(void *)(v2 + 16) = _Block_copy(aBlock);
  uint64_t v6 = (uint64_t (*)(char))((char *)&dword_1015D5E60 + dword_1015D5E60);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100226FA4;
  return v6(a1);
}

uint64_t sub_100226FA4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v5 + 16);
  if (v3)
  {
    uint64_t v9 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    (*(void (**)(uint64_t))(v8 + 16))(v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, void))(v8 + 16))(v8, a1, 0);
  }
  _Block_release(*(const void **)(v6 + 16));
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_100227118()
{
  uint64_t v2 = (void *)v0[29];
  uint64_t v1 = (void *)v0[30];
  uint64_t v4 = (void *)v0[27];
  uint64_t v3 = (void *)v0[28];

  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100227314(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100231634;
  return sub_10010E8B8();
}

BOOL sub_1002273BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
  uint64_t v5 = (void *)dispatch thunk of FavoriteItem.longitude.getter();
  uint64_t v6 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
  uint64_t v7 = dispatch thunk of FavoriteItem.longitude.getter();
  uint64_t v8 = (void *)v7;
  if (!v4)
  {

LABEL_8:
    return 0;
  }
  if (!v5)
  {

    goto LABEL_8;
  }
  if (v6)
  {
    if (v7)
    {
      id v9 = v4;
      id v10 = v5;
      id v11 = v6;
      id v12 = v8;
      [v9 doubleValue];
      double v14 = v13;
      [v10 doubleValue];
      id v16 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v14 longitude:v15];
      [v16 distanceFromLocation:a3];
      double v18 = v17;

      [v11 doubleValue];
      double v20 = v19;
      [v12 doubleValue];
      id v22 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v20 longitude:v21];
      [v22 distanceFromLocation:a3];
      double v24 = v23;

      return v18 < v24;
    }
  }
  else
  {
  }
  return 1;
}

uint64_t sub_1002275A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 144) = a4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 152) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10000E4C4;
  return sub_1000246A8();
}

uint64_t sub_100227634()
{
  double v17 = v0;
  v0[22] = 0;
  uint64_t v1 = v0[18];
  sub_1000A0FB8(0);
  uint64_t v2 = (os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 4;
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_1000A2B84(v4, &v16);
  os_unfair_lock_unlock(v3 + 6);
  unint64_t v5 = v16;
  v0[23] = v16;
  uint64_t v6 = swift_release();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = swift_bridgeObjectRelease();
    v0[24] = v7;
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[24] = v7;
    if (v7)
    {
LABEL_3:
      uint64_t v8 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager_mapViewMode;
      v0[25] = OBJC_IVAR____TtC4Maps20MapsFavoritesManager_mapViewMode;
      if (v7 < 1)
      {
        __break(1u);
      }
      else
      {
        v0[26] = 0;
        uint64_t v9 = v0[23];
        if ((v9 & 0xC000000000000001) != 0)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v0[25];
        }
        else
        {
          id v10 = *(id *)(v9 + 32);
        }
        v0[27] = v10;
        uint64_t v11 = v0[22];
        uint64_t v12 = *(void *)(v0[18] + v8);
        v0[2] = v0;
        v0[3] = sub_100105AA4;
        uint64_t v13 = swift_continuation_init();
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 0x40000000;
        v0[12] = sub_1000336CC;
        v0[13] = &unk_1012DE4D0;
        v0[14] = v13;
        [v10 updateSubtitleWithViewMode:v12 currentLocation:v11 completionHandler:v0 + 10];
        uint64_t v6 = (uint64_t)(v0 + 2);
      }
      return _swift_continuation_await(v6);
    }
  }
  swift_bridgeObjectRelease();
  double v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1002278BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager_observers);
  uint64_t result = (uint64_t)[v3 unregisterObserver:a1];
  uint64_t v5 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager_isETATimerRunning;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager_isETATimerRunning) == 1)
  {
    uint64_t result = (uint64_t)[v3 hasObservers];
    if ((result & 1) == 0)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      OS_dispatch_source.suspend()();
      uint64_t result = swift_unknownObjectRelease();
      *(unsigned char *)(v2 + v5) = 0;
    }
  }
  return result;
}

uint64_t sub_100227978(id *a1, void *a2)
{
  id v3 = *a1;
  id v4 = [*a1 identifier];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = [a2 identifier];
  if (!v9)
  {
    if (v8) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
  id v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (!v8)
  {
    if (v13)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
LABEL_28:
    if (qword_1015CBC78 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_1000F2248(v29, (uint64_t)qword_1016115E0);
    uint64_t v17 = (uint64_t)v3;
    unsigned int v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)id v32 = 136315138;
      id v33 = [(id)v17 debugDescription];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v36 = v35;

      sub_1000F2280(v34, v36, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Removing existing LOI from suggestions: %s", v32, 0xCu);
      uint64_t v17 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return v17;
    }

LABEL_33:
    return 1;
  }
  if (!v13) {
    goto LABEL_16;
  }
  if (v6 == v11 && v8 == v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_28;
  }
LABEL_17:
  id v16 = [v3 geoMapItem];
  if (!v16) {
    return 0;
  }
  uint64_t v17 = (uint64_t)[v16 _identifier];
  swift_unknownObjectRelease();
  if (!v17) {
    return v17;
  }
  id v18 = [a2 geoMapItem];
  if (!v18
    || (id v19 = [v18 _identifier], swift_unknownObjectRelease(), !v19))
  {

    return 0;
  }
  if (([(id)v17 isEqualToGEOMapItemIdentifier:v19] & 1) == 0)
  {

    return 0;
  }
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_1000F2248(v20, (uint64_t)qword_1016115E0);
  id v21 = v3;
  id v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v22, v23))
  {

    goto LABEL_33;
  }
  os_log_type_t type = v23;
  double v24 = (uint8_t *)swift_slowAlloc();
  uint64_t v39 = swift_slowAlloc();
  *(_DWORD *)double v24 = 136315138;
  id v25 = [v21 debugDescription];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v28 = v27;

  sub_1000F2280(v26, v28, &v39);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v22, type, "Removing existing LOI from suggestions: %s", v24, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  return 1;
}

id sub_100227EBC()
{
  uint64_t v1 = (os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = *v1 + 4;
  swift_retain();
  os_unfair_lock_lock(v2 + 6);
  sub_1000A2B84(v3, &v21);
  os_unfair_lock_unlock(v2 + 6);
  unint64_t v4 = v21;
  swift_release();
  if (v4 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (v4 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v4 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      if ([v7 type] == (id)6)
      {
        id v10 = [v8 identifier];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v14 = v13;

          if (v12 == 0x725479627261654ELL && v14 == 0xED00007469736E61)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v16)
          {
            swift_bridgeObjectRelease_n();
LABEL_18:

            return 0;
          }
        }
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease_n();
  id v17 = [objc_allocWithZone((Class)type metadata accessor for MapsFavoriteItem()) init];
  [v17 setType:6];
  NSString v18 = String._bridgeToObjectiveC()();
  [v17 setCustomName:v18];

  NSString v19 = String._bridgeToObjectiveC()();
  [v17 setShortcutIdentifier:v19];

  return v17;
}

uint64_t sub_10022819C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[9] = a4;
  v5[10] = v4;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  return _swift_task_switch(sub_1002281C4, 0, 0);
}

uint64_t sub_1002281C4()
{
  v0[2] = _swiftEmptyArrayStorage;
  v0[3] = _swiftEmptyArrayStorage;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5E000;
  *(void *)(v1 + 32) = [objc_allocWithZone((Class)NSNumber) initWithInteger:2];
  *(void *)(v1 + 40) = [objc_allocWithZone((Class)NSNumber) initWithInteger:3];
  *(void *)(v1 + 48) = [objc_allocWithZone((Class)NSNumber) initWithInteger:5];
  specialized Array._endMutation()();
  v0[11] = v1;
  if (qword_1015CBCA0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = qword_101611618;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v5;
  v6[5] = v4;
  v6[6] = v3;
  id v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  uint64_t v8 = sub_1000FF33C(&qword_1015D5D40);
  v0[14] = v8;
  void *v7 = v0;
  v7[1] = sub_1002283B8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 4, 0, 0, 0xD000000000000031, 0x8000000100F7E570, sub_10022E718, v6, v8);
}

uint64_t sub_1002283B8()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1002286A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1002284D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002284D4()
{
  uint64_t v1 = sub_10024BC6C(*(void *)(v0 + 32));
  unint64_t v9 = qword_101611618;
  unint64_t v10 = *(void *)(v0 + 24);
  *(void *)(v0 + 128) = v10;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v1 = swift_bridgeObjectRelease();
    if ((v11 & 0x8000000000000000) != 0) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
  }
  else
  {
    unint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v12 = v9 >= v11;
  unint64_t v13 = v9 - v11;
  if (v12)
  {
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v16 = swift_task_alloc();
    *(void *)(v0 + 136) = v16;
    *(_OWORD *)(v16 + 16) = *(_OWORD *)(v0 + 80);
    *(void *)(v16 + 32) = v13;
    *(void *)(v16 + 40) = v15;
    *(void *)(v16 + 48) = v14;
    id v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v17;
    *id v17 = v0;
    v17[1] = sub_10022871C;
    uint64_t v8 = *(void *)(v0 + 112);
    unint64_t v5 = 0x8000000100F7E5B0;
    uint64_t v6 = sub_10022E730;
    uint64_t v1 = v0 + 40;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0xD000000000000039;
    uint64_t v7 = v16;
  }
  else
  {
    __break(1u);
  }
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1002286A0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022871C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100228D34;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100228838;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100228838()
{
  swift_bridgeObjectRelease();
  sub_10024BC6C(v0[5]);
  unint64_t v1 = v0[3];
  v0[20] = v1;
  if (v1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    v0[21] = v40;
    if (v40) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[21] = v2;
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      uint64_t v42 = v0 + 2;
      uint64_t v4 = &selRef_loadListEditAllActions;
      unint64_t v5 = &OBJC_METACLASS___RAPIncidentsQuestion;
      uint64_t v6 = qword_1016115E0;
      id v43 = v0;
      while (1)
      {
        unint64_t v9 = *(void **)(v0[20] + 8 * v3 + 32);
        v0[22] = v9;
        v0[23] = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        id v10 = v9;
        id v11 = [v10 v4[419]];
        v0[24] = v11;
        if (v11) {
          break;
        }
        if (v5[79].info != (__objc2_class_ro *)-1) {
          swift_once();
        }
        uint64_t v12 = type metadata accessor for Logger();
        sub_1000F2248(v12, (uint64_t)v6);
        uint64_t v8 = v10;
        unint64_t v13 = Logger.logObject.getter();
        os_log_type_t v14 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = swift_slowAlloc();
          *(_DWORD *)uint64_t v15 = 67109376;
          id v16 = [v8 mapItemHandle];
          if (v16)
          {
            id v17 = v16;
            uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v19 = v4;
            uint64_t v20 = v6;
            unint64_t v21 = v5;
            unint64_t v23 = v22;

            unint64_t v24 = v23;
            unint64_t v5 = v21;
            uint64_t v6 = v20;
            uint64_t v4 = v19;
            uint64_t v0 = v43;
            sub_1001442DC(v18, v24);
            int v25 = 0;
          }
          else
          {
            int v25 = 1;
          }

          *(_DWORD *)(v15 + 4) = v25;
          *(_WORD *)(v15 + 8) = 1024;
          id v26 = [v8 v4[419]];

          *(_DWORD *)(v15 + 10) = v26 == 0;
          _os_log_impl((void *)&_mh_execute_header, v13, v14, "Something's wrong: mapItemHandle:%{BOOL}d, mapItem:%{BOOL}d", (uint8_t *)v15, 0xEu);
          swift_slowDealloc();
          uint64_t v7 = v13;
        }
        else
        {

          uint64_t v7 = v8;
          uint64_t v8 = v13;
        }

        uint64_t v3 = v0[23];
        if (v3 == v0[21])
        {
          swift_bridgeObjectRelease();
          id v33 = (void *)v0[2];
          goto LABEL_30;
        }
      }
      id v27 = v11;
      type metadata accessor for FavoriteItem();
      unint64_t v28 = (void *)MapsSyncObject.__allocating_init()();
      v0[25] = v28;
      id v29 = [self mapItemStorageForGEOMapItem:v27];
      dispatch thunk of FavoriteItem.mapItemStorage.setter();
      id v30 = [v10 identifierString];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      dispatch thunk of FavoriteItem.shortcutIdentifier.setter();
      id v31 = [v10 preferredName];
      if (v31)
      {
        id v32 = v31;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      uint64_t v34 = v42;
      dispatch thunk of FavoriteItem.customName.setter();
      uint64_t v35 = (uint64_t)[v10 type];
      if (v35 < -32768)
      {
        __break(1u);
      }
      else if (v35 < 0x8000)
      {
        dispatch thunk of FavoriteItem.type.setter();
        if ([v10 isLOIFromMeCard]) {
          uint64_t v36 = 1;
        }
        else {
          uint64_t v36 = 0xFFFFFFFFLL;
        }
        [v28 setSourceType:v36, v42];
        id v37 = v28;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_24;
        }
        goto LABEL_35;
      }
      __break(1u);
LABEL_35:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_24:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v38 = (void *)swift_task_alloc();
      v0[26] = v38;
      *uint64_t v38 = v0;
      v38[1] = sub_100228DB8;
      return sub_100229358((uint64_t)v10);
    }
  }
  swift_bridgeObjectRelease();
  id v33 = _swiftEmptyArrayStorage;
LABEL_30:
  uint64_t v41 = (uint64_t (*)(void *))v0[1];
  return v41(v33);
}

uint64_t sub_100228D34()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100228DB8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100228EB4, 0, 0);
}

uint64_t sub_100228EB4()
{
  uint64_t v2 = *(void **)(v1 + 192);
  uint64_t v3 = *(void **)(v1 + 176);

  uint64_t v4 = *(void *)(v1 + 184);
  if (v4 == *(void *)(v1 + 168))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v1 + 8);
    return v6(v5);
  }
  uint64_t v40 = (void *)(v1 + 16);
  uint64_t v8 = &selRef_loadListEditAllActions;
  unint64_t v9 = &OBJC_METACLASS___RAPIncidentsQuestion;
  id v10 = qword_1016115E0;
  uint64_t v41 = v1;
  while (1)
  {
    uint64_t v12 = *(void **)(*(void *)(v1 + 160) + 8 * v4 + 32);
    *(void *)(v1 + 176) = v12;
    *(void *)(v1 + 184) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v0 = v12;
    id v13 = [v0 v8[419]];
    *(void *)(v1 + 192) = v13;
    if (v13) {
      break;
    }
    if (v9[79].info != (__objc2_class_ro *)-1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000F2248(v14, (uint64_t)v10);
    uint64_t v0 = v0;
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 67109376;
      id v18 = [v0 mapItemHandle];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v21 = v8;
        unint64_t v22 = v10;
        unint64_t v23 = v9;
        unint64_t v25 = v24;

        unint64_t v26 = v25;
        unint64_t v9 = v23;
        id v10 = v22;
        uint64_t v8 = v21;
        uint64_t v1 = v41;
        sub_1001442DC(v20, v26);
        int v27 = 0;
      }
      else
      {
        int v27 = 1;
      }

      *(_DWORD *)(v17 + 4) = v27;
      *(_WORD *)(v17 + 8) = 1024;
      id v28 = [v0 v8[419]];

      *(_DWORD *)(v17 + 10) = v28 == 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Something's wrong: mapItemHandle:%{BOOL}d, mapItem:%{BOOL}d", (uint8_t *)v17, 0xEu);
      swift_slowDealloc();
      id v11 = v15;
    }
    else
    {

      id v11 = v0;
      uint64_t v0 = v15;
    }

    uint64_t v4 = *(void *)(v1 + 184);
    if (v4 == *(void *)(v1 + 168)) {
      goto LABEL_2;
    }
  }
  id v29 = v13;
  type metadata accessor for FavoriteItem();
  id v30 = (void *)MapsSyncObject.__allocating_init()();
  *(void *)(v1 + 200) = v30;
  id v31 = [self mapItemStorageForGEOMapItem:v29];
  dispatch thunk of FavoriteItem.mapItemStorage.setter();
  id v32 = [v0 identifierString];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  dispatch thunk of FavoriteItem.shortcutIdentifier.setter();
  id v33 = [v0 preferredName];
  if (v33)
  {
    uint64_t v34 = v33;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v35 = v40;
  dispatch thunk of FavoriteItem.customName.setter();
  uint64_t v36 = (uint64_t)[v0 type];
  if (v36 < -32768) {
    goto LABEL_29;
  }
  if (v36 >= 0x8000)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_25;
  }
  dispatch thunk of FavoriteItem.type.setter();
  if ([v0 isLOIFromMeCard]) {
    uint64_t v37 = 1;
  }
  else {
    uint64_t v37 = 0xFFFFFFFFLL;
  }
  [v30 setSourceType:v37, v40];
  id v38 = v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_31;
  }
LABEL_25:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v39 = (void *)swift_task_alloc();
  *(void *)(v1 + 208) = v39;
  *uint64_t v39 = v1;
  v39[1] = sub_100228DB8;
  return sub_100229358((uint64_t)v0);
}

uint64_t sub_100229358(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[23] = v3;
  v2[24] = *(void *)(v3 - 8);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return _swift_task_switch(sub_100229428, 0, 0);
}

void sub_100229428()
{
  uint64_t v74 = v0;
  id v1 = [*(id *)(v0 + 168) addressIdentifier];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    uint64_t v7 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts;
    *(void *)(v0 + 216) = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts;
    uint64_t v8 = (uint64_t *)(v3 + v7);
    swift_beginAccess();
    unint64_t v9 = (void *)(*v8 + 16);
    id v10 = (os_unfair_lock_s *)(*v8 + 24);
    swift_retain();
    os_unfair_lock_lock(v10);
    sub_1000A2B84(v9, v73);
    os_unfair_lock_unlock(v10);
    unint64_t v11 = v73[0];
    swift_release();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_10022E760(v11, v4, v6);
    char v14 = v13;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    unint64_t v71 = v12;
    *(void *)(v0 + 224) = v12;
    if ((v14 & 1) == 0)
    {
      if (qword_1015CBC78 != -1) {
        swift_once();
      }
      uint64_t v15 = *(void *)(v0 + 208);
      uint64_t v16 = *(void *)(v0 + 184);
      uint64_t v17 = *(void *)(v0 + 192);
      uint64_t v19 = *(void **)(v0 + 168);
      id v18 = *(void **)(v0 + 176);
      uint64_t v20 = sub_1000F2248(v16, (uint64_t)qword_1016115E0);
      *(void *)(v0 + 232) = v20;
      unint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
      *(void *)(v0 + 240) = v21;
      *(void *)(v0 + 248) = (v17 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v21(v15, v20, v16);
      id v22 = v18;
      id v23 = v19;
      id v24 = v22;
      id v25 = v23;
      unint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.default.getter();
      os_log_t log = v26;
      if (!os_log_type_enabled(v26, v27))
      {
        uint64_t v32 = *(void *)(v0 + 208);
        uint64_t v33 = *(void *)(v0 + 184);
        uint64_t v34 = *(void *)(v0 + 192);
        uint64_t v35 = *(void **)(v0 + 168);
        uint64_t v36 = *(void **)(v0 + 176);

        uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v37(v32, v33);
        goto LABEL_18;
      }
      os_log_type_t v69 = v27;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      id v29 = (void *)(*v8 + 16);
      id v30 = (os_unfair_lock_s *)(*v8 + 24);
      swift_retain();
      os_unfair_lock_lock(v30);
      sub_1000A2B84(v29, v73);
      os_unfair_lock_unlock(v30);
      uint64_t v38 = v73[0];
      swift_release();
      if ((v38 & 0xC000000000000001) != 0) {
        goto LABEL_34;
      }
      if (v12 >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
      }
      else
      {
        for (id i = *(id *)(v38 + 8 * v12 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
        {
          uint64_t v40 = i;
          swift_bridgeObjectRelease();
          id v41 = [v40 identifier];

          if (v41)
          {
            uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v44 = v43;

            uint64_t v45 = v42;
          }
          else
          {
            uint64_t v45 = 0;
            unint64_t v44 = 0xE000000000000000;
          }
          uint64_t v46 = *(void *)(v0 + 192);
          uint64_t v67 = *(void *)(v0 + 184);
          uint64_t v68 = *(void *)(v0 + 208);
          uint64_t v47 = *(void **)(v0 + 168);
          id v48 = *(void **)(v0 + 176);
          *(void *)(v0 + 152) = sub_1000F2280(v45, v44, &v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          *(_WORD *)(v28 + 12) = 2080;
          id v49 = [v47 identifierString];
          uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v52 = v51;

          *(void *)(v0 + 160) = sub_1000F2280(v50, v52, &v72);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, log, v69, "Remapping shortcut identifier <%s> to <%s>", (uint8_t *)v28, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
          v37(v68, v67);
LABEL_18:
          *(void *)(v0 + 256) = v37;
          uint64_t v28 = *v8;
          uint64_t v53 = (void *)(*v8 + 16);
          unint64_t v54 = (os_unfair_lock_s *)(*v8 + 24);
          swift_retain();
          os_unfair_lock_lock(v54);
          sub_1000A2B84(v53, v73);
          os_unfair_lock_unlock(v54);
          uint64_t v55 = v73[0];
          swift_release();
          if ((v55 & 0xC000000000000001) != 0) {
            break;
          }
          if ((v71 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v71 < *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v56 = *(id *)(v55 + 8 * v71 + 32);
            goto LABEL_22;
          }
          __break(1u);
LABEL_34:
          ;
        }
        id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
        unint64_t v57 = v56;
        unint64_t v58 = *(void **)(v0 + 168);
        swift_bridgeObjectRelease();
        NSString v59 = [v58 identifierString];
        if (!v59)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v59 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [v57 setIdentifier:v59];

        uint64_t v60 = (void *)(*v8 + 16);
        uint64_t v61 = (os_unfair_lock_s *)(*v8 + 24);
        swift_retain();
        os_unfair_lock_lock(v61);
        sub_1000A2B84(v60, v73);
        os_unfair_lock_unlock(v61);
        uint64_t v62 = v73[0];
        uint64_t v63 = swift_release();
        if ((v62 & 0xC000000000000001) == 0)
        {
          if ((v71 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v71 < *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v64 = *(id *)(v62 + 8 * v71 + 32);
            goto LABEL_28;
          }
          __break(1u);
_swift_continuation_await:
          _swift_continuation_await(v63);
          return;
        }
      }
      id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_28:
      id v65 = v64;
      *(void *)(v0 + 264) = v64;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 24) = sub_100229BA8;
      uint64_t v66 = swift_continuation_init();
      *(void *)(v0 + 80) = _NSConcreteStackBlock;
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_100341328;
      *(void *)(v0 + 104) = &unk_1012DE5B0;
      *(void *)(v0 + 112) = v66;
      [v65 saveWithCompletionHandler:v0 + 80];
      uint64_t v63 = v0 + 16;
      goto _swift_continuation_await;
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v31 = *(void (**)(void))(v0 + 8);
  v31();
}

uint64_t sub_100229BA8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 272) = v1;
  if (v1) {
    uint64_t v2 = sub_100229D28;
  }
  else {
    uint64_t v2 = sub_100229CB8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100229CB8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100229D28()
{
  unint64_t v26 = v0;
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[30];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[25];
  uint64_t v6 = (void *)v0[22];
  uint64_t v5 = v0[23];
  swift_willThrow();

  v2(v4, v3, v5);
  id v7 = v6;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[27];
    uint64_t v11 = v0[22];
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    char v13 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 138412290;
    uint64_t v14 = *(void *)(v11 + v10);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    sub_1000A2B84((void *)(v14 + 16), &v25);
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    uint64_t v16 = v25;
    swift_release();
    unint64_t result = v0[28];
    if ((v16 & 0xC000000000000001) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v18 = *(id *)(v16 + 8 * result + 32);
LABEL_8:
        id v19 = v18;
        uint64_t v20 = (void *)v0[22];
        swift_bridgeObjectRelease();
        v0[18] = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *char v13 = v19;

        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to save favorite %@", v12, 0xCu);
        sub_1000FF33C((uint64_t *)&unk_1015CF600);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        goto LABEL_9;
      }
      __break(1u);
      return result;
    }
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  uint64_t v15 = (void *)v0[22];

LABEL_9:
  unint64_t v21 = (void (*)(uint64_t, uint64_t))v0[32];
  uint64_t v22 = v0[25];
  uint64_t v23 = v0[23];
  swift_errorRelease();

  v21(v22, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  id v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

void sub_100229FD8(int a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (GeoServicesConfig_TransportTypePreference == a1
    && *((void *)&GeoServicesConfig_TransportTypePreference + 1) == a2)
  {
    if (qword_1015CBC78 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000F2248(v10, (uint64_t)qword_1016115E0);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      char v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Transport preference changed", v13, 2u);
      swift_slowDealloc();
    }

    uint64_t v14 = (os_unfair_lock_s **)&v3[OBJC_IVAR____TtC4Maps20MapsFavoritesManager__hasInitialData];
    swift_beginAccess();
    uint64_t v15 = *v14;
    uint64_t v16 = *v14 + 4;
    swift_retain();
    os_unfair_lock_lock(v15 + 5);
    sub_1000F3E3C(v16, &v21);
    os_unfair_lock_unlock(v15 + 5);
    LODWORD(v16) = v21;
    swift_release();
    if (v16 == 1)
    {
      uint64_t v17 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
      id v18 = (void *)swift_allocObject();
      v18[2] = 0;
      v18[3] = 0;
      void v18[4] = v3;
      id v19 = v3;
      sub_100042AF4((uint64_t)v8, (uint64_t)&unk_1015D5D98, (uint64_t)v18);
      swift_release();
    }
  }
}

uint64_t sub_10022A280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  return _swift_task_switch(sub_10022A2A0, 0, 0);
}

uint64_t sub_10022A2A0()
{
  uint64_t v1 = (os_unfair_lock_s **)(*(void *)(v0 + 48) + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__needsSuggestions);
  swift_beginAccess();
  *(unsigned char *)(v0 + 72) = 1;
  uint64_t v2 = *v1;
  *(void *)(swift_task_alloc() + 16) = v0 + 72;
  uint64_t v3 = v2 + 4;
  v2 += 5;
  os_unfair_lock_lock(v2);
  sub_10023165C(v3);
  os_unfair_lock_unlock(v2);
  swift_task_dealloc();
  swift_endAccess();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10022A3D8;
  return sub_10010E8B8();
}

uint64_t sub_10022A3D8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10022A54C;
  }
  else {
    uint64_t v2 = sub_10022A4EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022A4EC()
{
  sub_1000A2678();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022A54C()
{
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016115E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 40) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error loading shortcuts %@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

id sub_10022A7D4()
{
  return sub_10022A9D8(type metadata accessor for MapsFavoritesManager);
}

id sub_10022A9C0()
{
  return sub_10022A9D8(type metadata accessor for MapsFavoritesSuggestor);
}

id sub_10022A9D8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for MapsFavoritesSuggestor()
{
  return self;
}

uint64_t sub_10022AA34()
{
  *(void *)(v1 + 120) = v0;
  sub_1000FF33C((uint64_t *)&unk_1015D9410);
  *(void *)(v1 + 128) = swift_task_alloc();
  return _swift_task_switch(sub_10022AAC8, 0, 0);
}

uint64_t sub_10022AAC8()
{
  type metadata accessor for MapsSyncQueryPredicate();
  static MapsSyncQueryPredicate.withFormat(_:_:)();
  id v1 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  uint64_t v2 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v0[17] = v2;
  type metadata accessor for FavoriteItemRequest();
  v0[18] = FavoriteItemRequest.__allocating_init()();
  uint64_t v6 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.count(options:)
                                      + async function pointer to dispatch thunk of FavoriteItemRequest.count(options:));
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10022ABF4;
  return v6(v2);
}

uint64_t sub_10022ABF4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10022CE2C;
  }
  else
  {
    uint64_t v6 = *(void **)(v4 + 144);

    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_10022AD28;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10022AD28()
{
  if (*(uint64_t *)(v0 + 168) < 1)
  {
    id v8 = [objc_allocWithZone((Class)MapsSuggestionsMapsSyncShortcutStorage) init];
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = (objc_class *)type metadata accessor for MapsFavoritesSuggestor();
    *(void *)(v0 + 40) = objc_allocWithZone(v9);
    *(void *)(v0 + 48) = v9;
    id v10 = [super init];
    *(void *)(v0 + 184) = v10;
    id v11 = [objc_allocWithZone((Class)MapsSuggestionsRealContactsConnector) init];
    *(void *)(v0 + 192) = v11;
    id v12 = [objc_allocWithZone((Class)MapsSuggestionsRealNetworkRequester) initFromResourceDepot:0];
    *(void *)(v0 + 200) = v12;
    id v13 = [objc_allocWithZone((Class)MapsSuggestionsContacts) initWithConnector:v11 networkRequester:v12];
    *(void *)(v0 + 208) = v13;
    id v14 = [objc_allocWithZone((Class)MapsSuggestionsRealRoutineConnector) init];
    *(void *)(v0 + 216) = v14;
    id v15 = [objc_allocWithZone((Class)MapsSuggestionsRoutine) initWithRoutineConnector:v14 networkRequester:v12];
    *(void *)(v0 + 224) = v15;
    id v16 = [objc_allocWithZone((Class)MapsSuggestionsRealMapsSyncConnector) init];
    *(void *)(v0 + 232) = v16;
    id v17 = [objc_allocWithZone((Class)MapsSuggestionsMapsSync) initWithMapsSyncConnector:v16];
    *(void *)(v0 + 240) = v17;
    id v18 = [objc_allocWithZone((Class)MapsSuggestionsShortcutManager) initWithStorage:v8 suggestor:v10 contacts:v13 routine:v15 mapsSync:v17 usingMyPlaces:0];
    *(void *)(v0 + 248) = v18;
    uint64_t v19 = swift_task_alloc();
    *(void *)(v0 + 256) = v19;
    *(void *)(v19 + 16) = v18;
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v20;
    uint64_t v21 = sub_1000FF33C((uint64_t *)&unk_1015D5D30);
    void *v20 = v0;
    v20[1] = sub_10022B0C8;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 88, 0, 0, 0xD000000000000012, 0x8000000100F7E550, sub_10022E710, v19, v21);
  }
  else
  {
    if (qword_1015CBC78 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1000F2248(v1, (uint64_t)qword_1016115E0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(NSObject **)(v0 + 136);
    if (v4)
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "[Migration] skipping migration, existing favorites present", v6, 2u);
      swift_slowDealloc();
      uint64_t v7 = v2;
    }
    else
    {
      uint64_t v7 = *(NSObject **)(v0 + 136);
      uint64_t v5 = v2;
    }

    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_10022B0C8()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10022B588;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10022B1E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022B1E4()
{
  id v17 = v0;
  v0[35] = v0[11];
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[36] = sub_1000F2248(v1, (uint64_t)qword_1016115E0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_100100830(0, &qword_1015D5D58);
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[14] = sub_1000F2280(v5, v7, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[Migration] Shortcuts from MSg: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v0[7] = _swiftEmptyArrayStorage;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100F5E000;
  *(void *)(v8 + 32) = [objc_allocWithZone((Class)NSNumber) initWithInteger:2];
  *(void *)(v8 + 40) = [objc_allocWithZone((Class)NSNumber) initWithInteger:3];
  *(void *)(v8 + 48) = [objc_allocWithZone((Class)NSNumber) initWithInteger:5];
  uint64_t v16 = v8;
  specialized Array._endMutation()();
  uint64_t v9 = v16;
  v0[37] = v16;
  if (qword_1015CBCA0 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[15];
  uint64_t v11 = qword_101611618;
  id v12 = (void *)swift_task_alloc();
  v0[38] = v12;
  void v12[2] = v10;
  v12[3] = v9;
  v12[4] = v11;
  v12[5] = 0;
  v12[6] = 0;
  id v13 = (void *)swift_task_alloc();
  v0[39] = v13;
  uint64_t v14 = sub_1000FF33C(&qword_1015D5D40);
  v0[40] = v14;
  *id v13 = v0;
  v13[1] = sub_10022B664;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 8, 0, 0, 0xD000000000000031, 0x8000000100F7E570, sub_10022E718, v12, v14);
}

uint64_t sub_10022B588()
{
  uint64_t v1 = (void *)v0[31];
  os_log_type_t v3 = (void *)v0[29];
  uint64_t v2 = (void *)v0[30];
  uint64_t v5 = (void *)v0[27];
  uint64_t v4 = (void *)v0[28];
  unint64_t v7 = (void *)v0[25];
  unint64_t v6 = (void *)v0[26];
  uint64_t v9 = (void *)v0[23];
  uint64_t v8 = (void *)v0[24];
  id v12 = (void *)v0[22];
  id v13 = (void *)v0[17];
  swift_task_dealloc();

  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10022B664()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10022B94C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10022B780;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022B780()
{
  uint64_t v1 = sub_10024BC6C(v0[8]);
  unint64_t v9 = qword_101611618;
  unint64_t v10 = v0[7];
  v0[42] = v10;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v1 = swift_bridgeObjectRelease();
    if ((v11 & 0x8000000000000000) != 0) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
  }
  else
  {
    unint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v12 = v9 >= v11;
  unint64_t v13 = v9 - v11;
  if (v12)
  {
    uint64_t v14 = v0[37];
    uint64_t v15 = v0[15];
    uint64_t v16 = (void *)swift_task_alloc();
    v0[43] = v16;
    void v16[2] = v15;
    v16[3] = v14;
    v16[5] = 0;
    v16[6] = 0;
    v16[4] = v13;
    id v17 = (void *)swift_task_alloc();
    v0[44] = v17;
    *id v17 = v0;
    v17[1] = sub_10022BA58;
    uint64_t v8 = v0[40];
    unint64_t v5 = 0x8000000100F7E5B0;
    unint64_t v6 = sub_10022E730;
    uint64_t v1 = (uint64_t)(v0 + 9);
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0xD000000000000039;
    unint64_t v7 = v16;
  }
  else
  {
    __break(1u);
  }
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10022B94C()
{
  uint64_t v1 = (void *)v0[29];
  BOOL v12 = (void *)v0[30];
  unint64_t v13 = (void *)v0[31];
  uint64_t v2 = (void *)v0[27];
  uint64_t v3 = (void *)v0[25];
  unint64_t v10 = (void *)v0[26];
  unint64_t v11 = (void *)v0[28];
  unint64_t v5 = (void *)v0[23];
  unint64_t v4 = (void *)v0[24];
  unint64_t v6 = (void *)v0[22];
  unint64_t v7 = (void *)v0[17];
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10022BA58()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10022C774;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10022BB74;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022BB74()
{
  uint64_t v86 = v0;
  unint64_t v1 = v0[35];
  swift_bridgeObjectRelease();
  id v80 = (uint64_t *)(v0 + 7);
  sub_10024BC6C(v0[9]);
  v0[10] = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = v0 + 10;
  unint64_t v75 = v1;
  if (v1 >> 62) {
    goto LABEL_98;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (uint64_t i = swift_bridgeObjectRetain(); ; uint64_t i = v0[35])
  {
    NSString v76 = v2 + 3;
    unint64_t v5 = &selRef_titleLabelFontWithTraitCollection_;
    if (v3)
    {
      unint64_t v6 = 0;
      unint64_t v7 = v75 & 0xC000000000000001;
      uint64_t v82 = i + 32;
      NSString v77 = v0;
      uint64_t v78 = v3;
      unint64_t v79 = v2;
      while (1)
      {
        if (v7)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v6 >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_95;
          }
          id v10 = *(id *)(v82 + 8 * v6);
        }
        unint64_t v9 = v10;
        if (__OFADD__(v6++, 1))
        {
LABEL_92:
          __break(1u);
          goto LABEL_93;
        }
        unint64_t v12 = (unint64_t)[v10 v5[415]];
        if (v12 > 5 || ((1 << v12) & 0x2C) == 0) {
          goto LABEL_8;
        }
        if ([v9 isHidden]) {
          goto LABEL_8;
        }
        id v14 = [v9 geoMapItem];

        if (!v14) {
          goto LABEL_8;
        }
        type metadata accessor for FavoriteItem();
        uint64_t v15 = (void *)MapsSyncObject.__allocating_init()();
        uint64_t v16 = *v80;
        if ((unint64_t)*v80 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
        }
        unint64_t v81 = v6;
        uint64_t v83 = v9;
        if (!v17)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v2 = v79;
          unint64_t v5 = &selRef_titleLabelFontWithTraitCollection_;
          goto LABEL_45;
        }
        uint64_t v18 = 0;
        while (1)
        {
          if ((v16 & 0xC000000000000001) != 0) {
            id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v21 = *(id *)(v16 + 8 * v18 + 32);
          }
          uint64_t v22 = v21;
          uint64_t v23 = v18 + 1;
          if (__OFADD__(v18, 1))
          {
            __break(1u);
            goto LABEL_92;
          }
          if (![v21 isLOIFromMeCard]) {
            goto LABEL_27;
          }
          id v24 = [v22 mapItem];
          uint64_t v2 = [v24 _identifier];

          if (v2)
          {
            id v25 = [v22 mapItem];
            unint64_t v26 = [v25 _identifier];

            id v27 = [v83 geoMapItem];
            uint64_t v2 = [v27 _identifier];

            if (!v26)
            {
              if (!v2) {
                break;
              }
              goto LABEL_25;
            }
            if (!v2)
            {
              uint64_t v2 = v26;
LABEL_25:

              goto LABEL_26;
            }
            sub_100100830(0, (unint64_t *)&qword_1015D5D50);
            uint64_t v28 = v26;
            char v29 = static NSObject.== infix(_:_:)();

            if (v29) {
              break;
            }
          }
LABEL_26:
          id v19 = [v22 mapItem];
          uint64_t v0 = (unint64_t *)[v83 geoMapItem];
          char IsEqualToMapItemForPurpose = GEOMapItemIsEqualToMapItemForPurpose();

          if (IsEqualToMapItemForPurpose) {
            break;
          }
LABEL_27:

          ++v18;
          unint64_t v9 = v83;
          if (v23 == v17)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v0 = v77;
            uint64_t v2 = v79;
            unint64_t v5 = &selRef_titleLabelFontWithTraitCollection_;
            goto LABEL_45;
          }
        }
        uint64_t v0 = v77;
        swift_bridgeObjectRelease_n();
        id v30 = [v22 identifierString];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        dispatch thunk of FavoriteItem.shortcutIdentifier.setter();
        [v15 setSourceType:1];
        id v31 = v22;
        uint64_t v32 = Logger.logObject.getter();
        os_log_type_t v33 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v34 = (uint8_t *)swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          *(_DWORD *)uint64_t v34 = 136315138;
          id v35 = [v31 identifierString];
          uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v38 = v37;

          uint64_t v0 = v77;
          *NSString v76 = sub_1000F2280(v36, v38, &v85);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v32, v33, "[Migration] found matching loi: %s", v34, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v2 = v79;
        unint64_t v5 = &selRef_titleLabelFontWithTraitCollection_;
        unint64_t v9 = v83;
LABEL_45:
        id v39 = v15;
        id v40 = [v9 mapsSyncCreateTime];
        unint64_t v41 = v0[16];
        if (v40)
        {
          uint64_t v42 = v40;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v43 = type metadata accessor for Date();
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v41, 0, 1, v43);
        }
        else
        {
          uint64_t v44 = type metadata accessor for Date();
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v41, 1, 1, v44);
        }
        dispatch thunk of MapsSyncObject.createTime.setter();

        id v45 = [v9 geoMapItem];
        dispatch thunk of FavoriteItem.mapItemStorage.setter();
        uint64_t v46 = (uint64_t)[v9 v5[415]];
        if (v46 < -32768) {
          goto LABEL_96;
        }
        if (v46 >= 0x8000) {
          goto LABEL_97;
        }
        dispatch thunk of FavoriteItem.type.setter();
        dispatch thunk of FavoriteItem.version.setter();
        dispatch thunk of FavoriteItem.hidden.setter();
        id v47 = [v9 customName];
        if (v47)
        {
          id v48 = v47;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        uint64_t v3 = v78;
        dispatch thunk of FavoriteItem.customName.setter();
        id v49 = [v9 stringContacts];
        uint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v51 = *(void *)(v50 + 16);
        if (v51)
        {
          uint64_t v52 = v50 + 40;
          do
          {
            swift_bridgeObjectRetain();
            dispatch thunk of FavoriteItem.addContactHandle(_:)();
            swift_bridgeObjectRelease();
            v52 += 16;
            --v51;
          }
          while (v51);
        }
        swift_bridgeObjectRelease();
        id v8 = v39;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        unint64_t v7 = v75 & 0xC000000000000001;
        unint64_t v6 = v81;
        unint64_t v9 = v83;
LABEL_8:

        if (v6 == v3)
        {
          uint64_t v53 = 0;
          while (1)
          {
            id v54 = v7 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v82 + 8 * v53);
            uint64_t v55 = v54;
            uint64_t v56 = v53 + 1;
            if (__OFADD__(v53, 1)) {
              goto LABEL_94;
            }
            id v57 = [v54 v5[415]];

            if (v57 == (id)2)
            {
              uint64_t v58 = v0[35];
              goto LABEL_69;
            }
            ++v53;
            if (v56 == v3) {
              goto LABEL_64;
            }
          }
        }
      }
    }
LABEL_64:
    swift_bridgeObjectRelease();
    sub_10022D1B4(2);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (!v3) {
      break;
    }
    unint64_t v7 = v75 & 0xC000000000000001;
    uint64_t v58 = swift_bridgeObjectRetain();
LABEL_69:
    uint64_t v59 = 0;
    uint64_t v60 = v58 + 32;
    while (1)
    {
      id v61 = v7 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v60 + 8 * v59);
      uint64_t v62 = v61;
      uint64_t v63 = v59 + 1;
      if (__OFADD__(v59, 1)) {
        break;
      }
      unint64_t v64 = v7;
      id v65 = [v61 v5[415]];

      if (v65 == (id)3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_81;
      }
      ++v59;
      unint64_t v7 = v64;
      if (v63 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_77;
      }
    }
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_77:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10022D1B4(3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v0[10] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[10] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_81:
  unint64_t v66 = v0[10];
  swift_bridgeObjectRetain_n();
  uint64_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v67, v68))
  {
    os_log_type_t v69 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v69 = 134217984;
    if (v66 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v70 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v2[2] = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "[Migration] saving %ld migrated favorites", v69, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  type metadata accessor for MapsSyncStore();
  v0[46] = static MapsSyncStore.sharedStore.getter();
  swift_beginAccess();
  unint64_t v71 = v0[10];
  if (v71 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    uint64_t v72 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    uint64_t v72 = v71;
  }
  v0[47] = v72;
  swift_bridgeObjectRelease();
  uint64_t v84 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  id v73 = (void *)swift_task_alloc();
  v0[48] = (unint64_t)v73;
  *id v73 = v0;
  v73[1] = sub_10022C888;
  return v84(v72);
}

uint64_t sub_10022C774()
{
  unint64_t v1 = (void *)v0[29];
  unint64_t v12 = (void *)v0[30];
  unint64_t v13 = (void *)v0[31];
  uint64_t v2 = (void *)v0[27];
  uint64_t v3 = (void *)v0[25];
  id v10 = (void *)v0[26];
  unint64_t v11 = (void *)v0[28];
  uint64_t v4 = (void *)v0[24];
  unint64_t v9 = (void *)v0[23];
  unint64_t v5 = (void *)v0[22];
  unint64_t v6 = (void *)v0[17];
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  unint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10022C888()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void **)(v2 + 368);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v4 = sub_10022CEA0;
  }
  else
  {
    unint64_t v5 = *(void **)(v2 + 368);
    swift_bridgeObjectRelease();

    uint64_t v4 = sub_10022C9C8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10022C9C8()
{
  uint64_t v1 = v0[10];
  v0[50] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[51] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10022CA78;
  v2[9] = v1;
  return _swift_task_switch(sub_100230394, 0, 0);
}

uint64_t sub_10022CA78()
{
  *(void *)(*(void *)v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10022CD50;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10022CB94;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022CB94()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    unint64_t v26 = v1;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[Migration] migration complete", v3, 2u);
    swift_slowDealloc();
    uint64_t v4 = v0 + 31;
    unint64_t v5 = v0 + 30;
    unint64_t v6 = v0 + 29;
    uint64_t v7 = v0 + 28;
    id v8 = v0 + 27;
    unint64_t v9 = v0 + 26;
    id v10 = v0 + 25;
    unint64_t v11 = v0 + 24;
    unint64_t v12 = v0 + 23;
    id v25 = v0[17];
    unint64_t v13 = v0 + 22;
  }
  else
  {
    unint64_t v11 = v0 + 31;
    id v10 = v0 + 30;
    unint64_t v9 = v0 + 29;
    id v8 = v0 + 28;
    uint64_t v7 = v0 + 27;
    unint64_t v6 = v0 + 26;
    unint64_t v5 = v0 + 25;
    id v25 = v1;
    unint64_t v13 = v0 + 23;
    unint64_t v12 = v0 + 22;
    uint64_t v4 = v0 + 17;
    unint64_t v26 = v0[24];
  }
  uint64_t v14 = *v5;
  uint64_t v15 = *v7;
  uint64_t v16 = *v9;
  uint64_t v17 = *v12;
  uint64_t v18 = *v13;
  id v19 = *v6;
  uint64_t v20 = *v8;
  id v21 = *v10;
  uint64_t v22 = *v11;

  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_10022CD50()
{
  uint64_t v1 = *(void **)(v0 + 240);
  unint64_t v12 = *(void **)(v0 + 248);
  uint64_t v3 = *(void **)(v0 + 224);
  os_log_type_t v2 = *(void **)(v0 + 232);
  unint64_t v5 = *(void **)(v0 + 208);
  uint64_t v4 = *(void **)(v0 + 216);
  uint64_t v7 = *(void **)(v0 + 192);
  unint64_t v6 = *(void **)(v0 + 200);
  id v8 = *(void **)(v0 + 176);
  unint64_t v9 = *(void **)(v0 + 184);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  id v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10022CE2C()
{
  uint64_t v1 = (void *)v0[17];
  os_log_type_t v2 = (void *)v0[18];

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10022CEA0()
{
  uint64_t v1 = *(void **)(v0 + 240);
  unint64_t v12 = *(void **)(v0 + 248);
  uint64_t v3 = *(void **)(v0 + 224);
  os_log_type_t v2 = *(void **)(v0 + 232);
  uint64_t v5 = *(void **)(v0 + 208);
  uint64_t v4 = *(void **)(v0 + 216);
  uint64_t v7 = *(void **)(v0 + 192);
  unint64_t v6 = *(void **)(v0 + 200);
  id v8 = *(void **)(v0 + 176);
  unint64_t v9 = *(void **)(v0 + 184);

  swift_task_dealloc();
  id v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_10022CF70(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D5D88);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100231164;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10022D1A0;
  aBlock[3] = &unk_1012DE480;
  id v10 = _Block_copy(aBlock);
  swift_release();
  [a2 loadAllShortcutsWithHandler:v10];
  _Block_release(v10);
}

uint64_t sub_10022D118(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_1000FF33C(&qword_1015D5D88);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    if (a1) {
      swift_bridgeObjectRetain();
    }
    sub_1000FF33C(&qword_1015D5D88);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_10022D1A0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10022DC2C(a1, a2, a3, &qword_1015D5D58);
}

void *sub_10022D1B4(uint64_t a1)
{
  type metadata accessor for FavoriteItem();
  os_log_type_t v2 = (void *)MapsSyncObject.__allocating_init()();
  dispatch thunk of FavoriteItem.version.setter();
  [v2 setSourceType:2];
  if (a1 < -32768)
  {
    __break(1u);
  }
  else if (a1 < 0x8000)
  {
    dispatch thunk of FavoriteItem.type.setter();
    dispatch thunk of FavoriteItem.hidden.setter();
    id v3 = (id)NSStringFromMapsSuggestionsShortcutType();
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    v4._uint64_t countAndFlagsBits = 0x70757465535FLL;
    v4._uint64_t object = (void *)0xE600000000000000;
    String.append(_:)(v4);
    dispatch thunk of FavoriteItem.shortcutIdentifier.setter();
    if (qword_1015CBC78 == -1) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  swift_once();
LABEL_4:
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000F2248(v5, (uint64_t)qword_1016115E0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[Migration] migrating hidden setup placeholder of type %ld", v8, 0xCu);
    swift_slowDealloc();
  }

  return v2;
}

uint64_t sub_10022D4E0(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  Swift::String v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *Swift::String v4 = v2;
  v4[1] = sub_10022D588;
  return sub_10022AA34();
}

uint64_t sub_10022D588()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  uint64_t v7 = *(void *)(v3 + 24);
  if (v2)
  {
    unint64_t v8 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

void sub_10022D70C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015DC490);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100230F84;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100341218;
  aBlock[3] = &unk_1012DE390;
  id v10 = _Block_copy(aBlock);
  swift_release();
  [a2 moveToFrontWithCompletion:v10];
  _Block_release(v10);
}

uint64_t sub_10022D8B4(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    sub_1000FF33C(&qword_1015DC490);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_1000FF33C(&qword_1015DC490);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_10022D918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a6;
  uint64_t v9 = sub_1000FF33C((uint64_t *)&unk_1015D5D70);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  sub_100223F04();
  uint64_t v13 = v12;
  sub_100100830(0, (unint64_t *)&qword_1015D9680);
  v14.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  if (qword_1015CBC90 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_101611608;
  if (qword_101611608 < 0)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v23 = a4;
    if (qword_1015CBC88 != -1) {
      swift_once();
    }
    double v16 = *(double *)&qword_101611600;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    id v19 = (uint64_t *)(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v20 = v22;
    *id v19 = a5;
    v19[1] = v20;
    aBlock[4] = sub_100230FFC;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10022DC18;
    aBlock[3] = &unk_1012DE430;
    id v21 = _Block_copy(aBlock);
    sub_1000F4F24(a5);
    swift_release();
    [v13 fetchSuggestedLOIsForTypes:v14.super.isa minVisits:v15 maxAge:v23 maxResults:v21 handler:v16];

    _Block_release(v21);
  }
}

uint64_t sub_10022DC18(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10022DC2C(a1, a2, a3, &qword_1015D5D80);
}

uint64_t sub_10022DC2C(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_100100830(0, a4);
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v7 = a3;
  v6(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_10022DCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a6;
  uint64_t v9 = sub_1000FF33C((uint64_t *)&unk_1015D5D70);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  sub_100223F04();
  uint64_t v13 = v12;
  sub_100100830(0, (unint64_t *)&qword_1015D9680);
  v14.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  if (qword_1015CBC98 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_101611610;
  if (qword_101611610 < 0)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v23 = a4;
    if (qword_1015CBC88 != -1) {
      swift_once();
    }
    double v16 = *(double *)&qword_101611600;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    id v19 = (uint64_t *)(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v20 = v22;
    *id v19 = a5;
    v19[1] = v20;
    aBlock[4] = sub_100230FFC;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10022DC18;
    aBlock[3] = &unk_1012DE3E0;
    id v21 = _Block_copy(aBlock);
    sub_1000F4F24(a5);
    swift_release();
    [v13 fetchAllSuggestedLOIsExcludingTypes:v14.super.isa minVisits:v15 maxAge:v23 maxResults:v21 handler:v16];

    _Block_release(v21);
  }
}

uint64_t sub_10022DFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id), void *a5)
{
  if (a2)
  {
    swift_errorRetain();
    sub_1000FF33C((uint64_t *)&unk_1015D5D70);
    return CheckedContinuation.resume(throwing:)();
  }
  else if (a4)
  {
    if (a1)
    {
      sub_1000F4F24((uint64_t)a4);
      unint64_t v8 = swift_bridgeObjectRetain();
      sub_10022EB90(v8, a4, a5);
    }
    else
    {
      swift_retain();
    }
    sub_1000FF33C((uint64_t *)&unk_1015D5D70);
    CheckedContinuation.resume(returning:)();
    return sub_10006C5D8((uint64_t)a4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000FF33C((uint64_t *)&unk_1015D5D70);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_10022E0D0()
{
  uint64_t v1 = *(void **)(v0 + 56);
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10022E158()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

BOOL sub_10022E184(id a1, SEL a2)
{
  id v2 = a1;
  char v3 = sub_10022E1D0();

  return v3 & 1;
}

uint64_t type metadata accessor for ThreadSafe()
{
  return sub_1000F5520();
}

uint64_t sub_10022E1D0()
{
  [v0 sourceType];
  int v1 = (unsigned __int16)FavoriteItemSourceType.rawValue.getter();
  if (v1 == (unsigned __int16)FavoriteItemSourceType.rawValue.getter()) {
    return 1;
  }
  dispatch thunk of FavoriteItem.type.getter();
  id v3 = (id)NSStringFromMapsSuggestionsShortcutType();
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  v7._uint64_t countAndFlagsBits = 0x70757465535FLL;
  v7._uint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v7);
  uint64_t v8 = dispatch thunk of FavoriteItem.shortcutIdentifier.getter();
  if (v9)
  {
    if (v4 == v8 && v9 == v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_10022E2F8()
{
  id v2 = *(const void **)(v0 + 16);
  id v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10005056C;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1015D5D00 + dword_1015D5D00);
  return v5(v2, v3);
}

uint64_t sub_10022E3AC(id *__src, id *a2, unint64_t a3, id *__dst, void *a5)
{
  uint64_t v5 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v46 = __src;
  id v45 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (__dst != a2 || &a2[v14] <= __dst) {
        memmove(__dst, a2, 8 * v14);
      }
      id v25 = &v5[v14];
      uint64_t v44 = v25;
      uint64_t v46 = v7;
      if (v8 < v7 && v12 >= 8)
      {
        unint64_t v26 = (id *)(a3 - 8);
        uint64_t v27 = v7;
        unint64_t v38 = v5;
        id v39 = v8;
        while (1)
        {
          unint64_t v28 = (unint64_t)v25;
          char v29 = v25 - 1;
          id v43 = *(v25 - 1);
          id v30 = *--v27;
          id v42 = v30;
          id v31 = v43;
          id v32 = v30;
          BOOL v33 = sub_1002273BC((uint64_t)&v43, (uint64_t)&v42, (uint64_t)a5);
          if (v41) {
            break;
          }
          BOOL v34 = v33;
          uint64_t v41 = 0;
          id v35 = v26 + 1;

          if (v34)
          {
            if (v35 != v7 || v26 >= v7) {
              *unint64_t v26 = *v27;
            }
            uint64_t v46 = v27;
            uint64_t v36 = v38;
            id v25 = (id *)v28;
            if (v27 <= v39) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v44 = v29;
            if ((unint64_t)v35 < v28 || (unint64_t)v26 >= v28 || v35 != (id *)v28) {
              *unint64_t v26 = *v29;
            }
            uint64_t v27 = v7;
            id v25 = v29;
            uint64_t v36 = v38;
            if (v7 <= v39) {
              goto LABEL_48;
            }
          }
          --v26;
          uint64_t v7 = v27;
          if (v25 <= v36) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    uint64_t v15 = &v5[v11];
    uint64_t v44 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        double v16 = v8;
        id v43 = *v7;
        unint64_t v17 = v5;
        id v42 = *v5;
        uint64_t v18 = v42;
        id v19 = v43;
        id v20 = v18;
        BOOL v21 = sub_1002273BC((uint64_t)&v43, (uint64_t)&v42, (uint64_t)a5);
        if (v41) {
          break;
        }
        BOOL v22 = v21;

        if (v22)
        {
          uint64_t v23 = v7 + 1;
          id v24 = v16;
          if (v16 < v7 || v16 >= v23 || v16 != v7) {
            *double v16 = *v7;
          }
          uint64_t v5 = v17;
        }
        else
        {
          id v24 = v16;
          if (v16 != v17) {
            *double v16 = *v17;
          }
          uint64_t v5 = v17 + 1;
          id v45 = v17 + 1;
          uint64_t v23 = v7;
        }
        uint64_t v41 = 0;
        uint64_t v8 = v24 + 1;
        uint64_t v46 = v8;
        if (v5 < v15)
        {
          uint64_t v7 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_100354BDC(&v46, &v45, &v44);

    return 1;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10022E710(uint64_t a1)
{
  sub_10022CF70(a1, *(void **)(v1 + 16));
}

uint64_t sub_10022E718(uint64_t a1)
{
  return sub_10022E748(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10022D918);
}

uint64_t sub_10022E730(uint64_t a1)
{
  return sub_10022E748(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10022DCC8);
}

uint64_t sub_10022E748(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_10022E760(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_22:
    uint64_t v17 = a3;
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    a3 = v17;
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      uint64_t v19 = a3;
      for (uint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(a1 + 8 * i + 32);
        }
        uint64_t v8 = v7;
        id v9 = [v7 identifier];
        if (v9)
        {
          int64_t v10 = v9;
          uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v13 = v12;

          if (v11 == a2 && v13 == v19)
          {

            swift_bridgeObjectRelease();
            return i;
          }
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          if (v15) {
            return i;
          }
          uint64_t v16 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        else
        {

          uint64_t v16 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_21;
          }
        }
        if (v16 == v5) {
          return 0;
        }
      }
    }
  }
  return 0;
}

void sub_10022E8F4(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  v27[5] = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
LABEL_31:
  }
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  else {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v25 = (os_unfair_lock_s **)(a2 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  if (v6)
  {
    a2 = 0;
    uint64_t v23 = v5 & 0xFFFFFFFFFFFFFF8;
    unint64_t v24 = v5 & 0xC000000000000001;
    unint64_t v21 = v5;
    unint64_t v22 = v5 + 32;
    uint64_t v20 = v6;
    while (1)
    {
      if (v24)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (a2 >= *(void *)(v23 + 16)) {
          goto LABEL_30;
        }
        id v7 = *(id *)(v22 + 8 * a2);
      }
      uint64_t v8 = v7;
      if (__OFADD__(a2++, 1)) {
        goto LABEL_29;
      }
      id v26 = (id)a2;
      int64_t v10 = *v25 + 4;
      uint64_t v11 = *v25 + 6;
      swift_retain();
      os_unfair_lock_lock(v11);
      sub_1000A2B84(v10, v27);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      os_unfair_lock_unlock(v11);
      a2 = (unint64_t)v27[0];
      swift_release();
      if (a2 >> 62)
      {
        id v19 = v8;
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        if (v12)
        {
LABEL_14:
          unint64_t v5 = a2 & 0xC000000000000001;
          uint64_t v14 = 4;
          while (1)
          {
            id v15 = v5 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a2 + 8 * v14);
            uint64_t v16 = v15;
            uint64_t v17 = v14 - 3;
            if (__OFADD__(v14 - 4, 1)) {
              break;
            }
            v27[0] = v15;
            char v18 = sub_100227978(v27, v8);

            if (v18)
            {

              swift_bridgeObjectRelease_n();
              goto LABEL_6;
            }
            ++v14;
            if (v17 == v12) {
              goto LABEL_5;
            }
          }
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id v13 = v8;
        swift_bridgeObjectRetain();
        if (v12) {
          goto LABEL_14;
        }
      }
LABEL_5:

      swift_bridgeObjectRelease_n();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
LABEL_6:
      unint64_t v5 = v21;
      a2 = (unint64_t)v26;
      if (v26 == (id)v20) {
        return;
      }
    }
    os_unfair_lock_unlock(v11);
    __break(1u);
  }
}

void *sub_10022EB90(unint64_t a1, uint64_t (*a2)(id), void *a3)
{
  unint64_t v6 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v6 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v6 & 0xC000000000000001;
      unint64_t v15 = v6;
      while (v17)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        int64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        uint64_t v12 = a3;
        char v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v6 = v15;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = _swiftEmptyArrayStorage;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10022ED38(uint64_t result)
{
  if (result)
  {
    type metadata accessor for MapsFavoritesManager();
    swift_unknownObjectRetain();
    if (swift_dynamicCastClass())
    {
      if (qword_1015CBC78 != -1) {
        swift_once();
      }
      uint64_t v1 = type metadata accessor for Logger();
      sub_1000F2248(v1, (uint64_t)qword_1016115E0);
      uint64_t v2 = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        _os_log_impl((void *)&_mh_execute_header, v2, v3, "LOIs changed", v4, 2u);
        swift_slowDealloc();
      }

      uint64_t v5 = swift_beginAccess();
      __chkstk_darwin(v5);
      uint64_t v7 = v6 + 4;
      unint64_t v8 = v6 + 5;
      os_unfair_lock_lock(v6 + 5);
      sub_10023165C(v7);
      os_unfair_lock_unlock(v8);
      swift_endAccess();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10022EF04()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = (void *)v0[3];

  os_log_type_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_10022EF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v38 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_7:
    unint64_t v8 = *(void **)(v38 + 8 * v5);
    uint64_t v9 = a1;
    uint64_t v33 = v6;
    uint64_t v35 = v5;
    while (1)
    {
      int64_t v10 = *(void **)v6;
      id v11 = v8;
      id v12 = v10;
      uint64_t v7 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
      char v13 = (void *)dispatch thunk of FavoriteItem.longitude.getter();
      uint64_t v14 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
      uint64_t v15 = dispatch thunk of FavoriteItem.longitude.getter();
      uint64_t v16 = (void *)v15;
      if (!v7)
      {
        uint64_t v7 = v13;
LABEL_5:

LABEL_6:
        ++v5;
        uint64_t v6 = v33 + 8;
        if (v5 == a2) {
          return;
        }
        goto LABEL_7;
      }
      if (!v13) {
        goto LABEL_5;
      }
      if (!v14) {
        break;
      }
      if (!v15)
      {

        uint64_t v16 = v7;
        goto LABEL_16;
      }
      id v36 = v7;
      id v37 = v13;
      id v17 = v14;
      id v39 = v16;
      [v36 doubleValue];
      double v19 = v18;
      [v37 doubleValue];
      id v21 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v19 longitude:v20];
      [v21 distanceFromLocation:a5];
      double v23 = v22;

      [v17 doubleValue];
      double v25 = v24;
      [v39 doubleValue];
      id v27 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v25 longitude:v26];
      [v27 distanceFromLocation:a5];
      double v29 = v28;

      uint64_t v5 = v35;
      if (v23 >= v29) {
        goto LABEL_6;
      }
LABEL_17:
      if (!v38)
      {
        __break(1u);
        return;
      }
      id v30 = *(void **)v6;
      unint64_t v8 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v8;
      *(void *)(v6 + 8) = v30;
      v6 -= 8;
      if (v5 == ++v9) {
        goto LABEL_6;
      }
    }

LABEL_16:
    goto LABEL_17;
  }
}

uint64_t sub_10022F210(char *__src, id *a2, id *a3, void **__dst, uint64_t a5)
{
  uint64_t v5 = __dst;
  uint64_t v6 = a3;
  uint64_t v7 = __src;
  uint64_t v8 = (char *)a2 - __src;
  uint64_t v9 = (char *)a2 - __src + 7;
  if ((char *)a2 - __src >= 0) {
    uint64_t v9 = (char *)a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  os_log_type_t v68 = (id *)__src;
  uint64_t v67 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        uint64_t v33 = a2;
        memmove(__dst, a2, 8 * v13);
        a2 = v33;
      }
      BOOL v34 = &v5[v13];
      unint64_t v66 = v34;
      os_log_type_t v68 = a2;
      if (v7 < (char *)a2 && v11 >= 8)
      {
        unint64_t v35 = *(void *)(a5 + 16);
        unint64_t v36 = v35 - 1;
        uint64_t v53 = v5;
        unint64_t v54 = v35;
        if (v35 <= 1) {
          unint64_t v35 = 1;
        }
        unint64_t v52 = v35 - 1;
        uint64_t v37 = a5 + 40;
        uint64_t v38 = a2;
        uint64_t v59 = v7;
        while (1)
        {
          uint64_t v63 = v6;
          id v65 = a2;
          id v57 = v6 - 1;
          id v39 = v34 - 1;
          id v40 = *--v38;
          id v41 = *(v34 - 1);
          id v61 = v40;
          __int16 v42 = dispatch thunk of FavoriteItem.type.getter();
          if (v54)
          {
            uint64_t v43 = *(void *)(a5 + 32);
            if (v43 == v42)
            {
              uint64_t v44 = 0;
LABEL_55:
              __int16 v46 = dispatch thunk of FavoriteItem.type.getter();
              if (v43 != v46)
              {
                uint64_t v49 = 0;
                while (v36 != v49)
                {
                  if (v52 == v49)
                  {
                    __break(1u);
LABEL_76:
                    __break(1u);
                    goto LABEL_77;
                  }
                  uint64_t v50 = *(void *)(v37 + 8 * v49++);
                  if (v50 == v46)
                  {

                    if (v44 > v49 - 1) {
                      goto LABEL_57;
                    }
                    uint64_t v6 = v57;
                    unint64_t v47 = (unint64_t)v59;
                    if (v63 != v65 || v57 >= v65) {
                      *id v57 = *v38;
                    }
                    os_log_type_t v68 = v38;
                    goto LABEL_62;
                  }
                }
              }
            }
            else
            {
              uint64_t v44 = 0;
              while (v36 != v44)
              {
                uint64_t v45 = *(void *)(v37 + 8 * v44++);
                if (v45 == v42) {
                  goto LABEL_55;
                }
              }
            }
          }

LABEL_57:
          unint64_t v66 = v34 - 1;
          uint64_t v38 = v65;
          uint64_t v6 = v57;
          unint64_t v47 = (unint64_t)v59;
          if (v63 < v34 || v57 >= v34)
          {
            *id v57 = *v39;
            --v34;
LABEL_62:
            id v48 = v53;
            if ((unint64_t)v38 <= v47) {
              goto LABEL_74;
            }
          }
          else
          {
            id v48 = v53;
            if (v63 != v34) {
              *id v57 = *v39;
            }
            --v34;
            if (v65 <= (id *)v59) {
              goto LABEL_74;
            }
          }
          a2 = v38;
          if (v34 <= v48) {
            goto LABEL_74;
          }
        }
      }
      goto LABEL_74;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != (void **)__src || &__src[8 * v10] <= (char *)__dst)
    {
      uint64_t v14 = a2;
      memmove(__dst, __src, 8 * v10);
      a2 = v14;
    }
    uint64_t v60 = &v5[v10];
    unint64_t v66 = v60;
    if (a2 < v6 && v8 >= 8)
    {
      unint64_t v15 = *(void *)(a5 + 16);
      unint64_t v16 = v15 - 1;
      unint64_t v56 = v15;
      if (v15 <= 1) {
        unint64_t v15 = 1;
      }
      unint64_t v17 = v15 - 1;
      uint64_t v18 = a5 + 40;
      uint64_t v62 = v6;
      do
      {
        uint64_t v58 = (id *)v7;
        unint64_t v64 = a2;
        double v19 = v5;
        double v20 = *v5;
        id v21 = *a2;
        id v22 = v20;
        __int16 v23 = dispatch thunk of FavoriteItem.type.getter();
        if (v56)
        {
          uint64_t v24 = *(void *)(a5 + 32);
          if (v24 == v23)
          {
            uint64_t v25 = 0;
LABEL_21:
            __int16 v27 = dispatch thunk of FavoriteItem.type.getter();
            if (v24 != v27)
            {
              uint64_t v31 = 0;
              while (v16 != v31)
              {
                if (v17 == v31) {
                  goto LABEL_76;
                }
                uint64_t v32 = *(void *)(v18 + 8 * v31++);
                if (v32 == v27)
                {

                  if (v25 > v31 - 1) {
                    goto LABEL_23;
                  }
                  unint64_t v29 = (unint64_t)v62;
                  id v30 = v64 + 1;
                  double v28 = v58;
                  uint64_t v5 = v19;
                  if (v58 < v64 || v58 >= v30 || v58 != v64) {
                    id *v58 = *v64;
                  }
                  goto LABEL_26;
                }
              }
            }
          }
          else
          {
            uint64_t v25 = 0;
            while (v16 != v25)
            {
              uint64_t v26 = *(void *)(v18 + 8 * v25++);
              if (v26 == v23) {
                goto LABEL_21;
              }
            }
          }
        }

LABEL_23:
        double v28 = v58;
        unint64_t v29 = (unint64_t)v62;
        if (v58 != v19) {
          id *v58 = *v19;
        }
        uint64_t v5 = v19 + 1;
        uint64_t v67 = v19 + 1;
        id v30 = v64;
LABEL_26:
        uint64_t v7 = (char *)(v28 + 1);
        if (v5 >= v60) {
          break;
        }
        a2 = v30;
      }
      while ((unint64_t)v30 < v29);
      os_log_type_t v68 = (id *)v7;
    }
LABEL_74:
    sub_100354BDC(&v68, &v67, &v66);
    return 1;
  }
LABEL_77:
  swift_bridgeObjectRelease();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10022F698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 == a2) {
    return;
  }
  uint64_t v5 = a5;
  uint64_t v6 = *a4;
  unint64_t v7 = *(void *)(a5 + 16);
  unint64_t v8 = v7 - 1;
  unint64_t v27 = v7;
  if (v7 <= 1) {
    unint64_t v7 = 1;
  }
  unint64_t v9 = v7 - 1;
  uint64_t v10 = a5 + 40;
  uint64_t v25 = *a4;
  do
  {
    uint64_t v11 = *(void **)(v6 + 8 * a3);
    uint64_t v29 = a3;
    while (2)
    {
      uint64_t v28 = a3;
      uint64_t v12 = a3 - 1;
      uint64_t v13 = *(void **)(v6 + 8 * (a3 - 1));
      id v14 = v11;
      id v15 = v13;
      __int16 v16 = dispatch thunk of FavoriteItem.type.getter();
      if (!v27) {
        goto LABEL_22;
      }
      uint64_t v17 = *(void *)(v5 + 32);
      if (v17 != v16)
      {
        uint64_t v18 = 0;
        while (v8 != v18)
        {
          uint64_t v19 = *(void *)(v10 + 8 * v18++);
          if (v19 == v16) {
            goto LABEL_12;
          }
        }
LABEL_21:
        uint64_t v6 = v25;
        uint64_t v5 = a5;
LABEL_22:

        break;
      }
      uint64_t v18 = 0;
LABEL_12:
      __int16 v20 = dispatch thunk of FavoriteItem.type.getter();
      if (v17 == v20) {
        goto LABEL_21;
      }
      uint64_t v21 = 0;
      do
      {
        if (v8 == v21) {
          goto LABEL_21;
        }
        if (v9 == v21)
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        uint64_t v22 = *(void *)(v10 + 8 * v21++);
      }
      while (v22 != v20);

      if (v18 > v21 - 1)
      {
        uint64_t v6 = v25;
        uint64_t v5 = a5;
        break;
      }
      uint64_t v6 = v25;
      uint64_t v5 = a5;
      if (!v25) {
        goto LABEL_27;
      }
      uint64_t v11 = *(void **)(v25 + 8 * v28);
      *(void *)(v25 + 8 * v28) = *(void *)(v25 + 8 * v12);
      *(void *)(v25 + 8 * v12) = v11;
      a3 = v12;
      if (v12 != a1) {
        continue;
      }
      break;
    }
    a3 = v29 + 1;
  }
  while (v29 + 1 != a2);
}

uint64_t sub_10022F834(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1;
  Swift::Int v5 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_188;
    }
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_10022F698(0, v5, 1, v4, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_196;
  }
  Swift::Int v134 = v6;
  uint64_t v152 = a2;
  Swift::Int v142 = v5;
  uint64_t v151 = v2;
  unint64_t v133 = v4;
  if (v5 < 2)
  {
    uint64_t v12 = (char *)_swiftEmptyArrayStorage;
    uint64_t v153 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      unint64_t v71 = _swiftEmptyArrayStorage[2];
LABEL_150:
      if (v71 >= 2)
      {
        uint64_t v123 = *v133;
        uint64_t v150 = *v133;
        do
        {
          unint64_t v124 = v71 - 2;
          if (v71 < 2) {
            goto LABEL_182;
          }
          if (!v123) {
            goto LABEL_195;
          }
          uint64_t v125 = *(void *)&v12[16 * v124 + 32];
          uint64_t v126 = *(void *)&v12[16 * v71 + 24];
          unint64_t v127 = (char *)(v123 + 8 * v125);
          uint64_t v128 = (id *)(v123 + 8 * *(void *)&v12[16 * v71 + 16]);
          uint64_t v129 = (id *)(v123 + 8 * v126);
          swift_bridgeObjectRetain();
          sub_10022F210(v127, v128, v129, __dst, v152);
          if (v151) {
            goto LABEL_147;
          }
          swift_bridgeObjectRelease();
          if (v126 < v125) {
            goto LABEL_183;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = sub_10035503C((uint64_t)v12);
          }
          if (v124 >= *((void *)v12 + 2)) {
            goto LABEL_184;
          }
          unint64_t v130 = &v12[16 * v124 + 32];
          *(void *)unint64_t v130 = v125;
          *((void *)v130 + 1) = v126;
          unint64_t v131 = *((void *)v12 + 2);
          if (v71 > v131) {
            goto LABEL_185;
          }
          memmove(&v12[16 * v71 + 16], &v12[16 * v71 + 32], 16 * (v131 - v71));
          *((void *)v12 + 2) = v131 - 1;
          unint64_t v71 = v131 - 1;
          uint64_t v123 = v150;
        }
        while (v131 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
LABEL_162:
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    unint64_t v8 = v4;
    uint64_t v9 = v7 >> 1;
    type metadata accessor for FavoriteItem();
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v4 = v8;
    __dst = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v153 = v10;
  }
  Swift::Int v13 = 0;
  uint64_t v14 = *v4;
  uint64_t v141 = a2 + 40;
  uint64_t v132 = *v4 - 8;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v15 = v5;
  uint64_t v149 = *v4;
  while (1)
  {
    Swift::Int v16 = v13;
    Swift::Int v17 = v13 + 1;
    if (v17 >= v15) {
      goto LABEL_65;
    }
    uint64_t v135 = v12;
    Swift::Int v137 = v16;
    Swift::Int v18 = v17;
    uint64_t v19 = *(void **)(v14 + 8 * v16);
    id v20 = *(id *)(v14 + 8 * v17);
    id v21 = v19;
    __int16 v22 = dispatch thunk of FavoriteItem.type.getter();
    unint64_t v146 = *(void *)(a2 + 16);
    if (!v146) {
      goto LABEL_30;
    }
    uint64_t v23 = *(void *)(a2 + 32);
    if (v23 != v22)
    {
      uint64_t v24 = 0;
      while (v146 - 1 != v24)
      {
        uint64_t v25 = *(void *)(v141 + 8 * v24++);
        if (v25 == v22) {
          goto LABEL_21;
        }
      }
      goto LABEL_30;
    }
    uint64_t v24 = 0;
LABEL_21:
    __int16 v26 = dispatch thunk of FavoriteItem.type.getter();
    if (v23 != v26)
    {
      uint64_t v27 = 0;
      uint64_t v28 = v146;
      if (v146 <= 1) {
        uint64_t v28 = 1;
      }
      uint64_t v29 = v28 - 1;
      while (v146 - 1 != v27)
      {
        if (v29 == v27) {
          goto LABEL_181;
        }
        uint64_t v30 = *(void *)(v141 + 8 * v27++);
        if (v30 == v26) {
          goto LABEL_29;
        }
      }
LABEL_30:

      BOOL v143 = 0;
      goto LABEL_31;
    }
    uint64_t v27 = 0;
LABEL_29:

    BOOL v143 = v24 < v27;
LABEL_31:
    Swift::Int v31 = v137 + 2;
    uint64_t v14 = v149;
    if (v137 + 2 < v142) {
      break;
    }
LABEL_52:
    uint64_t v12 = v135;
LABEL_53:
    Swift::Int v17 = v31;
    Swift::Int v16 = v137;
    if (v143)
    {
      if (v31 < v137) {
        goto LABEL_189;
      }
LABEL_57:
      if (v16 < v31)
      {
        __int16 v46 = (uint64_t *)(v132 + 8 * v31);
        Swift::Int v47 = v31;
        Swift::Int v48 = v16;
        uint64_t v49 = (uint64_t *)(v14 + 8 * v16);
        do
        {
          if (v48 != --v47)
          {
            if (!v14) {
              goto LABEL_193;
            }
            uint64_t v50 = *v49;
            *uint64_t v49 = *v46;
            *__int16 v46 = v50;
          }
          ++v48;
          --v46;
          ++v49;
        }
        while (v48 < v47);
      }
      Swift::Int v17 = v31;
    }
LABEL_65:
    Swift::Int v140 = v17;
    if (v17 >= v142) {
      goto LABEL_97;
    }
    if (__OFSUB__(v17, v16)) {
      goto LABEL_187;
    }
    if (v17 - v16 >= v134) {
      goto LABEL_97;
    }
    if (__OFADD__(v16, v134)) {
      goto LABEL_190;
    }
    Swift::Int v51 = v142;
    if (v16 + v134 < v142) {
      Swift::Int v51 = v16 + v134;
    }
    if (v51 < v16) {
      goto LABEL_191;
    }
    if (v140 == v51) {
      goto LABEL_97;
    }
    unint64_t v136 = v12;
    Swift::Int v138 = v16;
    unint64_t v52 = *(void *)(a2 + 16);
    unint64_t v53 = v52 - 1;
    unint64_t v144 = v52;
    if (v52 <= 1) {
      unint64_t v52 = 1;
    }
    unint64_t v54 = v52 - 1;
    Swift::Int v55 = v140;
    Swift::Int v139 = v51;
    do
    {
      unint64_t v56 = *(void **)(v14 + 8 * v55);
      Swift::Int v57 = v55;
      do
      {
        Swift::Int v58 = v57 - 1;
        uint64_t v59 = *(void **)(v14 + 8 * (v57 - 1));
        id v60 = v56;
        id v61 = v59;
        __int16 v62 = dispatch thunk of FavoriteItem.type.getter();
        if (!v144) {
          goto LABEL_93;
        }
        Swift::Int v147 = v57;
        uint64_t v63 = *(void *)(a2 + 32);
        if (v63 != v62)
        {
          uint64_t v64 = 0;
          while (v53 != v64)
          {
            uint64_t v65 = *(void *)(v141 + 8 * v64++);
            if (v65 == v62) {
              goto LABEL_83;
            }
          }
LABEL_92:
          a2 = v152;
LABEL_93:

LABEL_94:
          uint64_t v14 = v149;
          break;
        }
        uint64_t v64 = 0;
LABEL_83:
        __int16 v66 = dispatch thunk of FavoriteItem.type.getter();
        if (v63 == v66) {
          goto LABEL_92;
        }
        uint64_t v67 = 0;
        a2 = v152;
        do
        {
          if (v53 == v67) {
            goto LABEL_93;
          }
          if (v54 == v67)
          {
            __break(1u);
            goto LABEL_165;
          }
          uint64_t v68 = *(void *)(v152 + 8 * v67++ + 40);
        }
        while (v68 != v66);

        if (v64 > v67 - 1) {
          goto LABEL_94;
        }
        uint64_t v14 = v149;
        if (!v149) {
          goto LABEL_194;
        }
        unint64_t v56 = *(void **)(v149 + 8 * v147);
        *(void *)(v149 + 8 * v147) = *(void *)(v149 + 8 * v58);
        *(void *)(v149 + 8 * v58) = v56;
        Swift::Int v57 = v58;
      }
      while (v58 != v138);
      ++v55;
    }
    while (v55 != v139);
    Swift::Int v140 = v139;
    uint64_t v12 = v136;
    Swift::Int v16 = v138;
LABEL_97:
    if (v140 < v16) {
      goto LABEL_186;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_10035496C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v70 = *((void *)v12 + 2);
    unint64_t v69 = *((void *)v12 + 3);
    unint64_t v71 = v70 + 1;
    uint64_t v14 = v149;
    if (v70 >= v69 >> 1)
    {
      uint64_t v122 = sub_10035496C((char *)(v69 > 1), v70 + 1, 1, v12);
      uint64_t v14 = v149;
      uint64_t v12 = v122;
    }
    *((void *)v12 + 2) = v71;
    uint64_t v72 = v12 + 32;
    id v73 = &v12[16 * v70 + 32];
    *(void *)id v73 = v16;
    *((void *)v73 + 1) = v140;
    if (v70)
    {
      while (1)
      {
        unint64_t v74 = v71 - 1;
        if (v71 >= 4)
        {
          unint64_t v79 = &v72[16 * v71];
          uint64_t v80 = *((void *)v79 - 8);
          uint64_t v81 = *((void *)v79 - 7);
          BOOL v85 = __OFSUB__(v81, v80);
          uint64_t v82 = v81 - v80;
          if (v85) {
            goto LABEL_170;
          }
          uint64_t v84 = *((void *)v79 - 6);
          uint64_t v83 = *((void *)v79 - 5);
          BOOL v85 = __OFSUB__(v83, v84);
          uint64_t v77 = v83 - v84;
          char v78 = v85;
          if (v85) {
            goto LABEL_171;
          }
          unint64_t v86 = v71 - 2;
          uint64_t v87 = &v72[16 * v71 - 32];
          uint64_t v89 = *(void *)v87;
          uint64_t v88 = *((void *)v87 + 1);
          BOOL v85 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          if (v85) {
            goto LABEL_173;
          }
          BOOL v85 = __OFADD__(v77, v90);
          uint64_t v91 = v77 + v90;
          if (v85) {
            goto LABEL_176;
          }
          if (v91 >= v82)
          {
            Swift::String v109 = &v72[16 * v74];
            uint64_t v111 = *(void *)v109;
            uint64_t v110 = *((void *)v109 + 1);
            BOOL v85 = __OFSUB__(v110, v111);
            uint64_t v112 = v110 - v111;
            if (v85) {
              goto LABEL_180;
            }
            BOOL v102 = v77 < v112;
            goto LABEL_134;
          }
        }
        else
        {
          if (v71 != 3)
          {
            uint64_t v103 = *((void *)v12 + 4);
            uint64_t v104 = *((void *)v12 + 5);
            BOOL v85 = __OFSUB__(v104, v103);
            uint64_t v96 = v104 - v103;
            char v97 = v85;
            goto LABEL_128;
          }
          uint64_t v76 = *((void *)v12 + 4);
          uint64_t v75 = *((void *)v12 + 5);
          BOOL v85 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          char v78 = v85;
        }
        if (v78) {
          goto LABEL_172;
        }
        unint64_t v86 = v71 - 2;
        uint64_t v92 = &v72[16 * v71 - 32];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v95 = __OFSUB__(v93, v94);
        uint64_t v96 = v93 - v94;
        char v97 = v95;
        if (v95) {
          goto LABEL_175;
        }
        id v98 = &v72[16 * v74];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v85 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v85) {
          goto LABEL_178;
        }
        if (__OFADD__(v96, v101)) {
          goto LABEL_179;
        }
        if (v96 + v101 >= v77)
        {
          BOOL v102 = v77 < v101;
LABEL_134:
          if (v102) {
            unint64_t v74 = v86;
          }
          goto LABEL_136;
        }
LABEL_128:
        if (v97) {
          goto LABEL_174;
        }
        id v105 = &v72[16 * v74];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v85 = __OFSUB__(v106, v107);
        uint64_t v108 = v106 - v107;
        if (v85) {
          goto LABEL_177;
        }
        if (v108 < v96) {
          goto LABEL_145;
        }
LABEL_136:
        unint64_t v113 = v74 - 1;
        if (v74 - 1 >= v71) {
          goto LABEL_166;
        }
        if (!v14) {
          goto LABEL_192;
        }
        id v114 = &v72[16 * v113];
        uint64_t v115 = *(void *)v114;
        unint64_t v116 = v74;
        uint64_t v117 = &v72[16 * v74];
        uint64_t v118 = *((void *)v117 + 1);
        unint64_t v119 = (char *)(v14 + 8 * *(void *)v114);
        uint64_t v120 = (id *)(v14 + 8 * *(void *)v117);
        unint64_t v148 = (id *)(v14 + 8 * v118);
        swift_bridgeObjectRetain();
        sub_10022F210(v119, v120, v148, __dst, v152);
        if (v151)
        {
LABEL_147:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()();
          goto LABEL_162;
        }
        swift_bridgeObjectRelease();
        if (v118 < v115) {
          goto LABEL_167;
        }
        if (v116 > *((void *)v12 + 2)) {
          goto LABEL_168;
        }
        *(void *)id v114 = v115;
        uint64_t v72 = v12 + 32;
        *(void *)&v12[16 * v113 + 40] = v118;
        unint64_t v121 = *((void *)v12 + 2);
        if (v116 >= v121) {
          goto LABEL_169;
        }
        unint64_t v71 = v121 - 1;
        memmove(v117, v117 + 16, 16 * (v121 - 1 - v116));
        *((void *)v12 + 2) = v121 - 1;
        a2 = v152;
        uint64_t v14 = v149;
        if (v121 <= 2) {
          goto LABEL_145;
        }
      }
    }
    unint64_t v71 = 1;
LABEL_145:
    Swift::Int v15 = v142;
    Swift::Int v13 = v140;
    if (v140 >= v142) {
      goto LABEL_150;
    }
  }
  Swift::Int v32 = v18;
  uint64_t v33 = v146;
  unint64_t v34 = v146 - 1;
  if (v146 <= 1) {
    uint64_t v33 = 1;
  }
  uint64_t v35 = v33 - 1;
  while (1)
  {
    unint64_t v36 = *(void **)(v14 + 8 * v32);
    id v37 = *(id *)(v14 + 8 * v31);
    id v38 = v36;
    __int16 v39 = dispatch thunk of FavoriteItem.type.getter();
    if (!v146) {
      goto LABEL_35;
    }
    uint64_t v40 = *(void *)(a2 + 32);
    if (v40 == v39) {
      break;
    }
    uint64_t v41 = 0;
    while (v34 != v41)
    {
      uint64_t v42 = *(void *)(v141 + 8 * v41++);
      if (v42 == v39) {
        goto LABEL_43;
      }
    }
LABEL_35:

    if (v143)
    {
      uint64_t v12 = v135;
      Swift::Int v16 = v137;
      uint64_t v14 = v149;
      if (v31 < v137) {
        goto LABEL_189;
      }
      goto LABEL_57;
    }
LABEL_36:
    Swift::Int v32 = v31++;
    uint64_t v14 = v149;
    if (v31 == v142)
    {
      Swift::Int v31 = v142;
      goto LABEL_52;
    }
  }
  uint64_t v41 = 0;
LABEL_43:
  __int16 v43 = dispatch thunk of FavoriteItem.type.getter();
  if (v40 == v43)
  {
    uint64_t v44 = 0;
LABEL_49:

    if (((v143 ^ (v41 >= v44)) & 1) == 0)
    {
      uint64_t v12 = v135;
      uint64_t v14 = v149;
      goto LABEL_53;
    }
    goto LABEL_36;
  }
  uint64_t v44 = 0;
  while (1)
  {
    if (v34 == v44) {
      goto LABEL_35;
    }
    if (v35 == v44) {
      break;
    }
    uint64_t v45 = *(void *)(v141 + 8 * v44++);
    if (v45 == v43) {
      goto LABEL_49;
    }
  }
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_193:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_194:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_195:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_196:
  swift_bridgeObjectRelease_n();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002302C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_100356D7C(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_10022F834(v8, a2);
  swift_bridgeObjectRelease();
  specialized ContiguousArray._endMutation()();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100230374(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return _swift_task_switch(sub_100230394, 0, 0);
}

uint64_t sub_100230394()
{
  __int16 v26 = v0;
  uint64_t v1 = v0[9];
  sub_1000FF33C((uint64_t *)&unk_1015D5D60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CF80;
  *(_OWORD *)(inited + 32) = xmmword_100F65A60;
  *(void *)(inited + 48) = 2;
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    unint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t)sub_10034EC90(v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v25[0] = v3;
  sub_1002302C8(v25, inited);
  swift_bridgeObjectRelease();
  uint64_t v4 = v25[0];
  v0[10] = v25[0];
  swift_setDeallocating();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v5 = *(void *)(v4 + 16);
    swift_retain();
  }
  v0[11] = v5;
  uint64_t v6 = v0[10];
  if (v5)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v6 + 32);
    }
    uint64_t v9 = v7;
    v0[12] = v7;
    v0[13] = 1;
    if (qword_1015CBC78 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000F2248(v10, (uint64_t)qword_1016115E0);
    id v11 = v9;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      id v15 = [v11 description];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v18 = v17;

      *(void *)(v14 + 4) = sub_1000F2280(v16, v18, v25);
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Migration] moving favorite to front: %s", (uint8_t *)v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v19 = swift_task_alloc();
    v0[14] = v19;
    *(void *)(v19 + 16) = v11;
    id v20 = (void *)swift_task_alloc();
    v0[15] = v20;
    void *v20 = v0;
    v20[1] = sub_100230858;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v20, 0, 0, 0xD000000000000013, 0x8000000100F7E5F0, sub_100230F70, v19, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_release();
    type metadata accessor for MapsSyncStore();
    v0[17] = static MapsSyncStore.sharedStore.getter();
    if (v6 < 0 || (v6 & 0x4000000000000000) != 0)
    {
      type metadata accessor for MapsSyncObject();
      swift_bridgeObjectRetain();
      uint64_t v8 = _bridgeCocoaArray<A>(_:)();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for MapsSyncObject();
      uint64_t v8 = v0[10];
    }
    v0[18] = v8;
    swift_release();
    uint64_t v24 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
    id v21 = (void *)swift_task_alloc();
    v0[19] = v21;
    *id v21 = v0;
    v21[1] = sub_100230DC4;
    return v24(v8);
  }
}

uint64_t sub_100230858()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100230D48;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100230974;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100230974()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 88);

  if (v1 == v2)
  {
    uint64_t v3 = *(void *)(v0 + 80);
    swift_release();
    type metadata accessor for MapsSyncStore();
    *(void *)(v0 + 136) = static MapsSyncStore.sharedStore.getter();
    if (v3 < 0 || (v3 & 0x4000000000000000) != 0)
    {
      type metadata accessor for MapsSyncObject();
      swift_bridgeObjectRetain();
      uint64_t v4 = _bridgeCocoaArray<A>(_:)();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for MapsSyncObject();
      uint64_t v4 = *(void *)(v0 + 80);
    }
    *(void *)(v0 + 144) = v4;
    swift_release();
    unint64_t v22 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v8;
    void *v8 = v0;
    v8[1] = sub_100230DC4;
    return v22(v4);
  }
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 80);
  if ((v6 & 0xC000000000000001) != 0) {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v7 = *(id *)(v6 + 8 * v5 + 32);
  }
  uint64_t v10 = v7;
  *(void *)(v0 + 96) = v7;
  *(void *)(v0 + 104) = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if (qword_1015CBC78 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000F2248(v11, (uint64_t)qword_1016115E0);
  id v12 = v10;
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    id v16 = [v12 description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    *(void *)(v15 + 4) = sub_1000F2280(v17, v19, &v23);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Migration] moving favorite to front: %s", (uint8_t *)v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v20 = swift_task_alloc();
  *(void *)(v0 + 112) = v20;
  *(void *)(v20 + 16) = v12;
  id v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v21;
  *id v21 = v0;
  v21[1] = sub_100230858;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v21, 0, 0, 0xD000000000000013, 0x8000000100F7E5F0, sub_100230F70, v20, (char *)&type metadata for () + 8);
}

uint64_t sub_100230D48()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release_n();
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100230DC4()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100230F08, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[17];
    swift_bridgeObjectRelease();

    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_100230F08()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100230F70(uint64_t a1)
{
  sub_10022D70C(a1, *(void **)(v1 + 16));
}

uint64_t sub_100230F78()
{
  return sub_100006C98(&qword_1015DC490);
}

uint64_t sub_100230F84(uint64_t a1)
{
  sub_1000FF33C(&qword_1015DC490);

  return sub_10022D8B4(a1);
}

uint64_t sub_100231004()
{
  uint64_t v1 = sub_1000FF33C((uint64_t *)&unk_1015D5D70);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_1002310B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000FF33C((uint64_t *)&unk_1015D5D70) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10022DFC8(a1, a2, v2 + v6, *(uint64_t (**)(id))(v2 + v7), *(void **)(v2 + v7 + 8));
}

uint64_t sub_100231158()
{
  return sub_100006C98(&qword_1015D5D88);
}

uint64_t sub_100231164(uint64_t a1, uint64_t a2)
{
  return sub_10010EACC(a1, a2, &qword_1015D5D88, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10022D118);
}

uint64_t sub_100231188()
{
  return sub_100006C98((uint64_t *)&unk_1015D5DB0);
}

uint64_t sub_100231194()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002311D8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100231214()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100105268;
  v3[6] = v2;
  return _swift_task_switch(sub_10022A2A0, 0, 0);
}

uint64_t sub_1002312C0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10005056C;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1015D60F0 + dword_1015D60F0);
  return v6(a1, v4);
}

uint64_t sub_10023137C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002313BC()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100105268;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1015D5E20 + dword_1015D5E20);
  return v5(v2, v3);
}

uint64_t sub_100231474()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100105268;
  uint64_t v5 = (uint64_t (*)(char, void *))((char *)&dword_1015D5E40 + dword_1015D5E40);
  return v5(v2, v3);
}

uint64_t sub_100231534()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100231574()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100105268;
  unint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_1015D5E68 + dword_1015D5E68);
  return v6(v2, v3, v4);
}

unsigned char *sub_10023165C(unsigned char *a1)
{
  return sub_10010E808(a1);
}

unint64_t sub_100231678()
{
  unint64_t result = qword_1015D5EC8;
  if (!qword_1015D5EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5EC8);
  }
  return result;
}

uint64_t sub_1002316CC()
{
  return sub_1001010F8(&qword_1015D5ED0, &qword_1015D5ED8);
}

uint64_t sub_100231708()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611658);
  sub_1000F2248(v10, (uint64_t)qword_101611658);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1002319E0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611670);
  sub_1000F2248(v0, (uint64_t)qword_101611670);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100231A44()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611688);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611688);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100231AFC()
{
  uint64_t result = swift_getKeyPath();
  qword_1016116A0 = result;
  return result;
}

uint64_t sub_100231B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_100231B48, 0, 0);
}

uint64_t sub_100231B48()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBCF8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1016116A0;
  *(void *)(v0 + 80) = qword_1016116A0;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D5FD8, &qword_1015D5FE0);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_100231CA4;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_100231CA4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_100231DF8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100231DF8()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_1016116A0;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_100231ED4()
{
  if (qword_1015CBCF8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100231F34()
{
  unint64_t result = qword_1015D5EE0;
  if (!qword_1015D5EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5EE0);
  }
  return result;
}

unint64_t sub_100231F8C()
{
  unint64_t result = qword_1015D5EE8;
  if (!qword_1015D5EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5EE8);
  }
  return result;
}

uint64_t sub_100231FE0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100232014()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100232064@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBCE8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611670, a1);
}

uint64_t sub_10023209C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBCF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611688);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_100232118(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_100231B48, 0, 0);
}

uint64_t sub_1002321CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002330B8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1002321F4()
{
  return 0xD000000000000028;
}

unint64_t sub_100232214()
{
  unint64_t result = qword_1015D5EF8;
  if (!qword_1015D5EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5EF8);
  }
  return result;
}

unint64_t sub_10023226C()
{
  unint64_t result = qword_1015D5F00;
  if (!qword_1015D5F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F00);
  }
  return result;
}

unint64_t sub_1002322C4()
{
  unint64_t result = qword_1015D5F08;
  if (!qword_1015D5F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F08);
  }
  return result;
}

unint64_t sub_10023231C()
{
  unint64_t result = qword_1015D5F10;
  if (!qword_1015D5F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F10);
  }
  return result;
}

unint64_t sub_100232374()
{
  unint64_t result = qword_1015D5F18;
  if (!qword_1015D5F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F18);
  }
  return result;
}

unint64_t sub_1002323CC()
{
  unint64_t result = qword_1015D5F20;
  if (!qword_1015D5F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F20);
  }
  return result;
}

uint64_t sub_100232420(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100232440, 0, 0);
}

uint64_t sub_100232440()
{
  uint64_t v1 = qword_101603090[0];
  uint64_t v2 = &stru_1012DE970;
  if (v1 != -1) {
    dispatch_once(qword_101603090, &stru_1012DE970);
  }

  id v3 = (id)qword_101603088;
  uint64_t v4 = [v3 path];
  id v5 = (id)_CFPreferencesCopyAppValueWithContainer();

  if (v5)
  {
    if ((_GEOConfigHasValue() & 1) == 0)
    {
      [v5 BOOLValue];
      GEOConfigSetBOOL();
    }
    uint64_t v6 = +[MSPMapsPaths mapsApplicationContainerPaths];
    [v6 homeDirectory];
    _CFPreferencesSetValueWithContainer();

    unsigned __int8 BOOL = [v5 BOOLValue];
  }
  else
  {
    unsigned __int8 BOOL = GEOConfigGetBOOL();
  }
  unsigned __int8 v8 = BOOL;
  uint64_t v9 = *(unsigned __int8 **)(v0 + 16);

  *uint64_t v9 = v8;
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1002325E0(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100232604, 0, 0);
}

uint64_t sub_100232604()
{
  GEOConfigSetSyncBOOL();
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1002326A4()
{
  unint64_t result = qword_1015D5F28;
  if (!qword_1015D5F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F28);
  }
  return result;
}

unint64_t sub_1002326FC()
{
  unint64_t result = qword_1015D5F30;
  if (!qword_1015D5F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F30);
  }
  return result;
}

unint64_t sub_100232754()
{
  unint64_t result = qword_1015D5F38;
  if (!qword_1015D5F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F38);
  }
  return result;
}

unint64_t sub_1002327AC()
{
  unint64_t result = qword_1015D5F40;
  if (!qword_1015D5F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F40);
  }
  return result;
}

uint64_t sub_100232800@<X0>(uint64_t *a1@<X8>)
{
  sub_100232A4C();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100232840@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBCE0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611658, a1);
}

uint64_t sub_100232878()
{
  return sub_1001010F8(&qword_1015D5F48, &qword_1015D5F50);
}

uint64_t sub_1002328B4(uint64_t a1)
{
  unint64_t v2 = sub_100232214();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100232904()
{
  unint64_t result = qword_1015D5F58;
  if (!qword_1015D5F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F58);
  }
  return result;
}

uint64_t sub_100232958(uint64_t a1)
{
  unint64_t v2 = sub_100232A4C();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1002329A4(uint64_t a1)
{
  unint64_t v2 = sub_1002327AC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1002329F4()
{
  unint64_t result = qword_1015D5F60;
  if (!qword_1015D5F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F60);
  }
  return result;
}

unint64_t sub_100232A4C()
{
  unint64_t result = qword_1015D5F68[0];
  if (!qword_1015D5F68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D5F68);
  }
  return result;
}

uint64_t sub_100232AA0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100232B30, 0, 0);
}

uint64_t sub_100232B30()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D5ED8);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D5FD8, &qword_1015D5FE0);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100232C40(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10023226C();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100232CF4()
{
  unint64_t result = qword_1015D5F80;
  if (!qword_1015D5F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5F80);
  }
  return result;
}

unint64_t sub_100232D4C()
{
  unint64_t result = qword_1015D5F88[0];
  if (!qword_1015D5F88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D5F88);
  }
  return result;
}

uint64_t sub_100232DA0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10023226C();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100232E54(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10023226C();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100232F08()
{
  unint64_t result = qword_1015D5FA0;
  if (!qword_1015D5FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5FA0);
  }
  return result;
}

unint64_t sub_100232F60()
{
  unint64_t result = qword_1015D5FA8;
  if (!qword_1015D5FA8)
  {
    sub_10010118C(qword_1015D5FB0);
    sub_100232754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5FA8);
  }
  return result;
}

uint64_t sub_100232FD4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002323CC();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for DirectionsOnRadioQuery()
{
  return &type metadata for DirectionsOnRadioQuery;
}

ValueMetadata *type metadata accessor for DirectionsOnRadioEntity()
{
  return &type metadata for DirectionsOnRadioEntity;
}

ValueMetadata *type metadata accessor for DirectionsOnRadioEntity.UpdateIntent_value()
{
  return &type metadata for DirectionsOnRadioEntity.UpdateIntent_value;
}

uint64_t sub_1002330B8()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  os_log_type_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D5FE8);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  unint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  __int16 v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100232214();
  unint64_t v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_1002334F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100233508()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10023354C()
{
  return 1;
}

uint64_t sub_100233554(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v1);
  uint64_t v5 = sub_1002338A4(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)((char *)v2 + qword_1016116A8) - 8) + 8))(a1);
  return v5;
}

void *sub_1002335D4(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_100233618(a1, a2);
}

void *sub_100233618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + qword_1016116A8);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(a1);
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v12 - v7, v6);
  uint64_t v8 = (void *)UIHostingController.init(coder:rootView:)();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v10 = v8;
  v9(a2, v4);
  if (v8) {

  }
  return v8;
}

id sub_100233750(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecureHostingController();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id sub_1002337E8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100233750(a3);
}

id sub_100233810()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureHostingController();
  return [super dealloc];
}

uint64_t type metadata accessor for SecureHostingController()
{
  return sub_1000F5520();
}

uint64_t sub_1002338A4(uint64_t a1)
{
  __n128 v1 = __chkstk_darwin(a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)&v5 - v2, v1);
  return UIHostingController.init(rootView:)();
}

void sub_100233AB0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)&v3[OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId];
  uint64_t v11 = *(void *)&v3[OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId + 8];
  swift_bridgeObjectRetain();
  if (v12 == Handle.identifier.getter() && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_14:
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
    id v21 = (void *)swift_allocObject();
    void v21[2] = 0;
    v21[3] = 0;
    v21[4] = v4;
    v21[5] = a1;
    v21[6] = a2;
    v21[7] = a3;
    id v22 = v4;
    id v23 = a1;
    swift_retain();
    sub_100042AF4((uint64_t)v10, (uint64_t)&unk_1015D6118, (uint64_t)v21);
    swift_release();
    return;
  }
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000F2248(v16, (uint64_t)qword_1016117D8);
  os_log_t v25 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v17, "SearchFindMyFriendshipCoordinator handle identifier and passed handle do not match", v18, 2u);
    swift_slowDealloc();
  }
  os_log_t v19 = v25;
}

uint64_t sub_100233D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[29] = a6;
  v7[30] = a7;
  v7[27] = a4;
  v7[28] = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  v7[31] = v8;
  v7[32] = *(void *)(v8 - 8);
  v7[33] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  v7[34] = v9;
  v7[35] = *(void *)(v9 - 8);
  v7[36] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Location();
  v7[37] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v7[38] = v11;
  v7[39] = *(void *)(v11 + 64);
  v7[40] = swift_task_alloc();
  v7[41] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Handle();
  v7[42] = v12;
  v7[43] = *(void *)(v12 - 8);
  v7[44] = swift_task_alloc();
  sub_1000FF33C(&qword_1015D9920);
  v7[45] = swift_task_alloc();
  v7[46] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for ClientOrigin();
  v7[47] = v13;
  v7[48] = *(void *)(v13 - 8);
  v7[49] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v7[50] = swift_task_alloc();
  return _swift_task_switch(sub_100233FEC, 0, 0);
}

uint64_t sub_100233FEC()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0[27];
  (*(void (**)(void, void, void))(v0[48] + 104))(v0[49], enum case for ClientOrigin.other(_:), v0[47]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  uint64_t v2 = Session.init(_:)();
  uint64_t v3 = OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_session;
  *(void *)(v1 + OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_session) = v2;
  swift_release();
  uint64_t v4 = *(void *)(v1 + v3);
  v0[51] = v4;
  if (v4)
  {
    uint64_t v5 = qword_1015CBD60;
    swift_retain();
    if (v5 != -1) {
      swift_once();
    }
    __n128 v6 = (void *)v0[27];
    uint64_t v7 = type metadata accessor for Logger();
    v0[52] = sub_1000F2248(v7, (uint64_t)qword_1016117D8);
    id v8 = v6;
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = (char *)v0[27];
    if (v11)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v14 = *(void *)&v12[OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId];
      unint64_t v15 = *(void *)&v12[OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId + 8];
      swift_bridgeObjectRetain();
      v0[26] = sub_1000F2280(v14, v15, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "SearchFindMyFriendshipCoordinator: Calling FM to get fresh location for handle:%s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(void, uint64_t, void))(v0[43] + 16))(v0[44], v0[28] + OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle, v0[42]);
    GEOConfigGetDouble();
    double v23 = v22;
    uint64_t v24 = (void *)swift_task_alloc();
    v0[53] = v24;
    void *v24 = v0;
    v24[1] = sub_100234450;
    uint64_t v25 = v0[46];
    uint64_t v26 = v0[44];
    return Session._maps_latestLocation(for:includeAddress:timeout:)(v25, v26, 0, v23);
  }
  else
  {
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1000F2248(v16, (uint64_t)qword_1016117D8);
    os_log_type_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "SearchFindMyFriendshipCoordinator couldn't create a session.", v19, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_100234450()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  uint64_t v3 = *(void *)(*(void *)v1 + 344);
  uint64_t v4 = *(void *)(*(void *)v1 + 336);
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_100234CEC;
  }
  else {
    uint64_t v5 = sub_1002345C0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002345C0()
{
  Swift::Int v57 = v0;
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[38];
  sub_1000FF27C(v0[46], v1, &qword_1015D9920);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = v0[45];
  if (v4 == 1)
  {
    __n128 v6 = (void *)v0[27];
    sub_1000FF2E0(v5, &qword_1015D9920);
    id v7 = v6;
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    BOOL v11 = (char *)v0[27];
    if (v10)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v14 = *(void *)&v11[OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId];
      unint64_t v13 = *(void *)&v11[OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId + 8];
      swift_bridgeObjectRetain();
      v0[22] = sub_1000F2280(v14, v13, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v8, v9, "SearchFindMyFriendshipCoordinator couldn't find location for handle:%s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v55 = v0[46];
    uint64_t v25 = v0[35];
    uint64_t v24 = v0[36];
    uint64_t v26 = v0[33];
    uint64_t v54 = v0[34];
    uint64_t v28 = v0[31];
    uint64_t v27 = v0[32];
    uint64_t v30 = v0[29];
    uint64_t v29 = v0[30];
    sub_10010B3CC();
    Swift::Int v51 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v29;
    v0[19] = v31;
    v0[18] = sub_100237928;
    v0[14] = _NSConcreteStackBlock;
    v0[15] = 1107296256;
    v0[16] = sub_10008C380;
    v0[17] = &unk_1012DEB38;
    char v32 = _Block_copy(v0 + 14);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[21] = _swiftEmptyArrayStorage;
    sub_10010B9B0();
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010B554();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    swift_release();
    _Block_release(v32);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v54);
  }
  else
  {
    unint64_t v15 = (void *)v0[27];
    unint64_t v53 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0[38] + 32);
    v53(v0[41], v5, v0[37]);
    id v16 = v15;
    os_log_type_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = (char *)v0[27];
    if (v19)
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)id v21 = 136315138;
      uint64_t v22 = *(void *)&v20[OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId];
      unint64_t v23 = *(void *)&v20[OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId + 8];
      swift_bridgeObjectRetain();
      v0[25] = sub_1000F2280(v22, v23, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v17, v18, "SearchFindMyFriendshipCoordinator did find location for handle:%s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v55 = v0[46];
    uint64_t v34 = v0[40];
    uint64_t v33 = v0[41];
    uint64_t v35 = v0[38];
    uint64_t v36 = v0[37];
    uint64_t v45 = v0[36];
    uint64_t v50 = v0[35];
    uint64_t v52 = v0[34];
    uint64_t v47 = v0[33];
    uint64_t v48 = v33;
    uint64_t v37 = v0[31];
    uint64_t v49 = v0[32];
    uint64_t v39 = v0[29];
    uint64_t v38 = v0[30];
    sub_10010B3CC();
    __int16 v46 = (void *)static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v33, v36);
    unint64_t v40 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v39;
    *(void *)(v41 + 24) = v38;
    v53(v41 + v40, v34, v36);
    v0[13] = v41;
    v0[12] = sub_100237780;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_10008C380;
    v0[11] = &unk_1012DEB88;
    uint64_t v42 = _Block_copy(v0 + 8);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[24] = _swiftEmptyArrayStorage;
    sub_10010B9B0();
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010B554();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v42);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v37);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v45, v52);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v48, v36);
  }
  sub_1000FF2E0(v55, &qword_1015D9920);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  __int16 v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_100234CEC()
{
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    int v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[20] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *int v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "SearchFindMyFriendshipCoordinator encountered error:%@.", v3, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[36];
  uint64_t v17 = v0[35];
  uint64_t v7 = v0[33];
  uint64_t v18 = v0[34];
  uint64_t v8 = v0[31];
  uint64_t v9 = v0[32];
  uint64_t v10 = v0[29];
  uint64_t v11 = v0[30];

  sub_10010B3CC();
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  *(void *)(v13 + 24) = v11;
  v0[6] = sub_100237688;
  v0[7] = v13;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10008C380;
  v0[5] = &unk_1012DEAE8;
  uint64_t v14 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[23] = _swiftEmptyArrayStorage;
  sub_10010B9B0();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v6, v18);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

void sub_100235060(void (*a1)(id), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Location();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v10(v9, a3, v5, v7);
  MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
  uint64_t v12 = (char *)objc_allocWithZone(MyLocation);
  UUID.init()();
  ((void (*)(char *, char *, uint64_t))v10)(&v12[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], v9, v5);

  v14.receiver = v12;
  v14.super_class = MyLocation;
  [super init];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  a1(v13);
}

uint64_t sub_100235280()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1000FF2E0((uint64_t)v3, &qword_1015CD250);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1015D60E8;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    void v14[2] = v9;
    void v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1002354C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[6] = a4;
  uint64_t v5 = type metadata accessor for Friend();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FriendStreamChange();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  sub_1000FF33C(&qword_1015D60F8);
  v4[13] = swift_task_alloc();
  uint64_t v7 = sub_1000FF33C(&qword_1015D6100);
  v4[14] = v7;
  v4[15] = *(void *)(v7 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v8 = sub_1000FF33C(&qword_1015D60D8);
  v4[17] = v8;
  v4[18] = *(void *)(v8 - 8);
  v4[19] = swift_task_alloc();
  sub_1000FF33C(&qword_1015D6108);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ClientOrigin();
  v4[22] = v9;
  v4[23] = *(void *)(v9 - 8);
  v4[24] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v4[25] = swift_task_alloc();
  return _swift_task_switch(sub_100235794, 0, 0);
}

uint64_t sub_100235794()
{
  uint64_t v1 = v0[6];
  (*(void (**)(void, void, void))(v0[23] + 104))(v0[24], enum case for ClientOrigin.other(_:), v0[22]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  uint64_t v2 = Session.init(_:)();
  uint64_t v3 = OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_session;
  *(void *)(v1 + OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_session) = v2;
  swift_release();
  uint64_t v4 = *(void *)(v1 + v3);
  v0[26] = v4;
  if (v4)
  {
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[27] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100235A20;
    uint64_t v6 = v0[21];
    return Session.startUpdatingFriends(receiveInitialUpdates:)(v6, 1);
  }
  else
  {
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000F2248(v7, (uint64_t)qword_1016117D8);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "SearchFindMyFriendshipCoordinator couldn't create a session.", v10, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_100235A20()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002362C8;
  }
  else {
    uint64_t v2 = sub_100235B34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100235B34()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  uint64_t v6 = v5 + OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_updateStream;
  swift_beginAccess();
  sub_1002374FC(v1, v6);
  swift_endAccess();
  sub_1000FF27C(v6, v2, &qword_1015D6108);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000FF2E0(*(void *)(v0 + 160), &qword_1015D6108);
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000F2248(v7, (uint64_t)qword_1016117D8);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "SearchFindMyFriendshipCoordinator did not receive a stream.", v10, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 144) + 32))(*(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 136));
    AsyncStream.makeAsyncIterator()();
    int v11 = enum case for FriendStreamChange.removed(_:);
    *(_DWORD *)(v0 + 240) = enum case for FriendStreamChange.added(_:);
    *(_DWORD *)(v0 + 244) = v11;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100235E58;
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 112);
    return AsyncStream.Iterator.next(isolation:)(v13, 0, 0, v14);
  }
}

uint64_t sub_100235E58()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100235F54, 0, 0);
}

uint64_t sub_100235F54()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    int v12 = *(_DWORD *)(v0 + 240);
    uint64_t v13 = *(void *)(v0 + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v13, v1, v2);
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v13, v2);
    if (v14 == v12)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
    }
    else if (v14 == *(_DWORD *)(v0 + 244))
    {
      uint64_t v15 = *(void *)(v0 + 96);
      uint64_t v16 = *(void *)(v0 + 72);
      uint64_t v17 = *(void *)(v0 + 56);
      uint64_t v18 = *(void *)(v0 + 64);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 88) + 96))(v15, *(void *)(v0 + 80));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v16, v15, v17);
      sub_100236D28(v16);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    }
    else
    {
      if (qword_1015CBD60 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_1000F2248(v19, (uint64_t)qword_1016117D8);
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "SearchFindMyFriendshipCoordinator received unhandled friendship event", v22, 2u);
        swift_slowDealloc();
      }
      uint64_t v24 = *(void *)(v0 + 88);
      uint64_t v23 = *(void *)(v0 + 96);
      uint64_t v25 = *(void *)(v0 + 80);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_100235E58;
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v28 = *(void *)(v0 + 112);
    return AsyncStream.Iterator.next(isolation:)(v27, 0, 0, v28);
  }
}

uint64_t sub_1002362C8()
{
  swift_release();
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016117D8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 40) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SearchFindMyFriendshipCoordinator: encountered error: %@ when monitoring handles", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100236578()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100236598, 0, 0);
}

uint64_t sub_100236598()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_session);
  v0[4] = v1;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[5] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10023667C;
    return Session.stopUpdatingFriends()();
  }
  else
  {
    os_log_type_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_10023667C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1002367B8, 0, 0);
  }
  else
  {
    swift_release();
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1002367B8()
{
  swift_release();
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016117D8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SearchFindMyFriendshipCoordinator: encountered error: %@ when stopped monitoring handles.", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100236B2C(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100236BF0;
  v5[3] = v4;
  return _swift_task_switch(sub_100236598, 0, 0);
}

uint64_t sub_100236BF0()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  os_log_type_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_100236D28(uint64_t a1)
{
  uint64_t v46 = type metadata accessor for Friend();
  uint64_t v42 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  id v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Handle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v43 = v1;
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC4Maps33SearchFindMyFriendshipCoordinator_handleId + 8);
  swift_bridgeObjectRetain();
  Friend.handle.getter();
  uint64_t v13 = Handle.identifier.getter();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v45 = v5;
  v16(v10, v5);
  if (v12 == v13 && v11 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      return result;
    }
  }
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_1000F2248(v20, (uint64_t)qword_1016117D8);
  uint64_t v21 = v42;
  uint64_t v22 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v4, a1, v46);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v41 = a1;
    uint64_t v26 = (uint8_t *)v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v48 = v40;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v39 = v26 + 4;
    uint64_t v27 = v16;
    uint64_t v28 = v44;
    Friend.handle.getter();
    uint64_t v29 = Handle.identifier.getter();
    uint64_t v38 = v4;
    unint64_t v31 = v30;
    char v32 = v28;
    uint64_t v16 = v27;
    v27(v32, v45);
    uint64_t v47 = sub_1000F2280(v29, v31, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v38, v46);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Found a handle that was removed; identifier: %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v22);
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v33 = (void *)result;
    uint64_t v34 = v16;
    uint64_t v35 = v44;
    Friend.handle.getter();
    Handle.identifier.getter();
    v34(v35, v45);
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v33 searchFindMyFriendDidRemoveHandleWithIdentifier:v36];

    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1002371CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchFindMyFriendshipCoordinator();
  return [super dealloc];
}

uint64_t sub_100237270()
{
  return type metadata accessor for SearchFindMyFriendshipCoordinator();
}

uint64_t type metadata accessor for SearchFindMyFriendshipCoordinator()
{
  uint64_t result = qword_1015D60B8;
  if (!qword_1015D60B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002372C4()
{
  sub_100237374();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100237374()
{
  if (!qword_1015D60D0)
  {
    sub_10010118C(&qword_1015D60D8);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015D60D0);
    }
  }
}

uint64_t sub_1002373D0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100237410(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100105268;
  return sub_1002354C0(a1, v4, v5, v6);
}

uint64_t sub_1002374C4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002374FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D6108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100237564()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002375B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10005056C;
  return sub_100233D34(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100237688()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1002376B4()
{
  uint64_t v1 = type metadata accessor for Location();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100237780()
{
  uint64_t v1 = *(void *)(type metadata accessor for Location() - 8);
  uint64_t v2 = *(void (**)(id))(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_100235060(v2, v3, v4);
}

uint64_t sub_1002377E4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100237824()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100105268;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1015D6120 + dword_1015D6120);
  return v5(v2, v3);
}

uint64_t sub_1002378D8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void *PlaceCardLibraryOperationsCoordinator.mapItem.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_mapItem);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void PlaceCardLibraryOperationsCoordinator.mapItem.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_mapItem);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;
  sub_100237ABC(v4);
}

uint64_t sub_100237ABC(void *a1)
{
  id v3 = (id *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_mapItem);
  swift_beginAccess();
  if (*v3 && [*v3 _geoMapItem])
  {
    if (a1 && [a1 _geoMapItem])
    {
      if (!GEOMapItemIsEqualToMapItemForPurpose())
      {
        uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
        swift_beginAccess();
        *uint64_t v4 = 0;
        sub_100237F08();
        uint64_t v5 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress;
        *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) = 0;
        *(void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary) = 0;
        swift_unknownObjectRelease();
        id v6 = *v3;
        if (*v3)
        {
          if ((*(unsigned char *)(v1 + v5) & 1) == 0)
          {
            *(unsigned char *)(v1 + v5) = 1;
            uint64_t v7 = swift_allocObject();
            swift_unknownObjectWeakInit();
            id v8 = v6;
            sub_1002E5DBC(v8, v7);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
LABEL_13:

            return swift_release();
          }
        }
        else
        {
          *uint64_t v4 = 0;
          sub_100237F08();
        }
      }
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  uint64_t v9 = (void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
  swift_beginAccess();
  *uint64_t v9 = 0;
  sub_100237F08();
  uint64_t v10 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary) = 0;
  uint64_t result = swift_unknownObjectRelease();
  id v12 = *v3;
  if (*v3)
  {
    if (*(unsigned char *)(v1 + v10)) {
      return result;
    }
    *(unsigned char *)(v1 + v10) = 1;
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v8 = v12;
    sub_1002E5DBC(v8, v13);
    goto LABEL_13;
  }
  *uint64_t v9 = 0;
  return sub_100237F08();
}

void (*PlaceCardLibraryOperationsCoordinator.mapItem.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_mapItem;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = (void **)(v1 + v4);
  swift_beginAccess();
  id v6 = *v5;
  v3[3] = *v5;
  id v7 = v6;
  return sub_100237D74;
}

void sub_100237D74(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = (void **)(*(void *)a1 + 24);
  id v3 = *v4;
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  id v7 = *(void **)(v6 + v5);
  *(void *)(v6 + v5) = *v4;
  if (a2)
  {
    id v8 = v3;
    sub_100237ABC(v7);

    id v7 = *v4;
  }
  else
  {
    id v9 = v3;
    sub_100237ABC(v7);
  }

  free(v2);
}

uint64_t PlaceCardLibraryOperationsCoordinator.savedStateOfPlace.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_100237F08()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateObservers;
  uint64_t v2 = &selRef_alertStyle;
  id v3 = [*(id *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateObservers) allObservers];
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = &unk_1015D6000;
  if (v5)
  {
    id v7 = (void *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
    uint64_t v8 = v4 + 32;
    swift_beginAccess();
    do
    {
      sub_1000F2354(v8, (uint64_t)v22);
      sub_1000FF33C(&qword_1015D6168);
      if (swift_dynamicCast())
      {
        [v21 libraryAccessProvider:v0 savedStateOfPlaceDidChange:*v7 == 1];
        swift_unknownObjectRelease();
      }
      v8 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)&unk_1015D6000;
    uint64_t v2 = &selRef_alertStyle;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v9 = [*(id *)(v0 + v1) v2[39]];
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    id v12 = (void *)(v0 + v6[39]);
    uint64_t v13 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary;
    uint64_t v14 = v10 + 32;
    swift_beginAccess();
    uint64_t v15 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
    uint64_t v19 = v0;
    do
    {
      sub_1000F2354(v14, (uint64_t)v22);
      sub_1000FF33C(&qword_1015D6168);
      if (swift_dynamicCast())
      {
        if (*v12 == 1 && (uint64_t v17 = *(void **)(v0 + v13)) != 0)
        {
          NSString v16 = [v17 placeItemNote];
          if (v16)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v0 = v19;
            NSString v16 = String._bridgeToObjectiveC()();
            uint64_t v15 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          NSString v16 = 0;
        }
        [v20 v15[143] v0 v16];
        swift_unknownObjectRelease();
      }
      v14 += 32;
      --v11;
    }
    while (v11);
  }
  return swift_bridgeObjectRelease();
}

uint64_t PlaceCardLibraryOperationsCoordinator.viewControllerForPresentingAlert.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void PlaceCardLibraryOperationsCoordinator.viewControllerForPresentingAlert.setter(void *a1)
{
}

void (*PlaceCardLibraryOperationsCoordinator.viewControllerForPresentingAlert.modify(void *a1))(id **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_viewControllerForPresentingAlert;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_100238394;
}

void sub_100238394(id **a1, char a2)
{
  id v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

uint64_t PlaceCardLibraryOperationsCoordinator.placeNote.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
  swift_beginAccess();
  uint64_t v2 = 0;
  if (*v1 == 1)
  {
    id v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary);
    if (v3 && (id v4 = [v3 placeItemNote]) != 0)
    {
      uint64_t v5 = v4;
      uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

BOOL PlaceCardLibraryOperationsCoordinator.isPinned.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary)) {
    return 0;
  }
  type metadata accessor for FavoriteItem();
  return swift_dynamicCastClass() != 0;
}

uint64_t PlaceCardLibraryOperationsCoordinator.syncObject.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary)) {
    return 0;
  }
  type metadata accessor for MapsSyncObject();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1) {
    swift_unknownObjectRetain();
  }
  return v1;
}

id sub_1002386A0()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_mapItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateObservers;
  id v2 = objc_allocWithZone((Class)GEOObserverHashTable);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 initWithProtocol:&OBJC_PROTOCOL___MULibraryAccessProviderObserver queue:0];
  v3[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress] = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_dataOperationsProvider;
  type metadata accessor for MapsSyncStore();
  uint64_t v5 = static MapsSyncStore.sharedStore.getter();
  uint64_t v6 = (objc_class *)type metadata accessor for LibraryDataOperationsProvider();
  id v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = v5;
  v15.receiver = v7;
  v15.super_class = v6;
  *(void *)&v3[v4] = [v15 init];
  *(void *)&v3[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary] = 0;
  uint64_t v8 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_storeSubscriptionTypes;
  sub_100028D98();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100F5CF80;
  *(void *)(v9 + 32) = type metadata accessor for FavoriteItem();
  *(void *)(v9 + 40) = type metadata accessor for CollectionPlaceItem();
  *(void *)(v9 + 48) = type metadata accessor for Collection();
  *(void *)&v3[v8] = v9;

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for PlaceCardLibraryOperationsCoordinator();
  id v10 = [super init];
  uint64_t v11 = (void *)static MapsSyncStore.sharedStore.getter();
  id v12 = v10;
  dispatch thunk of MapsSyncStore.subscribe(_:)();

  return v12;
}

id PlaceCardLibraryOperationsCoordinator.__deallocating_deinit()
{
  uint64_t v1 = v0;
  type metadata accessor for MapsSyncStore();
  id v2 = (void *)static MapsSyncStore.sharedStore.getter();
  id v3 = v1;
  dispatch thunk of MapsSyncStore.unsubscribe(_:)();

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PlaceCardLibraryOperationsCoordinator();
  return [super dealloc];
}

void sub_1002389DC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v5 = (char *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) = 0;
    if (a2)
    {
      uint64_t v6 = (void *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
      swift_beginAccess();
      *uint64_t v6 = 0;
    }
    else
    {
      *(void *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary) = a1;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      if (a1) {
        uint64_t v7 = 1;
      }
      else {
        uint64_t v7 = 2;
      }
      uint64_t v8 = (uint64_t *)&v5[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace];
      swift_beginAccess();
      uint64_t *v8 = v7;
    }
    sub_100237F08();
  }
}

uint64_t sub_100238AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void **)(v4 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_mapItem);
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *v9;
  if (*v9)
  {
    if ((*(unsigned char *)(v4 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) & 1) == 0)
    {
      *(unsigned char *)(v4 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) = 1;
      id v12 = (void *)(v4 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
      swift_beginAccess();
      *id v12 = 1;
      id v13 = v11;
      sub_100237F08();
      objc_super v14 = *(void **)(v4 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_dataOperationsProvider);
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_bridgeObjectRetain();
      swift_retain();
      id v16 = v13;
      id v17 = v14;
      swift_bridgeObjectRetain();
      sub_1002E61A0(v16, (uint64_t)sub_100239A14, v15, v17, v16, a1, a2, a3, a4);
      swift_release_n();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v18 = (void *)(v4 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
    swift_beginAccess();
    *char v18 = 0;
    return sub_100237F08();
  }
  return result;
}

void sub_100238C68(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v5 = (char *)Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) == 1)
    {
      *(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) = 0;
      if (a2)
      {
        uint64_t v6 = (void *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
        swift_beginAccess();
        *uint64_t v6 = 0;
      }
      else
      {
        *(void *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary) = a1;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        if (a1) {
          uint64_t v7 = 1;
        }
        else {
          uint64_t v7 = 2;
        }
        uint64_t v8 = (uint64_t *)&v5[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace];
        swift_beginAccess();
        uint64_t *v8 = v7;
      }
      sub_100237F08();
    }
  }
}

Swift::Void __swiftcall PlaceCardLibraryOperationsCoordinator.addPlaceToLibrary(customName:)(Swift::String_optional customName)
{
}

Swift::Void __swiftcall PlaceCardLibraryOperationsCoordinator.deletePlaceFromLibrary()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary);
  if (v1)
  {
    uint64_t v2 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress;
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) & 1) == 0)
    {
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v4 = (void *)Strong;
        *(unsigned char *)(v0 + v2) = 1;
        uint64_t v5 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_unknownObjectRetain();
        swift_retain();
        sub_1002DD9E0(v1, v4, (uint64_t)sub_1002395F4, v5);
        swift_unknownObjectRelease();

        swift_release_n();
      }
    }
  }
}

void sub_100238EF4(char a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    if (Strong[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress] != 1
      || (Strong[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress] = 0, (a1 & 1) != 0)
      || a2)
    {
    }
    else
    {
      uint64_t v6 = &Strong[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace];
      swift_beginAccess();
      *(void *)uint64_t v6 = 2;
      sub_100237F08();
      *(void *)&v5[OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary] = 0;

      swift_unknownObjectRelease();
    }
  }
}

Swift::Void __swiftcall PlaceCardLibraryOperationsCoordinator.updatePlaceNote(to:)(Swift::String_optional to)
{
  uint64_t v2 = v1;
  uint64_t object = to.value._object;
  uint64_t countAndFlagsBits = to.value._countAndFlagsBits;
  uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
  swift_beginAccess();
  if (*v5 == 2)
  {
    if (object) {
      uint64_t v14 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v14 = 0;
    }
    if (object) {
      unint64_t v15 = (unint64_t)object;
    }
    else {
      unint64_t v15 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v14;
    }
    if (v16) {
      sub_100238AC8(0, 0, countAndFlagsBits, (uint64_t)object);
    }
  }
  else if (*v5 == 1)
  {
    uint64_t v6 = OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary;
    if (*(void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_placeItemInLibrary))
    {
      swift_unknownObjectRetain();
      if (sub_1002DDB28(countAndFlagsBits, object))
      {
        id v7 = [*(id *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateObservers) allObservers];
        uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v9 = *(void *)(v8 + 16);
        if (v9)
        {
          uint64_t v17 = v8;
          uint64_t v10 = v8 + 32;
          uint64_t v11 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
          do
          {
            sub_1000F2354(v10, (uint64_t)v19);
            sub_1000FF33C(&qword_1015D6168);
            if (swift_dynamicCast())
            {
              if (*v5 == 1 && (id v13 = *(void **)(v2 + v6)) != 0)
              {
                NSString v12 = [v13 placeItemNote];
                if (v12)
                {
                  static String._unconditionallyBridgeFromObjectiveC(_:)();

                  NSString v12 = String._bridgeToObjectiveC()();
                  uint64_t v11 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
                  swift_bridgeObjectRelease();
                }
              }
              else
              {
                NSString v12 = 0;
              }
              [v18 v11[143] v2 v12 v17];
              swift_unknownObjectRelease();
            }
            v10 += 32;
            --v9;
          }
          while (v9);
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

id PlaceCardLibraryOperationsCoordinator.register(_:)(uint64_t a1)
{
  return [*(id *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateObservers) registerObserver:a1];
}

id PlaceCardLibraryOperationsCoordinator.unregisterObserver(_:)(uint64_t a1)
{
  return [*(id *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateObservers) unregisterObserver:a1];
}

uint64_t PlaceCardLibraryOperationsCoordinator.storeSubscriptionTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlaceCardLibraryOperationsCoordinator.storeSubscriptionTypes.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_storeSubscriptionTypes);
  swift_beginAccess();
  *id v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*PlaceCardLibraryOperationsCoordinator.storeSubscriptionTypes.modify())()
{
  return j__swift_endAccess;
}

uint64_t type metadata accessor for PlaceCardLibraryOperationsCoordinator()
{
  return self;
}

uint64_t sub_1002395BC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002395F4(char a1, uint64_t a2)
{
}

uint64_t (*sub_1002395FC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  id v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *id v3 = v4;
    return sub_100239A1C;
  }
  __break(1u);
  return result;
}

void (*sub_10023967C(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return destroy for PlaceSummaryView;
  }
  __break(1u);
  return result;
}

void (*sub_1002396FC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return destroy for PlaceSummaryView.Autocomplete;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_10023977C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  id v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *id v3 = v4;
    return sub_1002397FC;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002397FC()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_100239804(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  id v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *id v3 = v4;
    return sub_100239884;
  }
  __break(1u);
  return result;
}

uint64_t sub_100239884()
{
  return swift_release();
}

uint64_t _s4Maps37PlaceCardLibraryOperationsCoordinatorC14storeDidChange5typesySaySSG_tF_0()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_mapItem);
  uint64_t result = swift_beginAccess();
  id v3 = *v1;
  if (*v1)
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) & 1) == 0)
    {
      *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) = 1;
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v5 = v3;
      sub_1002E5DBC(v5, v4);

      return swift_release();
    }
  }
  else
  {
    uint64_t v6 = (void *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
    swift_beginAccess();
    *uint64_t v6 = 0;
    return sub_100237F08();
  }
  return result;
}

uint64_t sub_100239964@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1002399B8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
  swift_beginAccess();
  *id v3 = v2;
  return sub_100237F08();
}

void sub_100239A14(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100239B98(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  id v7 = (uint64_t (*)(id))((char *)&dword_1015D6210 + dword_1015D6210);
  id v4 = a1;
  id v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *id v5 = v2;
  v5[1] = sub_100239C60;
  return v7(v4);
}

uint64_t sub_100239C60(void *a1)
{
  id v3 = *(void (***)(void, void))(*v1 + 24);
  id v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  ((void (**)(void, void *))v3)[2](v3, a1);
  _Block_release(v3);

  id v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_100239DAC()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100239DEC()
{
  uint64_t v2 = *(void **)(v0 + 16);
  id v3 = *(void **)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_10005056C;
  id v5 = (uint64_t (*)(void *, void *))((char *)&dword_1015D6200 + dword_1015D6200);
  return v5(v2, v3);
}

uint64_t sub_100239EA0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1016116C0);
  sub_1000F2248(v0, (uint64_t)qword_1016116C0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100239F2C(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v2 = type metadata accessor for Location();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  sub_1000FF33C(&qword_1015D9920);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ClientOrigin();
  v1[21] = v3;
  v1[22] = *(void *)(v3 - 8);
  v1[23] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v1[24] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Handle();
  v1[25] = v4;
  v1[26] = *(void *)(v4 - 8);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  return _swift_task_switch(sub_10023A160, 0, 0);
}

uint64_t sub_10023A160()
{
  id v1 = [v0[5].receiver stringForKey:@"MapsSuggestionsContactLikelyAppleIDKey"];
  if (v1)
  {
    uint64_t v2 = v1;
    Class super_class = v0[13].super_class;
    id receiver = v0[14].receiver;
    Class v6 = v0[12].super_class;
    id v5 = v0[13].receiver;
    uint64_t v23 = (void (**)(Class, void, Class))v0[11].receiver;
    Class v24 = v0[11].super_class;
    Class v25 = v0[10].super_class;
    id v26 = v0[6].receiver;
    id v27 = v0[10].receiver;
    Class v28 = v0[5].super_class;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10030D804((uint64_t)_swiftEmptyArrayStorage);
    Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)();
    uint64_t v7 = (void (*)(Class, id, Class))v5[2];
    v7(super_class, receiver, v6);
    MyHandle = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
    uint64_t v9 = (char *)objc_allocWithZone(MyHandle);
    UUID.init()();
    v7((Class)&v9[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], super_class, v6);

    v0[1].id receiver = v9;
    v0[1].Class super_class = MyHandle;
    v0[14].Class super_class = (Class)objc_msgSendSuper2(v0 + 1, "init");
    uint64_t v10 = (void (*)(void, void))v5[1];
    v0[15].id receiver = v10;
    v0[15].Class super_class = (Class)((unint64_t)(v5 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    v10(super_class, v6);
    v23[13](v24, enum case for ClientOrigin.other(_:), v25);
    RequestOrigin.init(_:)();
    type metadata accessor for Session();
    swift_allocObject();
    v0[16].id receiver = (id)Session.init(_:)();
    uint64_t v11 = (objc_class *)*((void *)v26 + 7);
    v0[16].Class super_class = v11;
    v0[17].id receiver = (id)(((unint64_t)v26 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    ((void (*)(id, uint64_t, uint64_t, Class))v11)(v27, 1, 1, v28);
    GEOConfigGetDouble();
    double v13 = v12;
    uint64_t v14 = (objc_class *)swift_task_alloc();
    v0[17].Class super_class = v14;
    *(void *)uint64_t v14 = v0;
    *((void *)v14 + 1) = sub_10023A5A4;
    uint64_t v15 = (uint64_t)v0[14].receiver;
    uint64_t v16 = (uint64_t)v0[9].super_class;
    return Session._maps_location(for:reverseGeocode:maxAge:)(v16, v15, 0, v13);
  }
  else
  {
    if (qword_1015CBD00 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000F2248(v18, (uint64_t)qword_1016116C0);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Entry does not have a value for MapsSuggestionsContactLikelyAppleIDKey. Returning.", v21, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0->super_class;
    return v22(0);
  }
}

uint64_t sub_10023A5A4()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = sub_10023B7D8;
  }
  else
  {
    uint64_t v2 = sub_10023A6C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10023A6C0()
{
  uint64_t v81 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1001DA104(v1);
    if (qword_1015CBD00 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    *(void *)(v0 + 296) = sub_1000F2248(v4, (uint64_t)qword_1016116C0);
    id v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unable to get cached location from Find My", v7, 2u);
      swift_slowDealloc();
    }

    GEOConfigGetDouble();
    double v9 = v8;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 304) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10023AF38;
    uint64_t v11 = *(void *)(v0 + 224);
    uint64_t v12 = *(void *)(v0 + 144);
    return Session._maps_latestLocation(for:includeAddress:timeout:)(v12, v11, 0, v9);
  }
  else
  {
    uint64_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 264);
    uint64_t v15 = *(void *)(v0 + 160);
    uint64_t v16 = *(void *)(v0 + 128);
    sub_1001DA104(v15);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v17(v16, v1, v2);
    v17(v15, v16, v2);
    v14(v15, 0, 1, v2);
    uint64_t v18 = *(void *)(v0 + 288);
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 96);
    sub_1001DA09C(*(void *)(v0 + 160), v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      uint64_t v23 = *(void **)(v0 + 232);
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
      uint64_t v24 = *(void *)(v0 + 224);
      uint64_t v25 = *(void *)(v0 + 200);
      uint64_t v26 = *(void *)(v0 + 160);
      uint64_t v27 = *(void *)(v0 + 136);
      swift_release();

      sub_1001DA104(v26);
      v22(v24, v25);
      sub_1001DA104(v27);
      char v78 = 0;
    }
    else
    {
      uint64_t v72 = v18;
      id v74 = *(id *)(v0 + 80);
      uint64_t v75 = *(void **)(v0 + 232);
      Class v28 = *(char **)(v0 + 104);
      uint64_t v29 = *(void *)(v0 + 112);
      uint64_t v31 = *(void *)(v0 + 88);
      uint64_t v30 = *(void *)(v0 + 96);
      (*(void (**)(uint64_t, void, uint64_t))(v30 + 32))(v29, *(void *)(v0 + 136), v31);
      char v32 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
      v32(v28, v29, v31);
      MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
      uint64_t v34 = (char *)objc_allocWithZone(MyLocation);
      UUID.init()();
      v32(&v34[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], (uint64_t)v28, v31);

      *(void *)(v0 + 32) = v34;
      *(void *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = MyLocation;
      [v0 init];
      NSString v36 = *(void (**)(char *, uint64_t))(v30 + 8);
      v36(v28, v31);
      MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
      uint64_t v38 = (char *)objc_allocWithZone(MyLocationHandle);
      uint64_t v39 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
      *(void *)&v38[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
      *(void *)&v38[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v75;
      uint64_t v40 = *(void **)&v38[v39];
      *(void *)&v38[v39] = v35;
      id v41 = v75;
      id v42 = v35;
      id v43 = v41;
      id v44 = v42;

      *(void *)(v0 + 48) = v38;
      *(void *)(v0 + 56) = MyLocationHandle;
      uint64_t v45 = (objc_super *)[v0 super init];
      uint64_t v76 = v44;

      id v46 = [v74 dataForKey:@"MapsSuggestionsContactAsDataKey"];
      uint64_t v77 = (void (*)(uint64_t, uint64_t))v36;
      unint64_t v79 = v45;
      if (v46)
      {
        uint64_t v47 = v46;
        uint64_t v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v50 = v49;

        sub_100100830(0, (unint64_t *)&qword_1015CF5F8);
        sub_100100830(0, (unint64_t *)&unk_1015D98C0);
        sub_100144284(v48, v50);
        Swift::Int v51 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
        sub_1001442DC(v48, v50);
        unint64_t v68 = v50;
        uint64_t v69 = v48;
        if (v72)
        {
          if (qword_1015CBD00 != -1) {
            swift_once();
          }
          uint64_t v52 = type metadata accessor for Logger();
          sub_1000F2248(v52, (uint64_t)qword_1016116C0);
          unint64_t v53 = Logger.logObject.getter();
          os_log_type_t v54 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v53, v54))
          {
            uint64_t v55 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v55 = 0;
            _os_log_impl((void *)&_mh_execute_header, v53, v54, "Unable to get data from Contacts", v55, 2u);
            swift_slowDealloc();
          }

          swift_errorRetain();
          swift_errorRetain();
          uint64_t v56 = Logger.logObject.getter();
          os_log_type_t v57 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v56, v57))
          {
            uint64_t v58 = (uint8_t *)swift_slowAlloc();
            uint64_t v80 = swift_slowAlloc();
            *(_DWORD *)uint64_t v58 = 136315138;
            *(void *)(v0 + 64) = v72;
            swift_errorRetain();
            sub_1000FF33C(&qword_1015D98E0);
            uint64_t v59 = String.init<A>(describing:)();
            *(void *)(v0 + 72) = sub_1000F2280(v59, v60, &v80);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v56, v57, "CNContactVCardSerialization threw an error: %s", v58, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
          Swift::Int v51 = 0;
        }
      }
      else
      {
        Swift::Int v51 = 0;
        unint64_t v68 = 0xF000000000000000;
        uint64_t v69 = 0;
      }
      id v61 = *(void **)(v0 + 232);
      id v73 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
      uint64_t v70 = *(void *)(v0 + 200);
      uint64_t v71 = *(void *)(v0 + 224);
      uint64_t v62 = *(void *)(v0 + 160);
      uint64_t v63 = *(void *)(v0 + 112);
      uint64_t v64 = *(void *)(v0 + 88);
      id v65 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
      __int16 v66 = v79;
      char v78 = (objc_super *)sub_100326AB8(v51, 0, v79, 0);

      swift_release();
      sub_10023C078(v69, v68);

      v77(v63, v64);
      sub_1001DA104(v62);
      v73(v71, v70);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(objc_super *))(v0 + 8);
    return v67(v78);
  }
}

uint64_t sub_10023AF38()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = sub_10023B978;
  }
  else
  {
    uint64_t v2 = sub_10023B054;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10023B054()
{
  uint64_t v74 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 312);
    sub_1001DA104(v1);
    id v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unable to get live location from Find My", v7, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    double v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 264);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 120);
    sub_1001DA104(v9);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v11(v10, v1, v2);
    v11(v9, v10, v2);
    v8(v9, 0, 1, v2);
    uint64_t v4 = *(void *)(v0 + 312);
  }
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 96);
  sub_1001DA09C(*(void *)(v0 + 160), v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v16 = *(void **)(v0 + 232);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    uint64_t v17 = *(void *)(v0 + 224);
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v19 = *(void *)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 136);
    swift_release();

    sub_1001DA104(v19);
    v15(v17, v18);
    sub_1001DA104(v20);
    uint64_t v71 = 0;
  }
  else
  {
    id v67 = *(id *)(v0 + 80);
    unint64_t v68 = *(void **)(v0 + 232);
    uint64_t v21 = *(char **)(v0 + 104);
    uint64_t v22 = *(void *)(v0 + 112);
    uint64_t v24 = *(void *)(v0 + 88);
    uint64_t v23 = *(void *)(v0 + 96);
    (*(void (**)(uint64_t, void, uint64_t))(v23 + 32))(v22, *(void *)(v0 + 136), v24);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v25(v21, v22, v24);
    MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
    uint64_t v27 = (char *)objc_allocWithZone(MyLocation);
    UUID.init()();
    v25(&v27[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], (uint64_t)v21, v24);

    *(void *)(v0 + 32) = v27;
    *(void *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = MyLocation;
    [v0 init];
    uint64_t v29 = *(void (**)(char *, uint64_t))(v23 + 8);
    v29(v21, v24);
    MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    uint64_t v31 = (char *)objc_allocWithZone(MyLocationHandle);
    uint64_t v32 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(void *)&v31[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(void *)&v31[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v68;
    uint64_t v33 = *(void **)&v31[v32];
    *(void *)&v31[v32] = v28;
    id v34 = v68;
    id v35 = v28;
    id v36 = v34;
    id v37 = v35;

    *(void *)(v0 + 48) = v31;
    *(void *)(v0 + 56) = MyLocationHandle;
    uint64_t v38 = (objc_super *)[v0 super init];
    uint64_t v69 = v37;

    id v39 = [v67 dataForKey:@"MapsSuggestionsContactAsDataKey"];
    uint64_t v70 = (void (*)(uint64_t, uint64_t))v29;
    uint64_t v72 = v38;
    if (v39)
    {
      uint64_t v40 = v39;
      uint64_t v41 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;

      sub_100100830(0, (unint64_t *)&qword_1015CF5F8);
      sub_100100830(0, (unint64_t *)&unk_1015D98C0);
      sub_100144284(v41, v43);
      id v44 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      sub_1001442DC(v41, v43);
      unint64_t v62 = v43;
      uint64_t v63 = v41;
      if (v4)
      {
        if (qword_1015CBD00 != -1) {
          swift_once();
        }
        uint64_t v45 = type metadata accessor for Logger();
        sub_1000F2248(v45, (uint64_t)qword_1016116C0);
        id v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v48 = 0;
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "Unable to get data from Contacts", v48, 2u);
          swift_slowDealloc();
        }

        swift_errorRetain();
        swift_errorRetain();
        unint64_t v49 = Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v49, v50))
        {
          Swift::Int v51 = (uint8_t *)swift_slowAlloc();
          uint64_t v73 = swift_slowAlloc();
          *(_DWORD *)Swift::Int v51 = 136315138;
          *(void *)(v0 + 64) = v4;
          swift_errorRetain();
          sub_1000FF33C(&qword_1015D98E0);
          uint64_t v52 = String.init<A>(describing:)();
          *(void *)(v0 + 72) = sub_1000F2280(v52, v53, &v73);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "CNContactVCardSerialization threw an error: %s", v51, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        id v44 = 0;
      }
    }
    else
    {
      id v44 = 0;
      unint64_t v62 = 0xF000000000000000;
      uint64_t v63 = 0;
    }
    os_log_type_t v54 = *(void **)(v0 + 232);
    __int16 v66 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    uint64_t v64 = *(void *)(v0 + 200);
    uint64_t v65 = *(void *)(v0 + 224);
    uint64_t v55 = *(void *)(v0 + 160);
    uint64_t v56 = *(void *)(v0 + 112);
    uint64_t v57 = *(void *)(v0 + 88);
    id v58 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    uint64_t v59 = v72;
    uint64_t v71 = (objc_super *)sub_100326AB8(v44, 0, v72, 0);

    swift_release();
    sub_10023C078(v63, v62);

    v70(v56, v57);
    sub_1001DA104(v55);
    v66(v65, v64);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v60 = *(uint64_t (**)(objc_super *))(v0 + 8);
  return v60(v71);
}

uint64_t sub_10023B7D8()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 264))(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 88));
  sub_1001DA104(*(void *)(v0 + 152));
  if (qword_1015CBD00 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 296) = sub_1000F2248(v1, (uint64_t)qword_1016116C0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to get cached location from Find My", v4, 2u);
    swift_slowDealloc();
  }

  GEOConfigGetDouble();
  double v6 = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v7;
  void *v7 = v0;
  v7[1] = sub_10023AF38;
  uint64_t v8 = *(void *)(v0 + 224);
  uint64_t v9 = *(void *)(v0 + 144);
  return Session._maps_latestLocation(for:includeAddress:timeout:)(v9, v8, 0, v6);
}

uint64_t sub_10023B978()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 264))(*(void *)(v0 + 144), 1, 1, *(void *)(v0 + 88));
  sub_1001DA104(*(void *)(v0 + 144));
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to get live location from Find My", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  sub_1001DA09C(*(void *)(v0 + 160), v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t v8 = *(void **)(v0 + 232);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    uint64_t v9 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v11 = *(void *)(v0 + 160);
    uint64_t v12 = *(void *)(v0 + 136);
    swift_release();

    sub_1001DA104(v11);
    v7(v9, v10);
    sub_1001DA104(v12);
    os_log_type_t v54 = 0;
  }
  else
  {
    id v51 = *(id *)(v0 + 80);
    uint64_t v52 = *(void **)(v0 + 232);
    uint64_t v13 = *(char **)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v15 = *(void *)(v0 + 96);
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v14, *(void *)(v0 + 136), v16);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v17(v13, v14, v16);
    MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
    uint64_t v19 = (char *)objc_allocWithZone(MyLocation);
    UUID.init()();
    v17(&v19[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], (uint64_t)v13, v16);

    *(void *)(v0 + 32) = v19;
    *(void *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = MyLocation;
    id v20 = [super init];
    uint64_t v21 = *(void (**)(char *, uint64_t))(v15 + 8);
    v21(v13, v16);
    MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    uint64_t v23 = (char *)objc_allocWithZone(MyLocationHandle);
    uint64_t v24 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(void *)&v23[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(void *)&v23[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v52;
    uint64_t v25 = *(void **)&v23[v24];
    *(void *)&v23[v24] = v20;
    id v26 = v52;
    id v27 = v20;
    id v28 = v26;
    id v29 = v27;

    *(void *)(v0 + 48) = v23;
    *(void *)(v0 + 56) = MyLocationHandle;
    uint64_t v30 = (objc_super *)[v0 init];

    id v31 = [v51 dataForKey:@"MapsSuggestionsContactAsDataKey"];
    unint64_t v53 = v29;
    uint64_t v55 = v30;
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v33 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v35 = v34;

      sub_100100830(0, (unint64_t *)&qword_1015CF5F8);
      sub_100100830(0, (unint64_t *)&unk_1015D98C0);
      sub_100144284(v33, v35);
      unint64_t v36 = v35;
      id v37 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      sub_1001442DC(v33, v36);
      unint64_t v46 = v36;
      uint64_t v47 = v33;
    }
    else
    {
      id v37 = 0;
      unint64_t v46 = 0xF000000000000000;
      uint64_t v47 = 0;
    }
    uint64_t v38 = *(void **)(v0 + 232);
    os_log_type_t v50 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    uint64_t v48 = *(void *)(v0 + 200);
    uint64_t v49 = *(void *)(v0 + 224);
    uint64_t v39 = *(void *)(v0 + 160);
    uint64_t v40 = *(char **)(v0 + 112);
    uint64_t v41 = *(void *)(v0 + 88);
    id v42 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    unint64_t v43 = v55;
    os_log_type_t v54 = (objc_super *)sub_100326AB8(v37, 0, v55, 0);

    swift_release();
    sub_10023C078(v47, v46);

    v21(v40, v41);
    sub_1001DA104(v39);
    v50(v49, v48);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v44 = *(uint64_t (**)(objc_super *))(v0 + 8);
  return v44(v54);
}

uint64_t sub_10023C078(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1001442DC(a1, a2);
  }
  return a1;
}

id sub_10023C08C()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryImageDownloader());
  os_log_type_t v2 = v0;
  id v3 = [v1 init];
  *(void *)&v2[OBJC_IVAR____TtC4Maps28PlaceSummaryAsyncDataManager_imageDownloader] = v3;
  *(void *)&v2[OBJC_IVAR____TtC4Maps28PlaceSummaryAsyncDataManager_etaDownloader] = [objc_allocWithZone((Class)type metadata accessor for PlaceSummaryETADownloader()) init];
  *(void *)&v2[OBJC_IVAR____TtC4Maps28PlaceSummaryAsyncDataManager_mapItemDownloader] = [objc_allocWithZone((Class)type metadata accessor for PlaceSummaryMapItemDownloader()) init];

  v5.id receiver = v2;
  v5.Class super_class = (Class)type metadata accessor for PlaceSummaryAsyncDataManager();
  return [super init];
}

uint64_t sub_10023C168(double a1, double a2)
{
  unint64_t v4 = sub_1001A5BC0();
  sub_1002CD068(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1001A6B3C();
  sub_1002CD490(v5);
  swift_release();
  uint64_t v6 = sub_1001A6D34();
  sub_1002CA64C(v6, a1, a2);
  swift_release();
  uint64_t v7 = sub_1001A7AD0();
  sub_1002CD954(v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1001A78A8();
  sub_1002AD0B0((unint64_t)v8);
  swift_bridgeObjectRelease();
  unint64_t v9 = sub_1001A7CF8();
  sub_1002D8200(v9);

  return swift_bridgeObjectRelease();
}

id sub_10023C2F0()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for PlaceSummaryAsyncDataManager();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryAsyncDataManager()
{
  return self;
}

unint64_t sub_10023C3A8()
{
  unint64_t result = qword_1015D6258;
  if (!qword_1015D6258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6258);
  }
  return result;
}

uint64_t sub_10023C3FC()
{
  return sub_1001010F8(&qword_1015D6260, &qword_1015D6268);
}

uint64_t sub_10023C438()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_1016116D8);
  sub_1000F2248(v10, (uint64_t)qword_1016116D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10023C710()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_1016116F0);
  sub_1000F2248(v0, (uint64_t)qword_1016116F0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10023C774()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611708);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611708);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10023C82C()
{
  uint64_t result = swift_getKeyPath();
  qword_101611720 = result;
  return result;
}

uint64_t sub_10023C854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10023C878, 0, 0);
}

uint64_t sub_10023C878()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBD20 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611720;
  *(void *)(v0 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = qword_101611720;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D6368, &qword_1015D6370);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_10023C9D4;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10023C9D4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_10023CB28;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10023CB28()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611720;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10023CC04()
{
  if (qword_1015CBD20 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10023CC64()
{
  unint64_t result = qword_1015D6270;
  if (!qword_1015D6270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6270);
  }
  return result;
}

unint64_t sub_10023CCBC()
{
  unint64_t result = qword_1015D6278;
  if (!qword_1015D6278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6278);
  }
  return result;
}

uint64_t sub_10023CD10()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10023CD44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10023CD94@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBD10, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1016116F0, a1);
}

uint64_t sub_10023CDCC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBD18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611708);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_10023CE48(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10023C878, 0, 0);
}

uint64_t sub_10023CEFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10023DD88();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10023CF24()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_10023CF44()
{
  unint64_t result = qword_1015D6288;
  if (!qword_1015D6288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6288);
  }
  return result;
}

unint64_t sub_10023CF9C()
{
  unint64_t result = qword_1015D6290;
  if (!qword_1015D6290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6290);
  }
  return result;
}

unint64_t sub_10023CFF4()
{
  unint64_t result = qword_1015D6298;
  if (!qword_1015D6298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6298);
  }
  return result;
}

unint64_t sub_10023D04C()
{
  unint64_t result = qword_1015D62A0;
  if (!qword_1015D62A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62A0);
  }
  return result;
}

unint64_t sub_10023D0A4()
{
  unint64_t result = qword_1015D62A8;
  if (!qword_1015D62A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62A8);
  }
  return result;
}

unint64_t sub_10023D0FC()
{
  unint64_t result = qword_1015D62B0;
  if (!qword_1015D62B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62B0);
  }
  return result;
}

uint64_t sub_10023D150(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10023D170, 0, 0);
}

uint64_t sub_10023D170()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)TransitMutablePreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 isModeDisabled:2];
  unsigned char *v1 = v2 ^ 1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10023D244(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10023D268, 0, 0);
}

uint64_t sub_10023D268()
{
  char v1 = *(unsigned char *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)TransitMutablePreferences) initWithDefaults:v2];

  [v3 setMode:2 disabled:(v1 & 1) == 0];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10023D374()
{
  unint64_t result = qword_1015D62B8;
  if (!qword_1015D62B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62B8);
  }
  return result;
}

unint64_t sub_10023D3CC()
{
  unint64_t result = qword_1015D62C0;
  if (!qword_1015D62C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62C0);
  }
  return result;
}

unint64_t sub_10023D424()
{
  unint64_t result = qword_1015D62C8;
  if (!qword_1015D62C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62C8);
  }
  return result;
}

unint64_t sub_10023D47C()
{
  unint64_t result = qword_1015D62D0;
  if (!qword_1015D62D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62D0);
  }
  return result;
}

uint64_t sub_10023D4D0@<X0>(uint64_t *a1@<X8>)
{
  sub_10023D71C();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10023D510@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBD08, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1016116D8, a1);
}

uint64_t sub_10023D548()
{
  return sub_1001010F8(&qword_1015D62D8, &qword_1015D62E0);
}

uint64_t sub_10023D584(uint64_t a1)
{
  unint64_t v2 = sub_10023CF44();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10023D5D4()
{
  unint64_t result = qword_1015D62E8;
  if (!qword_1015D62E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62E8);
  }
  return result;
}

uint64_t sub_10023D628(uint64_t a1)
{
  unint64_t v2 = sub_10023D71C();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10023D674(uint64_t a1)
{
  unint64_t v2 = sub_10023D47C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10023D6C4()
{
  unint64_t result = qword_1015D62F0;
  if (!qword_1015D62F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D62F0);
  }
  return result;
}

unint64_t sub_10023D71C()
{
  unint64_t result = qword_1015D62F8[0];
  if (!qword_1015D62F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D62F8);
  }
  return result;
}

uint64_t sub_10023D770(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10023D800, 0, 0);
}

uint64_t sub_10023D800()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D6268);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D6368, &qword_1015D6370);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10023D910(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10023CF9C();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10023D9C4()
{
  unint64_t result = qword_1015D6310;
  if (!qword_1015D6310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6310);
  }
  return result;
}

unint64_t sub_10023DA1C()
{
  unint64_t result = qword_1015D6318[0];
  if (!qword_1015D6318[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D6318);
  }
  return result;
}

uint64_t sub_10023DA70(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10023CF9C();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10023DB24(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10023CF9C();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10023DBD8()
{
  unint64_t result = qword_1015D6330;
  if (!qword_1015D6330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6330);
  }
  return result;
}

unint64_t sub_10023DC30()
{
  unint64_t result = qword_1015D6338;
  if (!qword_1015D6338)
  {
    sub_10010118C(qword_1015D6340);
    sub_10023D424();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6338);
  }
  return result;
}

uint64_t sub_10023DCA4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10023D0FC();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TransitPreferSubwayQuery()
{
  return &type metadata for TransitPreferSubwayQuery;
}

ValueMetadata *type metadata accessor for TransitPreferSubwayEntity.UpdateIntent_value()
{
  return &type metadata for TransitPreferSubwayEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for TransitPreferSubwayEntity()
{
  return &type metadata for TransitPreferSubwayEntity;
}

uint64_t sub_10023DD88()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D6378);
  LocalizedStringResource.init(stringLiteral:)();
  id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  id v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10023CF44();
  uint64_t v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_10023E1C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitUserGeneratedGuides()
{
  return &type metadata for PlaceSummaryUnitUserGeneratedGuides;
}

uint64_t sub_10023E3D4(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v3 = type metadata accessor for Handle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v15 - v8;
  sub_10011D518(a1, (uint64_t)v17);
  if (!v18)
  {
    sub_1001189D4((uint64_t)v17);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v12 = 0;
    return v12 & 1;
  }
  uint64_t v10 = v16;
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v9, &v16[OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle], v3);
  v11(v6, (char *)(v1 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle), v3);
  char v12 = static Handle.== infix(_:_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v6, v3);
  v13(v9, v3);

  return v12 & 1;
}

uint64_t sub_10023E7AC()
{
  uint64_t v1 = type metadata accessor for Handle();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v42 = v2 + 16;
  uint64_t v43 = v0 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle;
  uint64_t v41 = v6;
  ((void (*)(char *, __n128))v6)(v5, v3);
  uint64_t v7 = Handle.identifier.getter();
  uint64_t v9 = v8;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v39 = v5;
  uint64_t v40 = v10;
  uint64_t v44 = v2 + 8;
  uint64_t v45 = v1;
  v10(v5, v1);
  uint64_t v48 = v7;
  uint64_t v49 = v9;
  uint64_t v46 = 64;
  unint64_t v47 = 0xE100000000000000;
  sub_100180324();
  int v11 = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  id v12 = sub_10023F6AC();
  if (!v12)
  {
    if (v11) {
      goto LABEL_30;
    }
LABEL_27:
    uint64_t v29 = v39;
    uint64_t v30 = v45;
    v41(v39, v43, v45);
    Handle.identifier.getter();
    v40(v29, v30);
    id v31 = objc_allocWithZone((Class)CNPhoneNumber);
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v31 initWithStringValue:v32];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_30;
  }
  uint64_t v13 = v12;
  id v14 = [v12 phoneNumbers];

  sub_1000FF33C((uint64_t *)&unk_1015DC510);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v15 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
    goto LABEL_26;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
LABEL_4:
  unint64_t v17 = 0;
  int v18 = v11 ^ 1;
  unint64_t v19 = v15 & 0xC000000000000001;
  uint64_t v36 = v15 & 0xFFFFFFFFFFFFFF8;
  unint64_t v38 = v15;
  int v37 = v11;
LABEL_5:
  HIDWORD(v35) = v18;
  unint64_t v20 = v17;
  do
  {
    if (v19)
    {
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v20 >= *(void *)(v36 + 16)) {
        goto LABEL_24;
      }
      id v21 = *(id *)(v15 + 8 * v20 + 32);
    }
    uint64_t v22 = v21;
    unint64_t v17 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    id v23 = [v21 value];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (v11)
    {
    }
    else
    {
      uint64_t v24 = v39;
      uint64_t v25 = v45;
      v41(v39, v43, v45);
      Handle.identifier.getter();
      v40(v24, v25);
      id v26 = objc_allocWithZone((Class)CNPhoneNumber);
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v28 = [v26 initWithStringValue:v27];

      LOBYTE(v27) = [v23 isLikePhoneNumber:v28];
      int v11 = v37;
      unint64_t v15 = v38;

      if (v27)
      {
        int v18 = 0;
        if (v17 != v16) {
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    ++v20;
  }
  while (v17 != v16);
  swift_bridgeObjectRelease();
  if ((v35 & 0x100000000) != 0) {
    goto LABEL_27;
  }
LABEL_30:
  uint64_t v33 = sub_100143368(v50);
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_10023ECFC()
{
  uint64_t v1 = type metadata accessor for Handle();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = _swiftEmptyArrayStorage;
  uint64_t v6 = v0 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle;
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v7(v5, v0 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v1, v3);
  uint64_t v8 = Handle.identifier.getter();
  uint64_t v10 = v9;
  int v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  unint64_t v38 = (void *)v8;
  uint64_t v39 = v10;
  v37[1] = 64;
  v37[2] = 0xE100000000000000;
  sub_100180324();
  LOBYTE(v8) = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  if (v8)
  {
    ((void (*)(char *, uint64_t, uint64_t))v7)(v5, v6, v1);
    uint64_t v12 = Handle.identifier.getter();
    uint64_t v14 = v13;
    v11(v5, v1);
    unint64_t v15 = v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v15 = sub_1000FB364(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      unint64_t v15 = sub_1000FB364((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    v15[2] = v17 + 1;
    int v18 = &v15[2 * v17];
    void v18[4] = v12;
    v18[5] = v14;
    uint64_t v40 = v15;
  }
  id v19 = sub_10023F6AC();
  if (!v19) {
    goto LABEL_22;
  }
  unint64_t v20 = v19;
  id v21 = [v19 emailAddresses];

  sub_1000FF33C((uint64_t *)&unk_1015DC510);
  unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v22 >> 62))
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23) {
      goto LABEL_10;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    id v26 = _swiftEmptyArrayStorage;
LABEL_21:
    sub_10024BC84((uint64_t)v26);
LABEL_22:
    uint64_t v36 = sub_10014338C((uint64_t)v40);
    swift_bridgeObjectRelease();
    return v36;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v23) {
    goto LABEL_20;
  }
LABEL_10:
  unint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10025AEF4(0, v23 & ~(v23 >> 63), 0);
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = 0;
    id v26 = v38;
    do
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v27 = *(id *)(v22 + 8 * v25 + 32);
      }
      id v28 = v27;
      id v29 = [v27 value];
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      unint64_t v38 = v26;
      unint64_t v34 = v26[2];
      unint64_t v33 = v26[3];
      if (v34 >= v33 >> 1)
      {
        sub_10025AEF4(v33 > 1, v34 + 1, 1);
        id v26 = v38;
      }
      ++v25;
      v26[2] = v34 + 1;
      uint64_t v35 = &v26[2 * v34];
      v35[4] = v30;
      v35[5] = v32;
    }
    while (v23 != v25);
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_10023F0C8()
{
  return sub_10023F404((SEL *)&selRef_senderNameForAddress_ofType_);
}

uint64_t sub_10023F13C()
{
  uint64_t v1 = type metadata accessor for Handle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v15._uint64_t object = (void *)0x8000000100F7EE90;
  v5._uint64_t object = (void *)0x8000000100F7EE60;
  v5._uint64_t countAndFlagsBits = 0xD000000000000025;
  v6._uint64_t countAndFlagsBits = 0x4C20739980E24025;
  v6._uint64_t object = (void *)0xAF6E6F697461636FLL;
  v15._uint64_t countAndFlagsBits = 0x1000000000000054;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)qword_101611820, v6, v15);
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100F5CF70;
  uint64_t v8 = (uint64_t)sub_10023F0C8();
  uint64_t v10 = v9;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_10011A750();
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v1);
    uint64_t v8 = Handle.identifier.getter();
    uint64_t v10 = v11;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v10;
  uint64_t v12 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v12;
}

id sub_10023F378(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

id sub_10023F3F8()
{
  return sub_10023F404((SEL *)&selRef_spokenContactNameForAddress_ofType_);
}

id sub_10023F404(SEL *a1)
{
  id v19 = a1;
  uint64_t v2 = type metadata accessor for Handle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self sharedManager];
  if (result)
  {
    NSString v7 = result;
    uint64_t v8 = v1 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle;
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v9(v5, v1 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v2);
    Handle.identifier.getter();
    uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v9(v5, v8, v2);
    uint64_t v11 = Handle.identifier.getter();
    uint64_t v13 = v12;
    v10(v5, v2);
    uint64_t v22 = v11;
    uint64_t v23 = v13;
    uint64_t v20 = 64;
    unint64_t v21 = 0xE100000000000000;
    sub_100180324();
    StringProtocol.contains<A>(_:)();
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Swift::String v15 = v18;
    id v16 = [v7 *v19 v18 v14];

    if (!v16) {
      return 0;
    }
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10023F6AC()
{
  uint64_t v1 = type metadata accessor for Handle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle;
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v6(v4, v0 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v1);
  uint64_t v7 = Handle.identifier.getter();
  uint64_t v9 = v8;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v4, v1);
  void v16[2] = v7;
  v16[3] = v9;
  v16[0] = 64;
  v16[1] = 0xE100000000000000;
  sub_100180324();
  LOBYTE(v7) = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  id result = [self sharedManager];
  uint64_t v12 = result;
  if (v7)
  {
    if (result)
    {
      v6(v4, v5, v1);
      Handle.identifier.getter();
      v10(v4, v1);
      NSString v13 = String._bridgeToObjectiveC()();
      NSString v14 = &selRef_contactWithEmailAddress_;
LABEL_6:
      swift_bridgeObjectRelease();
      id v15 = [v12 *v14 v13];

      return v15;
    }
    __break(1u);
  }
  else if (result)
  {
    v6(v4, v5, v1);
    Handle.identifier.getter();
    v10(v4, v1);
    NSString v13 = String._bridgeToObjectiveC()();
    NSString v14 = &selRef_contactWithPhoneNumber_;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

id sub_10023F910(double a1, double a2, double a3)
{
  uint64_t v7 = type metadata accessor for Handle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_10023F6AC();
  if (v11)
  {
    id v12 = v11;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v7);
    Handle.identifier.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [self contactWithDisplayName:0 emailOrPhoneNumber:v13];
  }
  id v14 = [v12 avatarImageWithSize:0 scale:a2 rightToLeft:a3];

  return v14;
}

id sub_10023FB4C()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for MapsFindMyHandle();
  return [super dealloc];
}

uint64_t sub_10023FBF0()
{
  return type metadata accessor for MapsFindMyHandle();
}

uint64_t type metadata accessor for MapsFindMyHandle()
{
  uint64_t result = qword_1015D63B0;
  if (!qword_1015D63B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10023FC44()
{
  uint64_t result = type metadata accessor for Handle();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_10023FCD4()
{
  unint64_t result = qword_1015CF218;
  if (!qword_1015CF218)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CF218);
  }
  return result;
}

unint64_t sub_10023FD14()
{
  unint64_t result = qword_1015CF220;
  if (!qword_1015CF220)
  {
    sub_10023FCD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF220);
  }
  return result;
}

uint64_t sub_10023FD6C(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_101611730);
}

uint64_t sub_10023FD90(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_101611760);
}

uint64_t sub_10023FDBC(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_101611790);
}

uint64_t sub_10023FDE8(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_1016117A8);
}

uint64_t sub_10023FE08(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_1016117C0);
}

uint64_t sub_10023FE2C(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_1016117D8);
}

uint64_t sub_10023FE54(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_1016117F0);
}

uint64_t sub_100240078(void *a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (!v2) {
    return 0;
  }
  id v4 = v2;
  if (![v4 isTopContext:v1]) {
    goto LABEL_15;
  }
  id v5 = [v4 mapView];
  if (!v5) {
    goto LABEL_15;
  }
  uint64_t v6 = v5;
  if (objc_msgSend(a1, "_maps_numLines") != (id)1)
  {
LABEL_14:

LABEL_15:
    return 0;
  }
  id v7 = [v6 _selectedTransitLineIDs];
  if (v7)
  {
    uint64_t v8 = v7;
    sub_100100830(0, &qword_1015D6420);
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = [a1 _maps_lineIdentifiers];
  if (v10)
  {
    id v11 = v10;
    sub_100100830(0, &qword_1015D6420);
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v9)
    {
      if (v12)
      {
        unint64_t v13 = swift_bridgeObjectRetain();
        unsigned __int8 v14 = sub_10019EE64(v13, v12);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();

        return v14 & 1;
      }
      goto LABEL_13;
    }

    if (v12)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    if (v9)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
  }
  return 1;
}

uint64_t sub_100240284(void *a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (v2)
  {
    id v4 = v2;
    if ([v4 isTopContext:v1]
      && (id v5 = [v4 mapView]) != 0)
    {
      uint64_t v6 = v5;
      id v7 = [v5 _selectedTransitLineIDs];
      if (v7)
      {
        uint64_t v8 = v7;
        sub_100100830(0, &qword_1015D6420);
        uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v9 = 0;
      }
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
      *(void *)(v11 + 32) = a1;
      uint64_t v15 = v11;
      specialized Array._endMutation()();
      id v12 = a1;
      if (v9)
      {
        unint64_t v13 = swift_bridgeObjectRetain();
        unsigned __int8 v10 = sub_10019EE64(v13, v15);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        unsigned __int8 v10 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      unsigned __int8 v10 = 0;
    }
  }
  else
  {
    unsigned __int8 v10 = 0;
  }
  return v10 & 1;
}

void sub_10024047C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (v1)
  {
    id v2 = [v1 mapView];
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = [self sharedService];
      if (v4)
      {
        id v5 = v4;
        id v6 = [v3 mapRegion];
        id v7 = [v5 mapsDefaultTraitsForMapRegion:v6 source:20];

        if (v7)
        {

          return;
        }
        goto LABEL_12;
      }
LABEL_11:
      __break(1u);
LABEL_12:
      __break(1u);
      return;
    }
  }
  id v8 = [self sharedService];
  if (!v8)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = v8;
  id v10 = [v8 mapsDefaultTraits];

  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
}

void sub_1002405A4(void *a1, int a2)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  id v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  id v12 = (char *)&v48 - v11;
  uint64_t v13 = OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController;
  unsigned __int8 v14 = *(void **)&v2[OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController];
  if (v14)
  {
    id v51 = [v14 mapView];
    if (v51)
    {
      LODWORD(v5sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = a2;
      id v15 = [a1 _maps_numLines];
      if (v15)
      {
        unint64_t v16 = (unint64_t)v15;
        id v49 = [v51 mapRegion];
        if (!v49)
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        Date.init()();
        if (v16 >= 2)
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
          unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = v2;
          *(unsigned char *)(v18 + 24) = v50 & 1;
          id v19 = v49;
          *(void *)(v18 + 32) = v49;
          (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, v8, v5);
          uint64_t v20 = v2;
          id v50 = v19;
          [a1 _maps_numLines];
          sub_10024047C();
          uint64_t v22 = v21;
          uint64_t v23 = (void *)swift_allocObject();
          void v23[2] = sub_100242794;
          v23[3] = v18;
          v23[4] = v20;
          v23[5] = a1;
          uint64_t v56 = (void (*)(unint64_t, uint64_t))sub_1002428E0;
          uint64_t v57 = v23;
          aBlock = _NSConcreteStackBlock;
          uint64_t v53 = 1107296256;
          os_log_type_t v54 = sub_100240F94;
          uint64_t v55 = &unk_1012DEF78;
          uint64_t v24 = _Block_copy(&aBlock);
          uint64_t v25 = v20;
          swift_retain();
          id v26 = a1;
          swift_release();
          [v26 _maps_loadLineInfoUsingTraits:v22 withCompletion:v24];
          _Block_release(v24);

          swift_release();
LABEL_22:
          (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
          return;
        }
        id v28 = [a1 _maps_lineIdentifiers];
        if (!v28)
        {
LABEL_27:
          __break(1u);
          return;
        }
        id v29 = v28;
        sub_100100830(0, &qword_1015D6420);
        unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v30 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v47) {
            goto LABEL_13;
          }
        }
        else if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_13:
          if ((v30 & 0xC000000000000001) != 0)
          {
            id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_16;
          }
          if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v31 = *(id *)(v30 + 32);
LABEL_16:
            id v32 = v31;
            swift_bridgeObjectRelease();
            [v51 _deselectTransitLineMarker];
            unint64_t v33 = *(void **)&v2[v13];
            if (v33)
            {
              id v34 = [v33 mapView];
              if (v34)
              {
                uint64_t v35 = v34;
                [v34 _selectTransitLineMarkerWithIdentifier:v32];
              }
            }
            sub_10024047C();
            uint64_t v48 = v36;
            (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
            unint64_t v37 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
            uint64_t v38 = swift_allocObject();
            *(void *)(v38 + 16) = v2;
            *(void *)(v38 + 24) = v32;
            *(unsigned char *)(v38 + 32) = v50 & 1;
            uint64_t v39 = v32;
            id v40 = v49;
            *(void *)(v38 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v49;
            (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v38 + v37, v8, v5);
            uint64_t v56 = sub_100242630;
            uint64_t v57 = (void *)v38;
            aBlock = _NSConcreteStackBlock;
            uint64_t v53 = 1107296256;
            os_log_type_t v54 = sub_100240F94;
            uint64_t v55 = &unk_1012DEF00;
            uint64_t v41 = _Block_copy(&aBlock);
            uint64_t v42 = v2;
            id v43 = v40;
            id v44 = v39;
            swift_release();
            uint64_t v45 = a1;
            uint64_t v46 = v48;
            [v45 _maps_loadLineInfoUsingTraits:v48 withCompletion:v41];

            _Block_release(v41);
            goto LABEL_22;
          }
          __break(1u);
          goto LABEL_26;
        }
        swift_bridgeObjectRelease();
        [v51 _deselectTransitLineMarker];

        goto LABEL_22;
      }
      [v51 _deselectTransitLineMarker];
      id v27 = v51;
    }
  }
}

void sub_100240B78(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a2)
  {
    swift_errorRetain();
    sub_100241820(0, a2);
    swift_errorRelease();
    return;
  }
  if (!a1)
  {
    sub_100241820(0, 0);
    return;
  }
  uint64_t v7 = OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController;
  id v8 = *(void **)(a3 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (!v8) {
    return;
  }
  swift_unknownObjectRetain();
  id v10 = [v8 mapView];
  if (v10)
  {
    uint64_t v11 = v10;
    [v10 _deselectLabelMarkerAnimated:1];
    id v12 = (id)MKMapItemIdentifierFromGEOTransitLine();
    uint64_t v13 = *(void **)(a3 + v7);
    if (v13 && (id v14 = [v13 mapView]) != 0)
    {
      id v15 = v14;
      [v14 _selectTransitLineMarkerWithIdentifier:v12];

      if ((a4 & 1) == 0) {
        goto LABEL_18;
      }
    }
    else
    {

      if ((a4 & 1) == 0)
      {
LABEL_18:
        uint64_t v16 = swift_unknownObjectRetain();
        sub_100241820(v16, 0);

        swift_unknownObjectRelease_n();
        return;
      }
    }
    sub_1002422C4(a1);
    goto LABEL_18;
  }

  swift_unknownObjectRelease();
}

void sub_100240D14(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  if (a2)
  {
    swift_errorRetain();
    sub_100241820(0, a2);
    swift_errorRelease();
    return;
  }
  if (!a1)
  {
    sub_100241820(0, 0);
    return;
  }
  LOBYTE(v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = a5;
  swift_bridgeObjectRetain();
  id v22 = (id)MKMapItemIdentifiersToGEOMapItemIdentifier();
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_8:
      char v21 = (char)v10;
      uint64_t v20 = a7;
      uint64_t v12 = 4;
      while (1)
      {
        uint64_t v13 = v12 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v15 = v12 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_21;
          }
        }
        else
        {
          id v14 = *(void **)(a1 + 8 * v12);
          swift_unknownObjectRetain();
          uint64_t v15 = v12 - 3;
          if (__OFADD__(v13, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        id v16 = [v14 identifier:v20];
        if (v16)
        {
          unint64_t v17 = v16;
          a7 = sub_100100830(0, (unint64_t *)&qword_1015D5D50);
          id v10 = v22;
          id v18 = v17;
          LOBYTE(v17) = static NSObject.== infix(_:_:)();

          if (v17) {
            break;
          }
        }
        swift_unknownObjectRelease();
        ++v12;
        if (v15 == v11) {
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      if (v21)
      {
        id v19 = (void *)swift_unknownObjectRetain();
        sub_1002422C4(v19);
        swift_unknownObjectRelease();
      }
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_8;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  id v14 = 0;
LABEL_24:
  sub_100241820((uint64_t)v14, 0);

  swift_unknownObjectRelease();
}

uint64_t sub_100240F94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D6410);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_10024109C(void *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = __chkstk_darwin(v10).n128_u64[0];
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController;
  uint64_t v15 = *(void **)&v3[OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController];
  if (v15)
  {
    id v16 = [v15 mapView];
    if (v16)
    {
      uint64_t v47 = v7;
      int v50 = a2;
      id v49 = v16;
      id v48 = [v16 mapRegion];
      if (!v48)
      {
        __break(1u);
        goto LABEL_21;
      }
      Date.init()();
      id v17 = (id)MKMapItemIdentifierFromGEOTransitLine();
      if (v50)
      {
        id v18 = [a1 mapRegion];
        id v19 = *(void **)&v3[v14];
        if (!v19) {
          goto LABEL_11;
        }
      }
      else
      {
        id v18 = 0;
        id v19 = *(void **)&v3[v14];
        if (!v19) {
          goto LABEL_11;
        }
      }
      id v20 = [v19 mapView];
      if (v20)
      {
        char v21 = v20;
        [v20 _selectTransitLineMarkerWithIdentifier:v17];
        if (v18)
        {
          id v22 = v18;
          GEOMapRectForMapRegion();
          double v24 = v23;
          double v26 = v25;
          double v28 = v27;
          double v30 = v29;

          [v21 setVisibleMapRect:1 v24, v26, v28, v30];
        }
        goto LABEL_12;
      }
LABEL_11:
      char v21 = v18;
LABEL_12:

      if ((sub_1003A1138(a1) & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v6);

LABEL_18:
        return;
      }
      id v31 = [self sharedService];
      if (v31)
      {
        id v32 = v31;
        sub_1000FF33C(&qword_1015CD310);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_100F5DFF0;
        *(void *)(v33 + 32) = v17;
        aBlock[0] = v33;
        specialized Array._endMutation()();
        sub_100100830(0, &qword_1015D6420);
        id v34 = v17;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        sub_10024047C();
        unint64_t v37 = v36;
        id v38 = [v32 ticketForTransitLines:isa traits:v36];

        if (v38)
        {
          uint64_t v39 = v34;
          uint64_t v40 = v47;
          (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v9, v13, v6);
          unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
          uint64_t v42 = swift_allocObject();
          *(void *)(v42 + 16) = v3;
          *(unsigned char *)(v42 + 24) = v50 & 1;
          id v43 = v48;
          *(void *)(v42 + 32) = v48;
          (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v42 + v41, v9, v6);
          aBlock[4] = sub_1002420F8;
          aBlock[5] = v42;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100240F94;
          aBlock[3] = &unk_1012DEEB0;
          id v44 = _Block_copy(aBlock);
          swift_unknownObjectRetain();
          uint64_t v45 = v3;
          id v46 = v43;
          swift_release();
          [v38 submitWithHandler:v44 networkActivity:0];
          _Block_release(v44);

          swift_unknownObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v6);
          return;
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v6);

        goto LABEL_18;
      }
LABEL_21:
      __break(1u);
    }
  }
}

void sub_100241564(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a2)
  {
    swift_errorRetain();
    sub_100241820(0, a2);
    swift_errorRelease();
    return;
  }
  if (!a1)
  {
LABEL_18:
    sub_100241820(0, 0);
    return;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_8:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v8 = *(void **)(a1 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_unknownObjectRetain();
  sub_100241820(v9, 0);
  swift_unknownObjectRelease();
  if (a4) {
    sub_1002422C4(v8);
  }

  swift_unknownObjectRelease();
}

void sub_10024173C()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController;
  if (!*(void *)(v0 + OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController))
  {
    id v2 = [objc_allocWithZone((Class)LineCardViewController) init];
    [v2 setContaineeDelegate:v0];
    [v2 setLineCardDelegate:v0];
    uint64_t v3 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v2;
  }
}

void sub_100241820(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (!v3) {
    return;
  }
  id v14 = v3;
  if ([v14 isTopContext:v2])
  {
    uint64_t v6 = OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController;
    uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController);
    if (v7
      || (id v8 = [objc_allocWithZone((Class)LineCardViewController) init],
          [v8 setContaineeDelegate:v2],
          [v8 setLineCardDelegate:v2],
          uint64_t v9 = *(void **)(v2 + v6),
          *(void *)(v2 + v6) = v8,
          v9,
          (uint64_t v7 = *(void **)(v2 + v6)) != 0))
    {
      id v10 = v7;
      id v11 = [v10 lineItem];
      if (v11)
      {
        uint64_t v12 = v11;
        if (!a1) {
          goto LABEL_15;
        }
        id v13 = [(id)swift_unknownObjectRetain() muid];
        if (v13 == [v12 muid])
        {
          [v10 setLineItem:a1 loading:0];

          swift_unknownObjectRelease();
LABEL_17:
          swift_unknownObjectRelease();
          return;
        }
        swift_unknownObjectRelease();
        if (a2) {
LABEL_15:
        }
          [v10 setLineItem:v12 loading:0];

        goto LABEL_17;
      }
    }
  }
}

void sub_100241A58(void *a1, uint64_t a2, uint64_t a3)
{
  [a1 _maps_numLines];
  sub_10024047C();
  id v8 = v7;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a2;
  v9[3] = a3;
  Swift::String v9[4] = v3;
  v9[5] = a1;
  v13[4] = sub_10024209C;
  v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_100240F94;
  v13[3] = &unk_1012DEE10;
  id v10 = _Block_copy(v13);
  swift_retain();
  id v11 = v3;
  id v12 = a1;
  swift_release();
  [v12 _maps_loadLineInfoUsingTraits:v8 withCompletion:v10];
  _Block_release(v10);
}

void sub_100241B70(Class isa, uint64_t a2, void (*a3)(void, uint64_t), uint64_t a4, void *a5, void *a6)
{
  if (a2)
  {
    swift_errorRetain();
    a3(0, a2);
    swift_errorRelease();
  }
  else
  {
    id v12 = [objc_allocWithZone((Class)TransitLineDisambiguationViewController) init];
    [v12 setContaineeDelegate:a5];
    if (isa)
    {
      sub_1000FF33C((uint64_t *)&unk_1015D6410);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
    }
    [v12 setLines:isa];

    id v13 = (void *)swift_allocObject();
    void v13[2] = a3;
    v13[3] = a4;
    v13[4] = a5;
    v23[4] = sub_1002420E8;
    v23[5] = v13;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 1107296256;
    void v23[2] = sub_100241E94;
    v23[3] = &unk_1012DEE60;
    id v14 = _Block_copy(v23);
    swift_retain();
    uint64_t v15 = a5;
    swift_release();
    [v12 setLineSelectionBlock:v14];
    _Block_release(v14);
    uint64_t v16 = OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController;
    if (-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(*(void **)&v15[OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController]))
    {
      id v17 = [v12 macPopoverPresentationController];
      if (v17)
      {
        id v18 = v17;
        [v12 setPreferredPresentationStyle:3];
        [a6 coordinate];
        [v18 setCoordinate:];
      }
    }
    id v19 = *(void **)&v15[OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController];
    *(void *)&v15[OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController] = v12;
    id v20 = v12;

    char v21 = *(void **)&v15[v16];
    if (v21)
    {
      id v22 = v21;
      [v22 setNeedsUpdateComponent:@"cards" animated:1];
    }
  }
}

uint64_t sub_100241DE4(uint64_t result, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4)
{
  if (result)
  {
    uint64_t v6 = swift_unknownObjectRetain();
    a2(v6, 0);
    uint64_t v7 = *(void **)(a4 + OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController);
    *(void *)(a4 + OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController) = 0;

    id v8 = *(void **)(a4 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
    if (v8)
    {
      id v9 = v8;
      [v9 setNeedsUpdateComponent:@"cards" animated:1];
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100241E94(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_100241FC4()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for TransitLineContext();
  return [super dealloc];
}

uint64_t type metadata accessor for TransitLineContext()
{
  return self;
}

void sub_10024209C(objc_class *a1, uint64_t a2)
{
  sub_100241B70(a1, a2, *(void (**)(void, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1002420A8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002420E8(uint64_t a1)
{
  return sub_100241DE4(a1, *(void (**)(uint64_t, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1002420F8(uint64_t a1, uint64_t a2)
{
  return sub_1002427AC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100241564);
}

id sub_100242110(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController] = 0;
  uint64_t v2 = OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem;
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController] = 0;
  *(void *)&v1[v2] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4.id receiver = v1;
  v4.Class super_class = (Class)type metadata accessor for TransitLineContext();
  return [super init];
}

id sub_10024219C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController] = 0;
  uint64_t v3 = OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem;
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem] = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker;
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController] = 0;
  uint64_t v5 = *(void **)&v1[v4];
  *(void *)&v1[v4] = a1;
  uint64_t v6 = v1;
  id v7 = a1;

  id v8 = [v7 _maps_numLines];
  id v9 = [v7 _maps_loadedLineItems];
  if (v9)
  {
    id v10 = v9;
  }
  else if ((unint64_t)v8 < 2)
  {
    *(void *)&v1[v3] = [objc_allocWithZone((Class)IncompleteTransitLineItem) initWithLabelMarker:v7];

    swift_unknownObjectRelease();
  }
  else
  {
  }
  v12.id receiver = v6;
  v12.Class super_class = (Class)type metadata accessor for TransitLineContext();
  return [super init];
}

void sub_1002422C4(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (!v3) {
    return;
  }
  id v4 = [v3 mapView];
  if (!v4) {
    return;
  }
  id v27 = v4;
  id v5 = [a1 mapRegion];
  if (v5)
  {
    id v6 = v5;
    id v7 = [v27 mapRegion];
    if (v7)
    {
      id v8 = v7;
      sub_100100830(0, &qword_1015D6428);
      id v9 = v6;
      id v10 = v8;
      LOBYTE(v8) = static NSObject.== infix(_:_:)();

      if (v8)
      {
        id v6 = v27;
LABEL_19:

        uint64_t v15 = v6;
        goto LABEL_20;
      }
    }
    Date.timeIntervalSinceNow.getter();
    if (fabs(v11) >= 30.0)
    {
      id v12 = [v27 _selectedTransitLineIDs];
      if (v12)
      {
        id v13 = v12;
        sub_100100830(0, &qword_1015D6420);
        uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v14 = 0;
      }
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_100F5DFF0;
      *(void *)(v16 + 32) = (id)MKMapItemIdentifierFromGEOTransitLine();
      specialized Array._endMutation()();
      if (v14)
      {
        unint64_t v17 = swift_bridgeObjectRetain();
        unsigned __int8 v18 = sub_10019EE64(v17, v16);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_18;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v6 = v6;
      GEOMapRectForMapRegion();
      double v20 = v19;
      double v22 = v21;
      double v24 = v23;
      double v26 = v25;

      [v27 setVisibleMapRect:1 v20, v22, v24, v26];
    }
LABEL_18:
    id v9 = v27;
    goto LABEL_19;
  }
  uint64_t v15 = v27;
LABEL_20:
}

uint64_t sub_100242554()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100242630(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  char v8 = *(unsigned char *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100240D14(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_1002426C0()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100242794(uint64_t a1, uint64_t a2)
{
  return sub_1002427AC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100240B78);
}

uint64_t sub_1002427AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(unsigned __int8 *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7, v8, v9, v10);
}

uint64_t sub_100242850()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100242898()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100242984()
{
  return sub_100242AE8(type metadata accessor for PlaceSummaryTextHighlightType);
}

uint64_t type metadata accessor for PlaceSummaryTextHighlightType()
{
  return self;
}

id sub_100242AD0()
{
  return sub_100242AE8(type metadata accessor for PlaceSummaryTextHighlightConfiguration);
}

id sub_100242AE8(uint64_t (*a1)(void))
{
  v3.id receiver = v1;
  v3.Class super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryTextHighlightConfiguration()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for PlaceSummaryTextHighlightType.TextHighlightType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100242C60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryTextHighlightType.TextHighlightType()
{
  return &type metadata for PlaceSummaryTextHighlightType.TextHighlightType;
}

unint64_t sub_100242C9C()
{
  unint64_t result = qword_1015D6498;
  if (!qword_1015D6498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6498);
  }
  return result;
}

void *sub_100242CF0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController);
  if (v1)
  {
    id v2 = v1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  int v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController);
  if (v3)
  {
    id v4 = v3;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100242E8C(uint64_t result)
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController;
  if (!*(void *)(result + OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController))
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(result + OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem);
    if (v3)
    {
      id v4 = (void *)swift_unknownObjectRetain();
      uint64_t v5 = sub_1003A1138(v4);
      unsigned int v6 = *(void **)(v2 + v1);
      if (v6
        || (id v7 = [objc_allocWithZone((Class)LineCardViewController) init],
            [v7 setContaineeDelegate:v2],
            [v7 setLineCardDelegate:v2],
            uint64_t v8 = *(void **)(v2 + v1),
            *(void *)(v2 + v1) = v7,
            v8,
            (unsigned int v6 = *(void **)(v2 + v1)) != 0))
      {
        [v6 setLineItem:v3 labelMarker:*(void *)(v2 + OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker) loading:v5 preferredLayout:0];
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_1002430AC(void *a1, uint64_t a2)
{
  id v3 = [a1 mapView];
  if (v3)
  {
    id v10 = v3;
    [v3 _setApplicationState:4];
    self;
    id v4 = (void *)swift_dynamicCastObjCClass();
    if (v4) {
      [v4 updateViewMode:3 animated:1 preserveMapSelection:1];
    }
    uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem);
    if (v5)
    {
      unsigned int v6 = *(void **)(a2 + OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker);
      swift_unknownObjectRetain();
      if (v6) {
        int v7 = [v6 _maps_lineShouldZoomMapRegionOnSelection];
      }
      else {
        int v7 = 0;
      }
      sub_10024109C(v5, v7);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker);
      if (v8)
      {
        id v9 = v8;
        [v9 _maps_lineShouldZoomMapRegionOnSelection];
      }
    }
  }
}

uint64_t sub_100243320()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100243360()
{
  sub_1002430AC(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100243368()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002433A0()
{
  return sub_100242E8C(*(void *)(v0 + 16));
}

uint64_t sub_1002433B0()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    swift_getObjectType();
    uint64_t v2 = swift_conformsToProtocol2();
    if (v2) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 0;
    }
    if (v2) {
      uint64_t v4 = v1;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v4)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
      return swift_unknownObjectRelease();
    }
    else
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10024349C()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v0 + 16));
  Hasher._combine(_:)(*(unsigned char *)(v0 + 17));
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v4 + 1))
    {
      v6[0] = v3;
      v6[1] = v4;
      uint64_t v7 = v5;
      AnyHashable.hash(into:)();
      sub_1000F351C((uint64_t)v6);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v5 = 0;
    long long v3 = 0u;
    long long v4 = 0u;
  }
  sub_10010A7C4((uint64_t)&v3);
  Swift::UInt Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Hasher._combine(_:)(Strong);
    swift_unknownObjectRelease();
  }
LABEL_8:
  swift_bridgeObjectRetain();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002435D0()
{
  return Hasher._finalize()();
}

Swift::Int sub_100243614()
{
  return Hasher._finalize()();
}

uint64_t sub_100243650()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100243698()
{
  return sub_1002433B0();
}

uint64_t assignWithCopy for HomeListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HomeListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  swift_unknownObjectWeakTakeAssign();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100243790()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SwiftUtils.Strings()
{
  return self;
}

id sub_1002438B4(void *a1)
{
  uint64_t v3 = sub_1000FF33C(&qword_1015D6658);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D6660);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (int *)type metadata accessor for RefinementsBarButtonViewModel(0);
  uint64_t v47 = *((void *)v9 - 1);
  __chkstk_darwin(v9);
  double v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v48 = (uint64_t)&v42 - v13;
  *(void *)&double v15 = __chkstk_darwin(v14).n128_u64[0];
  unint64_t v17 = (char *)&v42 - v16;
  id v18 = [a1 resultRefinementBar:v15];
  id v19 = [v18 resultRefinements];

  sub_100100830(0, &qword_1015D5AC8);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v21 = (uint64_t)result;
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
  }
  uint64_t v42 = v11;
  id v43 = v5;
  uint64_t v44 = v1;
  id v45 = a1;
  if (v21)
  {
    if (v21 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v23 = 0;
    double v24 = (unsigned int (**)(char *, uint64_t, int *))(v47 + 48);
    double v25 = _swiftEmptyArrayStorage;
    id v46 = v9;
    do
    {
      if ((v20 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(v20 + 8 * v23 + 32);
      }
      id v27 = v26;
      sub_100243E18(v26, (uint64_t)v8);

      if ((*v24)(v8, 1, v9) == 1)
      {
        sub_1000FF2E0((uint64_t)v8, &qword_1015D6660);
      }
      else
      {
        sub_1002467CC((uint64_t)v8, (uint64_t)v17, type metadata accessor for RefinementsBarButtonViewModel);
        sub_1002467CC((uint64_t)v17, v48, type metadata accessor for RefinementsBarButtonViewModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v25 = (void *)sub_1001D0710(0, v25[2] + 1, 1, (unint64_t)v25);
        }
        unint64_t v29 = v25[2];
        unint64_t v28 = v25[3];
        if (v29 >= v28 >> 1) {
          double v25 = (void *)sub_1001D0710(v28 > 1, v29 + 1, 1, (unint64_t)v25);
        }
        uint64_t v25[2] = v29 + 1;
        sub_1002467CC(v48, (uint64_t)v25+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v29, type metadata accessor for RefinementsBarButtonViewModel);
        id v9 = v46;
      }
      ++v23;
    }
    while (v21 != v23);
  }
  else
  {
    double v25 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease_n();
  id v51 = v25;
  id v30 = [v45 resultRefinementView];
  if (v30)
  {
    id v31 = v30;
    id v32 = sub_100244848(v30);

    if (v32)
    {
      id v33 = v32;
      uint64_t v34 = (uint64_t)v42;
      UUID.init()();
      uint64_t v35 = v34 + v9[5];
      *(void *)uint64_t v35 = 0xD000000000000021;
      *(void *)(v35 + 8) = 0x8000000100F7F580;
      *(unsigned char *)(v35 + 16) = 1;
      *(unsigned char *)(v34 + v9[6]) = 0;
      *(unsigned char *)(v34 + v9[7]) = 0;
      uint64_t v36 = (_OWORD *)(v34 + v9[8]);
      *uint64_t v36 = 0u;
      v36[1] = 0u;
      *(void *)(v34 + v9[9]) = v33;
      uint64_t v37 = v34 + v9[10];
      *(void *)uint64_t v37 = 0;
      *(unsigned char *)(v37 + 8) = 1;
      uint64_t v38 = (uint64_t)v43;
      sub_1001302BC(v34, (uint64_t)v43);
      sub_100348808(0, 0, v38);

      sub_100130320(v34);
      double v25 = v51;
    }
  }
  if (v25[2])
  {
    uint64_t v39 = (objc_class *)type metadata accessor for RefinementsBarViewModel(0);
    uint64_t v40 = objc_allocWithZone(v39);
    v40[OBJC_IVAR____TtC4Maps23RefinementsBarViewModel_tapInteractionEnabled] = 1;
    swift_beginAccess();
    int v50 = v25;
    unint64_t v41 = v40;
    sub_1000FF33C(&qword_1015CEBE8);
    Published.init(initialValue:)();
    swift_endAccess();

    v49.id receiver = v41;
    v49.Class super_class = v39;
    return [super init];
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_100243E18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D6648);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char **)type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element(0);
  uint64_t v91 = (uint64_t)*(v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v95 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  uint64_t v90 = (uint64_t)&v84 - v11;
  switch((unint64_t)objc_msgSend(a1, "type", v10))
  {
    case 1uLL:
      id v12 = [a1 toggle];
      if (!v12) {
        goto LABEL_61;
      }
      uint64_t v13 = v12;
      uint64_t v14 = a1;
      uint64_t v87 = a2;
      id v15 = [v12 displayName];
      uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v89 = v16;

      unsigned int v86 = [v13 isSelected];
      id v17 = [v13 selectionSequenceNumber];
      if (v17)
      {
        id v18 = v17;
        id v19 = [v17 integerValue];

        char v20 = 0;
        uint64_t v21 = 0;
        id v22 = 0;
        BOOL v23 = 0;
        id v24 = 0;
        char v25 = 0;
      }
      else
      {

        id v19 = 0;
        uint64_t v21 = 0;
        id v22 = 0;
        BOOL v23 = 0;
        id v24 = 0;
        char v25 = 0;
        char v20 = 1;
      }
      goto LABEL_55;
    case 2uLL:
      id v12 = [a1 multiSelect];
      if (!v12) {
        goto LABEL_61;
      }
      id v26 = v12;
      BOOL v85 = a1;
      id v27 = [v12 displayName];
      if (v27)
      {
        unint64_t v28 = v27;
        uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v30 = v29;
      }
      else
      {
        uint64_t v88 = 0;
        uint64_t v30 = 0;
      }
      id v59 = [v26 multiSelect];
      sub_100100830(0, (unint64_t *)&unk_1015D6630);
      unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v14 = v85;
        if (v60) {
          goto LABEL_34;
        }
LABEL_59:

        swift_bridgeObjectRelease();
        unsigned int v58 = 0;
        if (!v30) {
          goto LABEL_60;
        }
        goto LABEL_54;
      }
      uint64_t v60 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v14 = v85;
      if (!v60) {
        goto LABEL_59;
      }
LABEL_34:
      uint64_t v89 = v30;
      unint64_t v36 = v31 & 0xC000000000000001;
      uint64_t v6 = 4;
      uint64_t v7 = &selRef_isEvFeasible;
      while (1)
      {
        if (v36) {
          id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v61 = *(id *)(v31 + 8 * v6);
        }
        unint64_t v62 = v61;
        uint64_t v63 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
LABEL_57:
          swift_bridgeObjectRetain();
          uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
LABEL_11:
          id v84 = (id)v31;
          uint64_t v87 = a2;
          unsigned int v86 = v26;
          if (v37)
          {
            if (v37 < 1)
            {
              __break(1u);
              JUMPOUT(0x1002447A8);
            }
            uint64_t v38 = 0;
            uint64_t v93 = (void (**)(uint64_t, void, uint64_t, char **))(v91 + 56);
            unint64_t v94 = v36 & 0xC000000000000001;
            uint64_t v39 = (unsigned int (**)(uint64_t, uint64_t, char **))(v91 + 48);
            uint64_t v21 = _swiftEmptyArrayStorage;
            unint64_t v92 = v36;
            do
            {
              uint64_t v40 = v37;
              unint64_t v41 = (unint64_t)v21;
              if (v94) {
                id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v42 = *(id *)(v36 + 8 * v38 + 32);
              }
              id v43 = v42;
              id v44 = [v42 displayName:v84];
              uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v47 = v46;

              id v48 = v43;
              UUID.init()();
              objc_super v49 = (uint64_t *)(v6 + *((int *)v7 + 5));
              *objc_super v49 = v45;
              v49[1] = v47;
              *(void *)(v6 + *((int *)v7 + 6)) = v48;
              (*v93)(v6, 0, 1, v7);

              if ((*v39)(v6, 1, v7) == 1)
              {
                sub_1000FF2E0(v6, &qword_1015D6648);
                unint64_t v36 = v92;
                uint64_t v21 = (void *)v41;
              }
              else
              {
                uint64_t v50 = v90;
                sub_1002467CC(v6, v90, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                sub_1002467CC(v50, v95, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                uint64_t v21 = (void *)v41;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v21 = (void *)sub_1001D0940(0, *(void *)(v41 + 16) + 1, 1, v41);
                }
                unint64_t v36 = v92;
                unint64_t v52 = v21[2];
                unint64_t v51 = v21[3];
                if (v52 >= v51 >> 1) {
                  uint64_t v21 = (void *)sub_1001D0940(v51 > 1, v52 + 1, 1, (unint64_t)v21);
                }
                void v21[2] = v52 + 1;
                sub_1002467CC(v95, (uint64_t)v21+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v52, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
              }
              ++v38;
              uint64_t v37 = v40;
            }
            while (v40 != v38);
          }
          else
          {
            uint64_t v21 = _swiftEmptyArrayStorage;
          }
          swift_bridgeObjectRelease_n();
          id v65 = v84;
          id v66 = [v84 selectedElementIndex];
          id v67 = v66;
          if (v66)
          {
            id v22 = [v66 integerValue];
          }
          else
          {
            id v22 = 0;
          }
          BOOL v23 = v67 == 0;
          id v68 = [v65 defaultSelectedElementIndex];
          uint64_t v69 = v65;
          id v24 = [v68 integerValue];

          id v19 = 0;
          char v20 = 1;
          char v25 = 1;
          uint64_t v14 = v85;
          goto LABEL_55;
        }
        unsigned int v64 = [v61 isSelected];

        if (v64) {
          break;
        }
        ++v6;
        if (v63 == v60)
        {

          swift_bridgeObjectRelease();
          unsigned int v58 = 0;
          goto LABEL_50;
        }
      }

      swift_bridgeObjectRelease();
      unsigned int v58 = 1;
LABEL_50:
      uint64_t v14 = v85;
      uint64_t v30 = v89;
      if (v89)
      {
LABEL_54:
        unsigned int v86 = v58;
        uint64_t v89 = v30;
        uint64_t v87 = a2;
        id v19 = 0;
        uint64_t v21 = 0;
        id v22 = 0;
        BOOL v23 = 0;
        id v24 = 0;
        char v20 = 1;
        char v25 = 1;
LABEL_55:
        id v74 = v14;
        uint64_t v75 = v87;
        UUID.init()();
        uint64_t v76 = (int *)type metadata accessor for RefinementsBarButtonViewModel(0);
        uint64_t v77 = v75 + v76[5];
        uint64_t v78 = v89;
        *(void *)uint64_t v77 = v88;
        *(void *)(v77 + 8) = v78;
        *(unsigned char *)(v77 + 16) = 0;
        *(unsigned char *)(v75 + v76[6]) = v86;
        *(unsigned char *)(v75 + v76[7]) = v25;
        unint64_t v79 = (void *)(v75 + v76[8]);
        *unint64_t v79 = v21;
        v79[1] = v22;
        v79[2] = v23;
        v79[3] = v24;
        *(void *)(v75 + v76[9]) = v74;
        uint64_t v80 = v75 + v76[10];
        *(void *)uint64_t v80 = v19;
        *(unsigned char *)(v80 + 8) = v20;
        return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v76 - 1) + 56))(v75, 0, 1, v76);
      }
LABEL_60:
      id v12 = 0;
LABEL_61:
      uint64_t v82 = type metadata accessor for RefinementsBarButtonViewModel((uint64_t)v12);
      uint64_t v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56);
      return v83(a2, 1, 1, v82);
    case 3uLL:
      id v12 = [a1 sort];
      if (!v12) {
        goto LABEL_61;
      }
      unint64_t v31 = (unint64_t)v12;
      BOOL v85 = a1;
      id v32 = [v12 displayName];
      uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v89 = v33;

      id v34 = [(id)v31 selectedElementIndex];
      LODWORD(v26) = v34 != 0;
      id v35 = [(id)v31 sorts];
      sub_100100830(0, &qword_1015D6650);
      unint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v36 >> 62) {
        goto LABEL_57;
      }
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 4uLL:
      if (!MapsFeature_IsEnabled_SearchAndDiscovery()) {
        goto LABEL_60;
      }
      id v12 = [a1 openOptions];
      if (!v12) {
        goto LABEL_61;
      }
      uint64_t v53 = v12;
      os_log_type_t v54 = a1;
      id v55 = [v12 openAt];
      if (v55 && (uint64_t v56 = v55, v57 = [v55 isSelected], v56, (v57 & 1) != 0))
      {
        unsigned int v58 = 1;
      }
      else
      {
        id v70 = [v53 openNow];
        if (v70)
        {
          uint64_t v71 = v70;
          unsigned int v58 = [v70 isSelected];
        }
        else
        {
          unsigned int v58 = 0;
        }
      }
      id v72 = v53;
      uint64_t v88 = sub_100245F68(v53);
      uint64_t v30 = v73;

      uint64_t v14 = v54;
      if (v30) {
        goto LABEL_54;
      }
      goto LABEL_60;
    default:
      goto LABEL_60;
  }
}

id sub_100244848(void *a1)
{
  id v1 = [a1 sections];
  sub_100100830(0, &qword_1015D65B8);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
  if (v2 >> 62) {
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v18 = v5;
      sub_100244B78(&v18, &v17);

      if (v17)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v4;
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        unint64_t v8 = v19;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_17:
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_19;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_23;
  }
LABEL_19:
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v20._uint64_t object = (void *)0x8000000100F7F3A0;
  v9._uint64_t countAndFlagsBits = 0x737265746C6946;
  v9._uint64_t object = (void *)0xE700000000000000;
  v10._uint64_t countAndFlagsBits = 0x737265746C6946;
  v10._uint64_t object = (void *)0xE700000000000000;
  v20._uint64_t countAndFlagsBits = 0xD00000000000005BLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_101611820, v10, v20);
  id v11 = objc_allocWithZone((Class)AllRefinementsViewModel);
  sub_1000FF33C((uint64_t *)&unk_1015D6620);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithSections:isa displayName:v13 viewTakesFullHeight:1];

  return v14;
}

void sub_100244B78(id *a1@<X0>, char **a2@<X8>)
{
  uint64_t v5 = v2;
  id v130 = *a1;
  switch((unint64_t)[*a1 refinementsType])
  {
    case 1uLL:
      id v6 = [v130 resultRefinements];
      sub_100100830(0, &qword_1015D5AC8);
      unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        if (!v8) {
          goto LABEL_67;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v8) {
          goto LABEL_67;
        }
      }
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        uint64_t v132 = v8;
        do
        {
          if ((v7 & 0xC000000000000001) != 0) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v7 + 8 * v9 + 32);
          }
          id v11 = v10;
          id v12 = [v10 toggle];
          if (v12)
          {
            NSString v13 = v12;
            id v14 = [v12 displayName];
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            unsigned int v138 = [v13 isSelected];
            id v15 = v13;
            id v16 = [v15 refinementKey];
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            id v17 = objc_allocWithZone((Class)AllRefinementsViewModelToggle);
            NSString v18 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            swift_unknownObjectRetain();
            NSString v19 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v20 = [v17 initWithDisplayName:v18 isSelected:v138 data:v15 refinementKey:v19];

            uint64_t v8 = v132;
            if (v20)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
          }
          else
          {
          }
          ++v9;
        }
        while (v8 != v9);
LABEL_67:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v82) {
            goto LABEL_69;
          }
        }
        else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_69:
          id v75 = [v130 sectionHeader];
          if (v75)
          {
            uint64_t v76 = v75;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v78 = v77;
          }
          else
          {
            uint64_t v78 = 0;
          }
          sub_100100830(0, &qword_1015DA270);
          v79.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          if (v78)
          {
            NSString v80 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v80 = 0;
          }
          uint64_t v81 = (char *)[objc_allocWithZone((Class)AllRefinementsViewModelSectionToggles) initWithToggles:v79.super.isa displayName:v80];

          *a2 = v81;
          return;
        }
        goto LABEL_79;
      }
      __break(1u);
      goto LABEL_82;
    case 2uLL:
      id v21 = [v130 resultRefinements];
      sub_100100830(0, &qword_1015D5AC8);
      unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v22 >> 62))
      {
        uint64_t v5 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v5) {
          goto LABEL_18;
        }
LABEL_79:
        swift_bridgeObjectRelease();
        goto LABEL_80;
      }
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        goto LABEL_79;
      }
LABEL_18:
      if ((v22 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v23 = *(id *)(v22 + 32);
          goto LABEL_21;
        }
        __break(1u);
LABEL_84:
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v28)
        {
LABEL_85:
          swift_bridgeObjectRelease();
          unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_86:
          id v26 = (id)v5;
          if (v25 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v85)
            {
LABEL_88:
              if ((v25 & 0xC000000000000001) == 0)
              {
                if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
LABEL_97:
                  swift_bridgeObjectRetain();
                  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
                  if (v29) {
                    goto LABEL_25;
                  }
                  goto LABEL_98;
                }
                uint64_t v83 = (char *)*(id *)(v25 + 32);
LABEL_91:
                id v84 = v83;
                swift_bridgeObjectRelease();
                *a2 = v84;
                return;
              }
LABEL_95:
              uint64_t v83 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              goto LABEL_91;
            }
          }
          else if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_88;
          }
          swift_bridgeObjectRelease();
          *a2 = 0;
          return;
        }
LABEL_38:
        if (v28 < 1)
        {
          __break(1u);
          goto LABEL_95;
        }
        uint64_t v42 = 0;
        unint64_t v43 = v3 & 0xC000000000000001;
        id v44 = &selRef_nameFieldFirstNameOptional;
        uint64_t v127 = v5;
        unint64_t v128 = v3;
        unint64_t v125 = v3 & 0xC000000000000001;
        id v126 = (id)v28;
        while (1)
        {
          if (v43) {
            id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v48 = *(id *)(v3 + 8 * v42 + 32);
          }
          uint64_t v47 = v48;
          id v49 = [v48 v44[506]];
          if (!v49) {
            goto LABEL_45;
          }
          uint64_t v50 = v49;
          id v46 = [v49 openNow];

          if (!v46) {
            goto LABEL_45;
          }
          id v51 = [v47 v44[506]];
          if (v51) {
            break;
          }
LABEL_44:

LABEL_45:
          ++v42;

          if (v28 == v42)
          {
            swift_bridgeObjectRelease();
            unint64_t v25 = v143;
            goto LABEL_86;
          }
        }
        id v52 = v51;
        id v53 = [v51 openAt];
        if (v53)
        {
          os_log_type_t v54 = v53;
          if (qword_1015CBD78 != -1) {
            swift_once();
          }
          v144._uint64_t countAndFlagsBits = 0xD000000000000023;
          v55._uint64_t object = (void *)0x8000000100F7F400;
          v144._uint64_t object = (void *)0x8000000100F7F420;
          v55._uint64_t countAndFlagsBits = 0xD000000000000011;
          v56._uint64_t countAndFlagsBits = 0xE27461206E65704FLL;
          v56._uint64_t object = (void *)0xAA0000000000A680;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)qword_101611820, v56, v144);
          [v54 timeStamp];
          double v4 = v57;
          unsigned int v140 = [v54 isSelected];
          id v58 = [v54 isNextDay];
          id v59 = objc_allocWithZone((Class)AllRefinementsViewModelOpenAt);
          id v60 = v54;
          NSString v61 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v62 = v60;
          id v45 = [v59 initWithDisplayName:v61 timeStamp:v140 isSelected:v58 isNextDay:v62 data:v4];

          if (!v45)
          {
            uint64_t v5 = v127;
            unint64_t v3 = v128;
            unint64_t v43 = v125;
            uint64_t v28 = (uint64_t)v126;
            goto LABEL_43;
          }
          id v63 = [v46 displayName];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          unsigned int v141 = [v46 isSelected];
          id v52 = v46;
          id v64 = [v52 refinementKey];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v65 = objc_allocWithZone((Class)AllRefinementsViewModelToggle);
          NSString v66 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          swift_unknownObjectRetain();
          NSString v67 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v46 = [v65 initWithDisplayName:v66 isSelected:v141 data:v52 refinementKey:v67];

          NSString v68 = [v130 sectionHeader];
          if (v68)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            id v69 = v46;
            id v70 = v45;
            NSString v68 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            id v71 = v46;
            id v72 = v45;
          }
          id v73 = [objc_allocWithZone((Class)AllRefinementsViewModelSectionOpenOption) initWithOpenNow:v46 openAt:v45 displayName:v68];

          id v74 = v73;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          unint64_t v3 = v128;
          unint64_t v43 = v125;
          uint64_t v28 = (uint64_t)v126;
        }
        else
        {
          id v45 = v46;
          id v46 = v47;
        }

        uint64_t v47 = v52;
        uint64_t v5 = v127;
LABEL_43:
        id v44 = &selRef_nameFieldFirstNameOptional;
        goto LABEL_44;
      }
LABEL_82:
      id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_21:
      id v24 = v23;
      swift_bridgeObjectRelease();
      unint64_t v25 = (unint64_t)&selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
      id v26 = [v24 multiSelect];

      if (!v26)
      {
LABEL_80:
        *a2 = 0;
        return;
      }
      double v4 = 0.0;
      id v126 = v26;
      if (([v26 showEqualWidthButtonsOnFilterView] & 1) == 0) {
        goto LABEL_99;
      }
      id v27 = [v26 multiSelect];
      sub_100100830(0, (unint64_t *)&unk_1015D6630);
      uint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((unint64_t)v28 >> 62) {
        goto LABEL_97;
      }
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v29)
      {
LABEL_98:
        swift_bridgeObjectRelease_n();
LABEL_99:
        char v139 = 1;
        goto LABEL_100;
      }
LABEL_25:
      id v135 = self;
      if (v29 < 1)
      {
LABEL_139:
        __break(1u);
        JUMPOUT(0x100245C5CLL);
      }
      uint64_t v30 = 0;
      double v31 = 0.0;
      unint64_t v133 = v28 & 0xC000000000000001;
      char v139 = 1;
      uint64_t v32 = v28;
      do
      {
        if (v133) {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v33 = *(id *)(v28 + 8 * v30 + 32);
        }
        id v34 = v33;
        id v35 = [v33 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v36 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v37 = [v135 preferredFontForTextStyle:UIFontTextStyleBody];
        [v36 _maps_sizeWithFont:v37];
        double v39 = v38;

        double v40 = v31;
        if (v139) {
          double v40 = 0.0;
        }
        if (v40 < v39) {
          double v31 = v39;
        }
        v139 &= v40 >= v39;
        ++v30;
        uint64_t v28 = v32;
      }
      while (v29 != v30);
      swift_bridgeObjectRelease_n();
      double v4 = v31;
      id v26 = v126;
      unint64_t v25 = 0x101577000;
LABEL_100:
      id v86 = [v26 *(SEL *)(v25 + 352)];
      sub_100100830(0, (unint64_t *)&unk_1015D6630);
      unint64_t v87 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v87 >> 62))
      {
        uint64_t v88 = *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v88) {
          goto LABEL_102;
        }
LABEL_123:
        swift_bridgeObjectRelease();
        goto LABEL_124;
      }
      swift_bridgeObjectRetain();
      uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
      if (!v88) {
        goto LABEL_123;
      }
LABEL_102:
      if (v88 < 1)
      {
        __break(1u);
        goto LABEL_139;
      }
      uint64_t v89 = 0;
      unint64_t v129 = v87 & 0xC000000000000001;
      do
      {
        if (v129) {
          id v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v90 = *(id *)(v87 + 8 * v89 + 32);
        }
        uint64_t v91 = v90;
        id v92 = [v90 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        unsigned int v136 = [v91 isSelected];
        if (v139) {
          id v93 = 0;
        }
        else {
          id v93 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v4];
        }
        unint64_t v94 = v87;
        id v95 = [v91 refinementKey];
        if (v95)
        {
          uint64_t v96 = v95;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v98 = v97;
        }
        else
        {
          uint64_t v98 = 0;
        }
        NSString v99 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        if (v98)
        {
          NSString v100 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v100 = 0;
        }
        unint64_t v87 = v94;
        id v101 = objc_allocWithZone((Class)AllRefinementsViewModelMultiSelectElement);
        id v102 = v91;
        id v103 = [v101 initWithDisplayName:v99 isSelected:v136 optionalLabelWidth:v93 refinementKey:v100 data:v102];

        if (v103)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        ++v89;
      }
      while (v88 != v89);
      swift_bridgeObjectRelease();
      id v26 = v126;
LABEL_124:
      swift_bridgeObjectRelease();
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v124 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v124) {
          goto LABEL_126;
        }
LABEL_137:
        swift_bridgeObjectRelease();

        goto LABEL_80;
      }
      if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_137;
      }
LABEL_126:
      BOOL v104 = [v26 clauseType] == (id)1;
      id v105 = [v130 sectionHeader];
      uint64_t v142 = v104;
      if (v105)
      {
        uint64_t v106 = v105;
        uint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v134 = v108;
        id v137 = (id)v107;
      }
      else
      {
        uint64_t v134 = 0;
        id v137 = 0;
      }
      id v109 = [v26 maximumNumberOfSelectElements];
      char v110 = [v26 showEqualWidthButtonsOnFilterView];
      uint64_t v111 = v26;
      id v112 = [v26 displayNameForMultiSelected];
      if (v112)
      {
        unint64_t v113 = v112;
        uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v116 = v115;
      }
      else
      {
        uint64_t v114 = 0;
        uint64_t v116 = 0;
      }
      id v117 = [v26 multiSelectIdentifier];
      if (v117)
      {
        uint64_t v118 = v117;
        uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v121 = v120;
      }
      else
      {
        uint64_t v119 = 0;
        uint64_t v121 = 0;
      }
      id v122 = objc_allocWithZone((Class)AllRefinementsViewModelSectionMultiSelect);
      uint64_t v123 = (char *)sub_100245E1C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v137, v134, (uint64_t)v109, v142, v110, v114, v116, v119, v121);

      *a2 = v123;
      return;
    case 4uLL:
      if (!MapsFeature_IsEnabled_SearchAndDiscovery()) {
        goto LABEL_40;
      }
      unint64_t v143 = (unint64_t)_swiftEmptyArrayStorage;
      id v41 = [v130 resultRefinements];
      sub_100100830(0, &qword_1015D5AC8);
      unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v3 >> 62) {
        goto LABEL_84;
      }
      uint64_t v28 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v28) {
        goto LABEL_38;
      }
      goto LABEL_85;
    default:
LABEL_40:
      *a2 = 0;
      return;
  }
}

id sub_100245C88(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  swift_getObjCClassMetadata();
  id v6 = a3;
  unint64_t v7 = (void *)a4();

  return v7;
}

id sub_100245DC4()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for RefinementsViewModelFactory();
  return [super dealloc];
}

uint64_t type metadata accessor for RefinementsViewModelFactory()
{
  return self;
}

id sub_100245E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100100830(0, &qword_1015D6640);
  v16.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (a3)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v18 = a10;
    if (a8) {
      goto LABEL_3;
    }
LABEL_6:
    NSString v19 = 0;
    if (v18) {
      goto LABEL_4;
    }
LABEL_7:
    NSString v20 = 0;
    goto LABEL_8;
  }
  NSString v17 = 0;
  uint64_t v18 = a10;
  if (!a8) {
    goto LABEL_6;
  }
LABEL_3:
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_7;
  }
LABEL_4:
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_8:
  id v21 = [v10 initWithElements:v16.super.isa displayName:v17 maximumNumberOfSelectableElements:a4 clauseType:a5 showEqualWidthButtonsOnFilterView:a6 & 1 displayNameForMultiSelected:v19 multiSelectIdentifier:v20];

  return v21;
}

uint64_t sub_100245F68(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Calendar();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  *(void *)&double v12 = __chkstk_darwin(v10).n128_u64[0];
  id v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  uint64_t v56 = v11;
  id v15 = [a1 openAt:v12];
  if (!v15) {
    goto LABEL_11;
  }
  NSArray v16 = v15;
  uint64_t v55 = v10;
  if (![v15 isSelected])
  {

LABEL_11:
    id v24 = [a1 displayName];
    if (v24)
    {
      id v19 = v24;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_13:

      return v25;
    }
    return 0;
  }
  [v16 timeStamp];
  if (v17 == 0.0 && [v16 isSelected])
  {
    if (qword_1015CBD50 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000F2248(v18, (uint64_t)qword_1016117A8);
    id v19 = v16;
    NSString v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 134218240;
      [v19 timeStamp];
      uint64_t v58 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 1024;
      unsigned int v57 = [v19 isSelected];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "The openAt timestamp is %f and openAt selection is %{BOOL}d.", (uint8_t *)v22, 0x12u);
      swift_slowDealloc();
    }
    else
    {
    }
    id v51 = [a1 displayName];
    if (v51)
    {
      id v52 = v51;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      goto LABEL_13;
    }

    return 0;
  }
  [v16 timeStamp];
  Date.init(timeIntervalSince1970:)();
  id v26 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Calendar.current.getter();
  Class isa = Calendar._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  [v26 setCalendar:isa];

  static Locale.current.getter();
  Class v28 = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [v26 setLocale:v28];

  NSString v29 = String._bridgeToObjectiveC()();
  [v26 setDateFormat:v29];

  Class v30 = Date._bridgeToObjectiveC()().super.isa;
  id v31 = [v26 stringFromDate:v30];

  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  if ([v16 isNextDay])
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v35._uint64_t countAndFlagsBits = 0xD000000000000011;
    v36._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v59._uint64_t countAndFlagsBits = 0xD000000000000054;
    v59._uint64_t object = (void *)0x8000000100F7F520;
    v36._uint64_t object = (void *)0x8000000100F7F4E0;
    v35._uint64_t object = (void *)0x8000000100F7F500;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)qword_101611820, v35, v59);
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_100F5CF70;
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = sub_10011A750();
    *(void *)(v37 + 32) = v32;
    *(void *)(v37 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v34;
    uint64_t v25 = String.init(format:_:)();
  }
  else
  {
    NSString v38 = String._bridgeToObjectiveC()();
    [v26 setDateFormat:v38];

    id v39 = [objc_allocWithZone((Class)NSNumberFormatter) init];
    Class v40 = Date._bridgeToObjectiveC()().super.isa;
    NSString v41 = [v26 stringFromDate:v40];

    if (!v41)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v42 = [v39 numberFromString:v41];

    if (v42 && (id v43 = [v42 integerValue], v42, v43 == (id)1))
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v44.super.Class isa = (Class)qword_101611820;
      unint64_t v45 = 0xD00000000000001BLL;
      unint64_t v54 = 0x8000000100F7F470;
      id v46 = "[Open At] Open At Time 1:xx";
    }
    else
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v44.super.Class isa = (Class)qword_101611820;
      unint64_t v45 = 0xD000000000000019;
      unint64_t v54 = 0x8000000100F7F470;
      id v46 = "[Open At] Open At Time %@";
    }
    unint64_t v47 = (unint64_t)(v46 - 32) | 0x8000000000000000;
    v48._uint64_t countAndFlagsBits = 0x207441206E65704FLL;
    v48._uint64_t object = (void *)0xEA00000000004025;
    unint64_t v49 = 0xD000000000000043;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v45, (Swift::String_optional)0, v44, v48, *(Swift::String *)(&v54 - 1));
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_100F5CF70;
    *(void *)(v50 + 56) = &type metadata for String;
    *(void *)(v50 + 64) = sub_10011A750();
    *(void *)(v50 + 32) = v32;
    *(void *)(v50 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v34;
    uint64_t v25 = static String.localizedStringWithFormat(_:_:)();

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v55);
  return v25;
}

uint64_t sub_1002467CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_100246834(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = [a1 openAt];
  if (v1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v13._uint64_t countAndFlagsBits = 0xD000000000000023;
    v13._uint64_t object = (void *)0x8000000100F7F420;
    v2._uint64_t object = (void *)0x8000000100F7F400;
    v2._uint64_t countAndFlagsBits = 0xD000000000000011;
    v3._uint64_t countAndFlagsBits = 0xE27461206E65704FLL;
    v3._uint64_t object = (void *)0xAA0000000000A680;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_101611820, v3, v13);
    [v1 timeStamp];
    double v5 = v4;
    id v6 = [v1 isSelected];
    id v7 = [v1 isNextDay];
    id v8 = objc_allocWithZone((Class)AllRefinementsViewModelOpenAt);
    id v9 = v1;
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = v9;
    id v1 = [v8 initWithDisplayName:v10 timeStamp:v6 isSelected:v7 isNextDay:v11 data:v5];
  }
  return v1;
}

uint64_t sub_1002469E4(void *a1, uint64_t a2)
{
  Swift::String v2 = a1;
  double v3 = 0.0;
  double v4 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
  if (![a1 showEqualWidthButtonsOnFilterView]) {
    goto LABEL_17;
  }
  id v5 = [v2 multiSelect];
  sub_100100830(0, (unint64_t *)&unk_1015D6630);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v72 = v6;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
LABEL_17:
    char v11 = 1;
    goto LABEL_18;
  }
LABEL_4:
  uint64_t result = self;
  id v70 = (id)result;
  if (v7 < 1) {
    goto LABEL_66;
  }
  uint64_t v9 = 0;
  double v10 = 0.0;
  char v11 = 1;
  uint64_t v12 = v7;
  do
  {
    if ((v72 & 0xC000000000000001) != 0) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *(id *)(v72 + 8 * v9 + 32);
    }
    id v14 = v13;
    id v15 = [v13 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v17 = [v70 preferredFontForTextStyle:UIFontTextStyleBody];
    [v16 _maps_sizeWithFont:v17];
    double v19 = v18;

    double v20 = v10;
    if (v11) {
      double v20 = 0.0;
    }
    if (v20 < v19) {
      double v10 = v19;
    }
    v11 &= v20 >= v19;
    ++v9;
  }
  while (v12 != v9);
  swift_bridgeObjectRelease_n();
  double v3 = v10;
  Swift::String v2 = a1;
  double v4 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
LABEL_18:
  id v21 = [v2 v4[44]];
  sub_100100830(0, (unint64_t *)&unk_1015D6630);
  unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v23 = result;
    if (result) {
      goto LABEL_20;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_41;
  }
LABEL_20:
  if (v23 >= 1)
  {
    id v24 = 0;
    unint64_t v69 = v22 & 0xC000000000000001;
    id v71 = (id)v23;
    unint64_t v73 = v22;
    do
    {
      if (v69) {
        id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v25 = *(id *)(v22 + 8 * (void)v24 + 32);
      }
      id v26 = v25;
      id v27 = [v25 displayName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v28 = [v26 isSelected];
      if (v11) {
        id v29 = 0;
      }
      else {
        id v29 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v3];
      }
      id v30 = [v26 refinementKey];
      if (v30)
      {
        id v31 = v30;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v33 = v32;
      }
      else
      {
        uint64_t v33 = 0;
      }
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      if (v33)
      {
        NSString v35 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v35 = 0;
      }
      id v36 = objc_allocWithZone((Class)AllRefinementsViewModelMultiSelectElement);
      id v37 = v26;
      id v38 = [v36 initWithDisplayName:v34 isSelected:v28 optionalLabelWidth:v29 refinementKey:v35 data:v37];

      if (v38)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      id v24 = (char *)v24 + 1;
      unint64_t v22 = v73;
    }
    while (v71 != v24);
    swift_bridgeObjectRelease();
    Swift::String v2 = a1;
LABEL_42:
    swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v66)
      {
LABEL_44:
        BOOL v39 = [v2 clauseType] == (id)1;
        id v40 = [v2 maximumNumberOfSelectElements];
        id v41 = [v2 showEqualWidthButtonsOnFilterView];
        id v42 = v2;
        id v43 = v41;
        id v44 = [v42 displayNameForMultiSelected];
        if (v44)
        {
          unint64_t v45 = v44;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v47 = v46;
        }
        else
        {
          uint64_t v47 = 0;
        }
        id v48 = [a1 multiSelectIdentifier];
        if (v48)
        {
          unint64_t v49 = v48;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v51 = v50;
        }
        else
        {
          uint64_t v51 = 0;
        }
        sub_100100830(0, &qword_1015D6640);
        v52.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        if (v47)
        {
          NSString v53 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          if (v51)
          {
LABEL_52:
            NSString v54 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
LABEL_55:
            id v55 = [objc_allocWithZone((Class)AllRefinementsViewModelSectionMultiSelect) initWithElements:v52.super.isa displayName:0 maximumNumberOfSelectableElements:v40 clauseType:v39 showEqualWidthButtonsOnFilterView:v43 displayNameForMultiSelected:v53 multiSelectIdentifier:v54];

            sub_1000FF33C(&qword_1015CD310);
            uint64_t v56 = swift_allocObject();
            *(_OWORD *)(v56 + 16) = xmmword_100F5DFF0;
            *(void *)(v56 + 32) = v55;
            specialized Array._endMutation()();
            id v57 = v55;
            id v58 = [a1 displayName];
            if (v58)
            {
              Swift::String v59 = v58;
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v61 = v60;
            }
            else
            {
              uint64_t v61 = 0;
            }
            sub_1000FF33C((uint64_t *)&unk_1015D6620);
            v62.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            if (v61)
            {
              NSString v63 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            else
            {
              NSString v63 = 0;
            }
            id v64 = [objc_allocWithZone((Class)AllRefinementsViewModel) initWithSections:v62.super.isa displayName:v63 viewTakesFullHeight:0];

            id v65 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a2];
            [v64 setTappedBarButtonIndex:v65];

            return (uint64_t)v64;
          }
        }
        else
        {
          NSString v53 = 0;
          if (v51) {
            goto LABEL_52;
          }
        }
        NSString v54 = 0;
        goto LABEL_55;
      }
    }
    else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

id sub_1002471C4(void *a1, uint64_t a2)
{
  if (!MapsFeature_IsEnabled_SearchAndDiscovery()) {
    return 0;
  }
  id v4 = [a1 openNow];
  if (!v4) {
    return 0;
  }
  id v5 = v4;
  id v6 = sub_100246834(a1);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v5 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v9 = [v5 isSelected];
    id v10 = v5;
    id v11 = [v10 refinementKey];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v12 = objc_allocWithZone((Class)AllRefinementsViewModelToggle);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v15 = [v12 initWithDisplayName:v13 isSelected:v9 data:v10 refinementKey:v14];

    id v16 = objc_allocWithZone((Class)AllRefinementsViewModelSectionOpenOption);
    id v17 = v7;
    id v18 = v15;
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [v16 initWithOpenNow:v18 openAt:v17 displayName:v19];

    sub_1000FF33C(&qword_1015CD310);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100F5DFF0;
    *(void *)(v21 + 32) = v20;
    specialized Array._endMutation()();
    id v22 = v20;
    id v23 = [a1 displayName];
    if (v23)
    {
      id v24 = v23;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v26 = 0;
    }
    sub_1000FF33C((uint64_t *)&unk_1015D6620);
    v28.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    if (v26)
    {
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v29 = 0;
    }
    id v27 = [objc_allocWithZone((Class)AllRefinementsViewModel) initWithSections:v28.super.isa displayName:v29 viewTakesFullHeight:0];

    id v30 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a2];
    [v27 setTappedBarButtonIndex:v30];
  }
  else
  {

    return 0;
  }
  return v27;
}

unsigned char *storeEnumTagSinglePayload for PlaceSummaryUnitRatings(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002475B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitRatings()
{
  return &type metadata for PlaceSummaryUnitRatings;
}

uint64_t sub_1002475E8()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  Swift::String v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v5, qword_101611828);
  sub_1000F2248(v5, (uint64_t)qword_101611828);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100247754()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF4F8);
  __chkstk_darwin(v0 - 8);
  Swift::String v2 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v48 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF33C(&qword_1015D66D8);
  uint64_t v10 = sub_1000FF33C(&qword_1015CD270);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v55 = *(void *)(v11 + 72);
  uint64_t v12 = v10 - 8;
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  uint64_t v40 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_100F5F5F0;
  uint64_t v15 = *(int *)(v12 + 56);
  uint64_t v51 = v12;
  unint64_t v49 = v14 + v13;
  *(void *)&long long v50 = v14 + v13 + v15;
  *(unsigned char *)(v14 + v13) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  id v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v7 += 56;
  NSString v54 = v16;
  v16(v5, 1, 1, v6);
  uint64_t v17 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v47 = v18 + 56;
  uint64_t v39 = v17;
  v46(v2, 1, 1, v17);
  uint64_t v19 = sub_1000FF33C((uint64_t *)&unk_1015CF510);
  uint64_t v20 = *(void *)(v7 + 16);
  uint64_t v21 = *(unsigned __int8 *)(v7 + 24);
  uint64_t v22 = 2 * v20;
  uint64_t v44 = v7;
  uint64_t v45 = v20;
  uint64_t v43 = (v21 + 32) & ~v21;
  uint64_t v52 = v21 | 7;
  uint64_t v53 = v19;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100F5CF80;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  id v41 = v2;
  id v42 = v9;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  unint64_t v23 = v49;
  *(unsigned char *)(v49 + v55) = 2;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v24 = v48;
  v54(v5, 1, 1, v48);
  uint64_t v25 = v17;
  uint64_t v26 = v46;
  v46(v2, 1, 1, v25);
  uint64_t v38 = v43 + v22;
  uint64_t v27 = swift_allocObject();
  long long v50 = xmmword_100F5CFA0;
  *(_OWORD *)(v27 + 16) = xmmword_100F5CFA0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  NSString v35 = v5;
  NSArray v28 = v41;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v37 = 2 * v55;
  NSString v29 = (unsigned char *)(v23 + 2 * v55);
  id v36 = &v29[*(int *)(v51 + 56)];
  *NSString v29 = 3;
  LocalizedStringResource.init(stringLiteral:)();
  v54(v5, 1, 1, v24);
  uint64_t v30 = v39;
  v26(v28, 1, 1, v39);
  *(_OWORD *)(swift_allocObject() + 16) = v50;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  id v31 = v41;
  uint64_t v32 = v35;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(unsigned char *)(v49 + v37 + v55) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v54(v32, 1, 1, v48);
  v46(v31, 1, 1, v30);
  *(_OWORD *)(swift_allocObject() + 16) = v50;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  unint64_t result = sub_10011653C(v40);
  qword_101611840 = result;
  return result;
}

uint64_t sub_100247DFC(char *a1, char *a2)
{
  return sub_100308D7C(*a1, *a2);
}

unint64_t sub_100247E0C()
{
  unint64_t result = qword_1015D6668;
  if (!qword_1015D6668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6668);
  }
  return result;
}

Swift::Int sub_100247E60()
{
  return Hasher._finalize()();
}

uint64_t sub_100247EBC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100247EFC()
{
  return Hasher._finalize()();
}

unint64_t sub_100247F54@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002488B0(*a1);
  *a2 = result;
  return result;
}

void sub_100247F84(void *a1@<X8>)
{
  *a1 = *(void *)&aDriving_4[8 * *v1];
  a1[1] = 0xE700000000000000;
}

unint64_t sub_100247FA4()
{
  unint64_t result = qword_1015D6670;
  if (!qword_1015D6670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6670);
  }
  return result;
}

unint64_t sub_100247FFC()
{
  unint64_t result = qword_1015D6678;
  if (!qword_1015D6678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6678);
  }
  return result;
}

unint64_t sub_100248054()
{
  unint64_t result = qword_1015D6680;
  if (!qword_1015D6680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6680);
  }
  return result;
}

unint64_t sub_1002480AC()
{
  unint64_t result = qword_1015D6688;
  if (!qword_1015D6688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6688);
  }
  return result;
}

unint64_t sub_100248104()
{
  unint64_t result = qword_1015D6690;
  if (!qword_1015D6690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6690);
  }
  return result;
}

unint64_t sub_10024815C()
{
  unint64_t result = qword_1015D6698;
  if (!qword_1015D6698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6698);
  }
  return result;
}

uint64_t sub_1002481B0()
{
  if (qword_1015CBD88 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

unint64_t sub_100248210()
{
  unint64_t result = qword_1015D66A0;
  if (!qword_1015D66A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D66A0);
  }
  return result;
}

unint64_t sub_100248268()
{
  unint64_t result = qword_1015D66A8;
  if (!qword_1015D66A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D66A8);
  }
  return result;
}

unint64_t sub_1002482C0()
{
  unint64_t result = qword_1015D66B0;
  if (!qword_1015D66B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D66B0);
  }
  return result;
}

unint64_t sub_100248318()
{
  unint64_t result = qword_1015D66B8;
  if (!qword_1015D66B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D66B8);
  }
  return result;
}

uint64_t sub_10024836C(uint64_t a1)
{
  unint64_t v2 = sub_100248318();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1002483BC()
{
  unint64_t result = qword_1015D66C0;
  if (!qword_1015D66C0)
  {
    sub_10010118C(&qword_1015D66C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D66C0);
  }
  return result;
}

void sub_100248418(void *a1@<X8>)
{
  *a1 = &off_1012D8028;
}

uint64_t sub_100248428@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBD80 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611828);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1002484D0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100248520()
{
  unint64_t result = qword_1015D66D0;
  if (!qword_1015D66D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D66D0);
  }
  return result;
}

uint64_t sub_100248574(uint64_t a1)
{
  unint64_t v2 = sub_100248520();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unsigned char *storeEnumTagSinglePayload for TransportType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10024868CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportType()
{
  return &type metadata for TransportType;
}

uint64_t sub_1002486C4(unsigned __int8 a1)
{
  switch(a1)
  {
    case 1u:
    case 2u:
    case 3u:
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v3) {
        return 0;
      }
      if (a1 == 1) {
        return a1;
      }
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        return 1;
      }
      if (a1 == 3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 4;
      }
      if (a1 > 1u) {
        return a1;
      }
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        return 2;
      }
      return 0;
    default:
      swift_bridgeObjectRelease();
      return 0;
  }
}

unint64_t sub_1002488B0(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012D7FA8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

id sub_10024899C(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(void *)&v4[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView] = 0;
  swift_unknownObjectWeakInit();
  v22.id receiver = v4;
  v22.Class super_class = (Class)type metadata accessor for RefinementsBarUIView();
  id v10 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v11 = self;
  id v12 = v10;
  id v13 = [v11 clearColor];
  [v12 setBackgroundColor:v13];

  id v14 = [self defaultCenter];
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21[4] = sub_100249788;
  v21[5] = v15;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  void v21[2] = sub_1002FDA50;
  v21[3] = &unk_1012DF338;
  id v16 = _Block_copy(v21);
  swift_release();
  id v17 = [v14 addObserverForName:UIContentSizeCategoryDidChangeNotification object:0 queue:0 usingBlock:v16];
  _Block_release(v16);
  swift_unknownObjectRelease();

  id v18 = v12;
  NSString v19 = String._bridgeToObjectiveC()();
  [v18 setAccessibilityIdentifier:v19];

  return v18;
}

void sub_100248BF0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView);

    [v2 invalidateIntrinsicContentSize];
  }
}

void sub_100248E50(void *a1)
{
  if (a1)
  {
    unint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar);
    unsigned int v4 = *(void **)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 8);
    if (v4)
    {
      uint64_t v5 = *v3;
      swift_getKeyPath();
      swift_getKeyPath();
      unsigned int v6 = a1;
      sub_100249628(v5, v4);
      uint64_t v7 = v4;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.setter();
      swift_release();
      v7[OBJC_IVAR____TtC4Maps23RefinementsBarViewModel_tapInteractionEnabled] = v6[OBJC_IVAR____TtC4Maps23RefinementsBarViewModel_tapInteractionEnabled];
    }
    else
    {
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v12;
      *(void *)(v13 + 24) = a1;
      type metadata accessor for RefinementsBarViewModel(0);
      sub_100249728();
      id v14 = a1;
      uint64_t v15 = ObservedObject.init(wrappedValue:)();
      uint64_t v16 = *v3;
      id v17 = (void *)v3[1];
      *unint64_t v3 = v15;
      v3[1] = v18;
      v3[2] = (uint64_t)sub_100249720;
      v3[3] = v13;
      sub_100249668(v16, v17);
    }
    sub_100249224();
  }
  else
  {
    uint64_t v8 = (_OWORD *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar);
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar);
    id v10 = *(void **)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 8);
    _OWORD *v8 = 0u;
    v8[1] = 0u;
    sub_100249668(v9, v10);
    uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView);
    [v11 removeFromSuperview];
  }
}

void sub_100249084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v10 = (void *)Strong;
    uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v11)
    {
      v12.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      sub_1001CD278(a2, (uint64_t)v8);
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = *(void *)(v13 - 8);
      Class isa = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) != 1)
      {
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
      }
      [v11 refinementBarButtonTappedWithRefinementID:v12.super.isa submenuElementID:isa viewModel:a4];

      swift_unknownObjectRelease();
    }
  }
}

void sub_100249224()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView;
  [*(id *)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView] removeFromSuperview];
  unint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 8];
  uint64_t v26 = *(void *)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar];
  uint64_t v28 = *(void *)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 16];
  uint64_t v29 = *(void *)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 24];
  objc_allocWithZone((Class)sub_1000FF33C(&qword_1015D6780));
  sub_100249628(v26, v3);
  unsigned int v4 = (void *)UIHostingController.init(rootView:)();
  [v4 view:v26, v3, v28, v29];

  uint64_t v6 = *(void **)&v1[v2];
  *(void *)&v1[v2] = v5;

  uint64_t v7 = *(void **)&v1[v2];
  if (v7)
  {
    uint64_t v8 = self;
    id v9 = v7;
    id v10 = [v8 clearColor];
    [v9 setBackgroundColor:v10];

    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v1 addSubview:v9];
    uint64_t v11 = self;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100F62DB0;
    id v13 = [v1 leadingAnchor];
    id v14 = [v9 leadingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v12 + 32) = v15;
    id v16 = [v1 trailingAnchor];
    id v17 = [v9 trailingAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    *(void *)(v12 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v18;
    id v19 = [v1 topAnchor];
    id v20 = [v9 topAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    *(void *)(v12 + 48) = v21;
    id v22 = [v1 bottomAnchor];
    id v23 = [v9 bottomAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    *(void *)(v12 + 56) = v24;
    uint64_t v27 = v12;
    specialized Array._endMutation()();
    sub_10010B37C();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 activateConstraints:isa, v27];
  }
}

id sub_10024956C()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for RefinementsBarUIView();
  return [super dealloc];
}

uint64_t type metadata accessor for RefinementsBarUIView()
{
  return self;
}

uint64_t sub_100249628(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v2 = a2;
    return swift_retain();
  }
  return result;
}

uint64_t sub_100249668(uint64_t a1, void *a2)
{
  if (a2)
  {

    return swift_release();
  }
  return result;
}

uint64_t sub_1002496A8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002496E0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100249720(uint64_t a1, uint64_t a2)
{
  sub_100249084(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_100249728()
{
  unint64_t result = qword_1015D6788;
  if (!qword_1015D6788)
  {
    type metadata accessor for RefinementsBarViewModel(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6788);
  }
  return result;
}

void sub_100249788()
{
}

uint64_t sub_100249790(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)PlaceCardItem) initWithMapItem:a1];
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration);
  char v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent);
  uint64_t v6 = (objc_class *)type metadata accessor for PlaceCardContextConfiguration();
  uint64_t v7 = objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem] = v2;
  v7[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory] = v4;
  *(void *)&v7[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent] = v5;
  v11.id receiver = v7;
  v11.Class super_class = v6;
  id v8 = v2;
  [super init];
  sub_100321964(v9);

  return 1;
}

uint64_t sub_1002498D0(void *a1)
{
  id v3 = [a1 parkedCar];

  if (v3) {
    return 0;
  }
  uint64_t result = (uint64_t)[a1 searchResult];
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t result = (uint64_t)[(id)result mapItem];
    if (result)
    {
      uint64_t v6 = (void *)result;
      id v7 = [(id)result _geoMapItem];

      uint64_t v8 = OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration;
      id v9 = [*(id *)(*(void *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration)+ OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem) mapItem];
      id v10 = [v9 _geoMapItem];

      if ((GEOMapItemIsEqualToMapItemForPurpose() & 1) == 0)
      {
        id v11 = [objc_allocWithZone((Class)PlaceCardItem) initWithSearchResult:v5];
        uint64_t v12 = *(void *)(v1 + v8);
        char v13 = *(unsigned char *)(v12 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory);
        uint64_t v14 = *(void *)(v12 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent);
        id v15 = (objc_class *)type metadata accessor for PlaceCardContextConfiguration();
        id v16 = objc_allocWithZone(v15);
        *(void *)&v16[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem] = v11;
        v16[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory] = v13;
        *(void *)&v16[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent] = v14;
        v19.id receiver = v16;
        v19.Class super_class = v15;
        id v17 = v11;
        id v18 = [super init];
        sub_100321964(v18);
      }
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return 1;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100249B10(void *a1)
{
  uint64_t result = (uint64_t)[a1 annotation];
  if (result)
  {
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      id v4 = [objc_allocWithZone((Class)PlaceCardItem) initWithSearchResult:v3];
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration);
      char v6 = *(unsigned char *)(v5 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory);
      uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent);
      uint64_t v8 = (objc_class *)type metadata accessor for PlaceCardContextConfiguration();
      id v9 = objc_allocWithZone(v8);
      *(void *)&v9[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem] = v4;
      v9[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory] = v6;
      *(void *)&v9[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent] = v7;
      v12.id receiver = v9;
      v12.Class super_class = v8;
      id v10 = v4;
      id v11 = [super init];
      sub_100321964(v11);

      swift_unknownObjectRelease();
      return 1;
    }
    else
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100249D3C(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v5 = a1;
  swift_unknownObjectRetain();
  sub_1000FF33C((uint64_t *)&unk_1015D6850);
  if (!swift_dynamicCast())
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    sub_1000FF2E0((uint64_t)&v9, &qword_1015CF1E0);
LABEL_6:
    char v3 = 0;
    return v3 & 1;
  }
  v12[0] = v9;
  v12[1] = v10;
  uint64_t v13 = v11;
  uint64_t v8 = a2;
  swift_unknownObjectRetain();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v7 = 0;
    long long v5 = 0u;
    long long v6 = 0u;
    sub_1000FF2E0((uint64_t)&v5, &qword_1015CF1E0);
    sub_1000F351C((uint64_t)v12);
    goto LABEL_6;
  }
  long long v9 = v5;
  long long v10 = v6;
  uint64_t v11 = v7;
  char v3 = static AnyHashable.== infix(_:_:)();
  sub_1000F351C((uint64_t)&v9);
  sub_1000F351C((uint64_t)v12);
  return v3 & 1;
}

id sub_100249E58()
{
  sub_10024AE24(v0, (uint64_t)&v17);
  switch(v18[8])
  {
    case 1:
      uint64_t v1 = v17;
      sub_10024AECC((uint64_t)v18, (uint64_t)v16);
      id v3 = [self cellModelForMapsSuggestionEntry:v1];
      if (!MapsFeature_IsEnabled_LagunaBeach()
        || [v1 type] != (id)21 && !GEOConfigGetBOOL())
      {
        sub_1000FF2E0((uint64_t)v16, (uint64_t *)&unk_1015D68D0);
        goto LABEL_18;
      }
      id v9 = [objc_allocWithZone((Class)UGCProactiveCallToActionButtonView) initWithFrame:0.0, 0.0, 0.0, 0.0];
      [v9 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
      [v9 setFrame:0.0, 0.0, v10, v11];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v12 = swift_dynamicCastObjCProtocolConditional();
        if (!v12)
        {
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v12 = 0;
      }
      [v9 setDelegate:v12];
      swift_unknownObjectRelease();
      NSString v14 = [v1 uniqueIdentifier];
      if (!v14)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      [v9 setLookupIdentifier:v14];

      id v15 = v9;
      [v3 setCustomAccessoryView:v15];

      sub_1000FF2E0((uint64_t)v16, (uint64_t *)&unk_1015D68D0);
      return v3;
    case 2:
      uint64_t v1 = v17;
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v4._uint64_t countAndFlagsBits = 0xD000000000000024;
      v19._uint64_t countAndFlagsBits = 0xD000000000000040;
      v19._uint64_t object = (void *)0x8000000100F7F840;
      v4._uint64_t object = (void *)0x8000000100F7F7F0;
      v5._uint64_t object = (void *)0x8000000100F7F820;
      v5._uint64_t countAndFlagsBits = 0xD000000000000018;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)qword_101611820, v5, v19);
      NSString v6 = [v1 title];
      if (!v6)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v6 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      uint64_t v7 = self;
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v3 = [v7 cellModelForMapsSuggestionEntry:v1 title:v6 subtitle:v8];

      goto LABEL_18;
    case 3:
      uint64_t v1 = v17;
      id v2 = [self cellModelForDroppedPinFromSearchResult:v17];
      goto LABEL_17;
    case 4:
      id v3 = [self cellModelForHistoryEntryRecentsItemProtocol:v17 showAutocompleteClientSource:0 showPlaceContext:0];
      swift_unknownObjectRelease();
      return v3;
    case 5:
LABEL_16:
      uint64_t v1 = v17;
      id v2 = [self cellModelForRecentContact:v17];
      goto LABEL_17;
    default:
      uint64_t v1 = v17;
      id v2 = [self cellModelForSharedTripSummary:v17];
LABEL_17:
      id v3 = v2;
LABEL_18:

      return v3;
  }
}

id sub_10024A2C8()
{
  sub_10024AE24(v0, (uint64_t)&v2);
  switch(v3[8])
  {
    case 1:

      sub_1000FF2E0((uint64_t)v3, (uint64_t *)&unk_1015D68D0);
      goto LABEL_5;
    case 4:
    case 5:
      id result = v2;
      break;
    default:
      sub_10024AE9C((uint64_t)&v2);
LABEL_5:
      id result = 0;
      break;
  }
  return result;
}

uint64_t sub_10024A360(void *a1)
{
  [a1 setViewModel:sub_100249E58()];

  return swift_unknownObjectRelease();
}

uint64_t sub_10024A3B4()
{
  sub_10024AE24(v0, (uint64_t)&v3);
  uint64_t v1 = v3;
  if (v4[8] == 1) {
    sub_1000FF2E0((uint64_t)v4, (uint64_t *)&unk_1015D68D0);
  }
  return v1;
}

uint64_t sub_10024A444()
{
  sub_10024AE24(v0, (uint64_t)&v3);
  switch(v4[8])
  {
    case 1:
      uint64_t v1 = v3;
      sub_1000FF2E0((uint64_t)v4, (uint64_t *)&unk_1015D68D0);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
      uint64_t v1 = v3;
      break;
    default:
      sub_10024AE9C((uint64_t)&v3);
      uint64_t v1 = 0;
      break;
  }
  return v1;
}

id sub_10024A4E4()
{
  sub_10024AE24(v0, (uint64_t)&v28);
  switch(v29[8])
  {
    case 1:
      id v1 = v28;
      id v2 = [v28 geoMapItem];
      if (!v2) {
        goto LABEL_14;
      }
      uint64_t v3 = v2;
      id v4 = [objc_allocWithZone((Class)MKMapItem) initWithGeoMapItem:v2 isPlaceHolderPlace:1];
      if (!v4)
      {

LABEL_14:
        sub_1000FF2E0((uint64_t)v29, (uint64_t *)&unk_1015D68D0);
        goto LABEL_17;
      }
      Swift::String v5 = v4;
      id v6 = [objc_allocWithZone((Class)DragAndDropMapItem) initWithMapItem:v4];

      sub_1000FF2E0((uint64_t)v29, (uint64_t *)&unk_1015D68D0);
      break;
    case 2:
      id v7 = v28;
      id v8 = [v28 geoMapItem];
      if (!v8) {
        goto LABEL_16;
      }
      id v9 = v8;
      id v10 = [objc_allocWithZone((Class)MKMapItem) initWithGeoMapItem:v8 isPlaceHolderPlace:1];
      if (v10)
      {
        double v11 = v10;
        id v6 = [objc_allocWithZone((Class)DragAndDropMapItem) initWithMapItem:v10];
      }
      else
      {

LABEL_16:
LABEL_17:
        id v6 = 0;
      }
      break;
    case 3:
      id v7 = v28;
      id v12 = [v28 mapItem];
      if (!v12) {
        goto LABEL_16;
      }
      uint64_t v13 = v12;
      id v6 = [objc_allocWithZone((Class)DragAndDropMapItem) initWithMapItem:v12];

      break;
    case 4:
      id v14 = [(id)swift_unknownObjectRetain() mspHistoryEntry];
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = 0;
      uint64_t v26 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
      uint64_t v27 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v23 = 1107296256;
      id v24 = sub_10024A90C;
      uint64_t v25 = &unk_1012DF388;
      id v16 = _Block_copy(&aBlock);
      uint64_t v26 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
      uint64_t v27 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v23 = 1107296256;
      id v24 = sub_10024A90C;
      uint64_t v25 = &unk_1012DF3B0;
      id v17 = _Block_copy(&aBlock);
      uint64_t v26 = sub_10024AE94;
      uint64_t v27 = v15;
      aBlock = _NSConcreteStackBlock;
      uint64_t v23 = 1107296256;
      id v24 = sub_10024A90C;
      uint64_t v25 = &unk_1012DF3D8;
      id v18 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v14 ifSearch:v16 ifRoute:v17 ifPlaceDisplay:v18 ifTransitLineItem:0];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease_n();
      _Block_release(v18);
      _Block_release(v17);
      _Block_release(v16);
      swift_beginAccess();
      id v6 = *(id *)(v15 + 16);
      id v19 = v6;
      swift_release();
      return v6;
    case 5:
      id v20 = v28;
      id v6 = [objc_allocWithZone((Class)DragAndDropMapItem) initWithRecentContact:v28];

      return v6;
    default:

      goto LABEL_17;
  }
  return v6;
}

void sub_10024A910(void *a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)MKMapItem) initWithGeoMapItem:[a1 geoMapItem] isPlaceHolderPlace:1];
  swift_unknownObjectRelease();
  if (v3)
  {
    id v4 = [objc_allocWithZone((Class)DragAndDropMapItem) initWithMapItem:v3];

    swift_beginAccess();
    Swift::String v5 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = v4;
  }
}

void sub_10024A9D0()
{
  sub_10024AE24(v0, (uint64_t)&v13);
  switch(v14[8])
  {
    case 1:
      id v3 = v13;
      sub_10024AECC((uint64_t)v14, (uint64_t)&v9);
      Hasher._combine(_:)(1uLL);
      NSObject.hash(into:)();
      if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
      {
        if (*((void *)&v7 + 1))
        {
          long long v10 = v6;
          long long v11 = v7;
          uint64_t v12 = v8;
          AnyHashable.hash(into:)();
          sub_1000F351C((uint64_t)&v10);
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v8 = 0;
        long long v6 = 0u;
        long long v7 = 0u;
      }
      sub_1000FF2E0((uint64_t)&v6, &qword_1015CF1E0);
      Swift::UInt Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        Hasher._combine(_:)(Strong);

        swift_unknownObjectRelease();
        goto LABEL_20;
      }
LABEL_19:

LABEL_20:
      sub_1000FF2E0((uint64_t)&v9, (uint64_t *)&unk_1015D68D0);
      return;
    case 2:
      id v1 = v13;
      Swift::UInt v2 = 2;
      goto LABEL_12;
    case 3:
      id v1 = v13;
      Swift::UInt v2 = 3;
      goto LABEL_12;
    case 4:
      id v4 = v13;
      Hasher._combine(_:)(4uLL);
      id v9 = v4;
      swift_unknownObjectRetain();
      sub_1000FF33C((uint64_t *)&unk_1015D6850);
      if (swift_dynamicCast())
      {
        long long v10 = v6;
        long long v11 = v7;
        uint64_t v12 = v8;
        AnyHashable.hash(into:)();
        sub_1000F351C((uint64_t)&v10);
      }
      else
      {
        uint64_t v8 = 0;
        long long v6 = 0u;
        long long v7 = 0u;
        sub_1000FF2E0((uint64_t)&v6, &qword_1015CF1E0);
      }
      swift_unknownObjectRelease();
      return;
    case 5:
      id v1 = v13;
      Swift::UInt v2 = 5;
      goto LABEL_12;
    default:
      id v1 = v13;
      Swift::UInt v2 = 0;
LABEL_12:
      Hasher._combine(_:)(v2);
      NSObject.hash(into:)();

      return;
  }
}

uint64_t sub_10024AC14@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBD90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D67E0);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611848);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

Swift::Int sub_10024ACCC()
{
  return Hasher._finalize()();
}

Swift::Int sub_10024AD10()
{
  return Hasher._finalize()();
}

unint64_t sub_10024AD54()
{
  unint64_t result = qword_1015D6790;
  if (!qword_1015D6790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6790);
  }
  return result;
}

unint64_t sub_10024ADA8(uint64_t a1)
{
  unint64_t result = sub_10024ADD0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10024ADD0()
{
  unint64_t result = qword_1015D67D0;
  if (!qword_1015D67D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D67D0);
  }
  return result;
}

uint64_t sub_10024AE24(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10024AE5C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10024AE94(void *a1)
{
  sub_10024A910(a1, v1);
}

uint64_t sub_10024AE9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024AECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D68D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10024AF34(uint64_t a1, uint64_t a2)
{
  sub_10024AE24(a1, (uint64_t)v15);
  sub_10024AE24(a2, (uint64_t)&v16);
  switch(v15[16])
  {
    case 1:
      sub_10024AE24((uint64_t)v15, (uint64_t)&v13);
      long long v6 = v13;
      if (v18 != 1)
      {
        sub_1000FF2E0((uint64_t)v14, (uint64_t *)&unk_1015D68D0);

        goto LABEL_4;
      }
      long long v7 = v16;
      sub_10024AECC((uint64_t)v14, (uint64_t)v12);
      sub_10024AECC((uint64_t)&v17, (uint64_t)v11);
      sub_100100830(0, (unint64_t *)&qword_1015CE490);
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        char v4 = sub_1000590FC(v12, v11, v9);
        sub_1000FF2E0((uint64_t)v11, (uint64_t *)&unk_1015D68D0);
        sub_1000FF2E0((uint64_t)v12, (uint64_t *)&unk_1015D68D0);
        goto LABEL_15;
      }
      sub_1000FF2E0((uint64_t)v11, (uint64_t *)&unk_1015D68D0);
      sub_1000FF2E0((uint64_t)v12, (uint64_t *)&unk_1015D68D0);
      sub_10024AE9C((uint64_t)v15);
      goto LABEL_5;
    case 2:
      sub_10024AE24((uint64_t)v15, (uint64_t)&v13);
      uint64_t v3 = v13;
      if (v18 == 2) {
        goto LABEL_7;
      }
      goto LABEL_3;
    case 3:
      sub_10024AE24((uint64_t)v15, (uint64_t)&v13);
      uint64_t v3 = v13;
      if (v18 == 3) {
        goto LABEL_7;
      }
      goto LABEL_3;
    case 4:
      sub_10024AE24((uint64_t)v15, (uint64_t)&v13);
      if (v18 == 4)
      {
        char v4 = sub_100249D3C((uint64_t)v13, (uint64_t)v16);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_15;
      }
      swift_unknownObjectRelease();
      goto LABEL_4;
    case 5:
      sub_10024AE24((uint64_t)v15, (uint64_t)&v13);
      uint64_t v3 = v13;
      if (v18 == 5) {
        goto LABEL_7;
      }
      goto LABEL_3;
    default:
      sub_10024AE24((uint64_t)v15, (uint64_t)&v13);
      uint64_t v3 = v13;
      if (v18)
      {
LABEL_3:

LABEL_4:
        sub_1000FF2E0((uint64_t)v15, (uint64_t *)&unk_1015D6860);
LABEL_5:
        char v4 = 0;
      }
      else
      {
LABEL_7:
        Swift::String v5 = v16;
        sub_100100830(0, (unint64_t *)&qword_1015CE490);
        char v4 = static NSObject.== infix(_:_:)();

LABEL_15:
        sub_10024AE9C((uint64_t)v15);
      }
      return v4 & 1;
  }
}

void destroy for HomeListTwoLinesCellModel(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 >= 6) {
    unsigned int v1 = *(_DWORD *)a1 + 6;
  }
  switch(v1)
  {
    case 1u:

      swift_unknownObjectWeakDestroy();
      break;
    case 4u:
      swift_unknownObjectRelease();
      break;
    default:
      id v2 = *(id *)a1;

      break;
  }
}

uint64_t initializeWithCopy for HomeListTwoLinesCellModel(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 >= 6) {
    unsigned int v3 = *(_DWORD *)a2 + 6;
  }
  switch(v3)
  {
    case 1u:
      Swift::String v5 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v6 = v5;
      swift_unknownObjectWeakCopyInit();
      *(unsigned char *)(a1 + 16) = 1;
      return a1;
    case 2u:
      char v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v7 = 2;
      goto LABEL_10;
    case 3u:
      char v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v7 = 3;
      goto LABEL_10;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 16) = 4;
      swift_unknownObjectRetain();
      return a1;
    case 5u:
      char v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v7 = 5;
LABEL_10:
      *(unsigned char *)(a1 + 16) = v7;
      break;
    default:
      char v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 16) = 0;
      break;
  }
  id v8 = v4;
  return a1;
}

uint64_t assignWithCopy for HomeListTwoLinesCellModel(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)a1 + 6;
    }
    switch(v4)
    {
      case 1u:

        swift_unknownObjectWeakDestroy();
        break;
      case 4u:
        swift_unknownObjectRelease();
        break;
      default:

        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
    if (v5 >= 6) {
      unsigned int v5 = *(_DWORD *)a2 + 6;
    }
    switch(v5)
    {
      case 1u:
        char v7 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v8 = v7;
        swift_unknownObjectWeakCopyInit();
        *(unsigned char *)(a1 + 16) = 1;
        return a1;
      case 2u:
        id v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v9 = 2;
        goto LABEL_17;
      case 3u:
        id v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v9 = 3;
        goto LABEL_17;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 16) = 4;
        swift_unknownObjectRetain();
        return a1;
      case 5u:
        id v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v9 = 5;
LABEL_17:
        *(unsigned char *)(a1 + 16) = v9;
        break;
      default:
        id v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 16) = 0;
        break;
    }
    id v10 = v6;
  }
  return a1;
}

uint64_t initializeWithTake for HomeListTwoLinesCellModel(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 >= 6) {
    unsigned int v3 = *(_DWORD *)a2 + 6;
  }
  switch(v3)
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      swift_unknownObjectWeakTakeInit();
      char v4 = 1;
      break;
    case 2u:
      *(void *)a1 = *(void *)a2;
      char v4 = 2;
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      char v4 = 3;
      break;
    case 4u:
      *(void *)a1 = *(void *)a2;
      char v4 = 4;
      break;
    case 5u:
      *(void *)a1 = *(void *)a2;
      char v4 = 5;
      break;
    default:
      char v4 = 0;
      *(void *)a1 = *(void *)a2;
      break;
  }
  *(unsigned char *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for HomeListTwoLinesCellModel(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 6) {
      unsigned int v4 = *(_DWORD *)a1 + 6;
    }
    switch(v4)
    {
      case 1u:

        swift_unknownObjectWeakDestroy();
        break;
      case 4u:
        swift_unknownObjectRelease();
        break;
      default:

        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
    if (v5 >= 6) {
      unsigned int v5 = *(_DWORD *)a2 + 6;
    }
    switch(v5)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        swift_unknownObjectWeakTakeInit();
        char v6 = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v6 = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v6 = 3;
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        char v6 = 4;
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        char v6 = 5;
        break;
      default:
        char v6 = 0;
        *(void *)a1 = *(void *)a2;
        break;
    }
    *(unsigned char *)(a1 + 16) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListTwoLinesCellModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 >= 6) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HomeListTwoLinesCellModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10024B7F8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  if (result >= 6) {
    return (*(_DWORD *)a1 + 6);
  }
  return result;
}

uint64_t sub_10024B814(uint64_t result, unsigned int a2)
{
  if (a2 > 5)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 6;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_10024B844(unint64_t a1)
{
  return sub_10024BE08(a1, (uint64_t *)&unk_1015D85B0, &qword_1015D6958, &qword_1015D6950, (uint64_t *)sub_1002C2058);
}

uint64_t sub_10024B874(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unsigned int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unsigned int v3 = sub_1001CF684(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[8 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 6) && v9 < a1 + 32 + (v2 << 6)) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10024B9C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unsigned int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unsigned int v3 = sub_1001CF794(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[10 * v8 + 4];
  if (a1 + 32 < v9 + 80 * v2 && v9 < a1 + 32 + 80 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10024BB24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unsigned int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unsigned int v3 = sub_1001CF8B4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10024BC6C(unint64_t a1)
{
  return sub_100016B14(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10024EE24);
}

uint64_t sub_10024BC84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unsigned int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unsigned int v3 = sub_1000FB364(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10024BDD8(unint64_t a1)
{
  return sub_10024BE08(a1, &qword_1015D6930, (unint64_t *)&unk_1015D6940, &qword_1015D6938, (uint64_t *)sub_1002C2190);
}

uint64_t sub_10024BE08(unint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *int64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_10024EC04(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10024C02C(unint64_t a1)
{
  return sub_1000A145C(a1, (unint64_t *)&type metadata accessor for MapsSyncObject, &qword_1015D68E8, &qword_1015D68E0, (uint64_t *)sub_1002C20C0);
}

uint64_t sub_10024C068(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_10024F0BC(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10024C234(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1001D1104(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for PlaceEntity() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10024C3E4()
{
  sub_1000F1C90(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)&v7);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)&v7);
  if (!Strong)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v10 = 0u;
    goto LABEL_9;
  }
  sub_10025DE18(&v10);
  swift_unknownObjectRelease();
  if (!(void)v10)
  {
LABEL_9:
    sub_1000FF2E0((uint64_t)&v10, &qword_1015D68C0);
    return _swiftEmptyArrayStorage;
  }
  v13[0] = v10;
  v13[1] = v11;
  void v13[2] = v12;
  sub_1000FF27C((uint64_t)v13 + 8, (uint64_t)&v10, (uint64_t *)&unk_1015D6960);
  sub_100101314(&v10, (uint64_t)&v7);
  sub_1000FF33C((uint64_t *)&unk_1015D1C50);
  if (!swift_dynamicCast())
  {
    long long v10 = 0uLL;
    LOBYTE(v11) = -1;
    sub_1000FF2E0((uint64_t)&v10, &qword_1015DBA60);
    sub_1000FFC8C((uint64_t)v13);
    return _swiftEmptyArrayStorage;
  }
  sub_10024F840((uint64_t)&v10, (uint64_t)v6);
  sub_10024AE24((uint64_t)v6, (uint64_t)&v7);
  if (v9 == 2)
  {
    unint64_t v2 = v7;
LABEL_13:
    unint64_t v3 = sub_10024C8C8(v2, (uint64_t)v13);
    goto LABEL_14;
  }
  if (v9 == 1)
  {
    unint64_t v2 = v7;
    sub_1000FF2E0((uint64_t)&v8, (uint64_t *)&unk_1015D68D0);
    goto LABEL_13;
  }
  if (v9)
  {
    sub_10024AE9C((uint64_t)v6);
    sub_1000FFC8C((uint64_t)v13);
    sub_10024AE9C((uint64_t)&v7);
    return _swiftEmptyArrayStorage;
  }
  unint64_t v2 = v7;
  unint64_t v3 = (unint64_t)sub_10024C5CC(v7, (uint64_t)v13);
LABEL_14:
  unint64_t v4 = v3;

  sub_10024AE9C((uint64_t)v6);
  sub_1000FFC8C((uint64_t)v13);
  return (void *)v4;
}

void *sub_10024C5CC(void *a1, uint64_t a2)
{
  id v3 = a1;
  unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
  id v4 = [a1 sharedTrips];
  sub_100100830(0, &qword_1015D6978);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  unint64_t v6 = *(void **)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_14;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_20;
    }
    id v7 = *(id *)(v5 + 32);
  }
  unint64_t v6 = v7;
  swift_bridgeObjectRelease();
  id v8 = [v3 sharedTrips];
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v10 == 1 && ([v6 hasGroupIdentifier] & 1) != 0)
  {
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000FF3F0(a2, (uint64_t)v19);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v3;
    long long v13 = v19[1];
    *(_OWORD *)(v12 + 32) = v19[0];
    *(_OWORD *)(v12 + 48) = v13;
    *(_OWORD *)(v12 + 64) = v19[2];
    aBlock[4] = sub_10024FE54;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10033153C;
    aBlock[3] = &unk_1012DF708;
    unint64_t v14 = _Block_copy(aBlock);
    id v15 = v3;
    swift_release();
    id v16 = sub_100B7E834(v14);
    _Block_release(v14);
    id v3 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_11:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      return (void *)v20;
    }
LABEL_20:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_11;
  }

  return _swiftEmptyArrayStorage;
}

unint64_t sub_10024C8C8(void *a1, uint64_t a2)
{
  unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
  if ([a1 availableRemovalBehaviors])
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000FF3F0(a2, (uint64_t)&v28);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = a1;
    long long v6 = v29;
    *(_OWORD *)(v5 + 32) = v28;
    *(_OWORD *)(v5 + 48) = v6;
    *(_OWORD *)(v5 + 64) = v30;
    uint64_t v26 = sub_10024FDAC;
    uint64_t v27 = v5;
    aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_10033153C;
    uint64_t v25 = &unk_1012DF640;
    id v7 = _Block_copy(&aBlock);
    id v8 = a1;
    swift_release();
    id v9 = sub_100B7E834(v7);
    _Block_release(v7);
    id v10 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if ([a1 type] == (id)7)
  {
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000FF3F0(a2, (uint64_t)&v28);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = a1;
    long long v13 = v29;
    *(_OWORD *)(v12 + 32) = v28;
    *(_OWORD *)(v12 + 48) = v13;
    *(_OWORD *)(v12 + 64) = v30;
    uint64_t v26 = sub_10024FDEC;
    uint64_t v27 = v12;
    aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_10033153C;
    uint64_t v25 = &unk_1012DF690;
    unint64_t v14 = _Block_copy(&aBlock);
    id v15 = a1;
    swift_release();
    id v16 = sub_100B7E954(v14);
    _Block_release(v14);
    id v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  id v19 = sub_10033D034(a2, (uint64_t)sub_10024FDE0, v18);
  swift_release_n();
  if (v19)
  {
    id v20 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  return v31;
}

void sub_10024CC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    a6(a4, a5, a1, a2);
  }
}

void sub_10024CD00(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    a1(1);
    id v4 = [self sharedManager];
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10024FDF8;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DA1FC;
    aBlock[3] = &unk_1012DF6B8;
    long long v6 = _Block_copy(aBlock);
    swift_release();
    [v4 fetchParkedCar:v6];
    _Block_release(v6);
  }
}

void sub_10024CE40()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    unint64_t v2 = self;
    [v2 captureUserAction:2037 target:8 value:0];
    [v2 captureUserAction:2040 target:8 value:0];
  }
}

void sub_10024CED8(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a2;
  id v42 = a1;
  uint64_t v7 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void **)&v4[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000F1C90((uint64_t)&v4[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], (uint64_t)v48);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v48);
  uint64_t v44 = a3;
  uint64_t v43 = v4;
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_9:
    sub_1000FF2E0((uint64_t)v9, &qword_1015D4B40);
    id v23 = 0;
    goto LABEL_10;
  }
  uint64_t v41 = a4;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v16 = v4;
  }
  else {
    id v16 = 0;
  }
  if (!v16)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v17 = *v45;
  uint64_t v18 = v4;
  id v19 = sub_1000806A8();
  v48[0] = v17;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  swift_unknownObjectRelease();

  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  a4 = v41;
  if (v20 == 1) {
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  BOOL v21 = *v14;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v23 = [v21 cellForItemAtIndexPath:isa];

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_10:
  sub_1000F1C90((uint64_t)v14, (uint64_t)v48);
  uint64_t v24 = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v48);
  if (v24
    && (id v25 = [v24 homeDeleteDelegate],
        swift_unknownObjectRelease(),
        v25))
  {
    if (v23)
    {
      [v23 bounds];
      double v27 = v26;
      double v29 = v28;
      double v31 = v30;
      double v33 = v32;
    }
    else
    {
      double v31 = 0.0;
      double v33 = 0.0;
      double v27 = 0.0;
      double v29 = 0.0;
    }
    uint64_t v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000FF3F0((uint64_t)v45, (uint64_t)v47);
    uint64_t v35 = swift_allocObject();
    long long v36 = v47[1];
    *(_OWORD *)(v35 + 24) = v47[0];
    *(void *)(v35 + 16) = v34;
    *(_OWORD *)(v35 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v36;
    *(_OWORD *)(v35 + 56) = v47[2];
    *(void *)(v35 + 72) = v44;
    *(void *)(v35 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = a4;
    uint64_t v37 = v42;
    *(void *)(v35 + 88) = v42;
    aBlock[4] = sub_10024FD94;
    aBlock[5] = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100316A88;
    aBlock[3] = &unk_1012DF5F0;
    uint64_t v38 = _Block_copy(aBlock);
    swift_retain();
    id v39 = v37;
    swift_release();
    [v25 confirmDeleteSharedTripWithSummary:v39 sourceView:v23 sourceRect:v38 completion:v27 v29 v31 v33];
    swift_unknownObjectRelease();

    _Block_release(v38);
  }
  else
  {
  }
}

void sub_10024D3CC(char a1, uint64_t a2, void **a3, void (*a4)(void), uint64_t a5, void *a6)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_11;
  }
  uint64_t v12 = Strong;
  if ((a1 & 1) == 0)
  {

LABEL_11:
    a4(0);
    return;
  }
  long long v13 = (void *)sub_10033C60C(a3, (uint64_t)a4, a5);
  sub_1000FF33C(&qword_1015CD310);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5DFF0;
  *(void *)(inited + 32) = v13;
  unint64_t v27 = inited;
  specialized Array._endMutation()();
  id v15 = v13;
  sub_10033BBE8(v27);
  swift_bridgeObjectRelease();
  id v16 = [a6 sharedTrips];
  sub_100100830(0, &qword_1015D6978);
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v17 & 0xC000000000000001) != 0)
  {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v18 = *(id *)(v17 + 32);
  }
  id v19 = v18;
  swift_bridgeObjectRelease();
  id v20 = [v19 groupIdentifier];
  if (v20)
  {
    BOOL v21 = v20;
    id v22 = [self sharedInstance];
    [v22 blockSharedTripWithIdentifier:v21];

    return;
  }

LABEL_15:
  uint64_t v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_100F5DFF0;
  *(void *)(v24 + 32) = v15;
  unint64_t v28 = v24;
  specialized Array._endMutation()();
  sub_10024FCE8();
  swift_allocError();
  *id v25 = 0;
  id v26 = v15;
  sub_10033C4E0(v28);

  swift_errorRelease();
  swift_bridgeObjectRelease();
}

void sub_10024D680(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v48 = a4;
  uint64_t v49 = a3;
  long long v50 = a2;
  uint64_t v7 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = sub_100018584();
  if (!v14)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v15 = v14;
  [v14 feedbackForEntry:a1 action:5];

  id v16 = (void **)&v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000F1C90((uint64_t)&v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], (uint64_t)v57);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v57);
  uint64_t v47 = a1;
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_10;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v18 = v5;
  }
  else {
    id v18 = 0;
  }
  if (!v18)
  {
LABEL_19:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  id v19 = *v50;
  id v20 = v5;
  id v21 = sub_1000806A8();
  v57[0] = v19;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  swift_unknownObjectRelease();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_10:
    sub_1000FF2E0((uint64_t)v9, &qword_1015D4B40);
    id v24 = 0;
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  id v22 = *v16;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v24 = [v22 cellForItemAtIndexPath:isa];

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_11:
  uint64_t v25 = v48;
  id v26 = (void *)sub_10033C60C(v50, v49, v48);
  sub_1000F1C90((uint64_t)v16, (uint64_t)v57);
  unint64_t v27 = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v57);
  if (v27
    && (id v28 = [v27 homeDeleteDelegate],
        swift_unknownObjectRelease(),
        v28))
  {
    if (v24)
    {
      [v24 bounds];
      double v30 = v29;
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;
    }
    else
    {
      double v34 = 0.0;
      double v36 = 0.0;
      double v30 = 0.0;
      double v32 = 0.0;
    }
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v37;
    *(void *)(v38 + 24) = v26;
    uint64_t v55 = sub_10024FC80;
    uint64_t v56 = (void *)v38;
    aBlock = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_10008C380;
    NSString v54 = &unk_1012DF550;
    id v39 = _Block_copy(&aBlock);
    id v40 = v26;
    swift_release();
    uint64_t v41 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v42 = (void *)swift_allocObject();
    v42[2] = v41;
    v42[3] = v40;
    v42[4] = v49;
    v42[5] = v25;
    uint64_t v43 = v47;
    v42[6] = v47;
    uint64_t v55 = sub_10024FCD8;
    uint64_t v56 = v42;
    aBlock = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_10024E0FC;
    NSString v54 = &unk_1012DF5A0;
    uint64_t v44 = _Block_copy(&aBlock);
    id v45 = v40;
    swift_retain();
    id v46 = v43;
    swift_release();
    [v28 viewController:0 removeMapsSuggestionsEntry:v46 sourceView:v24 sourceRect:v39 startBlock:v44 completionBlock:v30, v32, v34, v36];
    swift_unknownObjectRelease();

    _Block_release(v44);
    _Block_release(v39);
  }
  else
  {
  }
}

void sub_10024DC4C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100F5DFF0;
    *(void *)(inited + 32) = a2;
    unint64_t v7 = inited;
    specialized Array._endMutation()();
    id v6 = a2;
    sub_10033BBE8(v7);
    swift_bridgeObjectRelease();
  }
}

void sub_10024DCF4(char a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6, void *a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v13 = (void *)Strong;
    if ((a1 & 1) == 0)
    {
      sub_1000FF33C(&qword_1015CD310);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100F5DFF0;
      *(void *)(inited + 32) = a4;
      unint64_t v24 = inited;
      specialized Array._endMutation()();
      sub_10024FCE8();
      swift_allocError();
      *id v15 = 1;
      id v16 = a4;
      sub_10033C4E0(v24);
      swift_errorRelease();
      swift_bridgeObjectRelease();
      a5(0);
    }
    id v17 = [a7 proactiveItemType];
    switch((int)v17)
    {
      case 0:
        id v18 = @"PROACTIVE_TYPE_UNKNOWN";
        goto LABEL_29;
      case 1:
        id v18 = @"PROACTIVE_TYPE_ADDRESS";
        goto LABEL_29;
      case 2:
        id v18 = @"PROACTIVE_TYPE_FAVORITE";
        goto LABEL_29;
      case 3:
        id v18 = @"PROACTIVE_TYPE_PARKED_CAR";
        goto LABEL_29;
      case 4:
        id v18 = @"PROACTIVE_TYPE_CALENDAR";
        goto LABEL_29;
      case 5:
        id v18 = @"PROACTIVE_TYPE_BOOKED_CAR";
        goto LABEL_29;
      case 6:
        id v18 = @"PROACTIVE_TYPE_TABLE_RESERVATION";
        goto LABEL_29;
      case 7:
        id v18 = @"PROACTIVE_TYPE_TABLE_QUEUE";
        goto LABEL_29;
      case 8:
        id v18 = @"PROACTIVE_TYPE_APP_CONNECTION";
        goto LABEL_29;
      case 9:
        id v18 = @"PROACTIVE_TYPE_RESUME_NAV";
        goto LABEL_29;
      case 10:
        id v18 = @"PROACTIVE_TYPE_TRANSIT_NAV";
        goto LABEL_29;
      case 11:
        id v18 = @"PROACTIVE_TYPE_RECENTS_AND_PINS";
        goto LABEL_29;
      case 12:
        id v18 = @"PROACTIVE_TYPE_LOW_GAS";
        goto LABEL_29;
      case 13:
        id v18 = @"PROACTIVE_TYPE_VENUES";
        goto LABEL_29;
      case 14:
        id v18 = @"PROACTIVE_TYPE_FIM_HOTEL";
        goto LABEL_29;
      case 15:
        id v18 = @"PROACTIVE_TYPE_FIM_CAR_RENTAL";
        goto LABEL_29;
      case 16:
        id v18 = @"PROACTIVE_TYPE_FIM_FLIGHT";
        goto LABEL_29;
      case 17:
        id v18 = @"PROACTIVE_TYPE_FIM_TICKETED_EVENT";
        goto LABEL_29;
      case 18:
        id v18 = @"PROACTIVE_TYPE_PORTRAIT";
        goto LABEL_29;
      case 19:
        id v18 = @"PROACTIVE_TYPE_USERPLACE";
        goto LABEL_29;
      case 20:
        id v18 = @"PROACTIVE_TYPE_VEHICLEADVERTISEMENT";
        goto LABEL_29;
      case 21:
        id v18 = @"PROACTIVE_TYPE_RATING_REQUEST";
        goto LABEL_29;
      case 22:
        id v18 = @"PROACTIVE_TYPE_FAVORITE_BUTTON";
LABEL_29:
        id v19 = v18;
        break;
      default:
        id v18 = +[NSString stringWithFormat:@"(unknown: %i)", v17];
        break;
    }
    id v20 = v18;
    switch(a2)
    {
      case 0:
        uint64_t v23 = self;
        [v23 captureUserAction:18 target:8 value:0];
        [v23 captureUserAction:2167 target:8 value:v20];
        break;
      case 1:
      case 2:
        id v21 = self;
        [v21 captureUserAction:2038 target:8 value:0];
        [v21 captureUserAction:2041 target:8 value:v20];
        break;
      case 4:
      case 8:
        id v22 = self;
        [v22 captureUserAction:2166 target:8 value:0];
        [v22 captureUserAction:2168 target:8 value:v20];
        break;
      default:
        break;
    }
  }
}

uint64_t sub_10024E0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

void sub_10024E15C(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    if (a1)
    {
      sub_1000F1C90(Strong + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v7);
      id v4 = (void *)swift_unknownObjectWeakLoadStrong();
      id v5 = a1;
      sub_1000F1BD8((uint64_t)v7);
      if (v4)
      {
        id v6 = [v4 homeParkedCarActionDelegate];
        swift_unknownObjectRelease();
        if (v6)
        {
          id v5 = v5;
          [v6 editLocationForParkedCar:v5];
          swift_unknownObjectRelease();
        }
      }
    }
  }
}

void sub_10024E24C()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider);
}

id sub_10024E28C()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for HomeListSuggestionsSectionController();
  return [super dealloc];
}

uint64_t sub_10024E30C@<X0>(uint64_t a1@<X8>)
{
  if ([self isEnabled])
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v2._uint64_t countAndFlagsBits = 0xD000000000000023;
    v14._uint64_t countAndFlagsBits = 0xD000000000000037;
    v14._uint64_t object = (void *)0x8000000100F7F9D0;
    v2._uint64_t object = (void *)0x8000000100F7F980;
    v3._uint64_t object = (void *)0x8000000100F7F9B0;
    v3._uint64_t countAndFlagsBits = 0xD000000000000010;
    Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_101611820, v3, v14);
    uint64_t object = v6._object;
    uint64_t countAndFlagsBits = v6._countAndFlagsBits;
    unint64_t v7 = 0xEF736E6F69747365;
    uint64_t v8 = 0x67677553656D6F48;
  }
  else
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v9._uint64_t countAndFlagsBits = 0xD000000000000024;
    v15._uint64_t countAndFlagsBits = 0xD000000000000034;
    v15._uint64_t object = (void *)0x8000000100F7F940;
    v9._uint64_t object = (void *)0x8000000100F7F910;
    v10._uint64_t countAndFlagsBits = 0x5420646572616853;
    v10._uint64_t object = (void *)0xEC00000073706972;
    Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_101611820, v10, v15);
    uint64_t object = v11._object;
    uint64_t countAndFlagsBits = v11._countAndFlagsBits;
    unint64_t v7 = 0xEF73706972546465;
    uint64_t v8 = 0x72616853656D6F48;
  }
  *(void *)a1 = countAndFlagsBits;
  *(void *)(a1 + 8) = object;
  *(_WORD *)(a1 + 16) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t result = sub_100101750((uint64_t)v13, a1 + 24, (uint64_t *)&unk_1015D4350);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v7;
  return result;
}

id sub_10024E4E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10024C3E4();
  }
  sub_100100830(0, (unint64_t *)&unk_1015DBA50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [self configurationWithActions:isa];

  return v3;
}

uint64_t sub_10024E5B4@<X0>(uint64_t a1@<X8>)
{
  return sub_10024E30C(a1);
}

void sub_10024E5CC(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
  id v4 = [*(id *)(v3 + 48) suggestions];
  sub_100100830(0, &qword_1015D68B0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v6 = a1;
  unint64_t v7 = (void *)sub_10024F89C(v5, v6);
  swift_bridgeObjectRelease();

  if (v7)
  {
    sub_1000F1C90(v3, (uint64_t)v11);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    sub_1000F1BD8((uint64_t)v11);
    if (Strong
      && (id v9 = [Strong homePOIEnrichmentActionDelegate],
          swift_unknownObjectRelease(),
          v9))
    {
      id v10 = [v7 geoMapItem];
      [v9 addRatingsForMapItem:v10];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10024E898(uint64_t a1)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v18.id receiver = v1;
  v18.Class super_class = (Class)type metadata accessor for HomeListSuggestionsSectionController();
  [super collectionView:didSelectItemAtIndexPath:a1, isa];

  sub_1000F1C90((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v17);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v17);
  if (Strong)
  {
    sub_10025DE18(v17);
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, 48);
  }
  sub_1000FF27C((uint64_t)v17, (uint64_t)&v15, &qword_1015D68C0);
  if (v15)
  {
    sub_1000FF27C((uint64_t)&v16, (uint64_t)v11, (uint64_t *)&unk_1015D6960);
    sub_100101314(v11, (uint64_t)v12);
    sub_1000FFC8C((uint64_t)&v15);
    uint64_t v5 = v13;
    uint64_t v6 = v14;
    sub_1000FF380(v12, v13);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
    sub_1000FF22C((uint64_t)v12);
    if (v7)
    {
      self;
      uint64_t v8 = (void *)swift_dynamicCastObjCClass();
      if (v8)
      {
        NSString v9 = [v8 analyticsGrouping];
        if (!v9)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v9 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [self captureUserAction:2039 target:8 value:v9];
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    sub_1000FF2E0((uint64_t)&v15, &qword_1015D68C0);
  }
  return sub_1000FF2E0((uint64_t)v17, &qword_1015D68C0);
}

uint64_t sub_10024EB94()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_10024EBCC()
{
  return sub_10024E4E8();
}

uint64_t sub_10024EBD4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10024EC04(a1, a2, a3, &qword_1015D52E8, &qword_1015D69A8, &qword_1015D52E0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1002C2058);
}

uint64_t sub_10024EC04(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_10024FE88(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_1000FF33C(a6);
          id v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_unknownObjectRetain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_1000FF33C(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10024EE24(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10024FE88(&qword_1015D6990, &qword_1015D5D40);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000FF33C(&qword_1015D5D40);
          uint64_t v12 = sub_1002C20C0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100100830(0, &qword_1015D5D80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10024F044(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1000A1680(a1, a2, a3, (void (*)(void))&type metadata accessor for FavoriteItem, &qword_1015D6988, &qword_1015D6980, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1002C20C0);
}

uint64_t sub_10024F080(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1000A1680(a1, a2, a3, (void (*)(void))&type metadata accessor for MapsSyncObject, &qword_1015D68E8, &qword_1015D68E0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1002C20C0);
}

uint64_t sub_10024F0BC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10024FE88(&qword_1015D6928, &qword_1015D6920);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000FF33C(&qword_1015D6920);
          uint64_t v12 = sub_1002C20C0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000FF33C(&qword_1015D6918);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10024F2D0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10024FE88(&qword_1015D6910, &qword_1015D6908);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000FF33C(&qword_1015D6908);
          uint64_t v12 = sub_1002C21F8(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for GEOAPSessionSpecificModelItem(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10024F4E0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = _swiftEmptyArrayStorage;
      unint64_t v26 = v1 & 0xC000000000000001;
      for (uint64_t i = 4; ; ++i)
      {
        if (v26) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(v1 + 8 * i);
        }
        unint64_t v6 = v5;
        uint64_t v7 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_20;
        }
        id v8 = [v5 _maps_diffableDataSourceIdentifier];
        if (v8) {
          break;
        }
        long long v24 = 0u;
        long long v25 = 0u;
        long long v23 = 0u;

        if ((void)v23) {
          goto LABEL_13;
        }
        sub_1000FF2E0((uint64_t)&v23, &qword_1015D68C0);
LABEL_5:
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
      uint64_t v9 = v8;
      id v10 = sub_1000FB03C();
      Swift::String v11 = v3;
      unint64_t v12 = v1;
      uint64_t v13 = v2;
      id v14 = [v10 identifierPathByAppendingIdentifier:v9];

      *(void *)&long long v25 = &type metadata for HomeListTwoLinesCellModel;
      *((void *)&v25 + 1) = sub_10024F750();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v6;
      *(unsigned char *)(v15 + 32) = 0;
      *(void *)&long long v23 = v14;
      *((void *)&v23 + 1) = v15;
      uint64_t v2 = v13;
      unint64_t v1 = v12;
      uint64_t v3 = v11;
      uint64_t v7 = i - 3;
LABEL_13:
      long long v20 = v23;
      long long v21 = v24;
      long long v22 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1000F9638(0, v3[2] + 1, 1, v3);
      }
      unint64_t v17 = v3[2];
      unint64_t v16 = v3[3];
      if (v17 >= v16 >> 1) {
        uint64_t v3 = sub_1000F9638((void *)(v16 > 1), v17 + 1, 1, v3);
      }
      v3[2] = v17 + 1;
      uint64_t v18 = &v3[6 * v17];
      v18[3] = v21;
      void v18[4] = v22;
      v18[2] = v20;
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

unint64_t sub_10024F750()
{
  unint64_t result = qword_1015D68C8;
  if (!qword_1015D68C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D68C8);
  }
  return result;
}

uint64_t sub_10024F7A4()
{
  switch(*(unsigned char *)(v0 + 32))
  {
    case 0:
    case 2:
    case 3:
    case 5:

      break;
    case 1:

      swift_unknownObjectWeakDestroy();
      break;
    case 4:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10024F840(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10024F89C(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v6 = *(id *)(a1 + 8 * i);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        long long v20 = v6;
        id v8 = [v6 uniqueIdentifier];
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;

        id v12 = [a2 lookupIdentifier];
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        if (v9 == v13 && v11 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v3 = (uint64_t)v20;
          swift_bridgeObjectRelease();
          return v3;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_17;
        }

        if (v7 == v3)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10024FA64()
{
  sub_1000F1C90(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v15);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v15);
  if (Strong)
  {
    sub_10025DE18(v15);
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, 48);
  }
  sub_1000FF27C((uint64_t)v15, (uint64_t)&v13, &qword_1015D68C0);
  if (v13)
  {
    sub_1000FF27C((uint64_t)&v14, (uint64_t)v9, (uint64_t *)&unk_1015D6960);
    sub_100101314(v9, (uint64_t)v10);
    sub_1000FFC8C((uint64_t)&v13);
    uint64_t v2 = v11;
    uint64_t v3 = v12;
    sub_1000FF380(v10, v11);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
    sub_1000FF22C((uint64_t)v10);
    if (v4)
    {
      self;
      uint64_t v5 = (void *)swift_dynamicCastObjCClass();
      if (v5)
      {
        id v6 = v5;
        NSString v7 = [v5 analyticsGrouping];
        if (!v7)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v7 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [self captureUserAction:359 target:8 value:v7];

        [self captureDisplayActionForSuggestionsEntry:v6];
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1000FF2E0((uint64_t)&v13, &qword_1015D68C0);
  }
  return sub_1000FF2E0((uint64_t)v15, &qword_1015D68C0);
}

uint64_t sub_10024FC40()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10024FC80()
{
  sub_10024DC4C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10024FC88()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10024FCD8(char a1, uint64_t a2)
{
  sub_10024DCF4(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

unint64_t sub_10024FCE8()
{
  unint64_t result = qword_1015D6970;
  if (!qword_1015D6970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6970);
  }
  return result;
}

uint64_t sub_10024FD3C()
{
  swift_release();

  sub_1000FF22C(v0 + 32);
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_10024FD94(char a1)
{
  sub_10024D3CC(a1, *(void *)(v1 + 16), (void **)(v1 + 24), *(void (**)(void))(v1 + 72), *(void *)(v1 + 80), *(void **)(v1 + 88));
}

void sub_10024FDAC(uint64_t a1, uint64_t a2)
{
  sub_10024CC70(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), v2 + 32, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10024D680);
}

void sub_10024FDE0()
{
}

void sub_10024FDEC(void (*a1)(uint64_t))
{
}

void sub_10024FDF8(void *a1)
{
}

uint64_t sub_10024FE04()
{
  swift_release();

  sub_1000FF22C(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10024FE54(uint64_t a1, uint64_t a2)
{
  sub_10024CC70(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), v2 + 32, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10024CED8);
}

uint64_t sub_10024FE88(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HomeListSuggestionsSectionController.DeletionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10024FFA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListSuggestionsSectionController.DeletionError()
{
  return &type metadata for HomeListSuggestionsSectionController.DeletionError;
}

unint64_t sub_10024FFE0()
{
  unint64_t result = qword_1015D69B0;
  if (!qword_1015D69B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D69B0);
  }
  return result;
}

double sub_100250064()
{
  double result = 390.0;
  xmmword_1015D69C0 = xmmword_100F66E90;
  return result;
}

void sub_10025007C()
{
  qword_1015D69D0 = 0x4030000000000000;
}

void sub_10025008C()
{
  qword_1015D69D8 = 0x403C000000000000;
}

void sub_10025009C()
{
  qword_1015D69E0 = 0x403A000000000000;
}

void sub_1002500AC()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note];
  unint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8];
  if (v2)
  {
    uint64_t v3 = *(void *)v1 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(v2) & 0xF;
    }
    if (!v3)
    {
      *(void *)uint64_t v1 = 0;
      *((void *)v1 + 1) = 0;
      swift_bridgeObjectRelease();
    }
  }
  if ([v0 isViewLoaded])
  {
    id v4 = sub_100250C9C();
    [v4 setRightButtonEnabled:*((void *)v1 + 1) != 0];
  }
}

uint64_t MacPlaceNoteEditViewController.dismissHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1000F4F24(*v1);
  return v2;
}

uint64_t MacPlaceNoteEditViewController.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_10006C5D8(v6);
}

uint64_t (*MacPlaceNoteEditViewController.dismissHandler.modify())()
{
  return j__swift_endAccess;
}

id sub_1002503F4()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v1._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v8._uint64_t object = (void *)0x8000000100F7FF30;
  v1._uint64_t object = (void *)0x8000000100F7FF10;
  v2._uint64_t countAndFlagsBits = 0x746F4E2074696445;
  v2._uint64_t object = (void *)0xE900000000000065;
  v8._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)qword_101611820, v2, v8);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v3];

  id v4 = [self system22Bold];
  [v0 setFont:v4];

  id v5 = v0;
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setAccessibilityIdentifier:v6];

  return v5;
}

id sub_100250590(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    NSString v6 = (void *)a2();
    NSString v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1002505F0()
{
  id v0 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [self whiteColor];
  [v0 setBackgroundColor:v1];

  id v2 = [v0 layer];
  [v2 setCornerRadius:10.0];

  [v0 setClipsToBounds:1];
  NSString v3 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityIdentifier:v3];

  return v0;
}

id sub_100250704(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UITextView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v3 = self;
  id v4 = objc_msgSend(objc_msgSend(v3, "sharedManager"), "bodyFont");
  swift_unknownObjectRelease();
  [v2 setFont:v4];

  [v2 setAdjustsFontForContentSizeCategory:1];
  id v5 = [self labelColor];
  [v2 setTextColor:v5];

  id v6 = [self addANotePromptText];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1000FF33C(&qword_1015D6B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
  *(void *)(inited + 32) = NSFontAttributeName;
  id v8 = NSFontAttributeName;
  id v9 = objc_msgSend(objc_msgSend(v3, "sharedManager"), "bodyFont");
  swift_unknownObjectRelease();
  *(void *)(inited + 64) = sub_100100830(0, &qword_1015D6B18);
  *(void *)(inited + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v9;
  sub_1001163E4(inited);
  id v10 = objc_allocWithZone((Class)NSAttributedString);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001D5DF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithString:v11 attributes:isa];

  [v2 _maps_setAttributedPlaceholder:v13];
  [v2 setDelegate:a1];
  [v2 setScrollEnabled:1];
  id v14 = v2;
  NSString v15 = String._bridgeToObjectiveC()();
  [v14 setAccessibilityIdentifier:v15];

  return v14;
}

id sub_100250A08(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    NSString v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100250A6C(uint64_t a1)
{
  id v2 = [self buttonWithType:1];
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v13._uint64_t countAndFlagsBits = 0xD000000000000024;
  v13._uint64_t object = (void *)0x8000000100F7FEA0;
  v3._uint64_t object = (void *)0x8000000100F7FE80;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v4._uint64_t countAndFlagsBits = 0x6574656C6544;
  v4._uint64_t object = (void *)0xE600000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v13);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setTitle:v5 forState:0];

  id v6 = self;
  id v7 = [v6 systemRedColor];
  [v2 setTintColor:v7];

  id v8 = [v6 systemRedColor];
  [v2 setTitleColor:v8 forState:0];

  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v9 = [v2 titleLabel];
  if (v9)
  {
    id v10 = v9;
    id v11 = [v6 systemRedColor];
    [v10 setTextColor:v11];
  }
  [v2 setRole:3];
  [v2 addTarget:a1 action:"deleteTapped" forControlEvents:64];
  return v2;
}

id sub_100250C9C()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)MacFooterView) initWithNoBlurRightSideButtonsOfType:16];
    [v4 setDelegate:v0];
    id v3 = v4;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v5];

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id MacPlaceNoteEditViewController.__allocating_init(note:)(uint64_t a1, unint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return MacPlaceNoteEditViewController.init(note:)(a1, a2);
}

id MacPlaceNoteEditViewController.init(note:)(uint64_t a1, unint64_t a2)
{
  id v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v7 = &v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  id v8 = &v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView] = 0;
  if (a2) {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v9 = 0;
  }
  if (a2) {
    unint64_t v10 = a2;
  }
  else {
    unint64_t v10 = 0xE000000000000000;
  }
  id v11 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    a1 = 0;
    a2 = 0;
  }
  Swift::String v13 = &v11[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_originalNote];
  *(void *)Swift::String v13 = a1;
  *((void *)v13 + 1) = a2;
  *(void *)id v7 = a1;
  *((void *)v7 + 1) = a2;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  v17.id receiver = v11;
  v17.Class super_class = ObjectType;
  id v14 = [super initWithNibName:0 bundle:0];
  id result = [v14 cardPresentationController];
  if (result)
  {
    unint64_t v16 = result;
    [result setTakesAvailableHeight:1];

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall MacPlaceNoteEditViewController.viewDidLoad()()
{
  v11.id receiver = v0;
  v11.Class super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v2 = v1;
  id v3 = [self clearColor];
  [v2 setBackgroundColor:v3];

  id v4 = [v0 cardPresentationController];
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v5 = v4;
  [v4 setTakesAvailableHeight:1];

  id v6 = [v0 cardPresentationController];
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v7 = v6;
  [v6 setPresentedModally:1];

  id v8 = [v0 cardPresentationController];
  if (!v8)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  [v8 setAllowsSwipeToDismiss:0];

  sub_100251130();
  sub_100251450();
  if ([v0 isViewLoaded])
  {
    id v10 = sub_100250C9C();
    [v10 setRightButtonEnabled:*(void *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8] != 0];
  }
}

void sub_100251130()
{
  id v1 = [v0 headerView];
  if (!v1) {
    return;
  }
  id v2 = v1;
  if (qword_1015CBD98 != -1) {
    swift_once();
  }
  [v0 setPreferredContentSize:xmmword_1015D69C0];
  id v3 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_1002503F4);
  [v2 addSubview:v3];

  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v5 = v4;
  id v6 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  [v5 addSubview:v6];

  id v7 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v8 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
  [v7 addSubview:v8];

  id v9 = [v0 view];
  if (!v9)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  id v10 = v9;
  id v11 = [v9 keyboardLayoutGuide];

  [v11 setFollowsUndockedKeyboard:1];
  id v12 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
  if (*(void *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8])
  {
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v13 = 0;
  }
  [v12 setText:v13];

  id v14 = [v0 view];
  if (!v14) {
    goto LABEL_16;
  }
  NSString v15 = v14;
  id v16 = sub_100250C9C();
  [v15 addSubview:v16];

  id v17 = sub_100250C9C();
  id v18 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton, (uint64_t (*)(uint64_t))sub_100250A6C);
  [v17 addSubview:v18];
}

void sub_100251450()
{
  id v1 = [v0 headerView];
  if (!v1) {
    return;
  }
  id v2 = v1;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F66EA0;
  id v4 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_1002503F4);
  id v5 = [v4 leadingAnchor];

  id v6 = [v2 leadingAnchor];
  if (qword_1015CBDB0 != -1) {
    swift_once();
  }
  id v7 = [v5 constraintEqualToAnchor:v6 constant:*(double *)&qword_1015D69E0];

  *(void *)(v3 + 32) = v7;
  id v8 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_1002503F4);
  id v9 = [v8 topAnchor];

  id v10 = [v2 topAnchor];
  if (qword_1015CBDA8 != -1) {
    swift_once();
  }
  id v11 = [v9 constraintEqualToAnchor:v10 constant:*(double *)&qword_1015D69D8];

  *(void *)(v3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v11;
  id v12 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_1002503F4);
  id v13 = [v12 trailingAnchor];

  id v14 = [v2 trailingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14 constant:-*(double *)&qword_1015D69E0];

  *(void *)(v3 + 48) = v15;
  id v16 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_1002503F4);
  id v17 = [v16 bottomAnchor];

  id v18 = [v2 bottomAnchor];
  if (qword_1015CBDA0 != -1) {
    swift_once();
  }
  id v19 = [v17 constraintEqualToAnchor:v18 constant:-*(double *)&qword_1015D69D0];

  *(void *)(v3 + 56) = v19;
  id v20 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v21 = [v20 leadingAnchor];

  id v22 = [v0 view];
  if (!v22)
  {
    __break(1u);
    goto LABEL_18;
  }
  long long v23 = v22;
  id v24 = [v22 layoutMarginsGuide];

  id v25 = [v24 leadingAnchor];
  id v26 = [v21 constraintEqualToAnchor:v25];

  *(void *)(v3 + 64) = v26;
  id v27 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v28 = [v27 topAnchor];

  id v29 = [v2 bottomAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v3 + 72) = v30;
  id v31 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v32 = [v31 trailingAnchor];

  id v33 = [v0 view];
  if (!v33)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  double v34 = v33;
  id v35 = [v33 layoutMarginsGuide];

  id v36 = [v35 trailingAnchor];
  id v37 = [v32 constraintEqualToAnchor:v36];

  *(void *)(v3 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v37;
  id v38 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v39 = [v38 bottomAnchor];

  id v40 = sub_100250C9C();
  id v41 = [v40 topAnchor];

  id v42 = [v39 constraintEqualToAnchor:v41 constant:-*(double *)&qword_1015D69D0];
  *(void *)(v3 + 88) = v42;
  id v43 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
  id v44 = [v43 leadingAnchor];

  id v45 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v46 = [v45 leadingAnchor];

  id v47 = [v44 constraintEqualToAnchor:v46];
  *(void *)(v3 + 96) = v47;
  id v48 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
  id v49 = [v48 topAnchor];

  id v50 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v51 = [v50 topAnchor];

  id v52 = [v49 constraintEqualToAnchor:v51];
  *(void *)(v3 + 104) = v52;
  id v53 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
  id v54 = [v53 trailingAnchor];

  id v55 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v56 = [v55 trailingAnchor];

  id v57 = [v54 constraintEqualToAnchor:v56];
  *(void *)(v3 + 112) = v57;
  id v58 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
  id v59 = [v58 bottomAnchor];

  id v60 = sub_100250590(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1002505F0);
  id v61 = [v60 bottomAnchor];

  id v62 = [v59 constraintEqualToAnchor:v61];
  *(void *)(v3 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v62;
  id v63 = sub_100250C9C();
  id v64 = [v63 leadingAnchor];

  id v65 = [v0 view];
  if (!v65)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v66 = v65;
  id v67 = [v65 leadingAnchor];

  id v68 = [v64 constraintEqualToAnchor:v67];
  *(void *)(v3 + 128) = v68;
  id v69 = sub_100250C9C();
  id v70 = [v69 trailingAnchor];

  id v71 = [v0 view];
  if (!v71)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v72 = v71;
  id v73 = [v71 trailingAnchor];

  id v74 = [v70 constraintEqualToAnchor:v73];
  *(void *)(v3 + 136) = v74;
  id v75 = sub_100250C9C();
  id v76 = [v75 bottomAnchor];

  id v77 = [v0 view];
  if (!v77)
  {
LABEL_21:
    __break(1u);
    return;
  }
  uint64_t v78 = v77;
  NSArray v79 = self;
  id v80 = [v78 bottomAnchor];

  id v81 = [v76 constraintEqualToAnchor:v80];
  *(void *)(v3 + 144) = v81;
  id v82 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton, (uint64_t (*)(uint64_t))sub_100250A6C);
  id v83 = [v82 leadingAnchor];

  id v84 = sub_100250C9C();
  id v85 = [v84 leadingAnchor];

  id v86 = [v83 constraintEqualToAnchor:v85 constant:*(double *)&qword_1015D69D0];
  *(void *)(v3 + 152) = v86;
  id v87 = sub_100250A08(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton, (uint64_t (*)(uint64_t))sub_100250A6C);
  id v88 = [v87 centerYAnchor];

  id v89 = sub_100250C9C();
  id v90 = [v89 centerYAnchor];

  id v91 = [v88 constraintEqualToAnchor:v90];
  *(void *)(v3 + 16sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v91;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v79 activateConstraints:isa];
}

uint64_t _s4Maps30MacPlaceNoteEditViewControllerC09macFooterF17RightButtonTappedyySo0biF0CF_0()
{
  id v1 = (void (**)(BOOL, uint64_t, uint64_t))(v0
                                                    + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_originalNote + 8);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8);
    char v7 = (v4 | v5) == 0;
    if (v4) {
      BOOL v8 = v5 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      if (*(void *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_originalNote) == v6 && v4 == v5) {
        char v7 = 1;
      }
      else {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    sub_1000F4F24((uint64_t)v3);
    swift_bridgeObjectRetain();
    v3((v7 & 1) == 0, v6, v5);
    sub_10006C5D8((uint64_t)v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10025213C(char *a1, uint64_t a2, char a3)
{
  uint64_t v5 = &a1[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler];
  swift_beginAccess();
  uint64_t v6 = *(void (**)(void, void, void))v5;
  if (*(void *)v5)
  {
    char v7 = a1;
    sub_1000F4F24((uint64_t)v6);
    v6(a3 & 1, 0, 0);
    sub_10006C5D8((uint64_t)v6);
  }
}

Swift::Void __swiftcall MacPlaceNoteEditViewController.textViewDidChange(_:)(UITextView a1)
{
  id v2 = [(objc_class *)a1.super.super.super.super.isa text];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  char v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note);
  uint64_t *v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();

  sub_1002500AC();
}

id CollectionPickerContaineeViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

void MacPlaceNoteEditViewController.init(nibName:bundle:)()
{
}

Swift::Void __swiftcall MacPlaceNoteEditViewController.macFooterViewLeftButtonTapped(_:)(MacFooterView *a1)
{
  id v2 = (void (**)(void, void, void))(v1
                                                    + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*v2)
  {
    swift_retain();
    v3(0, 0, 0);
    sub_10006C5D8((uint64_t)v3);
  }
}

void sub_1002526D8()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  id v2 = &v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

BOOL _s4Maps30MacPlaceNoteEditViewControllerC04textF0_18shouldChangeTextIn011replacementK0SbSo06UITextF0C_So8_NSRangeVSStF_0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  id v7 = [a1 text];
  if (v7)
  {
    BOOL v8 = v7;
    unint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    unint64_t v9 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  unint64_t v12 = Range<>.init(_:in:)();
  if (v14)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1002D4910(v12, v13, a4, a5, v9, v11);
    swift_bridgeObjectRelease();
    uint64_t v15 = String.count.getter();
    swift_bridgeObjectRelease();
    return v15 < 10001;
  }
}

uint64_t type metadata accessor for MacPlaceNoteEditViewController()
{
  return self;
}

uint64_t sub_1002528A4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002528DC(char a1, uint64_t a2, void *a3)
{
  sub_1002D48A4(a1, a2, a3, *(void *)(v3 + 16));
}

unint64_t sub_1002528E8()
{
  unint64_t result = qword_1015D6B20;
  if (!qword_1015D6B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B20);
  }
  return result;
}

uint64_t sub_10025293C()
{
  return sub_1001010F8(&qword_1015D6B28, &qword_1015D6B30);
}

uint64_t sub_100252978()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611860);
  sub_1000F2248(v10, (uint64_t)qword_101611860);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_100252C50()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611878);
  sub_1000F2248(v0, (uint64_t)qword_101611878);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100252CB4()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611890);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611890);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100252D6C()
{
  uint64_t result = swift_getKeyPath();
  qword_1016118A8 = result;
  return result;
}

uint64_t sub_100252D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_100252DB8, 0, 0);
}

uint64_t sub_100252DB8()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBDD0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1016118A8;
  *(void *)(v0 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = qword_1016118A8;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D6C30, &qword_1015D6C38);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_100252F14;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_100252F14()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_100253068;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100253068()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_1016118A8;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_100253144()
{
  if (qword_1015CBDD0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1002531A4()
{
  unint64_t result = qword_1015D6B38;
  if (!qword_1015D6B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B38);
  }
  return result;
}

unint64_t sub_1002531FC()
{
  unint64_t result = qword_1015D6B40;
  if (!qword_1015D6B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B40);
  }
  return result;
}

uint64_t sub_100253250()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100253284()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002532D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBDC0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611878, a1);
}

uint64_t sub_10025330C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBDC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611890);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_100253388(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_100252DB8, 0, 0);
}

uint64_t sub_10025343C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100254328();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100253464()
{
  return 0xD000000000000036;
}

unint64_t sub_100253484()
{
  unint64_t result = qword_1015D6B50;
  if (!qword_1015D6B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B50);
  }
  return result;
}

unint64_t sub_1002534DC()
{
  unint64_t result = qword_1015D6B58;
  if (!qword_1015D6B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B58);
  }
  return result;
}

unint64_t sub_100253534()
{
  unint64_t result = qword_1015D6B60;
  if (!qword_1015D6B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B60);
  }
  return result;
}

unint64_t sub_10025358C()
{
  unint64_t result = qword_1015D6B68;
  if (!qword_1015D6B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B68);
  }
  return result;
}

unint64_t sub_1002535E4()
{
  unint64_t result = qword_1015D6B70;
  if (!qword_1015D6B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B70);
  }
  return result;
}

unint64_t sub_10025363C()
{
  unint64_t result = qword_1015D6B78;
  if (!qword_1015D6B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B78);
  }
  return result;
}

uint64_t sub_100253690(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1002536B0, 0, 0);
}

uint64_t sub_1002536B0()
{
  uint64_t v1 = qword_101605050[0];
  uint64_t v2 = &stru_1012DF8D8;
  if (v1 != -1) {
    dispatch_once(qword_101605050, &stru_1012DF8D8);
  }

  id v3 = (id)qword_101605048;
  uint64_t v4 = [v3 path];
  id v5 = (id)_CFPreferencesCopyAppValueWithContainer();

  if (v5)
  {
    if ((_GEOConfigHasValue() & 1) == 0)
    {
      [v5 BOOLValue];
      GEOConfigSetBOOL();
    }
    uint64_t v6 = +[MSPMapsPaths mapsApplicationContainerPaths];
    [v6 homeDirectory];
    _CFPreferencesSetValueWithContainer();

    unsigned __int8 BOOL = [v5 BOOLValue];
  }
  else
  {
    unsigned __int8 BOOL = GEOConfigGetBOOL();
  }
  unsigned __int8 v8 = BOOL;
  uint64_t v9 = *(unsigned __int8 **)(v0 + 16);

  *uint64_t v9 = v8;
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100253850(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100253874, 0, 0);
}

uint64_t sub_100253874()
{
  GEOConfigSetSyncBOOL();
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100253914()
{
  unint64_t result = qword_1015D6B80;
  if (!qword_1015D6B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B80);
  }
  return result;
}

unint64_t sub_10025396C()
{
  unint64_t result = qword_1015D6B88;
  if (!qword_1015D6B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B88);
  }
  return result;
}

unint64_t sub_1002539C4()
{
  unint64_t result = qword_1015D6B90;
  if (!qword_1015D6B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B90);
  }
  return result;
}

unint64_t sub_100253A1C()
{
  unint64_t result = qword_1015D6B98;
  if (!qword_1015D6B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6B98);
  }
  return result;
}

uint64_t sub_100253A70@<X0>(uint64_t *a1@<X8>)
{
  sub_100253CBC();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100253AB0@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBDB8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611860, a1);
}

uint64_t sub_100253AE8()
{
  return sub_1001010F8(&qword_1015D6BA0, &qword_1015D6BA8);
}

uint64_t sub_100253B24(uint64_t a1)
{
  unint64_t v2 = sub_100253484();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100253B74()
{
  unint64_t result = qword_1015D6BB0;
  if (!qword_1015D6BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6BB0);
  }
  return result;
}

uint64_t sub_100253BC8(uint64_t a1)
{
  unint64_t v2 = sub_100253CBC();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_100253C14(uint64_t a1)
{
  unint64_t v2 = sub_100253A1C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100253C64()
{
  unint64_t result = qword_1015D6BB8;
  if (!qword_1015D6BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6BB8);
  }
  return result;
}

unint64_t sub_100253CBC()
{
  unint64_t result = qword_1015D6BC0[0];
  if (!qword_1015D6BC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D6BC0);
  }
  return result;
}

uint64_t sub_100253D10(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100253DA0, 0, 0);
}

uint64_t sub_100253DA0()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D6B30);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D6C30, &qword_1015D6C38);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100253EB0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002534DC();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100253F64()
{
  unint64_t result = qword_1015D6BD8;
  if (!qword_1015D6BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6BD8);
  }
  return result;
}

unint64_t sub_100253FBC()
{
  unint64_t result = qword_1015D6BE0[0];
  if (!qword_1015D6BE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D6BE0);
  }
  return result;
}

uint64_t sub_100254010(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002534DC();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1002540C4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002534DC();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100254178()
{
  unint64_t result = qword_1015D6BF8;
  if (!qword_1015D6BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6BF8);
  }
  return result;
}

unint64_t sub_1002541D0()
{
  unint64_t result = qword_1015D6C00;
  if (!qword_1015D6C00)
  {
    sub_10010118C(qword_1015D6C08);
    sub_1002539C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6C00);
  }
  return result;
}

uint64_t sub_100254244(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10025363C();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for DirectionsPauseSpokenDirectionsQuery()
{
  return &type metadata for DirectionsPauseSpokenDirectionsQuery;
}

ValueMetadata *type metadata accessor for DirectionsPauseSpokenDirectionsEntity()
{
  return &type metadata for DirectionsPauseSpokenDirectionsEntity;
}

ValueMetadata *type metadata accessor for DirectionsPauseSpokenDirectionsEntity.UpdateIntent_value()
{
  return &type metadata for DirectionsPauseSpokenDirectionsEntity.UpdateIntent_value;
}

uint64_t sub_100254328()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  id v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D6C40);
  LocalizedStringResource.init(stringLiteral:)();
  id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  id v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  id v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100253484();
  id v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_100254768@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100254774()
{
  uint64_t result = type metadata accessor for ScrollView();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100254804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollView();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100254888(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScrollView();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1002548F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10025495C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002549C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100254A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100254A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100254AA8);
}

uint64_t sub_100254AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollView();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100254B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100254B2C);
}

uint64_t sub_100254B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollView();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RTLScrollView()
{
  return sub_1000F5520();
}

uint64_t sub_100254BB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100254C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_100254C38@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ScrollView();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - v5;
  swift_getWitnessTable();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, v1, v3);
  v7(a1, (uint64_t)v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100254D5C()
{
  type metadata accessor for ScrollView();

  return swift_getWitnessTable();
}

id sub_100254EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(uint64_t (**)(long long *, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  long long v8 = 0u;
  long long v9 = 0u;
  if (a3)
  {
LABEL_3:
    sub_100100830(0, &qword_1015DAA20);
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001189D4((uint64_t)&v8);

  return v6;
}

id sub_100255050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  swift_unknownObjectRetain();
  long long v8 = (void *)a5(a3, a4);
  swift_unknownObjectRelease();

  return v8;
}

id LibraryUIUtilities.init()()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for LibraryUIUtilities();
  return [super init];
}

uint64_t type metadata accessor for LibraryUIUtilities()
{
  return self;
}

id LibraryUIUtilities.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for LibraryUIUtilities();
  return [super dealloc];
}

void sub_10025526C(void *a1)
{
  id v2 = [a1 heightAnchor];
  id v3 = [v2 constraintEqualToConstant:32.0];

  type metadata accessor for UILayoutPriority(0);
  sub_100255F8C();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v4) = v11;
  [v3 setPriority:v4];
  uint64_t v5 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F5F0D0;
  *(void *)(v6 + 32) = v3;
  id v7 = v3;
  id v8 = [a1 heightAnchor];
  id v9 = [v8 constraintGreaterThanOrEqualToConstant:32.0];

  *(void *)(v6 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v9;
  uint64_t v12 = v6;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa, v12, 0x443B80003F800000];
}

id sub_10025541C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - v9;
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v22._uint64_t countAndFlagsBits = 0xD000000000000046;
  v22._uint64_t object = (void *)0x8000000100F80490;
  v11._uint64_t object = (void *)0x8000000100F80470;
  v11._uint64_t countAndFlagsBits = 0xD000000000000012;
  v12._uint64_t countAndFlagsBits = 6579265;
  v12._uint64_t object = (void *)0xE300000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_101611820, v12, v22);
  id v13 = [self _maps_pillButtonConfigurationWithImage:1 scalingImageForDynamicText:0 scalingTitleForDynamicText:0];
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  UIButton.Configuration.title.setter();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [self systemImageNamed:v14];

  UIButton.Configuration.image.setter();
  sub_100100830(0, &qword_1015D6CF8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  uint64_t v16 = (void *)UIButton.init(configuration:primaryAction:)();
  sub_10025526C(v16);
  [v16 addTarget:a1 action:a2 forControlEvents:64];
  id v17 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v16];

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  swift_bridgeObjectRelease();
  id v18 = v17;
  NSString v19 = String._bridgeToObjectiveC()();
  [v18 setAccessibilityIdentifier:v19];

  return v18;
}

id sub_100255724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a6;
  uint64_t v7 = type metadata accessor for UIButton.Configuration();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v13 = (char *)&v20 - v12;
  id v14 = [self _maps_pillButtonConfigurationWithImage:1 scalingImageForDynamicText:0 scalingTitleForDynamicText:0];
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  UIButton.Configuration.title.setter();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [self systemImageNamed:v15];

  UIButton.Configuration.image.setter();
  sub_100100830(0, &qword_1015D6CF8);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  id v17 = (void *)UIButton.init(configuration:primaryAction:)();
  sub_10025526C(v17);
  [v17 addTarget:a5 action:v21 forControlEvents:64];
  id v18 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v17];

  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return v18;
}

id sub_100255970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  id v11 = [self _maps_roundPillSymbolButtonConfigurationScalingImageForDynamicText:];
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self systemImageNamed:v12];

  UIButton.Configuration.image.setter();
  sub_100100830(0, &qword_1015D6CF8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  id v14 = (void *)UIButton.init(configuration:primaryAction:)();
  sub_10025526C(v14);
  id v15 = [v14 widthAnchor];
  id v16 = [v14 heightAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  [v17 setActive:1];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  [v14 addTarget:a1 action:a2 forControlEvents:64];
  id v18 = v14;
  NSString v19 = String._bridgeToObjectiveC()();
  [v18 setAccessibilityIdentifier:v19];

  id v20 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v18];
  return v20;
}

id sub_100255C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)aBlock - v9;
  id v11 = [self _maps_roundPillSymbolButtonConfigurationScalingImageForDynamicText:0];
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self systemImageNamed:v12];

  UIButton.Configuration.image.setter();
  sub_100100830(0, &qword_1015D6CF8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  id v14 = (void *)UIButton.init(configuration:primaryAction:)();
  sub_10025526C(v14);
  id v15 = [v14 widthAnchor];
  id v16 = [v14 heightAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  [v17 setActive:1];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  [v14 setShowsMenuAsPrimaryAction:1];
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100254EE0;
  aBlock[3] = &unk_1012DF950;
  id v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v14 _setMenuProvider:v18];
  _Block_release(v18);
  id v19 = v14;
  NSString v20 = String._bridgeToObjectiveC()();
  [v19 setAccessibilityIdentifier:v20];

  id v21 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v19];
  return v21;
}

unint64_t sub_100255F8C()
{
  unint64_t result = qword_1015D9400;
  if (!qword_1015D9400)
  {
    type metadata accessor for UILayoutPriority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9400);
  }
  return result;
}

id sub_100255FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - v9;
  id v11 = [self _maps_roundPillSymbolButtonConfigurationScalingImageForDynamicText:0];
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self systemImageNamed:v12];

  UIButton.Configuration.image.setter();
  sub_100100830(0, &qword_1015D6CF8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  id v14 = (void *)UIButton.init(configuration:primaryAction:)();
  sub_10025526C(v14);
  id v15 = [v14 widthAnchor];
  id v16 = [v14 heightAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  [v17 setActive:1];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  [v14 addTarget:a1 action:a2 forControlEvents:64];
  id v18 = v14;
  NSString v19 = String._bridgeToObjectiveC()();
  [v18 setAccessibilityIdentifier:v19];

  id v20 = [self secondaryLabelColor];
  [v18 setTintColor:v20];

  id v21 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v18];
  return v21;
}

id sub_1002562EC()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setText:v1];

  id v2 = [self _maps_boldSystemFontWithSize:27.0];
  [v0 setFont:v2];

  id v3 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v0];
  [v3 setAccessibilityTraits:UIAccessibilityTraitStaticText];
  [v3 setBackgroundImage:0 forState:1 barMetrics:0];

  return v3;
}

uint64_t sub_1002563F8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100256430(uint64_t a1, objc_class *a2)
{
  return sub_1002F66EC(a1, a2, *(void *)(v2 + 16));
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitAddress()
{
  return &type metadata for PlaceSummaryUnitAddress;
}

unsigned char *_s4Maps23PlaceSummaryUnitAddressV27PlaceSummaryUnitAddressTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10025651CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitAddress.PlaceSummaryUnitAddressType()
{
  return &type metadata for PlaceSummaryUnitAddress.PlaceSummaryUnitAddressType;
}

unint64_t sub_100256558()
{
  unint64_t result = qword_1015D6D00;
  if (!qword_1015D6D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6D00);
  }
  return result;
}

BOOL sub_1002565AC(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = static Hasher._hash(seed:_:)();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_100256678(void *a1, uint64_t a2)
{
  return sub_1002571B8(a1, a2, (unint64_t *)&unk_1015D4B20);
}

uint64_t sub_10025668C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          id v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1002567C4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  Hasher.init(_seed:)();
  Data.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = a3 + 56;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  unint64_t v10 = a2 >> 62;
  uint64_t v83 = ~v7;
  unint64_t v82 = a2 >> 62;
  BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v81 = v11;
  unint64_t v80 = a2;
  uint64_t v78 = (a1 >> 32) - (int)a1;
  uint64_t v79 = a1 >> 32;
  uint64_t v84 = v10;
  size_t __n = BYTE6(a2);
  while (2)
  {
    BOOL v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    uint64_t v14 = *v12;
    unint64_t v13 = v12[1];
    uint64_t v15 = 0;
    switch(v13 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
        }
        uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_15:
        sub_100144284(v14, v13);
        break;
      case 2uLL:
        uint64_t v17 = *(void *)(v14 + 16);
        uint64_t v16 = *(void *)(v14 + 24);
        uint64_t v15 = v16 - v17;
        if (!__OFSUB__(v16, v17)) {
          goto LABEL_15;
        }
        goto LABEL_122;
      case 3uLL:
        break;
      default:
        uint64_t v15 = BYTE6(v13);
        break;
    }
    size_t v18 = __n;
    switch(v84)
    {
      case 1:
        size_t v18 = HIDWORD(a1) - (int)a1;
        if (v81) {
          goto LABEL_123;
        }
        goto LABEL_20;
      case 2:
        uint64_t v20 = *(void *)(a1 + 16);
        uint64_t v19 = *(void *)(a1 + 24);
        BOOL v21 = __OFSUB__(v19, v20);
        size_t v18 = v19 - v20;
        if (!v21) {
          goto LABEL_20;
        }
        goto LABEL_124;
      case 3:
        if (v15) {
          goto LABEL_8;
        }
        goto LABEL_120;
      default:
LABEL_20:
        if (v15 != v18)
        {
LABEL_8:
          sub_1001442DC(v14, v13);
          goto LABEL_9;
        }
        if (v15 >= 1)
        {
          switch(v13 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_125;
              }
              uint64_t v25 = __DataStorage._bytes.getter();
              if (v25)
              {
                uint64_t v26 = v25;
                uint64_t v27 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v14, v27)) {
                  goto LABEL_127;
                }
                id v28 = (const void *)(v26 + (int)v14 - v27);
              }
              else
              {
                id v28 = 0;
              }
              __DataStorage._length.getter();
              LODWORD(v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v82;
              if (!v82)
              {
                *(void *)__s1 = a1;
                *(_WORD *)&__s1[8] = a2;
                __s1[10] = BYTE2(a2);
                __s1[11] = BYTE3(a2);
                __s1[12] = BYTE4(a2);
                __s1[13] = BYTE5(a2);
                if (!v28) {
                  goto LABEL_155;
                }
                int v44 = memcmp(v28, __s1, __n);
LABEL_103:
                sub_1001442DC(v14, v13);
                uint64_t v9 = a3 + 56;
                if (!v44) {
                  return 1;
                }
                break;
              }
              if (v82 == 1)
              {
                if (v79 < (int)a1) {
                  goto LABEL_136;
                }
                swift_retain();
                id v45 = (char *)__DataStorage._bytes.getter();
                if (v45)
                {
                  uint64_t v46 = __DataStorage._offset.getter();
                  if (__OFSUB__((int)a1, v46)) {
                    goto LABEL_143;
                  }
                  v45 += (int)a1 - v46;
                }
                uint64_t v47 = __DataStorage._length.getter();
                size_t v48 = (a1 >> 32) - (int)a1;
                if (v47 < v78) {
                  size_t v48 = v47;
                }
                if (!v28) {
                  goto LABEL_148;
                }
                if (!v45) {
                  goto LABEL_149;
                }
                int v44 = memcmp(v28, v45, v48);
                sub_1001442DC(a1, a2);
                goto LABEL_103;
              }
              uint64_t v67 = *(void *)(a1 + 16);
              uint64_t v77 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v68 = __DataStorage._bytes.getter();
              if (v68)
              {
                uint64_t v69 = v68;
                uint64_t v70 = __DataStorage._offset.getter();
                if (__OFSUB__(v67, v70)) {
                  goto LABEL_142;
                }
                id v71 = (const void *)(v69 + v67 - v70);
              }
              else
              {
                id v71 = 0;
              }
              BOOL v21 = __OFSUB__(v77, v67);
              int64_t v72 = v77 - v67;
              if (v21) {
                goto LABEL_137;
              }
              uint64_t v73 = __DataStorage._length.getter();
              if (v73 >= v72) {
                size_t v74 = v72;
              }
              else {
                size_t v74 = v73;
              }
              if (!v28) {
                goto LABEL_156;
              }
              LODWORD(v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v82;
              if (!v71) {
                goto LABEL_157;
              }
              int v60 = memcmp(v28, v71, v74);
LABEL_116:
              swift_release();
LABEL_117:
              swift_release();
              sub_1001442DC(v14, v13);
              uint64_t v9 = a3 + 56;
              a2 = v80;
              if (!v60) {
                return 1;
              }
              break;
            case 2uLL:
              uint64_t v29 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              uint64_t v30 = __DataStorage._bytes.getter();
              if (v30)
              {
                uint64_t v31 = v30;
                uint64_t v32 = __DataStorage._offset.getter();
                if (__OFSUB__(v29, v32)) {
                  goto LABEL_126;
                }
                uint64_t v33 = (const void *)(v31 + v29 - v32);
              }
              else
              {
                uint64_t v33 = 0;
              }
              __DataStorage._length.getter();
              LODWORD(v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v82;
              if (!v82)
              {
                *(void *)__s1 = a1;
                *(_DWORD *)&__s1[8] = v80;
                *(_WORD *)&__s1[12] = WORD2(v80);
                if (!v33) {
                  goto LABEL_152;
                }
                int v60 = memcmp(v33, __s1, __n);
                swift_release();
                goto LABEL_117;
              }
              if (v82 == 1)
              {
                if (v79 < (int)a1) {
                  goto LABEL_130;
                }
                swift_retain();
                id v40 = (char *)__DataStorage._bytes.getter();
                if (v40)
                {
                  uint64_t v41 = __DataStorage._offset.getter();
                  if (__OFSUB__((int)a1, v41)) {
                    goto LABEL_141;
                  }
                  v40 += (int)a1 - v41;
                }
                uint64_t v42 = __DataStorage._length.getter();
                size_t v43 = (a1 >> 32) - (int)a1;
                if (v42 < v78) {
                  size_t v43 = v42;
                }
                if (!v33) {
                  goto LABEL_146;
                }
                if (!v40) {
                  goto LABEL_147;
                }
                int v44 = memcmp(v33, v40, v43);
                a2 = v80;
                sub_1001442DC(a1, v80);
                swift_release();
                swift_release();
                goto LABEL_103;
              }
              uint64_t v61 = *(void *)(a1 + 16);
              uint64_t v76 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              id v62 = (char *)__DataStorage._bytes.getter();
              if (v62)
              {
                uint64_t v63 = __DataStorage._offset.getter();
                if (__OFSUB__(v61, v63)) {
                  goto LABEL_140;
                }
                v62 += v61 - v63;
              }
              BOOL v21 = __OFSUB__(v76, v61);
              int64_t v64 = v76 - v61;
              if (v21) {
                goto LABEL_135;
              }
              uint64_t v65 = __DataStorage._length.getter();
              if (v65 >= v64) {
                size_t v66 = v64;
              }
              else {
                size_t v66 = v65;
              }
              if (!v33) {
                goto LABEL_153;
              }
              LODWORD(v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v82;
              if (!v62) {
                goto LABEL_154;
              }
              int v60 = memcmp(v33, v62, v66);
              swift_release();
              swift_release();
              goto LABEL_116;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v10) {
                goto LABEL_47;
              }
              if (v10 == 1)
              {
                if (v79 < (int)a1) {
                  goto LABEL_129;
                }
                swift_retain();
                uint64_t v34 = __DataStorage._bytes.getter();
                if (!v34) {
                  goto LABEL_145;
                }
                uint64_t v23 = v34;
                uint64_t v35 = __DataStorage._offset.getter();
                unint64_t v10 = (int)a1 - v35;
                if (__OFSUB__((int)a1, v35)) {
                  goto LABEL_134;
                }
                goto LABEL_42;
              }
              uint64_t v56 = *(void *)(a1 + 16);
              uint64_t v55 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              id v51 = (char *)__DataStorage._bytes.getter();
              if (v51)
              {
                uint64_t v57 = __DataStorage._offset.getter();
                if (__OFSUB__(v56, v57)) {
                  goto LABEL_139;
                }
                v51 += v56 - v57;
              }
              BOOL v21 = __OFSUB__(v55, v56);
              int64_t v53 = v55 - v56;
              if (v21) {
                goto LABEL_132;
              }
              uint64_t v54 = __DataStorage._length.getter();
              a2 = v80;
              if (!v51) {
                goto LABEL_151;
              }
              goto LABEL_84;
            default:
              *(void *)__s1 = v14;
              *(_WORD *)&__s1[8] = v13;
              __s1[10] = BYTE2(v13);
              __s1[11] = BYTE3(v13);
              __s1[12] = BYTE4(v13);
              __s1[13] = BYTE5(v13);
              if (v10)
              {
                if (v10 == 1)
                {
                  if (v79 < (int)a1) {
                    goto LABEL_128;
                  }
                  swift_retain();
                  uint64_t v22 = __DataStorage._bytes.getter();
                  if (!v22)
                  {
                    __DataStorage._length.getter();
                    __break(1u);
LABEL_145:
                    __DataStorage._length.getter();
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x100257174);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = __DataStorage._offset.getter();
                  unint64_t v10 = (int)a1 - v24;
                  if (__OFSUB__((int)a1, v24)) {
                    goto LABEL_133;
                  }
LABEL_42:
                  uint64_t v36 = __DataStorage._length.getter();
                  if (v36 >= v78) {
                    size_t v37 = (a1 >> 32) - (int)a1;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v23 + v10), v37);
                  sub_1001442DC(a1, a2);
                  sub_1001442DC(v14, v13);
                  LODWORD(v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v82;
                  if (!v38) {
                    return 1;
                  }
                }
                else
                {
                  uint64_t v49 = *(void *)(a1 + 16);
                  uint64_t v50 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  id v51 = (char *)__DataStorage._bytes.getter();
                  if (v51)
                  {
                    uint64_t v52 = __DataStorage._offset.getter();
                    if (__OFSUB__(v49, v52)) {
                      goto LABEL_138;
                    }
                    v51 += v49 - v52;
                  }
                  BOOL v21 = __OFSUB__(v50, v49);
                  int64_t v53 = v50 - v49;
                  if (v21) {
                    goto LABEL_131;
                  }
                  uint64_t v54 = __DataStorage._length.getter();
                  a2 = v80;
                  if (!v51) {
                    goto LABEL_150;
                  }
LABEL_84:
                  if (v54 >= v53) {
                    size_t v58 = v53;
                  }
                  else {
                    size_t v58 = v54;
                  }
                  int v59 = memcmp(__s1, v51, v58);
                  swift_release();
                  swift_release();
                  sub_1001442DC(v14, v13);
                  LODWORD(v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v82;
                  if (!v59) {
                    return 1;
                  }
                }
              }
              else
              {
LABEL_47:
                uint64_t __s2 = a1;
                __int16 v87 = a2;
                char v88 = BYTE2(a2);
                char v89 = BYTE3(a2);
                char v90 = BYTE4(a2);
                char v91 = BYTE5(a2);
                int v39 = memcmp(__s1, &__s2, __n);
                sub_1001442DC(v14, v13);
                if (!v39) {
                  return 1;
                }
              }
              break;
          }
LABEL_9:
          unint64_t v8 = (v8 + 1) & v83;
          if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            return 0;
          }
          continue;
        }
LABEL_120:
        sub_1001442DC(v14, v13);
        return 1;
    }
  }
}

uint64_t sub_1002571A4(void *a1, uint64_t a2)
{
  return sub_1002571B8(a1, a2, (unint64_t *)&unk_1015D6E30);
}

uint64_t sub_1002571B8(void *a1, uint64_t a2, unint64_t *a3)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v4 = a1;
    char v5 = __CocoaSet.contains(_:)();

    return v5 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v10 = v8 & ~v9,
        uint64_t v11 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0))
  {
LABEL_11:
    char v14 = 0;
    return v14 & 1;
  }
  sub_100100830(0, a3);
  id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v10);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v15 = ~v9;
    unint64_t v16 = (v10 + 1) & v15;
    if ((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
    {
      do
      {
        id v17 = *(id *)(*(void *)(a2 + 48) + 8 * v16);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          break;
        }
        unint64_t v16 = (v16 + 1) & v15;
      }
      while (((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  char v14 = 1;
  return v14 & 1;
}

void *PlaceCardCollectionMembershipProvider.mapItem.getter()
{
  NSString v1 = (void **)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t PlaceCardCollectionMembershipProvider.mapItem.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = [self sharedManager];
  id v7 = [v6 currentCollections];

  sub_100100830(0, (unint64_t *)&qword_1015D9240);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100257590(v8);
  return swift_bridgeObjectRelease();
}

void *sub_100257590(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = (uint64_t)result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_14;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(a1 + 8 * i + 32);
    }
    unint64_t v8 = v7;
    if ([v7 handlerType])
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
LABEL_14:
  swift_bridgeObjectRelease();
  sub_100257F3C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v9 = (id *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem);
  swift_beginAccess();
  if (*v9)
  {
    id v10 = *v9;
    unint64_t v11 = swift_bridgeObjectRetain();
    id v12 = sub_1002587D8(v11, (uint64_t)v10);
    swift_bridgeObjectRelease();
    char v13 = (void *)(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
    swift_beginAccess();
    *char v13 = v12;
    swift_bridgeObjectRelease();
    sub_100257D70();
  }
  else
  {
    char v14 = (void *)(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
    swift_beginAccess();
    *char v14 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    sub_100257D70();
  }
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result placeCardCollectionMembershipProviderDidUpdate:v2];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*PlaceCardCollectionMembershipProvider.mapItem.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100257858;
}

uint64_t sub_100257858(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    id v4 = [self sharedManager];
    id v5 = [v4 currentCollections];

    sub_100100830(0, (unint64_t *)&qword_1015D9240);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100257590(v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PlaceCardCollectionMembershipProvider.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t PlaceCardCollectionMembershipProvider.delegate.setter()
{
  return swift_unknownObjectRelease();
}

void (*PlaceCardCollectionMembershipProvider.delegate.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_delegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_100257B04;
}

void sub_100257B04(void **a1, char a2)
{
  id v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t PlaceCardCollectionMembershipProvider.containingCollections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100257D00(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
  swift_beginAccess();
  *id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_100257D70();
}

uint64_t sub_100257D70()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_10014338C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    *(void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollectionIDs) = v16;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t result = sub_10025AEF4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      unint64_t v8 = v7;
      id v9 = [v7 identifier];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_10025AEF4(v13 > 1, v14 + 1, 1);
      }
      ++v6;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
      v15[4] = v10;
      _OWORD v15[5] = v12;
    }
    while (v4 != v6);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100257F3C(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections;
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v4 + 8 * i + 32);
    }
    id v9 = v8;
    [v8 removeObserver:v1];
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  *(void *)(v1 + v3) = a1;
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(v1 + v3);
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v11) {
      goto LABEL_12;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v11 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_12:
  if (v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(v10 + 8 * j + 32);
      }
      unint64_t v14 = v13;
      [v13 addObserver:v1];
    }
    return swift_bridgeObjectRelease_n();
  }
LABEL_21:
  __break(1u);
  return result;
}

id PlaceCardCollectionMembershipProvider.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = [self sharedManager];
  [v2 removeObserver:v0];

  v4.id receiver = v0;
  v4.Class super_class = ObjectType;
  return [super dealloc];
}

id sub_10025828C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollectionIDs] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections] = _swiftEmptyArrayStorage;
  v10.id receiver = v0;
  v10.Class super_class = ObjectType;
  id v2 = [super init];
  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 sharedManager];
  [v5 addObserver:v4];

  id v6 = [v3 sharedManager];
  id v7 = [v6 currentCollections];

  sub_100100830(0, (unint64_t *)&qword_1015D9240);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100257590(v8);
  swift_bridgeObjectRelease();

  return v4;
}

void __swiftcall PlaceCardCollectionMembershipProvider.containingCollection(withIdentifer:)(CollectionHandler_optional *__return_ptr retstr, Swift::String withIdentifer)
{
  uint64_t object = withIdentifer._object;
  uint64_t countAndFlagsBits = withIdentifer._countAndFlagsBits;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v4 = swift_bridgeObjectRetain();
  sub_100258954(v4, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PlaceCardCollectionMembershipProvider.collectionManager(_:contentDidChange:)(CollectionManager *_, Swift::OpaquePointer contentDidChange)
{
}

Swift::Void __swiftcall PlaceCardCollectionMembershipProvider.collectionHandlerContentUpdated(_:)(CollectionHandler *a1)
{
  uint64_t v3 = (id *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem);
  swift_beginAccess();
  if (*v3)
  {
    id v4 = *v3;
    unsigned __int8 v5 = [(CollectionHandler *)a1 containsItem:v4];
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollectionIDs);
    swift_bridgeObjectRetain();
    id v7 = [(CollectionHandler *)a1 identifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    char v11 = sub_10025668C(v8, v10, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5)
    {
      if (v11) {
        goto LABEL_7;
      }
    }
    else if ((v11 & 1) == 0)
    {
LABEL_7:

      return;
    }
    id v12 = [self sharedManager];
    id v13 = [v12 currentCollections];

    sub_100100830(0, (unint64_t *)&qword_1015D9240);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100257590(v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
}

void *sub_1002587D8(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v12 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v13 = v4;
      while (v6)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v9 = v8;
        unint64_t v10 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
        if ([v8 containsItem:a2])
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          unint64_t v3 = v12;
          uint64_t v4 = v13;
        }
        else
        {
        }
        ++v5;
        if (v10 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v5 < *(void *)(v7 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100258954(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = [v10 identifier:v22];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100258AFC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PlaceCardCollectionMembershipProvider()
{
  return self;
}

uint64_t assignWithCopy for HomeListSectionSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HomeListSectionSnapshot(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HomeListCollectionViewSnapshot()
{
  return &type metadata for HomeListCollectionViewSnapshot;
}

void **assignWithCopy for HomeListCellSnapshot(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  uint64_t v3 = *a2;
  unint64_t v5 = *a1;
  *a1 = *a2;
  id v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  sub_100258CC4(v6, v4);
  return a1;
}

uint64_t *sub_100258CC4(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for HomeListCellSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  sub_1000FF22C(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(void *)(a2 + 40);
  return a1;
}

uint64_t sub_100258F4C(unint64_t a1)
{
  return sub_10010A1C4(a1, (void (*)(void))type metadata accessor for SearchHomeUserGuidesCellViewModel);
}

uint64_t sub_100258F64(unint64_t a1)
{
  return sub_100258F78(a1, (unint64_t *)&qword_1015D1C60);
}

uint64_t sub_100258F78(unint64_t a1, unint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (!v4) {
    return (uint64_t)v5;
  }
  id v15 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10025AF50(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100100830(0, a2);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025AF50(0, v5[2] + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v9 = v5[2];
        unint64_t v8 = v5[3];
        if (v9 >= v8 >> 1)
        {
          sub_10025AF50(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v15;
        }
        v5[2] = v9 + 1;
        sub_1000EFD84(v14, &v5[4 * v9 + 4]);
      }
    }
    else
    {
      uint64_t v10 = (id *)(a1 + 32);
      sub_100100830(0, a2);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025AF50(0, v5[2] + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = v5[2];
        unint64_t v12 = v5[3];
        if (v13 >= v12 >> 1)
        {
          sub_10025AF50(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        v5[2] = v13 + 1;
        sub_1000EFD84(v14, &v5[4 * v13 + 4]);
        ++v10;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002591CC(unint64_t a1)
{
  return sub_100258F78(a1, (unint64_t *)&unk_1015D4750);
}

uint64_t sub_1002591E0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  unint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10025AF50(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      uint64_t v3 = v12;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1000FF33C((uint64_t *)&unk_1015CF1B0);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025AF50(0, v3[2] + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_10025AF50(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v12;
        }
        ++v5;
        v3[2] = v7 + 1;
        sub_1000EFD84(v11, &v3[4 * v7 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v8 = a1 + 32;
      uint64_t v3 = v12;
      do
      {
        swift_unknownObjectRetain();
        sub_1000FF33C((uint64_t *)&unk_1015CF1B0);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025AF50(0, v3[2] + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v10 = v3[2];
        unint64_t v9 = v3[3];
        if (v10 >= v9 >> 1)
        {
          sub_10025AF50(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v12;
        }
        v3[2] = v10 + 1;
        sub_1000EFD84(v11, &v3[4 * v10 + 4]);
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100259420(unint64_t a1)
{
  return sub_100258F78(a1, (unint64_t *)&unk_1015DA6E0);
}

Swift::Int sub_100259434()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  sub_10025D2E8(v4, v1);
  sub_10025C7D0((uint64_t)v4, v2);
  return Hasher._finalize()();
}

void sub_100259488(long long *a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  Swift::UInt v5 = *(void *)(*v1 + 16);
  Hasher._combine(_:)(v5);
  if (v5)
  {
    unint64_t v6 = (uint64_t *)(v4 + 56);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v9 = *(v6 - 1);
      uint64_t v8 = *v6;
      id v10 = (id)*(v6 - 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSObject.hash(into:)();
      swift_bridgeObjectRetain();
      sub_10025D1C4((uint64_t)a1, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10025D094((uint64_t)a1, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10025CB1C(a1, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      v6 += 4;
      --v5;
    }
    while (v5);
  }

  sub_10025C7D0((uint64_t)a1, v3);
}

Swift::Int sub_10025959C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  sub_10025D2E8(v4, v1);
  sub_10025C7D0((uint64_t)v4, v2);
  return Hasher._finalize()();
}

uint64_t sub_1002595EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_10019DC78(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_1001A9FB8(v2, v3);
}

Swift::Int sub_100259648()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  Hasher.init(_seed:)();
  id v5 = v2;
  NSObject.hash(into:)();

  swift_bridgeObjectRetain();
  sub_10025D1C4((uint64_t)v7, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10025D094((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10025CB1C(v7, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100259700(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  id v6 = *(id *)v1;
  NSObject.hash(into:)();

  swift_bridgeObjectRetain();
  sub_10025D1C4((uint64_t)a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10025D094((uint64_t)a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10025CB1C(a1, v5);

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002597AC()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  Hasher.init(_seed:)();
  id v5 = v2;
  NSObject.hash(into:)();

  swift_bridgeObjectRetain();
  sub_10025D1C4((uint64_t)v7, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10025D094((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10025CB1C(v7, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100259860(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  if ((static NSObject.== infix(_:_:)() & 1) == 0
    || (sub_10019DE54(v2, v5) & 1) == 0
    || (sub_10019E030(v4, v7) & 1) == 0)
  {
    return 0;
  }

  return sub_1001AA30C(v3, v6);
}

Swift::Int sub_100259928()
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  sub_1000FF4D4(v0 + 8, (uint64_t)v5);
  sub_1000FF33C((uint64_t *)&unk_1015D1C50);
  if (swift_dynamicCast())
  {
    v6[0] = v2;
    v6[1] = v3;
    uint64_t v7 = v4;
    AnyHashable.hash(into:)();
    sub_1000F351C((uint64_t)v6);
  }
  else
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
    sub_1000FF2E0((uint64_t)&v2, &qword_1015CF1E0);
  }
  return Hasher._finalize()();
}

uint64_t sub_1002599F0()
{
  NSObject.hash(into:)();
  sub_1000FF4D4(v0 + 8, (uint64_t)v5);
  sub_1000FF33C((uint64_t *)&unk_1015D1C50);
  if (swift_dynamicCast())
  {
    v6[0] = v2;
    v6[1] = v3;
    uint64_t v7 = v4;
    AnyHashable.hash(into:)();
    return sub_1000F351C((uint64_t)v6);
  }
  else
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
    return sub_1000FF2E0((uint64_t)&v2, &qword_1015CF1E0);
  }
}

Swift::Int sub_100259AA8()
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  sub_1000FF4D4(v0 + 8, (uint64_t)v5);
  sub_1000FF33C((uint64_t *)&unk_1015D1C50);
  if (swift_dynamicCast())
  {
    v6[0] = v2;
    v6[1] = v3;
    uint64_t v7 = v4;
    AnyHashable.hash(into:)();
    sub_1000F351C((uint64_t)v6);
  }
  else
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
    sub_1000FF2E0((uint64_t)&v2, &qword_1015CF1E0);
  }
  return Hasher._finalize()();
}

uint64_t sub_100259B68(uint64_t a1, uint64_t a2)
{
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return sub_100101730(a1 + 8, a2 + 8);
}

unint64_t sub_100259BF0()
{
  unint64_t result = qword_1015D6E48;
  if (!qword_1015D6E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6E48);
  }
  return result;
}

Swift::Int sub_100259C44()
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  String.hash(into:)();
  sub_1000FF4D4(v0 + 24, (uint64_t)v5);
  sub_1000FF33C((uint64_t *)&unk_1015D1C40);
  if (swift_dynamicCast())
  {
    v6[0] = v2;
    v6[1] = v3;
    uint64_t v7 = v4;
    AnyHashable.hash(into:)();
    sub_1000F351C((uint64_t)v6);
  }
  else
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
    sub_1000FF2E0((uint64_t)&v2, &qword_1015CF1E0);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100259D14(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  if (a4)
  {
    if (a4 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1001007A8(a2, a3, 1u);
    }
    else
    {
      if (a2 | a3)
      {
        if (a2 ^ 1 | a3) {
          Swift::UInt v7 = 2;
        }
        else {
          Swift::UInt v7 = 1;
        }
      }
      else
      {
        Swift::UInt v7 = 0;
      }
      Hasher._combine(_:)(v7);
    }
  }
  else
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    sub_1001007A8(a2, a3, 0);
  }
  return Hasher._finalize()();
}

uint64_t sub_100259E24()
{
  NSObject.hash(into:)();
  String.hash(into:)();
  sub_1000FF4D4(v0 + 24, (uint64_t)v5);
  sub_1000FF33C((uint64_t *)&unk_1015D1C40);
  if (swift_dynamicCast())
  {
    v6[0] = v2;
    v6[1] = v3;
    uint64_t v7 = v4;
    AnyHashable.hash(into:)();
    return sub_1000F351C((uint64_t)v6);
  }
  else
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
    return sub_1000FF2E0((uint64_t)&v2, &qword_1015CF1E0);
  }
}

Swift::Int sub_100259EE8()
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  String.hash(into:)();
  sub_1000FF4D4(v0 + 24, (uint64_t)v5);
  sub_1000FF33C((uint64_t *)&unk_1015D1C40);
  if (swift_dynamicCast())
  {
    v6[0] = v2;
    v6[1] = v3;
    uint64_t v7 = v4;
    AnyHashable.hash(into:)();
    sub_1000F351C((uint64_t)v6);
  }
  else
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
    sub_1000FF2E0((uint64_t)&v2, &qword_1015CF1E0);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100259FB8()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  int v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)();
  if (!v3)
  {
    Swift::UInt v4 = 3;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    Swift::UInt v4 = 4;
LABEL_5:
    Hasher._combine(_:)(v4);
    String.hash(into:)();
    return Hasher._finalize()();
  }
  if (v2 | v1)
  {
    if (v2 ^ 1 | v1) {
      Swift::UInt v5 = 2;
    }
    else {
      Swift::UInt v5 = 1;
    }
  }
  else
  {
    Swift::UInt v5 = 0;
  }
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

void sub_10025A06C()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  if (!*((unsigned char *)v0 + 16))
  {
    Swift::UInt v3 = 3;
    goto LABEL_5;
  }
  if (*((unsigned char *)v0 + 16) == 1)
  {
    Swift::UInt v3 = 4;
LABEL_5:
    Hasher._combine(_:)(v3);
    String.hash(into:)();
    return;
  }
  if (v2 | v1)
  {
    if (v2 ^ 1 | v1) {
      Swift::UInt v4 = 2;
    }
    else {
      Swift::UInt v4 = 1;
    }
  }
  else
  {
    Swift::UInt v4 = 0;
  }
  Hasher._combine(_:)(v4);
}

Swift::Int sub_10025A118()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  int v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)();
  if (!v3)
  {
    Swift::UInt v4 = 3;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    Swift::UInt v4 = 4;
LABEL_5:
    Hasher._combine(_:)(v4);
    String.hash(into:)();
    return Hasher._finalize()();
  }
  if (v2 | v1)
  {
    if (v2 ^ 1 | v1) {
      Swift::UInt v5 = 2;
    }
    else {
      Swift::UInt v5 = 1;
    }
  }
  else
  {
    Swift::UInt v5 = 0;
  }
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

uint64_t sub_10025A1C8(uint64_t a1, uint64_t a2)
{
  return sub_10025D47C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

Swift::Int sub_10025A1E4()
{
  return sub_100259D14(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_10025A1F4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 24);
  NSObject.hash(into:)();
  if (!v3)
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t v4 = v1;
    uint64_t v5 = v2;
    unsigned __int8 v6 = 0;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    Hasher._combine(_:)(4uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t v4 = v1;
    uint64_t v5 = v2;
    unsigned __int8 v6 = 1;
LABEL_5:
    sub_1001007A8(v4, v5, v6);
    return;
  }
  if (v1 | v2)
  {
    if (v1 ^ 1 | v2) {
      Swift::UInt v7 = 2;
    }
    else {
      Swift::UInt v7 = 1;
    }
  }
  else
  {
    Swift::UInt v7 = 0;
  }
  Hasher._combine(_:)(v7);
}

id sub_10025A2FC()
{
  return [objc_allocWithZone((Class)IdentifierPath) init];
}

uint64_t sub_10025A334(void *a1)
{
  id v1 = a1;
  id v2 = [v1 description];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  v6._uint64_t countAndFlagsBits = v3;
  v6._uint64_t object = v5;
  String.append(_:)(v6);

  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 10272;
  v7._uint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  _print_unlocked<A, B>(_:_:)();
  v8._uint64_t countAndFlagsBits = 41;
  v8._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  return 0;
}

uint64_t sub_10025A420()
{
  return sub_10025A334(*v0);
}

uint64_t sub_10025A430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Mirror.AncestorRepresentation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015D6EC8);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = a1;
  v14[1] = a2;
  sub_1000FF33C(&qword_1015CC060);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100F5CF70;
  *(void *)(v11 + 32) = 0xD000000000000010;
  *(void *)(v11 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0x8000000100F80630;
  *(void *)(v11 + 72) = sub_1000FF33C((uint64_t *)&unk_1015D6ED8);
  *(void *)(v11 + 48) = a1;
  uint64_t v12 = type metadata accessor for Mirror.DisplayStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Mirror.AncestorRepresentation.generated(_:), v4);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)();
}

uint64_t sub_10025A62C()
{
  return sub_10025A430(*v0, v0[1]);
}

uint64_t sub_10025A634(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Mirror.AncestorRepresentation();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C((uint64_t *)&unk_1015D6EC8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = a1;
  v22[1] = a2;
  void v22[2] = a3;
  v22[3] = a4;
  sub_1000FF33C(&qword_1015CC060);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100F5CF80;
  strcpy((char *)(v15 + 32), "identifierPath");
  *(unsigned char *)(v15 + 47) = -18;
  uint64_t v16 = sub_100100830(0, (unint64_t *)&unk_1015D6E30);
  *(void *)(v15 + 48) = a1;
  *(void *)(v15 + 72) = v16;
  *(void *)(v15 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0xD00000000000001ALL;
  *(void *)(v15 + 88) = 0x8000000100F80650;
  uint64_t v17 = sub_1000FF33C(&qword_1015D6EE8);
  *(void *)(v15 + 96) = a3;
  *(void *)(v15 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v17;
  strcpy((char *)(v15 + 128), "cellSnapshots");
  *(_WORD *)(v15 + 142) = -4864;
  *(void *)(v15 + 168) = sub_1000FF33C(&qword_1015D6EF0);
  *(void *)(v15 + 144) = a2;
  uint64_t v18 = type metadata accessor for Mirror.DisplayStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Mirror.AncestorRepresentation.generated(_:), v8);
  id v19 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v20 = v19;
  swift_bridgeObjectRetain();
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)();
}

uint64_t sub_10025A8D8()
{
  return sub_10025A634(*(void **)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10025A8E4()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Mirror.AncestorRepresentation();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D6EC8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF3F0((uint64_t)v1, (uint64_t)v21);
  sub_1000FF33C(&qword_1015CC060);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100F5CFA0;
  strcpy((char *)(v9 + 32), "identifierPath");
  *(unsigned char *)(v9 + 47) = -18;
  uint64_t v10 = *v1;
  uint64_t v11 = sub_100100830(0, (unint64_t *)&unk_1015D6E30);
  *(void *)(v9 + 48) = v10;
  *(void *)(v9 + 72) = v11;
  *(void *)(v9 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0x65646F4D6C6C6563;
  *(void *)(v9 + 88) = 0xE90000000000006CLL;
  sub_1000FF27C((uint64_t)(v1 + 1), (uint64_t)v18, (uint64_t *)&unk_1015D6960);
  sub_100101314(v18, (uint64_t)v19);
  uint64_t v12 = v20;
  uint64_t v13 = sub_1000FF380(v19, v20);
  *(void *)(v9 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v12;
  uint64_t v14 = sub_100100B1C((uint64_t *)(v9 + 96));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v14, v13, v12);
  id v15 = v10;
  sub_1000FF22C((uint64_t)v19);
  uint64_t v16 = type metadata accessor for Mirror.DisplayStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Mirror.AncestorRepresentation.generated(_:), v2);
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)();
}

uint64_t sub_10025AB90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v21 = a1;
  uint64_t v3 = type metadata accessor for Mirror.AncestorRepresentation();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C((uint64_t *)&unk_1015D6EC8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FFEE8((uint64_t)v2, (uint64_t)v25);
  sub_1000FF33C(&qword_1015CC060);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100F5CF80;
  strcpy((char *)(v10 + 32), "identifierPath");
  *(unsigned char *)(v10 + 47) = -18;
  uint64_t v11 = *v2;
  uint64_t v12 = sub_100100830(0, (unint64_t *)&unk_1015D6E30);
  *(void *)(v10 + 48) = v11;
  *(void *)(v10 + 72) = v12;
  *(void *)(v10 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0x4B746E656D656C65;
  uint64_t v13 = v2[1];
  uint64_t v14 = v2[2];
  *(void *)(v10 + 88) = 0xEB00000000646E69;
  *(void *)(v10 + 96) = v13;
  *(void *)(v10 + 104) = v14;
  *(void *)(v10 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = &type metadata for String;
  *(void *)(v10 + 128) = 0xD000000000000016;
  *(void *)(v10 + 136) = 0x8000000100F80670;
  sub_1000FF27C((uint64_t)(v2 + 3), (uint64_t)v22, &qword_1015D6EA0);
  sub_100101314(v22, (uint64_t)v23);
  uint64_t v15 = v24;
  uint64_t v16 = sub_1000FF380(v23, v24);
  *(void *)(v10 + 168) = v15;
  uint64_t v17 = sub_100100B1C((uint64_t *)(v10 + 144));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v17, v16, v15);
  id v18 = v11;
  swift_bridgeObjectRetain();
  sub_1000FF22C((uint64_t)v23);
  uint64_t v19 = type metadata accessor for Mirror.DisplayStyle();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Mirror.AncestorRepresentation.generated(_:), v3);
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)();
}

unint64_t sub_10025AE78(uint64_t a1)
{
  unint64_t result = sub_10025AEA0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10025AEA0()
{
  unint64_t result = qword_1015D6E58;
  if (!qword_1015D6E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6E58);
  }
  return result;
}

uint64_t sub_10025AEF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025B0F8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10025AF14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025C588(a1, a2, a3, (void *)*v3, &qword_1015D41C8, type metadata accessor for PlaceSummaryViewModelLine);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10025AF50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025B264(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10025AF70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025C0F8(a1, a2, a3, *v3, &qword_1015D6F40);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10025AF98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025B534(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10025AFB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025B6A0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10025AFD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025B95C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10025AFF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025BDDC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10025B018(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025C588(a1, a2, a3, (void *)*v3, &qword_1015D4850, (uint64_t (*)(void))&type metadata accessor for Handle);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10025B054(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025BF54(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10025B074(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025C0F8(a1, a2, a3, *v3, (uint64_t *)&unk_1015D5D60);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10025B09C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025C254(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10025B0BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10025C588(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1015D6FC0, (uint64_t (*)(void))type metadata accessor for PlaceEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10025B0F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015CE220);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025B264(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D4740);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025B3D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D41F0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025B534(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D6FE8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025B6A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D1BD0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025B800(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D6FE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025B95C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D73D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025BAC8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D6F08);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D6F10);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025BC54(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D41A8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025BDDC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D6FF0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 80 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025BF54(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D4140);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1000FF33C(&qword_1015D6F20);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025C0F8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_1000FF33C(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025C254(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D6F28);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D6F30);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025C3FC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10025C588(a1, a2, a3, a4, &qword_1015D6F00, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_10025C41C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D6EF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025C588(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000FF33C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10025C7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v34 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v6 = 0;
  for (int64_t i = 0; ; int64_t i = v37)
  {
    Swift::UInt v39 = v6;
    if (v5)
    {
      unint64_t v12 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      int64_t v37 = i;
      unint64_t v13 = v12 | (i << 6);
      goto LABEL_21;
    }
    int64_t v14 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v34) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v35 + 8 * v14);
    int64_t v16 = i + 1;
    if (!v15)
    {
      int64_t v16 = i + 2;
      if (i + 2 >= v34) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v35 + 8 * v16);
      if (!v15) {
        break;
      }
    }
LABEL_20:
    unint64_t v5 = (v15 - 1) & v15;
    int64_t v37 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_21:
    uint64_t v18 = 32 * v13;
    uint64_t v19 = *(void *)(a2 + 48) + v18;
    unint64_t v20 = *(void **)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    int v23 = *(unsigned __int8 *)(v19 + 24);
    uint64_t v24 = *(void *)(a2 + 56) + v18;
    unint64_t v25 = *(void **)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v28 = *(void *)(v24 + 16);
    uint64_t v27 = *(void *)(v24 + 24);
    uint64_t v29 = *(void *)(a1 + 64);
    long long v30 = *(_OWORD *)(a1 + 16);
    v40[0] = *(_OWORD *)a1;
    v40[1] = v30;
    long long v31 = *(_OWORD *)(a1 + 48);
    v40[2] = *(_OWORD *)(a1 + 32);
    v40[3] = v31;
    uint64_t v41 = v29;
    id v32 = v20;
    id v38 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100100818(v21, v22, v23);
    NSObject.hash(into:)();
    if (!v23)
    {
      Hasher._combine(_:)(3uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1001007A8(v21, v22, 0);

      uint64_t v8 = v21;
      uint64_t v9 = v22;
      unsigned __int8 v10 = 0;
LABEL_5:
      sub_1001007A8(v8, v9, v10);
      goto LABEL_6;
    }
    if (v23 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1001007A8(v21, v22, 1u);

      uint64_t v8 = v21;
      uint64_t v9 = v22;
      unsigned __int8 v10 = 1;
      goto LABEL_5;
    }
    if (v21 | v22)
    {
      if (v21 ^ 1 | v22) {
        Swift::UInt v33 = 2;
      }
      else {
        Swift::UInt v33 = 1;
      }
    }
    else
    {
      Swift::UInt v33 = 0;
    }
    Hasher._combine(_:)(v33);

LABEL_6:
    id v11 = v38;
    NSObject.hash(into:)();

    swift_bridgeObjectRetain();
    sub_10025D1C4((uint64_t)v40, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_10025D094((uint64_t)v40, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_10025CB1C(v40, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    Swift::UInt v6 = Hasher._finalize()() ^ v39;
  }
  uint64_t v17 = i + 3;
  if (i + 3 >= v34)
  {
LABEL_30:
    swift_release();
    Hasher._combine(_:)(v6);
    return;
  }
  unint64_t v15 = *(void *)(v35 + 8 * v17);
  if (v15)
  {
    int64_t v16 = i + 3;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v34) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v35 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
}

void sub_10025CB1C(long long *a1, uint64_t a2)
{
  uint64_t v28 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v7 = 0;
  int64_t v30 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v30 << 6);
      goto LABEL_8;
    }
    int64_t v16 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 < v29)
    {
      unint64_t v17 = *(void *)(v28 + 8 * v16);
      if (v17) {
        goto LABEL_12;
      }
      int64_t v18 = v30 + 2;
      ++v30;
      if (v16 + 1 < v29)
      {
        unint64_t v17 = *(void *)(v28 + 8 * v18);
        if (v17)
        {
          ++v16;
          goto LABEL_12;
        }
        int64_t v19 = v16 + 2;
        int64_t v30 = v16 + 1;
        if (v16 + 2 < v29) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v6 = 0;
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
LABEL_25:
    sub_100101750((uint64_t)&v39, (uint64_t)v44, &qword_1015D2AC8);
    unint64_t v20 = (void *)v44[0];
    if (!v44[0])
    {
      swift_release();
      Hasher._combine(_:)(v7);
      return;
    }
    uint64_t v22 = v44[1];
    uint64_t v21 = v44[2];
    int v23 = v45;
    v37[0] = v46;
    v37[1] = v47;
    uint64_t v38 = v48;
    uint64_t v24 = *((void *)a1 + 8);
    long long v25 = a1[1];
    long long v39 = *a1;
    long long v40 = v25;
    long long v26 = a1[3];
    long long v41 = a1[2];
    long long v42 = v26;
    uint64_t v43 = v24;
    NSObject.hash(into:)();
    if (v23)
    {
      if (v23 == 1)
      {
        Hasher._combine(_:)(4uLL);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        sub_1001007A8(v22, v21, 1u);

        sub_1001007A8(v22, v21, 1u);
      }
      else
      {
        if (v22 | v21)
        {
          if (v22 ^ 1 | v21) {
            Swift::UInt v27 = 2;
          }
          else {
            Swift::UInt v27 = 1;
          }
        }
        else
        {
          Swift::UInt v27 = 0;
        }
        Hasher._combine(_:)(v27);
      }
    }
    else
    {
      Hasher._combine(_:)(3uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1001007A8(v22, v21, 0);

      sub_1001007A8(v22, v21, 0);
    }
    sub_1000FF4D4((uint64_t)v37, (uint64_t)v34);
    sub_1000FF33C(&qword_1015D2AD0);
    if (swift_dynamicCast())
    {
      v35[0] = v31;
      v35[1] = v32;
      uint64_t v36 = v33;
      AnyHashable.hash(into:)();
      sub_1000F351C((uint64_t)v35);
    }
    else
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
      sub_1000FF2E0((uint64_t)&v31, &qword_1015CF1E0);
    }
    sub_1000FF2E0((uint64_t)v37, &qword_1015D2AC0);
    v7 ^= Hasher._finalize()();
  }
  unint64_t v17 = *(void *)(v28 + 8 * v19);
  if (v17)
  {
    v16 += 2;
LABEL_12:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v9 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v30 = v16;
LABEL_8:
    uint64_t v10 = *(void *)(a2 + 48) + 32 * v9;
    unint64_t v12 = *(void **)v10;
    uint64_t v11 = *(void *)(v10 + 8);
    uint64_t v13 = *(void *)(v10 + 16);
    unsigned __int8 v14 = *(unsigned char *)(v10 + 24);
    sub_1000FF27C(*(void *)(a2 + 56) + 40 * v9, (uint64_t)&v41, &qword_1015D2AC0);
    *(void *)&long long v39 = v12;
    *((void *)&v39 + 1) = v11;
    *(void *)&long long v40 = v13;
    BYTE8(v4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v14;
    id v15 = v12;
    sub_100100818(v11, v13, v14);
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v16 >= v29)
    {
      int64_t v30 = v29 - 1;
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    ++v19;
    if (v17) {
      goto LABEL_12;
    }
  }
LABEL_40:
  __break(1u);
}

void sub_10025CEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v13 >= v7) {
      goto LABEL_19;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_19;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v9);
      if (!v14) {
        break;
      }
    }
LABEL_18:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_5:
    unint64_t v12 = *(Swift::UInt32 **)(*(void *)(a2 + 56) + 8 * v11);
    Hasher._combine(_:)(*(unsigned __int8 *)(*(void *)(a2 + 48) + v11));
    Hasher._combine(_:)(v12[4]);
    Hasher._combine(_:)(v12[5]);
    Hasher._combine(_:)(v12[6]);
    v8 ^= Hasher._finalize()();
  }
  int64_t v15 = v13 + 2;
  if (v15 >= v7)
  {
LABEL_19:
    swift_release();
    Hasher._combine(_:)(v8);
    return;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_19;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
}

void sub_10025D094(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v3);
  if (v3)
  {
    uint64_t v4 = a2 + 32;
    do
    {
      sub_1000FFEE8(v4, (uint64_t)&v11);
      NSObject.hash(into:)();
      String.hash(into:)();
      sub_1000FF4D4((uint64_t)&v12, (uint64_t)v8);
      sub_1000FF33C((uint64_t *)&unk_1015D1C40);
      if (swift_dynamicCast())
      {
        v9[0] = v5;
        v9[1] = v6;
        uint64_t v10 = v7;
        AnyHashable.hash(into:)();
        sub_1000F351C((uint64_t)v9);
      }
      else
      {
        uint64_t v7 = 0;
        long long v5 = 0u;
        long long v6 = 0u;
        sub_1000FF2E0((uint64_t)&v5, &qword_1015CF1E0);
      }
      sub_1001008A0((uint64_t)&v11);
      v4 += 64;
      --v3;
    }
    while (v3);
  }
}

void sub_10025D1C4(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v3);
  if (v3)
  {
    uint64_t v4 = a2 + 32;
    do
    {
      sub_1000FF3F0(v4, (uint64_t)&v11);
      NSObject.hash(into:)();
      sub_1000FF4D4((uint64_t)&v12, (uint64_t)v8);
      sub_1000FF33C((uint64_t *)&unk_1015D1C50);
      if (swift_dynamicCast())
      {
        v9[0] = v5;
        v9[1] = v6;
        uint64_t v10 = v7;
        AnyHashable.hash(into:)();
        sub_1000F351C((uint64_t)v9);
      }
      else
      {
        uint64_t v7 = 0;
        long long v5 = 0u;
        long long v6 = 0u;
        sub_1000FF2E0((uint64_t)&v5, &qword_1015CF1E0);
      }
      sub_1000FFC8C((uint64_t)&v11);
      v4 += 48;
      --v3;
    }
    while (v3);
  }
}

void sub_10025D2E8(long long *a1, uint64_t a2)
{
  Swift::UInt v4 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (v4)
  {
    long long v5 = (uint64_t *)(a2 + 56);
    do
    {
      uint64_t v6 = *(v5 - 2);
      uint64_t v8 = *(v5 - 1);
      uint64_t v7 = *v5;
      id v9 = (id)*(v5 - 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSObject.hash(into:)();
      swift_bridgeObjectRetain();
      sub_10025D1C4((uint64_t)a1, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10025D094((uint64_t)a1, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10025CB1C(a1, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      v5 += 4;
      --v4;
    }
    while (v4);
  }
}

uint64_t sub_10025D3E4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  id v9 = sub_100100B1C((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_100101314(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_10025D47C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
      {
        if (a1 == a4 && a2 == a5) {
          return 1;
        }
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    else if (a1 | a2)
    {
      if (a1 ^ 1 | a2)
      {
        if (a6 == 2 && a4 == 2 && !a5) {
          return 1;
        }
      }
      else if (a6 == 2 && a4 == 1 && !a5)
      {
        return 1;
      }
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
  }
  else if (!a6)
  {
    if (a1 == a4 && a2 == a5) {
      return 1;
    }
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return 0;
}

uint64_t sub_10025D558(uint64_t a1, uint64_t a2)
{
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }

  return sub_1001025A8(a1 + 24, a2 + 24);
}

uint64_t sub_10025D5FC()
{
  swift_bridgeObjectRelease();
  sub_1000FF22C(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10025D644()
{
  sub_1000FF22C(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10025D684()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10025D6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D2AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for HomeListElementKey.ElementKind(uint64_t a1)
{
  return sub_1001007A8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s4Maps18HomeListElementKeyV11ElementKindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100100818(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for HomeListElementKey.ElementKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100100818(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1001007A8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for HomeListElementKey.ElementKind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1001007A8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListElementKey.ElementKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListElementKey.ElementKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10025D8C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10025D8E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HomeListElementKey.ElementKind()
{
  return &type metadata for HomeListElementKey.ElementKind;
}

uint64_t assignWithCopy for HomeListSupplementaryViewSnapshot(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100258CC4((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

uint64_t assignWithTake for HomeListSupplementaryViewSnapshot(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  sub_1000FF22C(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for HomeListElementKey(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  int v4 = *a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;
  id v6 = v4;

  uint64_t v7 = (uint64_t)v2[1];
  uint64_t v8 = (uint64_t)v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_100100818(v7, v8, v2);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  sub_1001007A8(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for HomeListElementKey(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1001007A8(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListElementKey(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListElementKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_10025DB34()
{
  unint64_t result = qword_1015D6FD0;
  if (!qword_1015D6FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6FD0);
  }
  return result;
}

void sub_10025DB88(uint64_t a1, void *a2)
{
  unsigned int v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_10025DC98(uint64_t a1)
{
  return sub_10025E2B0(a1, type metadata accessor for HomeListRootControllerConfiguration);
}

void sub_10025DE18(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = sub_1000806A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  id v5 = v8;
  if (v8)
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    if (v6)
    {
      uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
      sub_1000F71E8(v6);
      sub_1000F71E8(v6);
      id v5 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10008DC64(v5, 2, 0, 2, v7, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
}

void sub_10025DF10()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer) invalidate];
    if (v1[OBJC_IVAR____TtC4Maps22HomeListRootController_isActive] == 1)
    {
      uint64_t v2 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
      if (*(void *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers])
      {
        unsigned int v3 = *(void **)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers];
      }
      else
      {
        unsigned int v3 = sub_1000F0E20();
        *(void *)&v1[v2] = v3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (*(void *)&v1[v2])
        {
          uint64_t v4 = swift_bridgeObjectRetain();
          sub_1000716FC(v4);
        }
        else
        {
          *(void *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands] = _swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          unint64_t v5 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v6 = (unint64_t *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers];
          swift_beginAccess();
          *uint64_t v6 = v5;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_1000F2788(v3, 1);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10025E0E4(void *a1)
{
  unsigned int v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16))
  {
    id v5 = a1;
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_100071AC4((uint64_t)v5);
    if (v7)
    {
      sub_1000FF4D4(*(void *)(v4 + 56) + 40 * v6, (uint64_t)&v11);
    }
    else
    {
      uint64_t v13 = 0;
      long long v11 = 0u;
      long long v12 = 0u;
    }

    swift_bridgeObjectRelease();
    if (*((void *)&v12 + 1))
    {
      sub_100101314(&v11, (uint64_t)v14);
      uint64_t v8 = v15;
      uint64_t v9 = v16;
      sub_1000FF380(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
      return sub_1000FF22C((uint64_t)v14);
    }
  }
  else
  {
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
  }
  return sub_1000FF2E0((uint64_t)&v11, (uint64_t *)&unk_1015D73B0);
}

id sub_10025E294()
{
  return sub_10025E2B0(0, type metadata accessor for HomeListRootController);
}

id sub_10025E2B0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.id receiver = v2;
  v4.Class super_class = (Class)a2();
  return [super dealloc];
}

void *sub_10025E4B4(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  unint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    if ([result respondsToSelector:*a4])
    {
      id v9 = a3;
      id v10 = a1;
      [v8 *a4:v9];
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

id sub_10025E658(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v5 = sub_1000806A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  if (!v10) {
    return 0;
  }
  Class isa = sub_1001034C8(v10);

  if (!isa) {
    return 0;
  }
  if ([isa respondsToSelector:*a3])
  {
    id v7 = isa;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v8 = [v7 *a3:a1:isa];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

uint64_t sub_10025E744(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  LOBYTE(a5) = sub_10025E658((uint64_t)v12, (uint64_t)v11, a5);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a5 & 1;
}

void sub_10025E858(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v11 = (char *)&v31 - v10;
  if (qword_1015CBD40 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000F2248(v12, (uint64_t)qword_101611778);
  id v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13(v11, a2, v5);
  v13(v8, a2, v5);
  id v14 = v2;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_t v33 = v15;
    uint64_t v34 = a2;
    uint64_t v35 = a1;
    uint64_t v17 = swift_slowAlloc();
    long long v31 = (void *)swift_slowAlloc();
    long long v32 = (void *)swift_slowAlloc();
    int64_t v37 = v32;
    *(_DWORD *)uint64_t v17 = 136315650;
    swift_getObjectType();
    uint64_t v18 = _typeName(_:qualified:)();
    uint64_t v36 = sub_1000F2280(v18, v19, (uint64_t *)&v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    sub_100260390();
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v36 = sub_1000F2280(v20, v21, (uint64_t *)&v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22(v11, v5);
    *(_WORD *)(v17 + 22) = 2112;
    id v23 = sub_1000806A8();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    uint64_t v24 = v36;
    if (!v36) {
      uint64_t v36 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v31 = v24;

    v22(v8, v5);
    os_log_t v26 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, v16, "%s did select item at index path: %s, identifier path: %@", (uint8_t *)v17, 0x20u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v35;
  }
  else
  {

    long long v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v25(v11, v5);

    v25(v8, v5);
  }
  id v27 = sub_1000806A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  uint64_t v28 = v37;
  if (v37)
  {
    Class isa = sub_1001034C8(v37);

    if (isa)
    {
      if ([isa respondsToSelector:"collectionView:didSelectItemAtIndexPath:"])
      {
        id v30 = isa;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v30 collectionView:a1 didSelectItemAtIndexPath:isa];
      }
    }
  }
}

void sub_10025EF5C(void *a1, void *a2)
{
  id v4 = [a1 window];
  if (v4)
  {
    uint64_t v5 = v4;
    id v16 = [v4 windowScene];

    if (v16)
    {
      id v6 = [objc_allocWithZone((Class)MapsDragLocalContext) initWithWindowScene:v16];
      [a2 setLocalContext:v6];

      *(void *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession) = a2;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      id v7 = [self sharedManager];
      [v7 setDragSession:a2];

      sub_10025F168();
      uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem);
      if (v8)
      {
        id v9 = v8;
        id v10 = [v9 analyticsHelper];
        id v11 = [self sharedService];
        if (!v11)
        {
          __break(1u);
          return;
        }
        uint64_t v12 = v11;
        id v13 = [v10 eventValue];
        id v14 = [v10 actionDetails];
        [v12 captureUserAction:17001 onTarget:8 eventValue:v13 placeActionDetails:v14];

        uint64_t v15 = v14;
      }
      else
      {
        uint64_t v15 = v16;
      }
    }
  }
}

void sub_10025F168()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession);
  if (!v1) {
    return;
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView);
  if (!v2) {
    return;
  }
  swift_unknownObjectRetain();
  id v3 = v2;
  id v4 = [v3 renderPreviewImage];
  id v5 = [v4 dragPreview];
  id v6 = [v1 items];
  sub_100100830(0, &qword_1015D7388);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_5;
    }
LABEL_11:
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_11;
  }
LABEL_5:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v8 = *(id *)(v7 + 32);
  }
  id v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v5;
  void v14[4] = sub_10025FC44;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  void v14[2] = sub_10025F654;
  void v14[3] = &unk_1012DFF80;
  id v11 = _Block_copy(v14);
  id v12 = v5;
  swift_release();
  [v9 setPreviewProvider:v11];
  swift_unknownObjectRelease();

  _Block_release(v11);
}

id sub_10025F654(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  id v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

uint64_t sub_10025F774(void **__src, id *a2, id *a3, void **__dst)
{
  id v4 = __dst;
  id v5 = a3;
  id v6 = a2;
  unint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v65 = __src;
  int64_t v64 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_65;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    uint64_t v55 = v4;
    os_log_t v33 = &v4[v13];
    uint64_t v63 = v33;
    uint64_t v65 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_64:
      sub_100354BDC(&v65, &v64, &v63);
      return 1;
    }
    uint64_t v34 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
    uint64_t v35 = v6;
    int v60 = v7;
    while (1)
    {
      uint64_t v56 = v33;
      size_t v58 = v6;
      id v62 = v5;
      int64_t v37 = *--v33;
      uint64_t v36 = v37;
      uint64_t v38 = *--v35;
      id v39 = v36;
      id v40 = v38;
      id v41 = [v39 v34[90]];
      if (v41)
      {
        long long v42 = v41;
        uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v45 = v44;
      }
      else
      {
        uint64_t v43 = 0;
        unint64_t v45 = 0xE000000000000000;
      }
      id v46 = [v40 v34[90]];
      if (v46)
      {
        long long v47 = v46;
        uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v50 = v49;

        if (v43 != v48) {
          goto LABEL_51;
        }
      }
      else
      {
        unint64_t v50 = 0xE000000000000000;
        if (v43) {
          goto LABEL_51;
        }
      }
      if (v45 == v50)
      {

        swift_bridgeObjectRelease_n();
        id v51 = v62;
        id v5 = v62 - 1;
LABEL_56:
        uint64_t v35 = v58;
        unint64_t v53 = (unint64_t)v60;
        uint64_t v34 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
        uint64_t v63 = v33;
        if (v51 < v56 || v5 >= v56 || v51 != v56) {
          *id v5 = *v33;
        }
        goto LABEL_60;
      }
LABEL_51:
      char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v51 = v62;
      id v5 = v62 - 1;
      if ((v52 & 1) == 0) {
        goto LABEL_56;
      }
      unint64_t v53 = (unint64_t)v60;
      os_log_t v33 = v56;
      if (v62 != v58 || v5 >= v58) {
        *id v5 = *v35;
      }
      uint64_t v65 = v35;
      uint64_t v34 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
LABEL_60:
      if ((unint64_t)v35 > v53)
      {
        id v6 = v35;
        if (v33 > v55) {
          continue;
        }
      }
      goto LABEL_64;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v57 = &v4[v10];
    uint64_t v63 = v57;
    if (v6 < v5 && v8 >= 8)
    {
      id v14 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
      uint64_t v61 = v5;
      while (1)
      {
        int v59 = v7;
        uint64_t v15 = v6;
        id v16 = *v4;
        id v17 = *v6;
        id v18 = v16;
        id v19 = [v17 v14[90]];
        if (v19)
        {
          uint64_t v20 = v19;
          uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v23 = v22;
        }
        else
        {
          uint64_t v21 = 0;
          unint64_t v23 = 0xE000000000000000;
        }
        id v24 = [v18 v14[90]];
        if (v24)
        {
          long long v25 = v24;
          uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v28 = v27;

          if (v21 != v26) {
            goto LABEL_22;
          }
        }
        else
        {
          unint64_t v28 = 0xE000000000000000;
          if (v21) {
            goto LABEL_22;
          }
        }
        if (v23 == v28)
        {

          swift_bridgeObjectRelease_n();
LABEL_27:
          long long v31 = v59;
          long long v32 = v61;
          if (v59 != v4) {
            void *v59 = *v4;
          }
          int64_t v64 = ++v4;
          id v30 = v15;
          goto LABEL_30;
        }
LABEL_22:
        char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0) {
          goto LABEL_27;
        }
        id v30 = v15 + 1;
        long long v31 = v59;
        long long v32 = v61;
        if (v59 >= v15 && v59 < v30)
        {
          id v14 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
          if (v59 != v15) {
            void *v59 = *v15;
          }
          goto LABEL_31;
        }
        void *v59 = *v15;
LABEL_30:
        id v14 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
LABEL_31:
        unint64_t v7 = v31 + 1;
        if (v4 < v57)
        {
          id v6 = v30;
          if (v30 < v32) {
            continue;
          }
        }
        uint64_t v65 = v7;
        goto LABEL_64;
      }
    }
    goto LABEL_64;
  }
LABEL_65:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025FC0C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10025FC44()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void *sub_10025FC6C(uint64_t a1, uint64_t a2)
{
  id v2 = _swiftEmptyArrayStorage;
  id v18 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = a1 + 32;
    do
    {
      sub_1000FFEE8(v5, (uint64_t)v14);
      if ([v14[0] hasPrefix:a2])
      {
        long long v10 = *(_OWORD *)v14;
        long long v11 = v15;
        long long v12 = v16;
        long long v13 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10025AFD8(0, v2[2] + 1, 1);
        }
        id v2 = v18;
        unint64_t v7 = v18[2];
        unint64_t v6 = v18[3];
        if (v7 >= v6 >> 1)
        {
          sub_10025AFD8(v6 > 1, v7 + 1, 1);
          id v2 = v18;
        }
        v2[2] = v7 + 1;
        int64_t v8 = &v2[8 * v7];
        uint64_t v8[2] = v10;
        v8[3] = v11;
        v8[4] = v12;
        v8[5] = v13;
      }
      else
      {
        sub_1001008A0((uint64_t)v14);
      }
      v5 += 64;
      --v3;
    }
    while (v3);
  }
  return v2;
}

uint64_t sub_10025FD98(uint64_t a1)
{
  sub_1000FF27C(a1, (uint64_t)v17, (uint64_t *)&unk_1015CD260);
  if (!v18)
  {
    int64_t v8 = (uint64_t *)&unk_1015CD260;
    int64_t v9 = (long long *)v17;
LABEL_12:
    sub_1000FF2E0((uint64_t)v9, v8);
    goto LABEL_13;
  }
  sub_100100830(0, &qword_1015D48A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    char v12 = 0;
    return v12 & 1;
  }
  id v2 = (void *)v14;
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!*(void *)(*v3 + 16))
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
LABEL_11:

    int64_t v8 = (uint64_t *)&unk_1015D73B0;
    int64_t v9 = &v14;
    goto LABEL_12;
  }
  id v5 = (id)v14;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100071AC4((uint64_t)v5);
  if (v7)
  {
    sub_1000FF4D4(*(void *)(v4 + 56) + 40 * v6, (uint64_t)&v14);
  }
  else
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
  }

  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1)) {
    goto LABEL_11;
  }
  sub_100101314(&v14, (uint64_t)v17);
  uint64_t v10 = v18;
  uint64_t v11 = v19;
  sub_1000FF380(v17, v18);
  char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);

  sub_1000FF22C((uint64_t)v17);
  return v12 & 1;
}

void sub_10025FF28(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [self sharedManager];
  unsigned int v5 = [v4 canStartNewDrag];

  if (!v5) {
    return;
  }
  sub_10025DE18(&v25);
  if (!(void)v25)
  {
    sub_1000FF2E0((uint64_t)&v25, &qword_1015D68C0);
    return;
  }
  v28[0] = v25;
  v28[1] = v26;
  void v28[2] = v27;
  sub_1000FF27C((uint64_t)v28 + 8, (uint64_t)v24, (uint64_t *)&unk_1015D6960);
  sub_100101314(v24, (uint64_t)&v25);
  uint64_t v6 = *((void *)&v26 + 1);
  uint64_t v7 = v27;
  sub_1000FF380(&v25, *((uint64_t *)&v26 + 1));
  int64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
  if (!v8)
  {
    sub_1000FFC8C((uint64_t)v28);
    sub_1000FF22C((uint64_t)&v25);
    return;
  }
  int64_t v9 = v8;
  [v8 setObserver:v2];
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem);
  *(void *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem) = v9;
  id v11 = v9;

  id v12 = [v11 analyticsHelper];
  id v13 = [v12 actionDetails];

  if (!v13)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v14 = IndexPath.item.getter();
  if (v14 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v14 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  [v13 setResultIndex:v14];

  id v15 = v11;
  id v16 = [a1 traitCollection];
  id v17 = [objc_allocWithZone((Class)DragAndDropPreview) initWithDragAndDropMapItem:v15 traitCollection:v16];

  uint64_t v18 = OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView;
  uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView);
  *(void *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView) = v17;

  uint64_t v20 = *(void **)(v2 + v18);
  if (v20) {
    [v20 setContentUpdateDelegate:v2];
  }
  id v21 = [v15 itemProvider];
  id v22 = [objc_allocWithZone((Class)UIDragItem) initWithItemProvider:v21];

  sub_1000FF33C(&qword_1015CD310);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100F5DFF0;
  *(void *)(v23 + 32) = v22;
  *(void *)&v24[0] = v23;
  specialized Array._endMutation()();

  sub_1000FFC8C((uint64_t)v28);
  sub_1000FF22C((uint64_t)&v25);
}

void sub_100260210()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem);
  if (v2)
  {
    id v3 = v2;
    id v4 = [v3 analyticsHelper];
    id v5 = [self sharedService];
    if (!v5)
    {
      __break(1u);
      return;
    }
    uint64_t v6 = v5;
    id v7 = [v4 eventValue];
    id v8 = [v4 actionDetails];
    [v6 captureUserAction:17003 onTarget:8 eventValue:v7 placeActionDetails:v8];
  }
  *(void *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession) = 0;
  swift_unknownObjectRelease();
  int64_t v9 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView);
  *(void *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView) = 0;

  id v11 = [self sharedManager];
  [v11 setDragSession:0];
}

unint64_t sub_100260390()
{
  unint64_t result = qword_1015DA650;
  if (!qword_1015DA650)
  {
    type metadata accessor for IndexPath();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA650);
  }
  return result;
}

uint64_t sub_1002603E8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100260420()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100260458()
{
}

void sub_1002604A8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  id v15 = sub_100261054;
  uint64_t v16 = v2;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  id v13 = sub_1001DA1FC;
  uint64_t v14 = &unk_1012E00C0;
  id v3 = _Block_copy(&v11);
  id v4 = v0;
  swift_release();
  id v5 = [v4 addSectionWithTitle:v1 content:v3];
  _Block_release(v3);

  NSString v6 = String._bridgeToObjectiveC()();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  id v15 = sub_10026105C;
  uint64_t v16 = v7;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  id v13 = sub_1001DA1FC;
  uint64_t v14 = &unk_1012E0110;
  id v8 = _Block_copy(&v11);
  id v9 = v4;
  swift_release();
  id v10 = [v9 addSectionWithTitle:v6 content:v8];
  _Block_release(v8);
}

void sub_1002606E0(void *a1)
{
  int HasValue = _GEOConfigHasValue();
  if (a1)
  {
    int v3 = HasValue;
    NSString v4 = String._bridgeToObjectiveC()();
    uint64_t v5 = swift_allocObject();
    *(unsigned char *)(v5 + 16) = v3;
    uint64_t v20 = sub_1002610E4;
    uint64_t v21 = v5;
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    uint64_t v18 = sub_1002609E8;
    uint64_t v19 = &unk_1012E02A0;
    NSString v6 = _Block_copy(&v16);
    swift_release();
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v20 = sub_1002610EC;
    uint64_t v21 = v7;
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    uint64_t v18 = sub_100316A88;
    uint64_t v19 = &unk_1012E02C8;
    id v8 = _Block_copy(&v16);
    swift_release();
    id v9 = [a1 addSwitchRowWithTitle:v4 get:v6 set:v8];
    _Block_release(v8);
    _Block_release(v6);

    if (v3)
    {
      NSString v10 = String._bridgeToObjectiveC()();
      NSString v11 = String._bridgeToObjectiveC()();
      uint64_t v20 = sub_100260A28;
      uint64_t v21 = 0;
      uint64_t v16 = _NSConcreteStackBlock;
      uint64_t v17 = 1107296256;
      uint64_t v18 = sub_100260A54;
      uint64_t v19 = &unk_1012E0228;
      uint64_t v12 = _Block_copy(&v16);
      uint64_t v20 = sub_100260A9C;
      uint64_t v21 = 0;
      uint64_t v16 = _NSConcreteStackBlock;
      uint64_t v17 = 1107296256;
      uint64_t v18 = sub_100260AB4;
      uint64_t v19 = &unk_1012E0250;
      id v13 = _Block_copy(&v16);
      LODWORD(v14) = 1119092736;
      id v15 = [a1 addSliderRowWithTitle:v10 subtitleStringFormat:v11 min:v12 max:v13 get:0.0 set:v14];
      _Block_release(v13);
      _Block_release(v12);
    }
  }
}

uint64_t sub_1002609E8(uint64_t a1)
{
  NSString v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

float sub_100260A28()
{
  GEOConfigGetDouble();
  return v0;
}

float sub_100260A54(uint64_t a1)
{
  NSString v1 = *(float (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  float v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_100260A9C()
{
  return GEOConfigSetDouble();
}

uint64_t sub_100260AB4(uint64_t a1, float a2)
{
  float v3 = *(void (**)(uint64_t, float))(a1 + 32);
  uint64_t v4 = swift_retain();
  v3(v4, a2);

  return swift_release();
}

void sub_100260B08(void *a1)
{
  int HasValue = _GEOConfigHasValue();
  if (a1)
  {
    int v3 = HasValue;
    NSString v4 = String._bridgeToObjectiveC()();
    uint64_t v5 = swift_allocObject();
    *(unsigned char *)(v5 + 16) = v3;
    uint64_t v21 = sub_100261114;
    uint64_t v22 = v5;
    uint64_t v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_1002609E8;
    uint64_t v20 = &unk_1012E01B0;
    NSString v6 = _Block_copy(&v17);
    swift_release();
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v21 = sub_1002610AC;
    uint64_t v22 = v7;
    uint64_t v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_100316A88;
    uint64_t v20 = &unk_1012E0200;
    id v8 = _Block_copy(&v17);
    swift_release();
    id v9 = [a1 addSwitchRowWithTitle:v4 get:v6 set:v8];
    _Block_release(v8);
    _Block_release(v6);

    if (v3)
    {
      NSString v10 = String._bridgeToObjectiveC()();
      NSString v11 = String._bridgeToObjectiveC()();
      uint64_t v21 = sub_100260E78;
      uint64_t v22 = 0;
      uint64_t v17 = _NSConcreteStackBlock;
      uint64_t v18 = 1107296256;
      uint64_t v19 = sub_100260A54;
      uint64_t v20 = &unk_1012E0138;
      uint64_t v12 = _Block_copy(&v17);
      uint64_t v21 = sub_100260EA4;
      uint64_t v22 = 0;
      uint64_t v17 = _NSConcreteStackBlock;
      uint64_t v18 = 1107296256;
      uint64_t v19 = sub_100260AB4;
      uint64_t v20 = &unk_1012E0160;
      id v13 = _Block_copy(&v17);
      LODWORD(v14) = 1.0;
      LODWORD(v15) = 20.0;
      id v16 = [a1 addSliderRowWithTitle:v10 subtitleStringFormat:v11 min:v12 max:v13 get:v14 set:v15];
      _Block_release(v13);
      _Block_release(v12);
    }
  }
}

void sub_100260DFC(char a1)
{
  if (a1) {
    GEOConfigSetDouble();
  }
  else {
    _GEOConfigRemoveValue();
  }
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    [Strong rebuildSections];
  }
}

float sub_100260E78()
{
  GEOConfigGetDouble();
  return v0;
}

uint64_t sub_100260EA4()
{
  return GEOConfigSetDouble();
}

uint64_t type metadata accessor for MapsCameraDefaultsDebugController()
{
  return self;
}

uint64_t sub_10026101C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100261054(void *a1)
{
}

void sub_10026105C(void *a1)
{
}

uint64_t sub_100261064()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100261074()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002610AC(char a1)
{
}

uint64_t sub_1002610D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1002610E4()
{
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_1002610EC(char a1)
{
}

void sub_10026114C(void *a1@<X8>)
{
  if (v1[13] >> 60 == 6)
  {
    int v3 = (void *)v1[14];
    uint64_t v4 = v1[12];
    uint64_t v5 = v1[9];
    uint64_t v6 = v1[7];
    uint64_t v20 = v1[8];
    uint64_t v21 = v1[10];
    uint64_t v7 = v1[5];
    uint64_t v19 = v1[6];
    uint64_t v8 = v1[3];
    uint64_t v23 = v1[4];
    uint64_t v9 = v1[11] & 1;
    uint64_t v10 = v1[13] & 1;
    uint64_t v11 = v1[2];
    id v12 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = v21;
  }
  else
  {
    uint64_t v9 = v1[16];
    if (!v9)
    {
      uint64_t v11 = 0;
      uint64_t v8 = 0;
      uint64_t v23 = 0;
      uint64_t v7 = 0;
      uint64_t v16 = 0;
      uint64_t v6 = 0;
      uint64_t v17 = 0;
      uint64_t v5 = 0;
      uint64_t v13 = 0;
      uint64_t v4 = 0;
      uint64_t v10 = 0;
      int v3 = 0;
      goto LABEL_7;
    }
    uint64_t v14 = swift_retain();
    sub_10026114C(v24, v14);
    uint64_t v8 = v24[1];
    uint64_t v7 = v24[3];
    uint64_t v6 = v24[5];
    uint64_t v18 = v24[0];
    uint64_t v19 = v24[4];
    uint64_t v5 = v24[7];
    uint64_t v20 = v24[6];
    uint64_t v15 = v24[9];
    uint64_t v22 = v24[8];
    uint64_t v23 = v24[2];
    uint64_t v4 = v24[10];
    uint64_t v10 = v24[11];
    int v3 = (void *)v24[12];
    swift_release();
    uint64_t v9 = v15;
    uint64_t v13 = v22;
    uint64_t v11 = v18;
  }
  uint64_t v16 = v19;
  uint64_t v17 = v20;
LABEL_7:
  *a1 = v11;
  a1[1] = v8;
  a1[2] = v23;
  a1[3] = v7;
  a1[4] = v16;
  a1[5] = v6;
  a1[6] = v17;
  a1[7] = v5;
  a1[8] = v13;
  a1[9] = v9;
  a1[10] = v4;
  a1[11] = v10;
  a1[12] = v3;
}

uint64_t sub_1002612B8(uint64_t a1)
{
  if (sub_1002619E4() == a1) {
    return 1;
  }
  if (!*(void *)(v1 + 128)) {
    return 0;
  }
  swift_retain();
  char v4 = sub_1002612B8(a1);
  swift_release();
  return v4 & 1;
}

id sub_100261320(void *a1)
{
  sub_1002627DC(a1, (uint64_t)v9);
  sub_100101750((uint64_t)v9, (uint64_t)v10, &qword_1015D7588);
  if (v11 >> 1 == 0xFFFFFFFF && v12 <= 1)
  {
    id v8 = [a1 alternativeUnit];
    if (v8)
    {
      uint64_t v7 = sub_100261320(v8);
    }
    else
    {

      return 0;
    }
    return (id)v7;
  }
  sub_1002634F4(v10, (uint64_t)v13);
  id v3 = [a1 alternativeUnit];

  if (!v3)
  {
LABEL_9:
    uint64_t v6 = (int)[a1 layoutPriority];
    type metadata accessor for PlaceSummaryUnit();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 128) = 0;
    sub_1002634F4(v13, v7 + 16);
    *(void *)(v7 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v6;
    *(void *)(v7 + 128) = v3;

    swift_release();
    return (id)v7;
  }
  id result = [a1 alternativeUnit];
  if (result)
  {
    id v5 = result;
    type metadata accessor for PlaceSummaryUnit();
    id v3 = (id)sub_100261320(v5);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_10026147C()
{
  sub_100223808(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112));
  uint64_t v1 = *(void *)(v0 + 128);
  *(void *)(v0 + 128) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + 128);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_10026150C()
{
  sub_10026147C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlaceSummaryUnit()
{
  return self;
}

uint64_t sub_100261564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, void *a13)
{
  unint64_t v13 = a12 >> 60;
  if (a12 >> 60) {
    BOOL v14 = v13 == 2;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v13 != 6) {
      return result;
    }
    id v15 = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

void destroy for PlaceSummaryUnit.UnitType(uint64_t a1)
{
}

uint64_t *initializeWithCopy for PlaceSummaryUnit.UnitType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  unint64_t v15 = a2[11];
  uint64_t v16 = (void *)a2[12];
  sub_100261564(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = (uint64_t)v16;
  return a1;
}

uint64_t assignWithCopy for PlaceSummaryUnit.UnitType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v25 = a2[10];
  unint64_t v26 = a2[11];
  long long v27 = (void *)a2[12];
  sub_100261564(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  uint64_t v22 = *(void **)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v25;
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v27;
  sub_100223808(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22);
  return a1;
}

uint64_t assignWithTake for PlaceSummaryUnit.UnitType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 96);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  uint64_t v14 = *(void **)(a1 + 96);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  long long v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v17;
  *(void *)(a1 + 96) = v3;
  sub_100223808(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryUnit.UnitType(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 72) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for PlaceSummaryUnit.UnitType(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = 2 * -a2;
      *(void *)(a1 + 88) = 0;
      *(void *)(a1 + 96) = 0;
      *(void *)(a1 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100261954(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 88) >> 60;
  if (v1 <= 9) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 10);
  }
}

uint64_t sub_100261970(uint64_t result)
{
  *(void *)(result + 88) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_100261980(uint64_t result, uint64_t a2)
{
  if (a2 < 0xA)
  {
    uint64_t v2 = *(void *)(result + 88) & 1 | (a2 << 60);
    *(void *)(result + 72) &= 1uLL;
    *(void *)(result + 88) = v2;
  }
  else
  {
    *(void *)double result = (a2 - 10);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = xmmword_100F67BD0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnit.UnitType()
{
  return &type metadata for PlaceSummaryUnit.UnitType;
}

uint64_t sub_1002619E4()
{
  uint64_t v1 = v0[2];
  unint64_t v2 = v0[13];
  uint64_t result = 1;
  switch(v2 >> 60)
  {
    case 1uLL:
      uint64_t result = 3;
      break;
    case 2uLL:
      uint64_t result = 5;
      break;
    case 3uLL:
      uint64_t result = 6;
      break;
    case 4uLL:
      uint64_t result = 7;
      break;
    case 5uLL:
      uint64_t result = 10;
      break;
    case 6uLL:
      uint64_t result = 14;
      break;
    case 7uLL:
      uint64_t result = 15;
      break;
    case 8uLL:
      if (v0[2]) {
        uint64_t result = 17;
      }
      else {
        uint64_t result = 16;
      }
      break;
    case 9uLL:
      uint64_t result = 24;
      break;
    case 0xAuLL:
      uint64_t v4 = v0[14];
      uint64_t v5 = v0[5];
      uint64_t v6 = v0[3];
      uint64_t v7 = v0[4];
      if (v2 != 0xA000000000000000) {
        goto LABEL_16;
      }
      v8.i64[0] = v0[9];
      v8.i64[1] = v0[8];
      v9.i64[0] = v0[14];
      v9.i64[1] = v0[12];
      v10.i64[0] = v0[7];
      v10.i64[1] = v0[6];
      v11.i64[0] = v0[11];
      v11.i64[1] = v0[10];
      int8x16_t v12 = vorrq_s8(vorrq_s8(v9, v8), vorrq_s8(v11, v10));
      if (v6 | *(void *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | v7 | v5 | v1)
      {
LABEL_16:
        uint64_t v13 = v0[11] | v0[12] | v0[10] | v0[9] | v0[8] | v0[7] | v0[6] | v5 | v7 | v6;
        if (v4 || v2 != 0xA000000000000000 || v1 != 1 || v13)
        {
          if (v4 || v2 != 0xA000000000000000 || v1 != 2 || v13)
          {
            if (v4 || v2 != 0xA000000000000000 || v1 != 3 || v13)
            {
              if (v4 || v2 != 0xA000000000000000 || v1 != 4 || v13)
              {
                if (v4 || v2 != 0xA000000000000000 || v1 != 5 || v13)
                {
                  if (v4 || v2 != 0xA000000000000000 || v1 != 6 || v13)
                  {
                    if (v4 || v2 != 0xA000000000000000 || v1 != 7 || v13)
                    {
                      if (v4 || v2 != 0xA000000000000000 || v1 != 8 || v13)
                      {
                        if (v4 || v2 != 0xA000000000000000 || v1 != 9 || v13)
                        {
                          if (v4 || v2 != 0xA000000000000000 || v1 != 10 || v13)
                          {
                            if (v4 || v2 != 0xA000000000000000 || v1 != 11 || v13)
                            {
                              if (v4 || v2 != 0xA000000000000000 || v1 != 12 || v13)
                              {
                                if (v4 || v2 != 0xA000000000000000 || v1 != 13 || v13)
                                {
                                  if (v4 || v2 != 0xA000000000000000 || v1 != 14 || v13)
                                  {
                                    if (v4 || v2 != 0xA000000000000000 || v1 != 15 || v13)
                                    {
                                      if (v4 || v2 != 0xA000000000000000 || v1 != 16 || v13)
                                      {
                                        if (v4 || v2 != 0xA000000000000000 || v1 != 17 || v13)
                                        {
                                          if (v4 || v2 != 0xA000000000000000 || v1 != 18 || v13)
                                          {
                                            if (v4 || v2 != 0xA000000000000000 || v1 != 19 || v13)
                                            {
                                              if (v4 || v2 != 0xA000000000000000 || v1 != 20 || v13)
                                              {
                                                if (v4 || v2 != 0xA000000000000000 || v1 != 21 || v13)
                                                {
                                                  if (v4 || v2 != 0xA000000000000000 || v1 != 22 || v13)
                                                  {
                                                    if (v4 || v2 != 0xA000000000000000 || v1 != 23 || v13)
                                                    {
                                                      if (v4 || v2 != 0xA000000000000000 || v1 != 24 || v13)
                                                      {
                                                        if (v4 || v2 != 0xA000000000000000 || v1 != 25 || v13)
                                                        {
                                                          if (v4 || v2 != 0xA000000000000000 || v1 != 26 || v13)
                                                          {
                                                            if (v4 || v2 != 0xA000000000000000 || v1 != 27 || v13)
                                                            {
                                                              if (v4 || v2 != 0xA000000000000000 || v1 != 28 || v13)
                                                              {
                                                                if (v4 || v2 != 0xA000000000000000 || v1 != 29 || v13)
                                                                {
                                                                  if (v4
                                                                    || v2 != 0xA000000000000000
                                                                    || v1 != 30
                                                                    || v13)
                                                                  {
                                                                    if (v13) {
                                                                      BOOL v14 = 0;
                                                                    }
                                                                    else {
                                                                      BOOL v14 = v1 == 31;
                                                                    }
                                                                    if (v14 && v2 == 0xA000000000000000 && v4 == 0) {
                                                                      uint64_t result = 30;
                                                                    }
                                                                    else {
                                                                      uint64_t result = 36;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    uint64_t result = 29;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t result = 28;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                uint64_t result = 27;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              uint64_t result = 26;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            uint64_t result = 25;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          uint64_t result = 33;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        uint64_t result = 32;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      uint64_t result = 44;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    uint64_t result = 43;
                                                  }
                                                }
                                                else
                                                {
                                                  uint64_t result = 42;
                                                }
                                              }
                                              else
                                              {
                                                uint64_t result = 39;
                                              }
                                            }
                                            else
                                            {
                                              uint64_t result = 40;
                                            }
                                          }
                                          else
                                          {
                                            uint64_t result = 38;
                                          }
                                        }
                                        else
                                        {
                                          uint64_t result = 37;
                                        }
                                      }
                                      else
                                      {
                                        uint64_t result = 35;
                                      }
                                    }
                                    else
                                    {
                                      uint64_t result = 34;
                                    }
                                  }
                                  else
                                  {
                                    uint64_t result = 31;
                                  }
                                }
                                else
                                {
                                  uint64_t result = 11;
                                }
                              }
                              else
                              {
                                uint64_t result = 23;
                              }
                            }
                            else
                            {
                              uint64_t result = 22;
                            }
                          }
                          else
                          {
                            uint64_t result = 21;
                          }
                        }
                        else
                        {
                          uint64_t result = 20;
                        }
                      }
                      else
                      {
                        uint64_t result = 19;
                      }
                    }
                    else
                    {
                      uint64_t result = 18;
                    }
                  }
                  else
                  {
                    uint64_t result = 13;
                  }
                }
                else
                {
                  uint64_t result = 12;
                }
              }
              else
              {
                uint64_t result = 9;
              }
            }
            else
            {
              uint64_t result = 8;
            }
          }
          else
          {
            uint64_t result = 4;
          }
        }
        else
        {
          uint64_t result = 2;
        }
      }
      else
      {
        uint64_t result = 0;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100261F88()
{
  uint64_t v1 = v0[2];
  unint64_t v2 = v0[13];
  uint64_t result = 0x45434E4154534944;
  switch(v2 >> 60)
  {
    case 1uLL:
      return result;
    case 2uLL:
      return 0x5352554F48;
    case 3uLL:
      return 0x53534552444441;
    case 4uLL:
      return 0x53474E49544152;
    case 5uLL:
      return 0x5F44455441525543;
    case 6uLL:
      return 0x474E49525453;
    case 7uLL:
      return 0x4F5F524556524553;
    case 8uLL:
      return 0x4D4E4941544E4F43;
    case 9uLL:
      return 0x44494F54434146;
    case 0xAuLL:
      uint64_t v4 = v0[14];
      uint64_t v5 = v0[5];
      uint64_t v6 = v0[3];
      uint64_t v7 = v0[4];
      if (v2 == 0xA000000000000000)
      {
        v8.i64[0] = v0[9];
        v8.i64[1] = v0[8];
        v9.i64[0] = v0[14];
        v9.i64[1] = v0[12];
        v10.i64[0] = v0[7];
        v10.i64[1] = v0[6];
        v11.i64[0] = v0[11];
        v11.i64[1] = v0[10];
        int8x16_t v12 = vorrq_s8(vorrq_s8(v9, v8), vorrq_s8(v11, v10));
        if (!(v6 | *(void *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | v7 | v5 | v1)) {
          return 1162690894;
        }
      }
      uint64_t v13 = v0[11] | v0[12] | v0[10] | v0[9] | v0[8] | v0[7] | v0[6] | v5 | v7 | v6;
      if (!v4 && v2 == 0xA000000000000000 && v1 == 1 && !v13) {
        return 0x59524F4745544143;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 2 && !v13) {
        return 0x4543495250;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 3 && !v13) {
        return 0x5F5449534E415254;
      }
      uint64_t result = 0xD000000000000012;
      if (!v4 && v2 == 0xA000000000000000 && v1 == 4 && !v13) {
        return 0xD000000000000015;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 5 && !v13) {
        return result;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 6 && !v13) {
        return 0xD000000000000022;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 7 && !v13) {
        return 0x544E45434552;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 8 && !v13) {
        return 0x4847494C48474948;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 9 && !v13) {
        return 0xD000000000000010;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 10 && !v13) {
        return 0x454853494C425550;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 11 && !v13) {
        return 0xD000000000000019;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 12 && !v13) {
        return 0xD000000000000015;
      }
      if (!v4 && v2 == 0xA000000000000000 && v1 == 13 && !v13) {
        return 0xD000000000000022;
      }
      if (v4 || v2 != 0xA000000000000000 || v1 != 14 || v13)
      {
        if (v4 || v2 != 0xA000000000000000 || v1 != 15 || v13)
        {
          if (v4 || v2 != 0xA000000000000000 || v1 != 16 || v13)
          {
            if (v4 || v2 != 0xA000000000000000 || v1 != 17 || v13)
            {
              if (v4 || v2 != 0xA000000000000000 || v1 != 18 || v13)
              {
                if (v4 || v2 != 0xA000000000000000 || v1 != 19 || v13)
                {
                  if (v4 || v2 != 0xA000000000000000 || v1 != 20 || v13)
                  {
                    if (v4 || v2 != 0xA000000000000000 || v1 != 21 || v13)
                    {
                      if (v4 || v2 != 0xA000000000000000 || v1 != 22 || v13)
                      {
                        if (v4 || v2 != 0xA000000000000000 || v1 != 23 || v13)
                        {
                          if (v4 || v2 != 0xA000000000000000 || v1 != 24 || v13)
                          {
                            if (v4 || v2 != 0xA000000000000000 || v1 != 25 || v13)
                            {
                              if (v4 || v2 != 0xA000000000000000 || v1 != 26 || v13)
                              {
                                if (v4 || v2 != 0xA000000000000000 || v1 != 27 || v13)
                                {
                                  if (v4 || v2 != 0xA000000000000000 || v1 != 28 || v13)
                                  {
                                    if (!v4 && v2 == 0xA000000000000000 && v1 == 29 && !v13)
                                    {
                                      return 0xD000000000000010;
                                    }
                                    else if (v4 || v2 != 0xA000000000000000 || v1 != 30 || v13)
                                    {
                                      BOOL v14 = v4 == 0;
                                      BOOL v17 = v1 == 31 && v13 == 0 && v2 == 0xA000000000000000;
                                      if (v14 && v17) {
                                        return 0xD00000000000001FLL;
                                      }
                                      else {
                                        return 0x5F53534552444441;
                                      }
                                    }
                                    else
                                    {
                                      return 0xD00000000000001DLL;
                                    }
                                  }
                                  else
                                  {
                                    return 0xD000000000000028;
                                  }
                                }
                                else
                                {
                                  return 0xD000000000000021;
                                }
                              }
                              else
                              {
                                return 0xD000000000000023;
                              }
                            }
                          }
                          else
                          {
                            return 0xD00000000000001ALL;
                          }
                        }
                        else
                        {
                          return 0x544F4E5F52455355;
                        }
                      }
                      else
                      {
                        return 0x5F524553555F4E49;
                      }
                    }
                    else
                    {
                      return 0xD000000000000019;
                    }
                  }
                  else
                  {
                    return 0x55445F4554554F52;
                  }
                }
                else
                {
                  return 0x454C5F4554554F52;
                }
              }
              else
              {
                return 0x59545F4554554F52;
              }
            }
            else
            {
              return 0x435F534F544F4850;
            }
          }
          else
          {
            return 0xD000000000000013;
          }
        }
        else
        {
          return 0xD000000000000011;
        }
      }
      return result;
    default:
      return 0x5241444E4F434553;
  }
}

void sub_1002627DC(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4 = [a1 type];
  uint64_t v5 = 0;
  long long v6 = 0uLL;
  uint64_t v7 = 0x1FFFFFFFELL;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  long long v12 = 0uLL;
  long long v13 = 0uLL;
  uint64_t v14 = 0;
  switch(v4)
  {
    case 1u:
      id v15 = [a1 name];
      if (!v15)
      {
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
        JUMPOUT(0x100263468);
      }

      uint64_t v5 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      goto LABEL_86;
    case 2u:
      id v16 = [a1 category:0.0, 0.0, 0.0];
      if (!v16) {
        goto LABEL_94;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 1;
      goto LABEL_86;
    case 3u:
      [a1 distance:0.0, 0.0, 0.0];
      if (!v17) {
        goto LABEL_95;
      }
      uint64_t v18 = v17;
      uint64_t v5 = (uint64_t)[v17 maximumDistanceInMeters];

      if (!v5) {
        goto LABEL_80;
      }
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      uint64_t v11 = 0x1000000000000000;
      goto LABEL_86;
    case 4u:
      id v19 = [a1 price:0.0:0.0:0.0];
      if (!v19) {
        goto LABEL_96;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 2;
      goto LABEL_86;
    case 5u:
      id v20 = [a1 hours:0.0, 0.0, 0.0];
      if (!v20) {
        goto LABEL_97;
      }
      char v21 = sub_100127C80(v20);
      if (v22 == 1) {
        goto LABEL_79;
      }
      uint64_t v8 = v22;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v5 = v21 & 1;
      long long v13 = 0uLL;
      uint64_t v11 = 0x2000000000000000;
      goto LABEL_86;
    case 6u:
      id v23 = [a1 address:0.0, 0.0, 0.0];
      if (!v23) {
        goto LABEL_98;
      }
      uint64_t v24 = v23;
      unsigned int v25 = [v23 type];

      uint64_t v5 = v25 - 1;
      if (v5 <= 3)
      {
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v7 = 0;
        uint64_t v10 = 0;
        uint64_t v14 = 0;
        long long v12 = 0uLL;
        long long v13 = 0uLL;
        uint64_t v11 = 0x3000000000000000;
        goto LABEL_86;
      }
LABEL_79:
      uint64_t v5 = 0;
LABEL_80:
      uint64_t v8 = 0;
      goto LABEL_83;
    case 7u:
      id v26 = [a1 ratings:0.0, 0.0, 0.0];
      if (!v26) {
        goto LABEL_99;
      }
      long long v27 = v26;
      LODWORD(v5) = [v26 shouldShowRatingCount];

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      uint64_t v11 = 0x4000000000000000;
      uint64_t v5 = v5;
      goto LABEL_86;
    case 8u:
      id v28 = [a1 transitShields:0.0, 0.0, 0.0];
      if (!v28) {
        goto LABEL_100;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 3;
      goto LABEL_86;
    case 9u:
      id v29 = [a1 userGeneratedGuides:0.0, 0.0, 0.0];
      if (!v29) {
        goto LABEL_101;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 4;
      goto LABEL_86;
    case 0xAu:
      id v30 = [a1 curatedGuides:0.0, 0.0, 0.0];
      if (!v30) {
        goto LABEL_102;
      }
      long long v31 = v30;
      if ([v30 hasMinNumGuides])
      {
        LODWORD(v5) = [v31 minNumGuides];

        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v7 = 0;
        uint64_t v10 = 0;
        uint64_t v14 = 0;
        long long v12 = 0uLL;
        long long v13 = 0uLL;
        uint64_t v11 = 0x5000000000000000;
        uint64_t v5 = v5;
      }
      else
      {

        uint64_t v5 = 0;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v7 = 0;
        uint64_t v10 = 0;
        uint64_t v14 = 0;
        long long v12 = 0uLL;
        long long v13 = 0uLL;
        uint64_t v11 = 0x5000000000000000;
      }
      goto LABEL_86;
    case 0xBu:
      id v32 = [a1 evChargersNumber:0.0, 0.0, 0.0];
      if (!v32) {
        goto LABEL_103;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 5;
      goto LABEL_86;
    case 0xCu:
      id v33 = [a1 ugcUserSubmittedRecommendations:0.0, 0.0, 0.0];
      if (!v33) {
        goto LABEL_104;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 6;
      goto LABEL_86;
    case 0xDu:
      id v34 = [a1 string:0.0, 0.0, 0.0];
      if (!v34) {
        goto LABEL_105;
      }
      uint64_t v35 = v34;
      sub_1001CBCC0(v34, v65);

      sub_100101750((uint64_t)v65, (uint64_t)&v66, &qword_1015D3620);
      uint64_t v8 = v67;
      if (v67)
      {
        uint64_t v5 = v66;
        long long v6 = v68;
        long long v12 = v69;
        long long v13 = v70;
        uint64_t v9 = v71;
        uint64_t v7 = v72;
        uint64_t v10 = v73;
        uint64_t v14 = v75;
        uint64_t v11 = v74 | 0x6000000000000000;
      }
      else
      {
        uint64_t v5 = 0;
LABEL_83:
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v14 = 0;
        long long v12 = 0uLL;
        long long v13 = 0uLL;
        uint64_t v7 = 0x1FFFFFFFELL;
LABEL_86:
        long long v6 = 0uLL;
      }
      goto LABEL_87;
    case 0xEu:
      id v36 = [a1 serverOverride:0.0, 0.0, 0.0];
      if (!v36) {
        goto LABEL_106;
      }
      int64_t v37 = v36;
      LODWORD(v5) = [v36 serverOverrideIdentifier];

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      uint64_t v11 = 0x7000000000000000;
      uint64_t v5 = v5;
      goto LABEL_86;
    case 0xFu:
      id v38 = [a1 containment:0.0, 0.0, 0.0];
      if (!v38) {
        goto LABEL_107;
      }
      id v39 = v38;
      unsigned int v40 = [v38 containmentType];

      uint64_t v5 = 0;
      if (v40 == 1)
      {
        long long v6 = 0uLL;
        goto LABEL_90;
      }
      long long v6 = 0uLL;
      if (v40 == 4)
      {
        uint64_t v5 = 2;
        goto LABEL_90;
      }
      if (v40 == 3)
      {
        uint64_t v5 = 1;
LABEL_90:
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v7 = 0;
        uint64_t v10 = 0;
        uint64_t v14 = 0;
        long long v12 = 0uLL;
        long long v13 = 0uLL;
        uint64_t v11 = 0x8000000000000000;
        goto LABEL_87;
      }
      uint64_t v7 = 0x1FFFFFFFELL;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0;
LABEL_92:
      long long v13 = 0uLL;
      uint64_t v14 = 0;
LABEL_87:
      *(void *)a2 = v5;
      *(void *)(a2 + 8) = v8;
      *(_OWORD *)(a2 + 16) = v6;
      *(_OWORD *)(a2 + 32) = v12;
      *(_OWORD *)(a2 + 48) = v13;
      *(void *)(a2 + 64) = v9;
      *(void *)(a2 + 72) = v7;
      *(void *)(a2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v10;
      *(void *)(a2 + 88) = v11;
      *(void *)(a2 + 96) = v14;
      return;
    case 0x10u:
      id v41 = [a1 recent:0.0, 0.0, 0.0];
      if (!v41) {
        goto LABEL_108;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 7;
      goto LABEL_86;
    case 0x11u:
      id v42 = [a1 highlightMain:0.0, 0.0, 0.0];
      if (!v42) {
        goto LABEL_109;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 8;
      goto LABEL_86;
    case 0x12u:
      id v43 = [a1 highlightExtra:0.0, 0.0, 0.0];
      if (!v43) {
        goto LABEL_110;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 9;
      goto LABEL_86;
    case 0x13u:
      id v44 = [a1 publisherNameForGuide:0.0, 0.0, 0.0];
      if (!v44) {
        goto LABEL_111;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 10;
      goto LABEL_86;
    case 0x14u:
      id v45 = [a1 numPlacesInGuide:0.0, 0.0, 0.0];
      if (!v45) {
        goto LABEL_112;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 11;
      goto LABEL_86;
    case 0x15u:
      id v46 = [a1 publisherDescription:0.0:0.0:0.0];
      if (!v46) {
        goto LABEL_113;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 12;
      goto LABEL_86;
    case 0x16u:
      id v47 = [a1 secondaryName:0.0, 0.0, 0.0];
      if (!v47) {
        goto LABEL_114;
      }
      uint64_t v48 = v47;
      id v49 = [v47 symbolName];
      if (v49)
      {
        unint64_t v50 = v49;
        uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v8 = v51;
      }
      else
      {

        uint64_t v5 = 0;
        uint64_t v8 = 0;
      }
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      goto LABEL_86;
    case 0x17u:
      [a1 factoid:0.0:0.0:0.0];
      if (!v52) {
        goto LABEL_115;
      }
      unint64_t v53 = v52;
      LODWORD(v5) = [v52 factoidIndex];

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      uint64_t v11 = 0x9000000000000000;
      uint64_t v5 = v5;
      goto LABEL_86;
    case 0x18u:
      goto LABEL_87;
    case 0x19u:
      id v54 = [a1 realTimeEvChargerAvailability:0.0, 0.0, 0.0];
      if (!v54) {
        goto LABEL_116;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 13;
      goto LABEL_86;
    case 0x1Au:
      id v55 = [a1 detourTime:0.0:0.0:0.0];
      if (!v55) {
        goto LABEL_117;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 14;
      goto LABEL_86;
    case 0x1Bu:
      id v56 = [a1 hikingDifficulty:0.0, 0.0, 0.0];
      if (!v56) {
        goto LABEL_118;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 15;
      goto LABEL_86;
    case 0x1Cu:
      id v64 = [a1 hikingTrailLength:0.0, 0.0, 0.0];
      if (!v64) {
        goto LABEL_126;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 16;
      goto LABEL_86;
    case 0x1Du:
      id v57 = [a1 photoCarousel:0.0, 0.0, 0.0];
      if (!v57) {
        goto LABEL_119;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 17;
      goto LABEL_86;
    case 0x1Eu:
      id v58 = [a1 inUserLibrary:0.0, 0.0, 0.0];
      if (!v58) {
        goto LABEL_120;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 22;
      goto LABEL_86;
    case 0x1Fu:
      id v59 = [a1 userNote:0.0:0.0:0.0];
      if (!v59) {
        goto LABEL_121;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 23;
      goto LABEL_86;
    case 0x20u:
      id v60 = [a1 hikeRouteElevationGainLoss:0.0, 0.0, 0.0];
      if (!v60) {
        goto LABEL_122;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 21;
      goto LABEL_86;
    case 0x21u:
      id v61 = [a1 hikeRouteType:0.0, 0.0, 0.0];
      if (!v61) {
        goto LABEL_123;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 18;
      goto LABEL_86;
    case 0x22u:
      id v62 = [a1 hikeRouteDuration:0.0:0.0:0.0];
      if (!v62) {
        goto LABEL_124;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 20;
      goto LABEL_86;
    case 0x23u:
      id v63 = [a1 hikeRouteLength:0.0, 0.0, 0.0];
      if (!v63) {
        goto LABEL_125;
      }

      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v10 = 0;
      uint64_t v14 = 0;
      long long v12 = 0uLL;
      uint64_t v11 = 0xA000000000000000;
      long long v13 = 0uLL;
      uint64_t v5 = 19;
      goto LABEL_86;
    default:
      goto LABEL_92;
  }
}

uint64_t sub_1002634F4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  *(_OWORD *)(a2 + 16) = a1[1];
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)a2 = v2;
  long long v4 = a1[3];
  long long v5 = a1[4];
  long long v6 = a1[5];
  *(void *)(a2 + 96) = *((void *)a1 + 12);
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v6;
  *(_OWORD *)(a2 + 48) = v4;
  return a2;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitUGCUserSubmittedRecommendations()
{
  return &type metadata for PlaceSummaryUnitUGCUserSubmittedRecommendations;
}

id sub_10026363C()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for PlaceSummaryTemplateFactory();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryTemplateFactory()
{
  return self;
}

id sub_100263694(void *a1)
{
  id v1 = [a1 mapItem];
  if (!v1) {
    goto LABEL_6;
  }
  objc_super v2 = v1;
  id v3 = [v1 _venueInfo];

  if (!v3) {
    goto LABEL_6;
  }
  id v4 = [v3 contents];
  swift_unknownObjectRelease();
  if (!v4) {
    goto LABEL_6;
  }
  id v5 = [v4 items];
  swift_unknownObjectRelease();
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_1000FF33C(&qword_1015D4170);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100F5CFA0;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100F5DFF0;
    type metadata accessor for PlaceSummaryUnit();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = 0u;
    *(_OWORD *)(v10 + 32) = 0u;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(_OWORD *)(v10 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(void *)(v10 + 96) = 0;
    *(void *)(v10 + 104) = 0xA000000000000000;
    *(void *)(v10 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v10 + 128) = 0;
    *(void *)(v10 + 112) = 0;
    *(void *)(v9 + 32) = v10;
    specialized Array._endMutation()();
    *(void *)(v8 + 32) = v9;
    *(_WORD *)(v8 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = 25;
    *(_OWORD *)(v12 + 24) = 0u;
    *(_OWORD *)(v12 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v12 + 56) = 0u;
    *(_OWORD *)(v12 + 72) = 0u;
    *(_OWORD *)(v12 + 88) = 0u;
    *(void *)(v12 + 104) = 0xA000000000000000;
    *(void *)(v12 + 112) = 0;
    *(void *)(v12 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v12 + 128) = 0;
    *(void *)(v11 + 32) = v12;
    specialized Array._endMutation()();
    *(void *)(v8 + 48) = v11;
    *(unsigned char *)(v8 + 56) = 0;
    long long v13 = (unsigned char *)(v8 + 57);
  }
  else
  {
LABEL_6:
    sub_1000FF33C(&qword_1015D4170);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100F5CF80;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100F5DFF0;
    type metadata accessor for PlaceSummaryUnit();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = 0u;
    *(_OWORD *)(v15 + 32) = 0u;
    *(_OWORD *)(v15 + 48) = 0u;
    *(_OWORD *)(v15 + 64) = 0u;
    *(_OWORD *)(v15 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(void *)(v15 + 96) = 0;
    *(void *)(v15 + 104) = 0xA000000000000000;
    *(void *)(v15 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v15 + 128) = 0;
    *(void *)(v15 + 112) = 0;
    *(void *)(v14 + 32) = v15;
    specialized Array._endMutation()();
    *(void *)(v8 + 32) = v14;
    *(_WORD *)(v8 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_100F5F0D0;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = 1;
    *(_OWORD *)(v17 + 24) = 0u;
    *(_OWORD *)(v17 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v17 + 56) = 0u;
    *(_OWORD *)(v17 + 72) = 0u;
    *(_OWORD *)(v17 + 88) = 0u;
    *(void *)(v17 + 104) = 0xA000000000000000;
    *(void *)(v17 + 112) = 0;
    *(void *)(v17 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v17 + 128) = 0;
    *(void *)(v16 + 32) = v17;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 24;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_OWORD *)(v18 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v18 + 56) = 0u;
    *(_OWORD *)(v18 + 72) = 0u;
    *(_OWORD *)(v18 + 88) = 0u;
    *(void *)(v18 + 104) = 0xA000000000000000;
    *(void *)(v18 + 112) = 0;
    *(void *)(v18 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v18 + 128) = 0;
    *(void *)(v16 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v18;
    specialized Array._endMutation()();
    *(void *)(v8 + 48) = v16;
    *(_WORD *)(v8 + 56) = 0;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_100F5F0D0;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100F5F0D0;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = 6;
    *(_OWORD *)(v21 + 24) = 0u;
    *(_OWORD *)(v21 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v21 + 56) = 0u;
    *(_OWORD *)(v21 + 72) = 0u;
    *(_OWORD *)(v21 + 88) = 0u;
    *(void *)(v21 + 104) = 0xA000000000000000;
    *(void *)(v21 + 112) = 0;
    *(void *)(v21 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v21 + 128) = 0;
    *(void *)(inited + 32) = v21;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 1;
    *(_OWORD *)(v22 + 24) = 0u;
    *(_OWORD *)(v22 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v22 + 56) = 0u;
    *(_OWORD *)(v22 + 72) = 0u;
    *(_OWORD *)(v22 + 88) = 0u;
    *(void *)(v22 + 104) = 0x4000000000000000;
    *(void *)(v22 + 112) = 0;
    *(void *)(v22 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v22 + 128) = 0;
    *(void *)(inited + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v22;
    specialized Array._endMutation()();
    *(void *)(v21 + 128) = v22;
    swift_retain();
    swift_release();
    swift_retain();
    swift_bridgeObjectRelease();
    *(void *)(v19 + 32) = v21;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 2;
    *(_OWORD *)(v23 + 24) = 0u;
    *(_OWORD *)(v23 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v23 + 56) = 0u;
    *(_OWORD *)(v23 + 72) = 0u;
    *(_OWORD *)(v23 + 88) = 0u;
    *(void *)(v23 + 104) = 0xA000000000000000;
    *(void *)(v23 + 112) = 0;
    *(void *)(v23 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v23 + 128) = 0;
    *(void *)(v19 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v23;
    specialized Array._endMutation()();
    *(void *)(v8 + 64) = v19;
    *(unsigned char *)(v8 + 72) = 0;
    long long v13 = (unsigned char *)(v8 + 73);
  }
  *long long v13 = 0;
  return sub_1001BD4F8(1u, v8, (uint64_t)&off_1012D7BE8, 0);
}

id sub_100263B64(void *a1)
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5F5F0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v4 + 96) = 0;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v4 + 112) = 0;
  *(void *)(v3 + 32) = v4;
  specialized Array._endMutation()();
  *(void *)(v2 + 32) = v3;
  *(_WORD *)(v2 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F62DB0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 1;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(void *)(v6 + 104) = 0xA000000000000000;
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v6 + 128) = 0;
  *(void *)(v5 + 32) = v6;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 402336;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(void *)(v7 + 104) = 0x1000000000000000;
  *(void *)(v7 + 112) = 0;
  *(void *)(v7 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v7 + 128) = 0;
  *(void *)(v5 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v7;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 2;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(void *)(v8 + 104) = 0xA000000000000000;
  *(void *)(v8 + 112) = 0;
  *(void *)(v8 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v8 + 128) = 0;
  *(void *)(v5 + 48) = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 18;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(void *)(v9 + 104) = 0xA000000000000000;
  *(void *)(v9 + 112) = 0;
  *(void *)(v9 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v9 + 128) = 0;
  *(void *)(v5 + 56) = v9;
  specialized Array._endMutation()();
  *(void *)(v2 + 48) = v5;
  *(_WORD *)(v2 + 56) = 0;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100F5E000;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 3;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  *(_OWORD *)(v11 + 88) = 0u;
  *(void *)(v11 + 112) = 0;
  *(void *)(v11 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v11 + 104) = 0xA000000000000000;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = &off_1012D7C10;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v12 + 96) = 0;
  *(void *)(v12 + 104) = 0x2000000000000000;
  *(void *)(v12 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v12 + 128) = 0;
  *(void *)(v12 + 112) = 0;
  *(void *)(v11 + 128) = v12;
  *(void *)(v10 + 32) = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 19;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 88) = 0u;
  *(void *)(v13 + 104) = 0xA000000000000000;
  *(void *)(v13 + 112) = 0;
  *(void *)(v13 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v13 + 128) = 0;
  *(void *)(v10 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 21;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 88) = 0u;
  *(void *)(v14 + 104) = 0xA000000000000000;
  *(void *)(v14 + 112) = 0;
  *(void *)(v14 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v14 + 128) = 0;
  *(void *)(v10 + 48) = v14;
  specialized Array._endMutation()();
  *(void *)(v2 + 64) = v10;
  *(_WORD *)(v2 + 72) = 0;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F640F0;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 6;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *(_OWORD *)(v16 + 88) = 0u;
  *(void *)(v16 + 104) = 0xA000000000000000;
  *(void *)(v16 + 112) = 0;
  *(void *)(v16 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v16 + 128) = 0;
  *(void *)(inited + 32) = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 4;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 88) = 0u;
  *(void *)(v17 + 104) = 0xA000000000000000;
  *(void *)(v17 + 112) = 0;
  *(void *)(v17 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v17 + 128) = 0;
  *(void *)(inited + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 13;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v18 + 56) = 0u;
  *(_OWORD *)(v18 + 72) = 0u;
  *(_OWORD *)(v18 + 88) = 0u;
  *(void *)(v18 + 104) = 0xA000000000000000;
  *(void *)(v18 + 112) = 0;
  *(void *)(v18 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v18 + 128) = 0;
  *(void *)(inited + 48) = v18;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 5;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_OWORD *)(v19 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v19 + 56) = 0u;
  *(_OWORD *)(v19 + 72) = 0u;
  *(_OWORD *)(v19 + 88) = 0u;
  *(void *)(v19 + 104) = 0xA000000000000000;
  *(void *)(v19 + 112) = 0;
  *(void *)(v19 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v19 + 128) = 0;
  *(void *)(inited + 56) = v19;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = 0u;
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)(v20 + 64) = 0u;
  *(_OWORD *)(v20 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v20 + 96) = 0;
  *(void *)(v20 + 104) = 0x5000000000000000;
  *(void *)(v20 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v20 + 128) = 0;
  *(void *)(v20 + 112) = 0;
  *(void *)(inited + 64) = v20;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 1;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_OWORD *)(v21 + 72) = 0u;
  *(_OWORD *)(v21 + 88) = 0u;
  *(void *)(v21 + 104) = 0x4000000000000000;
  *(void *)(v21 + 112) = 0;
  *(void *)(v21 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v21 + 128) = 0;
  *(void *)(inited + 72) = v21;
  specialized Array._endMutation()();
  if ((inited & 0xC000000000000001) != 0)
  {
    uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v22 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v23 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v24 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v25 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v26 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(void *)(*(void *)(inited + 32) + 128) = *(void *)(inited + 40);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 40) + 128) = *(void *)(inited + 48);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 48) + 128) = *(void *)(inited + 56);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 56) + 128) = *(void *)(inited + 64);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 64) + 128) = *(void *)(inited + 72);
    swift_retain();
    swift_release();
  }
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100F5DFF0;
  *(void *)(v27 + 32) = v16;
  uint64_t v32 = v27;
  specialized Array._endMutation()();
  swift_retain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v32;
  *(_WORD *)(v2 + 88) = 1;
  id v28 = &off_1012D7C38;
  if (!a1) {
    return sub_1001BD4F8(1u, v2, (uint64_t)v28, 0);
  }
  if ([a1 representsIntermediateStop])
  {
    id v28 = &off_1012D7C60;
    return sub_1001BD4F8(1u, v2, (uint64_t)v28, 0);
  }
  id result = [a1 mapItem];
  if (result)
  {
    id v30 = result;
    unsigned int v31 = [result _hasHikeInfo];

    if (v31) {
      id v28 = &off_1012D7C88;
    }
    return sub_1001BD4F8(1u, v2, (uint64_t)v28, 0);
  }
  __break(1u);
  return result;
}

id sub_1002642A4(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = *(void *)(a2 + 16);
  if (!v15) {
    return 0;
  }
  uint64_t v16 = a2 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  while (1)
  {
    uint64_t v4 = (uint64_t *)(v16 + 24 * v3);
    uint64_t v6 = *v4;
    uint64_t v5 = (void *)v4[1];
    if ((unint64_t)*v4 >> 62) {
      break;
    }
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    id v8 = v5;
    if (v7) {
      goto LABEL_6;
    }
LABEL_3:
    ++v3;
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    if (v3 == v15)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  id v14 = v5;
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_3;
  }
LABEL_6:
  uint64_t v9 = 4;
  while (1)
  {
    id result = (v6 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v6 + 8 * v9);
    uint64_t v11 = result;
    uint64_t v12 = v9 - 3;
    if (__OFADD__(v9 - 4, 1)) {
      break;
    }
    unsigned int v13 = [result isEqualToGEOMapItemIdentifier:a1];

    if (v13)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return v5;
    }
    ++v9;
    if (v12 == v7) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

void *sub_100264454(int a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a2 + 32;
  while (1)
  {
    uint64_t v5 = *(void *)(v4 + 24 * v3 + 16);
    if (v5)
    {
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6) {
        break;
      }
    }
LABEL_3:
    if (++v3 == v2) {
      return 0;
    }
  }
  if (*(_DWORD *)(v5 + 32) != a1)
  {
    uint64_t v7 = (int *)(v5 + 36);
    uint64_t v8 = v6 - 1;
    while (v8)
    {
      int v9 = *v7++;
      --v8;
      if (v9 == a1) {
        goto LABEL_10;
      }
    }
    goto LABEL_3;
  }
LABEL_10:
  uint64_t v10 = *(void **)(v4 + 24 * v3 + 8);
  id v11 = v10;
  return v10;
}

id sub_1002644EC()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5F0D0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 402336;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0x1000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 32;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(void *)(v5 + 104) = 0xA000000000000000;
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v5 + 128) = 0;
  *(void *)(v3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v5;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, (uint64_t)&off_1012D7CB0, 0);
}

id sub_1002646A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  if (String.count.getter() <= 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    type metadata accessor for PlaceSummaryUnit();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    *(_OWORD *)(v4 + 32) = 0u;
    *(_OWORD *)(v4 + 48) = 0u;
    *(_OWORD *)(v4 + 64) = 0u;
    *(void *)(v4 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(_OWORD *)(v4 + 88) = xmmword_100F67600;
    *(void *)(v4 + 104) = 0x6000000000000000;
    *(void *)(v4 + 112) = 0;
    *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v4 + 128) = 0;
    sub_1000FF33C(&qword_1015D4170);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100F5CFA0;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
    *(_OWORD *)(v7 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(void *)(v7 + 96) = 0;
    *(void *)(v7 + 104) = 0xA000000000000000;
    *(void *)(v7 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v7 + 128) = 0;
    *(void *)(v7 + 112) = 0;
    *(void *)(v6 + 32) = v7;
    specialized Array._endMutation()();
    *(void *)(v5 + 32) = v6;
    *(_WORD *)(v5 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100F5DFF0;
    *(void *)(v8 + 32) = v4;
    uint64_t v10 = v8;
    specialized Array._endMutation()();
    *(void *)(v5 + 48) = v10;
    *(_WORD *)(v5 + 56) = 0;
    return sub_1001BD4F8(1u, v5, (uint64_t)&off_1012D7CD8, 0);
  }
}

id sub_100264864()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5F5F0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5E000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 14;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 402336;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(void *)(v5 + 104) = 0x1000000000000000;
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v5 + 128) = 0;
  *(void *)(v3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v5;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 1;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(void *)(v6 + 104) = 0x3000000000000000;
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v6 + 128) = 0;
  *(void *)(v3 + 48) = v6;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100F5DFF0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 3;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(void *)(v8 + 112) = 0;
  *(void *)(v8 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v8 + 104) = 0xA000000000000000;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = &off_1012D7D00;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_OWORD *)(v9 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v9 + 96) = 0;
  *(void *)(v9 + 104) = 0x2000000000000000;
  *(void *)(v9 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v9 + 128) = 0;
  *(void *)(v9 + 112) = 0;
  *(void *)(v8 + 128) = v9;
  *(void *)(v7 + 32) = v8;
  specialized Array._endMutation()();
  *(void *)(v0 + 64) = v7;
  *(_WORD *)(v0 + 72) = 0;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5E870;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 6;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  *(_OWORD *)(v11 + 88) = 0u;
  *(void *)(v11 + 104) = 0xA000000000000000;
  *(void *)(v11 + 112) = 0;
  *(void *)(v11 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v11 + 128) = 0;
  *(void *)(inited + 32) = v11;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 13;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 72) = 0u;
  *(_OWORD *)(v12 + 88) = 0u;
  *(void *)(v12 + 104) = 0xA000000000000000;
  *(void *)(v12 + 112) = 0;
  *(void *)(v12 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v12 + 128) = 0;
  *(void *)(inited + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v12;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 5;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 88) = 0u;
  *(void *)(v13 + 104) = 0xA000000000000000;
  *(void *)(v13 + 112) = 0;
  *(void *)(v13 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v13 + 128) = 0;
  *(void *)(inited + 48) = v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 19;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 88) = 0u;
  *(void *)(v14 + 104) = 0xA000000000000000;
  *(void *)(v14 + 112) = 0;
  *(void *)(v14 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v14 + 128) = 0;
  *(void *)(inited + 56) = v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 20;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  *(_OWORD *)(v15 + 88) = 0u;
  *(void *)(v15 + 104) = 0xA000000000000000;
  *(void *)(v15 + 112) = 0;
  *(void *)(v15 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v15 + 128) = 0;
  *(void *)(inited + 64) = v15;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 21;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *(_OWORD *)(v16 + 88) = 0u;
  *(void *)(v16 + 104) = 0xA000000000000000;
  *(void *)(v16 + 112) = 0;
  *(void *)(v16 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v16 + 128) = 0;
  *(void *)(inited + 72) = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 18;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 88) = 0u;
  *(void *)(v17 + 104) = 0xA000000000000000;
  *(void *)(v17 + 112) = 0;
  *(void *)(v17 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v17 + 128) = 0;
  *(void *)(inited + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 1;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v18 + 56) = 0u;
  *(_OWORD *)(v18 + 72) = 0u;
  *(_OWORD *)(v18 + 88) = 0u;
  *(void *)(v18 + 104) = 0x4000000000000000;
  *(void *)(v18 + 112) = 0;
  *(void *)(v18 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v18 + 128) = 0;
  *(void *)(inited + 88) = v18;
  specialized Array._endMutation()();
  if ((inited & 0xC000000000000001) != 0)
  {
    uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v19 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v20 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v21 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v22 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v23 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v24 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    *(void *)(v25 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_release();
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(void *)(*(void *)(inited + 32) + 128) = *(void *)(inited + 40);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 40) + 128) = *(void *)(inited + 48);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 48) + 128) = *(void *)(inited + 56);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 56) + 128) = *(void *)(inited + 64);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 64) + 128) = *(void *)(inited + 72);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 72) + 128) = *(void *)(inited + 80);
    swift_retain();
    swift_release();
    *(void *)(*(void *)(inited + 80) + 128) = *(void *)(inited + 88);
    swift_retain();
    swift_release();
  }
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100F5DFF0;
  *(void *)(v26 + 32) = v11;
  uint64_t v28 = v26;
  specialized Array._endMutation()();
  swift_retain();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v28;
  *(_WORD *)(v0 + 88) = 1;
  return sub_1001BD4F8(1u, v0, (uint64_t)&off_1012D7D28, 0);
}

char *sub_100264F94(id a1, void *a2, char a3)
{
  if (!a2)
  {
    uint64_t v25 = (char *)[a1 autocompletePerson];
    if (v25)
    {
      uint64_t v26 = v25;
      if (*(void *)&v25[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact])
      {
        id v27 = [a1 autocompletePerson];
        if (v27)
        {
          uint64_t v28 = v27;
          NSString v29 = sub_10032554C();

          if ([a1 locationType] == 4)
          {
            uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v32 = sub_1002646A4(v30, v31);

            swift_bridgeObjectRelease();
            return (char *)v32;
          }
        }
        id v33 = sub_1002644EC();

        return (char *)v33;
      }
    }
    if (a3)
    {
      return (char *)sub_100264864();
    }
    else
    {
      return (char *)sub_100263B64(a1);
    }
  }
  if (*((unsigned char *)a2 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_useCase) != 2)
  {
    uint64_t v14 = a2;
    id v33 = sub_100263B64(a1);
LABEL_26:

    return (char *)v33;
  }
  uint64_t v4 = a2;
  id v5 = [a1 mapItem];
  if (!v5
    || (uint64_t v6 = v5, v7 = [v5 _geoMapItem], v6, !v7)
    || (id v8 = [v7 _identifier], swift_unknownObjectRelease(), !v8)
    || (uint64_t v9 = sub_1002642A4((uint64_t)v8, *(void *)(v4 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs)),
        v8,
        !v9))
  {
    id v10 = [a1 mapItem];
    if (!v10
      || (uint64_t v11 = v10, v12 = [v10 _geoMapItem], v11, !v12)
      || (int v13 = [v12 _placeType],
          swift_unknownObjectRelease(),
          (uint64_t v9 = sub_100264454(v13, *(void *)(v4 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs))) == 0))
    {
      id v33 = sub_100263B64(a1);

      return (char *)v33;
    }
  }
  uint64_t v14 = v9;
  id v15 = [self currentDevice];
  id v16 = [v15 userInterfaceIdiom];

  unint64_t v17 = *(void *)&v14[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries];
  if (v17 >> 62)
  {
LABEL_55:
    swift_bridgeObjectRetain();
    id result = (char *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v18 = result;
    if (result) {
      goto LABEL_12;
    }
    goto LABEL_56;
  }
  uint64_t v18 = *(char **)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (char *)swift_bridgeObjectRetain();
  if (!v18)
  {
LABEL_56:
    swift_bridgeObjectRelease();
LABEL_57:
    id v33 = sub_100263B64(a1);

    goto LABEL_26;
  }
LABEL_12:
  id v39 = (void *)v4;
  if ((v17 & 0xC000000000000001) != 0)
  {
    uint64_t v20 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v20 = (unsigned __int8 *)*(id *)(v17 + 32);
  }
  uint64_t v21 = v20;
  id v38 = v14;
  if (v16 == (id)5) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 1;
  }
  uint64_t v22 = v20[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType];
  if (v4 == v22)
  {
    uint64_t v23 = 0;
LABEL_50:
    swift_bridgeObjectRelease();

    return (char *)v21;
  }
  else
  {
    id v34 = 0;
    id v16 = 0;
    uint64_t v14 = v18 - 1;
    id v35 = v20;
    while (1)
    {
      if (v22 != 3 || v16)
      {

        id v35 = v16;
      }
      if (v14 == v34) {
        break;
      }
      id v36 = v34 + 1;
      if ((v17 & 0xC000000000000001) != 0)
      {
        int64_t v37 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((unint64_t)v36 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_54;
        }
        int64_t v37 = (unsigned __int8 *)*(id *)(v17 + 8 * (void)v34 + 40);
      }
      uint64_t v21 = v37;
      if (__OFADD__(v36, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      uint64_t v22 = v37[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType];
      ++v34;
      uint64_t v23 = v35;
      id v16 = v35;
      id v35 = v37;
      if (v4 == v22) {
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v38;
    uint64_t v4 = (uint64_t)v39;
    if (!v35) {
      goto LABEL_57;
    }

    return (char *)v35;
  }
}

id sub_100265464()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 8;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 9;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 104) = 0xA000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 3;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(void *)(v5 + 104) = 0x3000000000000000;
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v5 + 128) = 0;
  *(void *)(v4 + 128) = v5;
  *(void *)(v3 + 32) = v4;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, 0, (uint64_t)&off_1012D7D78);
}

id sub_100265628()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 8;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 12;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, 0, (uint64_t)&off_1012D7DA0);
}

id sub_1002657A8()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 8;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5F0D0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 10;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 11;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(void *)(v5 + 104) = 0xA000000000000000;
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v5 + 128) = 0;
  *(void *)(v3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v5;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, 0, (uint64_t)&off_1012D7DC8);
}

id sub_100265964(uint64_t a1)
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 8;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  specialized Array._endMutation()();
  *(void *)(v2 + 32) = v3;
  *(_WORD *)(v2 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F5DFF0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 9;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(void *)(v6 + 104) = 0xA000000000000000;
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v6 + 128) = 0;
  *(void *)(v5 + 32) = v6;
  specialized Array._endMutation()();
  *(void *)(v2 + 48) = v5;
  *(_WORD *)(v2 + 56) = 0;

  return sub_1001BD4F8(1u, v2, 0, a1);
}

id sub_100265AE4(void *a1)
{
  if (!a1) {
    goto LABEL_13;
  }
  id v1 = a1;
  id v2 = [v1 directionIntent];

  if (!v2)
  {
    id v4 = [v1 clientResolved];

    if (v4)
    {
      id v3 = sub_100265464();
      goto LABEL_10;
    }
    id v5 = [v1 publisherResult];

    if (v5)
    {
      id v3 = sub_100265628();
      goto LABEL_10;
    }
    id v6 = [v1 collectionResult];

    if (v6)
    {
      id v3 = sub_1002657A8();
      goto LABEL_10;
    }
    id v8 = [v1 mapItem];

    if (!v8)
    {
      id v3 = sub_100265964(0);
      goto LABEL_10;
    }

LABEL_13:
    sub_1000FF33C(&qword_1015D4170);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100F5CF80;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100F5DFF0;
    type metadata accessor for PlaceSummaryUnit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 8;
    *(_OWORD *)(v11 + 24) = 0u;
    *(_OWORD *)(v11 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v11 + 56) = 0u;
    *(_OWORD *)(v11 + 72) = 0u;
    *(_OWORD *)(v11 + 88) = 0u;
    *(void *)(v11 + 112) = 0;
    *(void *)(v11 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v11 + 104) = 0xA000000000000000;
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = 0u;
    *(_OWORD *)(v12 + 32) = 0u;
    *(_OWORD *)(v12 + 48) = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
    *(_OWORD *)(v12 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(void *)(v12 + 96) = 0;
    *(void *)(v12 + 104) = 0xA000000000000000;
    *(void *)(v12 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v12 + 128) = 0;
    *(void *)(v12 + 112) = 0;
    *(void *)(v11 + 128) = v12;
    *(void *)(v10 + 32) = v11;
    specialized Array._endMutation()();
    *(void *)(v9 + 32) = v10;
    *(_WORD *)(v9 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100F5E820;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 3;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v14 + 56) = 0u;
    *(_OWORD *)(v14 + 72) = 0u;
    *(_OWORD *)(v14 + 88) = 0u;
    *(void *)(v14 + 104) = 0xA000000000000000;
    *(void *)(v14 + 112) = 0;
    *(void *)(v14 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v14 + 128) = 0;
    *(void *)(v13 + 32) = v14;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = 402336;
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v15 + 56) = 0u;
    *(_OWORD *)(v15 + 72) = 0u;
    *(_OWORD *)(v15 + 88) = 0u;
    *(void *)(v15 + 104) = 0x1000000000000000;
    *(void *)(v15 + 112) = 0;
    *(void *)(v15 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v15 + 128) = 0;
    *(void *)(v13 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v15;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = 7;
    *(_OWORD *)(v16 + 24) = 0u;
    *(_OWORD *)(v16 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v16 + 56) = 0u;
    *(_OWORD *)(v16 + 72) = 0u;
    *(_OWORD *)(v16 + 88) = 0u;
    *(void *)(v16 + 104) = 0xA000000000000000;
    *(void *)(v16 + 112) = 0;
    *(void *)(v16 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v16 + 128) = 0;
    *(void *)(v13 + 48) = v16;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = 2;
    *(_OWORD *)(v17 + 24) = 0u;
    *(_OWORD *)(v17 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v17 + 56) = 0u;
    *(_OWORD *)(v17 + 72) = 0u;
    *(_OWORD *)(v17 + 88) = 0u;
    *(void *)(v17 + 104) = 0x3000000000000000;
    *(void *)(v17 + 112) = 0;
    *(void *)(v17 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v17 + 128) = 0;
    *(void *)(v13 + 56) = v17;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 1;
    *(void *)(v18 + 24) = &off_1012D7DF0;
    *(_OWORD *)(v18 + 32) = 0u;
    *(_OWORD *)(v18 + 48) = 0u;
    *(_OWORD *)(v18 + 64) = 0u;
    *(_OWORD *)(v18 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(void *)(v18 + 96) = 0;
    *(void *)(v18 + 104) = 0x2000000000000000;
    *(void *)(v18 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v18 + 128) = 0;
    *(void *)(v18 + 112) = 0;
    *(void *)(v13 + 64) = v18;
    specialized Array._endMutation()();
    *(void *)(v9 + 48) = v13;
    *(_WORD *)(v9 + 56) = 0;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100F5E000;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = 4;
    *(_OWORD *)(v20 + 24) = 0u;
    *(_OWORD *)(v20 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(v20 + 56) = 0u;
    *(_OWORD *)(v20 + 72) = 0u;
    *(_OWORD *)(v20 + 88) = 0u;
    *(void *)(v20 + 104) = 0xA000000000000000;
    *(void *)(v20 + 112) = 0;
    *(void *)(v20 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v20 + 128) = 0;
    *(void *)(inited + 32) = v20;
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = 0u;
    *(_OWORD *)(v21 + 32) = 0u;
    *(_OWORD *)(v21 + 48) = 0u;
    *(_OWORD *)(v21 + 64) = 0u;
    *(_OWORD *)(v21 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(void *)(v21 + 96) = 0;
    *(void *)(v21 + 104) = 0x5000000000000000;
    *(void *)(v21 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v21 + 128) = 0;
    *(void *)(v21 + 112) = 0;
    *(void *)(inited + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v21;
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = 0u;
    *(_OWORD *)(v22 + 32) = 0u;
    *(_OWORD *)(v22 + 48) = 0u;
    *(_OWORD *)(v22 + 64) = 0u;
    *(_OWORD *)(v22 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(void *)(v22 + 96) = 0;
    *(void *)(v22 + 104) = 0x8000000000000000;
    *(void *)(v22 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    *(void *)(v22 + 128) = 0;
    *(void *)(v22 + 112) = 0;
    *(void *)(inited + 48) = v22;
    specialized Array._endMutation()();
    *(void *)(v20 + 128) = v21;
    swift_retain();
    swift_release();
    *(void *)(v21 + 128) = v22;
    swift_retain();
    swift_release();
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100F5DFF0;
    *(void *)(v23 + 32) = v20;
    uint64_t v25 = v23;
    specialized Array._endMutation()();
    swift_retain();
    swift_bridgeObjectRelease();
    *(void *)(v9 + 64) = v25;
    *(_WORD *)(v9 + 72) = 1;
    return sub_1001BD4F8(1u, v9, 0, (uint64_t)&off_1012D7E18);
  }
  id v3 = sub_100265964((uint64_t)&off_1012D7D50);
LABEL_10:
  id v7 = v3;

  return v7;
}

char *sub_100265FEC(void *a1, void *a2)
{
  if (!a2)
  {
    return (char *)sub_100265AE4(a1);
  }
  if (*((unsigned char *)a2 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_useCase) != 1)
  {
    id v17 = a2;
    id v18 = sub_100265AE4(a1);

    return (char *)v18;
  }
  id v3 = a2;
  id v4 = sub_1001EC9A4();
  if (!v4)
  {
    id v19 = sub_100265AE4(a1);

    return (char *)v19;
  }
  uint64_t v5 = (uint64_t)v4;
  uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs];
  swift_bridgeObjectRetain();
  id v7 = (char *)sub_1002642A4(v5, v6);
  swift_bridgeObjectRelease();
  if (!v7)
  {
    id v18 = sub_100265AE4(a1);

LABEL_40:
    return (char *)v18;
  }
  id v8 = [self currentDevice];
  uint64_t v9 = (char *)[v8 userInterfaceIdiom];

  unint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries];
  if (v10 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    id result = (char *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = result;
    if (result) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
  uint64_t v11 = *(char **)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (char *)swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_38:
    swift_bridgeObjectRelease();
LABEL_39:
    id v18 = sub_100265AE4(a1);

    goto LABEL_40;
  }
LABEL_7:
  uint64_t v25 = v7;
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = (char *)*(id *)(v10 + 32);
  }
  id v7 = v13;
  uint64_t v23 = v3;
  uint64_t v24 = (void *)v5;
  if (v9 == (char *)5) {
    uint64_t v14 = 2;
  }
  else {
    uint64_t v14 = 1;
  }
  uint64_t v15 = v13[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType];
  if (v14 == v15)
  {
    uint64_t v16 = 0;
LABEL_32:
    swift_bridgeObjectRelease();

    return v7;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v9 = 0;
    id v3 = v11 - 1;
    uint64_t v20 = v13;
    while (1)
    {
      if (v15 != 3 || v9)
      {

        uint64_t v20 = v9;
      }
      if (v3 == (char *)v5) {
        break;
      }
      unint64_t v21 = v5 + 1;
      if ((v10 & 0xC000000000000001) != 0)
      {
        uint64_t v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v21 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_36;
        }
        uint64_t v22 = (char *)*(id *)(v10 + 8 * v5 + 40);
      }
      id v7 = v22;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v15 = v22[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType];
      ++v5;
      uint64_t v16 = v20;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
      if (v14 == v15) {
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
    id v3 = v23;
    uint64_t v5 = (uint64_t)v24;
    id v7 = v25;
    if (!v20) {
      goto LABEL_39;
    }

    return v20;
  }
}

id sub_100266324()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5F0D0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 7;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 26;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(void *)(v5 + 104) = 0xA000000000000000;
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v5 + 128) = 0;
  *(void *)(v3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v5;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, 0, (uint64_t)&off_1012D7E68);
}

id sub_1002664D4()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5E000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 402336;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0x1000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 7;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(void *)(v5 + 104) = 0xA000000000000000;
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v5 + 128) = 0;
  *(void *)(v3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v5;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 27;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(void *)(v6 + 104) = 0xA000000000000000;
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v6 + 128) = 0;
  *(void *)(v3 + 48) = v6;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, 0, (uint64_t)&off_1012D7E90);
}

id sub_1002666C8()
{
  return sub_1002666E0((uint64_t)&off_1012D7EB8);
}

id sub_1002666D4()
{
  return sub_1002666E0((uint64_t)&off_1012D7EE0);
}

id sub_1002666E0(uint64_t a1)
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v4 + 96) = 0;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v4 + 112) = 0;
  *(void *)(v3 + 32) = v4;
  specialized Array._endMutation()();
  *(void *)(v2 + 32) = v3;
  *(_WORD *)(v2 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F5DFF0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 2;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(void *)(v6 + 104) = 0x3000000000000000;
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v6 + 128) = 0;
  *(void *)(v5 + 32) = v6;
  specialized Array._endMutation()();
  *(void *)(v2 + 48) = v5;
  *(_WORD *)(v2 + 56) = 0;

  return sub_1001BD4F8(1u, v2, 0, a1);
}

id sub_100266858()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 28;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, 0, (uint64_t)&off_1012D7F08);
}

id sub_1002669CC()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 29;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 30;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, 0, (uint64_t)&off_1012D7F30);
}

id sub_100266B4C()
{
  sub_1000FF33C(&qword_1015D4170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  type metadata accessor for PlaceSummaryUnit();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0xA000000000000000;
  *(void *)(v2 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v1 + 32) = v2;
  specialized Array._endMutation()();
  *(void *)(v0 + 32) = v1;
  *(_WORD *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 31;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(void *)(v4 + 104) = 0xA000000000000000;
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v3 + 32) = v4;
  specialized Array._endMutation()();
  *(void *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = 0;

  return sub_1001BD4F8(1u, v0, 0, (uint64_t)&off_1012D7F58);
}

id sub_100266CC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v4 = *(v2 - 1);
      uint64_t v3 = *v2;
      swift_bridgeObjectRetain_n();
      if (String.count.getter() <= 0)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        type metadata accessor for PlaceSummaryUnit();
        uint64_t v5 = swift_allocObject();
        *(void *)(v5 + 16) = v4;
        *(void *)(v5 + 24) = v3;
        *(_OWORD *)(v5 + 32) = 0u;
        *(_OWORD *)(v5 + 48) = 0u;
        *(_OWORD *)(v5 + 64) = 0u;
        *(void *)(v5 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
        *(_OWORD *)(v5 + 88) = xmmword_100F67600;
        *(void *)(v5 + 104) = 0x6000000000000000;
        *(void *)(v5 + 112) = 0;
        *(void *)(v5 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
        *(void *)(v5 + 128) = 0;
        swift_bridgeObjectRelease();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v2 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = (uint64_t)result;
    if (result) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t v9 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  uint64_t v6 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_24;
  }
LABEL_12:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
    {
      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage[v8 + 4];
      swift_retain();
    }
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
    *(void *)(v11 + 32) = v10;
    uint64_t v15 = v11;
    specialized Array._endMutation()();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1001CF41C(0, v9[2] + 1, 1, v9);
    }
    unint64_t v13 = v9[2];
    unint64_t v12 = v9[3];
    if (v13 >= v12 >> 1) {
      uint64_t v9 = sub_1001CF41C((void *)(v12 > 1), v13 + 1, 1, v9);
    }
    ++v8;
    _OWORD v9[2] = v13 + 1;
    uint64_t v14 = &v9[2 * v13];
    void v14[4] = v15;
    *((_WORD *)v14 + 2sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  }
  while (v6 != v8);
LABEL_25:
  swift_bridgeObjectRelease_n();
  if (v9[2])
  {
    return sub_1001BD4F8(1u, (uint64_t)v9, 0, (uint64_t)&off_1012D7F80);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

void sub_100267044()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation);
    if (v2)
    {
      uint64_t v3 = qword_1015CBDE0;
      id v4 = v2;
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_1000F2248(v5, (uint64_t)qword_1016118B8);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Updating weather based on temperature unit change", v8, 2u);
        swift_slowDealloc();
      }

      sub_100267724(v4);
    }
    else
    {
      id v4 = (id)Strong;
    }
  }
}

id sub_100267188()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_currentLocaleBlockObserver];
  if (v2)
  {
    uint64_t v3 = self;
    swift_unknownObjectRetain();
    id v4 = [v3 defaultCenter];
    [v4 removeObserver:v2];

    swift_unknownObjectRelease();
  }
  uint64_t v5 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer;
  if (*(void *)&v1[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    *(void *)&v1[v5] = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  v7.id receiver = v1;
  v7.Class super_class = (Class)type metadata accessor for WeatherConditionsDataProvider();
  return [super dealloc];
}

void sub_1002673A8(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled) != (a1 & 1))
  {
    uint64_t v2 = v1;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled))
    {
      if (qword_1015CBDE0 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_1000F2248(v3, (uint64_t)qword_1016118B8);
      id v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Enabling weather conditions data provider", v6, 2u);
        swift_slowDealloc();
      }

      sub_100061F88();
    }
    else
    {
      if (qword_1015CBDE0 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_1000F2248(v7, (uint64_t)qword_1016118B8);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Disabling weather conditions data provider", v10, 2u);
        swift_slowDealloc();
      }

      uint64_t v11 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer;
      if (*(void *)(v2 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        OS_dispatch_source.cancel()();
        *(void *)(v2 + v11) = 0;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_1002675E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation);
    if (v2)
    {
      uint64_t v3 = qword_1015CBDE0;
      id v4 = v2;
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_1000F2248(v5, (uint64_t)qword_1016118B8);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Scheduled weather conditions refresh", v8, 2u);
        swift_slowDealloc();
      }

      sub_100267724(v4);
    }
    else
    {
      id v4 = (id)Strong;
    }
  }
}

uint64_t sub_100267724(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    id v13 = [self sharedManager];
    unsigned int v14 = [v13 shouldShowWeatherConditions];

    if (v14 && v2[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled] == 1)
    {
      BOOL v15 = !-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(*(void **)&v2[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_traitEnvironment]);
      uint64_t v16 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = 0;
      *(void *)(v17 + 24) = 0;
      *(void *)(v17 + 32) = v2;
      *(void *)(v17 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = a1;
      *(unsigned char *)(v17 + 48) = v15;
      id v18 = v2;
      id v19 = a1;
      sub_100042AF4((uint64_t)v6, (uint64_t)&unk_1015D76A0, v17);
      return swift_release();
    }
    else
    {
      return sub_100039174(0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002679A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 224) = a6;
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = a5;
  uint64_t v7 = type metadata accessor for Date();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(void *)(v7 - 8);
  *(void *)(v6 + 48) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for WeatherMetadata();
  *(void *)(v6 + 56) = v8;
  *(void *)(v6 + 64) = *(void *)(v8 - 8);
  *(void *)(v6 + 72) = swift_task_alloc();
  uint64_t v9 = sub_1000FF33C(&qword_1015D76A8);
  *(void *)(v6 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v9;
  *(void *)(v6 + 88) = *(void *)(v9 - 8);
  *(void *)(v6 + 96) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for WeatherCondition();
  *(void *)(v6 + 104) = v10;
  *(void *)(v6 + 112) = *(void *)(v10 - 8);
  *(void *)(v6 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for WeatherConditionIcon();
  *(void *)(v6 + 128) = v11;
  *(void *)(v6 + 136) = *(void *)(v11 - 8);
  *(void *)(v6 + 144) = swift_task_alloc();
  uint64_t v12 = sub_1000FF33C((uint64_t *)&unk_1015D76B0);
  *(void *)(v6 + 152) = v12;
  *(void *)(v6 + 16sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(void *)(v12 - 8);
  *(void *)(v6 + 168) = swift_task_alloc();
  uint64_t v13 = type metadata accessor for CurrentWeather();
  *(void *)(v6 + 176) = v13;
  *(void *)(v6 + 184) = *(void *)(v13 - 8);
  *(void *)(v6 + 192) = swift_task_alloc();
  return _swift_task_switch(sub_100267C94, 0, 0);
}

uint64_t sub_100267C94()
{
  if (qword_1015CBDE0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[25] = sub_1000F2248(v1, (uint64_t)qword_1016118B8);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Fetching weather conditions", v4, 2u);
    swift_slowDealloc();
  }

  static WeatherQuery.current.getter();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100267E14;
  uint64_t v6 = v0[24];
  uint64_t v7 = v0[21];
  uint64_t v8 = v0[22];
  uint64_t v9 = v0[3];
  return WeatherService.weather<A>(for:including:)(v6, v9, v7, v8);
}

uint64_t sub_100267E14()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 168);
  uint64_t v3 = *(void *)(*(void *)v1 + 160);
  uint64_t v4 = *(void *)(*(void *)v1 + 152);
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_1002683D8;
  }
  else {
    uint64_t v5 = sub_100267F84;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100267F84()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v35 = v0[11];
  uint64_t v29 = v0[8];
  uint64_t v30 = v0[7];
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[6];
  uint64_t v33 = v0[5];
  uint64_t v34 = v0[4];
  uint64_t v31 = (void *)v0[3];
  CurrentWeather.condition.getter();
  CurrentWeather.isDaylight.getter();
  WeatherCondition.conditionIcon(isDaylight:isFilled:forLightBackground:)();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v26(v2, v4);
  CurrentWeather.temperature.getter();
  Measurement<>.formattedString()();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v6(v3, v5);
  WeatherConditionIcon.name.getter();
  WeatherConditionIcon.palette.getter();
  id v32 = v31;
  CurrentWeather.metadata.getter();
  WeatherMetadata.expirationDate.getter();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v30);
  CurrentWeather.condition.getter();
  WeatherCondition.accessibilityDescription.getter();
  v26(v2, v4);
  CurrentWeather.temperature.getter();
  Measurement<>.formattedDigitsOnlyString()();
  v6(v3, v5);
  id v36 = objc_allocWithZone((Class)WeatherConditions);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100100830(0, (unint64_t *)&qword_1015CEFF0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v10 = Date._bridgeToObjectiveC()().super.isa;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v36 initWithTemperature:v7 name:v8 palette:isa forLocation:v32 withExpirationDate:v10 conditionDescription:v11 temperatureDescription:v12];

  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v34);
  unsigned int v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Successfully fetched Weather conditions", v16, 2u);
    swift_slowDealloc();
  }
  uint64_t v18 = v0[23];
  uint64_t v17 = v0[24];
  uint64_t v19 = v0[22];
  uint64_t v21 = v0[17];
  uint64_t v20 = v0[18];
  uint64_t v22 = v0[16];

  id v23 = v13;
  sub_100039174(v13);

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1002683D8()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to retrieve weather conditions", v3, 2u);
    swift_slowDealloc();
  }

  sub_100039174(0);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100268548()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100268588()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1002685D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10005056C;
  return sub_1002679A0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100268698()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002686D0()
{
}

uint64_t sub_1002686D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100268710()
{
}

unint64_t sub_100268724()
{
  unint64_t result = qword_1015D76D0;
  if (!qword_1015D76D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D76D0);
  }
  return result;
}

uint64_t sub_100268778()
{
  return sub_1001010F8(&qword_1015D76D8, &qword_1015D76E0);
}

uint64_t sub_1002687B4()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_1016118D0);
  sub_1000F2248(v10, (uint64_t)qword_1016118D0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_100268A94()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_1016118E8);
  sub_1000F2248(v0, (uint64_t)qword_1016118E8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100268AF8()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611900);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611900);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100268BB0()
{
  uint64_t result = swift_getKeyPath();
  qword_101611918 = result;
  return result;
}

uint64_t sub_100268BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_100268BFC, 0, 0);
}

uint64_t sub_100268BFC()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBE00 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611918;
  *(void *)(v0 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = qword_101611918;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D77E0, &qword_1015D77E8);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_100268D58;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_100268D58()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_100268EAC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100268EAC()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611918;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_100268F88()
{
  if (qword_1015CBE00 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100268FE8()
{
  unint64_t result = qword_1015D76E8;
  if (!qword_1015D76E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D76E8);
  }
  return result;
}

unint64_t sub_100269040()
{
  unint64_t result = qword_1015D76F0;
  if (!qword_1015D76F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D76F0);
  }
  return result;
}

uint64_t sub_100269094()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002690C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100269118@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBDF0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1016118E8, a1);
}

uint64_t sub_100269150@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBDF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611900);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_1002691CC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_100268BFC, 0, 0);
}

uint64_t sub_100269280@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10026A104();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1002692A8()
{
  return 0xD000000000000024;
}

unint64_t sub_1002692C8()
{
  unint64_t result = qword_1015D7700;
  if (!qword_1015D7700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7700);
  }
  return result;
}

unint64_t sub_100269320()
{
  unint64_t result = qword_1015D7708;
  if (!qword_1015D7708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7708);
  }
  return result;
}

unint64_t sub_100269378()
{
  unint64_t result = qword_1015D7710;
  if (!qword_1015D7710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7710);
  }
  return result;
}

unint64_t sub_1002693D0()
{
  unint64_t result = qword_1015D7718;
  if (!qword_1015D7718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7718);
  }
  return result;
}

unint64_t sub_100269428()
{
  unint64_t result = qword_1015D7720;
  if (!qword_1015D7720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7720);
  }
  return result;
}

unint64_t sub_100269480()
{
  unint64_t result = qword_1015D7728;
  if (!qword_1015D7728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7728);
  }
  return result;
}

uint64_t sub_1002694D4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1002694F4, 0, 0);
}

uint64_t sub_1002694F4()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)DrivePreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 avoidHighways];
  unsigned char *v1 = (_BYTE)v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1002695C0(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1002695E4, 0, 0);
}

uint64_t sub_1002695E4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)DrivePreferences) initWithDefaults:v2];

  [v3 setAvoidHighways:v1];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_1002696E8()
{
  unint64_t result = qword_1015D7730;
  if (!qword_1015D7730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7730);
  }
  return result;
}

unint64_t sub_100269740()
{
  unint64_t result = qword_1015D7738;
  if (!qword_1015D7738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7738);
  }
  return result;
}

unint64_t sub_100269798()
{
  unint64_t result = qword_1015D7740;
  if (!qword_1015D7740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7740);
  }
  return result;
}

unint64_t sub_1002697F0()
{
  unint64_t result = qword_1015D7748;
  if (!qword_1015D7748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7748);
  }
  return result;
}

uint64_t sub_100269844@<X0>(uint64_t *a1@<X8>)
{
  sub_100269A90();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100269884@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBDE8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1016118D0, a1);
}

uint64_t sub_1002698BC()
{
  return sub_1001010F8(&qword_1015D7750, &qword_1015D7758);
}

uint64_t sub_1002698F8(uint64_t a1)
{
  unint64_t v2 = sub_1002692C8();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100269948()
{
  unint64_t result = qword_1015D7760;
  if (!qword_1015D7760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7760);
  }
  return result;
}

uint64_t sub_10026999C(uint64_t a1)
{
  unint64_t v2 = sub_100269A90();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1002699E8(uint64_t a1)
{
  unint64_t v2 = sub_1002697F0();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100269A38()
{
  unint64_t result = qword_1015D7768;
  if (!qword_1015D7768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7768);
  }
  return result;
}

unint64_t sub_100269A90()
{
  unint64_t result = qword_1015D7770[0];
  if (!qword_1015D7770[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D7770);
  }
  return result;
}

uint64_t sub_100269AE4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100269B74, 0, 0);
}

uint64_t sub_100269B74()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D76E0);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D77E0, &qword_1015D77E8);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100269C8C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100269320();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100269D40()
{
  unint64_t result = qword_1015D7788;
  if (!qword_1015D7788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7788);
  }
  return result;
}

unint64_t sub_100269D98()
{
  unint64_t result = qword_1015D7790[0];
  if (!qword_1015D7790[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D7790);
  }
  return result;
}

uint64_t sub_100269DEC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100269320();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100269EA0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100269320();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100269F54()
{
  unint64_t result = qword_1015D77A8;
  if (!qword_1015D77A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D77A8);
  }
  return result;
}

unint64_t sub_100269FAC()
{
  unint64_t result = qword_1015D77B0;
  if (!qword_1015D77B0)
  {
    sub_10010118C(qword_1015D77B8);
    sub_100269798();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D77B0);
  }
  return result;
}

uint64_t sub_10026A020(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100269480();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidHighwaysQuery()
{
  return &type metadata for AvoidHighwaysQuery;
}

ValueMetadata *type metadata accessor for AvoidHighwaysEntity.UpdateIntent_value()
{
  return &type metadata for AvoidHighwaysEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidHighwaysEntity()
{
  return &type metadata for AvoidHighwaysEntity;
}

uint64_t sub_10026A104()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D77F0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002692C8();
  uint64_t v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_10026A544@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10026A550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for ClientOrigin();
  v4[3] = v5;
  long long v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  void v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_10026A63C, 0, 0);
}

uint64_t sub_10026A63C()
{
  uint64_t v1 = v0[2];
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for ClientOrigin.other(_:), v0[3]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  *(void *)(v1 + OBJC_IVAR____TtC4Maps19SearchFindMySession_session) = Session.init(_:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

id sub_10026A84C()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SearchFindMySession();
  return [super dealloc];
}

uint64_t type metadata accessor for SearchFindMySession()
{
  return self;
}

uint64_t sub_10026A8B4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10026A8F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10005056C;
  return sub_10026A550(a1, v4, v5, v6);
}

unint64_t sub_10026A9AC()
{
  unint64_t result = qword_1015D7840;
  if (!qword_1015D7840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7840);
  }
  return result;
}

uint64_t sub_10026AA00()
{
  return sub_1001010F8(&qword_1015D7848, &qword_1015D7850);
}

uint64_t sub_10026AA3C()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611920);
  sub_1000F2248(v10, (uint64_t)qword_101611920);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10026AD14()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611938);
  sub_1000F2248(v0, (uint64_t)qword_101611938);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10026AD78()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611950);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611950);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10026AE30()
{
  uint64_t result = swift_getKeyPath();
  qword_101611968 = result;
  return result;
}

uint64_t sub_10026AE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10026AE7C, 0, 0);
}

uint64_t sub_10026AE7C()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[2];
  v0[3] = v1;
  v0[9] = v1;
  IntentParameter.wrappedValue.getter();
  if (qword_1015CBE20 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611968;
  v0[10] = qword_101611968;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[11] = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D7960, &qword_1015D7968);
  v0[12] = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_10026AFD0;
  return AppEntity._setValue<A, B, C>(_:for:)((char *)v0 + 145, v2, &type metadata for TransportType, v4);
}

uint64_t sub_10026AFD0()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_10026B124;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10026B124()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611968;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10026B200;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10026B200()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188E10;
  }
  else {
    uint64_t v2 = sub_10026B354;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10026B354()
{
  *(unsigned char *)(v0 + 146) = *(unsigned char *)(v0 + 144);
  sub_1002482C0();
  static IntentResult.result<A>(value:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10026B3DC()
{
  if (qword_1015CBE20 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10026B43C()
{
  unint64_t result = qword_1015D7858;
  if (!qword_1015D7858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7858);
  }
  return result;
}

unint64_t sub_10026B494()
{
  unint64_t result = qword_1015D7860;
  if (!qword_1015D7860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7860);
  }
  return result;
}

uint64_t sub_10026B4E8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10026B51C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10026B56C@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBE10, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611938, a1);
}

uint64_t sub_10026B5A4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBE18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611950);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_10026B620(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10026AE7C, 0, 0);
}

uint64_t sub_10026B6D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10026C50C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10026B6FC()
{
  return 0xD00000000000002FLL;
}

unint64_t sub_10026B71C()
{
  unint64_t result = qword_1015D7870;
  if (!qword_1015D7870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7870);
  }
  return result;
}

unint64_t sub_10026B774()
{
  unint64_t result = qword_1015D7878;
  if (!qword_1015D7878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7878);
  }
  return result;
}

unint64_t sub_10026B7CC()
{
  unint64_t result = qword_1015D7880;
  if (!qword_1015D7880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7880);
  }
  return result;
}

unint64_t sub_10026B824()
{
  unint64_t result = qword_1015D7888;
  if (!qword_1015D7888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7888);
  }
  return result;
}

unint64_t sub_10026B87C()
{
  unint64_t result = qword_1015D7890;
  if (!qword_1015D7890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7890);
  }
  return result;
}

unint64_t sub_10026B8D4()
{
  unint64_t result = qword_1015D7898;
  if (!qword_1015D7898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7898);
  }
  return result;
}

uint64_t sub_10026B928(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10026B948, 0, 0);
}

uint64_t sub_10026B948()
{
  uint64_t v1 = GEOGetUserTransportTypePreference();
  char v2 = 2 * (v1 == 2);
  if (v1 == 4) {
    char v2 = 3;
  }
  if (v1 == 1) {
    char v3 = 1;
  }
  else {
    char v3 = v2;
  }
  if (!v1) {
    char v3 = 0;
  }
  **(unsigned char **)(v0 + 16) = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10026B9DC(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10026BA00, 0, 0);
}

uint64_t sub_10026BA00()
{
  sub_1002486C4(*(unsigned char *)(v0 + 16));
  GEOConfigSetSyncInteger();
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_10026BAB0()
{
  unint64_t result = qword_1015D78A0;
  if (!qword_1015D78A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D78A0);
  }
  return result;
}

unint64_t sub_10026BB08()
{
  unint64_t result = qword_1015D78A8;
  if (!qword_1015D78A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D78A8);
  }
  return result;
}

unint64_t sub_10026BB60()
{
  unint64_t result = qword_1015D78B0;
  if (!qword_1015D78B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D78B0);
  }
  return result;
}

unint64_t sub_10026BBB8()
{
  unint64_t result = qword_1015D78B8;
  if (!qword_1015D78B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D78B8);
  }
  return result;
}

uint64_t sub_10026BC0C@<X0>(uint64_t *a1@<X8>)
{
  sub_10026BE58();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10026BC4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBE08, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611920, a1);
}

uint64_t sub_10026BC84()
{
  return sub_1001010F8(&qword_1015D78C0, &qword_1015D78C8);
}

uint64_t sub_10026BCC0(uint64_t a1)
{
  unint64_t v2 = sub_10026B71C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10026BD10()
{
  unint64_t result = qword_1015D78D0;
  if (!qword_1015D78D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D78D0);
  }
  return result;
}

uint64_t sub_10026BD64(uint64_t a1)
{
  unint64_t v2 = sub_10026BE58();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10026BDB0(uint64_t a1)
{
  unint64_t v2 = sub_10026BBB8();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10026BE00()
{
  unint64_t result = qword_1015D78D8;
  if (!qword_1015D78D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D78D8);
  }
  return result;
}

unint64_t sub_10026BE58()
{
  unint64_t result = qword_1015D78E0[0];
  if (!qword_1015D78E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D78E0);
  }
  return result;
}

uint64_t sub_10026BEAC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10026BF3C, 0, 0);
}

uint64_t sub_10026BF3C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D7850);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D7960, &qword_1015D7968);
  sub_100248520();
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10026C058(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10026B774();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10026C10C()
{
  unint64_t result = qword_1015D78F8;
  if (!qword_1015D78F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D78F8);
  }
  return result;
}

unint64_t sub_10026C164()
{
  unint64_t result = qword_1015D7900[0];
  if (!qword_1015D7900[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D7900);
  }
  return result;
}

uint64_t sub_10026C1B8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10026B774();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10026C26C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10026B774();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10026C320()
{
  unint64_t result = qword_1015D7918;
  if (!qword_1015D7918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7918);
  }
  return result;
}

unint64_t sub_10026C378()
{
  unint64_t result = qword_1015D7920;
  if (!qword_1015D7920)
  {
    sub_10010118C(qword_1015D7928);
    sub_10026BB60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7920);
  }
  return result;
}

uint64_t sub_10026C3EC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10026B8D4();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TransportTypePreferencesQuery()
{
  return &type metadata for TransportTypePreferencesQuery;
}

ValueMetadata *type metadata accessor for TransportTypePreferencesEntity()
{
  return &type metadata for TransportTypePreferencesEntity;
}

ValueMetadata *type metadata accessor for TransportTypePreferencesEntity.UpdateIntent_value()
{
  return &type metadata for TransportTypePreferencesEntity.UpdateIntent_value;
}

uint64_t sub_10026C4D0()
{
  return sub_1001010F8(&qword_1015D7940, &qword_1015D7948);
}

uint64_t sub_10026C50C()
{
  uint64_t v28 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unsigned int v27 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v20 - v6;
  uint64_t v8 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_1000FF33C(&qword_1015D7970);
  LocalizedStringResource.init(stringLiteral:)();
  id v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v30 = 0;
  uint64_t v14 = type metadata accessor for IntentDialog();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v4, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  v20[1] = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v27;
  v17(v27);
  sub_10026B71C();
  uint64_t v23 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D7978);
  LocalizedStringResource.init(stringLiteral:)();
  v25(v10, 1, 1, v26);
  char v29 = 4;
  v15(v16, 1, 1, v14);
  v15(v4, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100248520();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  return v23;
}

uint64_t sub_10026C8F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitFactoid()
{
  return &type metadata for PlaceSummaryUnitFactoid;
}

unint64_t sub_10026C918()
{
  unint64_t result = qword_1015D7988;
  if (!qword_1015D7988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7988);
  }
  return result;
}

uint64_t sub_10026C96C()
{
  return sub_1001010F8(&qword_1015D7990, &qword_1015D7998);
}

uint64_t sub_10026C9A8()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611970);
  sub_1000F2248(v10, (uint64_t)qword_101611970);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10026CC80()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611988);
  sub_1000F2248(v0, (uint64_t)qword_101611988);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10026CCE4()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_1016119A0);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_1016119A0);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10026CD9C()
{
  uint64_t result = swift_getKeyPath();
  qword_1016119B8 = result;
  return result;
}

uint64_t sub_10026CDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10026CDE8, 0, 0);
}

uint64_t sub_10026CDE8()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBE40 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1016119B8;
  *(void *)(v0 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = qword_1016119B8;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D7A98, &qword_1015D7AA0);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_10026CF44;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10026CF44()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_10026D098;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10026D098()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_1016119B8;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10026D174()
{
  if (qword_1015CBE40 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10026D1D4()
{
  unint64_t result = qword_1015D79A0;
  if (!qword_1015D79A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79A0);
  }
  return result;
}

unint64_t sub_10026D22C()
{
  unint64_t result = qword_1015D79A8;
  if (!qword_1015D79A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79A8);
  }
  return result;
}

uint64_t sub_10026D280()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10026D2B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10026D304@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBE30, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611988, a1);
}

uint64_t sub_10026D33C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBE38 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_1016119A0);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_10026D3B8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10026CDE8, 0, 0);
}

uint64_t sub_10026D46C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10026E230();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10026D494()
{
  return 0xD00000000000002BLL;
}

unint64_t sub_10026D4B4()
{
  unint64_t result = qword_1015D79B8;
  if (!qword_1015D79B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79B8);
  }
  return result;
}

unint64_t sub_10026D50C()
{
  unint64_t result = qword_1015D79C0;
  if (!qword_1015D79C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79C0);
  }
  return result;
}

unint64_t sub_10026D564()
{
  unint64_t result = qword_1015D79C8;
  if (!qword_1015D79C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79C8);
  }
  return result;
}

unint64_t sub_10026D5BC()
{
  unint64_t result = qword_1015D79D0;
  if (!qword_1015D79D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79D0);
  }
  return result;
}

unint64_t sub_10026D614()
{
  unint64_t result = qword_1015D79D8;
  if (!qword_1015D79D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79D8);
  }
  return result;
}

unint64_t sub_10026D66C()
{
  unint64_t result = qword_1015D79E0;
  if (!qword_1015D79E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79E0);
  }
  return result;
}

uint64_t sub_10026D6C0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10026D6E0, 0, 0);
}

uint64_t sub_10026D6E0()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  unsigned char *v1 = GEOConfigGetBOOL();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10026D758(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10026D77C, 0, 0);
}

uint64_t sub_10026D77C()
{
  GEOConfigSetSyncBOOL();
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_10026D81C()
{
  unint64_t result = qword_1015D79E8;
  if (!qword_1015D79E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79E8);
  }
  return result;
}

unint64_t sub_10026D874()
{
  unint64_t result = qword_1015D79F0;
  if (!qword_1015D79F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79F0);
  }
  return result;
}

unint64_t sub_10026D8CC()
{
  unint64_t result = qword_1015D79F8;
  if (!qword_1015D79F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D79F8);
  }
  return result;
}

unint64_t sub_10026D924()
{
  unint64_t result = qword_1015D7A00;
  if (!qword_1015D7A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7A00);
  }
  return result;
}

uint64_t sub_10026D978@<X0>(uint64_t *a1@<X8>)
{
  sub_10026DBC4();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10026D9B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBE28, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611970, a1);
}

uint64_t sub_10026D9F0()
{
  return sub_1001010F8(&qword_1015D7A08, &qword_1015D7A10);
}

uint64_t sub_10026DA2C(uint64_t a1)
{
  unint64_t v2 = sub_10026D4B4();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10026DA7C()
{
  unint64_t result = qword_1015D7A18;
  if (!qword_1015D7A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7A18);
  }
  return result;
}

uint64_t sub_10026DAD0(uint64_t a1)
{
  unint64_t v2 = sub_10026DBC4();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10026DB1C(uint64_t a1)
{
  unint64_t v2 = sub_10026D924();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10026DB6C()
{
  unint64_t result = qword_1015D7A20;
  if (!qword_1015D7A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7A20);
  }
  return result;
}

unint64_t sub_10026DBC4()
{
  unint64_t result = qword_1015D7A28[0];
  if (!qword_1015D7A28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D7A28);
  }
  return result;
}

uint64_t sub_10026DC18(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10026DCA8, 0, 0);
}

uint64_t sub_10026DCA8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D7998);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D7A98, &qword_1015D7AA0);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10026DDB8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10026D50C();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10026DE6C()
{
  unint64_t result = qword_1015D7A40;
  if (!qword_1015D7A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7A40);
  }
  return result;
}

unint64_t sub_10026DEC4()
{
  unint64_t result = qword_1015D7A48[0];
  if (!qword_1015D7A48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D7A48);
  }
  return result;
}

uint64_t sub_10026DF18(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10026D50C();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10026DFCC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10026D50C();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10026E080()
{
  unint64_t result = qword_1015D7A60;
  if (!qword_1015D7A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7A60);
  }
  return result;
}

unint64_t sub_10026E0D8()
{
  unint64_t result = qword_1015D7A68;
  if (!qword_1015D7A68)
  {
    sub_10010118C(qword_1015D7A70);
    sub_10026D8CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7A68);
  }
  return result;
}

uint64_t sub_10026E14C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10026D66C();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for DirectionsWakeDeviceQuery()
{
  return &type metadata for DirectionsWakeDeviceQuery;
}

ValueMetadata *type metadata accessor for DirectionsWakeDeviceEntity()
{
  return &type metadata for DirectionsWakeDeviceEntity;
}

ValueMetadata *type metadata accessor for DirectionsWakeDeviceEntity.UpdateIntent_value()
{
  return &type metadata for DirectionsWakeDeviceEntity.UpdateIntent_value;
}

uint64_t sub_10026E230()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D7AA8);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v23 = v10;
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10026D4B4();
  uint64_t v19 = v22;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v23, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_10026E684@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

unint64_t sub_10026E694()
{
  unint64_t result = qword_1015D7AB8;
  if (!qword_1015D7AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7AB8);
  }
  return result;
}

uint64_t sub_10026E6E8()
{
  return sub_1001010F8(&qword_1015D7AC0, &qword_1015D7AC8);
}

uint64_t sub_10026E724()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_1016119C0);
  sub_1000F2248(v10, (uint64_t)qword_1016119C0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10026E9FC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_1016119D8);
  sub_1000F2248(v0, (uint64_t)qword_1016119D8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10026EA60()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_1016119F0);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_1016119F0);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10026EB18()
{
  uint64_t result = swift_getKeyPath();
  qword_101611A08 = result;
  return result;
}

uint64_t sub_10026EB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10026EB64, 0, 0);
}

uint64_t sub_10026EB64()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBE60 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611A08;
  *(void *)(v0 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = qword_101611A08;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D7BC8, &qword_1015D7BD0);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_10026ECC0;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10026ECC0()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_10026EE14;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10026EE14()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611A08;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10026EEF0()
{
  if (qword_1015CBE60 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10026EF50()
{
  unint64_t result = qword_1015D7AD0;
  if (!qword_1015D7AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7AD0);
  }
  return result;
}

unint64_t sub_10026EFA8()
{
  unint64_t result = qword_1015D7AD8;
  if (!qword_1015D7AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7AD8);
  }
  return result;
}

uint64_t sub_10026EFFC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10026F030()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10026F080@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBE50, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1016119D8, a1);
}

uint64_t sub_10026F0B8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBE58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_1016119F0);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_10026F134(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10026EB64, 0, 0);
}

uint64_t sub_10026F1E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100270064();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10026F210()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_10026F230()
{
  unint64_t result = qword_1015D7AE8;
  if (!qword_1015D7AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7AE8);
  }
  return result;
}

unint64_t sub_10026F288()
{
  unint64_t result = qword_1015D7AF0;
  if (!qword_1015D7AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7AF0);
  }
  return result;
}

unint64_t sub_10026F2E0()
{
  unint64_t result = qword_1015D7AF8;
  if (!qword_1015D7AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7AF8);
  }
  return result;
}

unint64_t sub_10026F338()
{
  unint64_t result = qword_1015D7B00;
  if (!qword_1015D7B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B00);
  }
  return result;
}

unint64_t sub_10026F390()
{
  unint64_t result = qword_1015D7B08;
  if (!qword_1015D7B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B08);
  }
  return result;
}

unint64_t sub_10026F3E8()
{
  unint64_t result = qword_1015D7B10;
  if (!qword_1015D7B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B10);
  }
  return result;
}

uint64_t sub_10026F43C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10026F45C, 0, 0);
}

uint64_t sub_10026F45C()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)CyclePreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 avoidHills];
  unsigned char *v1 = (_BYTE)v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10026F528(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10026F54C, 0, 0);
}

uint64_t sub_10026F54C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)CyclePreferences) initWithDefaults:v2];

  [v3 setAvoidHills:v1];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10026F650()
{
  unint64_t result = qword_1015D7B18;
  if (!qword_1015D7B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B18);
  }
  return result;
}

unint64_t sub_10026F6A8()
{
  unint64_t result = qword_1015D7B20;
  if (!qword_1015D7B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B20);
  }
  return result;
}

unint64_t sub_10026F700()
{
  unint64_t result = qword_1015D7B28;
  if (!qword_1015D7B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B28);
  }
  return result;
}

unint64_t sub_10026F758()
{
  unint64_t result = qword_1015D7B30;
  if (!qword_1015D7B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B30);
  }
  return result;
}

uint64_t sub_10026F7AC@<X0>(uint64_t *a1@<X8>)
{
  sub_10026F9F8();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10026F7EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBE48, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1016119C0, a1);
}

uint64_t sub_10026F824()
{
  return sub_1001010F8(&qword_1015D7B38, &qword_1015D7B40);
}

uint64_t sub_10026F860(uint64_t a1)
{
  unint64_t v2 = sub_10026F230();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10026F8B0()
{
  unint64_t result = qword_1015D7B48;
  if (!qword_1015D7B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B48);
  }
  return result;
}

uint64_t sub_10026F904(uint64_t a1)
{
  unint64_t v2 = sub_10026F9F8();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10026F950(uint64_t a1)
{
  unint64_t v2 = sub_10026F758();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10026F9A0()
{
  unint64_t result = qword_1015D7B50;
  if (!qword_1015D7B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B50);
  }
  return result;
}

unint64_t sub_10026F9F8()
{
  unint64_t result = qword_1015D7B58[0];
  if (!qword_1015D7B58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D7B58);
  }
  return result;
}

uint64_t sub_10026FA4C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10026FADC, 0, 0);
}

uint64_t sub_10026FADC()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D7AC8);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D7BC8, &qword_1015D7BD0);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10026FBEC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10026F288();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10026FCA0()
{
  unint64_t result = qword_1015D7B70;
  if (!qword_1015D7B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B70);
  }
  return result;
}

unint64_t sub_10026FCF8()
{
  unint64_t result = qword_1015D7B78[0];
  if (!qword_1015D7B78[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D7B78);
  }
  return result;
}

uint64_t sub_10026FD4C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10026F288();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10026FE00(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10026F288();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10026FEB4()
{
  unint64_t result = qword_1015D7B90;
  if (!qword_1015D7B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B90);
  }
  return result;
}

unint64_t sub_10026FF0C()
{
  unint64_t result = qword_1015D7B98;
  if (!qword_1015D7B98)
  {
    sub_10010118C(qword_1015D7BA0);
    sub_10026F700();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7B98);
  }
  return result;
}

uint64_t sub_10026FF80(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10026F3E8();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidHillsInCyclingQuery()
{
  return &type metadata for AvoidHillsInCyclingQuery;
}

ValueMetadata *type metadata accessor for AvoidHillsInCyclingEntity.UpdateIntent_value()
{
  return &type metadata for AvoidHillsInCyclingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidHillsInCyclingEntity()
{
  return &type metadata for AvoidHillsInCyclingEntity;
}

uint64_t sub_100270064()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v22 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D7BD8);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v23 = v10;
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10026F230();
  uint64_t v19 = v22;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v23, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_1002704B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for CuratedGuideListView()
{
  return &type metadata for CuratedGuideListView;
}

ValueMetadata *type metadata accessor for CuratedGuideView()
{
  return &type metadata for CuratedGuideView;
}

uint64_t sub_1002704E4()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100270500()
{
  sub_1000FF33C(&qword_1015D7CD8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CF80;
  static Color.white.getter();
  Color.opacity(_:)();
  swift_release();
  *(void *)(v0 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v1;
  static Color.white.getter();
  Color.opacity(_:)();
  swift_release();
  *(void *)(v0 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v0 + 56) = v2;
  static Color.white.getter();
  Color.opacity(_:)();
  swift_release();
  *(void *)(v0 + 64) = Gradient.Stop.init(color:location:)();
  *(void *)(v0 + 72) = v3;
  Gradient.init(stops:)();
  static UnitPoint.bottom.getter();
  static UnitPoint.top.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  double result = *(double *)&v5;
  xmmword_101611A10 = v5;
  *(_OWORD *)&qword_101611A20 = v6;
  qword_101611A30 = v7;
  return result;
}

double sub_100270644()
{
  sub_1000FF33C(&qword_1015D7CD8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  *(void *)(v0 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v0 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v1;
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  *(void *)(v0 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v0 + 56) = v2;
  Gradient.init(stops:)();
  static UnitPoint.bottom.getter();
  static UnitPoint.top.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  double result = *(double *)&v4;
  xmmword_101611A38 = v4;
  *(_OWORD *)algn_101611A48 = v5;
  qword_101611A58 = v6;
  return result;
}

uint64_t sub_100270758@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a3;
  uint64_t v5 = type metadata accessor for Divider();
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  __chkstk_darwin(v5);
  id v63 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000FF33C(&qword_1015CE8B0);
  __chkstk_darwin(v65);
  id v64 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D7BE8);
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  __chkstk_darwin(v8);
  id v62 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D7BF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v61 - v14;
  uint64_t v16 = type metadata accessor for RoundedRectangle();
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (_OWORD *)((char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1000FF33C(&qword_1015D7BF8);
  __chkstk_darwin(v20 - 8);
  unsigned int v22 = (uint64_t *)((char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1000FF33C(&qword_1015D7C00);
  uint64_t v24 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v61 - v28;
  *unsigned int v22 = static Alignment.bottomLeading.getter();
  v22[1] = v30;
  uint64_t v31 = (uint64_t)v22 + *(int *)(sub_1000FF33C(&qword_1015D7C08) + 44);
  uint64_t v61 = a2;
  sub_100270D74(a1, a2, v31);
  char v32 = (char *)v19 + *(int *)(v17 + 28);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v19 = _Q0;
  uint64_t v40 = (uint64_t)&v26[*(int *)(v24 + 44)];
  sub_100275A58((uint64_t)v19, v40);
  *(_WORD *)(v40 + *(int *)(sub_1000FF33C(&qword_1015CFF60) + 36)) = 256;
  sub_1000FF27C((uint64_t)v22, (uint64_t)v26, &qword_1015D7BF8);
  sub_100275ABC((uint64_t)v19);
  sub_1000FF2E0((uint64_t)v22, &qword_1015D7BF8);
  sub_100101750((uint64_t)v26, (uint64_t)v29, &qword_1015D7C00);
  if (a1)
  {
    uint64_t v41 = *(void *)&a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_metrics];
    if (v41 && (*(unsigned char *)(v41 + OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_showsDivider) & 1) != 0)
    {
      id v42 = v63;
      Divider.init()();
      char v43 = static Edge.Set.leading.getter();
      EdgeInsets.init(_all:)();
      uint64_t v45 = v44;
      uint64_t v47 = v46;
      uint64_t v49 = v48;
      uint64_t v51 = v50;
      uint64_t v53 = v66;
      uint64_t v52 = v67;
      uint64_t v54 = (uint64_t)v64;
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v64, v42, v67);
      uint64_t v55 = v54 + *(int *)(v65 + 36);
      *(unsigned char *)uint64_t v55 = v43;
      *(void *)(v55 + 8) = v45;
      *(void *)(v55 + 16) = v47;
      *(void *)(v55 + 24) = v49;
      *(void *)(v55 + 32) = v51;
      *(unsigned char *)(v55 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v52);
      sub_100275B18();
      uint64_t v56 = (uint64_t)v62;
      View.accessibilityIdentifier(_:)();
      sub_1000FF2E0(v54, &qword_1015CE8B0);
      sub_100101750(v56, (uint64_t)v15, &qword_1015D7BE8);
      uint64_t v57 = 0;
    }
    else
    {
      uint64_t v57 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v15, v57, 1, v69);
    sub_1000FF27C((uint64_t)v29, (uint64_t)v26, &qword_1015D7C00);
    sub_1000FF27C((uint64_t)v15, (uint64_t)v12, &qword_1015D7BF0);
    uint64_t v58 = v70;
    sub_1000FF27C((uint64_t)v26, v70, &qword_1015D7C00);
    uint64_t v59 = sub_1000FF33C(&qword_1015D7C10);
    sub_1000FF27C((uint64_t)v12, v58 + *(int *)(v59 + 48), &qword_1015D7BF0);
    sub_1000FF2E0((uint64_t)v15, &qword_1015D7BF0);
    sub_1000FF2E0((uint64_t)v29, &qword_1015D7C00);
    sub_1000FF2E0((uint64_t)v12, &qword_1015D7BF0);
    return sub_1000FF2E0((uint64_t)v26, &qword_1015D7C00);
  }
  else
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_100276318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100270D74@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v125 = a3;
  uint64_t v4 = sub_1000FF33C(&qword_1015D7C28);
  __chkstk_darwin(v4 - 8);
  uint64_t v119 = (uint64_t *)((char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v116 = sub_1000FF33C(&qword_1015D7C30);
  __chkstk_darwin(v116);
  uint64_t v121 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1000FF33C(&qword_1015D7C38);
  __chkstk_darwin(v118);
  uint64_t v124 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v123 = (uint64_t)&v89 - v9;
  uint64_t v114 = type metadata accessor for Image.ResizingMode();
  uint64_t v112 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D7C40);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000FF33C(&qword_1015D7C48);
  __chkstk_darwin(v15);
  uint64_t v122 = (uint64_t)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v89 - v18;
  __chkstk_darwin(v20);
  unsigned int v22 = (char *)&v89 - v21;
  if (a1)
  {
    uint64_t v23 = self;
    id v117 = a1;
    uint64_t v24 = a1;
    id v113 = v23;
    id v25 = [v23 sharedInstance];
    id v26 = [v25 joeColorForCuratedCollection:*(void *)&v24[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection]];

    uint64_t v27 = Color.init(_:)();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v142 = v27;
    sub_1000FF33C(&qword_1015CFF80);
    sub_100175178();
    View.accessibilityIdentifier(_:)();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v28 = v24;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v29 = v28;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_1000FF27C((uint64_t)v14, (uint64_t)v19, &qword_1015D7C40);
    uint64_t v30 = &v19[*(int *)(v15 + 36)];
    long long v31 = v127;
    *(_OWORD *)uint64_t v30 = v126;
    *((_OWORD *)v30 + 1) = v31;
    *((_OWORD *)v30 + 2) = v128;
    sub_1000FF2E0((uint64_t)v14, &qword_1015D7C40);
    sub_100101750((uint64_t)v19, (uint64_t)v22, &qword_1015D7C48);
    swift_getKeyPath();
    swift_getKeyPath();
    char v32 = v29;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v33 = (uint64_t)v22;
    if (KeyPath)
    {
      uint64_t v34 = v112;
      uint64_t v35 = v114;
      (*(void (**)(char *, void, uint64_t))(v112 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v114);
      uint64_t v115 = Image.resizable(capInsets:resizingMode:)();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
      id v36 = v32;
      sub_1001FEF28();

      uint64_t v37 = v36;
      sub_1001FF02C();

      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v114 = v129;
      uint64_t v112 = v130;
      uint64_t v111 = v131;
      uint64_t v110 = v132;
      uint64_t v109 = v133;
      uint64_t v108 = v134;
      swift_release();
      int v107 = 1;
    }
    else
    {
      uint64_t v115 = 0;
      uint64_t v114 = 0;
      uint64_t v112 = 0;
      uint64_t v111 = 0;
      uint64_t v110 = 0;
      uint64_t v109 = 0;
      uint64_t v108 = 0;
      int v107 = 0;
    }
    uint64_t v38 = (uint64_t)v121;
    id v39 = v32;
    id v40 = [v113 sharedInstance];
    id v41 = [v40 joeColorForCuratedCollection:*(void *)&v39[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection]];

    uint64_t v121 = (char *)Color.init(_:)();
    id v113 = (id)swift_getKeyPath();
    swift_getKeyPath();
    swift_getKeyPath();
    id v42 = v39;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    char v43 = v42;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v105 = v135;
    int v104 = v136;
    uint64_t v103 = v137;
    int v102 = v138;
    uint64_t v101 = v139;
    uint64_t v100 = v140;
    if (qword_1015CBE68 != -1) {
      swift_once();
    }
    uint64_t v99 = *((void *)&xmmword_101611A10 + 1);
    uint64_t v44 = unk_101611A28;
    uint64_t v98 = qword_101611A20;
    uint64_t v45 = qword_101611A30;
    uint64_t v46 = qword_1015CBE70;
    uint64_t v106 = xmmword_101611A10;
    swift_bridgeObjectRetain();
    if (v46 != -1) {
      swift_once();
    }
    uint64_t v96 = xmmword_101611A38;
    long long v97 = *(long long *)((char *)&xmmword_101611A38 + 8);
    uint64_t v47 = qword_101611A50;
    uint64_t v48 = qword_101611A58;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v49 = v43;
    swift_bridgeObjectRetain();
    static Published.subscript.getter();

    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v50 = v49;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v95 = KeyPath;
    int v94 = v142;
    uint64_t v93 = v143;
    int v92 = v144;
    uint64_t v91 = v145;
    uint64_t v90 = v146;
    uint64_t v51 = static HorizontalAlignment.leading.getter();
    uint64_t v52 = (uint64_t)v119;
    *uint64_t v119 = v51;
    *(void *)(v52 + 8) = 0x4000000000000000;
    *(unsigned char *)(v52 + 16) = 0;
    uint64_t v53 = sub_1000FF33C(&qword_1015D7C50);
    sub_100271C04(v117, v120, v52 + *(int *)(v53 + 44));
    LOBYTE(v5sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v55 = v54;
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    sub_1000FF27C(v52, v38, &qword_1015D7C28);
    uint64_t v62 = v38 + *(int *)(v116 + 36);
    *(unsigned char *)uint64_t v62 = (_BYTE)v50;
    *(void *)(v62 + 8) = v55;
    *(void *)(v62 + 16) = v57;
    *(void *)(v62 + 24) = v59;
    *(void *)(v62 + 32) = v61;
    *(unsigned char *)(v62 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    sub_1000FF2E0(v52, &qword_1015D7C28);
    LOBYTE(v5sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v71 = v124;
    sub_1000FF27C(v38, v124, &qword_1015D7C30);
    uint64_t v72 = v71 + *(int *)(v118 + 36);
    *(unsigned char *)uint64_t v72 = (_BYTE)v50;
    *(void *)(v72 + 8) = v64;
    *(void *)(v72 + 16) = v66;
    *(void *)(v72 + 24) = v68;
    *(void *)(v72 + 32) = v70;
    *(unsigned char *)(v72 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
    sub_1000FF2E0(v38, &qword_1015D7C30);
    uint64_t v73 = v123;
    sub_100101750(v71, v123, &qword_1015D7C38);
    uint64_t v74 = v33;
    uint64_t v120 = v33;
    uint64_t v75 = v122;
    sub_1000FF27C(v74, v122, &qword_1015D7C48);
    sub_1000FF27C(v73, v71, &qword_1015D7C38);
    uint64_t v76 = v125;
    sub_1000FF27C(v75, v125, &qword_1015D7C48);
    uint64_t v77 = (int *)sub_1000FF33C(&qword_1015D7C58);
    uint64_t v78 = v76 + v77[12];
    uint64_t v79 = v114;
    *(void *)uint64_t v78 = v115;
    *(void *)(v78 + 8) = v79;
    uint64_t v80 = v111;
    *(void *)(v78 + 16) = v112;
    *(void *)(v78 + 24) = v80;
    uint64_t v81 = v109;
    *(void *)(v78 + 32) = v110;
    *(void *)(v78 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v81;
    *(void *)(v78 + 48) = v108;
    *(unsigned char *)(v78 + 56) = v107;
    uint64_t v82 = v76 + v77[16];
    uint64_t v83 = v121;
    *(void *)uint64_t v82 = v113;
    *(void *)(v82 + 8) = v83;
    *(void *)(v82 + 16) = v105;
    *(unsigned char *)(v82 + 24) = v104;
    *(void *)(v82 + 32) = v103;
    *(unsigned char *)(v82 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v102;
    uint64_t v84 = v100;
    *(void *)(v82 + 48) = v101;
    *(void *)(v82 + 56) = v84;
    *(void *)(v82 + 64) = 0x403E000000000000;
    *(_WORD *)(v82 + 72) = 1;
    *(unsigned char *)(v82 + 74) = 0;
    *(void *)(v82 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v106;
    uint64_t v85 = v98;
    *(void *)(v82 + 88) = v99;
    *(void *)(v82 + 96) = v85;
    *(void *)(v82 + 104) = v44;
    *(void *)(v82 + 112) = v45;
    uint64_t v86 = v76 + v77[20];
    *(void *)uint64_t v86 = v96;
    *(_OWORD *)(v86 + 8) = v97;
    *(void *)(v86 + 24) = v47;
    *(void *)(v86 + 32) = v48;
    *(void *)(v86 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v95;
    *(unsigned char *)(v86 + 48) = v94;
    *(void *)(v86 + 56) = v93;
    *(unsigned char *)(v86 + 64) = v92;
    uint64_t v87 = v90;
    *(void *)(v86 + 72) = v91;
    *(void *)(v86 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v87;
    sub_1000FF27C(v71, v76 + v77[24], &qword_1015D7C38);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000FF2E0(v73, &qword_1015D7C38);
    sub_1000FF2E0(v120, &qword_1015D7C48);
    sub_1000FF2E0(v71, &qword_1015D7C38);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1000FF2E0(v75, &qword_1015D7C48);
  }
  else
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_100276318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100271C04@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v110 = a3;
  uint64_t v4 = sub_1000FF33C(&qword_1015D7C60);
  __chkstk_darwin(v4 - 8);
  uint64_t v111 = (uint64_t)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v108 = (uint64_t *)((char *)&v92 - v7);
  uint64_t v8 = sub_1000FF33C(&qword_1015D7C68);
  __chkstk_darwin(v8 - 8);
  uint64_t v109 = (uint64_t)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v106 = (char *)&v92 - v11;
  uint64_t v94 = sub_1000FF33C((uint64_t *)&unk_1015D8580);
  __chkstk_darwin(v94);
  uint64_t v98 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(&qword_1015D7C70);
  __chkstk_darwin(v13 - 8);
  uint64_t v96 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000FF33C(&qword_1015D7C78);
  __chkstk_darwin(v100);
  uint64_t v16 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000FF33C(&qword_1015D7C80);
  uint64_t v101 = *(void *)(v17 - 8);
  uint64_t v102 = v17;
  __chkstk_darwin(v17);
  uint64_t v99 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015D7C88);
  __chkstk_darwin(v19 - 8);
  uint64_t v105 = (uint64_t)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  long long v97 = (char *)&v92 - v22;
  __chkstk_darwin(v23);
  uint64_t v104 = (uint64_t)&v92 - v24;
  if (a1)
  {
    id v25 = a1;
    uint64_t v93 = v25;
    uint64_t v103 = a1;
    uint64_t v26 = sub_1001FEB18();
    unint64_t v28 = v27;

    uint64_t v112 = v26;
    unint64_t v113 = v28;
    unint64_t v95 = sub_100180324();
    uint64_t v29 = Text.init<A>(_:)();
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    static Font.caption.getter();
    uint64_t v34 = Text.font(_:)();
    uint64_t v36 = v35;
    char v38 = v37;
    swift_release();
    sub_10017F958(v29, v31, v33);
    swift_bridgeObjectRelease();
    uint64_t v112 = static Color.white.getter();
    uint64_t v39 = Text.foregroundStyle<A>(_:)();
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    char v45 = v44 & 1;
    sub_10017F958(v34, v36, v38 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v46 = enum case for Text.Case.uppercase(_:);
    uint64_t v47 = type metadata accessor for Text.Case();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v96, v46, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v47);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v51 = (uint64_t)v98;
    sub_1000FF27C(v49, (uint64_t)&v98[*(int *)(v94 + 28)], &qword_1015D7C70);
    *(void *)uint64_t v51 = KeyPath;
    uint64_t v52 = v100;
    sub_1000FF27C(v51, (uint64_t)&v16[*(int *)(v100 + 36)], (uint64_t *)&unk_1015D8580);
    *(void *)uint64_t v16 = v39;
    *((void *)v16 + 1) = v41;
    v16[16] = v45;
    *((void *)v16 + 3) = v43;
    swift_bridgeObjectRetain();
    sub_10017FDF0(v39, v41, v45);
    sub_1000FF2E0(v51, (uint64_t *)&unk_1015D8580);
    sub_1000FF2E0(v49, &qword_1015D7C70);
    sub_10017F958(v39, v41, v45);
    swift_bridgeObjectRelease();
    static Font.Weight.medium.getter();
    unint64_t v53 = sub_100275CBC();
    uint64_t v54 = v99;
    View.fontWeight(_:)();
    sub_1000FF2E0((uint64_t)v16, &qword_1015D7C78);
    uint64_t v112 = v52;
    unint64_t v113 = v53;
    swift_getOpaqueTypeConformance2();
    uint64_t v55 = (uint64_t)v97;
    uint64_t v56 = v102;
    View.accessibilityIdentifier(_:)();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v54, v56);
    uint64_t v57 = v104;
    sub_100101750(v55, v104, &qword_1015D7C88);
    uint64_t v58 = *(void **)&v93[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    uint64_t v59 = v93;
    id v60 = [v58 collectionTitle];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v63 = v62;

    uint64_t v112 = v61;
    unint64_t v113 = v63;
    uint64_t v64 = Text.init<A>(_:)();
    uint64_t v66 = v65;
    LOBYTE(v63) = v67 & 1;
    static Font.title3.getter();
    uint64_t v68 = Text.font(_:)();
    uint64_t v70 = v69;
    LOBYTE(v51) = v71;
    swift_release();
    LOBYTE(v41) = v51 & 1;
    sub_10017F958(v64, v66, v63);
    swift_bridgeObjectRelease();
    uint64_t v112 = static Color.white.getter();
    uint64_t v72 = Text.foregroundStyle<A>(_:)();
    uint64_t v74 = v73;
    LOBYTE(v51) = v75 & 1;
    sub_10017F958(v68, v70, v41);
    swift_release();
    swift_bridgeObjectRelease();
    static Font.Weight.semibold.getter();
    uint64_t v76 = Text.fontWeight(_:)();
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    LOBYTE(v49) = v81 & 1;
    sub_10017F958(v72, v74, v51);
    swift_bridgeObjectRelease();
    uint64_t v112 = v76;
    unint64_t v113 = v78;
    char v114 = v49;
    uint64_t v115 = v80;
    uint64_t v82 = (uint64_t)v106;
    View.accessibilityIdentifier(_:)();
    sub_10017F958(v76, v78, v49);
    swift_bridgeObjectRelease();
    uint64_t v83 = static VerticalAlignment.center.getter();
    uint64_t v84 = (uint64_t)v108;
    uint64_t *v108 = v83;
    *(void *)(v84 + 8) = 0x4014000000000000;
    *(unsigned char *)(v84 + 16) = 0;
    uint64_t v85 = sub_1000FF33C(&qword_1015D7CA0);
    sub_1002725C0(v103, v84 + *(int *)(v85 + 44));
    uint64_t v86 = v105;
    sub_1000FF27C(v57, v105, &qword_1015D7C88);
    uint64_t v87 = v109;
    sub_1000FF27C(v82, v109, &qword_1015D7C68);
    uint64_t v88 = v111;
    sub_1000FF27C(v84, v111, &qword_1015D7C60);
    uint64_t v89 = v110;
    sub_1000FF27C(v86, v110, &qword_1015D7C88);
    uint64_t v90 = sub_1000FF33C(&qword_1015D7CA8);
    sub_1000FF27C(v87, v89 + *(int *)(v90 + 48), &qword_1015D7C68);
    sub_1000FF27C(v88, v89 + *(int *)(v90 + 64), &qword_1015D7C60);
    sub_1000FF2E0(v84, &qword_1015D7C60);
    sub_1000FF2E0(v82, &qword_1015D7C68);
    sub_1000FF2E0(v57, &qword_1015D7C88);
    sub_1000FF2E0(v88, &qword_1015D7C60);
    sub_1000FF2E0(v87, &qword_1015D7C68);
    return sub_1000FF2E0(v86, &qword_1015D7C88);
  }
  else
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_100276318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002725C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D7CB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v93 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v77 - v7;
  uint64_t v87 = sub_1000FF33C(&qword_1015CFF60);
  __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v83);
  uint64_t v86 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Image.ResizingMode();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000FF33C(&qword_1015D09E8);
  __chkstk_darwin(v85);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000FF33C(&qword_1015D7CB8);
  uint64_t v89 = *(void *)(v17 - 8);
  uint64_t v90 = v17;
  __chkstk_darwin(v17);
  uint64_t v84 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015D7CC0);
  __chkstk_darwin(v19 - 8);
  uint64_t v91 = (uint64_t)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v77 - v22;
  if (a1)
  {
    uint64_t v92 = a2;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v24 = a1;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v94 = v23;
    if (v99)
    {
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Image.ResizingMode.stretch(_:), v11);
      uint64_t v25 = Image.resizable(capInsets:resizingMode:)();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v81 = v99;
      char v26 = v100;
      uint64_t v80 = v101;
      uint64_t v82 = v8;
      char v27 = v102;
      uint64_t v79 = v103;
      uint64_t v78 = v104;
      unint64_t v28 = v86;
      uint64_t v29 = &v86[*(int *)(v83 + 20)];
      uint64_t v30 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v31 = type metadata accessor for RoundedCornerStyle();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v29, v30, v31);
      __asm { FMOV            V0.2D, #4.0 }
      *unint64_t v28 = _Q0;
      uint64_t v37 = v88;
      sub_100275A58((uint64_t)v28, v88);
      *(_WORD *)(v37 + *(int *)(v87 + 36)) = 256;
      sub_1000FF27C(v37, (uint64_t)&v16[*(int *)(v85 + 36)], &qword_1015CFF60);
      uint64_t v38 = v81;
      *(void *)uint64_t v16 = v25;
      *((void *)v16 + 1) = v38;
      v16[16] = v26;
      uint64_t v23 = v94;
      *((void *)v16 + 3) = v80;
      v16[32] = v27;
      uint64_t v8 = v82;
      uint64_t v39 = v78;
      *((void *)v16 + 5) = v79;
      *((void *)v16 + 6) = v39;
      swift_retain();
      sub_1000FF2E0(v37, &qword_1015CFF60);
      sub_100275ABC((uint64_t)v28);
      swift_release();
      sub_100275D64();
      uint64_t v40 = (uint64_t)v84;
      View.accessibilityIdentifier(_:)();
      swift_release();
      sub_1000FF2E0((uint64_t)v16, &qword_1015D09E8);
      sub_100101750(v40, (uint64_t)v23, &qword_1015D7CB8);
      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v41 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v23, v41, 1, v90);
    uint64_t v42 = *(void **)&v24[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    uint64_t v43 = v24;
    id v44 = [v42 publisherAttribution];
    if (v44
      && (id v45 = [v44 displayName], swift_unknownObjectRelease(), v45))
    {
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v48 = v47;

      uint64_t v95 = v46;
      uint64_t v96 = v48;
      sub_100180324();
      uint64_t v49 = Text.init<A>(_:)();
      uint64_t v51 = v50;
      LOBYTE(v48) = v52 & 1;
      static Font.subheadline.getter();
      uint64_t v53 = Text.font(_:)();
      uint64_t v55 = v54;
      char v57 = v56;
      swift_release();
      char v58 = v57 & 1;
      sub_10017F958(v49, v51, v48);
      swift_bridgeObjectRelease();
      uint64_t v95 = static Color.white.getter();
      uint64_t v59 = Text.foregroundStyle<A>(_:)();
      uint64_t v61 = v60;
      char v63 = v62 & 1;
      sub_10017F958(v53, v55, v58);
      swift_release();
      uint64_t v23 = v94;
      swift_bridgeObjectRelease();
      static Font.Weight.medium.getter();
      uint64_t v64 = Text.fontWeight(_:)();
      uint64_t v66 = v65;
      uint64_t v68 = v67;
      LOBYTE(v55) = v69 & 1;
      sub_10017F958(v59, v61, v63);
      swift_bridgeObjectRelease();
      uint64_t v95 = v64;
      uint64_t v96 = v66;
      char v97 = v55;
      uint64_t v98 = v68;
      View.accessibilityIdentifier(_:)();
      sub_10017F958(v64, v66, v55);
      swift_bridgeObjectRelease();
      uint64_t v70 = sub_1000FF33C(&qword_1015D7C68);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v8, 0, 1, v70);
    }
    else
    {

      uint64_t v71 = sub_1000FF33C(&qword_1015D7C68);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v8, 1, 1, v71);
    }
    uint64_t v72 = v91;
    sub_1000FF27C((uint64_t)v23, v91, &qword_1015D7CC0);
    uint64_t v73 = v93;
    sub_1000FF27C((uint64_t)v8, v93, &qword_1015D7CB0);
    uint64_t v74 = v92;
    sub_1000FF27C(v72, v92, &qword_1015D7CC0);
    uint64_t v75 = sub_1000FF33C(&qword_1015D7CC8);
    sub_1000FF27C(v73, v74 + *(int *)(v75 + 48), &qword_1015D7CB0);
    sub_1000FF2E0((uint64_t)v8, &qword_1015D7CB0);
    sub_1000FF2E0((uint64_t)v23, &qword_1015D7CC0);
    sub_1000FF2E0(v73, &qword_1015D7CB0);
    return sub_1000FF2E0(v72, &qword_1015D7CC0);
  }
  else
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_100276318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100272F10@<X0>(uint64_t a1@<X8>)
{
  return sub_100270758(*(char **)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_100272F18@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v48[1] = a3;
  uint64_t v5 = sub_1000FF33C(&qword_1015D7CE0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D7CE8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D7CF0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000FF33C(&qword_1015D7CF8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static HorizontalAlignment.leading.getter();
  *((void *)v7 + 1) = 0x4024000000000000;
  v7[16] = 0;
  uint64_t v19 = sub_1000FF33C(&qword_1015D7D00);
  sub_10027325C(a1, a2, (uint64_t)&v7[*(int *)(v19 + 44)]);
  LOBYTE(a1) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1000FF27C((uint64_t)v7, (uint64_t)v11, &qword_1015D7CE0);
  unint64_t v28 = &v11[*(int *)(v9 + 44)];
  *unint64_t v28 = (char)a1;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_1000FF2E0((uint64_t)v7, &qword_1015D7CE0);
  LOBYTE(a1) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_1000FF27C((uint64_t)v11, (uint64_t)v15, &qword_1015D7CE8);
  uint64_t v37 = &v15[*(int *)(v13 + 44)];
  char *v37 = (char)a1;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_1000FF2E0((uint64_t)v11, &qword_1015D7CE8);
  LOBYTE(v13) = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_1000FF27C((uint64_t)v15, (uint64_t)v18, &qword_1015D7CF0);
  uint64_t v46 = &v18[*(int *)(v16 + 36)];
  *uint64_t v46 = v13;
  *((void *)v46 + 1) = v39;
  *((void *)v46 + 2) = v41;
  *((void *)v46 + 3) = v43;
  *((void *)v46 + 4) = v45;
  v46[40] = 0;
  sub_1000FF2E0((uint64_t)v15, &qword_1015D7CF0);
  sub_100275EF4(&qword_1015D7D08, &qword_1015D7CF8, (void (*)(void))sub_100275E24);
  View.accessibilityIdentifier(_:)();
  return sub_1000FF2E0((uint64_t)v18, &qword_1015D7CF8);
}

uint64_t sub_10027325C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v78 = a3;
  uint64_t v73 = type metadata accessor for Divider();
  uint64_t v71 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  char v69 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000FF33C(&qword_1015CE8B0);
  __chkstk_darwin(v68);
  uint64_t v72 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000FF33C(&qword_1015D7D28);
  __chkstk_darwin(v75);
  uint64_t v74 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D7D30);
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  __chkstk_darwin(v8);
  uint64_t v70 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D7D38);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v67 - v14;
  uint64_t v16 = sub_1000FF33C(&qword_1015D7D40);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015D7D48);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v67 - v24;
  *(void *)uint64_t v18 = static VerticalAlignment.center.getter();
  *((void *)v18 + 1) = 0x4024000000000000;
  unsigned char v18[16] = 0;
  uint64_t v26 = (uint64_t)&v18[*(int *)(sub_1000FF33C(&qword_1015D7D50) + 44)];
  uint64_t v67 = a2;
  sub_1002738D4(a1, a2, v26);
  LOBYTE(a2) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_1000FF27C((uint64_t)v18, (uint64_t)v22, &qword_1015D7D40);
  uint64_t v35 = &v22[*(int *)(v20 + 44)];
  char *v35 = a2;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_1000FF2E0((uint64_t)v18, &qword_1015D7D40);
  sub_100101750((uint64_t)v22, (uint64_t)v25, &qword_1015D7D48);
  if (a1)
  {
    uint64_t v36 = *(void *)&a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_metrics];
    if (v36)
    {
      uint64_t v37 = v78;
      if (*(unsigned char *)(v36 + OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_showsDivider))
      {
        uint64_t v38 = v69;
        Divider.init()();
        char v39 = static Edge.Set.leading.getter();
        EdgeInsets.init(_all:)();
        uint64_t v41 = v40;
        uint64_t v43 = v42;
        uint64_t v45 = v44;
        uint64_t v47 = v46;
        uint64_t v48 = v71;
        uint64_t v49 = (uint64_t)v72;
        uint64_t v50 = v73;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v72, v38, v73);
        uint64_t v51 = v49 + *(int *)(v68 + 36);
        *(unsigned char *)uint64_t v51 = v39;
        *(void *)(v51 + 8) = v41;
        *(void *)(v51 + 16) = v43;
        *(void *)(v51 + 24) = v45;
        *(void *)(v51 + 32) = v47;
        *(unsigned char *)(v51 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v50);
        char v52 = static Edge.Set.trailing.getter();
        EdgeInsets.init(_all:)();
        uint64_t v54 = v53;
        uint64_t v56 = v55;
        uint64_t v58 = v57;
        uint64_t v60 = v59;
        uint64_t v61 = v74;
        sub_1000FF27C(v49, v74, &qword_1015CE8B0);
        uint64_t v62 = v61 + *(int *)(v75 + 36);
        *(unsigned char *)uint64_t v62 = v52;
        *(void *)(v62 + 8) = v54;
        *(void *)(v62 + 16) = v56;
        *(void *)(v62 + 24) = v58;
        *(void *)(v62 + 32) = v60;
        *(unsigned char *)(v62 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
        sub_1000FF2E0(v49, &qword_1015CE8B0);
        sub_100275EF4(&qword_1015D7D60, &qword_1015D7D28, (void (*)(void))sub_100275B18);
        uint64_t v63 = (uint64_t)v70;
        View.accessibilityIdentifier(_:)();
        sub_1000FF2E0(v61, &qword_1015D7D28);
        sub_100101750(v63, (uint64_t)v15, &qword_1015D7D30);
        uint64_t v64 = 0;
      }
      else
      {
        uint64_t v64 = 1;
      }
    }
    else
    {
      uint64_t v64 = 1;
      uint64_t v37 = v78;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v15, v64, 1, v77);
    sub_1000FF27C((uint64_t)v25, (uint64_t)v22, &qword_1015D7D48);
    sub_1000FF27C((uint64_t)v15, (uint64_t)v12, &qword_1015D7D38);
    sub_1000FF27C((uint64_t)v22, v37, &qword_1015D7D48);
    uint64_t v65 = sub_1000FF33C(&qword_1015D7D58);
    sub_1000FF27C((uint64_t)v12, v37 + *(int *)(v65 + 48), &qword_1015D7D38);
    sub_1000FF2E0((uint64_t)v15, &qword_1015D7D38);
    sub_1000FF2E0((uint64_t)v25, &qword_1015D7D48);
    sub_1000FF2E0((uint64_t)v12, &qword_1015D7D38);
    return sub_1000FF2E0((uint64_t)v22, &qword_1015D7D48);
  }
  else
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_100276318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002738D4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v5 = sub_1000FF33C(&qword_1015D7D68);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v37 - v9);
  uint64_t v11 = sub_1000FF33C(&qword_1015D7D70);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D7D78);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v37 - v19;
  *(void *)uint64_t v13 = static HorizontalAlignment.leading.getter();
  *((void *)v13 + 1) = 0x4000000000000000;
  v13[16] = 0;
  uint64_t v21 = sub_1000FF33C(&qword_1015D7D80);
  sub_100273BBC(a1, a2, (uint64_t)&v13[*(int *)(v21 + 44)]);
  LOBYTE(a2) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_1000FF27C((uint64_t)v13, (uint64_t)v17, &qword_1015D7D70);
  uint64_t v30 = &v17[*(int *)(v15 + 44)];
  *uint64_t v30 = a2;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_1000FF2E0((uint64_t)v13, &qword_1015D7D70);
  sub_100101750((uint64_t)v17, (uint64_t)v20, &qword_1015D7D78);
  *uint64_t v10 = static Alignment.bottomLeading.getter();
  v10[1] = v31;
  uint64_t v32 = sub_1000FF33C(&qword_1015D7D88);
  sub_100274F5C(a1, (uint64_t)v10 + *(int *)(v32 + 44));
  sub_1000FF27C((uint64_t)v20, (uint64_t)v17, &qword_1015D7D78);
  sub_1000FF27C((uint64_t)v10, (uint64_t)v7, &qword_1015D7D68);
  uint64_t v33 = v38;
  sub_1000FF27C((uint64_t)v17, v38, &qword_1015D7D78);
  uint64_t v34 = sub_1000FF33C(&qword_1015D7D90);
  uint64_t v35 = v33 + *(int *)(v34 + 48);
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 1;
  sub_1000FF27C((uint64_t)v7, v33 + *(int *)(v34 + 64), &qword_1015D7D68);
  sub_1000FF2E0((uint64_t)v10, &qword_1015D7D68);
  sub_1000FF2E0((uint64_t)v20, &qword_1015D7D78);
  sub_1000FF2E0((uint64_t)v7, &qword_1015D7D68);
  return sub_1000FF2E0((uint64_t)v17, &qword_1015D7D78);
}

uint64_t sub_100273BBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v110 = a3;
  uint64_t v4 = sub_1000FF33C(&qword_1015D7C60);
  __chkstk_darwin(v4 - 8);
  uint64_t v111 = (uint64_t)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v109 = (uint64_t *)((char *)&v90 - v7);
  uint64_t v8 = sub_1000FF33C(&qword_1015D7DF8);
  uint64_t v104 = *(void *)(v8 - 8);
  uint64_t v105 = v8;
  __chkstk_darwin(v8);
  uint64_t v103 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D7E00);
  __chkstk_darwin(v10 - 8);
  uint64_t v107 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v106 = (uint64_t)&v90 - v13;
  uint64_t v92 = sub_1000FF33C((uint64_t *)&unk_1015D8580);
  __chkstk_darwin(v92);
  uint64_t v96 = (uint64_t *)((char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000FF33C(&qword_1015D7C70);
  __chkstk_darwin(v15 - 8);
  uint64_t v94 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = (int *)sub_1000FF33C(&qword_1015D7C78);
  __chkstk_darwin(v98);
  uint64_t v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000FF33C(&qword_1015D7C80);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  char v97 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000FF33C(&qword_1015D7C88);
  __chkstk_darwin(v20 - 8);
  uint64_t v102 = (uint64_t)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v90 - v23;
  __chkstk_darwin(v24);
  uint64_t v112 = (uint64_t)&v90 - v25;
  if (a1)
  {
    uint64_t v26 = a1;
    uint64_t v91 = v26;
    uint64_t v27 = sub_1001FEB18();
    unint64_t v29 = v28;

    uint64_t v113 = v27;
    unint64_t v114 = v29;
    unint64_t v93 = sub_100180324();
    uint64_t v30 = Text.init<A>(_:)();
    uint64_t v32 = v31;
    char v34 = v33 & 1;
    static Font.caption.getter();
    uint64_t v35 = Text.font(_:)();
    uint64_t v101 = a1;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    char v40 = v39;
    swift_release();
    sub_10017F958(v30, v32, v34);
    swift_bridgeObjectRelease();
    LODWORD(v113) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v41 = Text.foregroundStyle<A>(_:)();
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    char v47 = v46 & 1;
    sub_10017F958(v36, v38, v40 & 1);
    swift_bridgeObjectRelease();
    uint64_t v48 = enum case for Text.Case.uppercase(_:);
    uint64_t v49 = type metadata accessor for Text.Case();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v94, v48, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v53 = v96;
    sub_1000FF27C(v51, (uint64_t)v96 + *(int *)(v92 + 28), &qword_1015D7C70);
    *uint64_t v53 = KeyPath;
    uint64_t v54 = v98;
    sub_1000FF27C((uint64_t)v53, (uint64_t)&v18[v98[9]], (uint64_t *)&unk_1015D8580);
    *(void *)uint64_t v18 = v41;
    *((void *)v18 + 1) = v43;
    unsigned char v18[16] = v47;
    *((void *)v18 + 3) = v45;
    swift_bridgeObjectRetain();
    sub_10017FDF0(v41, v43, v47);
    sub_1000FF2E0((uint64_t)v53, (uint64_t *)&unk_1015D8580);
    sub_1000FF2E0(v51, &qword_1015D7C70);
    sub_10017F958(v41, v43, v47);
    swift_bridgeObjectRelease();
    static Font.Weight.medium.getter();
    unint64_t v55 = sub_100275CBC();
    uint64_t v56 = v97;
    View.fontWeight(_:)();
    sub_1000FF2E0((uint64_t)v18, &qword_1015D7C78);
    uint64_t v113 = (uint64_t)v54;
    unint64_t v114 = v55;
    uint64_t v98 = (int *)&opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>;
    swift_getOpaqueTypeConformance2();
    uint64_t v57 = (uint64_t)v95;
    uint64_t v58 = v100;
    View.accessibilityIdentifier(_:)();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v56, v58);
    sub_100101750(v57, v112, &qword_1015D7C88);
    uint64_t v59 = *(void **)&v91[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    uint64_t v60 = v91;
    id v61 = [v59 collectionTitle];
    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v64 = v63;

    uint64_t v113 = v62;
    unint64_t v114 = v64;
    uint64_t v65 = Text.init<A>(_:)();
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    uint64_t v100 = v68;
    LOBYTE(v53) = v70 & 1;
    uint64_t v71 = static Font.headline.getter();
    uint64_t v72 = swift_getKeyPath();
    uint64_t v99 = v72;
    id v73 = [self labelColor];
    uint64_t v74 = Color.init(_:)();
    uint64_t v113 = v65;
    unint64_t v114 = v67;
    char v115 = (char)v53;
    uint64_t v116 = v69;
    __int16 v117 = 256;
    uint64_t v118 = v72;
    uint64_t v119 = v71;
    uint64_t v120 = v74;
    static Font.Weight.semibold.getter();
    uint64_t v75 = sub_1000FF33C(&qword_1015D7E08);
    unint64_t v76 = sub_100276160();
    uint64_t v77 = v103;
    View.fontWeight(_:)();
    sub_10017F958(v65, v67, (char)v53);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v113 = v75;
    unint64_t v114 = v76;
    swift_getOpaqueTypeConformance2();
    uint64_t v78 = (uint64_t)v107;
    uint64_t v79 = v105;
    View.accessibilityIdentifier(_:)();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v77, v79);
    uint64_t v80 = v106;
    sub_100101750(v78, v106, &qword_1015D7E00);
    uint64_t v81 = static VerticalAlignment.center.getter();
    uint64_t v82 = (uint64_t)v109;
    *uint64_t v109 = v81;
    *(void *)(v82 + 8) = 0x4014000000000000;
    *(unsigned char *)(v82 + 16) = 0;
    uint64_t v83 = sub_1000FF33C(&qword_1015D7CA0);
    sub_100274618(v101, v82 + *(int *)(v83 + 44));
    uint64_t v84 = v112;
    uint64_t v85 = v102;
    sub_1000FF27C(v112, v102, &qword_1015D7C88);
    sub_1000FF27C(v80, v78, &qword_1015D7E00);
    uint64_t v86 = v111;
    sub_1000FF27C(v82, v111, &qword_1015D7C60);
    uint64_t v87 = v110;
    sub_1000FF27C(v85, v110, &qword_1015D7C88);
    uint64_t v88 = sub_1000FF33C(&qword_1015D7E18);
    sub_1000FF27C(v78, v87 + *(int *)(v88 + 48), &qword_1015D7E00);
    sub_1000FF27C(v86, v87 + *(int *)(v88 + 64), &qword_1015D7C60);
    sub_1000FF2E0(v82, &qword_1015D7C60);
    sub_1000FF2E0(v80, &qword_1015D7E00);
    sub_1000FF2E0(v84, &qword_1015D7C88);
    sub_1000FF2E0(v86, &qword_1015D7C60);
    sub_1000FF2E0(v78, &qword_1015D7E00);
    return sub_1000FF2E0(v85, &qword_1015D7C88);
  }
  else
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_100276318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100274618@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D7CB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v92 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v76 - v7;
  uint64_t v86 = sub_1000FF33C(&qword_1015CFF60);
  __chkstk_darwin(v86);
  uint64_t v87 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v82);
  uint64_t v85 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Image.ResizingMode();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000FF33C(&qword_1015D09E8);
  __chkstk_darwin(v84);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000FF33C(&qword_1015D7CB8);
  uint64_t v88 = *(void *)(v17 - 8);
  uint64_t v89 = v17;
  __chkstk_darwin(v17);
  uint64_t v83 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015D7CC0);
  __chkstk_darwin(v19 - 8);
  uint64_t v90 = (uint64_t)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v76 - v22;
  if (a1)
  {
    uint64_t v91 = a2;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v24 = a1;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    unint64_t v93 = v23;
    if (v98)
    {
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Image.ResizingMode.stretch(_:), v11);
      uint64_t v25 = Image.resizable(capInsets:resizingMode:)();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v80 = v98;
      char v26 = v99;
      uint64_t v79 = v100;
      uint64_t v81 = v8;
      char v27 = v101;
      uint64_t v78 = v102;
      uint64_t v77 = v103;
      unint64_t v28 = v85;
      unint64_t v29 = &v85[*(int *)(v82 + 20)];
      uint64_t v30 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v31 = type metadata accessor for RoundedCornerStyle();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v29, v30, v31);
      __asm { FMOV            V0.2D, #4.0 }
      *unint64_t v28 = _Q0;
      uint64_t v37 = v87;
      sub_100275A58((uint64_t)v28, v87);
      *(_WORD *)(v37 + *(int *)(v86 + 36)) = 256;
      sub_1000FF27C(v37, (uint64_t)&v16[*(int *)(v84 + 36)], &qword_1015CFF60);
      uint64_t v38 = v80;
      *(void *)uint64_t v16 = v25;
      *((void *)v16 + 1) = v38;
      v16[16] = v26;
      uint64_t v23 = v93;
      *((void *)v16 + 3) = v79;
      v16[32] = v27;
      uint64_t v8 = v81;
      uint64_t v39 = v77;
      *((void *)v16 + 5) = v78;
      *((void *)v16 + 6) = v39;
      swift_retain();
      sub_1000FF2E0(v37, &qword_1015CFF60);
      sub_100275ABC((uint64_t)v28);
      swift_release();
      sub_100275D64();
      uint64_t v40 = (uint64_t)v83;
      View.accessibilityIdentifier(_:)();
      swift_release();
      sub_1000FF2E0((uint64_t)v16, &qword_1015D09E8);
      sub_100101750(v40, (uint64_t)v23, &qword_1015D7CB8);
      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v41 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v23, v41, 1, v89);
    uint64_t v42 = *(void **)&v24[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    uint64_t v43 = v24;
    id v44 = [v42 publisherAttribution];
    if (v44
      && (id v45 = [v44 displayName], swift_unknownObjectRelease(), v45))
    {
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v48 = v47;

      uint64_t v94 = v46;
      uint64_t v95 = v48;
      sub_100180324();
      uint64_t v49 = Text.init<A>(_:)();
      uint64_t v51 = v50;
      LOBYTE(v48) = v52 & 1;
      static Font.subheadline.getter();
      uint64_t v53 = Text.font(_:)();
      uint64_t v55 = v54;
      char v57 = v56;
      swift_release();
      sub_10017F958(v49, v51, v48);
      swift_bridgeObjectRelease();
      LODWORD(v94) = static HierarchicalShapeStyle.secondary.getter();
      uint64_t v58 = Text.foregroundStyle<A>(_:)();
      uint64_t v60 = v59;
      LOBYTE(v48) = v61 & 1;
      sub_10017F958(v53, v55, v57 & 1);
      uint64_t v23 = v93;
      swift_bridgeObjectRelease();
      static Font.Weight.medium.getter();
      uint64_t v62 = Text.fontWeight(_:)();
      uint64_t v64 = v63;
      uint64_t v66 = v65;
      char v68 = v67 & 1;
      sub_10017F958(v58, v60, v48);
      swift_bridgeObjectRelease();
      uint64_t v94 = v62;
      uint64_t v95 = v64;
      char v96 = v68;
      uint64_t v97 = v66;
      View.accessibilityIdentifier(_:)();
      sub_10017F958(v62, v64, v68);
      swift_bridgeObjectRelease();
      uint64_t v69 = sub_1000FF33C(&qword_1015D7C68);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v8, 0, 1, v69);
    }
    else
    {

      uint64_t v70 = sub_1000FF33C(&qword_1015D7C68);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v8, 1, 1, v70);
    }
    uint64_t v71 = v90;
    sub_1000FF27C((uint64_t)v23, v90, &qword_1015D7CC0);
    uint64_t v72 = v92;
    sub_1000FF27C((uint64_t)v8, v92, &qword_1015D7CB0);
    uint64_t v73 = v91;
    sub_1000FF27C(v71, v91, &qword_1015D7CC0);
    uint64_t v74 = sub_1000FF33C(&qword_1015D7CC8);
    sub_1000FF27C(v72, v73 + *(int *)(v74 + 48), &qword_1015D7CB0);
    sub_1000FF2E0((uint64_t)v8, &qword_1015D7CB0);
    sub_1000FF2E0((uint64_t)v23, &qword_1015D7CC0);
    sub_1000FF2E0(v72, &qword_1015D7CB0);
    return sub_1000FF2E0(v71, &qword_1015D7CC0);
  }
  else
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_100276318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100274F5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v81 = type metadata accessor for Image.ResizingMode();
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000FF33C(&qword_1015D7D98);
  __chkstk_darwin(v82);
  uint64_t v84 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000FF33C(&qword_1015D7DA0);
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000FF33C(&qword_1015D7DA8);
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v83 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D7DB0);
  __chkstk_darwin(v7 - 8);
  uint64_t v97 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v95 = (uint64_t)&v73 - v10;
  uint64_t v99 = sub_1000FF33C(&qword_1015CFF60);
  __chkstk_darwin(v99);
  uint64_t v101 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v12);
  uint64_t v100 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000FF33C(&qword_1015D7DB8);
  __chkstk_darwin(v92);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000FF33C(&qword_1015D7DC0);
  __chkstk_darwin(v16 - 8);
  uint64_t v93 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v91 = (char *)&v73 - v19;
  __chkstk_darwin(v20);
  uint64_t v102 = (uint64_t)&v73 - v21;
  if (a1)
  {
    uint64_t v22 = self;
    uint64_t v23 = a1;
    id v24 = [v22 sharedInstance];
    id v25 = [v24 joeColorForCuratedCollection:*(void *)&v23[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection]];

    uint64_t v26 = Color.init(_:)();
    uint64_t KeyPath = swift_getKeyPath();
    unint64_t v28 = v23;
    sub_1001FEF28();

    unint64_t v29 = v28;
    uint64_t v90 = v29;
    sub_1001FEF28();

    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v89 = v103;
    int v88 = v104;
    uint64_t v30 = v105;
    char v31 = v106;
    uint64_t v32 = v108;
    uint64_t v87 = v107;
    uint64_t v78 = v12;
    uint64_t v33 = *(int *)(v12 + 20);
    char v34 = v100;
    uint64_t v35 = &v100[v33];
    uint64_t v36 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v37 = type metadata accessor for RoundedCornerStyle();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(void (**)(void, void))(v38 + 104);
    unsigned int v77 = v36;
    uint64_t v76 = v37;
    uint64_t v75 = (void (*)(void, void, void))v39;
    uint64_t v74 = v38 + 104;
    v39(v35, v36);
    __asm { FMOV            V0.2D, #10.0 }
    long long v73 = _Q0;
    _OWORD *v34 = _Q0;
    uint64_t v45 = v101;
    sub_100275A58((uint64_t)v34, v101);
    *(_WORD *)(v45 + *(int *)(v99 + 36)) = 256;
    sub_1000FF27C(v45, (uint64_t)&v15[*(int *)(v92 + 36)], &qword_1015CFF60);
    *(void *)uint64_t v15 = KeyPath;
    *((void *)v15 + 1) = v26;
    *((void *)v15 + 2) = v89;
    unsigned char v15[24] = v88;
    *((void *)v15 + 4) = v30;
    v15[40] = v31;
    *((void *)v15 + 6) = v87;
    *((void *)v15 + 7) = v32;
    swift_retain();
    swift_retain();
    sub_1000FF2E0(v45, &qword_1015CFF60);
    sub_100275ABC((uint64_t)v34);
    swift_release();
    swift_release();
    sub_100275F70();
    uint64_t v46 = (uint64_t)v91;
    View.accessibilityIdentifier(_:)();
    sub_1000FF2E0((uint64_t)v15, &qword_1015D7DB8);
    uint64_t v47 = v102;
    sub_100101750(v46, v102, &qword_1015D7DC0);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v48 = v90;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v49 = v109;
    uint64_t v50 = 1;
    if (v109)
    {
      uint64_t v51 = v80;
      char v52 = v79;
      uint64_t v53 = v81;
      (*(void (**)(char *, void, uint64_t))(v80 + 104))(v79, enum case for Image.ResizingMode.stretch(_:), v81);
      uint64_t v92 = Image.resizable(capInsets:resizingMode:)();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
      uint64_t v54 = v48;
      sub_1001FEF28();

      uint64_t v55 = v54;
      sub_1001FF02C();

      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      char v56 = v109;
      LOBYTE(v52) = v110;
      uint64_t v57 = v111;
      char v58 = v112;
      uint64_t v59 = v113;
      uint64_t v60 = v114;
      uint64_t v61 = *(int *)(v78 + 20);
      uint64_t v91 = v49;
      uint64_t v62 = v100;
      v75(&v100[v61], v77, v76);
      _OWORD *v62 = v73;
      uint64_t v63 = v101;
      sub_100275A58((uint64_t)v62, v101);
      *(_WORD *)(v63 + *(int *)(v99 + 36)) = 256;
      uint64_t v64 = (uint64_t)v84;
      sub_1000FF27C(v63, (uint64_t)&v84[*(int *)(v82 + 36)], &qword_1015CFF60);
      *(void *)uint64_t v64 = v92;
      *(void *)(v64 + 8) = 0;
      *(_WORD *)(v64 + 16) = 257;
      *(void *)(v64 + 24) = v56;
      *(unsigned char *)(v64 + 32) = (_BYTE)v52;
      *(void *)(v64 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v57;
      uint64_t v47 = v102;
      *(unsigned char *)(v64 + 48) = v58;
      *(void *)(v64 + 56) = v59;
      *(void *)(v64 + 64) = v60;
      swift_retain();
      sub_1000FF2E0(v63, &qword_1015CFF60);
      sub_100275ABC((uint64_t)v62);
      swift_release();
      uint64_t v65 = v85;
      sub_1000FF27C(v64, v85, &qword_1015D7D98);
      *(unsigned char *)(v65 + *(int *)(v86 + 36)) = 1;
      sub_1000FF2E0(v64, &qword_1015D7D98);
      sub_10027603C();
      uint64_t v66 = (uint64_t)v83;
      View.accessibilityIdentifier(_:)();
      swift_release();
      sub_1000FF2E0(v65, &qword_1015D7DA0);
      uint64_t v67 = v95;
      sub_100101750(v66, v95, &qword_1015D7DA8);
      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v67 = v95;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v67, v50, 1, v96);
    uint64_t v68 = v93;
    sub_1000FF27C(v47, v93, &qword_1015D7DC0);
    uint64_t v69 = v97;
    sub_1000FF27C(v67, v97, &qword_1015D7DB0);
    uint64_t v70 = v98;
    sub_1000FF27C(v68, v98, &qword_1015D7DC0);
    uint64_t v71 = sub_1000FF33C(&qword_1015D7DE0);
    sub_1000FF27C(v69, v70 + *(int *)(v71 + 48), &qword_1015D7DB0);
    sub_1000FF2E0(v67, &qword_1015D7DB0);
    sub_1000FF2E0(v47, &qword_1015D7DC0);
    sub_1000FF2E0(v69, &qword_1015D7DB0);
    return sub_1000FF2E0(v68, &qword_1015D7DC0);
  }
  else
  {
    type metadata accessor for CuratedGuideViewModel();
    sub_100276318((unint64_t *)&qword_1015D4498, (void (*)(uint64_t))type metadata accessor for CuratedGuideViewModel);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100275A34@<X0>(uint64_t a1@<X8>)
{
  return sub_100272F18(*(char **)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_100275A3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100275A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100275ABC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100275B18()
{
  unint64_t result = qword_1015D7C18;
  if (!qword_1015D7C18)
  {
    sub_10010118C(&qword_1015CE8B0);
    sub_100276318(&qword_1015D7C20, (void (*)(uint64_t))&type metadata accessor for Divider);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7C18);
  }
  return result;
}

uint64_t sub_100275BDC()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100275C00()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100275C24(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D7C70);
  __chkstk_darwin(v2 - 8);
  sub_1000FF27C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1015D7C70);
  return EnvironmentValues.textCase.setter();
}

unint64_t sub_100275CBC()
{
  unint64_t result = qword_1015D7C90;
  if (!qword_1015D7C90)
  {
    sub_10010118C(&qword_1015D7C78);
    sub_1001010F8(&qword_1015D7C98, (uint64_t *)&unk_1015D8580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7C90);
  }
  return result;
}

unint64_t sub_100275D64()
{
  unint64_t result = qword_1015D7CD0;
  if (!qword_1015D7CD0)
  {
    sub_10010118C(&qword_1015D09E8);
    sub_100183878(&qword_1015D0FF8, &qword_1015D1000);
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7CD0);
  }
  return result;
}

uint64_t sub_100275E24()
{
  return sub_100275EF4(&qword_1015D7D10, &qword_1015D7CF0, (void (*)(void))sub_100275E54);
}

unint64_t sub_100275E54()
{
  unint64_t result = qword_1015D7D18;
  if (!qword_1015D7D18)
  {
    sub_10010118C(&qword_1015D7CE8);
    sub_1001010F8(&qword_1015D7D20, &qword_1015D7CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7D18);
  }
  return result;
}

uint64_t sub_100275EF4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100275F70()
{
  unint64_t result = qword_1015D7DC8;
  if (!qword_1015D7DC8)
  {
    sub_10010118C(&qword_1015D7DB8);
    sub_100275EF4(&qword_1015D7DD0, &qword_1015D7DD8, (void (*)(void))sub_100175178);
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7DC8);
  }
  return result;
}

unint64_t sub_10027603C()
{
  unint64_t result = qword_1015D7DE8;
  if (!qword_1015D7DE8)
  {
    sub_10010118C(&qword_1015D7DA0);
    sub_1002760B8();
    sub_1001835C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7DE8);
  }
  return result;
}

unint64_t sub_1002760B8()
{
  unint64_t result = qword_1015D7DF0;
  if (!qword_1015D7DF0)
  {
    sub_10010118C(&qword_1015D7D98);
    sub_100182B04();
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7DF0);
  }
  return result;
}

unint64_t sub_100276160()
{
  unint64_t result = qword_1015D7E10;
  if (!qword_1015D7E10)
  {
    sub_10010118C(&qword_1015D7E08);
    sub_10017FB14();
    sub_1001010F8(&qword_1015D0F08, &qword_1015D0F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7E10);
  }
  return result;
}

uint64_t sub_100276200()
{
  return sub_1001010F8(&qword_1015D7E20, &qword_1015D7E28);
}

unint64_t sub_100276240()
{
  unint64_t result = qword_1015D7E30;
  if (!qword_1015D7E30)
  {
    sub_10010118C(&qword_1015D7E38);
    sub_100275EF4(&qword_1015D7D08, &qword_1015D7CF8, (void (*)(void))sub_100275E24);
    sub_100276318((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7E30);
  }
  return result;
}

uint64_t sub_100276318(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100276468()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for RAPNotificationDetailsCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for RAPNotificationDetailsCoordinator()
{
  return self;
}

void sub_10027651C(void *a1, int a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    *(_DWORD *)(v7 + 24) = a2;
    *(void *)(v7 + 32) = v5;
    swift_retain();
    id v8 = v5;
    sub_100276E14(a1, (uint64_t)sub_100277730, v7);

    swift_release();
    swift_release();
  }
  else
  {
    if (qword_1015CBE78 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000F2248(v9, (uint64_t)qword_1015D7E40);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v10, "parentViewController is nil", v11, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1002766E4(void *a1, uint64_t a2, unsigned int a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (void *)Strong;
    if (sub_100276838(a1, a3, a4))
    {
      if (qword_1015CBE78 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_1000F2248(v9, (uint64_t)qword_1015D7E40);
      os_log_type_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Successfully open DetailsViewController", v12, 2u);
        swift_slowDealloc();
      }
    }
    else if (GEOConfigGetBOOL())
    {
      sub_100277A2C(a4);
    }
  }
}

id sub_100276838(void *a1, unsigned int a2, void *a3)
{
  if ([a1 reportStatus] != 2 && objc_msgSend(a1, "reportStatus") != 1)
  {
    if (qword_1015CBE78 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_1000F2248(v29, (uint64_t)qword_1015D7E40);
    id v30 = a1;
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v26, v31))
    {

      return 0;
    }
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 33554688;
    [v30 reportStatus];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v26, v31, "Should not open a rap with status:%hd", v32, 6u);
    goto LABEL_21;
  }
  id v7 = [a1 rapResponse];
  if (!v7)
  {
    if (qword_1015CBE78 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000F2248(v25, (uint64_t)qword_1015D7E40);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v26, v27)) {
      goto LABEL_22;
    }
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Empty rapResponse", v28, 2u);
LABEL_21:
    swift_slowDealloc();
LABEL_22:

    return 0;
  }
  id v8 = v7;
  id v9 = [objc_allocWithZone((Class)type metadata accessor for RAPNotificationDetailsViewModel()) initWithRapRecord:a1];
  if (!v9)
  {
    if (qword_1015CBE78 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_1000F2248(v33, (uint64_t)qword_1015D7E40);
    char v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Failed to build ViewModel", v36, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  os_log_type_t v10 = v9;
  if ([a1 reportStatus] != 2)
  {
    id v22 = 0;
    id v11 = 0;
LABEL_32:
    id v38 = [objc_allocWithZone((Class)RAPNotificationDetailsViewController) initWithViewModel:v10 report:v11 question:v22];
    [v38 setDelegate:v3];
    id v39 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v38];
    [v39 setModalPresentationStyle:2];
    id v40 = v39;
    uint64_t v37 = 1;
    [a3 _maps_topMostPresentViewController:v40 animated:1 completion:0];

    return (id)v37;
  }
  id v11 = sub_1002778FC(a3);
  if (!v11)
  {
    id v22 = 0;
    goto LABEL_32;
  }
  unsigned int v43 = a2;
  id v12 = [a1 communityIdentifier];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v15 = v14;

  swift_bridgeObjectRelease();
  id result = [v8 responseId];
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v18 = v13 & 0xFFFFFFFFFFFFLL;
    if ((v15 & 0x2000000000000000) != 0) {
      uint64_t v18 = HIBYTE(v15) & 0xF;
    }
    BOOL v42 = v18 != 0;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v19 = [a1 reportID];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v41 = objc_allocWithZone((Class)RAPUserResponseQuestion);
    id v11 = v11;
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = [v41 initWithReport:v11 parentQuestion:0 responseID:v20 reportID:v21 isAnonymous:v42];

    [v11 setInitialQuestion:v22];
    NSString v23 = [a1 reportID];
    if (!v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v11 setPreviousFeedbackID:v23, v41];

    id v24 = [v11 combinedUserPath];
    [v24 addNativePath:v43];

    goto LABEL_32;
  }
  __break(1u);
  return result;
}

void sub_100276E14(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = [a1 reportID];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  id v11 = *(void **)(v3 + OBJC_IVAR____TtC4Maps33RAPNotificationDetailsCoordinator_rapStatusDownloader);
  sub_1000FF33C(&qword_1015CE220);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100F5CF70;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v10;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  unint64_t v14 = (void *)swift_allocObject();
  id v14[2] = v8;
  void v14[3] = v10;
  void v14[4] = a2;
  v14[5] = a3;
  void v14[6] = a1;
  void v17[4] = sub_100277788;
  objc_super v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_10008C380;
  void v17[3] = &unk_1012E09C8;
  unint64_t v15 = _Block_copy(v17);
  swift_retain();
  id v16 = a1;
  swift_release();
  [v11 updateSubmissionStatusesWithIdentifier:isa completion:v15];
  _Block_release(v15);
}

void sub_100277010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = self;
  NSString v9 = String._bridgeToObjectiveC()();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  void v10[3] = a4;
  long long v10[4] = a5;
  v13[4] = sub_1002777D8;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_1002C689C;
  _OWORD v13[3] = &unk_1012E0A18;
  id v11 = _Block_copy(v13);
  swift_retain();
  id v12 = a5;
  swift_release();
  [v8 fetchRAPRecordsMatchingProblemId:v9 completion:v11];
  _Block_release(v11);
}

uint64_t sub_100277134(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010B3CC();
  unint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  unint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  _OWORD v15[5] = a4;
  aBlock[4] = sub_10027782C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012E0A68;
  id v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  id v17 = a4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10010B9B0();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

void sub_1002773D4(unint64_t a1, void (*a2)(id), uint64_t a3, void *a4)
{
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    a2(a4);
    return;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v7 + 16))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(a1 + 32);
  }
  id v10 = v9;
  swift_bridgeObjectRelease();
  a2(v10);
}

uint64_t sub_100277618()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1015D7E40);
  sub_1000F2248(v0, (uint64_t)qword_1015D7E40);
  type metadata accessor for RAPNotificationDetailsCoordinator();
  sub_1000FF33C((uint64_t *)&unk_1015D7F00);
  String.init<A>(describing:)();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1002776B8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002776F0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100277730(void *a1)
{
  sub_1002766E4(a1, *(void *)(v1 + 16), *(_DWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100277740()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100277788()
{
  sub_100277010(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100277798()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002777D8(uint64_t a1)
{
  return sub_100277134(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1002777E4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10027782C()
{
  sub_1002773D4(*(void *)(v0 + 16), *(void (**)(id))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

id sub_100277838()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC4Maps33RAPNotificationDetailsCoordinator_rapStatusDownloader;
  id v2 = objc_allocWithZone((Class)RAPSubmissionStatusDownloader);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  swift_unknownObjectWeakAssign();

  v5.id receiver = v3;
  v5.Class super_class = (Class)type metadata accessor for RAPNotificationDetailsCoordinator();
  return [super init];
}

id sub_1002778FC(void *a1)
{
  id v1 = [a1 _maps_mapsSceneDelegate];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = [self sharedMapsDelegate];
  if (!v3)
  {

    return 0;
  }
  uint64_t v4 = v3;
  id v5 = [objc_allocWithZone((Class)RAPAppStateCreator) initWithSceneDelegate:v2];
  id v6 = [v5 createReportAProblemAppState];
  id result = [v4 submissionManager];
  if (result)
  {
    uint64_t v8 = result;
    id v9 = objc_allocWithZone((Class)RAPReport);
    id v10 = v6;
    id v11 = [v9 initWithContext:v10 submitter:v8];

    return v11;
  }
  __break(1u);
  return result;
}

void sub_100277A2C(void *a1)
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v2.super.Class isa = (Class)qword_101611820;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v17._uint64_t countAndFlagsBits = 0xD000000000000035;
  v17._uint64_t object = (void *)0x8000000100F81680;
  v3._uint64_t object = (void *)0x8000000100F81640;
  v4._uint64_t object = (void *)0x8000000100F81660;
  v4._uint64_t countAndFlagsBits = 0xD000000000000014;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v17);
  v18._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  v5._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v6._uint64_t countAndFlagsBits = 0xD000000000000043;
  v18._uint64_t object = (void *)0x8000000100F81750;
  v6._uint64_t object = (void *)0x8000000100F816C0;
  v5._uint64_t object = (void *)0x8000000100F81710;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, v2, v5, v18);
  v19._uint64_t countAndFlagsBits = 0xD000000000000036;
  v19._uint64_t object = (void *)0x8000000100F81790;
  v7._uint64_t countAndFlagsBits = 0x4B4F205D5041525BLL;
  v7._uint64_t object = (void *)0xE800000000000000;
  v8._uint64_t countAndFlagsBits = 19279;
  v8._uint64_t object = (void *)0xE200000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, v2, v8, v19);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [self alertControllerWithTitle:v9 message:v10 preferredStyle:1];

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [self actionWithTitle:v12 style:0 handler:0];

  [v11 addAction:v13];
  aBlock[4] = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012E0A90;
  unint64_t v14 = _Block_copy(aBlock);
  id v15 = v11;
  [a1 _maps_topMostPresentViewController:v15 animated:1 completion:v14];
  _Block_release(v14);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitDetourTime()
{
  return &type metadata for PlaceSummaryUnitDetourTime;
}

void destroy for NearbyTransitView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  NSBundle v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for NearbyTransitView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(unsigned char *)(a2 + 40);
  Swift::String v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for NearbyTransitView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 56);
  Swift::String v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v5;
  id v6 = v5;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for NearbyTransitView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(unsigned char *)(a2 + 40);
  swift_release();
  uint64_t v4 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitView()
{
  return &type metadata for NearbyTransitView;
}

uint64_t sub_10027802C()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_100278048(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    id result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002780A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  NSString v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100278170@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v109 = a1;
  uint64_t v137 = a3;
  uint64_t v6 = type metadata accessor for ControlSize();
  uint64_t v130 = *(void *)(v6 - 8);
  uint64_t v131 = v6;
  __chkstk_darwin(v6);
  long long v127 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  char v110 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v108 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  NSString v10 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000FF33C(&qword_1015D82D0);
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v119 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000FF33C(&qword_1015D82D8);
  __chkstk_darwin(v106);
  id v13 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1000FF33C(&qword_1015D82E0);
  __chkstk_darwin(v117);
  id v15 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000FF33C(&qword_1015D82E8);
  __chkstk_darwin(v120);
  uint64_t v107 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1000FF33C(&qword_1015D82F0);
  __chkstk_darwin(v123);
  uint64_t v125 = (uint64_t)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1000FF33C(&qword_1015D82F8);
  __chkstk_darwin(v124);
  uint64_t v133 = (uint64_t)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1000FF33C(&qword_1015D8300);
  __chkstk_darwin(v129);
  uint64_t v134 = (uint64_t)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_1000FF33C(&qword_1015D8308);
  __chkstk_darwin(v128);
  unsigned __int8 v136 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1000FF33C((uint64_t *)&unk_1015D8310);
  __chkstk_darwin(v132);
  uint64_t v135 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v22);
  id v24 = (double *)((char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  os_log_type_t v27 = (double *)((char *)&v106 - v26);
  uint64_t v28 = sub_1000FF33C(&qword_1015D09E0);
  __chkstk_darwin(v28 - 8);
  id v30 = (char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000FF33C(&qword_1015D8320);
  __chkstk_darwin(v31);
  uint64_t v138 = (uint64_t)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = v22;
  uint64_t v33 = (char *)v27 + *(int *)(v22 + 20);
  uint64_t v34 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v35 = type metadata accessor for RoundedCornerStyle();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(void (**)(char *, void, uint64_t))(v36 + 104);
  unsigned int v115 = v34;
  uint64_t v114 = v35;
  uint64_t v113 = v37;
  uint64_t v112 = v36 + 104;
  ((void (*)(char *, uint64_t))v37)(v33, v34);
  *os_log_type_t v27 = a4;
  v27[1] = a4;
  int v139 = a2;
  if (a2)
  {
    uint64_t v38 = static Color.clear.getter();
  }
  else
  {
    id v39 = [self systemGray3Color];
    uint64_t v38 = Color.init(uiColor:)();
  }
  uint64_t v40 = v38;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  sub_100294160((uint64_t)v27, (uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  id v41 = &v30[*(int *)(sub_1000FF33C(&qword_1015D0A08) + 36)];
  long long v42 = v141;
  *(_OWORD *)id v41 = v140;
  *((_OWORD *)v41 + 1) = v42;
  *((void *)v41 + 4) = v142;
  uint64_t v43 = sub_1000FF33C(&qword_1015D0A10);
  *(void *)&v30[*(int *)(v43 + 52)] = v40;
  *(_WORD *)&v30[*(int *)(v43 + 56)] = 256;
  uint64_t v44 = static Alignment.center.getter();
  uint64_t v46 = v45;
  uint64_t v47 = (uint64_t *)&v30[*(int *)(sub_1000FF33C(&qword_1015D0A18) + 36)];
  *uint64_t v47 = v44;
  v47[1] = v46;
  sub_1002942A0((uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  if (v139) {
    uint64_t v48 = static Color.blue.getter();
  }
  else {
    uint64_t v48 = static Color.clear.getter();
  }
  uint64_t v49 = v48;
  char v50 = static Edge.Set.all.getter();
  uint64_t v51 = v138;
  sub_1000FF27C((uint64_t)v30, v138, &qword_1015D09E0);
  uint64_t v52 = v51 + *(int *)(v31 + 36);
  *(void *)uint64_t v52 = v49;
  *(unsigned char *)(v52 + 8) = v50;
  sub_1000FF2E0((uint64_t)v30, &qword_1015D09E0);
  ButtonStyleConfiguration.label.getter();
  uint64_t v53 = v110;
  BorderedProminentButtonStyle.init()();
  sub_10028BA3C(&qword_1015D13B0, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
  sub_10028BA3C(&qword_1015D8328, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v54 = v119;
  uint64_t v55 = v111;
  uint64_t v56 = v118;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v53, v56);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v10, v55);
  uint64_t v58 = v130;
  uint64_t v57 = v131;
  uint64_t v59 = v127;
  (*(void (**)(char *, void, uint64_t))(v130 + 104))(v127, enum case for ControlSize.small(_:), v131);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = (uint64_t *)&v13[*(int *)(v106 + 36)];
  uint64_t v62 = sub_1000FF33C(&qword_1015D8330);
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))((char *)v61 + *(int *)(v62 + 28), v59, v57);
  uint64_t *v61 = KeyPath;
  uint64_t v63 = v121;
  uint64_t v64 = v122;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v13, v54, v122);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v54, v64);
  uint64_t v65 = static Font.subheadline.getter();
  uint64_t v66 = swift_getKeyPath();
  sub_1000FF27C((uint64_t)v13, (uint64_t)v15, &qword_1015D82D8);
  uint64_t v67 = (uint64_t *)&v15[*(int *)(v117 + 36)];
  *uint64_t v67 = v66;
  v67[1] = v65;
  sub_1000FF2E0((uint64_t)v13, &qword_1015D82D8);
  LOBYTE(v65) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v76 = v107;
  sub_1000FF27C((uint64_t)v15, v107, &qword_1015D82E0);
  uint64_t v77 = v76 + *(int *)(v120 + 36);
  *(unsigned char *)uint64_t v77 = v65;
  *(void *)(v77 + 8) = v69;
  *(void *)(v77 + 16) = v71;
  *(void *)(v77 + 24) = v73;
  *(void *)(v77 + 32) = v75;
  *(unsigned char *)(v77 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  sub_1000FF2E0((uint64_t)v15, &qword_1015D82E0);
  LOBYTE(v65) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v86 = v125;
  sub_1000FF27C(v76, v125, &qword_1015D82E8);
  uint64_t v87 = v86 + *(int *)(v123 + 36);
  *(unsigned char *)uint64_t v87 = v65;
  *(void *)(v87 + 8) = v79;
  *(void *)(v87 + 16) = v81;
  *(void *)(v87 + 24) = v83;
  *(void *)(v87 + 32) = v85;
  *(unsigned char *)(v87 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  sub_1000FF2E0(v76, &qword_1015D82E8);
  uint64_t v88 = static Color.blue.getter();
  uint64_t v89 = swift_getKeyPath();
  uint64_t v90 = v133;
  sub_1000FF27C(v86, v133, &qword_1015D82F0);
  uint64_t v91 = (uint64_t *)(v90 + *(int *)(v124 + 36));
  *uint64_t v91 = v89;
  v91[1] = v88;
  sub_1000FF2E0(v86, &qword_1015D82F0);
  if (v139)
  {
    uint64_t v92 = static Color.white.getter();
  }
  else
  {
    id v93 = [self labelColor];
    uint64_t v92 = Color.init(uiColor:)();
  }
  uint64_t v94 = v92;
  uint64_t v95 = v134;
  sub_1000FF27C(v90, v134, &qword_1015D82F8);
  *(void *)(v95 + *(int *)(v129 + 36)) = v94;
  sub_1000FF2E0(v90, &qword_1015D82F8);
  uint64_t v96 = static Alignment.center.getter();
  uint64_t v98 = v97;
  uint64_t v99 = (uint64_t)v136;
  uint64_t v100 = (uint64_t)&v136[*(int *)(v128 + 36)];
  uint64_t v101 = v138;
  sub_1000FF27C(v138, v100, &qword_1015D8320);
  uint64_t v102 = (uint64_t *)(v100 + *(int *)(sub_1000FF33C((uint64_t *)&unk_1015D8338) + 36));
  uint64_t *v102 = v96;
  v102[1] = v98;
  sub_100101750(v95, v99, &qword_1015D8300);
  v113((char *)v24 + *(int *)(v126 + 20), v115, v114);
  double *v24 = a4;
  v24[1] = a4;
  uint64_t v103 = (uint64_t)v135;
  uint64_t v104 = (uint64_t)&v135[*(int *)(v132 + 36)];
  sub_100294160((uint64_t)v24, v104, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v104 + *(int *)(sub_1000FF33C(&qword_1015CFF60) + 36)) = 256;
  sub_1000FF27C(v99, v103, &qword_1015D8308);
  sub_1002942A0((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000FF2E0(v99, &qword_1015D8308);
  sub_1000FF2E0(v101, &qword_1015D8320);
  return sub_100101750(v103, v137, (uint64_t *)&unk_1015D8310);
}

uint64_t sub_100278EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100278170(a1, *(unsigned __int8 *)v2, a2, v2[1]);
}

uint64_t sub_100278EC0()
{
  id v1 = *(void **)v0;
  if (*(void *)v0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v2 = v1;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    static Axis.Set.horizontal.getter();
    uint64_t v3 = swift_allocObject();
    long long v4 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v3 + 56) = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v3 + 72) = v4;
    *(_OWORD *)(v3 + 88) = *(_OWORD *)(v0 + 64);
    long long v5 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v3 + 24) = *(_OWORD *)v0;
    *(void *)(v3 + 16) = v7;
    *(unsigned char *)(v3 + 104) = *(unsigned char *)(v0 + 80);
    *(_OWORD *)(v3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v5;
    __chkstk_darwin(v3);
    sub_1002925B8((void **)v0);
    sub_1000FF33C(&qword_1015D80A8);
    sub_100292640(&qword_1015D80B0, &qword_1015D80A8, &qword_1015D80B8, &qword_1015D80C0);
    ScrollView.init(_:showsIndicators:content:)();
    sub_1000FF33C(&qword_1015D80C8);
    ScrollView.scrollsContentToBeginningInRightToLeft.setter();
    return swift_release();
  }
  else
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002790CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D80C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0x401C000000000000;
  v6[16] = 0;
  sub_1000FF33C(&qword_1015D80D0);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_10028BCF0(v7);
  swift_bridgeObjectRelease();
  v23[1] = v8;
  swift_getKeyPath();
  uint64_t v9 = swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(_OWORD *)(a1 + 64);
  *(unsigned char *)(v9 + 96) = *(unsigned char *)(a1 + 80);
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 32) = v11;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10029274C;
  *(void *)(v12 + 24) = v9;
  sub_1002925B8((void **)a1);
  sub_1000FF33C(&qword_1015D80D8);
  sub_1000FF33C(&qword_1015D80E0);
  sub_1001010F8(&qword_1015D80E8, &qword_1015D80D8);
  sub_1002927C4();
  ForEach<>.init(_:id:content:)();
  LOBYTE(a1) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_1000FF27C((uint64_t)v6, a2, &qword_1015D80C0);
  uint64_t v21 = a2 + *(int *)(sub_1000FF33C(&qword_1015D80A8) + 36);
  *(unsigned char *)uint64_t v21 = a1;
  *(void *)(v21 + 8) = v14;
  *(void *)(v21 + 16) = v16;
  *(void *)(v21 + 24) = v18;
  *(void *)(v21 + 32) = v20;
  *(unsigned char *)(v21 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  return sub_1000FF2E0((uint64_t)v6, &qword_1015D80C0);
}

uint64_t sub_100279330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v38 = a5;
  uint64_t v49 = a4;
  uint64_t v36 = a1;
  uint64_t v48 = a7;
  uint64_t v10 = type metadata accessor for AccessibilityTraits();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000FF33C(&qword_1015D8058);
  uint64_t v39 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D8108);
  uint64_t v43 = *(void *)(v14 - 8);
  uint64_t v44 = v14;
  __chkstk_darwin(v14);
  uint64_t v37 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000FF33C(&qword_1015D80E0);
  __chkstk_darwin(v41);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v40 = (char *)&v36 - v19;
  long long v20 = *(_OWORD *)(a6 + 32);
  long long v50 = *(_OWORD *)(a6 + 16);
  long long v51 = v20;
  long long v52 = *(_OWORD *)(a6 + 48);
  swift_bridgeObjectRetain();
  sub_1000FF33C((uint64_t *)&unk_1015D8110);
  Binding.wrappedValue.getter();
  uint64_t v21 = v55;
  if (v53 == a2 && v54 == a3 || (char v22 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
    char v22 = sub_10019E5AC(v21, v49);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)&long long v50 = a2;
  *((void *)&v50 + 1) = a3;
  uint64_t v23 = swift_allocObject();
  long long v24 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v23 + 64) = v24;
  *(_OWORD *)(v23 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(_OWORD *)(a6 + 64);
  *(unsigned char *)(v23 + 96) = *(unsigned char *)(a6 + 80);
  long long v25 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v23 + 32) = v25;
  *(void *)(v23 + 104) = a2;
  *(void *)(v23 + 112) = a3;
  uint64_t v26 = v38;
  *(void *)(v23 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v49;
  *(void *)(v23 + 128) = v26;
  *(void *)(v23 + 136) = v36;
  *(void *)(v23 + 144) = a2;
  *(void *)(v23 + 152) = a3;
  swift_bridgeObjectRetain_n();
  sub_1002925B8((void **)a6);
  sub_100180324();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  Button<>.init<A>(_:action:)();
  LOBYTE(v5sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v22 & 1;
  *((void *)&v50 + 1) = 0x4030000000000000;
  uint64_t v27 = sub_1001010F8(&qword_1015D80A0, &qword_1015D8058);
  unint64_t v28 = sub_1002928E4();
  uint64_t v29 = v37;
  uint64_t v30 = v42;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v30);
  if (v22)
  {
    uint64_t v31 = v45;
    static AccessibilityTraits.isSelected.getter();
    uint64_t v32 = v47;
  }
  else
  {
    *(void *)&long long v50 = _swiftEmptyArrayStorage;
    sub_10028BA3C(&qword_1015D4E30, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_1000FF33C((uint64_t *)&unk_1015D8120);
    sub_1001010F8(&qword_1015D4E38, (uint64_t *)&unk_1015D8120);
    uint64_t v31 = v45;
    uint64_t v32 = v47;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  *(void *)&long long v50 = v30;
  *((void *)&v50 + 1) = &type metadata for FilterBarButtonStyle;
  *(void *)&long long v51 = v27;
  *((void *)&v51 + 1) = v28;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = v44;
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v33);
  uint64_t v34 = (uint64_t)v40;
  ModifiedContent<>.accessibility(identifier:)();
  sub_1000FF2E0((uint64_t)v17, &qword_1015D80E0);
  return sub_100101750(v34, v48, &qword_1015D80E0);
}

void sub_1002798E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  sub_1000FF33C(&qword_1015D8130);
  Binding.wrappedValue.setter();
  long long v22 = *(_OWORD *)(a1 + 32);
  long long v23 = *(_OWORD *)(a1 + 48);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000FF33C((uint64_t *)&unk_1015D8110);
  Binding.wrappedValue.setter();
  uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v21 = v15;
  v16._uint64_t countAndFlagsBits = 8236;
  v16._uint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  v17._uint64_t countAndFlagsBits = a7;
  v17._uint64_t object = a8;
  String.append(_:)(v17);
  uint64_t v18 = self;
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 captureUserAction:219 target:44 value:v19 a6:a3 a4:a4 a5:a5 v20:v20 v21:v21 v22:v22 v23:v23];
}

uint64_t sub_100279A58()
{
  return sub_100278EC0();
}

uint64_t sub_100279AA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v26 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  __chkstk_darwin(v3);
  uint64_t v21 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v5 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D8D88);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D8D90);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000FF33C(&qword_1015D8D98);
  __chkstk_darwin(v22);
  Swift::String v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static VerticalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 1;
  uint64_t v17 = sub_1000FF33C(&qword_1015D8DA0);
  sub_100279E48(v2, &v10[*(int *)(v17 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v18 = sub_1001010F8(&qword_1015D8DA8, &qword_1015D8D88);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  sub_1000FF2E0((uint64_t)v10, &qword_1015D8D88);
  NSString v19 = v21;
  static AccessibilityTraits.isHeader.getter();
  uint64_t v27 = v8;
  uint64_t v28 = v18;
  swift_getOpaqueTypeConformance2();
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v25);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  ModifiedContent<>.accessibilityIdentifier(_:)();
  return sub_1000FF2E0((uint64_t)v16, &qword_1015D8D98);
}

void sub_100279E48(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v82 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v80 = (char *)v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D8DB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v79 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000FF33C(&qword_1015D8DB8);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v7 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000FF33C(&qword_1015D8DC0);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v83 = (char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D8DC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v99 = (uint64_t)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v100 = (uint64_t)v78 - v12;
  uint64_t v13 = (void *)sub_1002591E0(*(void *)(a1 + 40));
  BOOL v14 = *(unsigned char *)(a1 + 48) == 1;
  uint64_t v94 = v13;
  uint64_t v84 = v7;
  if (v14
    && (id v15 = [self mainScreen],
        [v15 scale],
        v15,
        (id v16 = (id)MKTransitIncidentIcon()) != 0))
  {
    uint64_t v17 = v16;
    uint64_t v18 = static Alignment.bottomTrailing.getter();
    uint64_t v20 = v19;
    swift_bridgeObjectRetain();
    id v21 = v17;
    uint64_t v22 = Image.init(uiImage:)();
    sub_10019F7BC(v13, 1);
    sub_10019F808(v13, 1);
    uint64_t v110 = v18;
    *(void *)&long long v111 = v20;
    *((void *)&v111 + 1) = v13;
    long long v112 = xmmword_100F69540;
    v114[0] = 0;
    uint64_t v113 = 0;
    *(_OWORD *)&v114[1] = xmmword_100F69550;
    v114[3] = v22;
    long long v115 = xmmword_100F69560;
    char v116 = 0;
    sub_10019F7BC(v13, 1);
    swift_retain();
    sub_1000FF33C(&qword_1015D8DD0);
    sub_1001010F8((unint64_t *)&unk_1015D8DD8, &qword_1015D8DD0);
    sub_100173868();
    _ConditionalContent<>.init(storage:)();

    sub_10019F808(v13, 1);
    swift_release();
  }
  else
  {
    uint64_t v110 = (uint64_t)v13;
    long long v111 = xmmword_100F69540;
    long long v112 = 0uLL;
    uint64_t v113 = 0x4038000000000000;
    memset(v114, 0, sizeof(v114));
    long long v115 = 0u;
    char v116 = 1;
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015D8DD0);
    sub_1001010F8((unint64_t *)&unk_1015D8DD8, &qword_1015D8DD0);
    sub_100173868();
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t countAndFlagsBits = (void *)v117._countAndFlagsBits;
  uint64_t object = v117._object;
  uint64_t v107 = v118;
  uint64_t v106 = v119;
  uint64_t v98 = v120;
  uint64_t v105 = v121;
  uint64_t v97 = v122;
  uint64_t v96 = v123;
  uint64_t v104 = v124;
  uint64_t v103 = v125;
  uint64_t v102 = v126;
  uint64_t v101 = v127;
  int v91 = v128;
  uint64_t v23 = *(void **)(a1 + 8);
  v117._uint64_t countAndFlagsBits = *(void *)a1;
  v117._uint64_t object = v23;
  unint64_t v24 = sub_100180324();
  swift_bridgeObjectRetain();
  v78[1] = v24;
  uint64_t v25 = Text.init<A>(_:)();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  type metadata accessor for NearbyTransitLineSectionHeaderView(0);
  uint64_t v30 = Text.font(_:)();
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  sub_10017F958(v25, v27, v29);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v90 = Text.fontWeight(_:)();
  uint64_t v89 = v35;
  char v37 = v36;
  uint64_t v95 = v38;
  sub_10017F958(v30, v32, v34);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = 1;
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    uint64_t v40 = Image.init(systemName:)();
    uint64_t v41 = static Color.yellow.getter();
    uint64_t v42 = (void *)swift_getKeyPath();
    uint64_t v43 = type metadata accessor for Font.Design();
    uint64_t v44 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v79, 1, 1, v43);
    uint64_t v45 = static Font.system(_:design:weight:)();
    sub_1000FF2E0(v44, &qword_1015D8DB0);
    uint64_t v46 = swift_getKeyPath();
    v117._uint64_t countAndFlagsBits = v40;
    v117._uint64_t object = v42;
    uint64_t v118 = (void *)v41;
    uint64_t v119 = v46;
    uint64_t v120 = (void *)v45;
    uint64_t v47 = v80;
    static AccessibilityChildBehavior.ignore.getter();
    uint64_t v48 = sub_1000FF33C((uint64_t *)&unk_1015D0B00);
    unint64_t v49 = sub_1001812E4();
    long long v50 = v84;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v47, v82);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v129._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v129._uint64_t object = (void *)0x8000000100F81FA0;
    v51._uint64_t object = (void *)0x8000000100F81F80;
    v51._uint64_t countAndFlagsBits = 0xD000000000000017;
    v52._uint64_t countAndFlagsBits = 0x64656E6E6950;
    v52._uint64_t object = (void *)0xE600000000000000;
    Swift::String v117 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)qword_101611820, v52, v129);
    uint64_t v110 = v48;
    *(void *)&long long v111 = v49;
    swift_getOpaqueTypeConformance2();
    uint64_t v53 = (uint64_t)v83;
    uint64_t v54 = v86;
    View.accessibilityValue<A>(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v54);
    sub_100101750(v53, v100, &qword_1015D8DC0);
    uint64_t v39 = 0;
  }
  uint64_t v55 = v100;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v100, v39, 1, v93);
  char v56 = v37 & 1;
  char v57 = v91;
  LOBYTE(v117._countAndFlagsBits) = v91;
  LOBYTE(v11sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v37 & 1;
  sub_1000FF27C(v55, v99, &qword_1015D8DC8);
  uint64_t v58 = v87;
  uint64_t v59 = object;
  *uint64_t v87 = countAndFlagsBits;
  v58[1] = v59;
  uint64_t v60 = v106;
  v58[2] = v107;
  v58[3] = v60;
  uint64_t v61 = v105;
  v58[4] = v98;
  v58[5] = v61;
  uint64_t v62 = v96;
  v58[6] = v97;
  v58[7] = v62;
  uint64_t v63 = v104;
  uint64_t v64 = v103;
  v58[8] = v104;
  v58[9] = v64;
  uint64_t v103 = v64;
  uint64_t v65 = v102;
  uint64_t v66 = v101;
  v58[10] = v102;
  v58[11] = v66;
  uint64_t v101 = v66;
  *((unsigned char *)v58 + 96) = v57;
  uint64_t v67 = v90;
  uint64_t v68 = v89;
  v58[13] = v90;
  v58[14] = v68;
  *((unsigned char *)v58 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v37 & 1;
  uint64_t v69 = KeyPath;
  v58[16] = v95;
  v58[17] = v69;
  v58[18] = 1;
  *((unsigned char *)v58 + 152) = 0;
  v58[20] = 0;
  *((unsigned char *)v58 + 168) = 1;
  uint64_t v70 = (uint64_t)v58 + *(int *)(sub_1000FF33C(&qword_1015D8DE8) + 80);
  uint64_t v71 = v99;
  sub_1000FF27C(v99, v70, &qword_1015D8DC8);
  uint64_t v76 = v65;
  uint64_t v77 = v66;
  uint64_t v75 = v63;
  uint64_t v72 = v98;
  uint64_t v73 = v97;
  uint64_t v74 = v96;
  sub_10029B78C(countAndFlagsBits, (char)object, v107, v106, v98, v105, v97, v96, v75, v64, v76, v77, v57);
  sub_10017FDF0(v67, v68, v56);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10017FDF0(v67, v68, v56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1000FF2E0(v100, &qword_1015D8DC8);
  sub_10017F958(v67, v68, v56);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000FF2E0(v71, &qword_1015D8DC8);
  sub_10017F958(v67, v68, v110);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10029B814(countAndFlagsBits, (char)object, v107, v106, v72, v105, v73, v74, v104, v103, v102, v101, v117._countAndFlagsBits);
}

void *sub_10027AA98()
{
  uint64_t result = &_swiftEmptySetSingleton;
  uint64_t v2 = _swiftEmptyArrayStorage;
  unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v20 = &_swiftEmptySetSingleton;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3] >> 1;
  uint64_t v5 = v4 - v3;
  if (v4 == v3)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v2;
  }
  else
  {
    if (v4 > v3)
    {
      uint64_t v6 = v0[1];
      swift_unknownObjectRetain();
      uint64_t v7 = v6 + 80 * v3 + 40;
      uint64_t v8 = &selRef_stashedRoutePlanningSession;
      while (1)
      {
        uint64_t v9 = *(void **)(v7 - 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v10 = [v9 v8[505]];
        if (v10)
        {
          id v11 = [v10 name];
          if (v11)
          {
            uint64_t v12 = v11;
            uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v15 = v14;

            uint64_t v16 = (uint64_t)v20;
            swift_bridgeObjectRetain();
            char v17 = sub_10025668C(v13, v15, v16);
            swift_bridgeObjectRelease();
            if (v17)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v8 = &selRef_stashedRoutePlanningSession;
            }
            else
            {
              sub_10013C798(&v18, v13, v15);
              swift_bridgeObjectRelease();
              swift_unknownObjectRetain();
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              uint64_t v8 = &selRef_stashedRoutePlanningSession;
            }
            goto LABEL_6;
          }
          swift_unknownObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_6:
        v7 += 80;
        if (!--v5)
        {
          swift_unknownObjectRelease();
          uint64_t v2 = (void *)v19;
          goto LABEL_15;
        }
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10027AD14(uint64_t a1, double a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_1000FF33C(&qword_1015D88B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v78 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorScheme();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v78 - v13;
  unint64_t v85 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v80 = type metadata accessor for NearbyTransitCollapsedLinesView(0);
  sub_1001272E8((uint64_t)v14);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ColorScheme.dark(_:), v8);
  char v15 = static ColorScheme.== infix(_:_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  v16(v14, v8);
  uint64_t v84 = &_swiftEmptySetSingleton;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return v85;
  }
  unint64_t v79 = v3;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  double v19 = 0.0;
  uint64_t v20 = NSCollectionLayoutEdgeSpacing_ptr;
  id v21 = &selRef_loadListEditAllActions;
  uint64_t v22 = &selRef_retrievingLOIsOfTypes;
  unsigned int v82 = v15 & 1;
  uint64_t v81 = v17;
  while (1)
  {
    uint64_t v24 = *(void *)(a1 + 8 * v18 + 32);
    if (!v24) {
      goto LABEL_4;
    }
    uint64_t v25 = self;
    swift_unknownObjectRetain_n();
    id v26 = [v25 v21[305]];
    [v26 v22[455]];
    double v28 = v27;

    id v29 = [self sharedInstance];
    uint64_t v30 = (UIImage *)[v29 imageForArtwork:v24 size:6 featureType:2 scale:v82 nightMode:v28];

    if (v30) {
      break;
    }
    swift_unknownObjectRelease_n();
LABEL_4:
    double v23 = v19;
LABEL_5:
    ++v18;
    double v19 = v23;
    if (v17 == v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  uint64_t v31 = UIImagePNGRepresentation(v30);
  if (!v31) {
    goto LABEL_12;
  }
  uint64_t v32 = v31;
  uint64_t v33 = a1;
  char v34 = v21;
  uint64_t v35 = v20;
  uint64_t v36 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v38 = v37;

  uint64_t v39 = (uint64_t)v84;
  swift_bridgeObjectRetain();
  char v40 = sub_1002567C4(v36, v38, v39);
  swift_bridgeObjectRelease();
  if (v40)
  {
    sub_1001442DC(v36, v38);
    swift_unknownObjectRelease_n();

    double v23 = v19;
    uint64_t v20 = v35;
    id v21 = v34;
    a1 = v33;
    uint64_t v17 = v81;
    uint64_t v22 = &selRef_retrievingLOIsOfTypes;
    goto LABEL_5;
  }
  sub_10013C948(&v83._countAndFlagsBits, v36, v38);
  sub_1001442DC(v83._countAndFlagsBits, (unint64_t)v83._object);
  uint64_t v20 = v35;
  id v21 = v34;
  a1 = v33;
  uint64_t v17 = v81;
  uint64_t v22 = &selRef_retrievingLOIsOfTypes;
LABEL_12:
  if (v85 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v42) {
      goto LABEL_16;
    }
LABEL_14:
    double v41 = *(double *)(v79 + *(int *)(v80 + 24));
  }
  else
  {
    if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
LABEL_16:
    double v41 = 0.0;
  }
  [(UIImage *)v30 size];
  double v23 = v19 + v41 + v43;
  if (v23 <= a2)
  {
    uint64_t v44 = v30;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    swift_unknownObjectRelease_n();
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  unint64_t v46 = v79;
  uint64_t v47 = v80;
  if (qword_1015CBD78 != -1) {
    goto LABEL_62;
  }
  while (2)
  {
    v86._uint64_t countAndFlagsBits = 0xD000000000000046;
    v86._uint64_t object = (void *)0x8000000100F81D90;
    v48._uint64_t object = (void *)0x8000000100F81D70;
    v48._uint64_t countAndFlagsBits = 0xD000000000000019;
    v49._uint64_t countAndFlagsBits = 10911970;
    v49._uint64_t object = (void *)0xA300000000000000;
    Swift::String v83 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)qword_101611820, v49, v86);
    sub_100180324();
    uint64_t v50 = Text.init<A>(_:)();
    uint64_t v52 = v51;
    unint64_t v54 = v53;
    char v56 = v55 & 1;
    uint64_t v57 = type metadata accessor for Text.WritingMode();
    uint64_t v58 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v78, 1, 1, v57);
    Text.Measurements.size(of:in:writingMode:)();
    double v60 = v59;
    sub_10017F958(v50, v52, v56);
    swift_bridgeObjectRelease();
    sub_1000FF2E0(v58, &qword_1015D88B0);
    double v61 = *(double *)(v46 + *(int *)(v47 + 24));
    unint64_t v46 = v85;
    if (v85 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v62 = result;
      if (!result) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v62 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v62) {
        goto LABEL_22;
      }
    }
    unint64_t v63 = v62 - 1;
    if (__OFSUB__(v62, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    unint64_t v54 = v46 & 0xC000000000000001;
    if ((v46 & 0xC000000000000001) != 0)
    {
LABEL_66:
      id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_32:
      uint64_t v65 = v64;
      double v66 = v60 + v61;
      if (v60 + v61 <= a2 - v19)
      {
LABEL_57:
        swift_bridgeObjectRelease();

        return v85;
      }
      uint64_t v47 = v46 + 32;
      while (1)
      {
        if (v85 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v68 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        double v69 = v68 ? v61 : 0.0;
        [v65 size];
        double v71 = v70;
        uint64_t v72 = v85;
        if (v85 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v77)
          {
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
        }
        else if (!*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_56;
        }
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v72 < 0
          || (v72 & 0x4000000000000000) != 0)
        {
          uint64_t v72 = sub_1000A1A6C(v72);
          unint64_t v85 = v72;
        }
        uint64_t v73 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v73) {
          break;
        }
        uint64_t v74 = v73 - 1;
        uint64_t v75 = *(void **)((v72 & 0xFFFFFFFFFFFFFF8) + 8 * v74 + 0x20);
        *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v74;
        specialized Array._endMutation()();

        if (!v63) {
          goto LABEL_22;
        }
        if (__OFSUB__(v63--, 1)) {
          goto LABEL_59;
        }
        if (v54)
        {
          id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v63 & 0x8000000000000000) != 0) {
            goto LABEL_60;
          }
          if (v63 >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_61;
          }
          id v67 = *(id *)(v47 + 8 * v63);
        }
        uint64_t v65 = v67;
        double v19 = v19 - (v69 + v71);
        if (v66 <= a2 - v19) {
          goto LABEL_57;
        }
      }
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      swift_once();
      continue;
    }
    break;
  }
  if ((v63 & 0x8000000000000000) == 0)
  {
    if (v63 >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_68;
    }
    id v64 = *(id *)(v46 + 8 * v63 + 32);
    goto LABEL_32;
  }
  __break(1u);
LABEL_68:
  __break(1u);
  return result;
}

unint64_t sub_10027B564(unint64_t result)
{
  unint64_t v2 = result;
  if (result >> 62) {
    goto LABEL_30;
  }
  uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (!v3) {
      return (unint64_t)v4;
    }
    if (v3 != 1)
    {
      double v19 = _swiftEmptyArrayStorage;
      uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
      if ((v3 & 0x8000000000000000) == 0)
      {
        uint64_t v15 = 0;
        do
        {
          if ((v2 & 0xC000000000000001) != 0)
          {
            uint64_t v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v16 = *(void **)(v2 + 8 * v15 + 32);
            swift_unknownObjectRetain();
          }
          ++v15;
          id v17 = [v16 artwork:v18];
          swift_unknownObjectRelease();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while (v3 != v15);
        return (unint64_t)v19;
      }
      goto LABEL_32;
    }
    uint64_t v5 = (uint64_t)v1[2];
    int64_t v6 = (unint64_t)v1[3] >> 1;
    unint64_t v2 = v6 - v5;
    if (__OFSUB__(v6, v5))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v7 = v1[1];
    if (!v2) {
      break;
    }
    double v19 = _swiftEmptyArrayStorage;
    swift_unknownObjectRetain();
    uint64_t v1 = &v19;
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if ((v2 & 0x8000000000000000) != 0) {
      goto LABEL_33;
    }
    if (v5 <= v6) {
      int64_t v8 = v6;
    }
    else {
      int64_t v8 = v5;
    }
    int64_t v9 = v8 - v5;
    uint64_t v18 = v7;
    uint64_t v10 = (void **)&v7[10 * v5 + 3];
    while (v9)
    {
      id v11 = *v10;
      v10 += 10;
      id v12 = [v11 headerArtwork];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t v1 = &v19;
      specialized ContiguousArray._endMutation()();
      --v9;
      if (!--v2)
      {
        uint64_t v4 = v19;
        uint64_t result = swift_unknownObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
LABEL_15:
  double v19 = v4;
  if (v5 == v6) {
    return (unint64_t)v4;
  }
  if (v5 < v6)
  {
    id v13 = [(id)swift_unknownObjectRetain() system];
    if (v13
      && (id v14 = [v13 artwork], swift_unknownObjectRelease(), v14))
    {
      sub_100348A14(0, 0, (uint64_t)v14);
      swift_unknownObjectRelease();
      return (unint64_t)v19;
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return (unint64_t)v4;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10027B81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for NearbyTransitCollapsedLinesView(0);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v28 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = sub_1000FF33C(&qword_1015D7C68);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - v9;
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v33._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
  v33._uint64_t object = (void *)0x8000000100F81D10;
  v11._uint64_t object = (void *)0x8000000100F81CF0;
  v11._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v12._uint64_t countAndFlagsBits = 0x6E694C2065726F4DLL;
  v12._uint64_t object = (void *)0xEA00000000007365;
  Swift::String v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_101611820, v12, v33);
  sub_100180324();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = (uint64_t)v14;
  v30._uint64_t countAndFlagsBits = v13;
  v30._uint64_t object = v14;
  char v17 = v16 & 1;
  char v31 = v16 & 1;
  uint64_t v32 = v18;
  View.accessibility(identifier:)();
  sub_10017F958(v13, v15, v17);
  swift_bridgeObjectRelease();
  double v19 = sub_10027AA98();
  unint64_t v20 = sub_10027B564((unint64_t)v19);
  swift_bridgeObjectRelease();
  sub_100294160(a1, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitCollapsedLinesView);
  unint64_t v21 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1002952EC((uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for NearbyTransitCollapsedLinesView);
  *(void *)(v22 + ((v4 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
  sub_1000FF27C((uint64_t)v10, (uint64_t)v7, &qword_1015D7C68);
  uint64_t v23 = v29;
  sub_1000FF27C((uint64_t)v7, v29, &qword_1015D7C68);
  uint64_t v24 = sub_1000FF33C(&qword_1015D8840);
  uint64_t v25 = v23 + *(int *)(v24 + 48);
  *(void *)uint64_t v25 = 0x4024000000000000;
  *(unsigned char *)(v25 + 8) = 0;
  id v26 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v23 + *(int *)(v24 + 64));
  *id v26 = sub_100297798;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v22;
  swift_retain();
  sub_1000FF2E0((uint64_t)v10, &qword_1015D7C68);
  swift_release();
  return sub_1000FF2E0((uint64_t)v7, &qword_1015D7C68);
}

uint64_t sub_10027BB80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D8848);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + *(int *)(type metadata accessor for NearbyTransitCollapsedLinesView(0) + 24));
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = v9;
  v8[16] = 0;
  uint64_t v10 = sub_1000FF33C(&qword_1015D8850);
  sub_10027BD60(a2, &v8[*(int *)(v10 + 44)]);
  GeometryProxy.size.getter();
  static Alignment.trailing.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1000FF27C((uint64_t)v8, a3, &qword_1015D8848);
  Swift::String v11 = (_OWORD *)(a3 + *(int *)(sub_1000FF33C(&qword_1015D8858) + 36));
  long long v12 = v16[6];
  v11[4] = v16[5];
  v11[5] = v12;
  v11[6] = v16[7];
  long long v13 = v16[2];
  *Swift::String v11 = v16[1];
  v11[1] = v13;
  long long v14 = v16[4];
  _OWORD v11[2] = v16[3];
  v11[3] = v14;
  return sub_1000FF2E0((uint64_t)v8, &qword_1015D8848);
}

uint64_t sub_10027BD60@<X0>(uint64_t a1@<X2>, char *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = sub_1000FF33C(&qword_1015D8860);
  uint64_t v3 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - v6;
  GeometryProxy.size.getter();
  uint64_t v9 = sub_10027AD14(a1, v8);
  char v11 = v10;
  v47._uint64_t countAndFlagsBits = v9;
  swift_getKeyPath();
  sub_1000FF33C(&qword_1015D8868);
  sub_1000FF33C(&qword_1015D8870);
  sub_1001010F8(&qword_1015D8878, &qword_1015D8868);
  sub_10028BA3C((unint64_t *)&unk_1015D8880, (void (*)(uint64_t))sub_100297844);
  sub_100297884();
  double v41 = v7;
  ForEach<>.init(_:id:content:)();
  if (v11)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v53._uint64_t countAndFlagsBits = 0xD000000000000046;
    v53._uint64_t object = (void *)0x8000000100F81D90;
    v12._uint64_t object = (void *)0x8000000100F81D70;
    v12._uint64_t countAndFlagsBits = 0xD000000000000019;
    v13._uint64_t countAndFlagsBits = 10911970;
    v13._uint64_t object = (void *)0xA300000000000000;
    Swift::String v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_101611820, v13, v53);
    sub_100180324();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19 & 1;
    sub_10017FDF0(v14, v15, v19 & 1);
    swift_bridgeObjectRetain();
    sub_10017FDF0(v14, v16, v20);
    swift_bridgeObjectRetain();
    sub_10017F958(v14, v16, v20);
    swift_bridgeObjectRelease();
    long long v43 = 0uLL;
    *(void *)&long long v44 = v14;
    *((void *)&v44 + 1) = v16;
    *(void *)&long long v45 = v20;
    *((void *)&v45 + 1) = v18;
    char v46 = 0;
    sub_1000FF33C(&qword_1015D8898);
    sub_1001010F8(&qword_1015D88A0, &qword_1015D8898);
    _ConditionalContent<>.init(storage:)();
    sub_10017F958(v14, v16, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v43 = xmmword_100F69570;
    long long v44 = 0u;
    long long v45 = 0u;
    char v46 = 1;
    sub_1000FF33C(&qword_1015D8898);
    sub_1001010F8(&qword_1015D88A0, &qword_1015D8898);
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t v21 = v48;
  uint64_t object = v47._object;
  uint64_t countAndFlagsBits = v47._countAndFlagsBits;
  uint64_t v23 = v49;
  uint64_t v22 = v50;
  uint64_t v24 = v51;
  char v25 = v52;
  uint64_t v36 = v3;
  id v26 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  double v27 = v42;
  uint64_t v28 = v40;
  v26(v42, v41, v40);
  uint64_t v29 = v39;
  v26(v39, v27, v28);
  Swift::String v30 = &v29[*(int *)(sub_1000FF33C(&qword_1015D88A8) + 48)];
  uint64_t v32 = (uint64_t)object;
  uint64_t v31 = countAndFlagsBits;
  *(void *)Swift::String v30 = countAndFlagsBits;
  *((void *)v30 + 1) = v32;
  *((void *)v30 + 2) = v21;
  *((void *)v30 + 3) = v23;
  *((void *)v30 + 4) = v22;
  *((void *)v30 + 5) = v24;
  v30[48] = v25;
  sub_100297930(v31, v32, v21, v23, v22, v24, v25);
  Swift::String v33 = *(void (**)(char *, uint64_t))(v36 + 8);
  v33(v41, v28);
  sub_100297980(v31, v32, v21, v23, v22, v24, v25);
  return ((uint64_t (*)(char *, uint64_t))v33)(v42, v28);
}

uint64_t sub_10027C240(id *a1)
{
  id v1 = *a1;
  Image.init(uiImage:)();
  View.accessibility(identifier:)();
  return swift_release();
}

uint64_t sub_10027C2C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100294160(v2, (uint64_t)v5, type metadata accessor for NearbyTransitCollapsedLinesView);
  uint64_t v6 = static HorizontalAlignment.leading.getter();
  uint64_t v7 = static VerticalAlignment.center.getter();
  *a2 = swift_getKeyPath();
  sub_1000FF33C(&qword_1015CE720);
  swift_storeEnumTagMultiPayload();
  double v8 = (int *)sub_1000FF33C((uint64_t *)&unk_1015D8830);
  sub_10027B81C((uint64_t)v5, (uint64_t)a2 + v8[9]);
  uint64_t result = sub_1002942A0((uint64_t)v5, type metadata accessor for NearbyTransitCollapsedLinesView);
  *(uint64_t *)((char *)a2 + v8[12]) = v7;
  char v10 = (char *)a2 + v8[13];
  *(void *)char v10 = 0;
  v10[8] = 1;
  *(uint64_t *)((char *)a2 + v8[10]) = v6;
  char v11 = (char *)a2 + v8[11];
  *(void *)char v11 = 0;
  unsigned char v11[8] = 1;
  *((unsigned char *)a2 + v8[14]) = 0;
  return result;
}

void sub_10027C404()
{
  qword_101611A60 = 0x402C000000000000;
}

void sub_10027C414()
{
  qword_101611A68 = 0x4024000000000000;
}

void sub_10027C424()
{
  qword_101611A70 = 0x4046000000000000;
}

void sub_10027C434()
{
  qword_101611A78 = 0x4030000000000000;
}

void sub_10027C444(uint64_t *a1)
{
  uint64_t v38 = type metadata accessor for NearbyTransitLineSectionView(0);
  uint64_t v39 = v1;
  uint64_t v2 = *(void **)(v1 + *(int *)(v38 + 24));
  if (v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v3 = v2;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v4 = *(void *)&v55[0];
    uint64_t v41 = *(void *)(*(void *)&v55[0] + 16);
    if (v41)
    {
      uint64_t v36 = 0;
      unint64_t v5 = 0;
      uint64_t v40 = *(void *)&v55[0] + 32;
      uint64_t v37 = *(void *)&v55[0];
      while (1)
      {
        if (v5 >= *(void *)(v4 + 16))
        {
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        uint64_t v6 = *(void *)(v40 + 32 * v5 + 16);
        uint64_t v7 = *(void *)(v6 + 16);
        if (!v7) {
          goto LABEL_6;
        }
        unint64_t v42 = v5;
        double v8 = (_OWORD *)(v39 + *(int *)(v38 + 20));
        long long v9 = v8[3];
        v55[2] = v8[2];
        v56[0] = v9;
        *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)((char *)v8 + 57);
        long long v10 = v8[1];
        v55[0] = *v8;
        v55[1] = v10;
        uint64_t v11 = v10;
        v57[0] = v10;
        uint64_t v12 = v6 + 32;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        unint64_t v13 = 0;
        char v46 = (uint64_t *)(v11 + 56);
        uint64_t v47 = v6;
        uint64_t v44 = v11;
        uint64_t v45 = v7;
        uint64_t v43 = v6 + 32;
        while (1)
        {
          if (v13 >= *(void *)(v6 + 16))
          {
            __break(1u);
            goto LABEL_47;
          }
          uint64_t v14 = *(void *)(v12 + (v13 << 6) + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10019F20C((uint64_t)v55);
          sub_1002A95A8(v55, v14);
          char v16 = v15;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10019F274((uint64_t)v55);
          swift_bridgeObjectRelease();
          if ((v16 & 1) == 0)
          {
            uint64_t v51 = *(void *)(v11 + 16);
            if (v51) {
              break;
            }
          }
LABEL_11:
          if (++v13 == v7)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_5;
          }
        }
        unint64_t v48 = v13;
        uint64_t v17 = *a1;
        uint64_t v52 = a1[1];
        swift_bridgeObjectRetain();
        uint64_t v18 = 0;
        char v19 = v46;
        while (1)
        {
          uint64_t v21 = *(v19 - 1);
          uint64_t v20 = *v19;
          uint64_t v22 = v19[1];
          uint64_t v23 = v19[2];
          uint64_t v25 = v19[3];
          uint64_t v24 = v19[4];
          uint64_t v26 = v19[5];
          id v49 = (id)v19[6];
          uint64_t v50 = v19[7];
          if ((*(v19 - 3) != v17 || *(v19 - 2) != v52) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v27 = a1[3];
          if (v20)
          {
            if (!v27 || (v21 != a1[2] || v20 != v27) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              goto LABEL_17;
            }
          }
          else if (v27)
          {
            goto LABEL_17;
          }
          if ((v22 != a1[4] || v23 != a1[5]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v28 = a1[7];
          if (v24) {
            break;
          }
          if (!v28) {
            goto LABEL_37;
          }
LABEL_17:
          ++v18;
          v19 += 11;
          if (v51 == v18)
          {
            sub_10019C1E4((uint64_t)v57);
            uint64_t v6 = v47;
            unint64_t v13 = v48;
            uint64_t v11 = v44;
            uint64_t v7 = v45;
            uint64_t v12 = v43;
            goto LABEL_11;
          }
        }
        if (!v28
          || (v25 != a1[6] || v24 != v28)
          && ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
        {
          goto LABEL_17;
        }
LABEL_37:
        if (v26 != a1[8] || v50 != a1[10] || ([v49 isEqual:a1[9]] & 1) == 0) {
          goto LABEL_17;
        }
        sub_10019C1E4((uint64_t)v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v54 = v29;
        v30._uint64_t countAndFlagsBits = 8236;
        v30._uint64_t object = (void *)0xE200000000000000;
        String.append(_:)(v30);
        v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v31);
        swift_bridgeObjectRelease();
        v32._uint64_t countAndFlagsBits = 8236;
        v32._uint64_t object = (void *)0xE200000000000000;
        String.append(_:)(v32);
        v33._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v33);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v36 = v54;
LABEL_5:
        uint64_t v4 = v37;
        unint64_t v5 = v42;
LABEL_6:
        if (++v5 == v41)
        {
          swift_bridgeObjectRelease();
          char v34 = self;
          if (!v36) {
            goto LABEL_44;
          }
          NSString v35 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
      }
    }
    swift_bridgeObjectRelease();
    char v34 = self;
LABEL_44:
    NSString v35 = 0;
LABEL_45:
    [v34 captureUserAction:231 target:44 value:v35];
  }
  else
  {
LABEL_48:
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_10027C9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v27 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v31 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NearbyTransitLineSectionView(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = sub_1000FF33C(&qword_1015D8930);
  uint64_t v28 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(&qword_1015D8A50);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  __chkstk_darwin(v13);
  char v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100294160(v3, (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitLineSectionView);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1002952EC((uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for NearbyTransitLineSectionView);
  unint64_t v19 = v18 + ((v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v20 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v19 + 48) = v20;
  *(_OWORD *)(v19 + 64) = *(_OWORD *)(a1 + 64);
  *(void *)(v19 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(void *)(a1 + 80);
  long long v21 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)unint64_t v19 = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 16) = v21;
  uint64_t v33 = a1;
  uint64_t v34 = v3;
  sub_100142CC4(a1);
  sub_1000FF33C(&qword_1015D8A58);
  sub_10029BAEC(&qword_1015D8A60, &qword_1015D8A58, (void (*)(void))sub_1002982E8);
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  uint64_t v22 = sub_1001010F8(&qword_1015D8938, &qword_1015D8930);
  uint64_t v23 = sub_10028BA3C(&qword_1015D8440, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v24 = v27;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v24);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
  uint64_t v35 = v10;
  uint64_t v36 = v24;
  uint64_t v37 = v22;
  uint64_t v38 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v29;
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v25);
}

uint64_t sub_10027CE70(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for NearbyTransitLineSectionView(0) + 24));
  if (v3)
  {
    uint64_t v4 = v3 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
    swift_beginAccess();
    sub_1000FF27C(v4, (uint64_t)v7, (uint64_t *)&unk_1015CF2A0);
    if (v8)
    {
      sub_1000FF4D4((uint64_t)v7, (uint64_t)v6);
      sub_1000FF2E0((uint64_t)v7, (uint64_t *)&unk_1015CF2A0);
      sub_1000FF380(v6, v6[3]);
      sub_1002A3DB4(a2, 1);
      return sub_1000FF22C((uint64_t)v6);
    }
    else
    {
      return sub_1000FF2E0((uint64_t)v7, (uint64_t *)&unk_1015CF2A0);
    }
  }
  else
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

double sub_10027CFA4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a1[1];
  uint64_t v39 = *a1;
  uint64_t v36 = a1[3];
  uint64_t v37 = a1[2];
  uint64_t v34 = a1[5];
  uint64_t v35 = a1[4];
  uint64_t v32 = a1[7];
  uint64_t v33 = a1[6];
  uint64_t v30 = a1[9];
  uint64_t v31 = a1[8];
  uint64_t v29 = a1[10];
  uint64_t v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for NearbyTransitLineSectionView(0) + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v8 = v5[2];
  uint64_t v9 = v5[3];
  uint64_t v10 = v5[5];
  char v27 = *((unsigned char *)v5 + 48);
  char v28 = *((unsigned char *)v5 + 32);
  uint64_t v11 = v5[8];
  uint64_t v26 = v5[7];
  char v25 = *((unsigned char *)v5 + 72);
  sub_100142CC4((uint64_t)a1);
  type metadata accessor for NearbyTransitDeparturesProvider();
  sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = EnvironmentObject.init()();
  uint64_t v14 = v13;
  char v15 = static Edge.Set.vertical.getter();
  if (qword_1015CBE88 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  if (qword_1015CBE90 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a3 = v39;
  *(void *)(a3 + 8) = v38;
  *(void *)(a3 + 16) = v37;
  *(void *)(a3 + 24) = v36;
  *(void *)(a3 + 32) = v35;
  *(void *)(a3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v34;
  *(void *)(a3 + 48) = v33;
  *(void *)(a3 + 56) = v32;
  *(void *)(a3 + 64) = v31;
  *(void *)(a3 + 72) = v30;
  *(void *)(a3 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v29;
  *(void *)(a3 + 88) = v7;
  *(void *)(a3 + 96) = v6;
  *(void *)(a3 + 104) = v8;
  *(void *)(a3 + 112) = v9;
  *(unsigned char *)(a3 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v28;
  *(void *)(a3 + 128) = v10;
  *(unsigned char *)(a3 + 136) = v27;
  *(void *)(a3 + 144) = v26;
  *(void *)(a3 + 152) = v11;
  *(unsigned char *)(a3 + 16sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v25;
  *(void *)(a3 + 168) = v12;
  *(void *)(a3 + 176) = v14;
  *(unsigned char *)(a3 + 184) = v15;
  *(unsigned char *)(a3 + 224) = 0;
  *(void *)(a3 + 232) = v40;
  *(unsigned char *)(a3 + 24sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v41;
  *(void *)(a3 + 248) = v42;
  *(unsigned char *)(a3 + 256) = v43;
  *(void *)(a3 + 264) = v44;
  *(unsigned char *)(a3 + 272) = v45;
  *(void *)(a3 + 28sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v46;
  *(unsigned char *)(a3 + 288) = v47;
  *(void *)(a3 + 296) = v48;
  *(unsigned char *)(a3 + 304) = v49;
  *(void *)(a3 + 312) = v50;
  *(unsigned char *)(a3 + 32sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v51;
  *(void *)(a3 + 192) = v17;
  *(void *)(a3 + 20sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v19;
  *(void *)(a3 + 208) = v21;
  *(void *)(a3 + 216) = v23;
  double result = *(double *)&v52;
  *(_OWORD *)(a3 + 328) = v52;
  return result;
}

uint64_t sub_10027D364@<X0>(char *a1@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v2 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v66 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v63 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000FF33C(&qword_1015D8940);
  uint64_t v61 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  double v60 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000FF33C(&qword_1015D8948);
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v62 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D8950);
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  __chkstk_darwin(v6);
  double v59 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D8958);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  double v71 = (char *)v55 - v12;
  uint64_t v13 = type metadata accessor for NearbyTransitLineSectionView(0);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v13);
  uint64_t v78 = (uint64_t)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000FF33C(&qword_1015D8960);
  uint64_t v73 = *(void *)(v17 - 8);
  uint64_t v74 = v17;
  __chkstk_darwin(v17);
  uint64_t v72 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v55 - v20;
  uint64_t v22 = v1 + *(int *)(v14 + 36);
  uint64_t v23 = *(void *)(v22 + 8);
  LOBYTE(v79) = *(unsigned char *)v22;
  uint64_t v80 = v23;
  sub_1000FF33C(&qword_1015D8000);
  uint64_t result = State.wrappedValue.getter();
  uint64_t v25 = *(void *)(v1 + *(int *)(v14 + 28) + 16);
  unint64_t v26 = *(void *)(v25 + 16);
  if (v83 == 1)
  {
    if (v26 < 3)
    {
      __break(1u);
      return result;
    }
    unint64_t v26 = 3;
  }
  uint64_t v58 = v2;
  double v70 = v10;
  uint64_t v27 = 1;
  uint64_t v79 = v25;
  uint64_t v80 = v25 + 32;
  uint64_t v81 = 0;
  uint64_t v82 = (2 * v26) | 1;
  uint64_t v28 = v25;
  uint64_t v56 = v1;
  uint64_t v29 = v78;
  sub_100294160(v1, v78, type metadata accessor for NearbyTransitLineSectionView);
  uint64_t v30 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v31 = (v30 + 16) & ~v30;
  v55[2] = v31 + v16;
  v55[1] = v30 | 7;
  uint64_t v32 = swift_allocObject();
  uint64_t v57 = v31;
  sub_1002952EC(v29, v32 + v31, type metadata accessor for NearbyTransitLineSectionView);
  uint64_t v68 = v28;
  swift_bridgeObjectRetain_n();
  sub_1000FF33C(&qword_1015D8968);
  sub_1000FF33C(&qword_1015D8970);
  sub_1001010F8(&qword_1015D8978, &qword_1015D8968);
  sub_1001010F8(&qword_1015D8980, &qword_1015D8970);
  sub_100297BC0();
  double v69 = v21;
  uint64_t v33 = (uint64_t)v71;
  ForEach<>.init(_:content:)();
  uint64_t v34 = *(void *)(v22 + 8);
  LOBYTE(v79) = *(unsigned char *)v22;
  uint64_t v80 = v34;
  State.wrappedValue.getter();
  if (v83 == 1)
  {
    uint64_t v35 = v78;
    sub_100294160(v56, v78, type metadata accessor for NearbyTransitLineSectionView);
    uint64_t v36 = swift_allocObject();
    sub_1002952EC(v35, v36 + v57, type metadata accessor for NearbyTransitLineSectionView);
    sub_1000FF33C(&qword_1015D8998);
    sub_10029BAEC(&qword_1015D89A0, &qword_1015D8998, (void (*)(void))sub_100297DF4);
    uint64_t v37 = v60;
    Button.init(action:label:)();
    uint64_t v38 = v63;
    BorderlessButtonStyle.init()();
    uint64_t v39 = sub_1001010F8(&qword_1015D89D8, &qword_1015D8940);
    uint64_t v40 = sub_10028BA3C(&qword_1015D8440, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    char v41 = v62;
    uint64_t v42 = v64;
    uint64_t v43 = v58;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v43);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v42);
    uint64_t v79 = v42;
    uint64_t v80 = v43;
    uint64_t v81 = v39;
    uint64_t v82 = v40;
    swift_getOpaqueTypeConformance2();
    uint64_t v44 = (uint64_t)v59;
    uint64_t v45 = v67;
    View.accessibilityIdentifier(_:)();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v45);
    sub_100101750(v44, v33, &qword_1015D8950);
    uint64_t v27 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v33, v27, 1, v76);
  char v47 = v72;
  uint64_t v46 = v73;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  char v49 = v69;
  uint64_t v50 = v74;
  v48(v72, v69, v74);
  uint64_t v51 = (uint64_t)v70;
  sub_1000FF27C(v33, (uint64_t)v70, &qword_1015D8958);
  long long v52 = v77;
  v48(v77, v47, v50);
  uint64_t v53 = sub_1000FF33C(&qword_1015D8990);
  sub_1000FF27C(v51, (uint64_t)&v52[*(int *)(v53 + 48)], &qword_1015D8958);
  swift_bridgeObjectRelease();
  sub_1000FF2E0(v33, &qword_1015D8958);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v46 + 8);
  v54(v49, v50);
  sub_1000FF2E0(v51, &qword_1015D8958);
  return ((uint64_t (*)(char *, uint64_t))v54)(v47, v50);
}

uint64_t sub_10027DCA4@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v89 = a3;
  uint64_t v5 = type metadata accessor for Divider();
  uint64_t v84 = *(void *)(v5 - 8);
  uint64_t v85 = v5;
  __chkstk_darwin(v5);
  char v83 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000FF33C(&qword_1015D89E0);
  __chkstk_darwin(v80);
  Swift::String v86 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000FF33C(&qword_1015D89E8);
  __chkstk_darwin(v82);
  uint64_t v88 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v81 = (uint64_t)&v72 - v10;
  __chkstk_darwin(v11);
  uint64_t v87 = (uint64_t)&v72 - v12;
  uint64_t v13 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v77 = *(void *)(v13 - 8);
  uint64_t v78 = v13;
  __chkstk_darwin(v13);
  uint64_t v76 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NearbyTransitLineSectionView(0);
  uint64_t v16 = v15 - 8;
  uint64_t v72 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v72 + 64);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015D89F0);
  uint64_t v73 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000FF33C(&qword_1015D89F8);
  uint64_t v74 = *(void *)(v22 - 8);
  uint64_t v75 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000FF33C(&qword_1015D8A00);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v79 = (uint64_t)&v72 - v29;
  uint64_t v110 = *((void *)a1 + 10);
  long long v30 = a1[4];
  long long v31 = a1[2];
  long long v108 = a1[3];
  long long v109 = v30;
  long long v32 = *a1;
  long long v106 = a1[1];
  long long v107 = v31;
  long long v105 = v32;
  uint64_t v33 = *(void *)(a2 + *(int *)(v16 + 28) + 16);
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    uint64_t v35 = v33 + 88 * v34;
    long long v36 = *(_OWORD *)(v35 - 40);
    long long v90 = *(_OWORD *)(v35 - 56);
    long long v91 = v36;
    long long v37 = *(_OWORD *)(v35 - 24);
    long long v38 = *(_OWORD *)(v35 - 8);
    long long v39 = *(_OWORD *)(v35 + 8);
    uint64_t v95 = *(void *)(v35 + 24);
    long long v93 = v38;
    long long v94 = v39;
    long long v92 = v37;
    sub_100142CC4((uint64_t)&v90);
    sub_100142CC4((uint64_t)&v105);
    unsigned __int8 v40 = sub_10031C098((uint64_t)&v105, &v90);
    sub_100142D30((uint64_t)&v90);
    sub_100142D30((uint64_t)&v105);
    if (v40) {
      double v41 = 0.0;
    }
    else {
      double v41 = 1.0;
    }
  }
  else
  {
    uint64_t v42 = *((void *)a1 + 10);
    uint64_t v44 = *((void *)a1 + 4);
    uint64_t v43 = *((void *)a1 + 5);
    uint64_t v45 = *((void *)a1 + 1);
    *(void *)&long long v90 = *(void *)a1;
    *((void *)&v90 + 1) = v45;
    long long v91 = a1[1];
    *(void *)&long long v92 = v44;
    *((void *)&v92 + 1) = v43;
    long long v46 = a1[4];
    long long v93 = a1[3];
    long long v94 = v46;
    uint64_t v95 = v42;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    uint64_t v101 = 0;
    sub_100142CC4((uint64_t)&v105);
    sub_100297FF0((uint64_t *)&v90);
    double v41 = 1.0;
  }
  sub_100294160(a2, (uint64_t)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitLineSectionView);
  unint64_t v47 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  unint64_t v48 = (v17 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = sub_1002952EC((uint64_t)v18, v49 + v47, type metadata accessor for NearbyTransitLineSectionView);
  unint64_t v51 = v49 + v48;
  long long v52 = v108;
  *(_OWORD *)(v51 + 32) = v107;
  *(_OWORD *)(v51 + 48) = v52;
  *(_OWORD *)(v51 + 64) = v109;
  *(void *)(v51 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v110;
  long long v53 = v106;
  *(_OWORD *)unint64_t v51 = v105;
  *(_OWORD *)(v51 + 16) = v53;
  __chkstk_darwin(v50);
  *(&v72 - 2) = (uint64_t)&v105;
  sub_100142CC4((uint64_t)&v105);
  sub_1000FF33C(&qword_1015D8A08);
  sub_10029BAEC(&qword_1015D8A10, &qword_1015D8A08, (void (*)(void))sub_100297EF4);
  Button.init(action:label:)();
  uint64_t v54 = v76;
  BorderlessButtonStyle.init()();
  uint64_t v55 = sub_1001010F8(&qword_1015D8A40, &qword_1015D89F0);
  uint64_t v56 = sub_10028BA3C(&qword_1015D8440, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v57 = v78;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v54, v57);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v19);
  *(void *)&long long v102 = v19;
  *((void *)&v102 + 1) = v57;
  *(void *)&long long v103 = v55;
  *((void *)&v103 + 1) = v56;
  swift_getOpaqueTypeConformance2();
  uint64_t v58 = v75;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v24, v58);
  uint64_t v59 = v79;
  sub_100101750((uint64_t)v27, v79, &qword_1015D8A00);
  double v60 = v83;
  Divider.init()();
  uint64_t v62 = v84;
  uint64_t v61 = v85;
  uint64_t v63 = (uint64_t)v86;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v86, v60, v85);
  *(double *)(v63 + *(int *)(v80 + 36)) = v41;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v61);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v64 = v81;
  sub_1000FF27C(v63, v81, &qword_1015D89E0);
  uint64_t v65 = (_OWORD *)(v64 + *(int *)(v82 + 36));
  long long v66 = v103;
  _OWORD *v65 = v102;
  v65[1] = v66;
  uint64_t v65[2] = v104;
  sub_1000FF2E0(v63, &qword_1015D89E0);
  uint64_t v67 = v87;
  sub_100101750(v64, v87, &qword_1015D89E8);
  sub_1000FF27C(v59, (uint64_t)v27, &qword_1015D8A00);
  uint64_t v68 = v88;
  sub_1000FF27C(v67, v88, &qword_1015D89E8);
  uint64_t v69 = v89;
  sub_1000FF27C((uint64_t)v27, v89, &qword_1015D8A00);
  uint64_t v70 = sub_1000FF33C(&qword_1015D8A48);
  sub_1000FF27C(v68, v69 + *(int *)(v70 + 48), &qword_1015D89E8);
  sub_1000FF2E0(v67, &qword_1015D89E8);
  sub_1000FF2E0(v59, &qword_1015D8A00);
  sub_1000FF2E0(v68, &qword_1015D89E8);
  return sub_1000FF2E0((uint64_t)v27, &qword_1015D8A00);
}

void sub_10027E5C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for NearbyTransitLineSectionView(0) + 24));
  if (v3)
  {
    uint64_t v4 = v3 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
    swift_beginAccess();
    sub_1000FF27C(v4, (uint64_t)v6, (uint64_t *)&unk_1015CF2A0);
    if (v7)
    {
      sub_1000FF4D4((uint64_t)v6, (uint64_t)v5);
      sub_1000FF2E0((uint64_t)v6, (uint64_t *)&unk_1015CF2A0);
      sub_1000FF380(v5, v5[3]);
      sub_1002A3DB4(a2, 0);
      sub_1000FF22C((uint64_t)v5);
    }
    else
    {
      sub_1000FF2E0((uint64_t)v6, (uint64_t *)&unk_1015CF2A0);
    }
    sub_10027C444(a2);
  }
  else
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_10027E710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = type metadata accessor for NearbyTransitDepartureView(0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D8A30);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D8A20);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000FF33C(&qword_1015D8A08);
  __chkstk_darwin(v51);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100142CC4(a1);
  type metadata accessor for NearbyTransitDeparturesProvider();
  sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
  *((void *)v6 + 12) = EnvironmentObject.init()();
  *((void *)v6 + 13) = v15;
  uint64_t v16 = (uint64_t *)&v6[v4[8]];
  *uint64_t v16 = swift_getKeyPath();
  sub_1000FF33C(&qword_1015CE6F8);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (uint64_t *)&v6[v4[9]];
  *uint64_t v17 = swift_getKeyPath();
  sub_1000FF33C(&qword_1015CE720);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = v4[10];
  id v19 = [self currentDevice];
  id v20 = [v19 userInterfaceIdiom];

  v6[v18] = v20 == (id)4;
  long long v21 = *(_OWORD *)(a1 + 48);
  long long v55 = *(_OWORD *)(a1 + 32);
  long long v56 = v21;
  long long v57 = *(_OWORD *)(a1 + 64);
  uint64_t v58 = *(void *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 16);
  long long v53 = *(_OWORD *)a1;
  long long v54 = v22;
  State.init(wrappedValue:)();
  uint64_t v23 = *((void *)&v59 + 1);
  long long v24 = v61;
  long long v25 = v63;
  *(void *)uint64_t v6 = v59;
  *((void *)v6 + 1) = v23;
  *((_OWORD *)v6 + 1) = v60;
  *((_OWORD *)v6 + 2) = v24;
  *((_OWORD *)v6 + 3) = v62;
  *((_OWORD *)v6 + 4) = v25;
  *((_OWORD *)v6 + 5) = v64;
  char v26 = static Edge.Set.trailing.getter();
  if (qword_1015CBE80 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_100294160((uint64_t)v6, (uint64_t)v9, type metadata accessor for NearbyTransitDepartureView);
  uint64_t v35 = &v9[*(int *)(v7 + 36)];
  char *v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_1002942A0((uint64_t)v6, type metadata accessor for NearbyTransitDepartureView);
  char v36 = static Edge.Set.vertical.getter();
  if (qword_1015CBE88 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  sub_1000FF27C((uint64_t)v9, (uint64_t)v12, &qword_1015D8A30);
  uint64_t v45 = &v12[*(int *)(v10 + 36)];
  *uint64_t v45 = v36;
  *((void *)v45 + 1) = v38;
  *((void *)v45 + 2) = v40;
  *((void *)v45 + 3) = v42;
  *((void *)v45 + 4) = v44;
  v45[40] = 0;
  sub_1000FF2E0((uint64_t)v9, &qword_1015D8A30);
  if (qword_1015CBE90 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1000FF27C((uint64_t)v12, (uint64_t)v14, &qword_1015D8A20);
  long long v46 = &v14[*(int *)(v51 + 36)];
  long long v47 = v64;
  *((_OWORD *)v46 + 4) = v63;
  *((_OWORD *)v46 + 5) = v47;
  *((_OWORD *)v46 + 6) = v65;
  long long v48 = v60;
  *(_OWORD *)long long v46 = v59;
  *((_OWORD *)v46 + 1) = v48;
  long long v49 = v62;
  *((_OWORD *)v46 + 2) = v61;
  *((_OWORD *)v46 + 3) = v49;
  sub_1000FF2E0((uint64_t)v12, &qword_1015D8A20);
  return sub_100101750((uint64_t)v14, v52, &qword_1015D8A08);
}

id sub_10027ECB8()
{
  return [self captureUserAction:220 target:44 value:0];
}

__n128 sub_10027ED44@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static VerticalAlignment.center.getter();
  sub_10027F0A0((uint64_t)&v46);
  long long v3 = v46;
  char v4 = v47[0];
  unint64_t v5 = *(void *)&v47[8];
  unint64_t v6 = *(void *)&v47[16];
  char v7 = v47[24];
  char v8 = static Edge.Set.trailing.getter();
  if (qword_1015CBE80 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v44 = v9;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  char v16 = static Edge.Set.vertical.getter();
  if (qword_1015CBE88 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  if (qword_1015CBE90 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  long long v46 = (unint64_t)v2;
  v47[0] = 1;
  *(_OWORD *)&v47[8] = v3;
  v47[24] = v4;
  v48.n128_u64[0] = v5;
  v48.n128_u64[1] = v6;
  LOBYTE(v49) = v7;
  BYTE8(v49) = v8;
  *(void *)&long long v50 = v44;
  *((void *)&v50 + 1) = v11;
  *(void *)&long long v51 = v13;
  *((void *)&v51 + 1) = v15;
  LOBYTE(v52) = 0;
  BYTE8(v52) = v16;
  *(void *)&long long v53 = v18;
  *((void *)&v53 + 1) = v20;
  *(void *)&long long v54 = v22;
  *((void *)&v54 + 1) = v24;
  char v55 = 0;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  char v25 = v57;
  uint64_t v43 = v58;
  uint64_t v45 = v56;
  char v26 = v59;
  char v36 = v61;
  uint64_t v41 = v62;
  uint64_t v42 = v60;
  char v27 = v63;
  char v28 = v65;
  uint64_t v39 = v66;
  uint64_t v40 = v64;
  char v29 = v4;
  char v30 = v67;
  uint64_t v37 = v69;
  uint64_t v38 = v68;
  sub_100297E90((uint64_t)&v46);
  sub_10017F958(v3, *((uint64_t *)&v3 + 1), v29);
  swift_bridgeObjectRelease();
  long long v31 = v54;
  *(_OWORD *)(a1 + 128) = v53;
  *(_OWORD *)(a1 + 144) = v31;
  *(unsigned char *)(a1 + 16sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v55;
  long long v32 = v50;
  *(_OWORD *)(a1 + 64) = v49;
  *(_OWORD *)(a1 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v32;
  long long v33 = v52;
  *(_OWORD *)(a1 + 96) = v51;
  *(_OWORD *)(a1 + 112) = v33;
  long long v34 = *(_OWORD *)v47;
  *(_OWORD *)a1 = v46;
  *(_OWORD *)(a1 + 16) = v34;
  __n128 result = v48;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v47[16];
  *(__n128 *)(a1 + 48) = result;
  *(void *)(a1 + 168) = v45;
  *(unsigned char *)(a1 + 176) = v25;
  *(void *)(a1 + 184) = v43;
  *(unsigned char *)(a1 + 192) = v26;
  *(void *)(a1 + 20sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v42;
  *(unsigned char *)(a1 + 208) = v36;
  *(void *)(a1 + 216) = v41;
  *(unsigned char *)(a1 + 224) = v27;
  *(void *)(a1 + 232) = v40;
  *(unsigned char *)(a1 + 24sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v28;
  *(void *)(a1 + 248) = v39;
  *(unsigned char *)(a1 + 256) = v30;
  *(void *)(a1 + 264) = v38;
  *(void *)(a1 + 272) = v37;
  return result;
}

uint64_t sub_10027F0A0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v23._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
  v23._uint64_t object = (void *)0x8000000100F81E70;
  v2._uint64_t object = (void *)0x8000000100F81E40;
  v2._uint64_t countAndFlagsBits = 0xD000000000000020;
  v3._uint64_t countAndFlagsBits = 0x7065442065726F4DLL;
  v3._uint64_t object = (void *)0xEF73657275747261;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_101611820, v3, v23);
  sub_100180324();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static Color.blue.getter();
  uint64_t v9 = Text.foregroundColor(_:)();
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release();
  char v14 = v13 & 1;
  sub_10017F958(v4, v6, v8);
  swift_bridgeObjectRelease();
  static Font.body.getter();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  swift_release();
  sub_10017F958(v9, v11, v14);
  swift_bridgeObjectRelease();
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v19 & 1;
  *(void *)(a1 + 24) = v21;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 1;
  sub_10017FDF0(v15, v17, v19 & 1);
  swift_bridgeObjectRetain();
  sub_10017F958(v15, v17, v19 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10027F294@<X0>(uint64_t a1@<X8>)
{
  v16[1] = a1;
  uint64_t v2 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D88B8);
  __chkstk_darwin(v6);
  char v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D88C0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v8 = static HorizontalAlignment.leading.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v13 = sub_1000FF33C(&qword_1015D88C8);
  sub_10027F524(v1, (uint64_t)&v8[*(int *)(v13 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v14 = sub_1001010F8(&qword_1015D88D0, &qword_1015D88B8);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000FF2E0((uint64_t)v8, &qword_1015D88B8);
  void v16[2] = v6;
  v16[3] = v14;
  swift_getOpaqueTypeConformance2();
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10027F524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v92 = sub_1000FF33C(&qword_1015D88D8);
  __chkstk_darwin(v92);
  uint64_t v83 = (uint64_t)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v87 = *(void *)(v4 - 8);
  uint64_t v88 = v4;
  __chkstk_darwin(v4);
  Swift::String v86 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000FF33C(&qword_1015D88E0);
  __chkstk_darwin(v89);
  uint64_t v91 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1000FF33C(&qword_1015D88E8);
  __chkstk_darwin(v90);
  uint64_t v85 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D88F0);
  __chkstk_darwin(v8 - 8);
  long long v106 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v102 = (uint64_t)&v82 - v11;
  uint64_t v12 = type metadata accessor for Divider();
  uint64_t v104 = *(void *)(v12 - 8);
  uint64_t v105 = v12;
  __chkstk_darwin(v12);
  long long v103 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v110 = (char *)&v82 - v15;
  uint64_t v16 = type metadata accessor for NearbyTransitLineSectionHeaderView(0);
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1000FF33C(&qword_1015D88F8);
  __chkstk_darwin(v98);
  uint64_t v100 = (uint64_t)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000FF33C(&qword_1015D8900);
  __chkstk_darwin(v99);
  uint64_t v109 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v108 = (uint64_t)&v82 - v23;
  uint64_t v84 = type metadata accessor for NearbyTransitLineSectionView(0);
  uint64_t v24 = *(int *)(v84 + 20);
  uint64_t v101 = a1;
  char v25 = (uint64_t *)(a1 + v24);
  uint64_t v26 = *(void *)(a1 + v24 + 8);
  uint64_t v97 = *(void *)(a1 + v24);
  uint64_t v27 = *(void *)(a1 + v24 + 16);
  uint64_t v28 = v25[3];
  int v29 = *((unsigned __int8 *)v25 + 32);
  uint64_t v30 = v25[5];
  int v95 = *((unsigned __int8 *)v25 + 48);
  int v96 = v29;
  uint64_t v31 = v25[8];
  uint64_t v94 = v25[7];
  int v93 = *((unsigned __int8 *)v25 + 72);
  *(void *)&v19[v17[7]] = swift_getKeyPath();
  sub_1000FF33C(&qword_1015CE6F8);
  swift_storeEnumTagMultiPayload();
  *(void *)char v19 = v97;
  *((void *)v19 + 1) = v26;
  *((void *)v19 + 2) = v27;
  *((void *)v19 + 3) = v28;
  unsigned char v19[32] = v96;
  *((void *)v19 + 5) = v30;
  v19[48] = v95;
  *((void *)v19 + 7) = v94;
  *((void *)v19 + 8) = v31;
  v19[72] = v93;
  uint64_t v32 = v17[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&v19[v32] = static Font.body.getter();
  long long v33 = &v19[v17[9]];
  uint64_t v34 = enum case for Font.TextStyle.body(_:);
  uint64_t v35 = type metadata accessor for Font.TextStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v33, v34, v35);
  char v36 = static Edge.Set.trailing.getter();
  if (qword_1015CBE80 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v45 = v100;
  sub_100294160((uint64_t)v19, v100, type metadata accessor for NearbyTransitLineSectionHeaderView);
  uint64_t v46 = v45 + *(int *)(v98 + 36);
  *(unsigned char *)uint64_t v46 = v36;
  *(void *)(v46 + 8) = v38;
  *(void *)(v46 + 16) = v40;
  *(void *)(v46 + 24) = v42;
  *(void *)(v46 + 32) = v44;
  *(unsigned char *)(v46 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  sub_1002942A0((uint64_t)v19, type metadata accessor for NearbyTransitLineSectionHeaderView);
  sub_1000FF33C(&qword_1015D8660);
  uint64_t v47 = v101;
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v48 = v109;
  sub_1000FF27C(v45, v109, &qword_1015D88F8);
  long long v49 = (_OWORD *)(v48 + *(int *)(v99 + 36));
  long long v50 = v112;
  *long long v49 = v111;
  v49[1] = v50;
  v49[2] = v113;
  sub_1000FF2E0(v45, &qword_1015D88F8);
  uint64_t v51 = v108;
  sub_100101750(v48, v108, &qword_1015D8900);
  long long v52 = v110;
  Divider.init()();
  if (*((unsigned char *)v25 + 72) == 1)
  {
    long long v53 = v85;
    sub_10027D364(v85);
    long long v54 = &qword_1015D88E8;
    sub_1000FF27C((uint64_t)v53, v91, &qword_1015D88E8);
    swift_storeEnumTagMultiPayload();
    sub_1001010F8(&qword_1015D8920, &qword_1015D88E8);
    sub_1002979F0(&qword_1015D8928, &qword_1015D88D8, &qword_1015D8930, &qword_1015D8938);
    uint64_t v55 = (uint64_t)v106;
    _ConditionalContent<>.init(storage:)();
    uint64_t v56 = (uint64_t)v53;
    goto LABEL_8;
  }
  char v57 = *(void **)(v47 + *(int *)(v84 + 24));
  if (v57)
  {
    uint64_t v59 = v25[7];
    uint64_t v58 = v25[8];
    char v60 = *((unsigned char *)v25 + 48);
    uint64_t v61 = v25[5];
    char v62 = *((unsigned char *)v25 + 32);
    uint64_t v63 = v25[3];
    uint64_t v64 = *v25;
    long long v120 = *(_OWORD *)(v25 + 1);
    uint64_t v119 = v64;
    uint64_t v121 = v63;
    char v122 = v62;
    uint64_t v123 = v61;
    char v124 = v60;
    uint64_t v125 = v59;
    uint64_t v126 = v58;
    char v127 = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    id v65 = v57;
    uint64_t v66 = (uint64_t)v86;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_1002BD35C(v66, v114);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v66, v88);
    sub_100101750((uint64_t)v114, (uint64_t)v115, &qword_1015D8908);
    if (!*((void *)&v115[0] + 1))
    {
      uint64_t v81 = sub_1000FF33C(&qword_1015D8910);
      uint64_t v69 = v102;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v102, 1, 1, v81);
      uint64_t v55 = (uint64_t)v106;
      uint64_t v70 = v107;
      goto LABEL_9;
    }
    v117[2] = v115[2];
    v117[3] = v115[3];
    v117[4] = v115[4];
    uint64_t v118 = v116;
    v117[0] = v115[0];
    v117[1] = v115[1];
    uint64_t v67 = v83;
    sub_10027C9EC((uint64_t)v117, v83);
    long long v54 = &qword_1015D88D8;
    sub_1000FF27C(v67, v91, &qword_1015D88D8);
    swift_storeEnumTagMultiPayload();
    sub_1001010F8(&qword_1015D8920, &qword_1015D88E8);
    sub_1002979F0(&qword_1015D8928, &qword_1015D88D8, &qword_1015D8930, &qword_1015D8938);
    uint64_t v55 = (uint64_t)v106;
    _ConditionalContent<>.init(storage:)();
    sub_10029500C(v114);
    uint64_t v56 = v67;
LABEL_8:
    sub_1000FF2E0(v56, v54);
    uint64_t v68 = sub_1000FF33C(&qword_1015D8910);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v55, 0, 1, v68);
    uint64_t v69 = v102;
    sub_100101750(v55, v102, &qword_1015D88F0);
    uint64_t v70 = v107;
LABEL_9:
    sub_1000FF27C(v51, v48, &qword_1015D8900);
    double v71 = v103;
    uint64_t v72 = v104;
    uint64_t v73 = v48;
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
    uint64_t v75 = v52;
    uint64_t v76 = v105;
    v74(v103, v75, v105);
    sub_1000FF27C(v69, v55, &qword_1015D88F0);
    sub_1000FF27C(v73, v70, &qword_1015D8900);
    uint64_t v77 = v69;
    uint64_t v78 = sub_1000FF33C(&qword_1015D8918);
    v74((char *)(v70 + *(int *)(v78 + 48)), v71, v76);
    sub_1000FF27C(v55, v70 + *(int *)(v78 + 64), &qword_1015D88F0);
    sub_1000FF2E0(v77, &qword_1015D88F0);
    uint64_t v79 = *(void (**)(char *, uint64_t))(v72 + 8);
    v79(v110, v76);
    sub_1000FF2E0(v108, &qword_1015D8900);
    sub_1000FF2E0(v55, &qword_1015D88F0);
    v79(v71, v76);
    return sub_1000FF2E0(v109, &qword_1015D8900);
  }
  type metadata accessor for NearbyTransitDeparturesProvider();
  sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10028004C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D8D80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[2] = static Font.body.getter();
  id v9 = [self labelColor];
  uint64_t v10 = Color.init(uiColor:)();
  v26[1] = v10;
  uint64_t v11 = static VerticalAlignment.center.getter();
  sub_100280330(v1, v10, (uint64_t)&v32);
  uint64_t v13 = v32;
  uint64_t v12 = v33;
  LOBYTE(v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v34;
  uint64_t v14 = v35;
  uint64_t v15 = v36;
  char v16 = v37;
  char v17 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v32 = v11;
  uint64_t v33 = 0;
  char v34 = 1;
  uint64_t v35 = v13;
  uint64_t v36 = v12;
  char v37 = v10;
  uint64_t v38 = v14;
  uint64_t v39 = v15;
  char v40 = v16;
  char v41 = v17;
  uint64_t v42 = v18;
  uint64_t v43 = v19;
  uint64_t v44 = v20;
  uint64_t v45 = v21;
  char v46 = 0;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v22 = sub_1000FF33C(&qword_1015D89C0);
  uint64_t v23 = sub_100292640(&qword_1015D89B8, &qword_1015D89C0, &qword_1015D89C8, &qword_1015D89D0);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  sub_10017F958(v35, v36, v37);
  swift_bridgeObjectRelease();
  uint64_t v32 = v22;
  uint64_t v33 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v29;
  View.accessibilityIdentifier(_:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v8, v24);
}

uint64_t sub_100280330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(a1 + 168);
  if (v10)
  {
    long long v11 = *(_OWORD *)(a1 + 48);
    _OWORD v37[2] = *(_OWORD *)(a1 + 32);
    void v37[3] = v11;
    v37[4] = *(_OWORD *)(a1 + 64);
    uint64_t v38 = *(void *)(a1 + 80);
    long long v12 = *(_OWORD *)(a1 + 16);
    v37[0] = *(_OWORD *)a1;
    v37[1] = v12;
    swift_getKeyPath();
    swift_getKeyPath();
    id v13 = v10;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_1002C1744((uint64_t)v37, (uint64_t)v9);
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v35 = v15;
    uint64_t v36 = v17;
    sub_100180324();
    uint64_t v18 = Text.init<A>(_:)();
    uint64_t v20 = v19;
    LOBYTE(v17) = v21 & 1;
    uint64_t v22 = Text.font(_:)();
    uint64_t v24 = v23;
    char v26 = v25 & 1;
    sub_10017F958(v18, v20, v17);
    swift_bridgeObjectRelease();
    uint64_t v35 = a2;
    uint64_t v27 = Text.foregroundStyle<A>(_:)();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    LOBYTE(v15) = v32 & 1;
    sub_10017F958(v22, v24, v26);
    swift_bridgeObjectRelease();
    *(void *)a3 = v27;
    *(void *)(a3 + 8) = v29;
    *(unsigned char *)(a3 + 16) = v15;
    *(void *)(a3 + 24) = v31;
    *(void *)(a3 + 32) = 0;
    *(unsigned char *)(a3 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 1;
    sub_10017FDF0(v27, v29, v15);
    swift_bridgeObjectRetain();
    sub_10017F958(v27, v29, v15);
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1002805FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10028004C(a1);
}

uint64_t sub_100280660(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v25 = v1[1];
  uint64_t v26 = v6;
  uint64_t v7 = v1[2];
  uint64_t v23 = v1[3];
  uint64_t v24 = v7;
  uint64_t v8 = v1[4];
  uint64_t v21 = v1[5];
  uint64_t v22 = v8;
  uint64_t v9 = v1[6];
  uint64_t v19 = v1[7];
  uint64_t v20 = v9;
  uint64_t v10 = v1[8];
  uint64_t v17 = v1[9];
  uint64_t v18 = v10;
  uint64_t v11 = v1[10];
  uint64_t v15 = v1[11];
  uint64_t v16 = v11;
  uint64_t v35 = v6;
  uint64_t v36 = v25;
  uint64_t v37 = v7;
  uint64_t v38 = v23;
  uint64_t v39 = v8;
  uint64_t v40 = v21;
  uint64_t v41 = v9;
  uint64_t v42 = v19;
  uint64_t v43 = v10;
  uint64_t v44 = v17;
  uint64_t v45 = v11;
  uint64_t v46 = v15;
  uint64_t v28 = sub_1000FF33C(&qword_1015D8D10);
  State.wrappedValue.getter();
  uint64_t v12 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v27, v2);
  id v13 = (void *)swift_unknownObjectRetain();
  sub_10031D5CC(v13, (uint64_t)v5, v12, (uint64_t *)v47);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = v26;
  uint64_t v36 = v25;
  uint64_t v37 = v24;
  uint64_t v38 = v23;
  uint64_t v39 = v22;
  uint64_t v40 = v21;
  uint64_t v41 = v20;
  uint64_t v42 = v19;
  uint64_t v43 = v18;
  uint64_t v44 = v17;
  uint64_t v45 = v16;
  uint64_t v46 = v15;
  long long v31 = v47[2];
  long long v32 = v47[3];
  long long v33 = v47[4];
  uint64_t v34 = v48;
  long long v29 = v47[0];
  long long v30 = v47[1];
  return State.wrappedValue.setter();
}

id sub_100280894()
{
  uint64_t v1 = type metadata accessor for ColorScheme();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v18 - v6;
  uint64_t v8 = *(void *)(v0 + 8);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 64);
  uint64_t v12 = *(void *)(v0 + 72);
  v18[0] = *(void *)v0;
  v18[1] = v8;
  long long v19 = *(_OWORD *)(v0 + 16);
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  long long v22 = *(_OWORD *)(v0 + 48);
  uint64_t v23 = v11;
  uint64_t v24 = v12;
  long long v25 = *(_OWORD *)(v0 + 80);
  sub_1000FF33C(&qword_1015D8D10);
  State.wrappedValue.getter();
  uint64_t v13 = v26;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v13) {
    return 0;
  }
  uint64_t v14 = self;
  type metadata accessor for NearbyTransitDepartureView(0);
  sub_1001272E8((uint64_t)v7);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ColorScheme.dark(_:), v1);
  char v15 = static ColorScheme.== infix(_:_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v4, v1);
  v16(v7, v1);
  id result = [v14 _mapkit_liveTransitIndicatorImageUsingDarkMode:v15 & 1];
  if (result) {
    return (id)Image.init(uiImage:)();
  }
  return result;
}

uint64_t sub_100280ABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v102 = a1;
  uint64_t v2 = sub_1000FF33C(&qword_1015D8CC0);
  uint64_t v93 = *(void *)(v2 - 8);
  uint64_t v94 = v2;
  __chkstk_darwin(v2);
  uint64_t v92 = &v77[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = sub_1000FF33C(&qword_1015D8CC8);
  __chkstk_darwin(v87);
  Swift::String v86 = (uint64_t *)&v77[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v91 = &v77[-v6];
  uint64_t v101 = sub_1000FF33C(&qword_1015D8CD0);
  __chkstk_darwin(v101);
  uint64_t v90 = &v77[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  int v95 = &v77[-v9];
  uint64_t v10 = type metadata accessor for NearbyTransitDepartureView(0);
  uint64_t v88 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v89 = v11;
  uint64_t v97 = (uint64_t *)&v77[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = sub_1000FF33C(&qword_1015D8CD8);
  __chkstk_darwin(v84);
  uint64_t v13 = (uint64_t *)&v77[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  long long v106 = &v77[-v15];
  uint64_t v16 = sub_1000FF33C(&qword_1015D8CE0);
  __chkstk_darwin(v16 - 8);
  uint64_t v85 = &v77[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v100 = &v77[-v19];
  uint64_t v98 = sub_1000FF33C(&qword_1015D8CE8);
  __chkstk_darwin(v98);
  uint64_t v99 = &v77[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for DynamicTypeSize();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = &v77[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  uint64_t v27 = &v77[-v26];
  uint64_t v96 = v10;
  uint64_t v105 = v1;
  sub_100127B9C((uint64_t)&v77[-v26]);
  (*(void (**)(unsigned char *, void, uint64_t))(v22 + 104))(v24, enum case for DynamicTypeSize.accessibility1(_:), v21);
  sub_10028BA3C((unint64_t *)&qword_1015D8CF0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  int v28 = dispatch thunk of static Comparable.< infix(_:_:)();
  long long v29 = *(void (**)(unsigned char *, uint64_t))(v22 + 8);
  v29(v24, v21);
  v29(v27, v21);
  uint64_t v30 = static Font.body.getter();
  uint64_t v31 = static Font.subheadline.getter();
  long long v32 = self;
  id v33 = [v32 labelColor];
  uint64_t v34 = Color.init(uiColor:)();
  id v35 = [v32 secondaryLabelColor];
  uint64_t v36 = Color.init(uiColor:)();
  uint64_t v37 = static Font.body.getter();
  id v38 = [v32 labelColor];
  uint64_t v103 = Color.init(uiColor:)();
  uint64_t v104 = v30;
  uint64_t v39 = v31;
  if (v28) {
    uint64_t v40 = static HorizontalAlignment.trailing.getter();
  }
  else {
    uint64_t v40 = static HorizontalAlignment.leading.getter();
  }
  uint64_t v83 = v40;
  uint64_t v41 = static Font.subheadline.getter();
  uint64_t v42 = v105;
  uint64_t v43 = v106;
  uint64_t v44 = (uint64_t)v100;
  if (*(unsigned char *)(v105 + *(int *)(v96 + 32)) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_1001010F8(&qword_1015D8D08, &qword_1015D8CD0);
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    int v78 = v28 ^ 1;
    *(void *)uint64_t v44 = static HorizontalAlignment.leading.getter();
    *(void *)(v44 + 8) = 0;
    *(unsigned char *)(v44 + 16) = 1;
    uint64_t v46 = v44 + *(int *)(sub_1000FF33C((uint64_t *)&unk_1015D8CF8) + 44);
    uint64_t v96 = v34;
    uint64_t v82 = v39;
    uint64_t v81 = v36;
    sub_100281634(v42, v34, v39, v36, v46);
    uint64_t v47 = v97;
    sub_100294160(v42, (uint64_t)v97, type metadata accessor for NearbyTransitDepartureView);
    swift_retain();
    uint64_t v48 = v103;
    swift_retain();
    swift_retain();
    uint64_t v49 = static VerticalAlignment.center.getter();
    *uint64_t v13 = swift_getKeyPath();
    sub_1000FF33C(&qword_1015CE720);
    swift_storeEnumTagMultiPayload();
    long long v50 = (int *)v84;
    sub_100281C1C(v47, v37, v48, v41, (uint64_t)v13 + *(int *)(v84 + 36));
    sub_1002942A0((uint64_t)v47, type metadata accessor for NearbyTransitDepartureView);
    uint64_t v79 = v41;
    swift_release();
    swift_release();
    uint64_t v80 = v37;
    swift_release();
    *(uint64_t *)((char *)v13 + v50[12]) = v49;
    uint64_t v51 = (char *)v13 + v50[13];
    *(void *)uint64_t v51 = 0;
    v51[8] = 0;
    *(uint64_t *)((char *)v13 + v50[10]) = v83;
    long long v52 = (char *)v13 + v50[11];
    *(void *)long long v52 = 0;
    v52[8] = 1;
    *((unsigned char *)v13 + v50[14]) = 1;
    sub_100101750((uint64_t)v13, (uint64_t)v43, &qword_1015D8CD8);
    uint64_t v53 = static VerticalAlignment.firstTextBaseline.getter();
    long long v54 = v85;
    sub_1000FF27C(v44, (uint64_t)v85, &qword_1015D8CE0);
    sub_1000FF27C((uint64_t)v43, (uint64_t)v13, &qword_1015D8CD8);
    uint64_t v55 = static HorizontalAlignment.leading.getter();
    uint64_t KeyPath = swift_getKeyPath();
    char v57 = v86;
    *Swift::String v86 = KeyPath;
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = (int *)v87;
    LOBYTE(v47) = v78 & 1;
    sub_1002825E8((uint64_t)v54, v78 & 1, (uint64_t)v13, (uint64_t)v57 + *(int *)(v87 + 36));
    sub_1000FF2E0((uint64_t)v54, &qword_1015D8CE0);
    sub_1000FF2E0((uint64_t)v13, &qword_1015D8CD8);
    *(uint64_t *)((char *)v57 + v58[12]) = v53;
    uint64_t v59 = v105;
    char v60 = (char *)v57 + v58[13];
    *(void *)char v60 = 0;
    v60[8] = 1;
    *(uint64_t *)((char *)v57 + v58[10]) = v55;
    uint64_t v61 = (char *)v57 + v58[11];
    *(void *)uint64_t v61 = 0;
    v61[8] = 1;
    *((unsigned char *)v57 + v58[14]) = (_BYTE)v47;
    uint64_t v62 = (uint64_t)v57;
    uint64_t v63 = v91;
    sub_100101750(v62, (uint64_t)v91, &qword_1015D8CC8);
    uint64_t v64 = *(void **)(v59 + 96);
    if (v64)
    {
      uint64_t v65 = v44;
      swift_beginAccess();
      id v66 = v64;
      sub_1000FF33C(&qword_1015CF290);
      uint64_t v67 = v92;
      Published.projectedValue.getter();
      swift_endAccess();

      uint64_t v68 = v97;
      sub_100294160(v59, (uint64_t)v97, type metadata accessor for NearbyTransitDepartureView);
      unint64_t v69 = (*(unsigned __int8 *)(v88 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
      uint64_t v70 = swift_allocObject();
      sub_1002952EC((uint64_t)v68, v70 + v69, type metadata accessor for NearbyTransitDepartureView);
      double v71 = v90;
      sub_1000FF27C((uint64_t)v63, (uint64_t)v90, &qword_1015D8CC8);
      uint64_t v72 = v101;
      uint64_t v74 = v93;
      uint64_t v73 = v94;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v93 + 16))(&v71[*(int *)(v101 + 52)], v67, v94);
      uint64_t v75 = (uint64_t (**)(uint64_t))&v71[*(int *)(v72 + 56)];
      char *v75 = sub_10029B600;
      v75[1] = (uint64_t (*)(uint64_t))v70;
      (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v67, v73);
      sub_1000FF2E0((uint64_t)v63, &qword_1015D8CC8);
      uint64_t v76 = v95;
      sub_100101750((uint64_t)v71, (uint64_t)v95, &qword_1015D8CD0);
      sub_1000FF27C((uint64_t)v76, (uint64_t)v99, &qword_1015D8CD0);
      swift_storeEnumTagMultiPayload();
      sub_1001010F8(&qword_1015D8D08, &qword_1015D8CD0);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_1000FF2E0((uint64_t)v76, &qword_1015D8CD0);
      sub_1000FF2E0((uint64_t)v106, &qword_1015D8CD8);
      return sub_1000FF2E0(v65, &qword_1015D8CE0);
    }
    else
    {
      type metadata accessor for NearbyTransitDeparturesProvider();
      sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100281634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v65 = a4;
  v64[3] = a3;
  uint64_t v67 = a2;
  uint64_t v73 = a5;
  uint64_t v6 = sub_1000FF33C(&qword_1015D8D58);
  __chkstk_darwin(v6 - 8);
  uint64_t v74 = (uint64_t)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v69 = (char *)v64 - v9;
  uint64_t v70 = sub_1000FF33C(&qword_1015D8D60);
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v72 = (uint64_t)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v64 - v12;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v75 = *(void *)a1;
  uint64_t v76 = v14;
  long long v77 = *(_OWORD *)(a1 + 16);
  uint64_t v78 = v15;
  uint64_t v79 = v16;
  long long v80 = *(_OWORD *)(a1 + 48);
  uint64_t v81 = v17;
  uint64_t v82 = v18;
  long long v83 = *(_OWORD *)(a1 + 80);
  uint64_t v66 = sub_1000FF33C(&qword_1015D8D10);
  State.wrappedValue.getter();
  uint64_t v19 = v84;
  uint64_t v20 = v85;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v75 = v19;
  uint64_t v76 = v20;
  v64[1] = sub_100180324();
  uint64_t v21 = Text.init<A>(_:)();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  uint64_t v26 = Text.font(_:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  sub_10017F958(v21, v23, v25);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v75 = v26;
  uint64_t v76 = v28;
  LOBYTE(v77) = v32;
  *((void *)&v77 + 1) = v30;
  uint64_t v78 = KeyPath;
  LOBYTE(v79) = 0;
  *(void *)&long long v80 = v67;
  swift_retain();
  uint64_t v34 = sub_1000FF33C(&qword_1015D8D68);
  sub_10029B6E4();
  double v71 = v13;
  v64[2] = v34;
  View.accessibilityIdentifier(_:)();
  sub_10017F958(v26, v28, v32);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a1 + 8);
  uint64_t v36 = *(void *)(a1 + 32);
  uint64_t v37 = *(void *)(a1 + 40);
  uint64_t v38 = *(void *)(a1 + 64);
  uint64_t v39 = *(void *)(a1 + 72);
  uint64_t v75 = *(void *)a1;
  uint64_t v76 = v35;
  long long v77 = *(_OWORD *)(a1 + 16);
  uint64_t v78 = v36;
  uint64_t v79 = v37;
  long long v80 = *(_OWORD *)(a1 + 48);
  uint64_t v81 = v38;
  uint64_t v82 = v39;
  long long v83 = *(_OWORD *)(a1 + 80);
  State.wrappedValue.getter();
  uint64_t v40 = v86;
  uint64_t v41 = v87;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v41)
  {
    uint64_t v75 = v40;
    uint64_t v76 = v41;
    uint64_t v42 = Text.init<A>(_:)();
    uint64_t v44 = v43;
    char v46 = v45 & 1;
    uint64_t v47 = Text.font(_:)();
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    char v53 = v52 & 1;
    sub_10017F958(v42, v44, v46);
    swift_bridgeObjectRelease();
    uint64_t v54 = swift_getKeyPath();
    uint64_t v75 = v47;
    uint64_t v76 = v49;
    LOBYTE(v77) = v53;
    *((void *)&v77 + 1) = v51;
    uint64_t v78 = v54;
    LOBYTE(v79) = 0;
    *(void *)&long long v80 = v65;
    swift_retain();
    uint64_t v55 = v69;
    View.accessibilityIdentifier(_:)();
    sub_10017F958(v47, v49, v53);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v56 = 0;
    uint64_t v57 = (uint64_t)v55;
  }
  else
  {
    uint64_t v56 = 1;
    uint64_t v57 = (uint64_t)v69;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v57, v56, 1, v70);
  uint64_t v58 = (uint64_t)v71;
  uint64_t v59 = v72;
  sub_1000FF27C((uint64_t)v71, v72, &qword_1015D8D60);
  uint64_t v60 = v74;
  sub_1000FF27C(v57, v74, &qword_1015D8D58);
  uint64_t v61 = v73;
  sub_1000FF27C(v59, v73, &qword_1015D8D60);
  uint64_t v62 = sub_1000FF33C(&qword_1015D8D78);
  sub_1000FF27C(v60, v61 + *(int *)(v62 + 48), &qword_1015D8D58);
  sub_1000FF2E0(v57, &qword_1015D8D58);
  sub_1000FF2E0(v58, &qword_1015D8D60);
  sub_1000FF2E0(v60, &qword_1015D8D58);
  return sub_1000FF2E0(v59, &qword_1015D8D60);
}

id sub_100281C1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v69 = a3;
  uint64_t v67 = a2;
  uint64_t v71 = a5;
  uint64_t v6 = sub_1000FF33C(&qword_1015D7CB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v72 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v61 = (char *)&v60 - v9;
  uint64_t v10 = sub_1000FF33C(&qword_1015D8D30);
  __chkstk_darwin(v10 - 8);
  uint64_t v66 = (uint64_t *)((char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = sub_1000FF33C(&qword_1015D8D38);
  __chkstk_darwin(v65);
  uint64_t v70 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v64 = (uint64_t)&v60 - v14;
  __chkstk_darwin(v15);
  uint64_t v68 = (uint64_t)&v60 - v16;
  uint64_t v17 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v19 = a1[2];
  uint64_t v79 = a1[3];
  uint64_t v21 = a1[4];
  uint64_t v20 = a1[5];
  uint64_t v78 = a1[6];
  uint64_t v77 = a1[7];
  uint64_t v76 = a1[8];
  uint64_t v75 = a1[9];
  uint64_t v74 = a1[10];
  uint64_t v73 = a1[11];
  uint64_t v80 = v17;
  uint64_t v81 = v18;
  *(void *)&long long v82 = v19;
  *((void *)&v82 + 1) = v79;
  uint64_t v83 = v21;
  uint64_t v84 = v20;
  *(void *)&long long v85 = v78;
  *((void *)&v85 + 1) = v77;
  uint64_t v86 = v76;
  uint64_t v87 = v75;
  *(void *)&long long v88 = v74;
  *((void *)&v88 + 1) = v73;
  sub_1000FF33C(&qword_1015D8D10);
  State.wrappedValue.getter();
  uint64_t v62 = v89;
  uint64_t v63 = v90;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v80 = v17;
  uint64_t v81 = v18;
  *(void *)&long long v82 = v19;
  *((void *)&v82 + 1) = v79;
  uint64_t v83 = v21;
  uint64_t v84 = v20;
  *(void *)&long long v85 = v78;
  *((void *)&v85 + 1) = v77;
  uint64_t v86 = v76;
  uint64_t v87 = v75;
  *(void *)&long long v88 = v74;
  *((void *)&v88 + 1) = v73;
  State.wrappedValue.getter();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id result = (id)MKTransitLiveDepartureColorForLiveStatus();
  if (result)
  {
    uint64_t v23 = Color.init(uiColor:)();
    uint64_t v24 = static VerticalAlignment.center.getter();
    uint64_t v25 = (uint64_t)v66;
    uint64_t *v66 = v24;
    *(void *)(v25 + 8) = 0x4014000000000000;
    *(unsigned char *)(v25 + 16) = 0;
    uint64_t v26 = sub_1000FF33C(&qword_1015D8D40);
    sub_100282368(v62, v63, v69, (uint64_t)a1, v23, v25 + *(int *)(v26 + 44));
    swift_bridgeObjectRelease();
    uint64_t v27 = v64;
    sub_1000FF27C(v25, v64, &qword_1015D8D30);
    *(void *)(v27 + *(int *)(v65 + 36)) = 0x3FF0000000000000;
    sub_1000FF2E0(v25, &qword_1015D8D30);
    uint64_t v28 = v68;
    sub_100101750(v27, v68, &qword_1015D8D38);
    uint64_t v29 = a1[1];
    uint64_t v30 = a1[4];
    uint64_t v31 = a1[5];
    uint64_t v32 = a1[8];
    uint64_t v33 = a1[9];
    uint64_t v80 = *a1;
    uint64_t v81 = v29;
    long long v82 = *((_OWORD *)a1 + 1);
    uint64_t v83 = v30;
    uint64_t v84 = v31;
    long long v85 = *((_OWORD *)a1 + 3);
    uint64_t v86 = v32;
    uint64_t v87 = v33;
    long long v88 = *((_OWORD *)a1 + 5);
    State.wrappedValue.getter();
    uint64_t v34 = v91;
    uint64_t v35 = v92;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35)
    {
      uint64_t v80 = v34;
      uint64_t v81 = v35;
      sub_100180324();
      uint64_t v36 = Text.init<A>(_:)();
      uint64_t v38 = v37;
      char v40 = v39 & 1;
      uint64_t v80 = v23;
      uint64_t v41 = Text.foregroundStyle<A>(_:)();
      uint64_t v43 = v42;
      uint64_t v79 = v23;
      char v45 = v44 & 1;
      sub_10017F958(v36, v38, v40);
      swift_bridgeObjectRelease();
      uint64_t v46 = Text.font(_:)();
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      char v52 = v51 & 1;
      sub_10017F958(v41, v43, v45);
      swift_bridgeObjectRelease();
      uint64_t v80 = v46;
      uint64_t v81 = v48;
      LOBYTE(v82) = v52;
      *((void *)&v82 + 1) = v50;
      uint64_t v53 = (uint64_t)v61;
      View.accessibilityIdentifier(_:)();
      sub_10017F958(v46, v48, v52);
      swift_bridgeObjectRelease();
      uint64_t v54 = sub_1000FF33C(&qword_1015D7C68);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
    }
    else
    {
      uint64_t v55 = sub_1000FF33C(&qword_1015D7C68);
      uint64_t v53 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v61, 1, 1, v55);
    }
    uint64_t v56 = v70;
    sub_1000FF27C(v28, v70, &qword_1015D8D38);
    uint64_t v57 = v72;
    sub_1000FF27C(v53, v72, &qword_1015D7CB0);
    uint64_t v58 = v71;
    sub_1000FF27C(v56, v71, &qword_1015D8D38);
    uint64_t v59 = sub_1000FF33C(&qword_1015D8D48);
    sub_1000FF27C(v57, v58 + *(int *)(v59 + 48), &qword_1015D7CB0);
    swift_release();
    sub_1000FF2E0(v53, &qword_1015D7CB0);
    sub_1000FF2E0(v28, &qword_1015D8D38);
    sub_1000FF2E0(v57, &qword_1015D7CB0);
    return (id)sub_1000FF2E0(v56, &qword_1015D8D38);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100282368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a6;
  uint64_t v8 = sub_1000FF33C(&qword_1015D7C68);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  uint64_t v19 = Text.font(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_10017F958(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v40 = v37;
  uint64_t v24 = Text.foregroundStyle<A>(_:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  sub_10017F958(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v40 = v24;
  uint64_t v41 = v26;
  char v42 = v30;
  uint64_t v43 = v28;
  View.accessibilityIdentifier(_:)();
  sub_10017F958(v24, v26, v30);
  swift_bridgeObjectRelease();
  id v31 = sub_100280894();
  if (v31)
  {
    uint64_t v32 = v36;
    swift_retain();
  }
  else
  {
    uint64_t v32 = 0;
  }
  sub_1000FF27C((uint64_t)v13, (uint64_t)v10, &qword_1015D7C68);
  uint64_t v33 = v39;
  sub_1000FF27C((uint64_t)v10, v39, &qword_1015D7C68);
  uint64_t v34 = (void *)(v33 + *(int *)(sub_1000FF33C(&qword_1015D8D50) + 48));
  void *v34 = v31;
  v34[1] = v32;
  sub_10029B664((uint64_t)v31);
  sub_1000FF2E0((uint64_t)v13, &qword_1015D7C68);
  sub_10029B6A4((uint64_t)v31);
  return sub_1000FF2E0((uint64_t)v10, &qword_1015D7C68);
}

uint64_t sub_1002825E8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v7 = sub_1000FF33C(&qword_1015D8CD8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = sub_1000FF33C(&qword_1015D8D18);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v23 - v18;
  sub_1000FF27C(a1, (uint64_t)&v23 - v18, &qword_1015D8CE0);
  *(_WORD *)&v19[*(int *)(v14 + 44)] = 256;
  sub_1000FF27C(v24, (uint64_t)v12, &qword_1015D8CD8);
  sub_1000FF27C((uint64_t)v19, (uint64_t)v16, &qword_1015D8D18);
  sub_1000FF27C((uint64_t)v12, (uint64_t)v9, &qword_1015D8CD8);
  sub_1000FF27C((uint64_t)v16, a4, &qword_1015D8D18);
  uint64_t v20 = sub_1000FF33C((uint64_t *)&unk_1015D8D20);
  uint64_t v21 = a4 + *(int *)(v20 + 48);
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = a2 ^ 1;
  *(unsigned char *)(v21 + 9) = a2;
  sub_1000FF27C((uint64_t)v9, a4 + *(int *)(v20 + 64), &qword_1015D8CD8);
  sub_1000FF2E0((uint64_t)v12, &qword_1015D8CD8);
  sub_1000FF2E0((uint64_t)v19, &qword_1015D8D18);
  sub_1000FF2E0((uint64_t)v9, &qword_1015D8CD8);
  return sub_1000FF2E0((uint64_t)v16, &qword_1015D8D18);
}

uint64_t sub_1002827E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v82 = a1;
  uint64_t v2 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v80 = *(void *)(v2 - 8);
  uint64_t v81 = v2;
  __chkstk_darwin(v2);
  uint64_t v79 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D8E00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D8E08);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D8E10);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000FF33C(&qword_1015D8E18) - 8;
  __chkstk_darwin(v69);
  uint64_t v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000FF33C(&qword_1015D8E20) - 8;
  __chkstk_darwin(v71);
  uint64_t v70 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000FF33C(&qword_1015D8E28);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000FF33C(&qword_1015D8E30);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v75 = v20;
  uint64_t v76 = v21;
  __chkstk_darwin(v20);
  uint64_t v74 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0x4008000000000000;
  v7[16] = 0;
  uint64_t v23 = sub_1000FF33C(&qword_1015D8E38);
  sub_100282ED8(v1, (uint64_t)&v7[*(int *)(v23 + 44)]);
  id v68 = self;
  id v24 = [v68 secondaryLabelColor];
  uint64_t v25 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v83 = v25;
  swift_retain();
  uint64_t v27 = AnyShapeStyle.init<A>(_:)();
  sub_1000FF27C((uint64_t)v7, (uint64_t)v11, &qword_1015D8E00);
  swift_release();
  uint64_t v28 = (uint64_t *)&v11[*(int *)(v9 + 44)];
  *uint64_t v28 = KeyPath;
  v28[1] = v27;
  sub_1000FF2E0((uint64_t)v7, &qword_1015D8E00);
  LOBYTE(v27) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_1000FF27C((uint64_t)v11, (uint64_t)v15, &qword_1015D8E08);
  uint64_t v37 = &v15[*(int *)(v13 + 44)];
  char *v37 = v27;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_1000FF2E0((uint64_t)v11, &qword_1015D8E08);
  LOBYTE(v13) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_1000FF27C((uint64_t)v15, (uint64_t)v17, &qword_1015D8E10);
  uint64_t v46 = &v17[*(int *)(v69 + 44)];
  *uint64_t v46 = v13;
  *((void *)v46 + 1) = v39;
  *((void *)v46 + 2) = v41;
  *((void *)v46 + 3) = v43;
  *((void *)v46 + 4) = v45;
  v46[40] = 0;
  sub_1000FF2E0((uint64_t)v15, &qword_1015D8E10);
  id v47 = [v68 tertiarySystemFillColor];
  uint64_t v48 = Color.init(uiColor:)();
  LOBYTE(v27) = static Edge.Set.all.getter();
  uint64_t v49 = v70;
  sub_1000FF27C((uint64_t)v17, v70, &qword_1015D8E18);
  uint64_t v50 = v49 + *(int *)(v71 + 44);
  *(void *)uint64_t v50 = v48;
  *(unsigned char *)(v50 + 8) = v27;
  sub_1000FF2E0((uint64_t)v17, &qword_1015D8E18);
  char v51 = v77;
  char v52 = &v77[*(int *)(v78 + 28)];
  uint64_t v53 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v54 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v52, v53, v54);
  __asm { FMOV            V0.2D, #12.0 }
  *char v51 = _Q0;
  uint64_t v61 = (uint64_t)v72;
  uint64_t v60 = v73;
  uint64_t v62 = (uint64_t)&v72[*(int *)(v73 + 36)];
  sub_100294160((uint64_t)v51, v62, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v62 + *(int *)(sub_1000FF33C(&qword_1015CFF60) + 36)) = 256;
  sub_1000FF27C(v49, v61, &qword_1015D8E20);
  sub_1002942A0((uint64_t)v51, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000FF2E0(v49, &qword_1015D8E20);
  uint64_t v63 = v79;
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v64 = sub_10029B88C();
  uint64_t v65 = v74;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v63, v81);
  sub_1000FF2E0(v61, &qword_1015D8E28);
  uint64_t v83 = v60;
  unint64_t v84 = v64;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = v75;
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v65, v66);
}

id sub_100282ED8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v67 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v65 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for Image.ResizingMode();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000FF33C(&qword_1015D8E70);
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v69 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000FF33C(&qword_1015D8E78);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  id v68 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D8E80);
  __chkstk_darwin(v8 - 8);
  uint64_t v76 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v75 = (uint64_t)&v61 - v11;
  uint64_t v12 = type metadata accessor for ColorScheme();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v61 - v17;
  id v19 = [objc_allocWithZone((Class)MKTransitShield) initWithShieldType:210002 text:0 color:0];
  id result = [objc_allocWithZone((Class)MKTransitArtwork) initWithShield:v19 accessibilityText:0];
  if (result)
  {
    uint64_t v21 = result;

    type metadata accessor for NearbyTransitWalkingPillView(0);
    sub_1001272E8((uint64_t)v18);
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for ColorScheme.dark(_:), v12);
    char v22 = static ColorScheme.== infix(_:_:)();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
    v23(v15, v12);
    v23(v18, v12);
    id v24 = self;
    id v25 = v21;
    id v26 = [v24 mainScreen];
    [v26 scale];
    double v28 = v27;

    id v29 = [self sharedInstance];
    id v30 = [v29 imageForArtwork:v25 size:6 featureType:2 scale:v22 & 1 nightMode:v28];

    uint64_t v31 = 1;
    id v72 = v25;
    if (v30)
    {
      id v62 = [v30 imageWithRenderingMode:2];
      Image.init(uiImage:)();
      uint64_t v32 = v63;
      uint64_t v33 = v64;
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v64);
      uint64_t v34 = Image.resizable(capInsets:resizingMode:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
      uint64_t v35 = a1;
      sub_1000FF33C(&qword_1015D81F0);
      ScaledMetric.wrappedValue.getter();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      v80._uint64_t countAndFlagsBits = v34;
      v80._uint64_t object = 0;
      __int16 v81 = 1;
      uint64_t v82 = v87;
      char v83 = v88;
      uint64_t v84 = v89;
      char v85 = v90;
      long long v86 = v91;
      uint64_t v36 = v65;
      static AccessibilityChildBehavior.ignore.getter();
      uint64_t v37 = sub_1000FF33C(&qword_1015D0E20);
      uint64_t v38 = sub_10029BAEC((unint64_t *)&qword_1015D0E28, &qword_1015D0E20, (void (*)(void))sub_10029BB68);
      uint64_t v39 = v69;
      View.accessibilityElement(children:)();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v36, v67);
      swift_release();
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v92._uint64_t countAndFlagsBits = 0xD000000000000034;
      v92._uint64_t object = (void *)0x8000000100F81FF0;
      v40._uint64_t object = (void *)0x8000000100F81FD0;
      v40._uint64_t countAndFlagsBits = 0xD000000000000015;
      v41._uint64_t countAndFlagsBits = 1802264919;
      v41._uint64_t object = (void *)0xE400000000000000;
      Swift::String v80 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)qword_101611820, v41, v92);
      uint64_t v78 = v37;
      uint64_t v79 = v38;
      swift_getOpaqueTypeConformance2();
      sub_100180324();
      uint64_t v42 = (uint64_t)v68;
      uint64_t v43 = v71;
      View.accessibilityLabel<A>(_:)();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v43);
      uint64_t v44 = v75;
      sub_100101750(v42, v75, &qword_1015D8E78);
      uint64_t v31 = 0;
    }
    else
    {
      uint64_t v35 = a1;
      uint64_t v44 = v75;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v44, v31, 1, v74);
    uint64_t v45 = (void *)v35[1];
    v80._uint64_t countAndFlagsBits = *v35;
    v80._uint64_t object = v45;
    sub_100180324();
    swift_bridgeObjectRetain();
    uint64_t v46 = Text.init<A>(_:)();
    uint64_t v48 = v47;
    char v50 = v49 & 1;
    static Font.caption.getter();
    uint64_t v51 = Text.font(_:)();
    uint64_t v53 = v52;
    char v55 = v54;
    uint64_t v57 = v56;
    swift_release();
    sub_10017F958(v46, v48, v50);
    swift_bridgeObjectRelease();
    uint64_t v58 = v76;
    sub_1000FF27C(v44, v76, &qword_1015D8E80);
    uint64_t v59 = v77;
    sub_1000FF27C(v58, v77, &qword_1015D8E80);
    uint64_t v60 = v59 + *(int *)(sub_1000FF33C(&qword_1015D8E88) + 48);
    sub_10017FDF0(v51, v53, v55 & 1);
    swift_bridgeObjectRetain();

    *(void *)uint64_t v60 = v51;
    *(void *)(v60 + 8) = v53;
    *(unsigned char *)(v60 + 16) = v55 & 1;
    *(void *)(v60 + 24) = v57;
    sub_1000FF2E0(v44, &qword_1015D8E80);
    sub_10017F958(v51, v53, v55 & 1);
    swift_bridgeObjectRelease();
    return (id)sub_1000FF2E0(v58, &qword_1015D8E80);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100283868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)sub_1000FF33C(&qword_1015D8A88);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = sub_1000FF33C(&qword_1015D8A90);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10029836C((uint64_t)v2);
  uint64_t v16 = static HorizontalAlignment.leading.getter();
  uint64_t v17 = static VerticalAlignment.center.getter();
  uint64_t *v8 = swift_getKeyPath();
  sub_1000FF33C(&qword_1015CE720);
  swift_storeEnumTagMultiPayload();
  sub_100283B98(v2, (uint64_t)v8 + v6[9]);
  sub_1002983E0((uint64_t)v2);
  *(uint64_t *)((char *)v8 + v6[12]) = v17;
  uint64_t v18 = (char *)v8 + v6[13];
  *(void *)uint64_t v18 = 0x4020000000000000;
  v18[8] = 0;
  *(uint64_t *)((char *)v8 + v6[10]) = v16;
  id v19 = (char *)v8 + v6[11];
  *(void *)id v19 = 0;
  v19[8] = 1;
  *((unsigned char *)v8 + v6[14]) = 0;
  sub_100101750((uint64_t)v8, (uint64_t)v11, &qword_1015D8A88);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v20 = sub_1001010F8(&qword_1015D8A98, &qword_1015D8A88);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  sub_1000FF2E0((uint64_t)v11, &qword_1015D8A88);
  id v26 = v6;
  uint64_t v27 = v20;
  swift_getOpaqueTypeConformance2();
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_100283B98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v54 = type metadata accessor for NearbyTransitWalkingPillView(0);
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000FF33C(&qword_1015D8AA0);
  uint64_t v61 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v55 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D8AA8);
  __chkstk_darwin(v5 - 8);
  uint64_t v62 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v58 = (uint64_t)&v53 - v8;
  uint64_t v9 = sub_1000FF33C(&qword_1015D7C68);
  __chkstk_darwin(v9 - 8);
  uint64_t v60 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v53 - v12;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v53 = a1[2];
  uint64_t v57 = a1[3];
  uint64_t v64 = v14;
  uint64_t v65 = v15;
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  static Font.title3.getter();
  uint64_t v21 = Text.font(_:)();
  uint64_t v23 = v22;
  char v25 = v24;
  swift_release();
  sub_10017F958(v16, v18, v20);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v26 = Text.fontWeight(_:)();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  sub_10017F958(v21, v23, v25 & 1);
  swift_bridgeObjectRelease();
  id v31 = [self labelColor];
  uint64_t v64 = Color.init(uiColor:)();
  uint64_t v32 = Text.foregroundStyle<A>(_:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  uint64_t v39 = v26;
  uint64_t v40 = v57;
  sub_10017F958(v39, v28, v30);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = v32;
  uint64_t v65 = v34;
  char v66 = v38;
  uint64_t v67 = v36;
  View.accessibilityIdentifier(_:)();
  sub_10017F958(v32, v34, v38);
  swift_bridgeObjectRelease();
  if (v40)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v42 = (uint64_t *)v56;
    *(void *)&v56[*(int *)(v54 + 20)] = KeyPath;
    sub_1000FF33C(&qword_1015CE6F8);
    swift_storeEnumTagMultiPayload();
    *uint64_t v42 = v53;
    v42[1] = v40;
    uint64_t v64 = 0x402C000000000000;
    sub_1001742A0();
    swift_bridgeObjectRetain();
    ScaledMetric.init(wrappedValue:)();
    uint64_t v43 = v55;
    sub_100294160((uint64_t)v42, v55, type metadata accessor for NearbyTransitWalkingPillView);
    uint64_t v44 = v59;
    *(void *)(v43 + *(int *)(v59 + 36)) = 0x3FF0000000000000;
    sub_1002942A0((uint64_t)v42, type metadata accessor for NearbyTransitWalkingPillView);
    uint64_t v45 = v58;
    sub_100101750(v43, v58, &qword_1015D8AA0);
    uint64_t v46 = 0;
    uint64_t v47 = v44;
  }
  else
  {
    uint64_t v46 = 1;
    uint64_t v45 = v58;
    uint64_t v47 = v59;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v45, v46, 1, v47);
  uint64_t v48 = v60;
  sub_1000FF27C((uint64_t)v13, v60, &qword_1015D7C68);
  uint64_t v49 = v62;
  sub_1000FF27C(v45, v62, &qword_1015D8AA8);
  uint64_t v50 = v63;
  sub_1000FF27C(v48, v63, &qword_1015D7C68);
  uint64_t v51 = sub_1000FF33C(&qword_1015D8AB0);
  sub_1000FF27C(v49, v50 + *(int *)(v51 + 48), &qword_1015D8AA8);
  sub_1000FF2E0(v45, &qword_1015D8AA8);
  sub_1000FF2E0((uint64_t)v13, &qword_1015D7C68);
  sub_1000FF2E0(v49, &qword_1015D8AA8);
  return sub_1000FF2E0(v48, &qword_1015D7C68);
}

uint64_t sub_100284108@<X0>(uint64_t a1@<X8>)
{
  return sub_100283868(a1);
}

id sub_100284154()
{
  id v0 = objc_allocWithZone((Class)TransitItemIncidentCollectionViewCell);

  return [v0 init];
}

id sub_10028418C(void *a1)
{
  sub_1000FF33C((uint64_t *)&unk_1015D85B0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  Class v3 = Date._bridgeToObjectiveC()().super.isa;
  [a1 configureWithIncidents:isa referenceDate:v3];

  return [a1 invalidateIntrinsicContentSize];
}

uint64_t sub_100284244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10028BA3C(&qword_1015D8A80, (void (*)(uint64_t))type metadata accessor for NearbyTransitGroupIncidentsView);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002842D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10028BA3C(&qword_1015D8A80, (void (*)(uint64_t))type metadata accessor for NearbyTransitGroupIncidentsView);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10028436C()
{
}

uint64_t sub_1002843C4()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v4._uint64_t countAndFlagsBits = 0xD00000000000004BLL;
  v4._uint64_t object = (void *)0x8000000100F81CA0;
  v0._uint64_t object = (void *)0x8000000100F81C80;
  v0._uint64_t countAndFlagsBits = 0xD000000000000014;
  v1._uint64_t countAndFlagsBits = 7235920;
  v1._uint64_t object = (void *)0xE300000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v4);
  uint64_t result = v3._countAndFlagsBits;
  xmmword_101611A80 = (__int128)v3;
  return result;
}

uint64_t sub_100284474()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v4._uint64_t countAndFlagsBits = 0xD000000000000055;
  v4._uint64_t object = (void *)0x8000000100F81C20;
  v0._uint64_t object = (void *)0x8000000100F81C00;
  v0._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v1._uint64_t countAndFlagsBits = 0x702065766F6D6552;
  v1._uint64_t object = (void *)0xEA00000000006E69;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v4);
  uint64_t result = v3._countAndFlagsBits;
  xmmword_101611A90 = (__int128)v3;
  return result;
}

uint64_t sub_100284530()
{
  uint64_t v1 = type metadata accessor for NearbyTransitGroupView(0);
  sub_1000FF33C(&qword_1015D8000);
  State.wrappedValue.getter();
  uint64_t result = 0;
  if (v3 == 1)
  {
    if (*(void *)(*(void *)(v0 + *(int *)(v1 + 20) + 32) + 16) < 3uLL) {
      return 0;
    }
    else {
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

int64_t sub_100284600@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 20) + 32);
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D8000);
  State.wrappedValue.getter();
  if (v21) {
    int64_t v4 = 2;
  }
  else {
    int64_t v4 = *(void *)(v3 + 16);
  }
  int64_t result = sub_1000F7BB8(v4, v3);
  if (v7 == v8 >> 1)
  {
    int64_t result = swift_unknownObjectRelease();
  }
  else
  {
    if (v7 >= (uint64_t)(v8 >> 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = *(void *)(v6 + 80 * v7 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v9 + 16))
    {
      uint64_t v11 = *(void *)(v9 + 32);
      uint64_t v10 = *(void *)(v9 + 40);
      uint64_t v12 = *(void *)(v9 + 48);
      uint64_t v13 = *(void *)(v9 + 72);
      uint64_t v14 = *(void *)(v9 + 80);
      uint64_t v15 = *(void *)(v9 + 104);
      uint64_t v16 = *(void *)(v9 + 112);
      long long v19 = *(_OWORD *)(v9 + 88);
      long long v20 = *(_OWORD *)(v9 + 56);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int64_t result = swift_bridgeObjectRelease();
      if (!v16)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t result = swift_bridgeObjectRelease();
        uint64_t v11 = 0;
        uint64_t v10 = 0;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        goto LABEL_14;
      }
      if (v16 != 4)
      {
        long long v18 = v19;
        long long v17 = v20;
        goto LABEL_15;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    int64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v11 = 0;
  uint64_t v10 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
LABEL_14:
  long long v17 = 0uLL;
  long long v18 = 0uLL;
LABEL_15:
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 24) = v17;
  *(void *)(a1 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v13;
  *(void *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 56) = v18;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v16;
  return result;
}

uint64_t sub_100284848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NearbyTransitGroupView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *(void *)(v1 + *(int *)(v7 + 28) + 40);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15 >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_100294160(v1, (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitGroupView);
    unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v10 = (v5 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = sub_1002952EC((uint64_t)v6, v11 + v9, type metadata accessor for NearbyTransitGroupView);
    *(void *)(v11 + v1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v8;
    __chkstk_darwin(v12);
    *(&v18 - 2) = v8;
    *(&v18 - 1) = v1;
    type metadata accessor for NearbyTransitGroupIncidentsView(0);
    sub_10028BA3C(&qword_1015D85A8, (void (*)(uint64_t))type metadata accessor for NearbyTransitGroupIncidentsView);
    swift_bridgeObjectRetain();
    Button.init(action:label:)();
    uint64_t v13 = sub_1000FF33C(&qword_1015D8570);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
  }
  uint64_t v16 = sub_1000FF33C(&qword_1015D8570);
  long long v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);

  return v17(a1, 1, 1, v16);
}

uint64_t sub_100284B24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 28));
  if (v1)
  {
    uint64_t v2 = v1 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
    swift_beginAccess();
    sub_1000FF27C(v2, (uint64_t)v10, (uint64_t *)&unk_1015CF2A0);
    if (v11)
    {
      sub_1000FF4D4((uint64_t)v10, (uint64_t)v9);
      sub_1000FF2E0((uint64_t)v10, (uint64_t *)&unk_1015CF2A0);
      uint64_t v3 = (void **)sub_1000FF380(v9, v9[3]);
      uint64_t v4 = *v3;
      uint64_t v5 = *(void **)((char *)*v3 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator);
      if (v5)
      {
        sub_1000FF33C((uint64_t *)&unk_1015D85B0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        id v7 = [v4 view];
        [v5 viewController:v4 openTransitIncidents:isa fromView:v7 withUserInfo:0];
      }
      return sub_1000FF22C((uint64_t)v9);
    }
    else
    {
      return sub_1000FF2E0((uint64_t)v10, (uint64_t *)&unk_1015CF2A0);
    }
  }
  else
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100284CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for NearbyTransitGroupIncidentsView(0);
  __chkstk_darwin(v6);
  unint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = *(void **)(a2 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 28));
  if (v9)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    id v10 = v9;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    void *v8 = a1;
    return sub_1002952EC((uint64_t)v8, a3, type metadata accessor for NearbyTransitGroupIncidentsView);
  }
  else
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    swift_bridgeObjectRetain();
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100284E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v40 = a5;
  uint64_t v7 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v39 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NearbyTransitGroupView(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = sub_1000FF33C(&qword_1015D8430);
  uint64_t v36 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000FF33C(&qword_1015D8448);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v37 = v16;
  uint64_t v38 = v17;
  __chkstk_darwin(v16);
  long long v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000FF33C(&qword_1015D8428);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100294160(v6, (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitGroupView);
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1002952EC((uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, type metadata accessor for NearbyTransitGroupView);
  uint64_t v41 = v32;
  uint64_t v42 = v33;
  uint64_t v43 = v34;
  uint64_t v44 = v35;
  sub_1000FF33C(&qword_1015D8450);
  sub_10029BAEC(&qword_1015D8458, &qword_1015D8450, (void (*)(void))sub_100294568);
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  uint64_t v25 = sub_1001010F8(&qword_1015D8438, &qword_1015D8430);
  uint64_t v26 = sub_10028BA3C(&qword_1015D8440, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v13);
  uint64_t v45 = v13;
  uint64_t v46 = v7;
  uint64_t v47 = v25;
  uint64_t v48 = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v37;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v27);
  uint64_t v28 = v40;
  sub_1000FF27C((uint64_t)v22, v40, &qword_1015D8428);
  uint64_t v29 = v28 + *(int *)(sub_1000FF33C(&qword_1015D8410) + 36);
  *(unsigned char *)(v29 + 32) = 0;
  *(_OWORD *)uint64_t v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  return sub_1000FF2E0((uint64_t)v22, &qword_1015D8428);
}

id sub_100285348()
{
  return [self captureUserAction:237 target:44 value:0];
}

uint64_t sub_1002853D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v47 = a4;
  uint64_t v46 = a3;
  uint64_t v49 = a5;
  uint64_t v7 = type metadata accessor for NearbyTransitCollapsedLinesView(0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000FF33C(&qword_1015D8478);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D8468);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000FF33C(&qword_1015D8450);
  __chkstk_darwin(v48);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)((char *)v10 + *(int *)(v8 + 28)) = swift_getKeyPath();
  sub_1000FF33C(&qword_1015CE6F8);
  swift_storeEnumTagMultiPayload();
  *uint64_t v10 = a1;
  v10[1] = a2;
  uint64_t v19 = v47;
  v10[2] = v46;
  void v10[3] = v19;
  *(void *)((char *)v10 + *(int *)(v8 + 32)) = 0x4010000000000000;
  swift_unknownObjectRetain();
  Text.Measurements.init()();
  char v20 = static Edge.Set.horizontal.getter();
  if (qword_1015CBE98 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_100294160((uint64_t)v10, (uint64_t)v13, type metadata accessor for NearbyTransitCollapsedLinesView);
  uint64_t v29 = &v13[*(int *)(v11 + 36)];
  *uint64_t v29 = v20;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_1002942A0((uint64_t)v10, type metadata accessor for NearbyTransitCollapsedLinesView);
  char v30 = static Edge.Set.vertical.getter();
  if (qword_1015CBE88 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_1000FF27C((uint64_t)v13, (uint64_t)v16, &qword_1015D8478);
  uint64_t v39 = &v16[*(int *)(v14 + 36)];
  *uint64_t v39 = v30;
  *((void *)v39 + 1) = v32;
  *((void *)v39 + 2) = v34;
  *((void *)v39 + 3) = v36;
  *((void *)v39 + 4) = v38;
  v39[40] = 0;
  sub_1000FF2E0((uint64_t)v13, &qword_1015D8478);
  if (qword_1015CBE90 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1000FF27C((uint64_t)v16, (uint64_t)v18, &qword_1015D8468);
  uint64_t v40 = &v18[*(int *)(v48 + 36)];
  long long v41 = v55;
  *((_OWORD *)v40 + 4) = v54;
  *((_OWORD *)v40 + 5) = v41;
  *((_OWORD *)v40 + 6) = v56;
  long long v42 = v51;
  *(_OWORD *)uint64_t v40 = v50;
  *((_OWORD *)v40 + 1) = v42;
  long long v43 = v53;
  *((_OWORD *)v40 + 2) = v52;
  *((_OWORD *)v40 + 3) = v43;
  sub_1000FF2E0((uint64_t)v16, &qword_1015D8468);
  return sub_100101750((uint64_t)v18, v49, &qword_1015D8450);
}

uint64_t sub_100285864@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v63 = *(void *)a1;
  long long v65 = *(_OWORD *)(a1 + 8);
  uint64_t v62 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v61 = *(void *)(a1 + 40);
  uint64_t v58 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v60 = *(void *)(a1 + 56);
  uint64_t v59 = *(void *)(a1 + 64);
  char v5 = *(unsigned char *)(a1 + 72);
  uint64_t v6 = v4 & 1;
  uint64_t v7 = sub_1000FF33C(&qword_1015D84F8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for NearbyTransitLineSectionView(0);
  __chkstk_darwin(v66);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D84A0);
  uint64_t v74 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v71 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000FF33C(&qword_1015D84F0);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v70 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v69 = (char *)&v57 - v16;
  uint64_t v68 = sub_1000FF33C((uint64_t *)&unk_1015D8500);
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v6)
  {
    if (qword_1015CBEA0 != -1) {
      goto LABEL_16;
    }
    goto LABEL_6;
  }
  if (qword_1015CBEA8 != -1) {
    swift_once();
  }
  v78[0] = xmmword_101611A90;
  sub_100180324();
  swift_bridgeObjectRetain();
  while (1)
  {
    Label<>.init<A>(_:systemImage:)();
    uint64_t v19 = type metadata accessor for NearbyTransitGroupView(0);
    uint64_t v20 = *(void *)(v77 + *(int *)(v19 + 20) + 32);
    uint64_t v21 = (char *)(v77 + *(int *)(v19 + 36));
    char v22 = *v21;
    uint64_t v23 = *((void *)v21 + 1);
    LOBYTE(v78[0]) = v22;
    *((void *)&v78[0] + 1) = v23;
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015D8000);
    State.wrappedValue.getter();
    if (v85) {
      int64_t v24 = 2;
    }
    else {
      int64_t v24 = *(void *)(v20 + 16);
    }
    sub_1000F7BB8(v24, v20);
    uint64_t v76 = a2;
    uint64_t v75 = v12;
    if (v26 == v27 >> 1)
    {
      uint64_t v28 = v58 & 1;
      swift_unknownObjectRelease();
      *(void *)&v78[0] = v63;
      *(_OWORD *)((char *)v78 + 8) = v65;
      *((void *)&v78[1] + 1) = v62;
      *(void *)&long long v79 = v6;
      *((void *)&v79 + 1) = v61;
      *(void *)Swift::String v80 = v28;
      *(void *)&v80[8] = v60;
      *(void *)&v80[16] = v59;
      v80[24] = v5 & 1;
      long long v81 = 0u;
      long long v82 = 0u;
      long long v83 = 0u;
      memset(v84, 0, 25);
      sub_10019F20C(a1);
      sub_10029497C((uint64_t *)v78);
      char v29 = 0;
      goto LABEL_15;
    }
    if (v26 < (uint64_t)(v27 >> 1)) {
      break;
    }
    __break(1u);
LABEL_16:
    swift_once();
LABEL_6:
    v78[0] = xmmword_101611A80;
    sub_100180324();
    swift_bridgeObjectRetain();
  }
  char v30 = (_OWORD *)(v25 + 80 * v26);
  v78[0] = *v30;
  long long v31 = v30[1];
  long long v32 = v30[2];
  long long v33 = v30[3];
  *(_OWORD *)&v80[9] = *(_OWORD *)((char *)v30 + 57);
  long long v79 = v32;
  *(_OWORD *)Swift::String v80 = v33;
  v78[1] = v31;
  sub_10019F20C((uint64_t)v78);
  swift_unknownObjectRelease();
  sub_10019F20C(a1);
  char v29 = sub_1002BF334(a1, (uint64_t)v78);
  sub_10019F274((uint64_t)v78);
  sub_10019F274(a1);
LABEL_15:
  uint64_t v85 = 0x4048000000000000;
  sub_10019F20C(a1);
  sub_1001742F4();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v34 = (int *)v66;
  uint64_t v35 = (uint64_t *)&v11[*(int *)(v66 + 24)];
  type metadata accessor for NearbyTransitDeparturesProvider();
  sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
  uint64_t *v35 = EnvironmentObject.init()();
  v35[1] = v36;
  uint64_t v37 = &v11[v34[7]];
  BOOL v89 = 0;
  State.init(wrappedValue:)();
  uint64_t v38 = &v11[v34[5]];
  long long v39 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v38 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v38 + 3) = v39;
  *(_OWORD *)(v38 + 57) = *(_OWORD *)(a1 + 57);
  long long v40 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)a1;
  *((_OWORD *)v38 + 1) = v40;
  v11[v34[8]] = v29 & 1;
  BOOL v89 = *(void *)(*(void *)(a1 + 16) + 16) > 3uLL;
  State.init(wrappedValue:)();
  uint64_t v41 = swift_release();
  uint64_t v42 = v86;
  char *v37 = v85;
  *((void *)v37 + 1) = v42;
  __chkstk_darwin(v41);
  LODWORD(v65) = v6 ^ 1;
  *((unsigned char *)&v57 - 32) = v6 ^ 1;
  uint64_t v43 = v77;
  *(&v57 - 3) = v77;
  *(&v57 - 2) = a1;
  uint64_t v64 = v18;
  *(&v57 - 1) = (uint64_t)v18;
  uint64_t v44 = sub_1000FF33C(&qword_1015D84B0);
  uint64_t v45 = sub_1001010F8(&qword_1015D84C0, &qword_1015D84B0);
  ContextMenu.init(menuItems:)();
  uint64_t v46 = sub_1000FF33C(&qword_1015D8510);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v9, 0, 1, v46);
  uint64_t v47 = sub_10028BA3C(&qword_1015D84B8, (void (*)(uint64_t))type metadata accessor for NearbyTransitLineSectionView);
  uint64_t v48 = v71;
  View.contextMenu<A>(_:)();
  sub_1000FF2E0((uint64_t)v9, &qword_1015D84F8);
  uint64_t v49 = sub_1002942A0((uint64_t)v11, type metadata accessor for NearbyTransitLineSectionView);
  __chkstk_darwin(v49);
  *((unsigned char *)&v57 - 32) = v65;
  *(&v57 - 3) = v43;
  *(&v57 - 2) = a1;
  long long v50 = v64;
  *(&v57 - 1) = (uint64_t)v64;
  sub_1000FF33C(&qword_1015D84A8);
  uint64_t v85 = (uint64_t)v34;
  uint64_t v86 = v44;
  uint64_t v87 = v47;
  uint64_t v88 = v45;
  swift_getOpaqueTypeConformance2();
  sub_100294898();
  long long v51 = v70;
  uint64_t v52 = v75;
  View.swipeActions<A>(edge:allowsFullSwipe:content:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v48, v52);
  long long v53 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
  long long v54 = v69;
  uint64_t v55 = v73;
  v53(v69, v51, v73);
  v53(v76, v54, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v50, v68);
}

uint64_t sub_100286234(char a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for NearbyTransitGroupView(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_100294160(a2, (uint64_t)&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for NearbyTransitGroupView);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  sub_1002952EC((uint64_t)&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11, type metadata accessor for NearbyTransitGroupView);
  uint64_t v13 = (_OWORD *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  long long v14 = a3[3];
  void v13[2] = a3[2];
  _OWORD v13[3] = v14;
  *(_OWORD *)((char *)v13 + 57) = *(_OWORD *)((char *)a3 + 57);
  long long v15 = a3[1];
  *uint64_t v13 = *a3;
  v13[1] = v15;
  uint64_t v18 = a4;
  sub_10019F20C((uint64_t)a3);
  sub_1000FF33C((uint64_t *)&unk_1015D8500);
  sub_1001010F8(&qword_1015D8520, (uint64_t *)&unk_1015D8500);
  return Button.init(action:label:)();
}

uint64_t sub_100286408@<X0>(char a1@<W0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v9 = type metadata accessor for NearbyTransitGroupView(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = sub_1000FF33C(&qword_1015D84D8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  long long v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100294160(a2, (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitGroupView);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = a1;
  sub_1002952EC((uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for NearbyTransitGroupView);
  uint64_t v18 = (_OWORD *)(v17 + ((v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  long long v19 = a3[3];
  void v18[2] = a3[2];
  v18[3] = v19;
  *(_OWORD *)((char *)v18 + 57) = *(_OWORD *)((char *)a3 + 57);
  long long v20 = a3[1];
  *uint64_t v18 = *a3;
  v18[1] = v20;
  uint64_t v33 = a4;
  sub_10019F20C((uint64_t)a3);
  sub_1000FF33C(&qword_1015D8518);
  uint64_t v21 = sub_10010118C((uint64_t *)&unk_1015D8500);
  uint64_t v22 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v23 = sub_1001010F8(&qword_1015D8520, (uint64_t *)&unk_1015D8500);
  uint64_t v24 = sub_10028BA3C((unint64_t *)&unk_1015D8528, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v34 = v21;
  uint64_t v35 = v22;
  uint64_t v36 = v23;
  uint64_t v37 = v24;
  swift_getOpaqueTypeConformance2();
  Button.init(action:label:)();
  uint64_t v25 = static Color.yellow.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = v25;
  swift_retain();
  uint64_t v27 = AnyShapeStyle.init<A>(_:)();
  uint64_t v28 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v32, v15, v12);
  swift_release();
  char v29 = (uint64_t *)(v28 + *(int *)(sub_1000FF33C(&qword_1015D84A8) + 36));
  *char v29 = KeyPath;
  v29[1] = v27;
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

id sub_100286778(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v13 - 8);
  long long v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *(void **)(a2 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 28));
  if ((a1 & 1) == 0)
  {
    if (v16)
    {
      uint64_t v21 = *(void *)(a3 + 24);
      uint64_t v22 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 1, 1, v22);
      uint64_t v23 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v24 = (void *)swift_allocObject();
      long long v24[2] = 0;
      v24[3] = 0;
      v24[4] = v23;
      uint64_t v24[5] = v21;
      id v25 = v16;
      swift_unknownObjectRetain();
      sub_100042AF4((uint64_t)v15, a6, (uint64_t)v24);

      swift_release();
      return [self captureUserAction:a7 target:44 value:0];
    }
    goto LABEL_8;
  }
  if (!v16)
  {
LABEL_8:
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    id result = (id)EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v17 = *(void **)(a3 + 24);
  id v18 = v16;
  sub_100143E14(v17);

  long long v19 = self;

  return [v19 captureUserAction:a4 target:44 value:0];
}

uint64_t sub_1002869CC()
{
  uint64_t v0 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  IconOnlyLabelStyle.init()();
  sub_1000FF33C((uint64_t *)&unk_1015D8500);
  sub_1001010F8(&qword_1015D8520, (uint64_t *)&unk_1015D8500);
  sub_10028BA3C((unint64_t *)&unk_1015D8528, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100286B30@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  Swift::String v92 = a1;
  uint64_t v3 = sub_1000FF33C(&qword_1015D8348);
  __chkstk_darwin(v3 - 8);
  uint64_t v85 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v93 = (uint64_t)&v81 - v6;
  uint64_t v7 = (int *)type metadata accessor for NearbyTransitGroupView(0);
  uint64_t v81 = *((void *)v7 - 1);
  uint64_t v8 = *(void *)(v81 + 64);
  __chkstk_darwin(v7);
  long long v83 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v82 = (uint64_t)&v81 - v10;
  uint64_t v11 = sub_1000FF33C(&qword_1015D8350);
  __chkstk_darwin(v11 - 8);
  uint64_t v91 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v84 = (char *)&v81 - v14;
  uint64_t v15 = sub_1000FF33C(&qword_1015D8358);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000FF33C(&qword_1015D8360);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v88 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v81 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v81 - v25;
  sub_100287414(v1, (uint64_t)v17);
  sub_10029BAEC(&qword_1015D8368, &qword_1015D8358, (void (*)(void))sub_100293FCC);
  Section<>.init(header:content:)();
  uint64_t v89 = v19;
  uint64_t v90 = v18;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v87 = v26;
  uint64_t v28 = v26;
  char v29 = v7;
  v27(v28, v23, v18);
  uint64_t v30 = *(void *)(v1 + v7[5] + 32);
  uint64_t v31 = v1 + v7[9];
  char v32 = *(unsigned char *)v31;
  uint64_t v33 = *(void *)(v31 + 8);
  LOBYTE(v94) = v32;
  uint64_t v95 = v33;
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D8000);
  State.wrappedValue.getter();
  if (v98) {
    int64_t v34 = 2;
  }
  else {
    int64_t v34 = *(void *)(v30 + 16);
  }
  int64_t v35 = sub_1000F7BB8(v34, v30);
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v42 = v1 + v7[8];
  uint64_t v43 = *(void *)(v42 + 8);
  LOBYTE(v94) = *(unsigned char *)v42;
  uint64_t v95 = v43;
  State.wrappedValue.getter();
  int64_t v86 = v35;
  if (v98)
  {
    uint64_t v44 = *(void (**)(void))(*(void *)(sub_1000FF33C(&qword_1015D83F8) - 8) + 56);
    uint64_t v45 = (uint64_t)v84;
  }
  else
  {
    int64_t v94 = v35;
    uint64_t v95 = v37;
    uint64_t v96 = v39;
    uint64_t v97 = v41;
    uint64_t v46 = v82;
    sub_100294160(v1, v82, type metadata accessor for NearbyTransitGroupView);
    unint64_t v47 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    uint64_t v48 = swift_allocObject();
    sub_1002952EC(v46, v48 + v47, type metadata accessor for NearbyTransitGroupView);
    swift_unknownObjectRetain();
    sub_1000FF33C(&qword_1015D83D0);
    sub_1000FF33C(&qword_1015D83D8);
    sub_1001010F8(&qword_1015D83E0, &qword_1015D83D0);
    sub_1001010F8(&qword_1015D83E8, &qword_1015D83D8);
    unint64_t v80 = sub_10029424C();
    uint64_t v49 = v84;
    ForEach<>.init(_:content:)();
    uint64_t v44 = *(void (**)(void))(*(void *)(sub_1000FF33C(&qword_1015D83F8) - 8) + 56);
    uint64_t v45 = (uint64_t)v49;
  }
  v44();
  uint64_t v50 = (uint64_t)v83;
  uint64_t v51 = *(void *)(v42 + 8);
  LOBYTE(v94) = *(unsigned char *)v42;
  uint64_t v95 = v51;
  State.wrappedValue.getter();
  unsigned __int8 v52 = v98;
  sub_100294160(v2, v50, type metadata accessor for NearbyTransitGroupView);
  if (v52)
  {
    sub_1002942A0(v50, type metadata accessor for NearbyTransitGroupView);
    uint64_t v53 = (uint64_t)v85;
    uint64_t v54 = v93;
LABEL_13:
    uint64_t v67 = sub_1000FF33C(&qword_1015D8400);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v54, 1, 1, v67);
    goto LABEL_14;
  }
  uint64_t v55 = v50 + v29[9];
  char v56 = *(unsigned char *)v55;
  uint64_t v57 = *(void *)(v55 + 8);
  LOBYTE(v94) = v56;
  uint64_t v95 = v57;
  State.wrappedValue.getter();
  int v58 = v98;
  sub_1002942A0(v50, type metadata accessor for NearbyTransitGroupView);
  BOOL v59 = v58 == 1;
  uint64_t v53 = (uint64_t)v85;
  uint64_t v54 = v93;
  if (!v59) {
    goto LABEL_13;
  }
  uint64_t v60 = v93;
  uint64_t v61 = sub_100284530();
  uint64_t v54 = v60;
  if (!v61) {
    goto LABEL_13;
  }
  __chkstk_darwin(v61);
  *(&v81 - 6) = v2;
  *(&v81 - 5) = v62;
  *(&v81 - 4) = v63;
  *(&v81 - 3) = v64;
  unint64_t v80 = v65;
  sub_1000FF33C(&qword_1015D8410);
  sub_100294330();
  uint64_t v54 = v60;
  ControlGroup.init(content:)();
  swift_unknownObjectRelease();
  uint64_t v66 = sub_1000FF33C(&qword_1015D8400);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v60, 0, 1, v66);
LABEL_14:
  uint64_t v69 = v88;
  uint64_t v68 = v89;
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  uint64_t v71 = v87;
  uint64_t v72 = v90;
  v70(v88, v87, v90);
  uint64_t v73 = v91;
  sub_1000FF27C(v45, v91, &qword_1015D8350);
  uint64_t v74 = v54;
  uint64_t v75 = v53;
  sub_1000FF27C(v74, v53, &qword_1015D8348);
  uint64_t v76 = v92;
  v70(v92, v69, v72);
  uint64_t v77 = sub_1000FF33C(&qword_1015D8408);
  sub_1000FF27C(v73, (uint64_t)&v76[*(int *)(v77 + 48)], &qword_1015D8350);
  sub_1000FF27C(v75, (uint64_t)&v76[*(int *)(v77 + 64)], &qword_1015D8348);
  swift_unknownObjectRelease();
  sub_1000FF2E0(v93, &qword_1015D8348);
  sub_1000FF2E0(v45, &qword_1015D8350);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v68 + 8);
  v78(v71, v72);
  sub_1000FF2E0(v75, &qword_1015D8348);
  sub_1000FF2E0(v73, &qword_1015D8350);
  return ((uint64_t (*)(char *, uint64_t))v78)(v69, v72);
}

uint64_t sub_100287414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v41[0] = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D83A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D8398);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D8388);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D8378);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.leading.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v18 = sub_1000FF33C(&qword_1015D8548);
  sub_10028772C(a1, (uint64_t)&v5[*(int *)(v18 + 44)]);
  sub_1000FF27C((uint64_t)v5, (uint64_t)v9, &qword_1015D83A8);
  uint64_t v19 = &v9[*(int *)(v7 + 44)];
  unsigned char v19[32] = 0;
  *(_OWORD *)uint64_t v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  sub_1000FF2E0((uint64_t)v5, &qword_1015D83A8);
  v41[1] = static Color.clear.getter();
  swift_retain();
  uint64_t v20 = AnyView.init<A>(_:)();
  sub_1000FF27C((uint64_t)v9, (uint64_t)v13, &qword_1015D8398);
  swift_release();
  *(void *)&v13[*(int *)(v11 + 44)] = v20;
  sub_1000FF2E0((uint64_t)v9, &qword_1015D8398);
  LOBYTE(v7) = static Edge.Set.top.getter();
  type metadata accessor for NearbyTransitGroupView(0);
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_1000FF27C((uint64_t)v13, (uint64_t)v17, &qword_1015D8388);
  char v29 = &v17[*(int *)(v15 + 44)];
  *char v29 = v7;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_1000FF2E0((uint64_t)v13, &qword_1015D8388);
  LOBYTE(v7) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v41[0];
  sub_1000FF27C((uint64_t)v17, v41[0], &qword_1015D8378);
  uint64_t v39 = v38 + *(int *)(sub_1000FF33C(&qword_1015D8358) + 36);
  *(unsigned char *)uint64_t v39 = v7;
  *(void *)(v39 + 8) = v31;
  *(void *)(v39 + 16) = v33;
  *(void *)(v39 + 24) = v35;
  *(void *)(v39 + 32) = v37;
  *(unsigned char *)(v39 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = 0;
  return sub_1000FF2E0((uint64_t)v17, &qword_1015D8378);
}

uint64_t sub_10028772C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v70 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v67 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000FF33C((uint64_t *)&unk_1015D8550);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D5088);
  __chkstk_darwin(v5 - 8);
  uint64_t v71 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000FF33C(&qword_1015D8560);
  uint64_t v92 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v69 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D8568);
  __chkstk_darwin(v8 - 8);
  uint64_t v75 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1000FF33C(&qword_1015D8570);
  uint64_t v78 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v76 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D8578);
  __chkstk_darwin(v11 - 8);
  uint64_t v91 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v94 = (uint64_t)&v66 - v14;
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D8580);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v88 = (uint64_t *)((char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1000FF33C(&qword_1015D7C70);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000FF33C(&qword_1015D8590);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v95 = (uint64_t)&v66 - v26;
  uint64_t v27 = type metadata accessor for NearbyTransitGroupView(0);
  uint64_t v28 = (uint64_t *)(a1 + *(int *)(v27 + 20));
  uint64_t v29 = v28[1];
  uint64_t v86 = *v28;
  uint64_t v81 = v29;
  uint64_t v30 = v28[3];
  uint64_t v85 = v28[2];
  uint64_t v82 = v30;
  uint64_t v31 = v28[4];
  uint64_t v32 = v28[5];
  int v84 = *((unsigned __int8 *)v28 + 48);
  uint64_t v83 = v28[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100284600((uint64_t)v101);
  uint64_t v33 = v101[1];
  sub_10029500C(v101);
  BOOL v80 = v33 != 0;
  uint64_t v34 = *(int *)(v27 + 32);
  uint64_t v77 = a1;
  uint64_t v35 = a1 + v34;
  uint64_t v36 = *(void *)(a1 + v34 + 8);
  char v96 = *(unsigned char *)(a1 + v34);
  uint64_t v97 = v36;
  uint64_t v87 = sub_1000FF33C(&qword_1015D8000);
  State.projectedValue.getter();
  double v37 = v98;
  uint64_t v38 = v99;
  int v79 = v100;
  uint64_t v39 = type metadata accessor for Text.Case();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v20, 1, 1, v39);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = *(int *)(v16 + 36);
  uint64_t v42 = v88;
  sub_1000FF27C((uint64_t)v20, (uint64_t)v88 + v41, &qword_1015D7C70);
  *uint64_t v42 = KeyPath;
  uint64_t v43 = (uint64_t)&v24[*(int *)(v22 + 44)];
  uint64_t v44 = (uint64_t)v42;
  sub_1000FF27C((uint64_t)v42, v43, (uint64_t *)&unk_1015D8580);
  uint64_t v45 = v81;
  *(void *)uint64_t v24 = v86;
  *((void *)v24 + 1) = v45;
  uint64_t v46 = v82;
  *((void *)v24 + 2) = v85;
  *((void *)v24 + 3) = v46;
  *((void *)v24 + 4) = v31;
  *((void *)v24 + 5) = v32;
  v24[48] = v84;
  *((void *)v24 + 7) = v83;
  v24[64] = v80;
  *((double *)v24 + 9) = v37;
  *((void *)v24 + 1sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v38;
  v24[88] = v79;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000FF2E0(v44, (uint64_t *)&unk_1015D8580);
  sub_1000FF2E0((uint64_t)v20, &qword_1015D7C70);
  swift_release();
  swift_release();
  uint64_t v47 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = v95;
  sub_100101750((uint64_t)v24, v95, &qword_1015D8590);
  uint64_t v49 = *(void *)(v35 + 8);
  LOBYTE(v98) = *(unsigned char *)v35;
  uint64_t v99 = v49;
  State.wrappedValue.getter();
  uint64_t v50 = 1;
  if ((v96 & 1) == 0)
  {
    uint64_t v51 = v75;
    sub_100284848(v75);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v51, 1, v90) == 1)
    {
      sub_1000FF2E0(v51, &qword_1015D8568);
      uint64_t v50 = 1;
    }
    else
    {
      uint64_t v52 = v78;
      (*(void (**)(void))(v78 + 32))();
      uint64_t v53 = v67;
      BorderlessButtonStyle.init()();
      sub_1001010F8(&qword_1015D85A0, &qword_1015D8570);
      sub_10028BA3C(&qword_1015D8440, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
      uint64_t v54 = v72;
      uint64_t v55 = v70;
      View.buttonStyle<A>(_:)();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v55);
      sub_1000FF33C(&qword_1015D81F0);
      ScaledMetric.wrappedValue.getter();
      double v56 = v98;
      static Alignment.center.getter();
      uint64_t v57 = v71;
      __n128 v58 = sub_1001F10A0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v71, v56, 0, 0.0, 1);
      uint64_t v48 = v95;
      (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v54, v74, v58);
      uint64_t v59 = v69;
      sub_1000FF27C(v57, v69, &qword_1015D5088);
      uint64_t v60 = v59 + *(int *)(v47 + 36);
      *(unsigned char *)(v60 + 32) = 0;
      *(_OWORD *)uint64_t v60 = 0u;
      *(_OWORD *)(v60 + 16) = 0u;
      sub_1000FF2E0(v57, &qword_1015D5088);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v76, v90);
      sub_100101750(v59, v94, &qword_1015D8560);
      uint64_t v50 = 0;
    }
  }
  uint64_t v61 = v94;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v94, v50, 1, v47);
  sub_1000FF27C(v48, (uint64_t)v24, &qword_1015D8590);
  uint64_t v62 = v91;
  sub_1000FF27C(v61, v91, &qword_1015D8578);
  uint64_t v63 = v93;
  sub_1000FF27C((uint64_t)v24, v93, &qword_1015D8590);
  uint64_t v64 = sub_1000FF33C(&qword_1015D8598);
  sub_1000FF27C(v62, v63 + *(int *)(v64 + 48), &qword_1015D8578);
  sub_1000FF2E0(v61, &qword_1015D8578);
  sub_1000FF2E0(v48, &qword_1015D8590);
  sub_1000FF2E0(v62, &qword_1015D8578);
  return sub_1000FF2E0((uint64_t)v24, &qword_1015D8590);
}

uint64_t sub_100288190()
{
  return ControlGroup.init(content:)();
}

uint64_t sub_100288214@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D84F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100285864(a1, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  uint64_t v8 = a2 + *(int *)(sub_1000FF33C(&qword_1015D8490) + 36);
  *(_OWORD *)uint64_t v8 = xmmword_100F69580;
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10028833C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v27 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D8140);
  uint64_t v25 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000FF33C(&qword_1015D8148);
  uint64_t v7 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D8150);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000FF33C(&qword_1015D8158);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  v24[0] = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = v1[1];
  long long v38 = *v1;
  long long v39 = v14;
  long long v40 = v1[2];
  sub_1000FF33C((uint64_t *)&unk_1015D8110);
  Binding.wrappedValue.getter();
  v24[1] = v42;
  long long v24[2] = v44;
  uint64_t v32 = v43;
  uint64_t v33 = v1;
  uint64_t v34 = v41;
  uint64_t v35 = v42;
  uint64_t v36 = v43;
  uint64_t v37 = v44;
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D8160);
  sub_10029BAEC(&qword_1015D8168, &qword_1015D8160, (void (*)(void))sub_1002929F0);
  List<>.init(content:)();
  swift_bridgeObjectRelease();
  InsetGroupedListStyle.init()();
  sub_1001010F8(&qword_1015D8188, &qword_1015D8140);
  uint64_t v15 = v27;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v15);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
  uint64_t v16 = static Color.clear.getter();
  char v17 = static Edge.Set.all.getter();
  uint64_t v18 = v26;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v26);
  uint64_t v19 = &v12[*(int *)(v10 + 36)];
  *(void *)uint64_t v19 = v16;
  v19[8] = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  *(void *)&long long v38 = static Color.clear.getter();
  unint64_t v20 = sub_100292AB4();
  uint64_t v21 = v24[0];
  View.scrollContentBackground<A>(_:)();
  swift_release();
  sub_1000FF2E0((uint64_t)v12, &qword_1015D8150);
  *(void *)&long long v38 = v10;
  *((void *)&v38 + 1) = &type metadata for Color;
  *(void *)&long long v39 = v20;
  *((void *)&v39 + 1) = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v29;
  View.accessibility(identifier:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v21, v22);
}

uint64_t sub_10028889C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v10 = sub_1000FF33C(&qword_1015D8178);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain_n();
  sub_1000FF33C(&qword_1015D81A8);
  type metadata accessor for NearbyTransitGroupView(0);
  sub_1001010F8(&qword_1015D81B0, &qword_1015D81A8);
  sub_10028BA3C(&qword_1015D8180, (void (*)(uint64_t))type metadata accessor for NearbyTransitGroupView);
  sub_100292C0C();
  ForEach<>.init(_:content:)();
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v14 + 64) = v15;
  *(_OWORD *)(v14 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(_OWORD *)(a2 + 64);
  uint64_t v16 = *(void *)(a2 + 80);
  long long v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v14 + 32) = v17;
  uint64_t v18 = v26;
  uint64_t v19 = v27;
  *(void *)(v14 + 96) = v16;
  *(void *)(v14 + 104) = v18;
  uint64_t v21 = v28;
  uint64_t v20 = v29;
  *(void *)(v14 + 112) = v19;
  *(void *)(v14 + 12sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v21;
  *(void *)(v14 + 128) = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a7, v13, v10);
  uint64_t v22 = (void (**)())(a7 + *(int *)(sub_1000FF33C(&qword_1015D8160) + 36));
  *uint64_t v22 = sub_100292CE8;
  v22[1] = (void (*)())v14;
  long long v22[2] = 0;
  v22[3] = 0;
  sub_100292CF0(a2);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return v23(v13, v10);
}

double sub_100288B30@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v4 = a1[1];
  long long v36 = *a1;
  long long v37 = v4;
  long long v5 = a1[3];
  long long v38 = a1[2];
  long long v39 = v5;
  if (*(void *)(a2 + 16))
  {
    long long v6 = *(_OWORD *)(a2 + 48);
    long long v25 = *(_OWORD *)(a2 + 32);
    long long v26 = v6;
    long long v7 = *(_OWORD *)(a2 + 80);
    long long v27 = *(_OWORD *)(a2 + 64);
    long long v28 = v7;
    sub_10019F164((uint64_t)&v25);
    sub_10019F164((uint64_t)&v36);
    char v8 = sub_1002C2260((uint64_t)&v36, (uint64_t)&v25);
    sub_10019F1B8((uint64_t)&v25);
    sub_10019F1B8((uint64_t)&v36);
    double v9 = 0.0;
    if (v8) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v10 = *((void *)a1 + 7);
    uint64_t v11 = *((unsigned __int8 *)a1 + 48);
    uint64_t v12 = *((void *)a1 + 1);
    *(void *)&long long v25 = *(void *)a1;
    *((void *)&v25 + 1) = v12;
    long long v13 = a1[2];
    long long v26 = a1[1];
    long long v27 = v13;
    *(void *)&long long v28 = v11;
    *((void *)&v28 + 1) = v10;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    sub_10019F164((uint64_t)&v36);
    sub_100293398((uint64_t *)&v25);
  }
  double v9 = 18.0;
LABEL_6:
  uint64_t v34 = 0x404E000000000000;
  sub_10019F164((uint64_t)&v36);
  sub_1001742A0();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v14 = (int *)type metadata accessor for NearbyTransitGroupView(0);
  long long v15 = (uint64_t *)(a3 + v14[7]);
  type metadata accessor for NearbyTransitDeparturesProvider();
  sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
  *long long v15 = EnvironmentObject.init()();
  v15[1] = v16;
  uint64_t v17 = a3 + v14[8];
  char v33 = 0;
  State.init(wrappedValue:)();
  uint64_t v18 = v35;
  *(unsigned char *)uint64_t v17 = v34;
  *(void *)(v17 + 8) = v18;
  uint64_t v19 = a3 + v14[9];
  char v33 = 0;
  State.init(wrappedValue:)();
  unint64_t v20 = *(void *)(v38 + 16);
  swift_release();
  *(unsigned char *)uint64_t v19 = v20 > 2;
  *(void *)(v19 + 8) = 0;
  uint64_t v21 = (_OWORD *)(a3 + v14[5]);
  long long v22 = v37;
  *uint64_t v21 = v36;
  v21[1] = v22;
  double result = *(double *)&v38;
  long long v24 = v39;
  void v21[2] = v38;
  v21[3] = v24;
  *(double *)(a3 + v14[6]) = v9;
  return result;
}

uint64_t sub_100288D30@<X0>(uint64_t a1@<X8>)
{
  return sub_10028833C(a1);
}

uint64_t sub_100288D7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D8058);
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  uint64_t v46 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D8060);
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D8068);
  __chkstk_darwin(v7 - 8);
  uint64_t v54 = (uint64_t)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v49 = (uint64_t)v44 - v10;
  uint64_t v11 = sub_1000FF33C(&qword_1015D8070);
  __chkstk_darwin(v11 - 8);
  uint64_t v51 = (uint64_t)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v15 = (char *)v44 - v14;
  uint64_t v16 = a1[1];
  uint64_t v56 = *a1;
  uint64_t v57 = v16;
  unint64_t v17 = sub_100180324();
  swift_bridgeObjectRetain();
  v44[1] = v17;
  uint64_t v18 = Text.init<A>(_:)();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  uint64_t v62 = a1[6];
  uint64_t v56 = v62;
  swift_retain();
  uint64_t v23 = Text.foregroundStyle<A>(_:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_10017F958(v18, v20, v22);
  swift_bridgeObjectRelease();
  sub_10029240C((uint64_t)&v62);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v56 = v23;
  uint64_t v57 = v25;
  char v58 = v29;
  uint64_t v59 = v27;
  uint64_t v60 = KeyPath;
  uint64_t v31 = 1;
  char v61 = 1;
  sub_1000FF33C(&qword_1015D8078);
  sub_10029248C();
  uint64_t v50 = v15;
  View.accessibility(identifier:)();
  sub_10017F958(v23, v25, v29);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = a1[2];
  uint64_t v32 = a1[3];
  if (String.count.getter() < 1)
  {
    uint64_t v37 = v49;
  }
  else
  {
    uint64_t v56 = v33;
    uint64_t v57 = v32;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v34 = v46;
    Button<>.init<A>(_:action:)();
    sub_1001010F8(&qword_1015D80A0, &qword_1015D8058);
    uint64_t v35 = (uint64_t)v45;
    uint64_t v36 = v48;
    View.accessibility(identifier:)();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v36);
    uint64_t v37 = v49;
    sub_100101750(v35, v49, &qword_1015D8060);
    uint64_t v31 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v37, v31, 1, v53);
  uint64_t v39 = (uint64_t)v50;
  uint64_t v38 = v51;
  sub_1000FF27C((uint64_t)v50, v51, &qword_1015D8070);
  uint64_t v40 = v54;
  sub_1000FF27C(v37, v54, &qword_1015D8068);
  uint64_t v41 = v55;
  sub_1000FF27C(v38, v55, &qword_1015D8070);
  uint64_t v42 = sub_1000FF33C(&qword_1015D8098);
  sub_1000FF27C(v40, v41 + *(int *)(v42 + 48), &qword_1015D8068);
  sub_1000FF2E0(v37, &qword_1015D8068);
  sub_1000FF2E0(v39, &qword_1015D8070);
  sub_1000FF2E0(v40, &qword_1015D8068);
  return sub_1000FF2E0(v38, &qword_1015D8070);
}

uint64_t sub_100289278@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  _OWORD v6[2] = *(_OWORD *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4028000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = sub_1000FF33C(&qword_1015D8050);
  return sub_100288D7C((uint64_t *)v6, a1 + *(int *)(v4 + 44));
}

uint64_t sub_1002892E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v113 = a1;
  uint64_t v99 = sub_1000FF33C(&qword_1015D7F10);
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D7F18);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000FF33C(&qword_1015D7F20);
  __chkstk_darwin(v104);
  uint64_t v96 = (uint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v100 = (uint64_t)&v96 - v9;
  uint64_t v102 = sub_1000FF33C(&qword_1015D7F28);
  __chkstk_darwin(v102);
  uint64_t v103 = (_OWORD *)((char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = sub_1000FF33C(&qword_1015D7F30);
  __chkstk_darwin(v112);
  uint64_t v105 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D7F38);
  __chkstk_darwin(v12);
  uint64_t v14 = (Swift::String *)((char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v107 = sub_1000FF33C(&qword_1015D7F40);
  __chkstk_darwin(v107);
  uint64_t v101 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000FF33C(&qword_1015D7F48);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000FF33C(&qword_1015D7F50);
  __chkstk_darwin(v109);
  uint64_t v111 = (uint64_t)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000FF33C(&qword_1015D7F58);
  __chkstk_darwin(v106);
  char v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000FF33C((uint64_t *)&unk_1015D7F60);
  __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void **)(v2 + 56);
  if (!v23)
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    EnvironmentObject.error()();
    __break(1u);
    JUMPOUT(0x10028A644);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v24 = v23;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  switch((char)v120)
  {
    case 1:
      *(void *)uint64_t v18 = static VerticalAlignment.center.getter();
      *((void *)v18 + 1) = 0x4020000000000000;
      unsigned char v18[16] = 0;
      uint64_t v63 = sub_1000FF33C(&qword_1015D7FC0);
      sub_10028A660(&v18[*(int *)(v63 + 44)]);
      sub_1000FF27C((uint64_t)v18, (uint64_t)v14, &qword_1015D7F48);
      swift_storeEnumTagMultiPayload();
      sub_1001010F8(&qword_1015D7FB0, &qword_1015D7F48);
      sub_10028B800();
      uint64_t v64 = (uint64_t)v101;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v64, (uint64_t)v21, &qword_1015D7F40);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015D7F80);
      sub_10028B78C();
      sub_10028B890();
      uint64_t v65 = (uint64_t)v108;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v64, &qword_1015D7F40);
      sub_1000FF27C(v65, v111, (uint64_t *)&unk_1015D7F60);
      swift_storeEnumTagMultiPayload();
      sub_10028B854();
      sub_10028B930();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v65, (uint64_t *)&unk_1015D7F60);
      uint64_t v50 = (uint64_t)v18;
      uint64_t v51 = &qword_1015D7F48;
      return sub_1000FF2E0(v50, v51);
    case 2:
      *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
      *((void *)v6 + 1) = 0;
      v6[16] = 0;
      uint64_t v37 = sub_1000FF33C((uint64_t *)&unk_1015D7F70);
      sub_10028AC68((long long *)v2, (uint64_t)&v6[*(int *)(v37 + 44)]);
      swift_beginAccess();
      id v38 = v24;
      sub_1000FF33C((uint64_t *)&unk_1015CF280);
      uint64_t v39 = v97;
      Published.projectedValue.getter();
      swift_endAccess();

      uint64_t v40 = swift_allocObject();
      long long v41 = *(_OWORD *)(v2 + 48);
      *(_OWORD *)(v40 + 48) = *(_OWORD *)(v2 + 32);
      *(_OWORD *)(v40 + 64) = v41;
      *(void *)(v40 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(void *)(v2 + 64);
      long long v42 = *(_OWORD *)(v2 + 16);
      *(_OWORD *)(v40 + 16) = *(_OWORD *)v2;
      *(_OWORD *)(v40 + 32) = v42;
      uint64_t v43 = v96;
      sub_1000FF27C((uint64_t)v6, v96, &qword_1015D7F18);
      uint64_t v44 = v104;
      uint64_t v45 = v98;
      uint64_t v46 = v99;
      (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v43 + *(int *)(v104 + 52), v39, v99);
      uint64_t v47 = (uint64_t (**)(uint64_t *))(v43 + *(int *)(v44 + 56));
      *uint64_t v47 = sub_10028B718;
      v47[1] = (uint64_t (*)(uint64_t *))v40;
      sub_10028B720(v2);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v39, v46);
      sub_1000FF2E0((uint64_t)v6, &qword_1015D7F18);
      uint64_t v48 = v100;
      sub_100101750(v43, v100, &qword_1015D7F20);
      sub_1000FF27C(v48, (uint64_t)v103, &qword_1015D7F20);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015D7F80);
      sub_10028B78C();
      sub_1001010F8(&qword_1015D7F98, &qword_1015D7F20);
      uint64_t v49 = (uint64_t)v105;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v49, v111, &qword_1015D7F30);
      swift_storeEnumTagMultiPayload();
      sub_10028B854();
      sub_10028B930();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v49, &qword_1015D7F30);
      uint64_t v50 = v48;
      uint64_t v51 = &qword_1015D7F20;
      return sub_1000FF2E0(v50, v51);
    case 3:
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v52._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      v53._uint64_t countAndFlagsBits = 0xD000000000000029;
      v127._uint64_t object = (void *)0x8000000100F81AD0;
      v52._uint64_t object = (void *)0x8000000100F81A80;
      v53._uint64_t object = (void *)0x8000000100F81AA0;
      v127._uint64_t countAndFlagsBits = 0xD000000000000027;
      Swift::String v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)qword_101611820, v53, v127);
      id v55 = [self secondaryLabelColor];
      uint64_t v56 = Color.init(uiColor:)();
      Swift::String v114 = v54;
      long long v115 = xmmword_100F69590;
      uint64_t v116 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
      uint64_t v117 = 0;
      uint64_t v118 = v56;
      char v119 = 1;
      goto LABEL_13;
    case 4:
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v30._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v31._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
      v126._uint64_t countAndFlagsBits = 0xD000000000000040;
      v126._uint64_t object = (void *)0x8000000100F81A30;
      v30._uint64_t object = (void *)0x8000000100F819E0;
      v31._uint64_t object = (void *)0x8000000100F81A00;
      Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)qword_101611820, v31, v126);
      id v33 = [self secondaryLabelColor];
      uint64_t v34 = Color.init(uiColor:)();
      *uint64_t v14 = v32;
      v14[1]._uint64_t countAndFlagsBits = 0;
      v14[1]._uint64_t object = (void *)0xE000000000000000;
      v14[2]._uint64_t countAndFlagsBits = (uint64_t)CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
      v14[2]._uint64_t object = 0;
      v14[3]._uint64_t countAndFlagsBits = v34;
      swift_storeEnumTagMultiPayload();
      sub_1001010F8(&qword_1015D7FB0, &qword_1015D7F48);
      sub_10028B800();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v35 = (uint64_t)v101;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v35, (uint64_t)v21, &qword_1015D7F40);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015D7F80);
      sub_10028B78C();
      sub_10028B890();
      uint64_t v36 = (uint64_t)v108;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v35, &qword_1015D7F40);
      sub_1000FF27C(v36, v111, (uint64_t *)&unk_1015D7F60);
      swift_storeEnumTagMultiPayload();
      sub_10028B854();
      sub_10028B930();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v36, (uint64_t *)&unk_1015D7F60);
      swift_release();
      return swift_bridgeObjectRelease();
    case 5:
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v67._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v128._uint64_t countAndFlagsBits = 0xD000000000000041;
      v128._uint64_t object = (void *)0x8000000100F81990;
      v67._uint64_t object = (void *)0x8000000100F81940;
      v68._uint64_t object = (void *)0x8000000100F81960;
      v68._uint64_t countAndFlagsBits = 0xD000000000000027;
      Swift::String v69 = NSLocalizedString(_:tableName:bundle:value:comment:)(v67, (Swift::String_optional)0, (NSBundle)qword_101611820, v68, v128);
      id v70 = [self secondaryLabelColor];
      uint64_t v71 = Color.init(uiColor:)();
      Swift::String v114 = v69;
      long long v115 = xmmword_100F69590;
      uint64_t v116 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
      uint64_t v117 = 0;
      uint64_t v118 = v71;
      char v119 = 0;
      sub_10028B800();
      swift_bridgeObjectRetain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      uint64_t v72 = v123;
      char v73 = v124;
      long long v74 = v121;
      long long v75 = v122;
      uint64_t v76 = v103;
      *uint64_t v103 = v120;
      v76[1] = v74;
      v76[2] = v75;
      *((void *)v76 + 6) = v72;
      *((unsigned char *)v76 + 56) = v73;
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015D7F80);
      sub_10028B78C();
      sub_1001010F8(&qword_1015D7F98, &qword_1015D7F20);
      uint64_t v61 = (uint64_t)v105;
      _ConditionalContent<>.init(storage:)();
      uint64_t v62 = &qword_1015D7F30;
      sub_1000FF27C(v61, v111, &qword_1015D7F30);
      goto LABEL_19;
    case 6:
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v77.super.Class isa = (Class)qword_101611820;
      v78._uint64_t countAndFlagsBits = 0xD000000000000020;
      v79._uint64_t countAndFlagsBits = 0xD000000000000029;
      v129._uint64_t countAndFlagsBits = 0xD000000000000044;
      v129._uint64_t object = (void *)0x8000000100F81860;
      v78._uint64_t object = (void *)0x8000000100F81800;
      v79._uint64_t object = (void *)0x8000000100F81830;
      Swift::String v80 = NSLocalizedString(_:tableName:bundle:value:comment:)(v78, (Swift::String_optional)0, (NSBundle)qword_101611820, v79, v129);
      v81._uint64_t countAndFlagsBits = 0xD000000000000012;
      v82._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v130._uint64_t countAndFlagsBits = 0xD000000000000045;
      v130._uint64_t object = (void *)0x8000000100F818F0;
      v82._uint64_t object = (void *)0x8000000100F818B0;
      v81._uint64_t object = (void *)0x8000000100F818D0;
      long long v83 = (__int128)NSLocalizedString(_:tableName:bundle:value:comment:)(v82, (Swift::String_optional)0, v77, v81, v130);
      uint64_t v84 = swift_allocObject();
      long long v85 = *(_OWORD *)(v2 + 48);
      *(_OWORD *)(v84 + 48) = *(_OWORD *)(v2 + 32);
      *(_OWORD *)(v84 + 64) = v85;
      *(void *)(v84 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = *(void *)(v2 + 64);
      long long v86 = *(_OWORD *)(v2 + 16);
      *(_OWORD *)(v84 + 16) = *(_OWORD *)v2;
      *(_OWORD *)(v84 + 32) = v86;
      uint64_t v87 = self;
      sub_10028B720(v2);
      id v88 = [v87 secondaryLabelColor];
      uint64_t v89 = Color.init(uiColor:)();
      Swift::String v114 = v80;
      long long v115 = v83;
      uint64_t v116 = sub_10028BA34;
      uint64_t v117 = v84;
      uint64_t v118 = v89;
      char v119 = 1;
      sub_10028B800();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      uint64_t v90 = v123;
      char v91 = v124;
      long long v92 = v121;
      long long v93 = v122;
      uint64_t v94 = v103;
      *uint64_t v103 = v120;
      v94[1] = v92;
      v94[2] = v93;
      *((void *)v94 + 6) = v90;
      *((unsigned char *)v94 + 56) = v91;
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015D7F80);
      sub_10028B78C();
      sub_1001010F8(&qword_1015D7F98, &qword_1015D7F20);
      uint64_t v95 = (uint64_t)v105;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v95, v111, &qword_1015D7F30);
      swift_storeEnumTagMultiPayload();
      sub_10028B854();
      sub_10028B930();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v95, &qword_1015D7F30);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    default:
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v25._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      v26._uint64_t countAndFlagsBits = 0xD000000000000029;
      v125._uint64_t object = (void *)0x8000000100F81AD0;
      v25._uint64_t object = (void *)0x8000000100F81A80;
      v26._uint64_t object = (void *)0x8000000100F81AA0;
      v125._uint64_t countAndFlagsBits = 0xD000000000000027;
      Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)qword_101611820, v26, v125);
      id v28 = [self secondaryLabelColor];
      uint64_t v29 = Color.init(uiColor:)();
      Swift::String v114 = v27;
      long long v115 = xmmword_100F69590;
      uint64_t v116 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
      uint64_t v117 = 0;
      uint64_t v118 = v29;
      char v119 = 0;
LABEL_13:
      sub_10028B800();
      swift_bridgeObjectRetain();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      uint64_t v57 = v123;
      char v58 = v124;
      long long v59 = v121;
      long long v60 = v122;
      *(_OWORD *)char v21 = v120;
      *((_OWORD *)v21 + 1) = v59;
      *((_OWORD *)v21 + 2) = v60;
      *((void *)v21 + 6) = v57;
      v21[56] = v58;
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015D7F80);
      sub_10028B78C();
      sub_10028B890();
      uint64_t v61 = (uint64_t)v108;
      _ConditionalContent<>.init(storage:)();
      uint64_t v62 = (uint64_t *)&unk_1015D7F60;
      sub_1000FF27C(v61, v111, (uint64_t *)&unk_1015D7F60);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      sub_10028B854();
      sub_10028B930();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v61, v62);
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10028A660@<X0>(char *a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v43 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D7FC8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D7FD0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v40 - v13;
  ProgressView<>.init<>()();
  CircularProgressViewStyle.init()();
  sub_1001010F8(&qword_1015D7FD8, &qword_1015D7FC8);
  sub_10028BA3C((unint64_t *)&unk_1015D7FE0, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
  View.progressViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  long long v41 = v14;
  uint64_t v42 = v9;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v16 = v14;
  uint64_t v17 = v11;
  uint64_t v43 = v8;
  v15(v16, v11, v8);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v46._uint64_t object = (void *)0x8000000100F81B20;
  v18._uint64_t object = (void *)0x8000000100F81B00;
  v18._uint64_t countAndFlagsBits = 0x100000000000001CLL;
  v19._uint64_t countAndFlagsBits = 0x20676E6964616F4CLL;
  v19._uint64_t object = (void *)0xAB00000000A680E2;
  v46._uint64_t countAndFlagsBits = 0xD000000000000021;
  Swift::String v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)qword_101611820, v19, v46);
  sub_100180324();
  uint64_t v20 = Text.init<A>(_:)();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  id v25 = [self secondaryLabelColor];
  v45._uint64_t countAndFlagsBits = Color.init(uiColor:)();
  uint64_t v26 = Text.foregroundStyle<A>(_:)();
  uint64_t v28 = v27;
  uint64_t v40 = v29;
  char v31 = v30 & 1;
  sub_10017F958(v20, v22, v24);
  swift_release();
  swift_bridgeObjectRelease();
  Swift::String v32 = v41;
  uint64_t v33 = v42;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  uint64_t v35 = v43;
  v34(v17, v41, v43);
  uint64_t v36 = v44;
  v34(v44, v17, v35);
  uint64_t v37 = &v36[*(int *)(sub_1000FF33C((uint64_t *)&unk_1015D7FF0) + 48)];
  *(void *)uint64_t v37 = v26;
  *((void *)v37 + 1) = v28;
  v37[16] = v31;
  *((void *)v37 + 3) = v40;
  sub_10017FDF0(v26, v28, v31);
  id v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  swift_bridgeObjectRetain();
  v38(v32, v35);
  sub_10017F958(v26, v28, v31);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v38)(v17, v35);
}

uint64_t sub_10028AB30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = v1 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
    swift_beginAccess();
    sub_1000FF27C(v2, (uint64_t)v6, (uint64_t *)&unk_1015CF2A0);
    if (v7)
    {
      sub_1000FF4D4((uint64_t)v6, (uint64_t)v5);
      sub_1000FF2E0((uint64_t)v6, (uint64_t *)&unk_1015CF2A0);
      uint64_t v3 = *(void **)(*sub_1000FF380(v5, v5[3]) + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView);
      if (v3) {
        [v3 setUserTrackingMode:1 animated:1];
      }
      return sub_1000FF22C((uint64_t)v5);
    }
    else
    {
      return sub_1000FF2E0((uint64_t)v6, (uint64_t *)&unk_1015CF2A0);
    }
  }
  else
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10028AC68@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D8010);
  __chkstk_darwin(v4 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - v7;
  uint64_t v9 = (void *)*((void *)a1 + 7);
  if (v9)
  {
    uint64_t v49 = a2;
    uint64_t v50 = v6;
    swift_getKeyPath();
    swift_getKeyPath();
    id v10 = v9;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    unint64_t v11 = v52[2];
    swift_bridgeObjectRelease();
    uint64_t v51 = v8;
    if (v11 <= 1)
    {
      uint64_t v29 = sub_1000FF33C(&qword_1015D8018);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
    }
    else
    {
      long long v12 = a1[1];
      long long v73 = *a1;
      long long v74 = v12;
      uint64_t v75 = *((void *)a1 + 4);
      sub_1000FF33C(&qword_1015D8008);
      State.projectedValue.getter();
      uint64_t v13 = v52;
      uint64_t v48 = v52;
      Swift::String v46 = v53;
      uint64_t v47 = v54;
      uint64_t v14 = v55;
      uint64_t v44 = v55;
      uint64_t v15 = v57;
      Swift::String v45 = v56;
      long long v73 = *(long long *)((char *)a1 + 40);
      sub_1000FF33C(&qword_1015D8000);
      State.projectedValue.getter();
      uint64_t v16 = v52;
      uint64_t v17 = v53;
      char v18 = (char)v54;
      type metadata accessor for NearbyTransitDeparturesProvider();
      sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
      Swift::String v19 = (void *)EnvironmentObject.init()();
      uint64_t v21 = v20;
      char v22 = static Edge.Set.bottom.getter();
      EdgeInsets.init(_all:)();
      char v71 = 0;
      Swift::String v52 = v19;
      Swift::String v53 = v21;
      Swift::String v54 = v13;
      id v55 = v46;
      uint64_t v56 = v47;
      uint64_t v57 = v14;
      char v58 = v45;
      long long v59 = v15;
      long long v60 = v16;
      uint64_t v61 = v17;
      char v62 = v18;
      *(_DWORD *)uint64_t v63 = v73;
      *(_DWORD *)&v63[3] = *(_DWORD *)((char *)&v73 + 3);
      char v64 = v22;
      *(_DWORD *)&void v65[3] = *(_DWORD *)&v72[3];
      *(_DWORD *)uint64_t v65 = *(_DWORD *)v72;
      uint64_t v66 = v23;
      uint64_t v67 = v24;
      uint64_t v68 = v25;
      uint64_t v69 = v26;
      char v70 = 0;
      sub_1000FF33C(&qword_1015D8028);
      sub_10029BAEC(&qword_1015D8030, &qword_1015D8028, (void (*)(void))sub_1002918E0);
      uint64_t v27 = (uint64_t)v51;
      View.accessibility(identifier:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

      uint64_t v8 = (char *)v27;
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      uint64_t v28 = sub_1000FF33C(&qword_1015D8018);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
    }
    long long v30 = a1[1];
    long long v73 = *a1;
    long long v74 = v30;
    uint64_t v75 = *((void *)a1 + 4);
    sub_1000FF33C(&qword_1015D8008);
    State.projectedValue.getter();
    uint64_t v47 = v52;
    char v31 = v53;
    uint64_t v48 = v54;
    Swift::String v32 = v55;
    uint64_t v33 = v57;
    Swift::String v46 = v56;
    long long v73 = *(long long *)((char *)a1 + 40);
    sub_1000FF33C(&qword_1015D8000);
    State.projectedValue.getter();
    uint64_t v34 = v52;
    uint64_t v35 = v53;
    LODWORD(v45) = v54;
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    uint64_t v36 = (void *)EnvironmentObject.init()();
    uint64_t v38 = v37;
    uint64_t v39 = v50;
    sub_1000FF27C((uint64_t)v8, v50, &qword_1015D8010);
    uint64_t v40 = v49;
    sub_1000FF27C(v39, v49, &qword_1015D8010);
    uint64_t v41 = v40 + *(int *)(sub_1000FF33C(&qword_1015D8020) + 48);
    *(void *)uint64_t v41 = v47;
    *(void *)(v41 + 8) = v31;
    *(void *)(v41 + 16) = v48;
    *(void *)(v41 + 24) = v32;
    *(void *)(v41 + 32) = v46;
    *(void *)(v41 + 4sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v33;
    *(void *)(v41 + 48) = v34;
    *(void *)(v41 + 56) = v35;
    *(unsigned char *)(v41 + 64) = (_BYTE)v45;
    *(void *)(v41 + 72) = v36;
    *(void *)(v41 + 8sub_100238AC8(customName.value._countAndFlagsBits, (uint64_t)customName.value._object, 0, 0) = v38;
    id v42 = v36;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000FF2E0((uint64_t)v51, &qword_1015D8010);

    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return sub_1000FF2E0(v39, &qword_1015D8010);
  }
  else
  {
    type metadata accessor for NearbyTransitDeparturesProvider();
    sub_10028BA3C(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10028B2E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_1000FF33C(&qword_1015D8000);
  State.wrappedValue.getter();
  if (v14 == 1)
  {
    sub_10028B720(a2);
    unint64_t v4 = sub_10028BF18(v3);
    char v6 = v5;
    uint64_t result = sub_100291870(a2);
    if ((v6 & 1) == 0)
    {
      if ((v4 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v4 < *(void *)(v3 + 16))
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      }
      __break(1u);
      return result;
    }
  }
  if (!*(void *)(v3 + 16))
  {
    if (qword_1015CBD38 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000F2248(v8, (uint64_t)qword_101611760);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Provider has a loaded state but no categories", v11, 2u);
      swift_slowDealloc();
    }

    goto LABEL_14;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  State.wrappedValue.setter();
LABEL_8:
  sub_1000FF33C(&qword_1015D8008);
  State.wrappedValue.setter();
LABEL_14:
  sub_1000FF33C(&qword_1015D8008);
  State.wrappedValue.getter();
  sub_10028C07C(v15, v16, v17, v3);
  char v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  if ((v13 & 1) == 0)
  {
    if (*(void *)(v3 + 16))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return State.wrappedValue.setter();
    }
  }
  return result;
}

uint64_t sub_10028B5D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002892E4(a1);
}

uint64_t sub_10028B61C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10028B6A0(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10028B718(uint64_t *a1)
{
  return sub_10028B2E0(a1, v1 + 16);
}

uint64_t sub_10028B720(uint64_t a1)
{
  id v2 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_10028B78C()
{
  unint64_t result = qword_1015D7F88;
  if (!qword_1015D7F88)
  {
    sub_10010118C(&qword_1015D7F80);
    sub_10028B800();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7F88);
  }
  return result;
}