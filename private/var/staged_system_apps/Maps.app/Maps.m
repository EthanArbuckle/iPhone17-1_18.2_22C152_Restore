id sub_100006BF0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _didInvalidateLoadingToken];
}

uint64_t sub_100006C98(uint64_t *a1)
{
  uint64_t v2 = sub_1000FF33C(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100006D24()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100006D7C(uint64_t a1)
{
  uint64_t v137 = sub_1000FF33C((uint64_t *)&unk_1015D73C0);
  __chkstk_darwin(v137);
  v140 = (uint64_t *)((char *)&v134 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D4B40);
  uint64_t result = __chkstk_darwin(v7 - 8);
  v167 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return result;
  }
  v159 = v6;
  v158 = _swiftEmptyDictionarySingleton;
  *(void *)&long long v173 = _swiftEmptyDictionarySingleton;
  uint64_t v11 = a1 + 32;
  swift_bridgeObjectRetain();
  long long v166 = xmmword_100F5CF70;
  do
  {
    sub_1000FFEE8(v11, (uint64_t)&v174);
    uint64_t v16 = *((void *)&v174 + 1);
    uint64_t v17 = v175;
    swift_bridgeObjectRetain();
    v18 = v158;
    unint64_t v19 = sub_100103580(v16, v17);
    v21 = v18;
    unint64_t v22 = v19;
    uint64_t v23 = v21[2];
    BOOL v24 = (v20 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24))
    {
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    char v26 = v20;
    if (v21[3] < v25)
    {
      sub_10034F6C4(v25, 1);
      v27 = (void *)v173;
      unint64_t v28 = sub_100103580(v16, v17);
      if ((v26 & 1) != (v29 & 1)) {
        goto LABEL_129;
      }
      unint64_t v22 = v28;
      v21 = v27;
    }
    v158 = v21;
    if (v26)
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = v158[7];
      long long v169 = v174;
      long long v170 = v175;
      long long v171 = v176;
      long long v172 = v177;
      v31 = *(void **)(v30 + 8 * v22);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v30 + 8 * v22) = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v31 = sub_1000FA578(0, v31[2] + 1, 1, v31);
        *(void *)(v30 + 8 * v22) = v31;
      }
      unint64_t v34 = v31[2];
      unint64_t v33 = v31[3];
      if (v34 >= v33 >> 1)
      {
        v31 = sub_1000FA578((void *)(v33 > 1), v34 + 1, 1, v31);
        *(void *)(v30 + 8 * v22) = v31;
      }
      v31[2] = v34 + 1;
      v12 = &v31[8 * v34];
      long long v13 = v169;
      long long v14 = v170;
      long long v15 = v172;
      v12[4] = v171;
      v12[5] = v15;
      v12[2] = v13;
      v12[3] = v14;
    }
    else
    {
      sub_1000FF33C((uint64_t *)&unk_1015D73D0);
      v35 = (_OWORD *)swift_allocObject();
      long long v36 = v174;
      long long v37 = v175;
      v35[1] = v166;
      v35[2] = v36;
      long long v38 = v176;
      long long v39 = v177;
      v35[3] = v37;
      v35[4] = v38;
      v35[5] = v39;
      v40 = v158;
      v158[(v22 >> 6) + 8] |= 1 << v22;
      v41 = (uint64_t *)(v40[6] + 16 * v22);
      uint64_t *v41 = v16;
      v41[1] = v17;
      *(void *)(v40[7] + 8 * v22) = v35;
      uint64_t v42 = v40[2];
      BOOL v43 = __OFADD__(v42, 1);
      uint64_t v44 = v42 + 1;
      if (v43) {
        goto LABEL_125;
      }
      v40[2] = v44;
    }
    v11 += 64;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  int64_t v45 = 0;
  uint64_t v147 = 0;
  v46 = v158;
  uint64_t v47 = v158[8];
  v142 = v158 + 8;
  uint64_t v48 = 1 << *((unsigned char *)v158 + 32);
  uint64_t v49 = -1;
  if (v48 < 64) {
    uint64_t v49 = ~(-1 << v48);
  }
  unint64_t v50 = v49 & v47;
  uint64_t v149 = OBJC_IVAR____TtC4Maps22HomeListRootController_configuration;
  int64_t v143 = (unint64_t)(v48 + 63) >> 6;
  uint64_t v163 = v4 + 16;
  *(void *)&long long v166 = v4 + 56;
  uint64_t v162 = v4 + 48;
  v161 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v136 = (uint64_t)&v175 + 8;
  v160 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v148 = v4;
  while (1)
  {
    if (v50)
    {
      uint64_t v152 = (v50 - 1) & v50;
      unint64_t v53 = __clz(__rbit64(v50)) | (v45 << 6);
    }
    else
    {
      BOOL v43 = __OFADD__(v45++, 1);
      if (v43) {
        goto LABEL_126;
      }
      if (v45 >= v143) {
        return swift_release();
      }
      unint64_t v54 = v142[v45];
      if (!v54)
      {
        int64_t v55 = v45 + 1;
        if (v45 + 1 >= v143) {
          return swift_release();
        }
        unint64_t v54 = v142[v55];
        if (!v54)
        {
          int64_t v55 = v45 + 2;
          if (v45 + 2 >= v143) {
            return swift_release();
          }
          unint64_t v54 = v142[v55];
          if (!v54)
          {
            int64_t v55 = v45 + 3;
            if (v45 + 3 >= v143) {
              return swift_release();
            }
            unint64_t v54 = v142[v55];
            if (!v54)
            {
              while (1)
              {
                int64_t v45 = v55 + 1;
                if (__OFADD__(v55, 1)) {
                  goto LABEL_128;
                }
                if (v45 >= v143) {
                  return swift_release();
                }
                unint64_t v54 = v142[v45];
                ++v55;
                if (v54) {
                  goto LABEL_34;
                }
              }
            }
          }
        }
        int64_t v45 = v55;
      }
LABEL_34:
      uint64_t v152 = (v54 - 1) & v54;
      unint64_t v53 = __clz(__rbit64(v54)) + (v45 << 6);
    }
    int64_t v153 = v45;
    uint64_t v56 = v46[7];
    uint64_t v165 = *(void *)(v46[6] + 16 * v53);
    uint64_t v57 = *(void *)(v56 + 8 * v53);
    uint64_t v58 = *(void *)(v57 + 16);
    if (v58)
    {
      uint64_t v59 = v57 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v60 = _swiftEmptyArrayStorage;
      do
      {
        sub_1000FFEE8(v59, (uint64_t)&v174);
        id v61 = [(id)v174 firstIdentifier];
        if (v61)
        {
          v62 = v61;
          uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v65 = v64;

          sub_1001008A0((uint64_t)&v174);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v60 = sub_1000FB364(0, v60[2] + 1, 1, v60);
          }
          unint64_t v67 = v60[2];
          unint64_t v66 = v60[3];
          if (v67 >= v66 >> 1) {
            v60 = sub_1000FB364((void *)(v66 > 1), v67 + 1, 1, v60);
          }
          v60[2] = v67 + 1;
          v68 = &v60[2 * v67];
          v68[4] = v63;
          v68[5] = v65;
        }
        else
        {
          sub_1001008A0((uint64_t)&v174);
        }
        v59 += 64;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60 = _swiftEmptyArrayStorage;
    }
    uint64_t v69 = v60[2];
    uint64_t v156 = v57;
    if (v69)
    {
      *(void *)&long long v174 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      v70 = self;
      v71 = v60 + 5;
      do
      {
        swift_bridgeObjectRetain();
        NSString v72 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v73 = [v70 identifierPathWithIdentifier:v72];

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v71 += 2;
        --v69;
      }
      while (v69);
      uint64_t v74 = v174;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v74 = (uint64_t)_swiftEmptyArrayStorage;
    }
    uint64_t v75 = *(void *)(v168 + v149);
    uint64_t v76 = OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView;
    id v77 = *(id *)(v75 + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView);
    NSString v78 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v79 = [v77 indexPathsForVisibleSupplementaryElementsOfKind:v78];

    uint64_t v80 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    v81 = v159;
    uint64_t v82 = v148;
    uint64_t v165 = *(void *)(v80 + 16);
    if (v165) {
      break;
    }
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v166;
    v52 = v167;
LABEL_20:
    v51(v52, 1, 1, v3);
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v158;
    int64_t v45 = v153;
    unint64_t v50 = v152;
  }
  unint64_t v146 = v166 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v144 = v76;
  uint64_t v145 = v75;
  unint64_t v83 = 0;
  unint64_t v164 = v80 + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80));
  uint64_t v84 = v74 & 0xFFFFFFFFFFFFFF8;
  uint64_t v151 = v74 & 0xFFFFFFFFFFFFFF8;
  if (v74 < 0) {
    uint64_t v84 = v74;
  }
  uint64_t v141 = v84;
  unint64_t v150 = v74 & 0xC000000000000001;
  uint64_t v155 = v74;
  v52 = v167;
  while (1)
  {
    if (v83 >= *(void *)(v80 + 16))
    {
      __break(1u);
      goto LABEL_123;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v52, v164 + *(void *)(v82 + 72) * v83, v3);
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
    v51(v52, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v52, 1, v3) == 1) {
      goto LABEL_21;
    }
    uint64_t v85 = v80;
    (*v161)(v81, v52, v3);
    IndexPath.section.getter();
    id v86 = sub_1000806A8();
    dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

    v87 = (void *)v174;
    if (!(void)v174) {
      goto LABEL_70;
    }
    id v88 = [(id)v174 firstIdentifier];
    if (!v88)
    {

      goto LABEL_70;
    }
    v89 = v88;
    uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v92 = v91;

    v93 = sub_1001036DC();
    if (!v93[2] || (unint64_t v94 = sub_100103580(v90, v92), (v95 & 1) == 0))
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v81 = v159;
LABEL_70:
      (*v160)(v81, v3);
      goto LABEL_71;
    }
    v96 = *(id *)(v93[7] + 16 * v94);

    swift_bridgeObjectRelease();
    uint64_t v97 = swift_bridgeObjectRelease();
    id v157 = (id)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v96) + 0xD8))(v97);

    if ((unint64_t)v74 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v133 = _CocoaArrayWrapper.endIndex.getter();
      v81 = v159;
      uint64_t v80 = v85;
      v52 = v167;
      v154 = (void *)v133;
      uint64_t v98 = v74;
      if (!v133)
      {
LABEL_112:
        swift_bridgeObjectRelease();
        uint64_t v74 = v98;
        goto LABEL_113;
      }
    }
    else
    {
      uint64_t v98 = v74;
      v99 = *(void **)(v151 + 16);
      swift_bridgeObjectRetain();
      v81 = v159;
      uint64_t v80 = v85;
      v52 = v167;
      v154 = v99;
      if (!v99) {
        goto LABEL_112;
      }
    }
    id v100 = v150 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v98 + 32);
    v101 = v100;
    id v102 = v157;
    sub_100100830(0, (unint64_t *)&unk_1015D6E30);
    char v103 = static NSObject.== infix(_:_:)();

    if ((v103 & 1) == 0) {
      break;
    }
    uint64_t v74 = v155;
    swift_bridgeObjectRelease();
LABEL_98:
    uint64_t v115 = v156;
    swift_bridgeObjectRetain();
    id v116 = v102;
    uint64_t v117 = v147;
    v118 = sub_10025FC6C(v115, (uint64_t)v116);
    uint64_t v147 = v117;
    swift_bridgeObjectRelease();

    uint64_t v119 = v118[2];
    if (v119)
    {
      sub_1000FFEE8((uint64_t)(v118 + 4), (uint64_t)&v174);
      swift_bridgeObjectRelease();
      if (v119 == 1)
      {
        sub_1000FF27C(v136, (uint64_t)&v173, &qword_1015D6EA0);
        sub_100101314(&v173, (uint64_t)&v169);
        v154 = sub_1000FF380(&v169, *((uint64_t *)&v170 + 1));
        uint64_t v120 = qword_1015CBD70;
        id v121 = *(id *)(v145 + v144);
        if (v120 != -1) {
          swift_once();
        }
        uint64_t v122 = sub_1000F2248(v137, (uint64_t)qword_101611808);
        v123 = v140;
        sub_1000FF27C(v122, (uint64_t)v140, (uint64_t *)&unk_1015D73C0);
        uint64_t v124 = v123[1];
        uint64_t v139 = *v123;
        uint64_t v138 = v124;
        NSString v125 = String._bridgeToObjectiveC()();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v157 = v121;
        id v127 = [v121 supplementaryViewForElementKind:v125 atIndexPath:isa];

        uint64_t v74 = v155;
        uint64_t v80 = v85;
        if (v127)
        {
          self;
          uint64_t v128 = swift_dynamicCastObjCClass();
          if (v128)
          {
            v129 = (void *)v128;
            uint64_t v130 = (uint64_t)v140;
            v135 = (void (*)(void *, uint64_t, uint64_t, char *, void *))v140[2];
            id v131 = v127;
            v135(v129, v139, v138, v159, v154);
            uint64_t v80 = v85;
            [v129 invalidateIntrinsicContentSize];

            uint64_t v132 = v130;
            uint64_t v74 = v155;
            sub_1000FF2E0(v132, (uint64_t *)&unk_1015D73C0);

            v81 = v159;
            sub_1001008A0((uint64_t)&v174);
            (*v160)(v81, v3);
LABEL_110:
            sub_1000FF22C((uint64_t)&v169);
            goto LABEL_72;
          }
        }
        sub_1000FF2E0((uint64_t)v140, (uint64_t *)&unk_1015D73C0);

        sub_1001008A0((uint64_t)&v174);
        v81 = v159;
        (*v160)(v159, v3);
        goto LABEL_110;
      }
      sub_1001008A0((uint64_t)&v174);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v81 = v159;
    (*v160)(v159, v3);
LABEL_71:
    uint64_t v80 = v85;
LABEL_72:
    v52 = v167;
LABEL_73:
    if (++v83 == v165) {
      goto LABEL_20;
    }
  }
  v52 = v167;
  if (v154 == (void *)1)
  {
    uint64_t v74 = v155;
    swift_bridgeObjectRelease();
    uint64_t v80 = v85;
LABEL_114:
    (*v160)(v81, v3);

    goto LABEL_73;
  }
  uint64_t v104 = v155;
  if (v150)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    char v105 = static NSObject.== infix(_:_:)();
    swift_unknownObjectRelease();
    if ((v105 & 1) == 0)
    {
      if (v154 != (void *)2)
      {
        uint64_t v108 = 2;
        while (1)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          v109 = (void *)(v108 + 1);
          if (__OFADD__(v108, 1)) {
            goto LABEL_124;
          }
          char v110 = static NSObject.== infix(_:_:)();
          swift_unknownObjectRelease();
          if (v110) {
            goto LABEL_96;
          }
          ++v108;
          v81 = v159;
          uint64_t v74 = v155;
          if (v109 == v154) {
            goto LABEL_90;
          }
        }
      }
      uint64_t v74 = v155;
LABEL_90:
      swift_bridgeObjectRelease();
      uint64_t v80 = v85;
      v52 = v167;
      goto LABEL_113;
    }
LABEL_82:
    swift_bridgeObjectRelease();
    uint64_t v74 = v104;
LABEL_97:
    id v102 = v157;
    goto LABEL_98;
  }
  id v106 = *(id *)(v155 + 40);
  char v107 = static NSObject.== infix(_:_:)();

  if (v107) {
    goto LABEL_82;
  }
  v52 = v167;
  if (v154 == (void *)2)
  {
    uint64_t v74 = v155;
    swift_bridgeObjectRelease();
LABEL_95:
    uint64_t v80 = v85;
LABEL_113:
    id v102 = v157;
    goto LABEL_114;
  }
  uint64_t v111 = 6;
  uint64_t v74 = v155;
  while (1)
  {
    v112 = (void *)(v111 - 3);
    if (__OFADD__(v111 - 4, 1)) {
      break;
    }
    id v113 = *(id *)(v74 + 8 * v111);
    char v114 = static NSObject.== infix(_:_:)();

    if (v114)
    {
LABEL_96:
      uint64_t v74 = v155;
      swift_bridgeObjectRelease();
      goto LABEL_97;
    }
    ++v111;
    uint64_t v74 = v155;
    v52 = v167;
    if (v112 == v154)
    {
      swift_bridgeObjectRelease();
      v81 = v159;
      goto LABEL_95;
    }
  }
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100007F3C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_101611238);
  sub_1000F2248(v0, (uint64_t)qword_101611238);
  return Logger.init(subsystem:category:)();
}

unint64_t sub_100008038()
{
  unint64_t result = qword_1015DAC90;
  if (!qword_1015DAC90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015DAC90);
  }
  return result;
}

uint64_t sub_100008108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  sub_1000FF33C(&qword_1015CD250);
  v4[5] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[6] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10010D408;
  return _swift_task_switch(sub_100010C6C, 0, 0);
}

void sub_100008264(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) navigationDisplay];

  if (!v2) {
    return;
  }
  uint64_t v3 = [*(id *)(a1 + 32) mapView];
  unsigned int v4 = [v3 _applicationState];

  if (v4 == 2)
  {
    uint64_t v5 = [*(id *)(a1 + 32) mapView];
    [v5 _setApplicationState:0];
  }
  uint64_t v6 = [*(id *)(a1 + 32) contexts];
  uint64_t v7 = [v6 lastObject];

  v8 = sub_1000C49B4();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = *(id *)(a1 + 32);
    if (!v9)
    {
      long long v14 = @"<nil>";
LABEL_13:

      long long v15 = v14;
      id v16 = v7;
      if (!v16)
      {
        v21 = @"<nil>";
        goto LABEL_21;
      }
      uint64_t v17 = (objc_class *)objc_opt_class();
      v18 = NSStringFromClass(v17);
      if (objc_opt_respondsToSelector())
      {
        unint64_t v19 = [v16 performSelector:"accessibilityIdentifier"];
        char v20 = v19;
        if (v19 && ![v19 isEqualToString:v18])
        {
          v21 = +[NSString stringWithFormat:@"%@<%p, %@>", v18, v16, v20];

          goto LABEL_19;
        }
      }
      v21 = +[NSString stringWithFormat:@"%@<%p>", v18, v16];
LABEL_19:

LABEL_21:
      *(_DWORD *)buf = 138543618;
      char v29 = v15;
      __int16 v30 = 2112;
      v31 = v21;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[%{public}@] Will stop any running navigation, no context wants it (top: %@)", buf, 0x16u);

      goto LABEL_22;
    }
    uint64_t v10 = (objc_class *)objc_opt_class();
    uint64_t v11 = NSStringFromClass(v10);
    if (objc_opt_respondsToSelector())
    {
      v12 = [v9 performSelector:"accessibilityIdentifier"];
      long long v13 = v12;
      if (v12 && ![v12 isEqualToString:v11])
      {
        long long v14 = +[NSString stringWithFormat:@"%@<%p, %@>", v11, v9, v13];

        goto LABEL_11;
      }
    }
    long long v14 = +[NSString stringWithFormat:@"%@<%p>", v11, v9];
LABEL_11:

    goto LABEL_13;
  }
LABEL_22:

  if ([*(id *)(a1 + 40) isAnimated]
    && [*(id *)(a1 + 32) isViewLoaded])
  {
    unint64_t v22 = [*(id *)(a1 + 32) view];
    uint64_t v23 = [v22 window];
    BOOL v24 = v23 != 0;
  }
  else
  {
    BOOL v24 = 0;
  }
  uint64_t v25 = [*(id *)(a1 + 32) navigationDisplay];
  [v25 stopRunningNavigationAnimated:v24];

  [*(id *)(a1 + 32) setNavigationDisplay:0];
  uint64_t v26 = *(void *)(a1 + 32);
  v27 = *(void **)(v26 + 32);
  *(void *)(v26 + 32) = 0;

  [*(id *)(a1 + 32) setNeedsUpdateComponent:@"mapInsets" animated:1];
  [*(id *)(a1 + 32) setNeedsUpdateComponent:@"routeAnnotations" animated:1];
  [*(id *)(a1 + 32) setNeedsUpdateComponent:@"mapcontrols" animated:1];
}

id sub_1000087EC()
{
  if (qword_10160ED78 != -1) {
    dispatch_once(&qword_10160ED78, &stru_1012EB790);
  }
  uint64_t v0 = (void *)qword_10160ED70;

  return v0;
}

uint64_t sub_1000088E4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[8] = a1;
  v3[9] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002FED2C, 0, 0);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))((char *)&dword_1015D5E60 + dword_1015D5E60);
    unsigned int v4 = (void *)swift_task_alloc();
    v3[10] = v4;
    *unsigned int v4 = v3;
    v4[1] = sub_10010D690;
    return v6(0);
  }
}

PedestrianARSessionCoarseLocationMonitor *sub_100008AB4(uint64_t a1)
{
  uint64_t v2 = [PedestrianARSessionCoarseLocationMonitor alloc];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = objc_alloc_init((Class)MKLocationManager);
  uint64_t v5 = [(PedestrianARSessionCoarseLocationMonitor *)v2 initWithObserver:v3 locationManager:v4];

  return v5;
}

uint64_t sub_100008B74(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100105268;
  return v7();
}

void sub_100008DD8(uint64_t a1)
{
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v2 = [*(id *)(a1 + 32) copy];
    uint64_t v3 = (void *)WeakRetained[12];
    WeakRetained[12] = v2;

    [WeakRetained rebuildContent];
    [WeakRetained updateSorting];
  }
}

id sub_100008E54(uint64_t a1, uint64_t a2)
{
  v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state] = 1;
  uint64_t v3 = (uint64_t *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_buttonActionHandler];
  *uint64_t v3 = 0;
  v3[1] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_redoSearchButtonSizeHeight] = 0x4046000000000000;
  *(void *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints] = 0;
  uint64_t v4 = &v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_containerStyle];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  *(void *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator] = 0;
  uint64_t v5 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  swift_retain();
  sub_10006C5D8(v5);
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for RedoSearchContainerViewController();
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_10000900C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100347420;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_10004DF20;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_100009128(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_lastSavedLocation);
  *(void *)(v1 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_lastSavedLocation) = a1;
  id v4 = a1;

  if (a1)
  {
    uint64_t v5 = qword_1015CBB30;
    id v10 = v4;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000F2248(v6, (uint64_t)qword_101611238);
    objc_super v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Location-based air quality conditions refresh", v9, 2u);
      swift_slowDealloc();
    }

    sub_10011BE44(v10);
  }
  else
  {
    sub_1000388F4(0);
  }
}

id sub_100009408()
{
  if (qword_10160F740 != -1) {
    dispatch_once(&qword_10160F740, &stru_1012F7468);
  }
  uint64_t v0 = (void *)qword_10160F738;

  return v0;
}

void sub_100009610(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation);
  *(void *)(v1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation) = a1;
  id v4 = a1;

  if (a1)
  {
    uint64_t v5 = qword_1015CBDE0;
    id v10 = v4;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000F2248(v6, (uint64_t)qword_1016118B8);
    objc_super v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Location-based weather conditions refresh", v9, 2u);
      swift_slowDealloc();
    }

    sub_100267724(v10);
  }
  else
  {
    sub_100039174(0);
  }
}

uint64_t type metadata accessor for NavigationAlertsOnlyOverrideSynchronizationTask()
{
  return self;
}

void sub_1000098F0(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v7 && WeakRetained)
  {
    id v4 = [v7 data];
    uint64_t v5 = [WeakRetained entryPointsCoordinator];
    [v5 openNotificationData:v4 forType:@"MapsPushNotificationTypeAnnouncement" recordIdentifier:0];

    uint64_t v6 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
    [v6 clearCurrentAnnouncement];
  }
}

void sub_100009C24(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = a2;
  uint64_t v4 = [v2 selectedVehicle];
  id v5 = (id)v3[18];
  v3[18] = v4;
}

void sub_100009E1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[IPCServer sharedServer];
  [v2 setCompanionDaemonListenerEndpoint:v1];
}

void sub_10000A16C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_10000A214()
{
  if (qword_10160F620 != -1) {
    dispatch_once(&qword_10160F620, &stru_1012F5EB0);
  }
  uint64_t v0 = (void *)qword_10160F618;

  return v0;
}

void sub_10000A4E4(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateTitlesFromEntry];
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 shortcutsRowCellModelDidUpdate:*(void *)(a1 + 32)];
}

id sub_10000A540()
{
  if (qword_101612068 != -1) {
    dispatch_once(&qword_101612068, &stru_1012EF938);
  }
  uint64_t v0 = (void *)qword_101612060;

  return v0;
}

void sub_10000A594(uint64_t a1)
{
  id v3 = [objc_alloc((Class)VKClientLocalizedStrings) initWithStrings:*(void *)(a1 + 40) locale:*(void *)(a1 + 48)];
  id v2 = [*(id *)(a1 + 32) _mapLayer];
  [v2 setClientLocalizedStrings:v3];
}

uint64_t sub_10000A604(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1003157B0;
  }
  else
  {

    *(void *)(v4 + 64) = a1;
    id v5 = sub_10000B7EC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10000A9EC()
{
  uint64_t v1 = v0[3];
  type metadata accessor for CollectionPlaceItemRequest();
  v0[5] = CollectionPlaceItemRequest.__allocating_init()();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  id v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *id v2 = v0;
  v2[1] = sub_10000A604;
  return v4(v1);
}

id sub_10000AAB0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for MapsFavoritesManager()) init];
  qword_101611650 = (uint64_t)result;
  return result;
}

uint64_t sub_10000AAE0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1016118B8);
  sub_1000F2248(v0, (uint64_t)qword_1016118B8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10000AB60(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1002FF12C;
  }
  else
  {
    uint64_t v6 = *(void **)(v4 + 112);

    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_100014C60;
  }
  return _swift_task_switch(v5, 0, 0);
}

void sub_10000AD30(id a1)
{
  uint64_t v1 = +[PersonalizedItemPrioritizedStringAdornment adornmentWithString:&stru_101324E70 priority:0];
  id v2 = (void *)qword_101610A38;
  qword_101610A38 = v1;
}

uint64_t sub_10000ADE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100105268;
  return v6();
}

id sub_10000AF10()
{
  if (qword_101611F98 != -1) {
    dispatch_once(&qword_101611F98, &stru_1012EF798);
  }
  uint64_t v0 = (void *)qword_101611F90;

  return v0;
}

uint64_t sub_10000B054()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10022E0D0;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10000E93C;
  }
  return _swift_task_switch(v5, v3, v4);
}

unint64_t sub_10000B250()
{
  unint64_t result = qword_1015D9B80;
  if (!qword_1015D9B80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D9B80);
  }
  return result;
}

id sub_10000B290()
{
  if (qword_101612138 != -1) {
    dispatch_once(&qword_101612138, &stru_1012EFAD8);
  }
  uint64_t v0 = (void *)qword_101612130;

  return v0;
}

uint64_t sub_10000B328()
{
  if (qword_1015CBDD8 != -1) {
    swift_once();
  }
  int v1 = byte_1016118B0;
  sub_1000FF33C(&qword_1015DA320);
  if (v1 == 1)
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100F5CFA0;
    sub_10001E550(v2 + 32);
    uint64_t v3 = *(void **)(*(void *)(*(void *)(v0
                                          + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_libraryCountsDataProvider)
                              + OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_countsManager)
                  + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
    id v4 = v3;
    id v5 = sub_10010BE10();
    *(void *)(v2 + 112) = &type metadata for HomeListOneLineCellModel;
    *(void *)(v2 + 120) = sub_10010D8F0();
    *(void *)(v2 + 80) = v5;
    *(void *)(v2 + 88) = v3;
  }
  else
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100F5CF70;
    sub_1001D3F3C(v2 + 32);
  }
  return v2;
}

id sub_10000B434()
{
  if (qword_101610A60 != -1) {
    dispatch_once(&qword_101610A60, &stru_10131AB60);
  }
  uint64_t v0 = (void *)qword_101610A58;

  return v0;
}

uint64_t sub_10000B4DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100105268;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1015DC410 + dword_1015DC410);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_10000B7EC()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100032844, v2, v1);
}

void sub_10000B964()
{
  if (!qword_1015DB4F8)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015DB4F8);
    }
  }
}

void sub_10000BA34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    if ([WeakRetained isRepeating])
    {
      uint64_t v3 = +[NSDate dateWithTimeIntervalSinceNow:*(double *)(a1 + 48)];
      uint64_t v4 = (void *)v5[3];
      v5[3] = v3;
    }
    else
    {
      [v5 invalidate];
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id WeakRetained = v5;
  }
}

id sub_10000BB78()
{
  if (qword_101612278 != -1) {
    dispatch_once(&qword_101612278, &stru_1012EFD58);
  }
  unint64_t v0 = (void *)qword_101612270;

  return v0;
}

void sub_10000BCB8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions);
  *(void *)(a1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions) = a2;
  id v5 = a2;

  if (a2)
  {
    id v6 = [v5 location];
    if (v6)
    {
      uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation);
      *(void *)(a1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation) = v6;
    }
  }
  sub_10003A1E8();
  sub_100061F88();
}

id sub_10000BE2C()
{
  if (qword_10160FAE0 != -1) {
    dispatch_once(&qword_10160FAE0, &stru_1012F9E40);
  }
  unint64_t v0 = (void *)qword_10160FAD8;

  return v0;
}

uint64_t type metadata accessor for LibraryItemsCountManager()
{
  return self;
}

void sub_10000C458(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_10000C478()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  id v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *id v5 = v1;
  v5[1] = sub_100105268;
  id v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1015DC400 + dword_1015DC400);
  return v6(v2, v3, v4);
}

void sub_10000C538(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[IPCServer sharedServer];
  [v2 setPushDaemonListenerEndpoint:v1];
}

void sub_10000C5D8(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 40) selectedVehicle];
  id v2 = [v3 currentVehicleState];
  [*(id *)(a1 + 32) setCurrentVehicleState:v2];
}

void sub_10000C9F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

BOOL sub_10000CBDC(id a1, IOSChromeContext *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  if (objc_opt_respondsToSelector()) {
    unsigned __int8 v5 = [(IOSChromeContext *)v4 requiresStaleMapEffect];
  }
  else {
    unsigned __int8 v5 = 0;
  }

  return v5;
}

uint64_t sub_10000D270(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_100227118;
  }
  else
  {
    unsigned __int8 v5 = *(void **)(v3 + 232);

    uint64_t v4 = sub_1000A36BC;
  }
  return _swift_task_switch(v4, 0, 0);
}

id sub_10000D3F0()
{
  if (qword_10160EFB0 != -1) {
    dispatch_once(&qword_10160EFB0, &stru_1012EDBA0);
  }
  unint64_t v0 = (void *)qword_10160EFA8;

  return v0;
}

uint64_t initializeWithTake for HomeListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_10000D4F8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  unsigned __int8 v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  id v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *id v6 = v1;
  v6[1] = sub_100105268;
  uint64_t v7 = (uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_1015DC3F0 + dword_1015DC3F0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_10000D5B8(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_1000FF33C(&qword_1015DC448);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    id v3 = a1;
    sub_1000FF33C(&qword_1015DC448);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_10000D62C(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  if (!a3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    if (WeakRetained) {
      [WeakRetained setExpiredSubscriptionsCount:[v6 count]];
    }
  }
}

BOOL sub_10000D6A0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
  [v1 favoriteType];
  int v2 = (unsigned __int16)FavoriteItemType.rawValue.getter();
  if (v2 == (unsigned __int16)FavoriteItemType.rawValue.getter()) {
    return 1;
  }
  [v1 favoriteType];
  int v3 = (unsigned __int16)FavoriteItemType.rawValue.getter();
  if (v3 == (unsigned __int16)FavoriteItemType.rawValue.getter()) {
    return 1;
  }
  [v1 favoriteType];
  int v5 = (unsigned __int16)FavoriteItemType.rawValue.getter();
  return v5 == (unsigned __int16)FavoriteItemType.rawValue.getter();
}

void sub_10000D748(id a1)
{
  uint64_t v1 = [[MapsTheme alloc] initWithMapsThemeStyle:0 visualEffectStyle:0];
  int v2 = (void *)qword_10160F818;
  qword_10160F818 = (uint64_t)v1;

  +[MKInfoCardThemeManager setTintColorProvider:&stru_1012F7DD0];
}

void sub_10000D7A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v2 = objc_alloc_init((Class)PKPassLibrary);
    int v3 = (void *)WeakRetained[2];
    WeakRetained[2] = v2;

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10000DE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10000DE88()
{
  if (qword_10160FBA0 != -1) {
    dispatch_once(&qword_10160FBA0, &stru_1012FA1E8);
  }
  uint64_t v0 = (void *)qword_10160FB98;

  return v0;
}

void sub_10000DEDC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  int v3 = a2;
  uint64_t v4 = [v2 selectedVehicle];
  id v5 = (id)v3[18];
  v3[18] = v4;
}

void sub_10000E220(id a1)
{
  uint64_t v1 = (void *)qword_10160EEA0;
  qword_10160EEA0 = (uint64_t)&off_1013AD650;

  v4[0] = UIFontTextStyleCaption2;
  v4[1] = UIFontTextStyleCaption1;
  v4[2] = UIFontTextStyleFootnote;
  v4[3] = UIFontTextStyleSubheadline;
  v4[4] = UIFontTextStyleBody;
  v4[5] = UIFontTextStyleTitle3;
  v4[6] = UIFontTextStyleTitle2;
  v4[7] = UIFontTextStyleTitle1;
  uint64_t v2 = +[NSArray arrayWithObjects:v4 count:8];
  int v3 = (void *)qword_10160EEA8;
  qword_10160EEA8 = v2;
}

uint64_t sub_10000E320()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_release();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) = 0;
  if (v1)
  {
    int v3 = *(void **)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 32);
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
    *(void *)(v4 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts) = v3;
    id v6 = v3;

    sub_1000304E0();
  }
  return _swift_task_switch(sub_100026F28, 0, 0);
}

uint64_t sub_10000E4C4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    id v5 = sub_100227634;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    id v5 = sub_1000A0C1C;
  }
  return _swift_task_switch(v5, 0, 0);
}

id sub_10000E748()
{
  if (qword_101611160 != -1) {
    dispatch_once(&qword_101611160, &stru_101323108);
  }
  uint64_t v0 = (void *)qword_101611158;

  return v0;
}

uint64_t sub_10000E93C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10000EA18()
{
  uint64_t result = type metadata accessor for OSSignposter();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_10000ECA8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100356D7C(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10010A990(v6);
  return specialized ContiguousArray._endMutation()();
}

void *sub_10000EED8(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  id v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *id v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    char v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10000F11C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_100105268;
  v3[3] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[4] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10010E94C;
  return sub_10010E8B8();
}

void sub_10000F29C(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 integerForKey:@"__internal__keyColorOverride"];

  switch((unint64_t)v2)
  {
    case 1uLL:
      uint64_t v3 = +[UIColor systemRedColor];
      break;
    case 2uLL:
      uint64_t v3 = +[UIColor systemGreenColor];
      break;
    case 4uLL:
      uint64_t v3 = +[UIColor systemOrangeColor];
      break;
    case 5uLL:
      uint64_t v3 = +[UIColor systemYellowColor];
      break;
    case 6uLL:
      uint64_t v3 = +[UIColor systemTealColor];
      break;
    case 7uLL:
      uint64_t v3 = +[UIColor systemPinkColor];
      break;
    case 8uLL:
      uint64_t v3 = +[UIColor systemGrayColor];
      break;
    default:
      uint64_t v3 = +[UIColor systemBlueColor];
      break;
  }
  uint64_t v4 = (void *)qword_10160EB60;
  qword_10160EB60 = v3;
}

uint64_t sub_10000F3C4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 192) = a1;
  *(void *)(v3 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1002FE5A4;
  }
  else
  {
    id v5 = *(void **)(v3 + 168);

    uint64_t v4 = sub_100024B88;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_10000F540(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    unint64_t v9 = (void *)*((void *)WeakRetained + 1);
    unint64_t v18 = v8;
    if (v9)
    {
      unint64_t v16 = [v9 remoteObjectProxy];
      if (v16)
      {
        sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsXPCConnectionsManager Maps broker fetching endpoints.", v10, v11, v12, v13, v14, v15, v17);
        [v16 listenerEndpointForIdentifer:@"kSiriPluginXPCEndpointIdentifier" reply:&stru_101319478];
        [v16 listenerEndpointForIdentifer:@"kCompanionDaemonXPCEndpointIdentifier" reply:&stru_101319498];
        [v16 listenerEndpointForIdentifer:@"kPushDaemonXPCEndpointIdentifier" reply:&stru_1013194B8];
      }
      else
      {
        sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsXPCConnectionsManager Maps broker connection remote object is nil, unable to fetch endpoints.", v10, v11, v12, v13, v14, v15, v17);
      }
    }
    else
    {
      sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MapsXPCConnectionsManager Maps broker connection is nil, unable to fetch endpoints.", v2, v3, v4, v5, v6, v7, v17);
    }
    uint64_t v8 = v18;
  }
}

void sub_10000F6AC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardsOverlay];
  [v1 endDeferringPresentingMapPopovers];
}

void sub_10000F6F0(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 40) selectedVehicle];
  uint64_t v2 = [v3 currentVehicleState];
  [*(id *)(a1 + 32) setCurrentVehicleState:v2];
}

id sub_10000F758()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for LibraryItemsCountManager()) init];
  static LibraryItemsCountManager.shared = (uint64_t)result;
  return result;
}

id sub_10000F788(id a1)
{
  id v1 = +[GEOPlatform sharedPlatform];
  uint64_t v2 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v1 isInternalInstall]);

  return v2;
}

void sub_10000F7F0(id a1)
{
  id v1 = (id)_GEOConfigAddBlockListenerForKey();
  byte_10160ECD0 = GEOConfigGetBOOL();
}

void sub_10000F93C(id a1)
{
  id v1 = objc_alloc_init((Class)MapsSuggestionsDonater);
  uint64_t v2 = (void *)qword_101610F80;
  qword_101610F80 = (uint64_t)v1;

  id v3 = objc_alloc_init((Class)MapsSuggestionsMutableSignalPack);
  uint64_t v4 = (void *)qword_101610F88;
  qword_101610F88 = (uint64_t)v3;
}

void *sub_10000FAF8()
{
  long long v10 = xmmword_100F5CF70;
  sub_100034B7C((uint64_t)v11);
  sub_10010E5D8((uint64_t)v11, (uint64_t)v9);
  sub_100101750((uint64_t)v9, (uint64_t)v8, &qword_1015D68C0);
  if (*(void *)&v8[0])
  {
    long long v5 = v8[0];
    long long v6 = v8[1];
    long long v7 = v8[2];
    uint64_t v0 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_1000F9638(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    }
    unint64_t v2 = v0[2];
    unint64_t v1 = v0[3];
    if (v2 >= v1 >> 1) {
      uint64_t v0 = sub_1000F9638((void *)(v1 > 1), v2 + 1, 1, v0);
    }
    v0[2] = v2 + 1;
    id v3 = &v0[6 * v2];
    v3[3] = v6;
    v3[4] = v7;
    v3[2] = v5;
  }
  else
  {
    sub_1000FF2E0((uint64_t)v8, &qword_1015D68C0);
    uint64_t v0 = _swiftEmptyArrayStorage;
  }
  sub_1000FF33C(&qword_1015D68C0);
  swift_arrayDestroy();
  return v0;
}

uint64_t start(int a1, char **a2)
{
  NSLog(@"Maps application main() started");
  UIApplicationMain(a1, a2, @"MapsApp", @"MapsAppDelegate");
  return 0;
}

uint64_t type metadata accessor for RedoSearchContainerViewController()
{
  return self;
}

void sub_10000FEE0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 17) = 0;
  unint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = v1[6];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100017614;
  v3[3] = &unk_1012E9BD0;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  [v1 loadCoreRecentsOnQueue:v2 withCompletion:v3];
  objc_destroyWeak(&v4);
}

void sub_10000FF88(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_10000FF9C()
{
  if (qword_1016109E0 != -1) {
    dispatch_once(&qword_1016109E0, &stru_10131A7E8);
  }
  uint64_t v0 = (void *)qword_1016109D8;

  return v0;
}

void sub_1000102E8(uint64_t a1)
{
  [*(id *)(a1 + 32) _teardownContextTransition:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 8);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  [*(id *)(a1 + 32) setNeedsUpdateComponent:@"mapInsets" animated:*(unsigned __int8 *)(a1 + 56)];
  id v4 = +[GroupAnimation animationForAnimatedFlag:*(unsigned __int8 *)(a1 + 56)];
  [*(id *)(a1 + 32) _updateComponentsIfNeeded:1 forceImmediateUpdate:1 forTiming:4 withAnimation:v4];
  [v4 runWithoutAnimation];
}

void sub_100010390(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) controlsStackView];
  [v1 layoutIfNeeded];
}

uint64_t type metadata accessor for HomeListCompositionalLayout()
{
  return self;
}

void sub_100010758(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = (void *)WeakRetained[40];
    WeakRetained[40] = 0;
    id v3 = WeakRetained;

    [v3 loadMapViewIfNeeded];
    id WeakRetained = v3;
  }
}

uint64_t sub_100010A24@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBDD8 != -1) {
    swift_once();
  }
  char v3 = byte_1016118B0;
  if (byte_1016118B0 == 1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v4.super.Class isa = (Class)qword_101611820;
    unint64_t v5 = 0xD000000000000036;
    unint64_t v12 = 0x8000000100F7B2F0;
    unint64_t v6 = 0x8000000100F7B2C0;
    unint64_t v7 = 0xD000000000000020;
    uint64_t v8 = 0x7972617262694CLL;
    unint64_t v9 = 0xE700000000000000;
  }
  else
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v4.super.Class isa = (Class)qword_101611820;
    unint64_t v7 = 0xD000000000000022;
    unint64_t v5 = 0xD000000000000034;
    unint64_t v12 = 0x8000000100F7B280;
    unint64_t v6 = 0x8000000100F7B250;
    uint64_t v8 = 0x657469726F766146;
    unint64_t v9 = 0xE900000000000073;
  }
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, v4, *(Swift::String *)&v8, *(Swift::String *)&v5);
  swift_unknownObjectRetain();

  return sub_10002A018(v10._countAndFlagsBits, (uint64_t)v10._object, 0, v3 ^ 1u, v1, (uint64_t)&off_1012DCD60, 0x726F6853656D6F48, 0xED00007374756374, a1);
}

id sub_100010C10(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  [*(id *)(a1 + 32) setHistoryQueryContents:v2];

  [*(id *)(a1 + 32) _combineRecents];
  char v3 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v3 recentsUpdated:];
}

uint64_t sub_100010C6C()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 40) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100022284, v2, v1);
}

id sub_100010D00()
{
  if (qword_101610AF8 != -1) {
    dispatch_once(&qword_101610AF8, &stru_10131B7B8);
  }
  uint64_t v0 = (void *)qword_101610AF0;

  return v0;
}

void sub_100010D54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _becomeTopContextInChromeViewController:*(void *)(a1 + 32)];
}

void sub_100010EA8(uint64_t a1)
{
  uint64_t v2 = +[GEOPlatform sharedPlatform];
  unsigned __int8 v3 = [v2 supportsNavigation];

  if ((v3 & 1) != 0 || MGGetBoolAnswer())
  {
    id v4 = objc_alloc_init(*(Class *)(a1 + 32));
    unint64_t v5 = (void *)qword_10160ED10;
    qword_10160ED10 = (uint64_t)v4;
  }
}

void sub_100010F38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateMeCard:*(void *)(a1 + 32)];
}

void *sub_100010F88(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v25 = v1 & 0xC000000000000001;
      unsigned __int8 v3 = _swiftEmptyArrayStorage;
      for (uint64_t i = 4; ; ++i)
      {
        if (v25) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(v1 + 8 * i);
        }
        unint64_t v6 = v5;
        uint64_t v7 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_20;
        }
        id v8 = [v5 _maps_diffableDataSourceIdentifier];
        if (v8) {
          break;
        }
        long long v23 = 0u;
        long long v24 = 0u;
        long long v22 = 0u;

        if ((void)v22) {
          goto LABEL_13;
        }
        sub_1001D2100((uint64_t)&v22);
LABEL_5:
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
      unint64_t v9 = v8;
      Swift::String v10 = v3;
      unint64_t v11 = v1;
      uint64_t v12 = v2;
      id v13 = sub_1000FB03C();
      id v14 = [v13 identifierPathByAppendingIdentifier:v9];

      uint64_t v2 = v12;
      unint64_t v1 = v11;
      unsigned __int8 v3 = v10;
      uint64_t v7 = i - 3;

      *(void *)&long long v24 = &type metadata for HomeListFeatureDiscoveryCellModel;
      *((void *)&v24 + 1) = sub_1001D2160();
      *(void *)&long long v22 = v14;
      *((void *)&v22 + 1) = v6;
LABEL_13:
      long long v19 = v22;
      long long v20 = v23;
      long long v21 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned __int8 v3 = sub_1000F9638(0, v3[2] + 1, 1, v3);
      }
      unint64_t v16 = v3[2];
      unint64_t v15 = v3[3];
      if (v16 >= v15 >> 1) {
        unsigned __int8 v3 = sub_1000F9638((void *)(v15 > 1), v16 + 1, 1, v3);
      }
      v3[2] = v16 + 1;
      uint64_t v17 = &v3[6 * v16];
      v17[3] = v20;
      v17[4] = v21;
      v17[2] = v19;
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

id sub_10001157C()
{
  if (qword_1016102B0 != -1) {
    dispatch_once(&qword_1016102B0, &stru_101312C58);
  }
  uint64_t v0 = (void *)qword_1016102A8;

  return v0;
}

id sub_1000115D0()
{
  if (qword_1016104A8 != -1) {
    dispatch_once(&qword_1016104A8, &stru_101314798);
  }
  uint64_t v0 = (void *)qword_1016104A0;

  return v0;
}

void sub_100011624(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned __int8 v3 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32) || !*(void *)(a1 + 40))
    {
      id v4 = sub_100109F4C();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        uint64_t v5 = *(void *)(a1 + 32);
        int v6 = 138412290;
        uint64_t v7 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Failed to get virtual garage with error: %@", (uint8_t *)&v6, 0xCu);
      }
    }
    else
    {
      [WeakRetained _consumeUpdatedGarage:];
    }
  }
}

void sub_10001179C(id a1)
{
  unint64_t v1 = [[FloatingButtonItem alloc] initWithButton:0 option:0];
  uint64_t v2 = (void *)qword_10160EC70;
  qword_10160EC70 = (uint64_t)v1;

  *(unsigned char *)(qword_10160EC70 + 8) = 1;
}

uint64_t sub_100011990()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1015CF528);
  sub_1000F2248(v0, (uint64_t)qword_1015CF528);
  type metadata accessor for NavigationAlertsOnlyOverrideSynchronizationTask();
  sub_1000FF33C(&qword_1015CF5F0);
  String.init<A>(describing:)();
  return Logger.init(subsystem:category:)();
}

void sub_100011A30(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    int v5 = *(unsigned __int8 *)(a1 + 48);
    if (v5 != WeakRetained[25])
    {
      WeakRetained[25] = v5;
      int v6 = sub_10000A540();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      {
        if (*(unsigned char *)(*(void *)(a1 + 32) + 25)) {
          uint64_t v7 = @"YES";
        }
        else {
          uint64_t v7 = @"NO";
        }
        id v8 = v7;
        *(_DWORD *)buf = 138412290;
        id v14 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Did update availability of EV routing to %@.", buf, 0xCu);
      }
      unint64_t v9 = *(NSObject **)(*(void *)(a1 + 32) + 16);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_100D0256C;
      v10[3] = &unk_1012E6830;
      objc_copyWeak(&v11, v2);
      char v12 = *(unsigned char *)(a1 + 48);
      dispatch_async(v9, v10);
      objc_destroyWeak(&v11);
    }
  }
}

void sub_100011C18(id a1)
{
  unint64_t v1 = [NavigationFeedbackCollector alloc];
  id v4 = +[MNNavigationService sharedService];
  uint64_t v2 = [(NavigationFeedbackCollector *)v1 initWithNavigationService:v4];
  unsigned __int8 v3 = (void *)qword_101610868;
  qword_101610868 = (uint64_t)v2;
}

uint64_t sub_100011C90()
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 48);
  return v1(v2);
}

void sub_100011E04(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_airQualityConditions);
  *(void *)(a1 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_airQualityConditions) = a2;
  id v5 = a2;

  if (a2)
  {
    id v6 = [v5 location];
    if (v6)
    {
      uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_lastSavedLocation);
      *(void *)(a1 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_lastSavedLocation) = v6;
    }
  }
  sub_10003A77C();
  sub_100062968();
}

id sub_100011FD4()
{
  if (qword_101612108 != -1) {
    dispatch_once(&qword_101612108, &stru_1012EFA78);
  }
  uint64_t v0 = (void *)qword_101612100;

  return v0;
}

uint64_t sub_100012158()
{
  uint64_t v0 = sub_1000FF33C((uint64_t *)&unk_1015D73C0);
  uint64_t v1 = __chkstk_darwin();
  unsigned __int8 v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003D64C(v1, qword_101611808);
  uint64_t v4 = sub_1000F2248(v0, (uint64_t)qword_101611808);
  *unsigned __int8 v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3[1] = v5;
  v3[2] = (uint64_t)sub_1000F5794;
  v3[3] = 0;
  sub_100012BE4();
  swift_bridgeObjectRetain();
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  return sub_100101750((uint64_t)v3, v4, (uint64_t *)&unk_1015D73C0);
}

uint64_t sub_10001228C(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_1015CBC78 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000F2248(v2, (uint64_t)qword_1016115E0);
    swift_errorRetain();
    swift_errorRetain();
    unsigned __int8 v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      id v6 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412290;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v6 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to fetch location: %@", v5, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_1000FF33C((uint64_t *)&unk_1015D5DB0);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    id v7 = a1;
    sub_1000FF33C((uint64_t *)&unk_1015D5DB0);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_1000126C8(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 976) superview];

    if (v2)
    {
      unsigned __int8 v3 = sub_1000C49B4();
      if (!os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
LABEL_13:

        [*(id *)(*(void *)(a1 + 32) + 976) removeFromSuperview];
        uint64_t v10 = *(void *)(a1 + 32);
        id v11 = *(void **)(v10 + 976);
        *(void *)(v10 + 976) = 0;

        [*(id *)(*(void *)(a1 + 32) + 984) removeFromSuperview];
        uint64_t v12 = *(void *)(a1 + 32);
        id v13 = *(void **)(v12 + 984);
        *(void *)(v12 + 984) = 0;

        uint64_t v14 = *(void *)(a1 + 32);
        unint64_t v15 = *(void **)(v14 + 1000);
        *(void *)(v14 + 1000) = 0;

        return;
      }
      id v4 = *(id *)(a1 + 32);
      if (!v4)
      {
        uint64_t v9 = @"<nil>";
        goto LABEL_12;
      }
      uint64_t v5 = (objc_class *)objc_opt_class();
      id v6 = NSStringFromClass(v5);
      if (objc_opt_respondsToSelector())
      {
        id v7 = [v4 performSelector:"accessibilityIdentifier"];
        id v8 = v7;
        if (v7 && ![v7 isEqualToString:v6])
        {
          uint64_t v9 = +[NSString stringWithFormat:@"%@<%p, %@>", v6, v4, v8];

          goto LABEL_10;
        }
      }
      uint64_t v9 = +[NSString stringWithFormat:@"%@<%p>", v6, v4];
LABEL_10:

LABEL_12:
      *(_DWORD *)buf = 138543362;
      uint64_t v17 = v9;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}@] Removing stale map effect from the view hierarchy", buf, 0xCu);

      goto LABEL_13;
    }
  }
}

void sub_1000128DC(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) _canShowWeather];
  id v3 = [*(id *)(a1 + 32) weatherOverlay];
  [v3 setHidden:v2 ^ 1 animated:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100012940()
{
  if (qword_101611020 != -1) {
    dispatch_once(&qword_101611020, &stru_101322240);
  }
  uint64_t v0 = (void *)qword_101611018;

  return v0;
}

void sub_100012994(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    uint64_t v2 = *(void *)(a1 + 40);
    id v3 = [*(id *)(a1 + 32) copy];
    (*(void (**)(uint64_t, id, void))(v2 + 16))(v2, v3, *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));

    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
}

uint64_t sub_100012A0C(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10005056C;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1015DC420 + dword_1015DC420);
  return v6(a1, v4);
}

void sub_100012AC4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) acquireMapInsetPropagationSuspensionTokenForReason:@"chrome is transitioning between contexts"];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t type metadata accessor for MapsFavoritesManager()
{
  return self;
}

uint64_t sub_100012B3C()
{
  uint64_t result = type metadata accessor for UICollectionView.SupplementaryRegistration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100012BE4()
{
  unint64_t result = qword_1015D64D8;
  if (!qword_1015D64D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D64D8);
  }
  return result;
}

void sub_100012C24(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) controlsStackView];
  [v1 layoutIfNeeded];
}

unint64_t sub_100012CCC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CCB78);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000FF27C(v6, (uint64_t)&v13, &qword_1015CCB80);
    uint64_t v7 = v13;
    unint64_t result = sub_100071AC4(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = sub_100101314(&v14, v3[7] + 40 * result);
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_100012F30()
{
  if (qword_10160F7C8 != -1) {
    dispatch_once(&qword_10160F7C8, &stru_1012F7768);
  }
  uint64_t v0 = (void *)qword_10160F7C0;

  return v0;
}

void sub_100013088(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setParkedCarWithMapItem:0 overrideCoordinate:0 referenceFrame:0 vehicleEvent:kCLLocationCoordinate2DInvalid.latitude kCLLocationCoordinate2DInvalid.longitude];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100013174(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1002FE388;
  }
  else
  {
    uint64_t v5 = *(void **)(v3 + 104);

    uint64_t v4 = sub_100044A28;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100013298()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1016115E0);
  sub_1000F2248(v0, (uint64_t)qword_1016115E0);
  return Logger.init(subsystem:category:)();
}

id sub_100013510()
{
  id result = [self mainBundle];
  qword_101611820 = (uint64_t)result;
  return result;
}

id sub_100013854()
{
  if (qword_10160EC08 != -1) {
    dispatch_once(&qword_10160EC08, &stru_1012E92A0);
  }
  uint64_t v0 = (void *)qword_10160EC00;

  return v0;
}

void sub_100013938(id a1)
{
  objc_addLoadImageFunc((objc_func_loadImage)sub_100103A9C);
  uint64_t v1 = +[NSMapTable mapTableWithKeyOptions:256 valueOptions:0];
  uint64_t v2 = (void *)qword_101610098;
  qword_101610098 = v1;
}

void sub_100013994()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10006BE3C();
  }
}

uint64_t type metadata accessor for HomeListFavoritesSectionController()
{
  return self;
}

void sub_1000142F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = (id *)(a1 + 32);
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _fetchCollectionsWithCompletion:v5];
}

void sub_10001434C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[IPCServer sharedServer];
  [v2 setSiriPluginListenerEndpoint:v1];
}

uint64_t type metadata accessor for LibraryItemsCount()
{
  return self;
}

id sub_10001441C()
{
  if (qword_10160F180 != -1) {
    dispatch_once(&qword_10160F180, &stru_1012F06B8);
  }
  uint64_t v0 = (void *)qword_10160F178;

  return v0;
}

uint64_t sub_100014714(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 232) = a1;
  *(void *)(v3 + 240) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1002FE7CC;
  }
  else
  {
    id v5 = *(void **)(v3 + 208);

    uint64_t v4 = sub_10003AA5C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100014954(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) lock];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), *(id *)(a1 + 40));
  [*(id *)(*(void *)(a1 + 32) + 8) unlock];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100014A58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56)) {
    double v2 = 1.0;
  }
  else {
    double v2 = 0.0;
  }
  [*(id *)(a1 + 32) setAlpha:v2];
  if (*(unsigned char *)(a1 + 57)) {
    double v3 = 1.0;
  }
  else {
    double v3 = 0.0;
  }
  [*(id *)(a1 + 40) setAlpha:v3];
  [*(id *)(a1 + 48) _viewAlpha];
  double v5 = v4;
  id v6 = [*(id *)(a1 + 48) view];
  [v6 setAlpha:v5];
}

void sub_100014B48(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  double v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100014B94(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 40) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  double v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100014C60()
{
  Class super_class = v0[8].super_class;
  Class v2 = v0[5].super_class;
  uint64_t v3 = (char *)super_class + (void)v2;
  if (__OFADD__(v2, super_class))
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t receiver = (unint64_t)v0[3].receiver;
  unint64_t v5 = (unint64_t)[self savedRoutesCount];
  if (((v5 | receiver) & 0x8000000000000000) != 0)
  {
LABEL_7:
    __break(1u);
    return;
  }
  unint64_t v6 = v5;
  Class v7 = v0[6].super_class;
  id v8 = v0[4].receiver;
  id v9 = v0[3].receiver;
  uint64_t v10 = (objc_class *)type metadata accessor for LibraryItemsCount();
  BOOL v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount] = v9;
  *(void *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedItemsCount] = v8;
  *(void *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount] = v3;
  *(void *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount] = v6;
  v0[1].unint64_t receiver = v11;
  v0[1].Class super_class = v10;
  [v0 initWith];

  uint64_t v13 = (void (*)(id))v0->super_class;
  v13(v12);
}

id sub_100014FB8()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_constraints] = 0;
  v0[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayAlpha] = 0x3FF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_animationCount] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_containerStyle];
  *(void *)uint64_t v1 = 0;
  v1[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_host] = 0;
  v0[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_isHidden] = 0;
  v4.unint64_t receiver = v0;
  v4.Class super_class = (Class)type metadata accessor for RedoSearchChromeOverlay();
  [super init];
  sub_10010DB88(1, 0);

  return v2;
}

uint64_t sub_100015674()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100105268;
  v3[18] = v2;
  objc_super v4 = (void *)swift_task_alloc();
  v3[19] = v4;
  *objc_super v4 = v3;
  v4[1] = sub_10000E4C4;
  return sub_1000246A8();
}

void sub_10001574C(uint64_t a1)
{
  uint64_t v2 = +[MKMapService sharedService];
  uint64_t v3 = [v2 ticketForSearchFieldPlaceholderWithTraits:0];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10004533C;
  v4[3] = &unk_1012F7850;
  v4[4] = *(void *)(a1 + 32);
  [v3 submitWithHandler:v4 networkActivity:0];
}

void sub_1000159A4(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_super v4 = WeakRetained;
  if (WeakRetained)
  {
    char v9 = 0;
    id v5 = [WeakRetained _computeOnQueueAstronomicalConditionForTime:*(void *)(a1 + 32) currentLocation:&v9 isBeforeSolarTransit:*(double *)(a1 + 48)];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100107A18;
    block[3] = &unk_101315390;
    objc_copyWeak(v7, v2);
    char v8 = v9;
    v7[1] = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(v7);
  }
}

id sub_100015BC8(uint64_t a1)
{
  id result = [*(id *)(v1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager_observers) registerObserver:a1];
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager_isETATimerRunning) & 1) == 0)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager_isETATimerRunning) = 1;
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.resume()();
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

void sub_100015CC4()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong _notifyObserversItemsDidChange];
  }
}

void sub_100015D20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 16);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100055B48;
  v3[3] = &unk_101314EF0;
  void v3[4] = v1;
  id v4 = *(id *)(a1 + 40);
  [v2 requestRecentLocationsWithResponse:v3];
}

id sub_100015DB4()
{
  if (qword_101612358 != -1) {
    dispatch_once(&qword_101612358, &stru_1012EFF18);
  }
  uint64_t v0 = (void *)qword_101612350;

  return v0;
}

id sub_100015E68(id a1, SEL a2)
{
  type metadata accessor for MapsSyncQueryPredicate();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5CF70;
  *(void *)(v2 + 56) = &type metadata for Int16;
  *(void *)(v2 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v2 + 32) = 6;
  uint64_t v3 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
  swift_bridgeObjectRelease();

  return v3;
}

void *sub_100015F14()
{
  id v1 = v0;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_10010B7E8(v2);
  swift_bridgeObjectRelease();

  return v3;
}

void sub_100016094(id a1, NSXPCListenerEndpoint *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001434C;
  block[3] = &unk_1012E5D08;
  id v4 = a2;
  uint64_t v2 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

PedestrianARSessionTransportTypeMonitor *sub_10001618C(uint64_t a1)
{
  uint64_t v2 = [PedestrianARSessionTransportTypeMonitor alloc];
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = [v3 platformController];
  id v5 = [(PedestrianARSessionTransportTypeMonitor *)v2 initWithObserver:v3 platformController:v4];

  return v5;
}

void sub_1000164E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    char isKindOfClass = objc_opt_isKindOfClass();
    id WeakRetained = v4;
    if (isKindOfClass)
    {
      uint64_t v3 = +[MKLocationManager sharedLocationManager];
      v4[24] = [v3 isAuthorizationNotDetermined];

      [v4 updateIndicatorType];
      id WeakRetained = v4;
    }
  }
}

uint64_t sub_10001674C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v3 = sub_1000F4A4C(a1, (uint64_t)sub_10024EBCC, v2);
  swift_release_n();
  return v3;
}

void sub_1000167D4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) carSessionStatus];
  uint64_t v3 = [v2 currentSession];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) mapsSuggestionsController];

    if (!v4)
    {
      id v5 = (id)objc_opt_new();
      [*(id *)(a1 + 32) setMapsSuggestionsController:v5];
    }
  }
}

void sub_100016888(uint64_t a1)
{
  sub_100018584();
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = [v4 oneInsights];
  [v2 isTouristHere];
  *(void *)(*(void *)(a1 + 32) + 280) = v3;
}

void sub_10001696C(void *a1)
{
  uint64_t v1 = a1[4];
  if (!*(void *)(v1 + 48))
  {
    Class v7 = sub_1000961C8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v12) = 0;
      char v8 = "No tokens stored, nothing to remove.";
      char v9 = v7;
      uint32_t v10 = 2;
      goto LABEL_7;
    }
LABEL_8:

    return;
  }
  [*(id *)(v1 + 56) removeObject:a1[5]];
  uint64_t v3 = a1[4];
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v3 + 48) = v4 - 1;
  uint64_t v5 = *(void *)(a1[4] + 48);
  uint64_t v6 = sub_1000961C8();
  Class v7 = v6;
  if (v4 == v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v12 = 134217984;
      uint64_t v13 = v4;
      char v8 = "Count %lu is the same, meaning token wasn't removed";
      char v9 = v7;
      uint32_t v10 = 12;
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, v8, (uint8_t *)&v12, v10);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = *(void *)(a1[4] + 8);
    int v12 = 138543874;
    uint64_t v13 = v11;
    __int16 v14 = 2048;
    uint64_t v15 = v4;
    __int16 v16 = 2048;
    uint64_t v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "UPDATE %{public}@: %lu -> %lu", (uint8_t *)&v12, 0x20u);
  }

  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
}

uint64_t sub_100016B14(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

void sub_100017528(uint64_t a1)
{
  uint64_t v2 = +[DCAppAttestService sharedService];
  *(unsigned char *)(*(void *)(a1 + 32) + 8) = [v2 isSupported];

  id v3 = [*(id *)(a1 + 40) submissionManager];
  [v3 addObserver:*(void *)(a1 + 32)];
}

void sub_100017614(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setSystemRecents:v5];
    [v4 _combineRecents];
  }
}

void sub_100017800(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5 || ![v5 count])
  {
    (*((void (**)(void))a1[6] + 2))();
    goto LABEL_31;
  }
  id v40 = v6;
  [a1[4] fetchHomeLocationsAsShortCuts];
  uint64_t v42 = v41 = v5;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id v7 = v5;
  id v8 = [v7 countByEnumeratingWithState:&v47 objects:v51 count:16];
  if (!v8)
  {
LABEL_23:

    goto LABEL_27;
  }
  id v9 = v8;
  uint64_t v10 = *(void *)v48;
LABEL_5:
  uint64_t v11 = 0;
  while (1)
  {
    if (*(void *)v48 != v10) {
      objc_enumerationMutation(v7);
    }
    int v12 = *(void **)(*((void *)&v47 + 1) + 8 * v11);
    uint64_t v13 = [v12 placemark];
    uint64_t v14 = [v13 locality];

    if (!v14)
    {
      unint64_t v18 = sub_1000493C0();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_20;
      }
      *(_WORD *)buf = 0;
      long long v19 = v18;
      long long v20 = "Trip Placemark has no locality, not showing Offline Maps trip.";
LABEL_19:
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, v20, buf, 2u);
      goto LABEL_20;
    }
    if (([v12 isInternational] & 1) == 0)
    {
      unint64_t v18 = sub_1000493C0();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        goto LABEL_20;
      }
      *(_WORD *)buf = 0;
      long long v19 = v18;
      long long v20 = "Trip is not international, not showing Offline Maps trip.";
      goto LABEL_19;
    }
    BOOL v15 = [0 placemark];
    uint64_t v16 = [v15 location];
    [v16 coordinate];
    BOOL v17 = CLLocationCoordinate2DIsValid(v52);

    if (!v17)
    {
      unint64_t v18 = sub_1000493C0();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        long long v19 = v18;
        long long v20 = "Trip does not have a valid coordinate.";
        goto LABEL_19;
      }
LABEL_20:

      goto LABEL_21;
    }
    if (([a1[5] isTrip:v12 nearAtLeastOneShortcut:v42] & 1) == 0) {
      break;
    }
LABEL_21:
    if (v9 == (id)++v11)
    {
      id v9 = [v7 countByEnumeratingWithState:&v47 objects:v51 count:16];
      if (v9) {
        goto LABEL_5;
      }
      goto LABEL_23;
    }
  }
  id v21 = v12;

  if (v21)
  {
    long long v22 = +[NSBundle mainBundle];
    long long v23 = [v22 localizedStringForKey:@"MAPS_OFFLINE_TIP_TITLE_FOR_FUTURE_TRIP" value:@"localized string not found" table:@"Offline"];

    id v24 = objc_alloc((Class)NSString);
    unint64_t v25 = [v21 placemark];
    uint64_t v26 = [v25 locality];
    id v27 = [v24 initWithFormat:v23, v26];

    unint64_t v28 = [v21 placemark];
    char v29 = [v28 location];
    [v29 coordinate];
    double v31 = v30;

    v32 = [v21 placemark];
    unint64_t v33 = [v32 location];
    [v33 coordinate];
    double v35 = v34;

    id v36 = a1[4];
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472;
    v43[2] = sub_100A1B3B4;
    v43[3] = &unk_101314860;
    id v37 = a1[6];
    id v44 = v27;
    id v45 = v37;
    v43[4] = a1[5];
    id v38 = v27;
    [v36 _buildMapRegionForLatitude:v43 longitude:v31 handler:v35];

    goto LABEL_30;
  }
LABEL_27:
  long long v39 = sub_1000493C0();
  if (os_log_type_enabled(v39, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEBUG, "No trips found matching criteria, not showing Offline Maps trip.", buf, 2u);
  }

  (*((void (**)(void))a1[6] + 2))();
LABEL_30:
  id v6 = v40;
  id v5 = v41;

LABEL_31:
}

uint64_t sub_100017C7C(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  id v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      type metadata accessor for LibraryItemsCount();
      id v4 = v3;
      id v5 = v2;
      char v6 = static NSObject.== infix(_:_:)();

      if (v6) {
        return 1;
      }
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

void sub_100017FCC(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = (void *)*((void *)WeakRetained + 4);
    uint64_t v6 = *(void *)(a1 + 32);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    id v7[2] = sub_100027BA0;
    v7[3] = &unk_1012E9BD0;
    objc_copyWeak(&v8, v2);
    [v5 offlineSuggestionsForLocation:v6 completion:v7];
    objc_destroyWeak(&v8);
  }
}

void sub_100018090(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_100018584()
{
  if (qword_101610CF0 != -1) {
    dispatch_once(&qword_101610CF0, &stru_10131D4D8);
  }
  uint64_t v0 = (void *)qword_101610CE0;

  return v0;
}

void sub_100018660(uint64_t a1)
{
  +[PPTNotificationCenter setEnabled:1];
  id v3 = [*(id *)(a1 + 32) mainVKMapView];
  uint64_t v2 = +[UIApplication sharedApplication];
  +[_MapsApplicationDelegateTestingCoordinator doPostLauchTestSetupWithMapView:v3 mapsAppTesting:v2];
}

void sub_1000186EC(id a1, NSXPCListenerEndpoint *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000C538;
  block[3] = &unk_1012E5D08;
  id v4 = a2;
  uint64_t v2 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10001893C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = [[RideBookingRideStatusObserverProxy alloc] initWithDelegate:WeakRetained];
    id v3 = (void *)WeakRetained[6];
    WeakRetained[6] = v2;
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      uint64_t v6 = "MapsSuggestionsRidesharingSource.m";
      __int16 v7 = 1026;
      int v8 = 67;
      __int16 v9 = 2082;
      uint64_t v10 = "-[MapsSuggestionsRidesharingSource initFromResourceDepot:name:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_100018B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

PedestrianARSessionRoutePlanningConfigurationMonitor *sub_100019230(uint64_t a1)
{
  uint64_t v2 = [PedestrianARSessionRoutePlanningConfigurationMonitor alloc];
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 platformController];
  int v5 = [(PedestrianARSessionRoutePlanningConfigurationMonitor *)v2 initWithObserver:v3 platformController:v4];

  return v5;
}

void sub_100019574(uint64_t a1)
{
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) subscriptionInfos];
  id v3 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        __int16 v7 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        int v8 = *(void **)(a1 + 40);
        __int16 v9 = [v7 subscription];
        uint64_t v10 = [v9 identifier];
        uint64_t v11 = [v8 objectForKeyedSubscript:v10];

        [v7 setPairedDeviceState:v11];
      }
      id v4 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v4);
  }

  int v12 = *(void **)(a1 + 32);
  uint64_t v13 = (void *)v12[1];
  uint64_t v14 = [v12 subscriptionInfos];
  [v13 pairedSubscriptionInfosDidChange:v14];
}

void sub_100019A78(id a1, NSXPCListenerEndpoint *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100009E1C;
  block[3] = &unk_1012E5D08;
  id v4 = a2;
  uint64_t v2 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100019DD0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) buttonsContainerViewController];
  uint64_t v1 = [v2 view];
  [v1 setAlpha:0.0];
}

uint64_t sub_100019F54(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v3 = sub_1000F4A4C(a1, (uint64_t)sub_100332960, v2);
  swift_release_n();
  return v3;
}

void sub_10001A06C(uint64_t a1, void *a2)
{
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    id v6 = a2;
    uint64_t v3 = +[NSNotificationCenter defaultCenter];
    [v3 removeObserver:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];

    uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = 0;

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10001A328(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 64) objectForKey:*(void *)(a1 + 40)];
  id v3 = [v2 copy];

  [*(id *)(*(void *)(a1 + 32) + 64) removeObjectForKey:*(void *)(a1 + 40)];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100BEC72C;
  v5[3] = &unk_10131AFA8;
  uint64_t v4 = *(void **)(a1 + 40);
  v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  char v7 = *(unsigned char *)(a1 + 48);
  [v3 enumerateKeysAndObjectsUsingBlock:v5];
}

void sub_10001A544(uint64_t a1, char a2)
{
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = WeakRetained[10];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001F888;
    block[3] = &unk_1012E9F18;
    char v11 = a2;
    long long v8 = *(_OWORD *)(a1 + 32);
    id v7 = (id)v8;
    long long v10 = v8;
    dispatch_async(v6, block);
  }
}

uint64_t sub_10001A604(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  Swift::Int v7 = *(void *)(*v2 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v8 = AnyHashable._rawHashValue(seed:)(v7);
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      sub_10010A768(*(void *)(v6 + 48) + 40 * v10, (uint64_t)v17);
      char v12 = static AnyHashable.== infix(_:_:)();
      sub_1000F351C((uint64_t)v17);
      if (v12) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_1000F351C(a2);
    sub_10010A768(*(void *)(*v3 + 48) + 40 * v10, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10010A768(a2, (uint64_t)v17);
    uint64_t v16 = *v3;
    *id v3 = 0x8000000000000000;
    sub_10010A824((Swift::Int)v17, v10, isUniquelyReferenced_nonNull_native);
    *id v3 = v16;
    swift_bridgeObjectRelease();
    long long v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return 1;
  }
}

void sub_10001A94C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015DC448);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10010ECB0;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100033BC0;
  aBlock[3] = &unk_1012E5500;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  [a2 calculateETAWithCompletionHandler:v9];
  _Block_release(v9);
}

void *sub_10001ABB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000FF33C(&qword_1015CD310);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_10000EED8(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1000F84F4();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void sub_10001ACC8(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000333B8;
    v3[3] = &unk_1012FF4B8;
    objc_copyWeak(&v4, v1);
    [WeakRetained _retrieveUserProfilePictureWithImageCreationCompletion:v3];
    objc_destroyWeak(&v4);
  }
}

void sub_10001AD74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10001AFD4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) buttonsContainerViewController];
  uint64_t v1 = [v2 view];
  [v1 setAlpha:1.0];
}

void sub_10001B1E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001B5F8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained considerMyAllowanceAsLimited:[WeakRetained[1] isAuthorizedForPreciseLocation] ^ 1];
    [v2[1] startLocationUpdateWithObserver:v2];
    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 addObserver:v2 selector:"locationManagerApprovalDidChange:" name:MKLocationManagerApprovalDidChangeNotification object:0];
  }
  else
  {
    GEOFindOrCreateLog();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      uint64_t v5 = "MapsSuggestionsMKLocationManagerAdapter.m";
      __int16 v6 = 1026;
      int v7 = 49;
      __int16 v8 = 2082;
      uint64_t v9 = "-[MapsSuggestionsMKLocationManagerAdapter onStartImplementation]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

id sub_10001B830()
{
  if (qword_101610340 != -1) {
    dispatch_once(&qword_101610340, &stru_1013132D8);
  }
  uint64_t v0 = (void *)qword_101610338;

  return v0;
}

void sub_10001B884(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    if (*((id *)WeakRetained + 5) == v5)
    {
      *((void *)WeakRetained + 5) = 0;
    }
    [v4 collectAddresses];
  }
}

void sub_10001B900(uint64_t a1, char a2, char a3)
{
  id v5 = (id *)(a1 + 32);
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 32));
  int v7 = WeakRetained;
  if (WeakRetained)
  {
    __int16 v8 = WeakRetained[10];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000224A8;
    v9[3] = &unk_1012E9EC8;
    objc_copyWeak(&v10, v5);
    char v11 = a2;
    char v12 = a3;
    dispatch_async(v8, v9);
    objc_destroyWeak(&v10);
  }
}

void sub_10001BF0C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

void sub_10001C03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_10001C050(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _processTopSuggestions:v8 error:v5 wasFromStorageFile:1];
  }
}

id sub_10001C0CC(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
  *id v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
  int v4 = &v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
  *int v4 = 0x6966654472657355;
  v4[1] = 0xEB0000000064656ELL;
  *(void *)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
  v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
  v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
  v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
  uint64_t v5 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
  uint64_t v6 = qword_1015CBCC0;
  id v7 = v1;
  if (v6 != -1) {
    swift_once();
  }
  v7[v5] = byte_101611638;
  *(void *)&v7[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = a1;
  id v8 = a1;

  v10.unint64_t receiver = v7;
  v10.Class super_class = (Class)type metadata accessor for MapsFavoriteItem();
  return [super init];
}

PedestrianARSessionThermalStateMonitor *sub_10001C23C(uint64_t a1)
{
  id v2 = [PedestrianARSessionThermalStateMonitor alloc];
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = +[MapsThermalPressureController sharedController];
  uint64_t v5 = [(PedestrianARSessionThermalStateMonitor *)v2 initWithObserver:v3 thermalPressureController:v4];

  return v5;
}

void sub_10001C328(id a1)
{
  if (sub_1000D4BB8())
  {
    if (+[ARGeoTrackingConfiguration isSupported])
    {
      uint64_t v1 = sub_10010A048();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v4 = 0;
        id v2 = "Pedestrian AR is supported on the current device";
        uint64_t v3 = (uint8_t *)&v4;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, v2, v3, 2u);
      }
    }
    else
    {
      byte_1016101B8 = 1;
      uint64_t v1 = sub_10010A048();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        id v2 = "Pedestrian AR is not supported because the current device does not support geo tracking";
        uint64_t v3 = buf;
        goto LABEL_9;
      }
    }
  }
  else
  {
    byte_1016101B8 = 1;
    uint64_t v1 = sub_10010A048();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v6 = 0;
      id v2 = "Pedestrian AR is not supported because the current device does not support VLF";
      uint64_t v3 = (uint8_t *)&v6;
      goto LABEL_9;
    }
  }
}

uint64_t sub_10001C428()
{
  Class super_class = v0[3].super_class;
  if (super_class)
  {
    uint64_t v2 = *(void *)((char *)super_class + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
    uint64_t v3 = *(void *)((char *)super_class + OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedItemsCount);
    uint64_t v4 = *(void *)((char *)super_class + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
    uint64_t v5 = *(void *)((char *)super_class + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
    __int16 v6 = (objc_class *)type metadata accessor for LibraryItemsCount();
    id v7 = (char *)objc_allocWithZone(v6);
    *(void *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount] = v2;
    *(void *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedItemsCount] = v3;
    *(void *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount] = v4;
    *(void *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount] = v5;
    v0[1].unint64_t receiver = v7;
    v0[1].Class super_class = v6;
    [v0 initWith];
  }
  else
  {
    id v8 = 0;
  }
  v0[4].unint64_t receiver = v8;
  type metadata accessor for MainActor();
  v0[4].Class super_class = (Class)static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10000E320, v10, v9);
}

void sub_10001C564(id a1)
{
  id v7 = +[GEOAPSharedStateData sharedData];
  uint64_t v1 = sub_100018584();
  uint64_t v2 = [v1 oneInsights];
  [v2 isTouristHere];
  double v4 = v3;
  MapsSuggestionsConfidenceDontKnow();
  BOOL v6 = v4 > v5;

  [v7 setMapViewLocationIsTourist:v6];
}

void sub_10001CA50(uint64_t a1)
{
  BOOL v2 = sub_100105DB4();
  double v3 = sub_10000D3F0();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v8 = 134349056;
      uint64_t v9 = v5;
      BOOL v6 = "[%{public}p] Pedestrian AR is supported";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v8, 0xCu);
    }
  }
  else if (v4)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 134349056;
    uint64_t v9 = v7;
    BOOL v6 = "[%{public}p] The current hardware does not support Pedestrian AR";
    goto LABEL_6;
  }

  byte_10160EF98 = v2;
}

void *sub_10001CBB8(id val)
{
  objc_initWeak(&location, val);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1000B2B30;
  v3[3] = &unk_1012EB4A8;
  objc_copyWeak(&v4, &location);
  uint64_t v1 = objc_retainBlock(v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);

  return v1;
}

void sub_10001CC6C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 40) allObjects];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10001D000(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  uint64_t v3 = (unsigned __int8 *)WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = *((void *)WeakRetained + 13);
    BOOL v5 = v4 == 1;
    BOOL v6 = v4 < 1;
    uint64_t v7 = v4 - 1;
    if (!v6)
    {
      *((void *)WeakRetained + 13) = v7;
      int v8 = (unsigned __int8 *)WeakRetained;
      if (v5)
      {
        if (!*((unsigned char *)WeakRetained + 25))
        {
          [a1[4] setHidden:1];
          uint64_t v3 = v8;
        }
        if (!v3[26])
        {
          [a1[5] setHidden:1];
          uint64_t v3 = v8;
        }
        if (([v3 _viewShown] & 1) == 0) {
          [a1[6] setHidden:1];
        }
        uint64_t v3 = v8;
      }
      +[MapsAnalyticStateProvider updateButtonsInformationAQI:v3[25] weather:v3[26]];
      uint64_t v3 = v8;
    }
  }
}

void sub_10001D0F0(void *a1)
{
  *(unsigned char *)(a1[4] + 76) = 1;
  *(_DWORD *)(*(void *)(a1[5] + 8) + 24) = atomic_fetch_add_explicit((atomic_uint *volatile)(a1[4] + 72), 1u, memory_order_relaxed)+ 1;
  id v2 = [*(id *)(a1[4] + 80) copy];
  uint64_t v3 = *(void *)(a1[6] + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10001D164(void *a1)
{
  uint64_t v2 = a1[4];
  if (*(unsigned char *)(v2 + 76) && !*(unsigned char *)(v2 + 78))
  {
    *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
    *(unsigned char *)(a1[4] + 76) = 0;
    *(_DWORD *)(*(void *)(a1[6] + 8) + 24) = atomic_fetch_add((atomic_uint *volatile)(a1[4] + 72), 1u) + 1;
    uint64_t v6 = a1[4];
    if (!*(unsigned char *)(v6 + 77))
    {
      *(unsigned char *)(v6 + 77) = 1;
      id v7 = [*(id *)(a1[4] + 32) copy];
      uint64_t v8 = *(void *)(a1[7] + 8);
      uint64_t v9 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v7;
    }
  }
  else
  {
    uint64_t v3 = sub_1000EC2B4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = a1[4];
      int v5 = *(unsigned __int8 *)(v4 + 76);
      LODWORD(v4) = *(unsigned __int8 *)(v4 + 78);
      v10[0] = 67109376;
      v10[1] = v5;
      __int16 v11 = 1024;
      int v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Not recalculating, _needsRecalculation: %d _updatesPaused: %d", (uint8_t *)v10, 0xEu);
    }
  }
}

void sub_10001D2CC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 32) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10001D320(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10001D978(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10001DFA8(uint64_t a1)
{
  +[NSMutableSet set];
  v27 = uint64_t v26 = a1;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
  if (!v2)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    goto LABEL_22;
  }
  id v3 = v2;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = *(void *)v32;
  uint64_t v29 = GEOMapDataSubscriptionDownloadReasonKey;
  uint64_t v28 = GEOMapDataSubscriptionProgressDownloadReasonForcedUpdate;
  do
  {
    for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v32 != v6) {
        objc_enumerationMutation(obj);
      }
      uint64_t v8 = *(void **)(*((void *)&v31 + 1) + 8 * i);
      uint64_t v9 = [v8 state];
      if ([v9 loadState] == (id)1)
      {
      }
      else
      {
        uint64_t v10 = [v8 state];
        id v11 = [v10 loadState];

        if (v11 != (id)2) {
          goto LABEL_10;
        }
      }
      ++v4;
LABEL_10:
      int v12 = [v8 state];
      if ([v12 loadState] == (id)1)
      {
      }
      else
      {
        uint64_t v13 = [v8 state];
        id v14 = [v13 loadState];

        if (v14 != (id)3) {
          continue;
        }
      }
      ++v5;
      long long v15 = [v8 state];
      uint64_t v16 = [v15 downloadProgress];

      if (v16)
      {
        long long v17 = [v8 state];
        long long v18 = [v17 downloadProgress];
        long long v19 = [v18 userInfo];
        long long v20 = [v19 objectForKeyedSubscript:v29];

        if (v20 && [v20 isEqualToString:v28])
        {
          id v21 = [v8 subscription];
          long long v22 = [v21 identifier];
          [v27 addObject:v22];
        }
      }
    }
    id v3 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
  }
  while (v3);
LABEL_22:

  [*(id *)(v26 + 40) setOutOfDateSubscriptionsCount:v5];
  [*(id *)(v26 + 40) setFullyLoadedSubscriptionsCount:v4];
  [*(id *)(v26 + 40) setUpdatingSubscriptions:v27];
  id v23 = [*(id *)(v26 + 32) copy];
  [*(id *)(v26 + 40) setSubscriptionInfos:v23];

  uint64_t v24 = *(void *)(v26 + 56);
  if (v24)
  {
    unint64_t v25 = [*(id *)(v26 + 40) subscriptionInfos];
    (*(void (**)(uint64_t, void *, void))(v24 + 16))(v24, v25, 0);
  }
  [*(id *)(v26 + 40) _subscriptionsDidChange];
  if ((uint64_t)[*(id *)(v26 + 48) pairedDeviceSubscriptionStatesMonitorCount] >= 1) {
    [*(id *)(v26 + 48) _reloadPairedDeviceSubscriptionInfos];
  }
}

uint64_t sub_10001E550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesCellSnapshot;
  swift_beginAccess();
  uint64_t result = sub_1000FF27C(v3, (uint64_t)v11, &qword_1015D68C0);
  if (*(void *)&v11[0])
  {
    long long v5 = v11[1];
    *(_OWORD *)a1 = v11[0];
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v11[2];
  }
  else
  {
    sub_1000FF2E0((uint64_t)v11, &qword_1015D68C0);
    *(void *)&v11[0] = *(void *)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 56);
    uint64_t v6 = *(void **)&v11[0];
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    sub_10010E738((uint64_t)&v10, (uint64_t)v11 + 8);
    id v7 = v6;
    id v8 = sub_10010BE34();
    *(void *)(a1 + 32) = &type metadata for HomeListFavoritesCellModel;
    *(void *)(a1 + 40) = sub_10010CF48();
    uint64_t v9 = swift_allocObject();
    *(void *)(a1 + 8) = v9;
    sub_10010CE50((uint64_t)v11, v9 + 16);
    *(void *)a1 = v8;
    sub_1000FF3F0(a1, (uint64_t)v11);
    swift_beginAccess();
    sub_10010E570((uint64_t)v11, v3);
    return swift_endAccess();
  }
  return result;
}

void sub_10001E930(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a3);
  id v9 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
  id v8 = v5;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10001EA40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10001EDB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = *(NSObject **)(*(void *)(a1 + 32) + 48);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    id v7[2] = sub_100010C10;
    v7[3] = &unk_1012E5D58;
    void v7[4] = WeakRetained;
    id v8 = v3;
    dispatch_sync(v6, v7);
  }
}

void sub_10001EE6C(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000231CC;
  v4[3] = &unk_1012E9950;
  objc_copyWeak(&v6, (id *)(a1 + 48));
  id v5 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;

  objc_destroyWeak(&v6);
}

void sub_10001F09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10001F1F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015D4B40);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v31 - v6;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  long long v15 = (char *)&v31 - v14;
  if (v0[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] == 1)
  {
    long long v34 = (void **)&v0[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
    sub_1000F1C90((uint64_t)&v0[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], (uint64_t)v39);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    sub_1000F1BD8((uint64_t)v39);
    if (Strong)
    {
      id v17 = sub_10010BE34();
      id v18 = sub_1000806A8();
      v39[0] = v17;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
      swift_unknownObjectRelease();

      long long v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v19(v7, 1, v8) != 1)
      {
        long long v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        uint64_t v33 = v9 + 32;
        long long v32 = v20;
        v20(v15, v7, v8);
        sub_1000F1C90((uint64_t)v34, (uint64_t)v39);
        uint64_t v21 = swift_unknownObjectWeakLoadStrong();
        sub_1000F1BD8((uint64_t)v39);
        if (v21)
        {
          sub_10025DE18(&v35);
          swift_unknownObjectRelease();
          if ((void)v35)
          {
            v38[0] = v35;
            v38[1] = v36;
            v38[2] = v37;
            sub_1000F1C90((uint64_t)v34, (uint64_t)v39);
            uint64_t v22 = swift_unknownObjectWeakLoadStrong();
            sub_1000F1BD8((uint64_t)v39);
            if (v22)
            {
              swift_getObjectType();
              if (swift_conformsToProtocol2()) {
                id v23 = v1;
              }
              else {
                id v23 = 0;
              }
              if (!v23)
              {
                uint64_t result = _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                return result;
              }
              uint64_t v31 = *(void *)&v38[0];
              id v24 = v1;
              id v25 = sub_1000806A8();
              v39[0] = v31;
              dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
              swift_unknownObjectRelease();

              if (v19(v5, 1, v8) != 1)
              {
                v32(v12, v5, v8);
                uint64_t v26 = *v34;
                Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
                id v28 = [v26 cellForItemAtIndexPath:isa];

                uint64_t v29 = *(void (**)(char *, uint64_t))(v9 + 8);
                v29(v12, v8);
                if (v28)
                {
                  self;
                  double v30 = (void *)swift_dynamicCastObjCClass();
                  if (v30)
                  {
                    [v30 fetchMissingImages];

                    sub_1000FFC8C((uint64_t)v38);
                    return ((uint64_t (*)(char *, uint64_t))v29)(v15, v8);
                  }
                }
                goto LABEL_21;
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
            }
            sub_1000FF2E0((uint64_t)v5, &qword_1015D4B40);
LABEL_21:
            sub_1000FFC8C((uint64_t)v38);
            return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
          }
        }
        else
        {
          long long v36 = 0u;
          long long v37 = 0u;
          long long v35 = 0u;
        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
        return sub_1000FF2E0((uint64_t)&v35, &qword_1015D68C0);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    return sub_1000FF2E0((uint64_t)v7, &qword_1015D4B40);
  }
  return result;
}

DimmingBehaviour *sub_10001F724(void *a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1008A28E4;
  v5[3] = &unk_1012FF030;
  id v6 = a1;
  id v1 = v6;
  uint64_t v2 = objc_retainBlock(v5);
  uint64_t v3 = [[DimmingBehaviour alloc] initWithDimming:v2 threshold:v1];

  return v3;
}

void sub_10001F888(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = *(unsigned char *)(a1 + 48);
  uint64_t v2 = sub_100021338();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
      CFStringRef v3 = @"Yes";
    }
    else {
      CFStringRef v3 = @"No";
    }
    int v4 = 138412290;
    CFStringRef v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Maps Home: userHasPaymentCard: %@", (uint8_t *)&v4, 0xCu);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_10001F9F0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    CFStringRef v5 = sub_10022EF04;
  }
  else
  {
    id v6 = *(void **)(v4 + 24);

    *(void *)(v4 + 48) = a1;
    CFStringRef v5 = sub_100011C90;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10001FB4C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D6F48);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    _DWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D6F50);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10001FF8C(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_UTILITY, 0);

  dispatch_queue_t v2 = dispatch_queue_create("com.apple.Maps.MapsAnalyticStateProvider", attr);
  CFStringRef v3 = (void *)qword_101610398;
  qword_101610398 = (uint64_t)v2;
}

void sub_100020400(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  CFStringRef v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = [WeakRetained[1] oneInsights];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    id v7[2] = sub_100017800;
    v7[3] = &unk_101314888;
    id v5 = *(id *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 32);
    void v7[4] = v3;
    void v7[5] = v6;
    id v8 = v5;
    [v4 futureTripsWithHandler:v7];
  }
}

id sub_100020594()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_observers;
  id v2 = objc_allocWithZone((Class)NSHashTable);
  CFStringRef v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(void *)&v3[OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_airQualityConditions] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_updatingTimer] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_lastSavedLocation] = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_weatherService;
  type metadata accessor for WeatherService();
  *(void *)&v3[v4] = WeatherService.__allocating_init()();
  v3[OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_enabled] = 1;

  v6.unint64_t receiver = v3;
  v6.Class super_class = (Class)type metadata accessor for AirQualityConditionsDataProvider();
  return [super init];
}

uint64_t sub_100020664()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 192);

  if (v1 + 1 == v2)
  {
    CFStringRef v3 = *(void **)(v0 + 176);
    swift_bridgeObjectRelease();

    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 208) + 1;
    *(void *)(v0 + 208) = v6;
    uint64_t v7 = *(void *)(v0 + 184);
    if ((v7 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v7 + 8 * v6 + 32);
    }
    uint64_t v9 = v8;
    *(void *)(v0 + 216) = v8;
    uint64_t v10 = *(void *)(v0 + 176);
    uint64_t v11 = *(void *)(*(void *)(v0 + 144) + *(void *)(v0 + 200));
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100105AA4;
    uint64_t v12 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_1000336CC;
    *(void *)(v0 + 104) = &unk_1012DE4D0;
    *(void *)(v0 + 112) = v12;
    [v9 updateSubtitleWithViewMode:v11 currentLocation:v10 completionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
}

void sub_10002097C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      uint64_t v9 = sub_1000519B4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "AutomaticVehicleSelectionTask: failed to fetch garage with error: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      [WeakRetained _updateGarage:v5];
    }
  }
}

void sub_100020C80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100020E54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000211AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000211D0(id a1)
{
  uint64_t v1 = objc_alloc_init(RAPWebBundleConfigurationManager);
  id v4 = [(RAPWebBundleConfigurationManager *)v1 configuration];

  uint64_t v2 = [[RAPWebBundleDownloadManager alloc] initWithConfiguration:v4];
  CFStringRef v3 = (void *)qword_1016109D0;
  qword_1016109D0 = (uint64_t)v2;
}

id sub_100021338()
{
  if (qword_1016120E8 != -1) {
    dispatch_once(&qword_1016120E8, &stru_1012EFA38);
  }
  uint64_t v0 = (void *)qword_1016120E0;

  return v0;
}

uint64_t sub_10002138C(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  [a1 *a4:*a3];
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_4;
  }
  uint64_t v5 = swift_dynamicCastObjCProtocolConditional();
  if (!v5)
  {
    LODWORD(v8) = 0;
    uint64_t v7 = 83;
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_4:
    uint64_t v5 = 0;
  }
  [a1 setDelegate:v5, v7, v8];
  return swift_unknownObjectRelease();
}

void sub_100021824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002197C()
{
  if (!GEOConfigGetBOOL())
  {
    BOOL v2 = sub_10072FF94();
    CFStringRef v3 = +[UIScreen mainScreen];
    [v3 bounds];
    if (!v2)
    {

      return;
    }
LABEL_7:
    UIRoundToScreenScale();

    return;
  }
  uint64_t v0 = +[UIDevice currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  if (v1 != (id)1)
  {
    CFStringRef v3 = +[UIScreen mainScreen];
    [v3 bounds];
    goto LABEL_7;
  }
}

void sub_100021CB4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v2 = WeakRetained;
  if (WeakRetained)
  {
    CFStringRef v3 = [WeakRetained[24] allKeys];
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v4 = [v3 countByEnumeratingWithState:&v22 objects:v26 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v19 = *(void *)v23;
      id obj = v3;
      do
      {
        for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v23 != v19) {
            objc_enumerationMutation(obj);
          }
          uint64_t v7 = *(void *)(*((void *)&v22 + 1) + 8 * i);
          uint64_t v8 = [v2[24] objectForKey:v7];
          uint64_t v9 = objc_opt_new();
          int v10 = GEOFindOrCreateLog();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
          {
            id v11 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
            id v12 = [objc_alloc((Class)NSString) initWithFormat:@"completedRideIdentifiersAndDates: %@", v8];
            *(_DWORD *)buf = 136315394;
            id v28 = v11;
            __int16 v29 = 2112;
            *(void *)double v30 = v12;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
          }
          v20[0] = _NSConcreteStackBlock;
          v20[1] = 3221225472;
          v20[2] = sub_10062D040;
          v20[3] = &unk_1012F2628;
          id v13 = v9;
          id v21 = v13;
          [v8 enumerateKeysAndObjectsUsingBlock:v20];
          unint64_t v14 = GEOFindOrCreateLog();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            long long v15 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
            id v16 = [objc_alloc((Class)NSString) initWithFormat:@"flushedCompletedRideIdentifiersAndDates: %@", v13];
            *(_DWORD *)buf = 136315394;
            id v28 = v15;
            __int16 v29 = 2112;
            *(void *)double v30 = v16;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
          }
          [v2[24] setObject:v13 forKey:v7];
        }
        CFStringRef v3 = obj;
        id v5 = [obj countByEnumeratingWithState:&v22 objects:v26 count:16];
      }
      while (v5);
    }
    id v17 = +[NSUserDefaults standardUserDefaults];
    [v17 setObject:v2[24] forKey:@"RideBookingCompletedRideIdentifiersAndDates"];
  }
  else
  {
    GEOFindOrCreateLog();
    id v17 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v28 = "RideBookingDataCoordinator.m";
      __int16 v29 = 1026;
      *(_DWORD *)double v30 = 140;
      *(_WORD *)&v30[4] = 2082;
      *(void *)&v30[6] = "-[RideBookingDataCoordinator _flushCompletedRideIdentifiersAndDatesMap]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    CFStringRef v3 = v17;
  }
}

uint64_t sub_100022284()
{
  swift_release();
  id v1 = [self sharedManager];
  *(void *)(v0 + 48) = [v1 displayCountForCollectionsInLibrary];

  return _swift_task_switch(sub_10010D5BC, 0, 0);
}

void sub_1000224A8(uint64_t a1)
{
  BOOL v2 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      if ([WeakRetained[3] startLocationUpdatesForDelegate:WeakRetained])
      {
        v6[0] = _NSConcreteStackBlock;
        v6[1] = 3221225472;
        uint64_t v6[2] = sub_100425BEC;
        v6[3] = &unk_1012E6830;
        objc_copyWeak(&v7, v2);
        char v8 = *(unsigned char *)(a1 + 41);
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
        objc_destroyWeak(&v7);
      }
    }
    else
    {
      id v5 = sub_100021338();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Maps Home - User is not eligible for Transit + Pay with no payment card in Wallet", buf, 2u);
      }
    }
  }
}

void sub_100022694(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if (v3)
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      id v7[2] = sub_10075E540;
      v7[3] = &unk_1012E5D58;
      void v7[4] = WeakRetained;
      id v8 = v3;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
    }
    else
    {
      [WeakRetained cleanSearch];
      id v6 = [v5[20] searchDataProvider];
      [v6 clearMKLocalSearchCompleterQueryState];
    }
  }
}

void sub_100022B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100022BA8(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_100105268;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1015D60F0 + dword_1015D60F0);
  return v6(a1, v4);
}

void sub_100022E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000231CC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1000CC6E4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = WeakRetained[4];
      int v6 = 134349314;
      id v7 = WeakRetained;
      __int16 v8 = 2112;
      id v9 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Clearing route context on map view (%@)", (uint8_t *)&v6, 0x16u);
    }

    [WeakRetained[4] _clearRouteContext];
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v5, 1);
    }
  }
}

void sub_10002359C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10002363C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100023650(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100008DD8;
  v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1000239E8(void *a1, uint64_t a2, void *a3)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = swift_dynamicCastObjCProtocolConditional();
    if (v5)
    {
      id v6 = [objc_allocWithZone((Class)HomeCuratedCollectionsTableViewCellModel) initWithResultDataProvider:*a3 delegate:v5];
      [a1 setCellModel:v6];
      swift_unknownObjectRelease();
    }
    else
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
}

uint64_t sub_100023BFC()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  id v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  v6[3] = 0;
  void v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_10010B498((uint64_t)v3);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1015DAAD8;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

void sub_100023E34(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v7)
    {
      uint64_t v9 = sub_1000493C0();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v7;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "[MapsOfflineUIHelper] refresh last update date error: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 56), a2);
      [*(id *)(*(void *)(a1 + 32) + 8) lastUpdatedDateDidChange:*(void *)(*(void *)(a1 + 32) + 56)];
    }
  }
}

PedestrianARSessionTileAvailabilityMonitor *sub_100023FD4(uint64_t a1)
{
  uint64_t v2 = [VLFTileObserver alloc];
  id v3 = +[MKLocationManager sharedLocationManager];
  uint64_t v4 = +[MNNavigationService sharedService];
  uint64_t v5 = [(VLFTileObserver *)v2 initWithLocationManager:v3 navigationService:v4 purpose:3];

  id v6 = [[PedestrianARSessionTileAvailabilityMonitor alloc] initWithObserver:*(void *)(a1 + 32) tileObserver:v5];

  return v6;
}

void sub_100024088(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001085E0;
  block[3] = &unk_1012E80F0;
  uint64_t v4 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100024324(id a1)
{
  id v1 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.Maps" allowPlaceholder:0 error:0];
  uint64_t v2 = [v1 dataContainerURL];
  id v3 = (id)qword_101601248;
  qword_101601248 = v2;
}

void sub_10002439C(id a1)
{
  id v1 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.Maps" allowPlaceholder:0 error:0];
  uint64_t v2 = [v1 dataContainerURL];
  id v3 = (id)qword_101603088;
  qword_101603088 = v2;
}

void sub_100024414(id a1)
{
  id v1 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.Maps" allowPlaceholder:0 error:0];
  uint64_t v2 = [v1 dataContainerURL];
  id v3 = (id)qword_101605048;
  qword_101605048 = v2;
}

void sub_10002448C(id a1)
{
  id v3 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.Maps" allowPlaceholder:0 error:0];
  uint64_t v1 = [v3 dataContainerURL];
  uint64_t v2 = (void *)qword_10160ED20;
  qword_10160ED20 = v1;
}

void sub_1000244F8(id a1)
{
  id v3 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.Maps" allowPlaceholder:0 error:0];
  uint64_t v1 = [v3 dataContainerURL];
  uint64_t v2 = (void *)qword_10160F910;
  qword_10160F910 = v1;
}

void sub_100024564(id a1)
{
  id v3 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.Maps" allowPlaceholder:0 error:0];
  uint64_t v1 = [v3 dataContainerURL];
  uint64_t v2 = (void *)qword_10160FA48;
  qword_10160FA48 = v1;
}

void sub_1000245D0(id a1)
{
  id v3 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.Maps" allowPlaceholder:0 error:0];
  uint64_t v1 = [v3 dataContainerURL];
  uint64_t v2 = (void *)qword_1016103A8;
  qword_1016103A8 = v1;
}

void sub_10002463C(id a1)
{
  id v3 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.Maps" allowPlaceholder:0 error:0];
  uint64_t v1 = [v3 dataContainerURL];
  uint64_t v2 = (void *)qword_101610878;
  qword_101610878 = v1;
}

uint64_t sub_1000246A8()
{
  v0[3] = type metadata accessor for MainActor();
  v0[4] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[5] = v2;
  v0[6] = v1;
  return _swift_task_switch(sub_10003F214, v2, v1);
}

uint64_t sub_100024958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  int v10 = (void *)swift_allocObject();
  _DWORD v10[2] = 0;
  v10[3] = 0;
  void v10[4] = v3;
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  id v12 = v3;
  if (v11 == 1)
  {
    sub_1000FF2E0((uint64_t)v7, &qword_1015CD250);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = v10;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v18[2] = v13;
    v18[3] = v14;
  }
  swift_task_create();
  return swift_release();
}

void sub_100024B88()
{
  uint64_t v1 = *(void *)(v0 + 192);
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v2 = *(void **)(v0 + 160);
  id v3 = *(objc_class **)(v0 + 112);
  [*(id *)(v0 + 64) setMapFeatureLibraryGuidesSavedPlacesCount:];
  *(void *)(v0 + 208) = CollectionPlaceItemRequest.__allocating_init()();
  id v4 = objc_allocWithZone(v3);
  id v5 = v2;
  uint64_t v6 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  *(void *)(v0 + 216) = v6;
  uint64_t v8 = (void (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                    + async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v7;
  *id v7 = v0;
  v7[1] = sub_100014714;
  v8(v6);
}

void sub_100024EB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      id v4 = NSStringFromSelector(*(SEL *)(a1 + 48));
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "NavigationFeedbackCollector was deallocated in %@ before executing feedback collection block.", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_100025044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100025058(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v7)
    {
      uint64_t v9 = sub_1000493C0();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v7;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "[MapsOfflineUIHelper] refresh last update for paired date error: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 64), a2);
      [*(id *)(*(void *)(a1 + 32) + 8) lastUpdatedDateForPairedDeviceDidChange:*(void *)(*(void *)(a1 + 32) + 64)];
    }
  }
}

id sub_1000252CC(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 56) count];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_10002568C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100025750(uint64_t a1)
{
  uint64_t v2 = sub_100099700(*(void **)(*(void *)(a1 + 32) + 56), &stru_101322F10);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10002592C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 40) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t sub_100025A6C(char *a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = (os_unfair_lock_s **)&a1[OBJC_IVAR____TtC4Maps20MapsFavoritesManager__hasInitialData];
  swift_beginAccess();
  id v6 = *v5;
  id v7 = *v5 + 4;
  swift_retain();
  os_unfair_lock_lock(v6 + 5);
  sub_1000F3E3C(v7, &v13);
  os_unfair_lock_unlock(v6 + 5);
  LODWORD(v7) = v13;
  uint64_t result = swift_release();
  if (v7 == 1)
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
    int v10 = (void *)swift_allocObject();
    _DWORD v10[2] = 0;
    v10[3] = 0;
    void v10[4] = a1;
    id v11 = a1;
    sub_100042AF4((uint64_t)v4, (uint64_t)&unk_1015D5DC0, (uint64_t)v10);
    return swift_release();
  }
  return result;
}

id sub_1000266A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v5 = [v3 filename];
    id v6 = [WeakRetained[1] manifestSignedResourceName];
    id v7 = [v5 isEqualToString:v6];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_100026734(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[992])
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    id v3 = [*(id *)(a1 + 32) contexts];
    id v4 = [v3 lastObject];
  }
  else
  {
    int v5 = [v2 contexts];
    id v6 = [v5 reverseObjectEnumerator];
    id v4 = sub_1000990A8(v6, &stru_101323CE8);

    if ([*(id *)(a1 + 32) isInactive]) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    }
    else {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v4 != 0;
    }
  }
  if (objc_opt_respondsToSelector()) {
    uint64_t v7 = (uint64_t)[v4 wantsDefaultDimmingOverlayForStaleMapEffect];
  }
  else {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(void **)(*(void *)(a1 + 32) + 976);
  if (v8)
  {
    [v8 alpha];
    if (v9 > 0.0) {
      char v10 = v7;
    }
    else {
      char v10 = 0;
    }
  }
  else
  {
    char v10 = 0;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) || (v10 & 1) != 0) {
    goto LABEL_43;
  }
  [*(id *)(*(void *)(a1 + 32) + 976) removeFromSuperview];
  id v11 = [StaleMapEffectView alloc];
  uint64_t v12 = [*(id *)(a1 + 32) mapView];
  unsigned __int8 v13 = [(StaleMapEffectView *)v11 initWithMapView:v12 applyDimmingEffect:v7];
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void **)(v14 + 976);
  *(void *)(v14 + 976) = v13;

  [*(id *)(*(void *)(a1 + 32) + 976) setAlpha:0.0];
  uint64_t v16 = [*(id *)(a1 + 32) mapView];
  id v17 = [v16 superview];

  id v18 = sub_1000C49B4();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_INFO);
  if (!v17)
  {
    if (!v19)
    {
LABEL_38:

      long long v32 = [*(id *)(a1 + 32) view];
      [v32 insertSubview:*(void *)(*(void *)(a1 + 32) + 976) atIndex:0];
      goto LABEL_39;
    }
    id v26 = *(id *)(a1 + 32);
    if (!v26)
    {
      uint64_t v31 = @"<nil>";
      goto LABEL_37;
    }
    id v27 = (objc_class *)objc_opt_class();
    id v28 = NSStringFromClass(v27);
    if (objc_opt_respondsToSelector())
    {
      __int16 v29 = [v26 performSelector:"accessibilityIdentifier"];
      double v30 = v29;
      if (v29 && ![v29 isEqualToString:v28])
      {
        uint64_t v31 = +[NSString stringWithFormat:@"%@<%p, %@>", v28, v26, v30];

        goto LABEL_32;
      }
    }
    uint64_t v31 = +[NSString stringWithFormat:@"%@<%p>", v28, v26];
LABEL_32:

LABEL_37:
    *(_DWORD *)buf = 138543362;
    id v41 = v31;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "[%{public}@] Inserting stale map effective at the root of the view hierarchy", buf, 0xCu);

    goto LABEL_38;
  }
  if (v19)
  {
    id v20 = *(id *)(a1 + 32);
    if (!v20)
    {
      long long v25 = @"<nil>";
      goto LABEL_34;
    }
    id v21 = (objc_class *)objc_opt_class();
    long long v22 = NSStringFromClass(v21);
    if (objc_opt_respondsToSelector())
    {
      long long v23 = [v20 performSelector:"accessibilityIdentifier"];
      long long v24 = v23;
      if (v23 && ![v23 isEqualToString:v22])
      {
        long long v25 = +[NSString stringWithFormat:@"%@<%p, %@>", v22, v20, v24];

        goto LABEL_24;
      }
    }
    long long v25 = +[NSString stringWithFormat:@"%@<%p>", v22, v20];
LABEL_24:

LABEL_34:
    *(_DWORD *)buf = 138543362;
    id v41 = v25;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "[%{public}@] Inserting stale map effective above the map", buf, 0xCu);
  }
  long long v32 = [*(id *)(a1 + 32) view];
  uint64_t v33 = *(void **)(a1 + 32);
  uint64_t v34 = v33[122];
  long long v35 = [v33 mapView];
  [v32 insertSubview:v34 aboveSubview:v35];

LABEL_39:
  long long v36 = *(void **)(*(void *)(a1 + 32) + 984);
  if (v36)
  {
    [v36 removeFromSuperview];
    uint64_t v37 = *(void *)(a1 + 32);
    id v38 = *(void **)(v37 + 984);
    *(void *)(v37 + 984) = 0;
  }
  if ((v7 & 1) == 0)
  {
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_100D932C0;
    v39[3] = &unk_101323D10;
    v39[4] = *(void *)(a1 + 32);
    [v4 insertDimmingOverlayForStaleMapEffectWithBlock:v39];
  }
LABEL_43:
}

void sub_100026D80()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    type metadata accessor for MapsSyncStore();
    uint64_t v2 = (void *)static MapsSyncStore.sharedStore.getter();
    id v3 = v1;
    dispatch thunk of MapsSyncStore.subscribe(_:)();

    sub_10003A4B4();
  }
}

void sub_100026EA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100026F28()
{
  uint64_t v1 = *(void **)(v0 + 64);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 40);
    uint64_t v3 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
    id v4 = (void *)swift_allocObject();
    v4[2] = 0;
    v4[3] = 0;
    void v4[4] = v1;
    id v5 = v1;
    sub_100042AF4(v2, (uint64_t)&unk_1015DAAF0, (uint64_t)v4);
    swift_release();
  }
  swift_task_dealloc();
  id v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_1000271DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v8 = WeakRetained;
    if (WeakRetained)
    {
      double v9 = *((void *)WeakRetained + 5);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      _DWORD v10[2] = sub_10000F6F0;
      v10[3] = &unk_1012E5D58;
      void v10[4] = WeakRetained;
      id v11 = v5;
      dispatch_async(v9, v10);
    }
  }
  else
  {
    uint64_t v8 = sub_10010A0F0();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "failed to fetch garage with error: %@", buf, 0xCu);
    }
  }
}

uint64_t sub_1000274B4()
{
  sub_1000A2678();
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016115E0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Finished populating initial data", v4, 2u);
    swift_slowDealloc();
  }

  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

void sub_1000276B0(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  double v9 = sub_1000C49B4();
  char v10 = v9;
  os_signpost_id_t v11 = *(void *)(a1 + 40);
  if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    *(_WORD *)id v13 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v11, "\"CoordinatedContextChange\"", "", v13, 2u);
  }

  uint64_t v12 = *(void *)(a1 + 32);
  if (v12) {
    (*(void (**)(uint64_t, id, id, uint64_t))(v12 + 16))(v12, v7, v8, a4);
  }
}

void sub_100027858(id a1)
{
  if (MGGetBoolAnswer())
  {
    if (MGGetSInt32Answer() == 1)
    {
      if (MGGetBoolAnswer())
      {
        if (+[ARGeoTrackingConfiguration isSupportedWithOptions:4])
        {
          uint64_t v1 = sub_100109D00();
          if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v4 = 0;
            uint64_t v2 = "VLF is supported on the current device";
            os_log_type_t v3 = (uint8_t *)&v4;
LABEL_15:
            _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, v2, v3, 2u);
          }
        }
        else
        {
          byte_10160EED0 = 1;
          uint64_t v1 = sub_100109D00();
          if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            uint64_t v2 = "VLF is not supported because the current device does not support geo tracking";
            os_log_type_t v3 = buf;
            goto LABEL_15;
          }
        }
      }
      else
      {
        byte_10160EED0 = 1;
        uint64_t v1 = sub_100109D00();
        if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v6 = 0;
          uint64_t v2 = "VLF is not supported because the current device does not support the DeviceSupportsMapsOpticalHeading gestalt key";
          os_log_type_t v3 = (uint8_t *)&v6;
          goto LABEL_15;
        }
      }
    }
    else
    {
      byte_10160EED0 = 1;
      uint64_t v1 = sub_100109D00();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v7 = 0;
        uint64_t v2 = "VLF is not supported because the current device is not an iPhone";
        os_log_type_t v3 = (uint8_t *)&v7;
        goto LABEL_15;
      }
    }
  }
  else
  {
    byte_10160EED0 = 1;
    uint64_t v1 = sub_100109D00();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v8 = 0;
      uint64_t v2 = "VLF is not supported because the current device does not support ARKit";
      os_log_type_t v3 = (uint8_t *)&v8;
      goto LABEL_15;
    }
  }
}

void sub_100027BA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = [v3 count];
    __int16 v6 = sub_1000493C0();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_INFO);
    if (v5)
    {
      if (v7)
      {
        *(_WORD *)__int16 v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Called back in OfflineMapsFeatureDiscoverySource with suggestions, showing the first one.", v8, 2u);
      }

      __int16 v6 = [v3 objectAtIndexedSubscript:0];
      [WeakRetained _showTipFromModelData:v6];
    }
    else if (v7)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Called back in OfflineMapsFeatureDiscoverySource with 0 suggestions, showing nothing", buf, 2u);
    }
  }
}

void sub_100027E64(id a1)
{
  if (objc_opt_class() && objc_opt_class())
  {
    id v3 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v1 = +[CNContactContentViewController descriptorForRequiredKeys];
    [v3 addObject:v1];

    uint64_t v2 = +[CNMonogrammer descriptorForRequiredKeysIncludingImage:1];
    [v3 addObject:v2];

    +[MSPSharedTripContact setAdditionalKeyDescriptorsForContactFetching:v3];
  }
}

void sub_100027FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100028020(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100047F64;
  block[3] = &unk_1012E96B8;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  id v6 = v3;
  id v7 = *(id *)(a1 + 32);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v8);
}

PedestrianARSessionArrivalStepAvailabilityMonitor *sub_100028864(uint64_t a1)
{
  uint64_t v2 = [PedestrianARSessionArrivalStepAvailabilityMonitor alloc];
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 platformController];
  id v5 = +[MNNavigationService sharedService];
  id v6 = +[MKLocationManager sharedLocationManager];
  id v7 = [(PedestrianARSessionArrivalStepAvailabilityMonitor *)v2 initWithObserver:v3 platformController:v4 navigationService:v5 locationManager:v6];

  return v7;
}

void sub_100028A2C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = [v3 copy];
  id v5 = (void *)WeakRetained[5];
  WeakRetained[5] = v4;

  id v6 = [WeakRetained observers];
  [v6 curatedCollectionSyncManagerDidUpdateSyncedCollections:WeakRetained];

  [WeakRetained _updateContent];
  id v7 = [v3 count];

  id v8 = +[GEOAPSharedStateData sharedData];
  [v8 setMapFeatureSavedCollectionsCount:v7];
}

void sub_100028CBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

PedestrianARSessionRouteDistanceMonitor *sub_100028CE0(uint64_t a1)
{
  uint64_t v2 = [PedestrianARSessionRouteDistanceMonitor alloc];
  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 platformController];
  id v5 = +[MNNavigationService sharedService];
  id v6 = +[MKLocationManager sharedLocationManager];
  id v7 = [(PedestrianARSessionRouteDistanceMonitor *)v2 initWithObserver:v3 platformController:v4 navigationService:v5 locationManager:v6];

  return v7;
}

uint64_t sub_100028D98()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CD300);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = &qword_1015CD310;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_1015CD308;
  }

  return sub_1000FF33C(v2);
}

void sub_100029318(id a1)
{
  uint64_t v1 = +[UIDevice currentDevice];
  id v2 = [v1 userInterfaceIdiom];

  if (v2 == (id)5) {
    char BOOL = GEOConfigGetBOOL();
  }
  else {
    char BOOL = 1;
  }
  byte_10160F798 = BOOL;
  id v4 = sub_1000C49B4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = +[NSNumber numberWithBool:byte_10160F798];
    int v6 = 138412290;
    id v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "UIKitCardsAreAvailable: %@", (uint8_t *)&v6, 0xCu);
  }
}

uint64_t sub_10002941C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000294F8(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  if (v2 == atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)(a1 + 32) + 72), 0, memory_order_relaxed))
  {
    id v3 = [*(id *)(a1 + 40) copy];
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 80);
    *(void *)(v4 + 80) = v3;

    int v6 = *(void **)(a1 + 48);
    id v7 = (id *)(*(void *)(a1 + 32) + 64);
    objc_storeStrong(v7, v6);
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
  }
}

uint64_t sub_100029634(uint64_t a1, int *a2)
{
  int v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10002AF98;
  return v6(a1);
}

void sub_100029940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029AD0(id a1)
{
  if (qword_10160F7A0 != -1) {
    dispatch_once(&qword_10160F7A0, &stru_1012F75D8);
  }
  if (byte_10160F798) {
    char BOOL = GEOConfigGetBOOL();
  }
  else {
    char BOOL = 0;
  }
  byte_10160F799 = BOOL;
  uint64_t v2 = sub_1000C49B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = +[NSNumber numberWithBool:byte_10160F799];
    int v4 = 138412290;
    id v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "ShouldOptimizeSheetPresentationAnimations: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100029E58(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

uint64_t sub_10002A018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = a4;
  swift_unknownObjectWeakInit();
  if (!a5) {
    goto LABEL_8;
  }
  uint64_t v19 = sub_1000FF33C(&qword_1015D64D0);
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  sub_1000FF380(&v17, v19);
  uint64_t DynamicType = swift_getDynamicType();
  swift_unknownObjectRetain_n();
  sub_1000FF22C((uint64_t)&v17);
  if (swift_isClassType()) {
    uint64_t v15 = DynamicType;
  }
  else {
    uint64_t v15 = 0;
  }
  if (!v15)
  {
    swift_unknownObjectRelease();
LABEL_8:
    swift_unknownObjectWeakAssign();
    goto LABEL_9;
  }
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
LABEL_9:
  sub_100101750((uint64_t)v20, a9 + 24, (uint64_t *)&unk_1015D4350);
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(a9 + 32) = a7;
  *(void *)(a9 + 40) = a8;
  return result;
}

void sub_10002A4DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002A5CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *sub_10002ACE0()
{
  id v1 = sub_10008BAA4();
  id v2 = [v1 features];

  sub_100100830(0, &qword_1015D4110);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v4 = v0;
  id v5 = sub_100010F88(v3);
  swift_bridgeObjectRelease();

  return v5;
}

void sub_10002AEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10002AF98()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_10002B240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002B264(uint64_t a1)
{
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v2 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v3 = [v2 countByEnumeratingWithState:&v19 objects:v27 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v20;
    uint64_t v18 = *(void *)v20;
    do
    {
      int v6 = 0;
      do
      {
        if (*(void *)v20 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v19 + 1) + 8 * (void)v6);
        id v8 = sub_1000961C8();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
        {
          id v9 = v7;
          if (v9)
          {
            char v10 = (objc_class *)objc_opt_class();
            os_signpost_id_t v11 = NSStringFromClass(v10);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_12;
            }
            id v12 = v2;
            id v13 = [v9 performSelector:"accessibilityIdentifier"];
            uint64_t v14 = v13;
            if (v13 && ![v13 isEqualToString:v11])
            {
              uint64_t v15 = +[NSString stringWithFormat:@"%@<%p, %@>", v11, v9, v14];

              id v2 = v12;
              uint64_t v5 = v18;
            }
            else
            {

              id v2 = v12;
              uint64_t v5 = v18;
LABEL_12:
              uint64_t v15 = +[NSString stringWithFormat:@"%@<%p>", v11, v9];
            }
          }
          else
          {
            uint64_t v15 = @"<nil>";
          }

          uint64_t v16 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543618;
          long long v24 = v15;
          __int16 v25 = 2114;
          uint64_t v26 = v16;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "NOTIFYING %{public}@ DID REMOVE %{public}@", buf, 0x16u);
        }
        [v7 decrementForToken:*(void *)(a1 + 32)];
        int v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v17 = [v2 countByEnumeratingWithState:&v19 objects:v27 count:16];
      id v4 = v17;
    }
    while (v17);
  }
}

void sub_10002B5EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 copy];

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    id v7[2] = sub_100010F38;
    v7[3] = &unk_1012E6690;
    objc_copyWeak(&v9, (id *)(a1 + 32));
    id v8 = v5;
    id v6 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);

    objc_destroyWeak(&v9);
  }
}

id sub_10002B6B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource____lazy_storage___updateQueue;
  id v9 = *(void **)(v0 + OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource____lazy_storage___updateQueue);
  if (v9)
  {
    id v10 = *(id *)(v0 + OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource____lazy_storage___updateQueue);
  }
  else
  {
    sub_100100830(0, (unint64_t *)&qword_1015CE570);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v4);
    static DispatchQoS.unspecified.getter();
    v15[1] = _swiftEmptyArrayStorage;
    sub_10007FF04((unint64_t *)&unk_1015D5E90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_1000FF33C((uint64_t *)&unk_1015D52D0);
    sub_10010113C((unint64_t *)&unk_1015D5EA0, (uint64_t *)&unk_1015D52D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    os_signpost_id_t v11 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    id v12 = *(void **)(v0 + v8);
    *(void *)(v1 + v8) = v11;
    id v10 = v11;

    id v9 = 0;
  }
  id v13 = v9;
  return v10;
}

void sub_10002BBF8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10002BECC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v6 = [v3 copy];
    uint64_t v7 = (void *)WeakRetained[4];
    WeakRetained[4] = v6;

    uint64_t v8 = *(NSObject **)(*(void *)(a1 + 32) + 40);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100107FC8;
    block[3] = &unk_1012E6708;
    objc_copyWeak(&v10, v4);
    dispatch_async(v8, block);
    objc_destroyWeak(&v10);
  }
}

void sub_10002C148(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v5 = sub_1000493C0();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "firstUpcomingTrip called back", v6, 2u);
  }

  if (v4) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_10002C3A0()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002C3E0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10002C49C(uint64_t a1, unint64_t a2)
{
  if (a2 > 0x18)
  {
    uint64_t v7 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
    {
      int v11 = 136446978;
      id v12 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Suggestions/MapsSuggestionsEngineForMapsProcess.m";
      __int16 v13 = 1024;
      int v14 = 75;
      __int16 v15 = 2082;
      uint64_t v16 = "MapsSuggestionsEngineBuilder *_setPinnedPlaceTitleFormatters(MapsSuggestionsEngineBuilder *__strong)_block_invoke";
      __int16 v17 = 2082;
      uint64_t v18 = "YES";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "At %{public}s:%d, %{public}s forbids: %{public}s. Detected an unsupported MapsSuggestionsEntryType!", (uint8_t *)&v11, 0x26u);
    }

    return 0;
  }
  else
  {
    if (((1 << a2) & 0x1F3FFF9) == 0)
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      if (((1 << a2) & 0x80006) != 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = 18;
      }
      uint64_t v8 = [v5 withTitleFormatter:v4 forType:v6];
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
      id v10 = *(void **)(v9 + 40);
      *(void *)(v9 + 40) = v8;
    }
    return 1;
  }
}

void sub_10002C618(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5DB0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10010EAA4;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100033BC0;
  aBlock[3] = &unk_1012DE510;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  id v10 = [a2 singleLocationUpdateWithHandler:v9];
  _Block_release(v9);
  if (v10)
  {
    [v10 start];
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_10002CBA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_10002CCA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t type metadata accessor for HomeListSectionController()
{
  return self;
}

void sub_10002CCF0(uint64_t a1)
{
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v2 = [*(id *)(a1 + 32) _currentContainerViewControllerWithContext:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100077850;
  v4[3] = &unk_101323CA8;
  objc_copyWeak(&v5, &location);
  [v2 registerResizingObserver:v3 withBlock:v4];

  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_10002CDB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10002D09C(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  v4[2] = a2;
  v4[3] = a4;
  void v4[4] = _Block_copy(aBlock);
  id v8 = a2;
  id v9 = a4;
  id v10 = (void *)swift_task_alloc();
  void v4[5] = v10;
  *id v10 = v4;
  v10[1] = sub_100033574;
  v10[6] = a2;
  v10[7] = v9;
  void v10[5] = a1;
  return _swift_task_switch(sub_100073EA0, 0, 0);
}

void sub_10002D330(uint64_t a1)
{
  uint64_t v2 = sub_100011FD4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User is not logged in, assigning loggedOutIcon as profile picture", v5, 2u);
  }

  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = [*(id *)(a1 + 32) loggedOutIcon];
  (*(void (**)(uint64_t, void *, void))(v3 + 16))(v3, v4, 0);
}

void sub_10002DDB4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v4 = [v2 previousTopContext];
  uint64_t v3 = [v2 _currentContainerViewControllerWithContext:v4];
  [v3 registerResizingObserver:*(void *)(a1 + 32) withBlock:0];
}

void sub_10002E318(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10002E744(uint64_t a1)
{
  [*(id *)(a1 + 32) setMapViewMapType:*(unsigned int *)(a1 + 80)];
  [*(id *)(a1 + 32) setMapViewMapRegion:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) setMapViewZoomLevel:*(double *)(a1 + 56)];
  [*(id *)(a1 + 32) setMapViewStyleZoomLevel:*(double *)(a1 + 64)];
  if (*(unsigned char *)(a1 + 84)) {
    [*(id *)(a1 + 32) setMapViewLocationPuckInViewport:*(unsigned __int8 *)(a1 + 85)];
  }
  [*(id *)(a1 + 32) setMapViewPitch:*(double *)(a1 + 72)];
  uint64_t v2 = [*(id *)(a1 + 48) _mapLayer];
  [*(id *)(a1 + 32) setMapViewIsAdvancedMap:[v2 isShowingCuratedElevatedGround]];

  id v3 = [*(id *)(a1 + 48) _mapLayer];
  [*(id *)(a1 + 32) setMapViewIsGlobeProjection:[v3 enableGlobe]];
}

void sub_10002EF5C(uint64_t a1)
{
  id v5 = +[NSMutableSet setWithArray:*(void *)(*(void *)(a1 + 32) + 40)];
  [v5 intersectSet:*(void *)(a1 + 40)];
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  id v3 = [v5 allObjects];
  [v2 setObject:v3 forKey:@"RecentsNoResultCacheIdsKey"];

  id v4 = +[NSUserDefaults standardUserDefaults];
  [v4 synchronize];
}

void sub_10002F174(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F85C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) cardsOverlay];
  [v2 setContaineesHidden:1];

  id v3 = [*(id *)(a1 + 32) cardsOverlay];
  [v3 setChromeContext:0];

  id v4 = [*(id *)(a1 + 32) cardsOverlay];
  [v4 reset];
}

void sub_10002F988(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _continueUpdateTrafficWithInitialTrafficFeatures:*(void *)(a1 + 32) sharedTrafficFeatures:v6 routes:*(void *)(a1 + 40) includeAlternateRoutes:*(unsigned __int8 *)(a1 + 56)];
  }
}

uint64_t sub_1000300B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000300D4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000300D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource__allItems);
  if (v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t)sub_10034EC2C(v6);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a2 = v4;
  return result;
}

void sub_100030144(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 40) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100030198(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000304E0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
  if (v1)
  {
    id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers);
    id v3 = v1;
    id v4 = [v2 allObservers];
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v7 = v5 + 32;
      do
      {
        sub_1000F2354(v7, (uint64_t)v9);
        sub_1000FF33C(&qword_1015DAAC8);
        if (swift_dynamicCast())
        {
          [v8 libraryItemsCountManager:v0 didUpdateCounts:v3];
          swift_unknownObjectRelease();
        }
        v7 += 32;
        --v6;
      }
      while (v6);
    }

    swift_bridgeObjectRelease();
  }
}

void sub_100030608(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (id *)(a1 + 32);
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      int v11 = sub_10000A540();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v16 = v6;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to get unpaired apps from garage with error: %@", buf, 0xCu);
      }
    }
    else
    {
      id v10 = WeakRetained[1];
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_10010858C;
      v12[3] = &unk_1012E6690;
      objc_copyWeak(&v14, v7);
      id v13 = v5;
      dispatch_async(v10, v12);

      objc_destroyWeak(&v14);
    }
  }
}

void *initializeWithTake for HomeListCuratedCollectionsCellModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeInit();
  return a1;
}

id FavoriteCollectionHandler.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_queryContents] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage] = 1;
  *(void *)&v0[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_storeSubscriptionTypes;
  sub_100028D98();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5CF70;
  *(void *)(v2 + 32) = type metadata accessor for CollectionPlaceItem();
  *(void *)&v0[v1] = v2;
  v8.unint64_t receiver = v0;
  v8.Class super_class = (Class)type metadata accessor for FavoriteCollectionHandler();
  [super init];
  type metadata accessor for MapsSyncStore();
  id v4 = v3;
  id v5 = (void *)static MapsSyncStore.sharedStore.getter();
  id v6 = v4;
  dispatch thunk of MapsSyncStore.subscribe(_:)();

  _s4Maps25FavoriteCollectionHandlerC14storeDidChange5typesySaySSG_tF_0();
  return v6;
}

void sub_100030BB8(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateInnerLayoutGuideWithTopViewController:*(void *)(a1 + 40)];
  if (sub_1000BBB44(*(void **)(a1 + 32)) == 5) {
    [*(id *)(a1 + 32) setNeedsUpdateComponent:@"weatherOverlay" animated:1];
  }
  [*(id *)(a1 + 32) updateMapViewFrameRate];
  if (objc_opt_respondsToSelector()) {
    [*(id *)(a1 + 48) viewReady];
  }
  char v2 = objc_opt_respondsToSelector();
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    id v4 = [*(id *)(a1 + 48) mapViewResponder];
    [v3 _updateMapViewResponderTargetForObject:v4];
  }
  else
  {
    [*(id *)(a1 + 32) _updateMapViewResponderTargetForObject:*(void *)(a1 + 40)];
  }
  [*(id *)(a1 + 32) updateThemeViewAndControllers];
  [*(id *)(a1 + 32) setNeedsUserActivityUpdate];
  [*(id *)(a1 + 32) setNeedsUpdateOfSupportedInterfaceOrientations];
  id v5 = [*(id *)(a1 + 32) _maps_mapsSceneDelegate];
  id v6 = [v5 appCoordinator];

  [v6 displayAnyEnqueuedFixedProblemNotification];
}

void sub_100030F80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100030FA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
    {
      [WeakRetained _downloadCompleteWithNewDirectory:0];
      goto LABEL_17;
    }
    id v4 = *(void **)(*(void *)(a1 + 32) + 8);
    id v5 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) version];
    id v6 = [v4 directoryForNewWebBundleName:v5];

    uint64_t v7 = *(void **)(a1 + 32);
    objc_super v8 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) files];
    id v23 = 0;
    unsigned int v9 = [v7 _fileHashesInFiles:v8 areEqualToFilesInDirectory:v6 error:&v23];
    id v10 = v23;

    if (v9)
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
      {
        [v3 _downloadCompleteWithNewDirectory:0 withError:v10];
LABEL_16:

        goto LABEL_17;
      }
      long long v19 = *(void **)(a1 + 32);
      uint64_t v20 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      id v22 = 0;
      [v19 _saveWebBundleManifestToDevice:v20 error:&v22];
      id v14 = v22;
      id v16 = v3;
      __int16 v17 = v6;
      id v18 = v14;
    }
    else
    {
      int v11 = sub_1000B8184();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = [v6 absoluteURL];
        *(_DWORD *)buf = 138412290;
        id v25 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Hashes didn't match, removing files in directory: %@", buf, 0xCu);
      }
      id v13 = +[NSFileManager defaultManager];
      id v21 = 0;
      [v13 removeItemAtURL:v6 error:&v21];
      id v14 = v21;

      if (v14)
      {
        __int16 v15 = sub_1000B8184();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)buf = 138412290;
          id v25 = v14;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Fail to remove files, error: %@", buf, 0xCu);
        }
      }
      id v16 = v3;
      __int16 v17 = 0;
      id v18 = v10;
    }
    [v16 _downloadCompleteWithNewDirectory:v17 withError:v18];

    goto LABEL_16;
  }
LABEL_17:
}

void sub_1000313D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000318F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_super v8 = sub_1000519B4();
    unsigned int v9 = v8;
    if (!v5 || v6)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "[SearchVirtualGarageManager] error getting garage: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        LOWORD(v10) = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "[SearchVirtualGarageManager] got garage", (uint8_t *)&v10, 2u);
      }

      [WeakRetained setVirtualGarage:v5];
    }
  }
}

void sub_100031DDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = sub_100068A0C();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
  if (WeakRetained)
  {
    if (v5)
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "XPC connection invalidated; clearing connection ivar: %@",
        (uint8_t *)&v6,
        0xCu);
    }

    id v4 = WeakRetained[2];
    WeakRetained[2] = 0;
  }
  else if (v5)
  {
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "XPC connection invalidated; NanoCompanionController is gone: %@",
      (uint8_t *)&v6,
      0xCu);
  }
}

void sub_100032158(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 firstObject];
  if (!v7)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100013088;
    block[3] = &unk_1012E9950;
    id v27 = v42;
    objc_copyWeak(v42, a1 + 6);
    id v41 = a1[5];
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    id v28 = v41;
    goto LABEL_9;
  }
  if ([a1[4] isAuthorizedForPreciseLocation])
  {
    objc_super v8 = [v7 location];
    [v8 latitude];
    double v10 = v9;
    id v11 = [v7 location];
    [v11 longitude];
    if (+[GEOLocationShifter isLocationShiftRequiredForCoordinate:](GEOLocationShifter, "isLocationShiftRequiredForCoordinate:", v10, v12))
    {
      id v13 = [v7 location];
      unsigned int v14 = [v13 referenceFrame];

      if (v14 != 2)
      {
        id v15 = objc_alloc_init((Class)GEOLocationShifter);
        id v16 = objc_alloc((Class)GEOLatLng);
        __int16 v17 = [v7 location];
        [v17 latitude];
        double v19 = v18;
        uint64_t v20 = [v7 location];
        [v20 longitude];
        id v22 = [v16 initWithLatitude:v19 longitude:v21];

        [v22 setGtLog:1];
        id v23 = [v7 location];
        [v23 horizontalUncertainty];
        double v25 = v24;
        v36[0] = _NSConcreteStackBlock;
        v36[1] = 3221225472;
        v36[2] = sub_100CE9F58;
        v36[3] = &unk_1013216E0;
        objc_copyWeak(&v39, a1 + 6);
        id v37 = v7;
        id v38 = a1[5];
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472;
        v33[2] = sub_100CE9FD4;
        v33[3] = &unk_1012E9690;
        objc_copyWeak(&v35, a1 + 6);
        id v34 = a1[5];
        id v26 = &_dispatch_main_q;
        [v15 shiftLatLng:v22 accuracy:v36 withCompletionHandler:0 mustGoToNetworkCallback:v33 errorHandler:&_dispatch_main_q callbackQueue:v25];

        objc_destroyWeak(&v35);
        objc_destroyWeak(&v39);

        goto LABEL_10;
      }
    }
    else
    {
    }
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_100CEA048;
    v29[3] = &unk_1012E96B8;
    id v27 = &v32;
    objc_copyWeak(&v32, a1 + 6);
    id v30 = v7;
    id v31 = a1[5];
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v29);

    id v28 = v30;
LABEL_9:

    objc_destroyWeak(v27);
  }
LABEL_10:
}

void sub_100032528(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100032608()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100032698(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003FD7EC;
  block[3] = &unk_1012E9258;
  id v9 = a3;
  id v6 = v9;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v10 = v5;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v11);
}

void sub_100032778(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = [WeakRetained cachedCuratedCollections];
  unsigned __int8 v8 = [v7 isEqualToArray:v10];

  if ((v8 & 1) == 0)
  {
    [WeakRetained setCachedCuratedCollections:v10];
    id v9 = [WeakRetained observers];
    [v9 curatedCollectionSyncManagerDidUpdateCachedCollections:WeakRetained];
  }
  if ([v5 count]) {
    [WeakRetained _cacheSyncedCollections:v5];
  }
}

uint64_t sub_100032844()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (char *)v0[4];
  swift_release();
  *(void *)&v2[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_queryContents] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v3 = swift_bridgeObjectRetain();
  sub_10010A1AC(v3);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 rebuildContent:isa];

  swift_bridgeObjectRelease();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_1000331BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000333B8(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = sub_100011FD4();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Assigning profile picture to userIcon and notifying observers", v7, 2u);
    }

    objc_storeStrong(WeakRetained + 8, a2);
    [WeakRetained _updateAndNotifyObservers:1];
  }
}

id sub_100033468(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_observers;
  id v5 = objc_allocWithZone((Class)GEOObserverHashTable);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 initWithProtocol:&OBJC_PROTOCOL___HomeDataProvidingObserver queue:0];
  v6[OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_hasInitialData] = 1;
  v6[OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_active] = 0;
  *(void *)&v6[OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_countsManager] = a1;
  uint64_t v7 = a1;

  v12.unint64_t receiver = v6;
  v12.Class super_class = ObjectType;
  [super init];
  id v9 = *(void **)&v7[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers];
  id v10 = v8;
  [v9 registerObserver:v10];

  return v10;
}

uint64_t sub_100033574()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 32);
  uint64_t v2 = *(void **)(*v0 + 24);
  unint64_t v3 = *(void **)(*v0 + 16);
  uint64_t v6 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1000336CC(uint64_t a1)
{
  return _swift_continuation_resume(*(void *)(a1 + 32));
}

void sub_10003384C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)a1;
  uint64_t v4 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  if (*(void *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers))
  {
    id v5 = *(void **)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  }
  else
  {
    id v5 = sub_1000F0E20();
    *(void *)(a2 + v4) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(a2 + v4))
    {
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_1000716FC(v6);
    }
    else
    {
      *(void *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      unint64_t v7 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
      id v8 = (unint64_t *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess();
      unint64_t *v8 = v7;
    }
    a1 = swift_bridgeObjectRelease();
  }
  __chkstk_darwin(a1);
  id v27 = v3;
  id v28 = &off_1012E2888;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000FAE74((uint64_t (*)(long long *))sub_1000FAF38, (uint64_t)v26, (uint64_t)v5);
  char v11 = v10;
  swift_bridgeObjectRelease();
  if (v11) {
    return;
  }
  if (!*(void *)(a2 + v4))
  {
    objc_super v12 = sub_1000F0E20();
    *(void *)(a2 + v4) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(a2 + v4))
    {
      uint64_t v23 = swift_bridgeObjectRetain();
      sub_1000716FC(v23);
    }
    else
    {
      *(void *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      unint64_t v24 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
      double v25 = (unint64_t *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess();
      *double v25 = v24;
    }
    swift_bridgeObjectRelease();
    if ((v9 & 0x8000000000000000) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  objc_super v12 = *(void **)(a2 + v4);
  if (v9 < 0) {
    goto LABEL_25;
  }
LABEL_10:
  if (v12[2] < (unint64_t)v9)
  {
LABEL_27:
    __break(1u);
    return;
  }
  char v13 = 1;
  v31[0] = v12;
  v31[1] = v12 + 4;
  v31[2] = 0;
  v31[3] = (2 * v9) | 1;
  uint64_t v14 = swift_bridgeObjectRetain();
  if (v9)
  {
    __int16 v29 = v12;
    uint64_t v30 = 0;
    uint64_t v15 = v9 - 1;
    id v16 = (id *)&v12[2 * v9 + 2];
    while (v15 < v9)
    {
      __int16 v17 = *(uint64_t (**)(id, uint64_t))((swift_isaMask & *(void *)*v16) + 0xF0);
      id v18 = *v16;
      uint64_t v20 = (void *)v17(v18, v19);
      uint64_t v22 = *(void *)(v21 + 16);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      char v13 = v22 == 0;
      if (v22) {
        goto LABEL_22;
      }
      --v15;
      v16 -= 2;
      if (v15 == -1)
      {
        uint64_t v15 = 0;
        goto LABEL_22;
      }
    }
    goto LABEL_26;
  }
  uint64_t v15 = 0;
LABEL_22:
  __chkstk_darwin(v14);
  id v27 = v31;
  sub_1000FCCE8((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1000FCD48, (uint64_t)v26, v15, v13);
  swift_bridgeObjectRelease();
}

void sub_100033BC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100033C4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 32);
    unint64_t v3 = +[NSArray arrayWithObjects:&v4 count:1];
  }
  else
  {
    unint64_t v3 = &__NSArray0__struct;
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v3);
  if (v2) {
}
  }

void sub_100033D04(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100011624;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v13, (id *)(a1 + 40));
  id v11 = v6;
  id v12 = v5;
  id v8 = v5;
  id v9 = v6;
  dispatch_async(v7, block);

  objc_destroyWeak(&v13);
}

uint64_t sub_100033EC0(uint64_t a1)
{
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_observers), "allObjects"));
  sub_1000FF33C((uint64_t *)&unk_1015CE260);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_airQualityConditions;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v8 = *(void **)(v3 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      ++v6;
      [v8 airQualityConditionsDataProviderDidChangeAirQualityConditions:*(void *)(a1 + v7)];
      swift_unknownObjectRelease();
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void *initializeWithCopy for HomeListFooterCellModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyInit();
  return a1;
}

uint64_t sub_100034478(uint64_t result)
{
  if (*(unsigned char *)(result + OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_active) == 1)
  {
    uint64_t v1 = result;
    id v2 = [*(id *)(result + OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_observers) allObservers];
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v5 = v3 + 32;
      do
      {
        sub_1000F2354(v5, (uint64_t)v7);
        sub_1000FF33C(&qword_1015D3518);
        if (swift_dynamicCast())
        {
          if ([v6 respondsToSelector:"homeDataProvidingObjectDidUpdate:"]) {
            [v6 homeDataProvidingObjectDidUpdate:v1];
          }
          swift_unknownObjectRelease();
        }
        v5 += 32;
        --v4;
      }
      while (v4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100034854(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100034978(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

PedestrianARSessionSunsetSunriseMonitor *sub_100034994(uint64_t a1)
{
  uint64_t v2 = [PedestrianARSessionSunsetSunriseMonitor alloc];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = +[MKLocationManager sharedLocationManager];
  uint64_t v5 = +[SunsetSunriseCalculator sharedCalculator];
  id v6 = [*(id *)(a1 + 32) platformController];
  uint64_t v7 = [(PedestrianARSessionSunsetSunriseMonitor *)v2 initWithObserver:v3 locationManager:v4 sunsetSunriseCalculator:v5 platformController:v6 transportTypeSupportProvider:objc_opt_class()];

  return v7;
}

double sub_100034B7C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 64);
  if (v3)
  {
    id v4 = v3;
    id v5 = [v4 homeResult];
    if (v5)
    {
      id v6 = v5;
      unsigned __int8 v7 = [v5 isCuratedCollectionSectionValid];

      if (v7)
      {
        id v8 = v4;
        id v9 = sub_1000357AC();
        id v13 = v8;
        swift_unknownObjectWeakInit();
        swift_unknownObjectWeakAssign();
        sub_100101750((uint64_t)v12, (uint64_t)&v14, &qword_1015DB0E8);
        *(void *)(a1 + 32) = &type metadata for HomeListCuratedCollectionsCellModel;
        *(void *)(a1 + 40) = sub_10010BBA4();
        uint64_t v10 = swift_allocObject();
        *(void *)(a1 + 8) = v10;
        sub_10010BAC4((uint64_t)&v13, v10 + 16);
        *(void *)a1 = v9;
        return result;
      }
    }
    else
    {
    }
  }
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_100034CA4()
{
  type metadata accessor for MapsSyncQueryPredicate();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5CF70;
  *(void *)(v1 + 56) = &type metadata for Int16;
  *(void *)(v1 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v1 + 32) = 6;
  static MapsSyncQueryPredicate.withFormat(_:_:)();
  swift_bridgeObjectRelease();
  id v2 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  uint64_t v3 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v0[13] = v3;
  type metadata accessor for CollectionPlaceItemRequest();
  v0[14] = CollectionPlaceItemRequest.__allocating_init()();
  unsigned __int8 v7 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                      + async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:));
  id v4 = v3;
  id v5 = (void *)swift_task_alloc();
  v0[15] = v5;
  *id v5 = v0;
  v5[1] = sub_10000AB60;
  return v7(v3);
}

void sub_1000353D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v4)
    {
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
    else
    {
      id v6 = +[GEOResourceManager sharedManager];
      unsigned __int8 v7 = [WeakRetained[1] manifestSignedResourceName];
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_100107ECC;
      _OWORD v8[3] = &unk_101321B68;
      id v9 = *(id *)(a1 + 32);
      [v6 dataForSignedResourceWithName:v7 fallbackBundle:0 fallbackNameHandler:0 resultHandler:v8];
    }
  }
}

id sub_1000357AC()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath);
  }
  else
  {
    id v4 = sub_1000FB03C();
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 identifierPathByAppendingIdentifier:v5];

    unsigned __int8 v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_100035944(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100035968(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = objc_alloc((Class)_TtC8MapsSync20MapsSyncQueryOptions);
    NSString v5 = +[MSCollectionPlaceItem excludeShadowItemsPredicate];
    id v6 = [v4 initWithPredicate:v5 sortDescriptors:0 range:0];

    id v7 = objc_alloc_init((Class)MSCollectionPlaceItemRequest);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10002BECC;
    _OWORD v8[3] = &unk_1012E7418;
    objc_copyWeak(&v9, v2);
    void v8[4] = *(void *)(a1 + 32);
    [v7 fetchWithOptions:v6 completionHandler:v8];

    objc_destroyWeak(&v9);
  }
}

void sub_100035A84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100035D08(uint64_t a1)
{
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_observers), "allObjects"));
  sub_1000FF33C((uint64_t *)&unk_1015D76C0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v8 = *(void **)(v3 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      ++v6;
      [v8 weatherConditionsDataProviderDidChangeWeatherConditions:*(void *)(a1 + v7)];
      swift_unknownObjectRelease();
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_100035E40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      uint64_t v10 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v14 = v6;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to get virtualGarage with error: %@.", buf, 0xCu);
      }
    }
    else
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_100009C24;
      _OWORD v11[3] = &unk_101318718;
      id v8 = v5;
      id v12 = v8;
      [WeakRetained _runAsyncBlockOnLocalQueue:v11];
      id v9 = [v8 vehicles];
      [WeakRetained _captureVirtualGarageAnalytics:v9];

      uint64_t v10 = v12;
    }
  }
}

uint64_t sub_100036370()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_1000363B0()
{
  id result = [self sharedData];
  v0[8] = result;
  if (result)
  {
    uint64_t v2 = v0[7];
    uint64_t v3 = OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount;
    v0[9] = OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount;
    uint64_t v4 = *(void *)(v2 + v3);
    if (v4 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v4 <= 0x7FFFFFFF)
    {
      [result setMapFeatureLibrarySavedPlacesCount:];
      v0[10] = type metadata accessor for MapsSyncQueryPredicate();
      id v5 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
      v0[11] = v5;
      v0[12] = type metadata accessor for CollectionPlaceItemRequest();
      v0[13] = CollectionPlaceItemRequest.__allocating_init()();
      Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
      v0[14] = Options;
      id v7 = objc_allocWithZone(Options);
      id v8 = v5;
      uint64_t v9 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
      v0[15] = v9;
      id v12 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                            + async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:));
      uint64_t v10 = (void *)swift_task_alloc();
      v0[16] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_100013174;
      return (id)v12(v9);
    }
    __break(1u);
    return result;
  }
  id v11 = (uint64_t (*)(void))v0[1];
  return (id)v11();
}

void sub_10003660C(uint64_t a1)
{
  uint64_t v2 = sub_1000AA148();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = (objc_class *)objc_opt_class();
    uint64_t v4 = NSStringFromClass(v3);
    id v5 = NSStringFromSelector(*(SEL *)(a1 + 48));
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = 138412802;
    id v8 = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    __int16 v11 = 2112;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%@ %@, success = YES, cacheKey = %@", (uint8_t *)&v7, 0x20u);
  }
}

void sub_100036A50(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100037180(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10010878C;
  v9[3] = &unk_1012E92F0;
  objc_copyWeak(&v13, (id *)(a1 + 40));
  id v10 = v5;
  id v11 = v6;
  id v12 = *(id *)(a1 + 32);
  id v7 = v6;
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);

  objc_destroyWeak(&v13);
}

void sub_100037D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100037E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100038078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000388CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  objc_destroyWeak(v20);
  _Block_object_dispose(&a20, 8);
  objc_destroyWeak((id *)(v21 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_1000388F4(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  __int16 v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  id v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_10010C8F4;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012D8DC0;
  id v12 = _Block_copy(aBlock);
  id v13 = a1;
  id v14 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007FE74((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_1001010F8((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

void sub_100038DF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = +[MapsSyncStore sharedStore];
    [v3 subscribe:*(void *)(a1 + 32)];

    uint64_t v8 = objc_opt_class();
    uint64_t v9 = objc_opt_class();
    uint64_t v10 = objc_opt_class();
    uint64_t v11 = objc_opt_class();
    uint64_t v12 = objc_opt_class();
    uint64_t v4 = +[NSArray arrayWithObjects:&v8 count:5];
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 72);
    *(void *)(v5 + 72) = v4;

    uint64_t v7 = (void *)WeakRetained[4];
    WeakRetained[4] = &__NSArray0__struct;

    [WeakRetained storeDidChangeWithTypes:&__NSArray0__struct, v8, v9, v10, v11];
  }
}

uint64_t sub_100039174(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_10010CE38;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012E03C8;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a1;
  id v14 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007FE74((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

uint64_t sub_100039448@<X0>(void *a1@<X8>)
{
  sub_1000F1C90(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)&v13);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)&v13);
  if (Strong)
  {
    sub_10003384C(v1, (uint64_t)Strong);
    uint64_t v5 = v4;
    swift_unknownObjectRelease();
    if (v5)
    {
      type metadata accessor for HomeListCuratedCollectionsSectionController();
      uint64_t Strong = (void *)swift_dynamicCastClass();
      if (!Strong) {
    }
      }
    else
    {
      uint64_t Strong = 0;
    }
  }
  id v6 = sub_1000FB03C();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 identifierPathByAppendingIdentifier:v7];

  if (Strong)
  {

    double v9 = 16.0 + -5.0;
  }
  else
  {
    double v9 = 20.0;
  }
  double v13 = v9;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  sub_10010E7A0((uint64_t)&v12, (uint64_t)&v14);
  a1[4] = &type metadata for HomeListFooterCellModel;
  a1[5] = sub_10010E230();
  uint64_t v10 = swift_allocObject();
  a1[1] = v10;
  uint64_t result = sub_10010E19C((uint64_t)&v13, v10 + 16);
  *a1 = v8;
  return result;
}

void sub_100039810(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

unsigned char *sub_100039BF4(uint64_t a1)
{
  type metadata accessor for FavoriteItem();
  uint64_t v2 = (void *)MapsSyncObject.__allocating_init()();
  uint64_t result = [v2 setSourceType:2];
  if (a1 < -32768)
  {
    __break(1u);
  }
  else if (a1 < 0x8000)
  {
    dispatch thunk of FavoriteItem.type.setter();
    id v4 = (id)NSStringFromMapsSuggestionsShortcutType();
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    v5._countAndFlagsBits = 0x70757465535FLL;
    v5._object = (void *)0xE600000000000000;
    String.append(_:)(v5);
    dispatch thunk of FavoriteItem.shortcutIdentifier.setter();
    id v6 = objc_allocWithZone((Class)type metadata accessor for MapsFavoriteItem());
    NSString v7 = sub_10001C0CC(v2);

    v7[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 1;
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003A1E8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  NSString v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  id v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_10010CE40;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012E0490;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007FE74((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t sub_10003A4B4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  NSString v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource_queryQueue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10010CAB0;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012DDC38;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_10003A77C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  NSString v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_10010C8FC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012D8E88;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007FE74((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_1001010F8((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t sub_10003AA5C()
{
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v1 <= 0x7FFFFFFF)
  {
    [*(id *)(v0 + 64) setMapFeatureLibraryFavoritesGuideSavedPlacesCount:];
    if (qword_1015CBD30 == -1) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  __break(1u);
LABEL_12:
  swift_once();
LABEL_4:
  uint64_t v2 = *(void **)(v0 + 56);
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000F2248(v3, (uint64_t)qword_101611748);
  id v4 = v2;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v19 = *(void **)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 232);
    uint64_t v17 = *(void *)(v0 + 136);
    uint64_t v21 = *(void **)(v0 + 152);
    uint64_t v22 = *(void **)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v23 = *(NSObject **)(v0 + 64);
    uint64_t v8 = *(char **)(v0 + 56);
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218752;
    *(void *)(v0 + 24) = *(void *)&v8[v7];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v9 + 12) = 2048;
    *(void *)(v0 + 32) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 22) = 2048;
    *(void *)(v0 + 40) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 32) = 2048;
    *(void *)(v0 + 48) = v20;
    uint64_t v10 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_type_t v11 = v6;
    uint64_t v12 = v21;
    _os_log_impl((void *)&_mh_execute_header, v5, v11, "LibraryItemsCountManager: Count for analytics: All places: %ld | places with notes: %ld | places in guides: %ld | places in fav Guide: %ld", (uint8_t *)v9, 0x2Au);
    uint64_t v13 = v22;
    swift_slowDealloc();
    uint64_t v14 = v5;
    uint64_t v5 = v23;
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 152);
    uint64_t v12 = *(void **)(v0 + 160);
    uint64_t v14 = *(NSObject **)(v0 + 88);
    uint64_t v13 = *(void **)(v0 + 56);
  }
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

id sub_10003AFCC()
{
  id v0 = [objc_allocWithZone((Class)UIStackView) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityIdentifier:v1];

  [v0 setAxis:0];
  [v0 setSpacing:8.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setLayoutMargins:0.0, 16.0, 0.0, 16.0];
  [v0 setLayoutMarginsRelativeArrangement:1];
  return v0;
}

uint64_t sub_10003B790()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010B3CC();
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_10010C728;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012DC1F0;
  os_log_type_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10010B9B0();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10003BA0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[MKLocationManager sharedLocationManager];
    uint64_t v3 = (void *)WeakRetained[1];
    WeakRetained[1] = v2;
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      uint64_t v6 = "MapsSuggestionsMKLocationManagerAdapter.m";
      __int16 v7 = 1026;
      int v8 = 36;
      __int16 v9 = 2082;
      uint64_t v10 = "-[MapsSuggestionsMKLocationManagerAdapter init]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_10003BC54(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

id sub_10003BC78()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___compositionalLayout;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___compositionalLayout);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___compositionalLayout);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v5 = objc_allocWithZone((Class)type metadata accessor for HomeListCompositionalLayout());
    void v11[4] = sub_1000805B8;
    v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    void v11[2] = sub_100080538;
    _OWORD v11[3] = &unk_1012E0048;
    uint64_t v6 = _Block_copy(v11);
    swift_retain();
    id v7 = [v5 initWithSectionProvider:v6];
    _Block_release(v6);
    swift_release();
    swift_release();
    int v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_10003BDB8(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) _currentContainerViewController];
  id v2 = [v6 containerStyle];
  id v3 = [*(id *)(a1 + 32) weatherOverlay];
  id v4 = [v3 containerStyle];

  if (v4 != v2)
  {
    id v5 = [*(id *)(a1 + 32) weatherOverlay];
    [v5 setContainerStyle:v2];

    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
}

void sub_10003C454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t GEOLocationFloorOrdinalFromCLLocation(void *a1)
{
  uint64_t v1 = [a1 floor];
  id v2 = v1;
  if (v1 && ([v1 level], NSIntegerIsValidFloorOrdinal()))
  {
    [v2 level];
    uint64_t v3 = GEOLocationFloorOrdinalFromNSInteger();
  }
  else
  {
    uint64_t v3 = 0x7FFFFFFFLL;
  }

  return v3;
}

uint64_t sub_10003C4FC()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

void sub_10003CB68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    id v3 = objc_alloc_init((Class)NSMutableArray);
    id v4 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    if (v4
      && [v4 count]
      && ([WeakRetained _homeAreaTipWasDismissed] & 1) == 0)
    {
      id v5 = sub_1000493C0();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        LOWORD(v12) = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Adding home area offline suggestion in allOfflineSuggestions", (uint8_t *)&v12, 2u);
      }

      [v3 addObjectsFromArray:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    }
    if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)
      && !*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)
      && ([WeakRetained _tripTipWasDismissed] & 1) == 0)
    {
      id v6 = sub_1000493C0();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        LOWORD(v12) = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Adding pre-arrival offline suggestion in allOfflineSuggestions", (uint8_t *)&v12, 2u);
      }

      [v3 addObject:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
    }
    if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)
      && ([WeakRetained _tripTipWasDismissed] & 1) == 0)
    {
      id v7 = sub_1000493C0();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        LOWORD(v12) = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Adding airport arrival offline suggestion in allOfflineSuggestions", (uint8_t *)&v12, 2u);
      }

      [v3 addObject:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
    }
    int v8 = sub_1000493C0();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = [v3 count];
      int v12 = 134217984;
      id v13 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "allOfflineSuggestions calling back with %lu items", (uint8_t *)&v12, 0xCu);
    }

    uint64_t v10 = *(void *)(a1 + 32);
    id v11 = [v3 copy];
    (*(void (**)(uint64_t, id))(v10 + 16))(v10, v11);
  }
}

void sub_10003D134(uint64_t a1)
{
  [*(id *)(a1 + 32) setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [*(id *)(a1 + 40) view];
  [v2 bounds];
  [*(id *)(a1 + 32) setFrame:];

  id v3 = [*(id *)(a1 + 40) view];
  [v3 addSubview:*(void *)(a1 + 32)];

  id v4 = *(void **)(a1 + 32);
  id v8 = [*(id *)(a1 + 40) view];
  LODWORD(v5) = 1148846080;
  id v6 = [v4 _maps_constraintsEqualToEdgesOfView:v8 priority:v5];
  id v7 = [v6 allConstraints];
  +[NSLayoutConstraint activateConstraints:v7];
}

uint64_t sub_10003D548(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = sub_1000FF33C(a2);
  sub_10003D64C(v4, a3);
  sub_1000F2248(v4, (uint64_t)a3);
  sub_100100830(0, &qword_1015D99E8);
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t sub_10003D5CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_10003D64C(v3, a2);
  sub_1000F2248(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t *sub_10003D64C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_10003D6B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)NSMutableSet) initWithArray:*(void *)(a1 + 32)];
  id v5 = objc_alloc_init((Class)NSMutableSet);
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id obj = v3;
  id v6 = [obj countByEnumeratingWithState:&v24 objects:v29 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v25;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = [*(id *)(a1 + 40) createCantorPair:[*(id *)(*((void *)&v24 + 1) + 8 * i) curatedCollectionIdentifier] y:[*(id *)(*((void *)&v24 + 1) + 8 * i) resultProviderIdentifier]];
        [v5 addObject:v10];
      }
      id v7 = [obj countByEnumeratingWithState:&v24 objects:v29 count:16];
    }
    while (v7);
  }

  [v4 minusSet:v5];
  id v18 = objc_alloc_init((Class)NSMutableArray);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v11 = *(id *)(a1 + 48);
  id v12 = [v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v21;
    do
    {
      for (j = 0; j != v13; j = (char *)j + 1)
      {
        if (*(void *)v21 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void **)(*((void *)&v20 + 1) + 8 * (void)j);
        uint64_t v17 = [*(id *)(a1 + 40) createCantorPair:[v16 curatedCollectionIdentifier:v18] y:[v16 resultProviderIdentifier]];
        if ([v4 containsObject:v17]) {
          [v18 addObject:v16];
        }
      }
      id v13 = [v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
    }
    while (v13);
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

id sub_10003DD9C(void *a1)
{
  uint64_t v2 = a1[4];
  id v3 = *(void **)(a1[5] + 8);
  if (v2) {
    [v3 setObject:v2 forKey:a1[6]];
  }
  else {
    [v3 removeObjectForKey:a1[6]];
  }
  [*(id *)(a1[5] + 16) removeObject:a1[6]];
  id v4 = [*(id *)(a1[5] + 24) objectForKeyedSubscript:a1[6]];
  id v5 = [v4 copy];
  uint64_t v6 = *(void *)(a1[7] + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v8 = a1[6];
  id v9 = *(void **)(a1[5] + 24);

  return [v9 removeObjectForKey:v8];
}

void *_s4Maps40PlaceSummaryDynamicContextServerOverrideVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

id sub_10003E404(uint64_t a1)
{
  v1[OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_needsResetScrollOffset] = 0;
  uint64_t v3 = OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_favoritesDataProvider;
  uint64_t v4 = qword_1015CBCD8;
  id v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_101611650;
  *(void *)&v1[v3] = qword_101611650;
  uint64_t v7 = OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_libraryCountsDataProvider;
  uint64_t v8 = qword_1015CBF98;
  id v9 = v6;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)static LibraryItemsCountManager.shared;
  id v11 = objc_allocWithZone((Class)type metadata accessor for HomeListLibraryCountsDataProvider());
  *(void *)&v5[v7] = sub_100033468(v10);
  *(void *)&v5[OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesIdentifierPath] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___placeLibraryIdentifierPath] = 0;
  id v12 = &v5[OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesCellSnapshot];
  *(_OWORD *)id v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  id v13 = &v5[OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesCellSnapshotLegacy];
  *(_OWORD *)id v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;

  sub_1000F1C90(a1, (uint64_t)v20);
  uint64_t v14 = &v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  uint64_t v15 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  uint64_t v16 = v5;
  *(void *)&v5[v15] = sub_1000F45E4((uint64_t)_swiftEmptyArrayStorage);
  v16[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(void *)&v16[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(void *)&v16[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000F1C90((uint64_t)v20, (uint64_t)&v16[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  v19.unint64_t receiver = v16;
  v19.Class super_class = (Class)type metadata accessor for HomeListSectionController();
  id v17 = [super init];
  sub_1000F1BD8((uint64_t)v20);
  sub_1000F1BD8(a1);
  return v17;
}

void sub_10003E72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003EB18(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v6)
    {
      id v9 = sub_1000493C0();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v33 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "[MapsOfflineUIHelper] paired device subscription fetch error: %@", buf, 0xCu);
      }
    }
    else
    {
      id v18 = WeakRetained;
      uint64_t v10 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [v5 count]);
      id v9 = dispatch_group_create();
      long long v27 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      long long v30 = 0u;
      id v19 = v5;
      id obj = v5;
      id v11 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v28;
        do
        {
          for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v28 != v13) {
              objc_enumerationMutation(obj);
            }
            uint64_t v15 = *(void *)(*((void *)&v27 + 1) + 8 * i);
            dispatch_group_enter(v9);
            uint64_t v16 = [*(id *)(a1 + 32) subscriptionManager];
            v23[0] = _NSConcreteStackBlock;
            v23[1] = 3221225472;
            v23[2] = sub_100932608;
            v23[3] = &unk_1012F60B8;
            id v24 = v10;
            uint64_t v25 = v15;
            long long v26 = v9;
            [v16 fetchStateForPairedDeviceSubscriptionWithIdentifier:v15 callbackQueue:&_dispatch_main_q completionHandler:v23];
          }
          id v12 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
        }
        while (v12);
      }

      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100019574;
      block[3] = &unk_1012E5D58;
      void block[4] = *(void *)(a1 + 32);
      id v22 = v10;
      id v17 = v10;
      dispatch_group_notify(v9, (dispatch_queue_t)&_dispatch_main_q, block);

      id v6 = 0;
      id v5 = v19;
      uint64_t v8 = v18;
    }
  }
}

void sub_10003EF40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10003EF6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v27 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    id v6 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
LABEL_6:
    uint64_t v28 = v4;
    uint64_t v7 = *(void **)(v27 + 8 * v4);
    uint64_t v8 = v25;
    uint64_t v26 = v5;
    while (1)
    {
      id v9 = *(void **)v5;
      id v10 = v7;
      id v11 = v9;
      id v12 = [v10 v6[90]];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v16 = v15;
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v16 = 0xE000000000000000;
      }
      id v17 = [v11 v6[90]];
      if (v17)
      {
        id v18 = v17;
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v21 = v20;
      }
      else
      {
        uint64_t v19 = 0;
        unint64_t v21 = 0xE000000000000000;
      }
      if (v14 == v19 && v16 == v21)
      {

        uint64_t result = swift_bridgeObjectRelease_n();
        id v6 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
LABEL_5:
        uint64_t v4 = v28 + 1;
        uint64_t v5 = v26 + 8;
        if (v28 + 1 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      id v6 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
      if ((v22 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v27) {
        break;
      }
      long long v23 = *(void **)v5;
      uint64_t v7 = *(void **)(v5 + 8);
      *(void *)uint64_t v5 = v7;
      *(void *)(v5 + 8) = v23;
      v5 -= 8;
      if (v28 == ++v8) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10003F214()
{
  id v1 = [self sharedLocationManager];
  v0[7] = v1;
  if (!v1)
  {
    swift_release();
    id v4 = 0;
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  id v3 = [v1 lastLocation];
  if (v3)
  {
    id v4 = v3;

    swift_release();
LABEL_5:
    uint64_t v5 = (uint64_t (*)(id))v0[1];
    return v5(v4);
  }
  uint64_t v7 = static MainActor.shared.getter();
  v0[8] = v7;
  uint64_t v8 = swift_task_alloc();
  v0[9] = v8;
  *(void *)(v8 + 16) = v2;
  id v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  uint64_t v10 = sub_1000FF33C(&qword_1015D5DA8);
  *id v9 = v0;
  v9[1] = sub_10000B054;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, v7, &protocol witness table for MainActor, 0x636F4C6863746566, 0xEF29286E6F697461, sub_10010EAC4, v8, v10);
}

void sub_10003F3D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100041C48;
  block[3] = &unk_1012E80F0;
  id v4 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10003F484()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 dataForKey:v2];

  if (v3)
  {
    uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    sub_100148BF0();
    type metadata accessor for NavigationModeGuidanceConfiguration();
    uint64_t v7 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    id v12 = (void *)v7;
    if (v7)
    {
      if (qword_1015CBB60 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_1000F2248(v13, (uint64_t)qword_1015CF528);
      id v14 = v12;
      unint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v15, v16))
      {
        long long v30 = v1;
        id v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = (void *)swift_slowAlloc();
        buf = v17;
        *(_DWORD *)id v17 = 138412290;
        v32[0] = v14;
        id v18 = v14;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v28 = v12;

        id v1 = v30;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Task was launched and we've detected a configuration: %@ from previous app session. Will apply it.", buf, 0xCu);
        sub_1000FF33C((uint64_t *)&unk_1015CF600);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_100147160(v14);
      sub_1001442DC(v4, v6);
    }
    else
    {
      if (qword_1015CBB60 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_1000F2248(v19, (uint64_t)qword_1015CF528);
      sub_100144284(v4, v6);
      sub_100144284(v4, v6);
      unint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        char v22 = (uint8_t *)swift_slowAlloc();
        v32[0] = (id)swift_slowAlloc();
        *(_DWORD *)char v22 = 136315138;
        sub_100144284(v4, v6);
        uint64_t v23 = Data.description.getter();
        unint64_t v24 = v6;
        unint64_t v26 = v25;
        sub_1001442DC(v4, v24);
        sub_1000F2280(v23, v26, (uint64_t *)v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001442DC(v4, v24);
        sub_1001442DC(v4, v24);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to unarchive persisted configuration: %s", v22, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1001442DC(v4, v24);
      }
      else
      {
        sub_1001442DC(v4, v6);
        sub_1001442DC(v4, v6);
        sub_1001442DC(v4, v6);
      }
    }
    NSString v27 = String._bridgeToObjectiveC()();
    [v1 setURL:0 forKey:v27];
  }
  else
  {
    if (qword_1015CBB60 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000F2248(v8, (uint64_t)qword_1015CF528);
    id v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "There was no persisted configuration, will continue regular setup", v11, 2u);
      swift_slowDealloc();
    }

    os_log_t log = (os_log_t)String._bridgeToObjectiveC()();
    [v1 setURL:0 forKey:log];
  }
}

void sub_10003FC38(uint64_t a1@<X8>)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 64);
  if (!v3) {
    goto LABEL_8;
  }
  id v4 = v3;
  id v5 = [v4 homeResult];
  if (!v5)
  {
LABEL_7:

LABEL_8:
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  unint64_t v6 = v5;
  unsigned int v7 = [v5 isCuratedCollectionSectionValid];

  if (!v7)
  {
    id v4 = v6;
    goto LABEL_7;
  }
  id v8 = [v6 curatedCollectionSectionName];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v12;
  *(_WORD *)(a1 + 16) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  sub_100101750((uint64_t)v13, a1 + 24, (uint64_t *)&unk_1015D4350);

  *(void *)(a1 + 32) = 0xD000000000000016;
  *(void *)(a1 + 40) = 0x8000000100F87220;
}

void sub_10003FE7C(uint64_t a1, void *a2)
{
  id v12 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained view];
    unint64_t v6 = [v5 window];
    unsigned int v7 = [v6 windowScene];

    if (v7)
    {
      id v8 = [v4 mapView];

      if (v8)
      {
        id v9 = [v12 object];
        if (v9 == v7)
        {
          uint64_t v10 = +[NSDate date];
          unint64_t v11 = (void *)v4[35];
          v4[35] = v10;
        }
      }
    }
  }
}

void sub_1000400C0(uint64_t a1)
{
  if (MapsFeature_IsEnabled_EVRouting()) {
    uint64_t IsEnabled_Alberta = 1;
  }
  else {
    uint64_t IsEnabled_Alberta = MapsFeature_IsEnabled_Alberta();
  }
  id v3 = sub_1000519B4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    if (IsEnabled_Alberta) {
      CFStringRef v4 = @"will";
    }
    else {
      CFStringRef v4 = @"won't";
    }
    if (MapsFeature_IsEnabled_EVRouting()) {
      id v5 = @"YES";
    }
    else {
      id v5 = @"NO";
    }
    unint64_t v6 = v5;
    if (MapsFeature_IsEnabled_Alberta()) {
      unsigned int v7 = @"YES";
    }
    else {
      unsigned int v7 = @"NO";
    }
    id v8 = v7;
    int v10 = 138412802;
    CFStringRef v11 = v4;
    __int16 v12 = 2112;
    uint64_t v13 = v6;
    __int16 v14 = 2112;
    unint64_t v15 = v8;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "_setupVirtualGarageIfNeeded %@ launch VG logic. evRoutingEnabled: %@, albertaEnabled: %@", (uint8_t *)&v10, 0x20u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setUsesVirtualGarage:IsEnabled_Alberta];
}

void sub_10004059C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

id sub_1000414A8()
{
  if (qword_101610B48 != -1) {
    dispatch_once(&qword_101610B48, &stru_10131BAC0);
  }
  uint64_t v0 = (void *)qword_101610B40;

  return v0;
}

void sub_100041B10(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    unint64_t v6 = [WeakRetained _defaultPaymentCardsFromLibrary:v3];
    unsigned int v7 = sub_100021338();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = sub_100099700(v6, &stru_1013007E0);
      int v11 = 138412290;
      __int16 v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Default Passes: %@", (uint8_t *)&v11, 0xCu);
    }
    uint64_t v9 = *(void *)(a1 + 32);
    int v10 = [v6 firstObject];
    (*(void (**)(uint64_t, BOOL))(v9 + 16))(v9, v10 != 0);
  }
}

void sub_100041C48(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 40) firstObject];
  uint64_t v3 = *(void *)(a1 + 32);
  CFStringRef v4 = *(void **)(v3 + 8);
  *(void *)(v3 + 8) = v2;

  uint64_t v5 = *(void *)(a1 + 48);
  if (v5)
  {
    unint64_t v6 = [*(id *)(a1 + 32) droppedPin];
    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
  }
  unsigned int v7 = *(void **)(*(void *)(a1 + 32) + 8);
  id v8 = [*(id *)(a1 + 40) firstObject];
  LOBYTE(v7) = [v7 isEqualToMarkedLocation:v8];

  if ((v7 & 1) == 0)
  {
    uint64_t v9 = *(void **)(a1 + 32);
    _[v9 _notifySearchManager];
  }
}

void sub_100041D0C(uint64_t a1, void *a2)
{
  id v10 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  CFStringRef v4 = [v10 userInfo];
  uint64_t v5 = [v4 objectForKeyedSubscript:@"ContainerContainee"];

  if (WeakRetained)
  {
    id v6 = [v10 object];
    id v7 = objc_loadWeakRetained(WeakRetained + 57);

    if (v6 == v7)
    {
      if (v5)
      {
        id v8 = objc_loadWeakRetained(WeakRetained + 57);
        uint64_t v9 = [v8 currentViewController];
        [WeakRetained containerViewControllerWillPresentContainee:v5 overContainee:v9];
      }
    }
  }
}

void sub_100041E04(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v29 = a3;
  id v31 = +[NSMutableArray array];
  id v6 = +[NSMutableSet set];
  id v32 = objc_alloc_init((Class)NSCountedSet);
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  id obj = v5;
  id v7 = [obj countByEnumeratingWithState:&v51 objects:v55 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v52;
    unint64_t v30 = 0;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v52 != v8) {
          objc_enumerationMutation(obj);
        }
        id v10 = *(void **)(*((void *)&v51 + 1) + 8 * i);
        int v11 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v10 contactID]);
        [v6 addObject:v11];

        __int16 v12 = [v10 originalSource];
        uint64_t v13 = v12;
        if (v12
          && [v12 length]
          && [*(id *)(a1 + 32) indexOfObject:v13] != (id)0x7FFFFFFFFFFFFFFFLL)
        {
          BOOL v14 = (unint64_t)[v32 countForObject:v13] > 2
             || (unint64_t)[v31 count] > 4;
          unint64_t v15 = *(void **)(*(void *)(a1 + 40) + 40);
          os_log_type_t v16 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v10 contactID]);
          id v17 = [v15 indexOfObject:v16];

          if (v17 == (id)0x7FFFFFFFFFFFFFFFLL)
          {
            uint64_t v45 = 0;
            v46 = &v45;
            uint64_t v47 = 0x3032000000;
            long long v48 = sub_100103C7C;
            long long v49 = sub_1001046C8;
            id v50 = 0;
            uint64_t v18 = *(void *)(a1 + 40);
            id v38 = _NSConcreteStackBlock;
            uint64_t v39 = 3221225472;
            id v40 = sub_1004E5760;
            id v41 = &unk_1012ECFC0;
            BOOL v43 = v10;
            id v44 = &v45;
            uint64_t v42 = v18;
            geo_isolate_sync();
            uint64_t v19 = (void *)v46[5];
            if (v19)
            {
              if (!v14)
              {
                unint64_t v20 = [v19 _geoAddress];
                os_log_type_t v21 = [v20 structuredAddress];

                char v22 = [v21 fullThoroughfare];
                if ([v22 length])
                {
                  [v31 addObject:v10];
                  [v32 addObject:v13];
                }

LABEL_23:
              }
            }
            else
            {
              if (!v14)
              {
                [v31 addObject:v10];
                [v32 addObject:v13];
              }
              if (v30 <= 0xA && *(unsigned char *)(a1 + 64))
              {
                dispatch_group_enter(*(dispatch_group_t *)(a1 + 48));
                uint64_t v23 = +[MKMapService sharedService];
                unint64_t v24 = [v10 address];
                os_log_type_t v21 = [v23 ticketForCanonicalLocationSearchQueryString:v24 traits:0];

                v36[0] = _NSConcreteStackBlock;
                v36[1] = 3221225472;
                v36[2] = sub_1004E57F0;
                v36[3] = &unk_1012ECF50;
                unint64_t v25 = *(void **)(a1 + 48);
                void v36[4] = *(void *)(a1 + 40);
                v36[5] = v10;
                id v37 = v25;
                [v21 submitWithHandler:v36 networkActivity:0];

                ++v30;
                goto LABEL_23;
              }
            }
            _Block_object_dispose(&v45, 8);
          }
        }
      }
      id v7 = [obj countByEnumeratingWithState:&v51 objects:v55 count:16];
    }
    while (v7);
  }

  uint64_t v26 = *(void *)(a1 + 56);
  if (v26) {
    (*(void (**)(uint64_t, void *))(v26 + 16))(v26, v31);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002EF5C;
  block[3] = &unk_1012E5D58;
  NSString v27 = *(NSObject **)(a1 + 48);
  void block[4] = *(void *)(a1 + 40);
  id v35 = v6;
  id v28 = v6;
  dispatch_group_notify(v27, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100042310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

id sub_1000424C0(void *a1, void *a2, void *a3)
{
  swift_unknownObjectWeakInit();
  id v7 = &v3[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_unknownObjectWeakAssign();
  *(void *)&v3[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session] = a2;
  id v9 = objc_allocWithZone((Class)NavigationRouteHistoryInfoProvider);
  id v10 = v3;
  id v11 = a2;
  id result = [v9 initWithNavigationService:a3];
  if (result)
  {
    *(void *)&v10[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_routeInfoProvider] = result;

    v14.unint64_t receiver = v10;
    v14.Class super_class = (Class)type metadata accessor for NavigationProgressCapturingTask();
    id v13 = [super init];
    [a3 registerObserver:v13];

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100042AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000FF2E0(a1, &qword_1015CD250);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_100043168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100043320(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_100043DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004468C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _s4Maps25FavoriteCollectionHandlerC14storeDidChange5typesySaySSG_tF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v2 - 8);
  CFStringRef v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MapsSyncQueryPredicate();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F5CF70;
  *(void *)(v5 + 56) = &type metadata for Int16;
  *(void *)(v5 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v5 + 32) = 1;
  uint64_t v6 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  id v8 = v6;
  id v9 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  id v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  _OWORD v11[3] = 0;
  void v11[4] = v9;
  v11[5] = v1;
  id v12 = v9;
  id v13 = v1;
  sub_100042AF4((uint64_t)v4, (uint64_t)&unk_1015DAE08, (uint64_t)v11);

  return swift_release();
}

void sub_100044A28()
{
  uint64_t v1 = *(void *)(v0 + 136);
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v2 = *(objc_class **)(v0 + 112);
  uint64_t v3 = *(objc_class **)(v0 + 80);
  [*(id *)(v0 + 64) setMapFeatureLibraryPlacesWithNoteCount:];
  CFStringRef v4 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
  *(void *)(v0 + 152) = v4;
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F5CF70;
  *(void *)(v5 + 56) = &type metadata for Int16;
  *(void *)(v5 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v5 + 32) = 1;
  uint64_t v6 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
  *(void *)(v0 + 160) = v6;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 168) = CollectionPlaceItemRequest.__allocating_init()();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100F5F0D0;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  specialized Array._endMutation()();
  objc_allocWithZone(v3);
  id v8 = v4;
  id v9 = v6;
  MapsSyncQueryPredicate.init(or:)();
  id v10 = objc_allocWithZone(v2);
  uint64_t v11 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  *(void *)(v0 + 176) = v11;
  id v13 = (void (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                     + async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:));
  id v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v12;
  void *v12 = v0;
  v12[1] = sub_10000F3C4;
  v13(v11);
}

id sub_100044DF4()
{
  if (qword_101610D60 != -1) {
    dispatch_once(&qword_101610D60, &stru_10131D778);
  }
  uint64_t v0 = (void *)qword_101610D58;

  return v0;
}

uint64_t sub_100045060(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1 _backlightLuminance];
  id v5 = [v3 _backlightLuminance];

  if (v4 == (id)-1) {
    return 0;
  }
  BOOL v7 = v4 == (id)2 && v5 == (id)1;
  BOOL v8 = v5 == (id)2 && v4 == (id)1;
  uint64_t result = 1;
  if (!v8)
  {
    if (v4) {
      BOOL v10 = 0;
    }
    else {
      BOOL v10 = v5 == (id)1;
    }
    unsigned int v11 = v10;
    if (v4 == (id)1 && v5 == 0) {
      unsigned int v11 = 1;
    }
    if (v7) {
      return 1;
    }
    else {
      return v11;
    }
  }
  return result;
}

void sub_10004533C(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a3)
  {
    id v3 = *(void **)(a1 + 32);
    if (v3)
    {
      id v5 = v3;
      id v6 = a2;
      BOOL v7 = +[NSLocale preferredLanguages];
      BOOL v8 = [v7 firstObject];
      id v11 = +[NSString stringWithFormat:@"%@-%@", @"__internal__searchBarPlaceholderV2", v8];

      id v9 = +[NSUserDefaults standardUserDefaults];
      [v9 setObject:v6 forKey:v11];

      BOOL v10 = +[NSUserDefaults standardUserDefaults];
      [v10 synchronize];

      [v5 _setPlaceHolder];
    }
  }
}

void sub_100045EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100045FA0()
{
  type metadata accessor for MapsSyncQueryPredicate();
  static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
  id v1 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  uint64_t v2 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v0[2] = v2;
  type metadata accessor for FavoriteItemRequest();
  v0[3] = FavoriteItemRequest.__allocating_init()();
  id v6 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.count(options:)
                                      + async function pointer to dispatch thunk of FavoriteItemRequest.count(options:));
  id v3 = v2;
  id v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *id v4 = v0;
  v4[1] = sub_10001F9F0;
  return v6(v2);
}

void sub_10004642C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 invalidateIntrinsicContentSize];
}

uint64_t sub_1000466E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000FF33C(&qword_1015CF1F8);
  sub_1001010F8(&qword_1015CF200, &qword_1015CF1F8);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v6 = result;
  if (v2)
  {
    id v4 = (uint64_t *)(a1 + 40);
    do
    {
      sub_1000F2DBC(v5, (id)*(v4 - 1), *v4);

      v4 += 2;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_100047228(void *a1, uint64_t a2, id *a3)
{
  v25[1] = a1;
  uint64_t v5 = type metadata accessor for UIListContentConfiguration();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF33C(&qword_1015CE288);
  __chkstk_darwin();
  id v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  id v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  id v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = *a3;
  NSString v18 = String._bridgeToObjectiveC()();
  [a1 setAccessibilityIdentifier:v18];

  sub_1000FF33C(&qword_1015CE290);
  type metadata accessor for UICellAccessory();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100F5CF70;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for UICellAccessory.DisplayedState.always(_:), v14);
  uint64_t v19 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
  static UICellAccessory.disclosureIndicator(displayed:options:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  UICollectionViewListCell.accessories.setter();
  UICollectionViewListCell.defaultContentConfiguration()();
  if (v26)
  {
    id v20 = v26;
    LibraryItemsCount.descriptionForLibrarySectionInHome()();
  }
  UIListContentConfiguration.text.setter();
  uint64_t v21 = v28;
  v29[3] = v28;
  void v29[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  char v22 = sub_100100B1C(v29);
  uint64_t v23 = v27;
  (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 16))(v22, v7, v21);
  UICollectionViewCell.contentConfiguration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v21);
}

void sub_10004779C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100047F64(uint64_t a1)
{
  uint64_t v2 = sub_1000B944C();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);

  id v4 = sub_1000B944C();
  uint64_t v5 = v4;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "FetchCollectionsChangesComparison", "", buf, 2u);
  }

  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    if (!*((unsigned char *)WeakRetained + 64))
    {
      *((unsigned char *)WeakRetained + 64) = 1;
      *((unsigned char *)WeakRetained + 32) = 1;
    }
    objc_storeStrong(WeakRetained + 13, *(id *)(a1 + 32));
    [v7 _updateContent];
    uint64_t v8 = sub_1000B944C();
    id v9 = v8;
    if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v8))
    {
      v11[0] = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, OS_SIGNPOST_INTERVAL_END, v3, "FetchCollectionsChangesComparison", "", (uint8_t *)v11, 2u);
    }

    uint64_t v10 = *(void *)(a1 + 40);
    if (v10) {
      (*(void (**)(void))(v10 + 16))();
    }
  }
}

void sub_1000480B8(uint64_t a1)
{
  +[GEOAPSharedStateData sharedData];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10002E744;
  v3[3] = &unk_101313618;
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  int v9 = *(_DWORD *)(a1 + 72);
  id v5 = *(id *)(a1 + 32);
  long long v7 = *(_OWORD *)(a1 + 48);
  __int16 v10 = *(_WORD *)(a1 + 76);
  uint64_t v8 = *(void *)(a1 + 64);
  id v6 = *(id *)(a1 + 40);
  id v2 = v4;
  [v2 performMapViewStateUpdate:v3];
}

id sub_100048434(uint64_t a1)
{
  id v2 = v1;
  uint64_t v18 = a1;
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v17 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin();
  type metadata accessor for DispatchQoS();
  __chkstk_darwin();
  uint64_t v6 = OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_markedLocationDataProvider;
  *(void *)&v1[v6] = [objc_allocWithZone((Class)MarkedLocationDataProvider) init];
  uint64_t v7 = OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataProvider;
  *(void *)&v1[v7] = [objc_allocWithZone((Class)RecentsDataProvider) init];
  uint64_t v8 = OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilter;
  *(void *)&v1[v8] = [objc_allocWithZone((Class)RecentsDataFilter) initWithSearchMode:1 filterPredicate:0];
  uint64_t v16 = OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilterQueue;
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  static DispatchQoS.unspecified.getter();
  v20[0] = _swiftEmptyArrayStorage;
  sub_10007FF04((unint64_t *)&unk_1015D5E90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000FF33C((uint64_t *)&unk_1015D52D0);
  sub_10010113C((unint64_t *)&unk_1015D5EA0, (uint64_t *)&unk_1015D52D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v17);
  *(void *)&v1[v16] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v1[OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents] = _swiftEmptyArrayStorage;
  uint64_t v9 = v18;
  sub_1000F1C90(v18, (uint64_t)v20);
  __int16 v10 = &v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)__int16 v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  uint64_t v11 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  uint64_t v12 = v2;
  *(void *)&v2[v11] = sub_1000F45E4((uint64_t)_swiftEmptyArrayStorage);
  v12[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(void *)&v12[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(void *)&v12[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000F1C90((uint64_t)v20, (uint64_t)&v12[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  id v13 = (objc_class *)type metadata accessor for HomeListSectionController();
  v19.unint64_t receiver = v12;
  v19.Class super_class = v13;
  id v14 = [super init];
  sub_1000F1BD8((uint64_t)v20);
  sub_1000F1BD8(v9);
  return v14;
}

void sub_100048E38(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(id *)(*(void *)(a1 + 32) + 16));
  uint64_t v2 = +[NSDate date];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;

  *(unsigned char *)(*(void *)(a1 + 32) + 40) = 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 41) = 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 42) = 1;
}

id sub_1000493C0()
{
  if (qword_101611FC8 != -1) {
    dispatch_once(&qword_101611FC8, &stru_1012EF7F8);
  }
  uint64_t v0 = (void *)qword_101611FC0;

  return v0;
}

void sub_10004976C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004A268(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int IsEnabled_EVRouting = MapsFeature_IsEnabled_EVRouting();
    int v3 = IsEVRoutingSupported();
    int v4 = *((unsigned __int8 *)WeakRetained + 24);
    id v5 = [WeakRetained[6] count];
    if (v5) {
      unsigned int v6 = [WeakRetained _shouldShowVehicleCombination:WeakRetained[6]];
    }
    else {
      unsigned int v6 = 0;
    }
    int v7 = IsEnabled_EVRouting & v3;
    if (v4) {
      int v7 = 0;
    }
    int v8 = v7 & v6;
    [WeakRetained setAvailable:v7 & v6];
    uint64_t v9 = sub_10000A540();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      if (v8) {
        __int16 v10 = @"YES";
      }
      else {
        __int16 v10 = @"NO";
      }
      uint64_t v11 = v10;
      if (IsEnabled_EVRouting) {
        uint64_t v12 = @"YES";
      }
      else {
        uint64_t v12 = @"NO";
      }
      id v13 = v12;
      if (v3) {
        id v14 = @"YES";
      }
      else {
        id v14 = @"NO";
      }
      uint64_t v15 = v14;
      if (v4) {
        uint64_t v16 = @"YES";
      }
      else {
        uint64_t v16 = @"NO";
      }
      uint64_t v17 = v16;
      if (v5) {
        uint64_t v18 = @"YES";
      }
      else {
        uint64_t v18 = @"NO";
      }
      objc_super v19 = v18;
      if (v6) {
        id v20 = @"YES";
      }
      else {
        id v20 = @"NO";
      }
      uint64_t v21 = v20;
      int v22 = 138413570;
      uint64_t v23 = v11;
      __int16 v24 = 2112;
      unint64_t v25 = v13;
      __int16 v26 = 2112;
      uint64_t v27 = v15;
      __int16 v28 = 2112;
      id v29 = v17;
      __int16 v30 = 2112;
      id v31 = v19;
      __int16 v32 = 2112;
      id v33 = v21;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "_reloadAvailability EVRoutingFeatureDiscoverySource isAvailable: %@\n, featureEnabled: %@, currentCountrySupportsEVRouting: %@, wasDismissed: %@, hasUnpairedVehicles: %@, belowMaximumViewCount: %@", (uint8_t *)&v22, 0x3Eu);
    }
  }
}

void *sub_10004ABFC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  int v3 = &OBJC_METACLASS___RAPIncidentsQuestion;
  if (v2) {
    goto LABEL_3;
  }
  while (1)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    if (v3[79].info != (__objc2_class_ro *)-1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000F2248(v13, (uint64_t)qword_1016115E0);
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Adding Home setup placeholder", v16, 2u);
      swift_slowDealloc();
    }

    sub_100039BF4(2);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (!v2) {
      break;
    }
    unint64_t v4 = a1 & 0xC000000000000001;
    swift_bridgeObjectRetain();
LABEL_22:
    if (v4) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(a1 + 32);
    }
    uint64_t v18 = v17;
    int v19 = (unsigned __int16)dispatch thunk of FavoriteItem.type.getter();

    if (v19 == 3)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    if (v2 == 1)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      break;
    }
    uint64_t v20 = 5;
    while (1)
    {
      id v21 = v4 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v20);
      int v22 = v21;
      uint64_t v23 = v20 - 3;
      if (__OFADD__(v20 - 4, 1)) {
        break;
      }
      int v24 = (unsigned __int16)dispatch thunk of FavoriteItem.type.getter();

      if (v24 == 3) {
        goto LABEL_25;
      }
      ++v20;
      if (v23 == v2) {
        goto LABEL_34;
      }
    }
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_45:
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      int v3 = &OBJC_METACLASS___RAPIncidentsQuestion;
      if (!v2) {
        break;
      }
LABEL_3:
      unint64_t v4 = a1 & 0xC000000000000001;
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 32);
      }
      unsigned int v6 = v5;
      int v7 = (unsigned __int16)dispatch thunk of FavoriteItem.type.getter();

      if (v7 == 2) {
        goto LABEL_22;
      }
      if (v2 == 1) {
        goto LABEL_14;
      }
      uint64_t v8 = 5;
      while (1)
      {
        id v9 = v4 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v8);
        __int16 v10 = v9;
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1)) {
          break;
        }
        int v12 = (unsigned __int16)dispatch thunk of FavoriteItem.type.getter();

        if (v12 == 2) {
          goto LABEL_22;
        }
        ++v8;
        if (v11 == v2) {
          goto LABEL_14;
        }
      }
    }
  }
  if (v3[79].info != (__objc2_class_ro *)-1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_1000F2248(v25, (uint64_t)qword_1016115E0);
  __int16 v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    __int16 v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)__int16 v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Adding Work setup placeholder", v28, 2u);
    swift_slowDealloc();
  }

  sub_100039BF4(3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return _swiftEmptyArrayStorage;
}

void sub_10004B164(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 72);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 72));
  unint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[1] isTouristHere];
    double v6 = v5;
    MapsSuggestionsConfidenceDontKnow();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v6 > v7;
    uint64_t v8 = sub_100021338();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
        CFStringRef v9 = @"Yes";
      }
      else {
        CFStringRef v9 = @"No";
      }
      *(_DWORD *)buf = 138412290;
      CFStringRef v23 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Maps Home: isTourist: %@", buf, 0xCu);
    }

    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
    dispatch_group_wait(*(dispatch_group_t *)(a1 + 32), 0xFFFFFFFFFFFFFFFFLL);
    __int16 v10 = [[TransitPassManager alloc] initWithIsTourist:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)];
    id v11 = v4[5];
    void v4[5] = v10;

    [v4[5] setDelegate:v4];
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    id v12 = v4[5];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_10001A544;
    v18[3] = &unk_1012E9F40;
    objc_copyWeak(&v21, v2);
    uint64_t v20 = *(void *)(a1 + 64);
    id v19 = *(id *)(a1 + 32);
    [v12 userHasPaymentCardWithHandler:v18];
    uint64_t v13 = *(NSObject **)(a1 + 32);
    id v14 = *(NSObject **)(*(void *)(a1 + 40) + 80);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    void v15[2] = sub_100107F14;
    v15[3] = &unk_1012E9F68;
    id v16 = *(id *)(a1 + 48);
    int8x16_t v17 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
    dispatch_group_notify(v13, v14, v15);

    objc_destroyWeak(&v21);
  }
}

void sub_10004B3D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10004B600(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

uint64_t sub_10004B7E8()
{
  type metadata accessor for MapsSyncQueryPredicate();
  id v1 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
  v0[27] = v1;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
  id v3 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithKey:v4 ascending:1];

  *(void *)(v2 + 32) = v5;
  specialized Array._endMutation()();
  if (qword_1015CBC80 != -1) {
    swift_once();
  }
  id v6 = objc_allocWithZone((Class)type metadata accessor for MapsSyncRange());
  double v7 = (void *)MapsSyncRange.init(offset:limit:)();
  v0[28] = v7;
  objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  id v8 = v1;
  id v9 = v7;
  __int16 v10 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v0[29] = v10;
  type metadata accessor for FavoriteItemRequest();
  v0[30] = FavoriteItemRequest.__allocating_init()();
  id v14 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
  id v11 = v10;
  id v12 = (void *)swift_task_alloc();
  v0[31] = v12;
  void *v12 = v0;
  v12[1] = sub_10000D270;
  return v14(v10);
}

uint64_t sub_10004BA04(uint64_t a1)
{
  uint64_t v2 = sub_10006A198();
  if (!os_log_type_enabled(v2, OS_LOG_TYPE_INFO)) {
    goto LABEL_11;
  }
  id v3 = objc_loadWeakRetained((id *)(a1 + 40));
  if (!v3)
  {
    id v8 = @"<nil>";
    goto LABEL_10;
  }
  NSString v4 = (objc_class *)objc_opt_class();
  id v5 = NSStringFromClass(v4);
  if (objc_opt_respondsToSelector())
  {
    id v6 = [v3 performSelector:"accessibilityIdentifier"];
    double v7 = v6;
    if (v6 && ![v6 isEqualToString:v5])
    {
      id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

      goto LABEL_8;
    }
  }
  id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
  id v9 = objc_retainBlock(*(id *)(a1 + 32));
  *(_DWORD *)buf = 138543618;
  id v12 = v8;
  __int16 v13 = 2112;
  id v14 = v9;
  _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] Transition complete with completion: %@", buf, 0x16u);

LABEL_11:
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10004BBC0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  __chkstk_darwin(v1);
  CFStringRef v23 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  __chkstk_darwin(v3);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTimeInterval();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (void **)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  __int16 v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v0;
  swift_getObjectType();
  swift_unknownObjectRetain();
  static DispatchTime.now()();
  if (qword_1015CBCA8 != -1) {
    swift_once();
  }
  *id v9 = 0;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchTimeInterval.nanoseconds(_:), v6);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
  swift_unknownObjectRelease();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v14 = v20;
  swift_getObjectType();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  aBlock[4] = sub_10010EA9C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012DE560;
  id v16 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  id v17 = v14;
  j___s8Dispatch0A3QoSV11unspecifiedACvgZ();
  uint64_t v18 = v23;
  sub_10003C4FC();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v16);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v25);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
  return swift_release();
}

void sub_10004BFD8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 976) superview];

  if (v2)
  {
    uint64_t v3 = *(id **)(a1 + 32);
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
    {
      uint64_t v4 = [v3 traitCollection];
      unsigned int v5 = [v4 isLuminanceReduced];
      double v6 = 0.0;
      if (v5) {
        double v6 = 1.0;
      }
      [*(id *)(*(void *)(a1 + 32) + 976) setAlpha:v6];
    }
    else
    {
      [v3[122] setAlpha:0.0];
    }
    [*(id *)(*(void *)(a1 + 32) + 976) alpha];
    [*(id *)(*(void *)(a1 + 32) + 984) setAlpha:];
  }
  uint64_t v7 = sub_1000C49B4();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = *(id *)(a1 + 32);
    if (!v8)
    {
      __int16 v13 = @"<nil>";
      goto LABEL_17;
    }
    id v9 = (objc_class *)objc_opt_class();
    uint64_t v10 = NSStringFromClass(v9);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v11 = [v8 performSelector:"accessibilityIdentifier"];
      uint64_t v12 = v11;
      if (v11 && ![v11 isEqualToString:v10])
      {
        __int16 v13 = +[NSString stringWithFormat:@"%@<%p, %@>", v10, v8, v12];

        goto LABEL_15;
      }
    }
    __int16 v13 = +[NSString stringWithFormat:@"%@<%p>", v10, v8];
LABEL_15:

LABEL_17:
    id v14 = *(void **)(*(void *)(a1 + 32) + 976);
    uint64_t v15 = v13;
    [v14 alpha];
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(*(void *)(a1 + 32) + 976);

    *(_DWORD *)buf = 138543874;
    uint64_t v20 = v13;
    __int16 v21 = 2048;
    uint64_t v22 = v17;
    __int16 v23 = 1024;
    BOOL v24 = v18 != 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}@] Animating stale map effect to alpha: %f, hasSuperview: %d", buf, 0x1Cu);
  }
}

void sub_10004CC98(uint64_t a1, void *a2, void *a3)
{
  unsigned int v5 = a2;
  id v26 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v31 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v7 = WeakRetained;
    id v29 = objc_alloc_init((Class)NSMutableArray);
    v47[0] = 0;
    v47[1] = v47;
    v47[2] = 0x3032000000;
    v47[3] = sub_100104244;
    v47[4] = sub_1001049A0;
    id v48 = 0;
    group = dispatch_group_create();
    id v8 = [v7 _filterEntriesWithOverLappingRects:v5, v26];

    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    unsigned int v5 = v8;
    id v9 = [v5 countByEnumeratingWithState:&v43 objects:v49 count:16];
    uint64_t v10 = 0;
    if (v9)
    {
      uint64_t v11 = *(void *)v44;
      os_log_type_t v27 = v5;
      while (1)
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v44 != v11) {
            objc_enumerationMutation(v5);
          }
          __int16 v13 = *(void **)(*((void *)&v43 + 1) + 8 * i);
          if ([v13 type] == (id)1)
          {
            if (GEOConfigGetBOOL())
            {
              id v14 = [v13 geoMapItem];
              if (v14)
              {
                unsigned __int8 v15 = [*(id *)(a1 + 32) _homeAreaTipWasDismissed];

                if ((v15 & 1) == 0)
                {
                  if (*(_DWORD *)(*(void *)(a1 + 32) + 44) == 1)
                  {
                    uint64_t v16 = MapsSuggestionsMostRecentLocation();
                    BOOL v17 = v16 == 0;

                    if (v17) {
                      continue;
                    }
                    double v42 = 0.0;
                    MapsSuggestionsDistanceFromHereToEntry();
                    double v18 = v42;
                    if (v18 > (double)GEOConfigGetInteger()) {
                      continue;
                    }
                  }
                  dispatch_group_enter(group);
                  uint64_t v19 = v31[2];
                  v39[0] = _NSConcreteStackBlock;
                  v39[1] = 3221225472;
                  v39[2] = sub_100A1CA00;
                  v39[3] = &unk_101314928;
                  id v40 = v29;
                  unsigned int v5 = v27;
                  id v41 = group;
                  [v31 _fetchHomeAreaModelDataFromEntry:v13 onQueue:v19 completionHandler:v39];
                }
              }
            }
          }
          if ([v13 type] == (id)15
            && *(unsigned char *)(a1 + 72)
            && (!v10 || [v10 startsBeforeEntry:v13]))
          {
            id v20 = v13;

            uint64_t v10 = v20;
          }
        }
        id v9 = [v5 countByEnumeratingWithState:&v43 objects:v49 count:16];
        if (!v9)
        {

          if (v10)
          {
            dispatch_group_enter(group);
            uint64_t v21 = *(void *)(a1 + 40);
            v36[0] = _NSConcreteStackBlock;
            v36[1] = 3221225472;
            v36[2] = sub_100A1CA44;
            v36[3] = &unk_1013147C0;
            id v38 = v47;
            unsigned int v5 = v27;
            id v37 = group;
            [v31 _fetchAirportArrivalModelDataFromFlightEntry:v10 usingCurrentLocation:v21 completion:v36];
            uint64_t v22 = v37;
            goto LABEL_25;
          }
          goto LABEL_26;
        }
      }
    }
    uint64_t v22 = v5;
LABEL_25:

LABEL_26:
    __int16 v23 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100012994;
    block[3] = &unk_101314950;
    long long v28 = *(_OWORD *)(a1 + 48);
    id v24 = (id)v28;
    long long v34 = v28;
    id v33 = v29;
    id v35 = v47;
    id v25 = v29;
    dispatch_group_notify(group, v23, block);

    _Block_object_dispose(v47, 8);
  }
}

void sub_10004D118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
}

void sub_10004D3B0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = sub_10000B290();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = (objc_class *)objc_opt_class();
      unsigned int v5 = NSStringFromClass(v4);
      double v6 = NSStringFromSelector(*(SEL *)(a1 + 56));
      uint64_t v7 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      uint64_t v19 = v5;
      __int16 v20 = 2112;
      uint64_t v21 = v6;
      __int16 v22 = 2112;
      uint64_t v23 = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ %@, weather id location = %@", buf, 0x20u);
    }
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v8 = [WeakRetained[1] copy];
    id v9 = [v8 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v14;
      do
      {
        uint64_t v12 = 0;
        do
        {
          if (*(void *)v14 != v11) {
            objc_enumerationMutation(v8);
          }
          [*(id *)(*((void *)&v13 + 1) + 8 * (void)v12) weatherLocationDataProvider:WeakRetained didChangeLocation:*(void *)(a1 + 40)];
          uint64_t v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v10);
    }
  }
}

void sub_10004D55C(uint64_t a1)
{
  uint64_t v2 = dispatch_group_create();
  dispatch_group_enter(v2);
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x3032000000;
  v26[3] = sub_100104540;
  v26[4] = sub_100104B10;
  id v27 = 0;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x2020000000;
  char v25 = 0;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100CFD794;
  v21[3] = &unk_1012F17B8;
  uint64_t v23 = v26;
  uint64_t v3 = v2;
  __int16 v22 = v3;
  uint64_t v4 = objc_retainBlock(v21);
  v19[0] = 0;
  v19[1] = v19;
  v19[2] = 0x3032000000;
  v19[3] = sub_100104540;
  v19[4] = sub_100104B10;
  id v20 = 0;
  objc_initWeak(&location, *(id *)(a1 + 32));
  unsigned int v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 40);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000B728C;
  v12[3] = &unk_101321AF0;
  uint64_t v7 = v4;
  id v14 = v7;
  objc_copyWeak(&v17, &location);
  void v12[4] = *(void *)(a1 + 32);
  long long v15 = v19;
  long long v16 = v24;
  id v8 = v3;
  long long v13 = v8;
  [v5 _downloadManifestWithForce:v6 completion:v12];
  id v9 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  _DWORD v10[2] = sub_100030FA4;
  v10[3] = &unk_101321B18;
  objc_copyWeak(&v11, &location);
  void v10[4] = *(void *)(a1 + 32);
  void v10[5] = v26;
  v10[6] = v19;
  v10[7] = v24;
  dispatch_group_notify(v8, v9, v10);
  objc_destroyWeak(&v11);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(v19, 8);

  _Block_object_dispose(v24, 8);
  _Block_object_dispose(v26, 8);
}

void sub_10004D810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location,char a29)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v30 - 176), 8);
  _Block_object_dispose((const void *)(v30 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10004DF20()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (!v1)
  {
    uint64_t v7 = *(void **)(v0 + 88);
    NSString v6 = *(NSString *)(v0 + 96);
    uint64_t v1 = *(void **)(v0 + 64);
LABEL_21:

    long long v13 = (char *)(*(void *)(v0 + 56) + *(void *)(v0 + 72));
    goto LABEL_22;
  }
  uint64_t v2 = *(void *)(v0 + 48);
  [*(id *)(v0 + 16) expectedTravelTime];
  double v4 = v3;
  if (v2)
  {
    double v5 = *(double *)(v0 + 80);
  }
  else
  {
    [v1 distance];
    double v5 = v8;
  }
  if (qword_1015CBCB0 != -1) {
    swift_once();
  }
  *(unsigned char *)(*(void *)(v0 + 56) + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere) = v5 < *(double *)&qword_101611628;
  if (qword_1015CBCB8 != -1) {
    swift_once();
  }
  if (v4 >= *(double *)&qword_101611630)
  {
    id v17 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
    [v17 setAllowedUnits:112];
    [v17 setMaximumUnitCount:2];
    [v17 setZeroFormattingBehavior:2];
    if (v4 >= 3600.0) {
      uint64_t v18 = 1;
    }
    else {
      uint64_t v18 = 2;
    }
    [v17 setUnitsStyle:v18];
    id v19 = [v17 stringFromTimeInterval:v4];
    if (v19)
    {
      id v20 = v19;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {

      NSString v6 = 0;
    }
    uint64_t v21 = *(void **)(v0 + 88);
    uint64_t v7 = *(void **)(v0 + 96);
    __int16 v22 = *(void **)(v0 + 64);
    [*(id *)(v0 + 56) setSubtitle:v6];

    goto LABEL_21;
  }
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  id v9 = *(void **)(v0 + 88);
  id v10 = *(void **)(v0 + 96);
  id v11 = *(void **)(v0 + 64);
  uint64_t v12 = *(char **)(v0 + 56);
  long long v13 = &v12[*(void *)(v0 + 72)];
  v26._countAndFlagsBits = 0xD000000000000041;
  v26._object = (void *)0x8000000100F894A0;
  v14._object = (void *)0x8000000100F89480;
  v14._countAndFlagsBits = 0xD000000000000019;
  v15._countAndFlagsBits = 0x79622065736F6C43;
  v15._object = (void *)0xE800000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)qword_101611820, v15, v26);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setSubtitle:v16];

LABEL_22:
  *long long v13 = 0;
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

void sub_10004EE24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_10004F87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004FA98(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  double v3 = WeakRetained;
  if (!WeakRetained)
  {
    GEOFindOrCreateLog();
    uint64_t v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v12 = "RideBookingDataCoordinator.m";
      __int16 v13 = 1026;
      LODWORD(v14[0]) = 810;
      WORD2(v14[0]) = 2082;
      *(void *)((char *)v14 + 6) = "-[RideBookingDataCoordinator addRideBookingDataCoordinatorRideStatusObserver:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }

    goto LABEL_11;
  }
  [WeakRetained[22] addObject:*(void *)(a1 + 32)];
  double v4 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    double v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
    id v6 = [objc_alloc((Class)NSString) initWithFormat:@"Added RideStatus observer: %@", *(void *)(a1 + 32)];
    *(_DWORD *)buf = 136315394;
    uint64_t v12 = v5;
    __int16 v13 = 2112;
    v14[0] = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
  }
  if (objc_opt_respondsToSelector())
  {
    uint64_t v7 = [v3[23] copy];
    double v8 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v10 = [objc_alloc((Class)NSString) initWithFormat:@"Notifying observer %@ of ride status change %@", *(void *)(a1 + 32), v7];
      *(_DWORD *)buf = 136315394;
      uint64_t v12 = v9;
      __int16 v13 = 2112;
      v14[0] = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    [*(id *)(a1 + 32) rideStatusMapDidChange:v7];
LABEL_11:
  }
}

void sub_100050074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1000502AC(id a1, id a2, NSDictionary *a3)
{
  id v3 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_100050540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10005056C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_100050660(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v28 = a1;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v6)
    {
      double v8 = sub_1000493C0();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v45 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "[MapsOfflineUIHelper] subscription fetch error: %@", buf, 0xCu);
      }

      uint64_t v9 = *(void *)(v28 + 40);
      if (v9) {
        (*(void (**)(uint64_t, void, id))(v9 + 16))(v9, 0, v6);
      }
    }
    else
    {
      id v10 = sub_1000AC254(v5, &stru_1013027F0);
      [WeakRetained setSubscriptions:v10];

      id v11 = [WeakRetained subscriptions];
      id v12 = [v11 count];

      if (!v12) {
        GEOConfigSetBOOL();
      }
      id v26 = v5;
      __int16 v13 = +[NSMutableArray array];
      Swift::String v14 = dispatch_group_create();
      long long v39 = 0u;
      long long v40 = 0u;
      long long v41 = 0u;
      long long v42 = 0u;
      Swift::String v15 = WeakRetained;
      id obj = [WeakRetained subscriptions];
      id v16 = [obj countByEnumeratingWithState:&v39 objects:v43 count:16];
      if (v16)
      {
        id v17 = v16;
        uint64_t v18 = *(void *)v40;
        do
        {
          for (uint64_t i = 0; i != v17; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v40 != v18) {
              objc_enumerationMutation(obj);
            }
            id v20 = *(void **)(*((void *)&v39 + 1) + 8 * i);
            dispatch_group_enter(v14);
            uint64_t v21 = [v15 subscriptionManager];
            __int16 v22 = [v20 identifier];
            v34[0] = _NSConcreteStackBlock;
            v34[1] = 3221225472;
            v34[2] = sub_1009322F4;
            v34[3] = &unk_101302818;
            id v35 = v14;
            id v38 = *(id *)(v28 + 40);
            long long v36 = v20;
            id v37 = v13;
            [v21 fetchStateForSubscriptionWithIdentifier:v22 callbackQueue:&_dispatch_main_q completionHandler:v34];
          }
          id v17 = [obj countByEnumeratingWithState:&v39 objects:v43 count:16];
        }
        while (v17);
      }

      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10001DFA8;
      block[3] = &unk_1012EDA50;
      id v30 = v13;
      id v31 = v15;
      id WeakRetained = v15;
      id v23 = *(id *)(v28 + 40);
      uint64_t v32 = *(void *)(v28 + 32);
      id v33 = v23;
      id v24 = v13;
      dispatch_group_notify(v14, (dispatch_queue_t)&_dispatch_main_q, block);

      id v6 = v25;
      id v5 = v26;
    }
  }
}

void sub_100050FE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000C49B4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_10;
    }
    id v6 = (objc_class *)objc_opt_class();
    uint64_t v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      double v8 = [v5 performSelector:"accessibilityIdentifier"];
      uint64_t v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
    id v11 = [v3 object];
    *(_DWORD *)buf = 138543618;
    uint64_t v18 = v10;
    __int16 v19 = 2114;
    id v20 = v11;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] notified external container did appear %{public}@", buf, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v12 = +[NSNotificationCenter defaultCenter];
  [v12 removeObserver:*(void *)(*(void *)(a1 + 32) + 792)];

  uint64_t v13 = *(void *)(a1 + 32);
  Swift::String v14 = *(void **)(v13 + 792);
  *(void *)(v13 + 792) = 0;

  uint64_t v15 = *(void *)(a1 + 32);
  id v16 = *(void **)(v15 + 800);
  *(void *)(v15 + 800) = 0;
}

void sub_100051204(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
  id v5 = sub_1000C49B4();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (v4)
  {
    if (!v6)
    {
LABEL_20:

      goto LABEL_26;
    }
    id v7 = *(id *)(a1 + 32);
    if (!v7)
    {
      id v12 = @"<nil>";
      goto LABEL_19;
    }
    double v8 = (objc_class *)objc_opt_class();
    uint64_t v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      id v10 = [v7 performSelector:"accessibilityIdentifier"];
      id v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v12 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_9;
      }
    }
    id v12 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_9:

LABEL_19:
    uint64_t v19 = *(void *)(a1 + 40);
    uint64_t v20 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    uint64_t v28 = v12;
    __int16 v29 = 2112;
    uint64_t v30 = v19;
    __int16 v31 = 2112;
    uint64_t v32 = v20;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}@] _transitionToFullscreenViewController animate alongside completion early exit %@ %@", buf, 0x20u);

    goto LABEL_20;
  }
  if (v6)
  {
    id v13 = *(id *)(a1 + 32);
    if (!v13)
    {
      uint64_t v18 = @"<nil>";
      goto LABEL_22;
    }
    Swift::String v14 = (objc_class *)objc_opt_class();
    uint64_t v15 = NSStringFromClass(v14);
    if (objc_opt_respondsToSelector())
    {
      id v16 = [v13 performSelector:"accessibilityIdentifier"];
      id v17 = v16;
      if (v16 && ![v16 isEqualToString:v15])
      {
        uint64_t v18 = +[NSString stringWithFormat:@"%@<%p, %@>", v15, v13, v17];

        goto LABEL_17;
      }
    }
    uint64_t v18 = +[NSString stringWithFormat:@"%@<%p>", v15, v13];
LABEL_17:

LABEL_22:
    uint64_t v21 = *(void *)(a1 + 40);
    uint64_t v22 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    uint64_t v28 = v18;
    __int16 v29 = 2112;
    uint64_t v30 = v21;
    __int16 v31 = 2112;
    uint64_t v32 = v22;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}@] _transitionToFullscreenViewController animate alongside completion %@ %@", buf, 0x20u);
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) = 1;
  [*(id *)(a1 + 56) setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v23) = 1148846080;
  id v24 = [*(id *)(a1 + 56) _maps_constraintsEqualToEdgesOfView:*(void *)(a1 + 64) priority:v23];
  uint64_t v25 = [v24 allConstraints];
  +[NSLayoutConstraint activateConstraints:v25];

  [*(id *)(a1 + 72) removeFromSuperview];
  [*(id *)(a1 + 80) removeFromParentViewController];
  [*(id *)(a1 + 40) didMoveToParentViewController:*(void *)(a1 + 32)];
  uint64_t v26 = *(void *)(a1 + 88);
  if (v3) {
    (*(void (**)(uint64_t, void))(v26 + 16))(v26, [v3 isCancelled] ^ 1);
  }
  else {
    (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v26, 1);
  }
LABEL_26:
}

void sub_100051774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100051830(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1000519B4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = [*(id *)(a1 + 32) selectedVehicle];
      id v5 = [v4 combinedDisplayName];
      BOOL v6 = [*(id *)(a1 + 32) vehicles];
      int v10 = 138412546;
      id v11 = v5;
      __int16 v12 = 2048;
      id v13 = [v6 count];
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "AutomaticVehicleSelectionTask: _updateGarage. selectedVehicle: %@, vehicleCount: %lu", (uint8_t *)&v10, 0x16u);
    }
    id v7 = WeakRetained + 2;
    double v8 = *(void **)(a1 + 32);
    if (WeakRetained[2])
    {
      objc_storeStrong(v7, v8);
    }
    else
    {
      objc_storeStrong(v7, v8);
      if (v8)
      {
        uint64_t v9 = sub_1000519B4();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
          LOWORD(v10) = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "AutomaticVehicleSelectionTask: _updateGarage. Received first garage update -> will update vehicle selection", (uint8_t *)&v10, 2u);
        }

        [WeakRetained _updateVehicleSelectionIfNeeded];
      }
    }
  }
}

id sub_1000519B4()
{
  if (qword_101612128 != -1) {
    dispatch_once(&qword_101612128, &stru_1012EFAB8);
  }
  uint64_t v0 = (void *)qword_101612120;

  return v0;
}

void sub_100051B54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10005366C(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_1000536C4(void *a1)
{
  uint64_t v2 = (char *)[a1 type];
  uint64_t result = 1;
  if ((unint64_t)(v2 - 7) >= 0x12)
  {
    switch((unint64_t)v2)
    {
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
        return result;
      case 5uLL:
        uint64_t result = (uint64_t)[a1 geoMapItem];
        if (result)
        {

          uint64_t result = 1;
        }
        break;
      default:
        uint64_t result = 0;
        break;
    }
  }
  return result;
}

id sub_10005375C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = sub_1000FB03C();
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 identifierPathByAppendingIdentifier:v6];

    double v8 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v7;
    id v4 = v7;

    id v3 = 0;
  }
  id v9 = v3;
  return v4;
}

id sub_100053B74()
{
  if (qword_101610BB8 != -1) {
    dispatch_once(&qword_101610BB8, &stru_10131C188);
  }
  uint64_t v0 = (void *)qword_101610BB0;

  return v0;
}

void sub_100053F84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_100054328(uint64_t a1)
{
  uint64_t v2 = sub_10008A498();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      double v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      NSString v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        double v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    double v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543362;
    id v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] initialising CN properties to fetch", buf, 0xCu);
  }
  id v9 = +[CNContactFormatter descriptorForRequiredKeysForStyle:0];
  v15[0] = v9;
  int v10 = +[CNContactContentViewController descriptorForRequiredKeys];
  v15[1] = v10;
  id v11 = +[CNMonogrammer descriptorForRequiredKeysIncludingImage:1];
  void v15[2] = v11;
  __int16 v12 = +[CNContactVCardSerialization descriptorForRequiredKeys];
  v15[3] = v12;
  void v15[4] = CNContactNamePrefixKey;
  v15[5] = CNContactGivenNameKey;
  v15[6] = CNContactMiddleNameKey;
  v15[7] = CNContactFamilyNameKey;
  v15[8] = CNContactNameSuffixKey;
  v15[9] = CNContactNicknameKey;
  v15[10] = CNContactPhoneticGivenNameKey;
  v15[11] = CNContactPhoneticMiddleNameKey;
  v15[12] = CNContactPhoneticFamilyNameKey;
  v15[13] = CNContactOrganizationNameKey;
  v15[14] = CNContactTypeKey;
  v15[15] = CNContactPhoneNumbersKey;
  v15[16] = CNContactEmailAddressesKey;
  v15[17] = CNContactPostalAddressesKey;
  v15[18] = CNContactUrlAddressesKey;
  v15[19] = CNContactImageDataAvailableKey;
  v15[20] = CNContactImageDataKey;
  v15[21] = CNContactThumbnailImageDataKey;
  uint64_t v13 = +[NSArray arrayWithObjects:v15 count:22];
  Swift::String v14 = (void *)qword_10160F068;
  qword_10160F068 = v13;
}

char *sub_100054B18(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_observers;
  id v4 = objc_allocWithZone((Class)NSHashTable);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherService;
  type metadata accessor for WeatherService();
  *(void *)&v5[v6] = WeatherService.__allocating_init()();
  *(void *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_currentLocaleBlockObserver] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation] = 0;
  v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled] = 1;
  *(void *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_traitEnvironment] = a1;
  swift_unknownObjectRetain();

  v17.unint64_t receiver = v5;
  v17.Class super_class = (Class)type metadata accessor for WeatherConditionsDataProvider();
  id v7 = [super init];
  double v8 = self;
  id v9 = (char *)v7;
  id v10 = [v8 defaultCenter];
  id v11 = [self mainQueue];
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16[4] = sub_100268710;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1002FDA50;
  v16[3] = &unk_1012E04B8;
  uint64_t v13 = _Block_copy(v16);
  swift_release();
  id v14 = [v10 addObserverForName:NSCurrentLocaleDidChangeNotification object:0 queue:v11 usingBlock:v13];
  swift_unknownObjectRelease();

  _Block_release(v13);
  *(void *)&v9[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_currentLocaleBlockObserver] = v14;
  swift_unknownObjectRelease();
  return v9;
}

void sub_10005559C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose((const void *)(v33 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1000558F4(_Unwind_Exception *a1)
{
  uint64_t v6 = v2;
  objc_destroyWeak(v6);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 104));
  _Unwind_Resume(a1);
}

void sub_100055B48(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MKLocationManager sharedLocationManager];
  unsigned int v5 = [v4 isAuthorizedForPreciseLocation];

  uint64_t v6 = &__NSArray0__struct;
  if (v5) {
    uint64_t v6 = v3;
  }
  id v7 = v6;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100014954;
  block[3] = &unk_1012E80F0;
  double v8 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v11 = v7;
  id v12 = v8;
  id v9 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100055E54(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

id sub_100056074(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)FeatureDiscoveryDataProvider) init];
  uint64_t v3 = a1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
  sub_1000F1C90(v3, (uint64_t)v9);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v9);
  if (Strong)
  {
    id v5 = [Strong homeTransitPayActionDelegate];
    swift_unknownObjectRelease();
  }
  else
  {
    id v5 = 0;
  }
  [v2 setTransitPayActionDelegate:v5];
  swift_unknownObjectRelease();
  sub_1000F1C90(v3, (uint64_t)v9);
  uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v9);
  if (v6)
  {
    id v7 = [v6 homeOfflineMapsDiscoveryActionDelegate];
    swift_unknownObjectRelease();
  }
  else
  {
    id v7 = 0;
  }
  [v2 setOfflineMapsDiscoveryActionDelegate:v7];
  swift_unknownObjectRelease();
  return v2;
}

void sub_1000565B4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100057128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000578B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100057AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100057BC8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_host);
  if (!v1) {
    return;
  }
  uint64_t v2 = v0;
  uint64_t v3 = OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController);
  if (v4)
  {
    swift_unknownObjectRetain();
    id v5 = v4;
    id v6 = [v5 parentViewController];
    if (v6)
    {

      [v5 willMoveToParentViewController:0];
      if ([v5 isViewLoaded])
      {
        id v7 = [v5 view];
        if (!v7)
        {
          __break(1u);
          return;
        }
        double v8 = v7;
        [v7 removeFromSuperview];
      }
      [v5 removeFromParentViewController];
      sub_10014534C();
    }

    id v9 = *(void **)(v2 + v3);
    if (v9) {
      goto LABEL_13;
    }
  }
  else
  {
    swift_unknownObjectRetain();
  }
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v11 = objc_allocWithZone((Class)type metadata accessor for RedoSearchContainerViewController());
  id v12 = sub_100008E54((uint64_t)sub_10014550C, v10);
  swift_release();
  uint64_t v13 = *(void **)(v2 + v3);
  *(void *)(v2 + v3) = v12;

  id v9 = *(void **)(v2 + v3);
  if (v9)
  {
LABEL_13:
    id v14 = v9;
    id v28 = [v1 containingViewController];
    [v14 willMoveToParentViewController:];
    id v15 = [v1 overlayContentView];
    id v16 = *(void **)(v2 + v3);
    if (v16 && (id v17 = [v16 view]) != 0)
    {
      uint64_t v18 = v17;
      id v19 = [v17 superview];
      if (!v19) {
        goto LABEL_17;
      }
      uint64_t v20 = v19;
      sub_100100830(0, (unint64_t *)&qword_1015CF000);
      id v21 = v15;
      id v22 = v20;
      LOBYTE(v20) = static NSObject.== infix(_:_:)();

      if ((v20 & 1) == 0)
      {
LABEL_17:
        [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
        [v15 addSubview:v18];
        sub_10010DF84();
        id v21 = v15;
      }
    }
    else
    {
      uint64_t v18 = v15;
    }

    [v14 didMoveToParentViewController:v28];
    double v23 = *(void **)(v2 + v3);
    if (v23 && (id v24 = [v23 view]) != 0)
    {
      double v25 = 0.0;
      if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden) & 1) == 0) {
        double v25 = *(double *)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayAlpha);
      }
      [v24 setAlpha:v25];
      swift_unknownObjectRelease();

      uint64_t v26 = v27;
    }
    else
    {
      swift_unknownObjectRelease();

      uint64_t v26 = v28;
    }

    return;
  }

  swift_unknownObjectRelease();
}

uint64_t sub_100057F68()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v3 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v7 = (char *)result;
    uint64_t v20 = v2;
    type metadata accessor for MapsSyncQueryPredicate();
    static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
    id v8 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
    id v9 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    type metadata accessor for FavoriteItemRequest();
    uint64_t v10 = (void *)FavoriteItemRequest.__allocating_init()();
    id v11 = v9;
    uint64_t v12 = dispatch thunk of FavoriteItemRequest.fetchSync(options:)();
    uint64_t v19 = v3;
    uint64_t v13 = v12;

    *(void *)&v7[OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource_queryContents] = v13;
    swift_bridgeObjectRelease();
    id v14 = sub_10002B6B8();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10010CAA8;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008C380;
    aBlock[3] = &unk_1012DDC60;
    id v16 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    double v23 = _swiftEmptyArrayStorage;
    sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
    id v17 = v20;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v0);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v22);
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_100058698()
{
  uint64_t v0 = self;
  id v1 = [v0 fractionalWidthDimension:1.0];
  id v2 = [v0 estimatedDimension:200.0];
  id v3 = [self sizeWithWidthDimension:v1 heightDimension:v2];

  id v4 = [self itemWithLayoutSize:v3];
  id v5 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
  *(void *)(v6 + 32) = v4;
  specialized Array._endMutation()();
  sub_10010B2F0();
  id v7 = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v5 verticalGroupWithLayoutSize:v3 subitems:isa];

  id v10 = [self sectionWithGroup:v9];
  return v10;
}

uint64_t sub_100058EC4(uint64_t a1, uint64_t a2, double a3)
{
  BOOL v5 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16)
      && *(unsigned __int8 *)(a1 + 17) == *(unsigned __int8 *)(a2 + 17)
      && (sub_1000590FC(a1 + 24, a2 + 24, a3) & 1) != 0)
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
      {
        return 1;
      }
      else
      {
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100058F88()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong || (*(void *)&long long v6 = Strong, (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_9;
  }
  if (!*((void *)&v10 + 1))
  {
LABEL_9:
    id v2 = &v9;
    goto LABEL_10;
  }
  v12[0] = v9;
  v12[1] = v10;
  uint64_t v13 = v11;
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v7 + 1))
    {
      long long v9 = v6;
      long long v10 = v7;
      uint64_t v11 = v8;
      LOBYTE(v1) = static AnyHashable.== infix(_:_:)();
      sub_1000F351C((uint64_t)&v9);
      sub_1000F351C((uint64_t)v12);
      return v1 & 1;
    }
  }
  else
  {
    uint64_t v8 = 0;
    long long v6 = 0u;
    long long v7 = 0u;
  }
  sub_1000F351C((uint64_t)v12);
  id v2 = &v6;
LABEL_10:
  sub_10010A7C4((uint64_t)v2);
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  uint64_t v1 = v4;
  if (v3)
  {
    swift_unknownObjectRelease();
    if (v1)
    {
      swift_unknownObjectRelease();
      LOBYTE(v1) = v3 == v1;
    }
  }
  else if (v4)
  {
    swift_unknownObjectRelease();
    LOBYTE(v1) = 0;
  }
  else
  {
    LOBYTE(v1) = 1;
  }
  return v1 & 1;
}

void sub_100059100(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 32) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100059A70()
{
  if (qword_10160EA88 != -1) {
    dispatch_once(&qword_10160EA88, &stru_1012E7980);
  }
  uint64_t v0 = (void *)qword_10160EA80;

  return v0;
}

id sub_10005A2F4()
{
  uint64_t v0 = self;
  id v1 = [v0 fractionalWidthDimension:1.0];
  [self estimatedHeightForContext:0];
  id v2 = [v0 estimatedDimension];
  id v3 = [self sizeWithWidthDimension:v1 heightDimension:v2];

  id v4 = [self itemWithLayoutSize:v3];
  BOOL v5 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
  *(void *)(v6 + 32) = v4;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015D4330);
  id v7 = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v5 verticalGroupWithLayoutSize:v3 subitems:isa];

  id v10 = [self sectionWithGroup:v9];
  return v10;
}

void sub_10005A8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005AF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id location)
{
  objc_destroyWeak(v42);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double sub_10005AFC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) containerStyle] == (id)4) {
    double v4 = UISheetPresentationControllerDetentInactive;
  }
  else {
    double v4 = (*(double (**)(void))(*(void *)(a1 + 40) + 16))();
  }

  return v4;
}

void sub_10005B9FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005BEC4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 80));
  _Unwind_Resume(a1);
}

void sub_10005BEF8(uint64_t a1)
{
  id v2 = sub_10005C134();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = objc_opt_class();
    double v4 = *(const char **)(a1 + 48);
    id v5 = v3;
    uint64_t v6 = NSStringFromSelector(v4);
    *(_DWORD *)buf = 138412546;
    uint64_t v21 = v3;
    __int16 v22 = 2112;
    uint64_t v23 = (uint64_t)v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%@ %@: Checking if isTransitUserHere", buf, 0x16u);
  }
  id v7 = sub_100018584();
  uint64_t v8 = [v7 oneInsights];
  unsigned int v9 = [v8 isTransitUserHere];
  id v10 = sub_10005C134();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = objc_opt_class();
    uint64_t v12 = *(const char **)(a1 + 48);
    id v13 = v11;
    uint64_t v14 = NSStringFromSelector(v12);
    uint64_t v15 = (void *)v14;
    CFStringRef v16 = @"No";
    *(_DWORD *)buf = 138412802;
    uint64_t v21 = v11;
    __int16 v22 = 2112;
    if (v9) {
      CFStringRef v16 = @"Yes";
    }
    uint64_t v23 = v14;
    __int16 v24 = 2112;
    CFStringRef v25 = v16;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%@ %@: isTransitUserHere: %@", buf, 0x20u);
  }
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100108038;
  v17[3] = &unk_1012E6830;
  objc_copyWeak(&v18, (id *)(a1 + 40));
  char v19 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v17);
  objc_destroyWeak(&v18);
}

id sub_10005C134()
{
  if (qword_101611FB8 != -1) {
    dispatch_once(&qword_101611FB8, &stru_1012EF7D8);
  }
  uint64_t v0 = (void *)qword_101611FB0;

  return v0;
}

id sub_10005C188(void *a1, void *a2, void *a3)
{
  swift_unknownObjectWeakInit();
  id v7 = &v3[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_audioKey];
  *id v7 = 0xD000000000000023;
  v7[1] = 0x8000000100F77660;
  uint64_t v8 = &v3[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_signKey];
  void *v8 = 0xD00000000000002BLL;
  v8[1] = 0x8000000100F775F0;
  unsigned int v9 = &v3[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_persistedConfigurationKey];
  *unsigned int v9 = 0xD000000000000019;
  v9[1] = 0x8000000100F77540;
  v3[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_isApplyingConfiguration] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration] = 0;
  v3[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userModifiedConfigurationDuringNavigation] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&v3[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults] = a2;
  *(void *)&v3[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_audioPreferences] = a3;
  v20.unint64_t receiver = v3;
  v20.Class super_class = (Class)type metadata accessor for NavigationAlertsOnlyOverrideSynchronizationTask();
  id v10 = a2;
  id v11 = a3;
  id v12 = [super init];
  sub_10003F484();
  id v13 = v12;
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 addObserver:v13 forKeyPath:v14 options:1 context:0 v20];

  id v15 = v13;
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 addObserver:v15 forKeyPath:v16 options:1 context:0];

  id v17 = [self defaultCenter];
  id v18 = v15;
  [v17 addObserver:v18 selector:"applicationWillTerminate" name:UIApplicationWillTerminateNotification object:0];

  return v18;
}

void sub_10005C400()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_constraints);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (*v1)
  {
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v18) {
        return;
      }
    }
    else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return;
    }
  }
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_host);
  if (v3)
  {
    double v4 = (objc_class *)[v3 layoutGuideForOverlay:v0];
    if (v4)
    {
      Class v5 = v4;
      uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController);
      if (v6)
      {
        id v7 = (objc_class *)[v6 view];
        if (v7)
        {
          Class v8 = v7;
          sub_1000FF33C(&qword_1015CD310);
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_100F5F0D0;
          id v10 = [(objc_class *)v8 centerXAnchor];
          id v11 = [(objc_class *)v5 centerXAnchor];
          id v12 = [v10 constraintEqualToAnchor:v11];

          *(void *)(v9 + 32) = v12;
          id v13 = [(objc_class *)v8 bottomAnchor];
          id v14 = [(objc_class *)v5 bottomAnchor];
          id v15 = [v13 constraintEqualToAnchor:v14];

          *(void *)(v9 + 40) = v15;
          specialized Array._endMutation()();
          *id v1 = v9;
          swift_bridgeObjectRelease();
          if (*v1)
          {
            NSString v16 = self;
            sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
            swift_bridgeObjectRetain();
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v16 activateConstraints:isa];

            Class v5 = v8;
            Class v8 = isa;
          }

          Class v5 = v8;
        }
      }
    }
  }
}

void sub_10005CE94(uint64_t a1)
{
  unint64_t v2 = sub_1000C49B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = [*(id *)(a1 + 40) count];
    *(_DWORD *)buf = 134349570;
    id v27 = WeakRetained;
    __int16 v28 = 2112;
    uint64_t v29 = v4;
    __int16 v30 = 2048;
    id v31 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] [%@] begin completion with %lu completion blocks", buf, 0x20u);
  }
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id obj = *(id *)(a1 + 40);
  id v6 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v8) {
          objc_enumerationMutation(obj);
        }
        id v10 = *(void (***)(void, void, void, void))(*((void *)&v21 + 1) + 8 * i);
        id v11 = sub_1000C49B4();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          id v12 = objc_loadWeakRetained((id *)(a1 + 56));
          uint64_t v13 = *(void *)(a1 + 32);
          id v14 = objc_retainBlock(v10);
          *(_DWORD *)buf = 134349570;
          id v27 = v12;
          __int16 v28 = 2112;
          uint64_t v29 = v13;
          __int16 v30 = 2112;
          id v31 = v14;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "[%{public}p] [%@] calling completion block: %@", buf, 0x20u);
        }
        v10[2](v10, *(void *)(a1 + 32), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 64));
      }
      id v7 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v7);
  }

  id v15 = objc_loadWeakRetained((id *)(a1 + 56));
  [v15 _completeOperation];

  NSString v16 = sub_1000C49B4();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    id v17 = objc_loadWeakRetained((id *)(a1 + 56));
    uint64_t v18 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 134349314;
    id v27 = v17;
    __int16 v28 = 2112;
    uint64_t v29 = v18;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "[%{public}p] [%@] finish completion", buf, 0x16u);
  }
  char v19 = sub_1000C49B4();
  if (os_signpost_enabled(v19))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "\"ContextOperation\"", "", buf, 2u);
  }
}

void sub_10005D878()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_10005D8CC();
  }
}

void sub_10005D8CC()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_isActive) == 1)
  {
    uint64_t v1 = v0;
    id v2 = sub_1000F2C80();
    unsigned __int8 v3 = [v2 hasInitialData];

    unint64_t v4 = (unint64_t)_swiftEmptyArrayStorage;
    if ((v3 & 1) == 0)
    {
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_100F5DFF0;
      *(void *)(v5 + 32) = sub_1000F2C80();
      specialized Array._endMutation()();
      unint64_t v4 = v5;
    }
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    id v7 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer);
    if (!v7 || (unsigned __int8 v8 = [v7 isValid], v6 < 1) || (v8 & 1) == 0)
    {
      uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate);
      swift_beginAccess();
      uint64_t v10 = *v9;
      if (*(void *)(*v9 + 16))
      {
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate))
        {
          uint64_t v11 = OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate;
          int v12 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate);
          swift_bridgeObjectRetain();
          int v13 = 0;
LABEL_26:
          *(unsigned char *)(v1 + v11) = 0;
          *uint64_t v9 = (uint64_t)&_swiftEmptySetSingleton;
          swift_bridgeObjectRelease();
          sub_1000F5D4C(v10, v12, v13);
          swift_bridgeObjectRelease();
          return;
        }
      }
      else if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate))
      {
        return;
      }
      *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate) = 1;
      uint64_t v14 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
      uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
      if (v15)
      {
        NSString v16 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
        int64_t v17 = *(void *)(v15 + 16);
        if (v17) {
          goto LABEL_15;
        }
      }
      else
      {
        NSString v16 = sub_1000F0E20();
        *(void *)(v1 + v14) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (*(void *)(v1 + v14))
        {
          uint64_t v22 = swift_bridgeObjectRetain();
          sub_1000716FC(v22);
        }
        else
        {
          *(void *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          unint64_t v23 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
          long long v24 = (unint64_t *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
          swift_beginAccess();
          *long long v24 = v23;
        }
        swift_bridgeObjectRelease();
        int64_t v17 = v16[2];
        if (v17)
        {
LABEL_15:
          swift_bridgeObjectRetain();
          sub_1000F3570(0, v17, 0);
          for (uint64_t i = 0; i != v17; ++i)
          {
            unint64_t v19 = _swiftEmptyArrayStorage[2];
            unint64_t v20 = _swiftEmptyArrayStorage[3];
            long long v25 = *(_OWORD *)&v16[2 * i + 4];
            id v21 = (id)v25;
            if (v19 >= v20 >> 1) {
              sub_1000F3570(v20 > 1, v19 + 1, 1);
            }
            _swiftEmptyArrayStorage[2] = v19 + 1;
            *(_OWORD *)&_swiftEmptyArrayStorage[2 * v19 + 4] = v25;
          }
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_25:
      uint64_t v10 = sub_1000466E4((uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      int v12 = 0;
      uint64_t v11 = OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate;
      int v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate);
      goto LABEL_26;
    }
  }
}

void sub_10005DC24(id a1)
{
  uint64_t v1 = +[MapsSuggestionsEngineBuilder forDevice];
  id v2 = objc_alloc_init(MapsSuggestionsMKLocationManagerAdapter);
  unsigned __int8 v3 = (void *)qword_101610CE8;
  qword_101610CE8 = (uint64_t)v2;

  uint64_t v22 = objc_opt_class();
  unint64_t v4 = +[NSArray arrayWithObjects:&v22 count:1];
  uint64_t v5 = [v1 withSourceClasses:v4];

  if (GEOConfigGetBOOL())
  {
    uint64_t v21 = objc_opt_class();
    uint64_t v6 = +[NSArray arrayWithObjects:&v21 count:1];
    uint64_t v7 = [v5 withSourceClasses:v6];

    uint64_t v5 = (void *)v7;
  }
  unsigned __int8 v8 = [v5 withFavorites];

  uint64_t v9 = [v8 withLocationUpdater:qword_101610CE8];

  uint64_t v15 = 0;
  NSString v16 = &v15;
  uint64_t v17 = 0x3032000000;
  uint64_t v18 = sub_100104490;
  unint64_t v19 = sub_100104AB8;
  id v10 = v9;
  id v20 = v10;
  id v14 = objc_alloc_init((Class)MapsSuggestionsShortcutTitleFormatter);
  MapsSuggestionsEntryTypeEnumerate();
  id v11 = (id)v16[5];

  _Block_object_dispose(&v15, 8);
  uint64_t v12 = [v11 build];
  int v13 = (void *)qword_101610CE0;
  qword_101610CE0 = v12;
}

void sub_10005DE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10005E374(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v6 = [v4 traitCollection];
    uint64_t v7 = [v6 preferredContentSizeCategory];
    BOOL IsAccessibilityCategory = UIContentSizeCategoryIsAccessibilityCategory(v7);

    uint64_t v9 = [v4 container];
    [v9 effectiveContentSize];
    double v11 = v10;

    if (+[LibraryUIUtilities isMyPlacesEnabled]) {
      double v12 = 16.0;
    }
    else {
      double v12 = 32.0;
    }
    double v13 = v12 + -13.0;
    if (IsAccessibilityCategory) {
      double v14 = v12;
    }
    else {
      double v14 = v12 + -13.0;
    }
    if (IsAccessibilityCategory) {
      double v15 = 0.0;
    }
    else {
      double v15 = v12 + -13.0;
    }
    NSString v16 = [v4 traitCollection];
    +[ShortcutsRowCollectionViewCell cellSizeWithTraitCollection:v16];
    double v18 = v17;

    if (v11 <= 0.0 || v18 <= 0.0)
    {
      double v13 = v15;
    }
    else
    {
      double v19 = v11 - v14;
      if (IsAccessibilityCategory)
      {
        +[ShortcutsRowCollectionViewCell imageSize];
        id v20 = [v4 traitCollection];
        [v20 _maps_displayScaleOrMainScreenScale];
        UIRoundToScale();
        double v22 = v19 - v21;

        if (v18 >= v22) {
          double v18 = v22;
        }
        double v13 = 0.0;
        double v14 = v12;
      }
      else
      {
        double v35 = v19 - floor(v19 / v18) * v18;
        double v14 = v12 + -13.0;
        if (v35 < 29.0)
        {
          long long v36 = [v4 traitCollection];
          [v36 _maps_displayScaleOrMainScreenScale];
          UICeilToScale();
          double v38 = v37;

          +[ShortcutsRowCollectionViewCell textHorizontalMargin];
          if (v38 <= v39)
          {
            +[ShortcutsRowCollectionViewCell textHorizontalMargin];
            double v38 = v40;
          }
          double v18 = v18 + -26.0 + v38 * 2.0;
          double v13 = v12 - v38;
          double v14 = v13;
        }
      }
    }
    long long v24 = +[NSCollectionLayoutDimension absoluteDimension:v18];
    double v25 = 1.0;
    if (IsAccessibilityCategory) {
      double v25 = 0.5;
    }
    uint64_t v26 = +[NSCollectionLayoutDimension fractionalHeightDimension:v25];
    id v27 = +[NSCollectionLayoutSize sizeWithWidthDimension:v24 heightDimension:v26];

    __int16 v28 = +[NSCollectionLayoutItem itemWithLayoutSize:v27];
    uint64_t v29 = [v27 widthDimension];
    __int16 v30 = +[NSCollectionLayoutDimension fractionalHeightDimension:1.0];
    id v31 = +[NSCollectionLayoutSize sizeWithWidthDimension:v29 heightDimension:v30];

    long long v41 = v28;
    uint64_t v32 = +[NSArray arrayWithObjects:&v41 count:1];
    uint64_t v33 = +[NSCollectionLayoutGroup verticalGroupWithLayoutSize:v31 subitems:v32];

    unint64_t v23 = +[NSCollectionLayoutSection sectionWithGroup:v33];
    [v23 setContentInsets:0.0, v14, 0.0, v13];
  }
  else
  {
    unint64_t v23 = 0;
  }

  return v23;
}

void sub_10005EF40(uint64_t a1)
{
  id v2 = sub_1000C49B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      unsigned __int8 v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    uint64_t v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      uint64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        unsigned __int8 v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    unsigned __int8 v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    *(void *)&uint8_t buf[4] = v8;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v9;
    *(_WORD *)&buf[22] = 2112;
    uint64_t v26 = v10;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] _transitionToFullscreenViewController prep block %@ for context %@", buf, 0x20u);
  }
  if (*(void *)(a1 + 40))
  {
    [*(id *)(a1 + 32) addChildViewController:];
    [*(id *)(a1 + 64) bounds];
    [*(id *)(a1 + 56) setFrame:];
    [*(id *)(a1 + 56) setTranslatesAutoresizingMaskIntoConstraints:1];
    [*(id *)(a1 + 56) setAutoresizingMask:18];
    [*(id *)(a1 + 56) setNeedsLayout];
    [*(id *)(a1 + 56) layoutIfNeeded];
  }
  [*(id *)(a1 + 72) willMoveToParentViewController:0];
  *(void *)buf = 0;
  *(void *)&buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x2020000000;
  LOBYTE(v26) = 0;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100051204;
  v16[3] = &unk_10131B0F8;
  uint64_t v11 = *(void *)(a1 + 32);
  double v12 = *(void **)(a1 + 40);
  long long v24 = buf;
  v16[4] = v11;
  id v17 = v12;
  id v18 = *(id *)(a1 + 48);
  id v19 = *(id *)(a1 + 56);
  id v20 = *(id *)(a1 + 64);
  id v21 = *(id *)(a1 + 80);
  id v22 = *(id *)(a1 + 72);
  id v23 = *(id *)(a1 + 104);
  double v13 = objc_retainBlock(v16);
  double v14 = [*(id *)(a1 + 88) _transitionCoordinator];
  unsigned __int8 v15 = [v14 animateAlongsideTransition:0 completion:v13];

  if ((v15 & 1) == 0) {
    ((void (*)(void *, void))v13[2])(v13, 0);
  }
  [*(id *)(a1 + 96) animateTransition:*(void *)(a1 + 88)];

  _Block_object_dispose(buf, 8);
}

void sub_10005F284(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_10005F690()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  uint64_t v38 = v3;
  __chkstk_darwin(v2);
  long long v34 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  __chkstk_darwin(v6);
  unsigned __int8 v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v9 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource_storeSubscriptionTypes;
  sub_100028D98();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100F5CF70;
  *(void *)(v13 + 32) = type metadata accessor for FavoriteItem();
  *(void *)&v1[v12] = v13;
  *(void *)&v1[OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource_queryContents] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource__allItems] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource____lazy_storage___updateQueue] = 0;
  uint64_t v31 = OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource_lockQueue;
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  unsigned int v27 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  double v14 = *(void (**)(void))(v9 + 104);
  uint64_t v28 = v9 + 104;
  __int16 v30 = (void (*)(unsigned char *, void, uint64_t))v14;
  v14(v11);
  uint64_t v32 = v1;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007FF04((unint64_t *)&unk_1015D5E90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000FF33C((uint64_t *)&unk_1015D52D0);
  sub_10010113C((unint64_t *)&unk_1015D5EA0, (uint64_t *)&unk_1015D52D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v1[v31] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v15 = OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource_queryQueue;
  v30(v11, v27, v29);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  NSString v16 = v8;
  uint64_t v17 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v18 = v32;
  *(void *)&v32[v15] = v17;

  v41.unint64_t receiver = v18;
  v41.Class super_class = ObjectType;
  id v19 = [super init];
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10010CA7C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012DDD28;
  id v21 = _Block_copy(aBlock);
  id v22 = v19;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  double v39 = _swiftEmptyArrayStorage;
  sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  id v23 = v34;
  uint64_t v24 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v21);
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v23, v24);
  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v16, v36);
  swift_release();
  swift_release();
  return v22;
}

unsigned char *sub_100060034()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observerToken] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers;
  id v2 = objc_allocWithZone((Class)GEOObserverHashTable);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 initWithProtocol:&OBJC_PROTOCOL____TtP4Maps32LibraryItemsCountManagerObserver_ queue:0];
  v3[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching] = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_storeSubscriptionTypes;
  sub_100028D98();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F5CF70;
  *(void *)(v5 + 32) = type metadata accessor for FavoriteItem();
  *(void *)&v3[v4] = v5;

  v19.unint64_t receiver = v3;
  v19.Class super_class = (Class)type metadata accessor for LibraryItemsCountManager();
  [super init];
  uint64_t v7 = self;
  unsigned __int8 v8 = v6;
  id v9 = [v7 sharedManager];
  [v9 addObserver:v8];

  id v10 = [self defaultCenter];
  id v11 = [self mainQueue];
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v18[4] = sub_1002FECCC;
  v18[5] = v12;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1002FDA50;
  v18[3] = &unk_1012E38D8;
  uint64_t v13 = _Block_copy(v18);
  swift_release();
  id v14 = [v10 addObserverForName:@"MapsSavedRoutesDidUpdateNotification" object:0 queue:v11 usingBlock:v13];
  _Block_release(v13);

  *(void *)&v8[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observerToken] = v14;
  swift_unknownObjectRelease();
  if ((v8[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching] & 1) == 0)
  {
    v8[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching] = 1;
    sub_100023BFC();
  }
  type metadata accessor for MapsSyncStore();
  uint64_t v15 = (void *)static MapsSyncStore.sharedStore.getter();
  NSString v16 = v8;
  dispatch thunk of MapsSyncStore.subscribe(_:)();

  return v16;
}

void sub_100060304(uint64_t a1)
{
  id v2 = sub_1000C49B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      unsigned __int8 v8 = @"<nil>";
      goto LABEL_10;
    }
    uint64_t v4 = (objc_class *)objc_opt_class();
    uint64_t v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      uint64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        unsigned __int8 v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    unsigned __int8 v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = NSStringFromUIEdgeInsets(*(UIEdgeInsets *)(a1 + 40));
    *(_DWORD *)buf = 138543618;
    uint64_t v29 = v8;
    __int16 v30 = 2112;
    uint64_t v31 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[%{public}@] - label insets: %@", buf, 0x16u);
  }
  double v10 = *(double *)(a1 + 40);
  double v11 = *(double *)(a1 + 48);
  double v12 = *(double *)(a1 + 56);
  double v13 = *(double *)(a1 + 64);
  id v14 = [*(id *)(a1 + 32) mapView];
  [v14 _setLabelEdgeInsets:v10, v11, v12, v13];

  uint64_t v15 = sub_1000C49B4();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
  {
    id v16 = *(id *)(a1 + 32);
    if (!v16)
    {
      id v21 = @"<nil>";
      goto LABEL_20;
    }
    uint64_t v17 = (objc_class *)objc_opt_class();
    id v18 = NSStringFromClass(v17);
    if (objc_opt_respondsToSelector())
    {
      objc_super v19 = [v16 performSelector:"accessibilityIdentifier"];
      uint64_t v20 = v19;
      if (v19 && ![v19 isEqualToString:v18])
      {
        id v21 = +[NSString stringWithFormat:@"%@<%p, %@>", v18, v16, v20];

        goto LABEL_18;
      }
    }
    id v21 = +[NSString stringWithFormat:@"%@<%p>", v18, v16];
LABEL_18:

LABEL_20:
    id v22 = NSStringFromUIEdgeInsets(*(UIEdgeInsets *)(a1 + 72));
    *(_DWORD *)buf = 138543618;
    uint64_t v29 = v21;
    __int16 v30 = 2112;
    uint64_t v31 = v22;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "[%{public}@] - label widths: %@", buf, 0x16u);
  }
  double v23 = *(double *)(a1 + 72);
  double v24 = *(double *)(a1 + 80);
  double v25 = *(double *)(a1 + 88);
  double v26 = *(double *)(a1 + 96);
  unsigned int v27 = [*(id *)(a1 + 32) mapView];
  [v27 _setLabelEdgeWidths:v23, v24, v25, v26];
}

void sub_10006065C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = sub_1000A930C();
    if (os_signpost_enabled(v3))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "LoadMapsForScene", "", buf, 2u);
    }

    if (*(unsigned char *)(a1 + 40))
    {
      uint64_t v4 = sub_1000A930C();
      if (os_signpost_enabled(v4))
      {
        *(_WORD *)id v14 = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "PlatformControllerReplaySessions", "", v14, 2u);
      }

      uint64_t v5 = [WeakRetained platformController];
      [v5 replaySessions];

      id v6 = sub_1000A930C();
      if (os_signpost_enabled(v6))
      {
        *(_WORD *)double v13 = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v6, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "PlatformControllerReplaySessions", "", v13, 2u);
      }

      uint64_t v7 = sub_1000A930C();
      if (os_signpost_enabled(v7))
      {
        *(_WORD *)double v12 = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "CarPlayNavigation", "", v12, 2u);
      }

      unsigned __int8 v8 = +[CarDisplayController sharedInstance];
      id v9 = [v8 isAnyCarSceneHostingDrivingNavigation];

      [WeakRetained updateDirectionsListVisibility:v9];
      double v10 = sub_1000A930C();
      if (os_signpost_enabled(v10))
      {
        *(_WORD *)double v11 = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "CarPlayNavigation", "", v11, 2u);
      }
    }
  }
}

void sub_100060B2C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKey:*(void *)(a1 + 40)];

  if (!v2
    && ([*(id *)(*(void *)(a1 + 32) + 16) containsObject:*(void *)(a1 + 40)] & 1) == 0)
  {
    [*(id *)(*(void *)(a1 + 32) + 16) addObject:*(void *)(a1 + 40)];
    if (*(unsigned char *)(a1 + 56))
    {
      id v3 = dispatch_get_global_queue(25, 0);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10002568C;
      block[3] = &unk_1012E6EA8;
      id v5 = *(id *)(a1 + 48);
      dispatch_async(v3, block);
    }
  }
}

void sub_100060C10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    long long v58 = 0u;
    long long v59 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    uint64_t v46 = a1;
    id obj = *(id *)(a1 + 32);
    id v3 = [obj countByEnumeratingWithState:&v56 objects:v61 count:16];
    if (!v3) {
      goto LABEL_26;
    }
    id v4 = v3;
    uint64_t v5 = *(void *)v57;
    while (1)
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v57 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void **)(*((void *)&v56 + 1) + 8 * i);
        uint64_t v8 = [v7 identifier];
        if (!v8) {
          goto LABEL_15;
        }
        id v9 = (void *)v8;
        double v10 = (void *)*((void *)WeakRetained + 4);
        double v11 = [v7 identifier];
        double v12 = [v10 objectForKeyedSubscript:v11];

        if (!v12) {
          goto LABEL_15;
        }
        double v13 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          id v14 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
          id v15 = objc_alloc((Class)NSString);
          id v16 = [v7 identifier];
          id v17 = [v15 initWithFormat:@"Already have application %@. Skipping it.", v16];
          *(_DWORD *)buf = 136315394;
          uint64_t v63 = v14;
          __int16 v64 = 2112;
          *(void *)uint64_t v65 = v17;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
        }
        id v18 = [v7 identifier];
        int v19 = isExtensionHidden();

        if (v19)
        {
          uint64_t v20 = GEOFindOrCreateLog();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
          {
            id v21 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
            id v22 = objc_alloc((Class)NSString);
            double v23 = [v7 identifier];
            id v24 = [v22 initWithFormat:@"Application %@ is hidden. Skipping it.", v23];
            *(_DWORD *)buf = 136315394;
            uint64_t v63 = v21;
            __int16 v64 = 2112;
            *(void *)uint64_t v65 = v24;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
          }
LABEL_15:
          [v7 setDelegate:WeakRetained];
          double v25 = (void *)*((void *)WeakRetained + 4);
          double v26 = [v7 identifier];
          [v25 setObject:v7 forKey:v26];

          unsigned int v27 = GEOFindOrCreateLog();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
          {
            uint64_t v28 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
            id v29 = [objc_alloc((Class)NSString) initWithFormat:@"Origin is %@", *((void *)WeakRetained + 5)];
            *(_DWORD *)buf = 136315394;
            uint64_t v63 = v28;
            __int16 v64 = 2112;
            *(void *)uint64_t v65 = v29;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
          }
          uint64_t v30 = *((void *)WeakRetained + 5);
          if (v30) {
            [WeakRetained _updateRideOptionStatusMapForOrigin:v30 destination:*((void *)WeakRetained + 6) application:v7];
          }
          uint64_t v31 = (void *)*((void *)WeakRetained + 9);
          v55[0] = _NSConcreteStackBlock;
          v55[1] = 3221225472;
          v55[2] = sub_10062D0D0;
          v55[3] = &unk_1012F2650;
          v55[4] = v7;
          uint64_t v32 = +[NSPredicate predicateWithBlock:v55];
          uint64_t v33 = [v31 filteredArrayUsingPredicate:v32];

          if ([v33 count])
          {
            long long v34 = GEOFindOrCreateLog();
            if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
            {
              uint64_t v35 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
              id v36 = [objc_alloc((Class)NSString) initWithFormat:@"There are some old suggestions %@", v33];
              *(_DWORD *)buf = 136315394;
              uint64_t v63 = v35;
              __int16 v64 = 2112;
              *(void *)uint64_t v65 = v36;
              _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
            }
            [*((id *)WeakRetained + 9) removeObjectsInArray:v33];
          }

          continue;
        }
      }
      id v4 = [obj countByEnumeratingWithState:&v56 objects:v61 count:16];
      if (!v4)
      {
LABEL_26:

        os_log_t log = sub_100099700(*(void **)(v46 + 32), &stru_1012F2690);
        long long v53 = 0u;
        long long v54 = 0u;
        long long v51 = 0u;
        long long v52 = 0u;
        uint64_t v37 = [*((id *)WeakRetained + 4) allKeys];
        id v38 = [v37 countByEnumeratingWithState:&v51 objects:v60 count:16];
        if (v38)
        {
          id v39 = v38;
          uint64_t v49 = *(void *)v52;
          id v47 = WeakRetained;
          do
          {
            for (j = 0; j != v39; j = (char *)j + 1)
            {
              if (*(void *)v52 != v49) {
                objc_enumerationMutation(v37);
              }
              uint64_t v41 = *(void *)(*((void *)&v51 + 1) + 8 * (void)j);
              if (([log containsObject:v41] & 1) == 0)
              {
                long long v42 = GEOFindOrCreateLog();
                if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
                {
                  long long v43 = v37;
                  long long v44 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
                  id v45 = [objc_alloc((Class)NSString) initWithFormat:@"App Uninstalled: %@", v41];
                  *(_DWORD *)buf = 136315394;
                  uint64_t v63 = v44;
                  uint64_t v37 = v43;
                  id WeakRetained = v47;
                  __int16 v64 = 2112;
                  *(void *)uint64_t v65 = v45;
                  _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
                }
                [*((id *)WeakRetained + 4) removeObjectForKey:v41];
                [*((id *)WeakRetained + 11) removeObjectForKey:v41];
              }
            }
            id v39 = [v37 countByEnumeratingWithState:&v51 objects:v60 count:16];
          }
          while (v39);
        }

        [WeakRetained _broadcastRideOptionStateDidChange];
        goto LABEL_41;
      }
    }
  }
  GEOFindOrCreateLog();
  os_log_t log = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(log, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136446722;
    uint64_t v63 = "RideBookingDataCoordinator.m";
    __int16 v64 = 1026;
    *(_DWORD *)uint64_t v65 = 174;
    *(_WORD *)&v65[4] = 2082;
    *(void *)&v65[6] = "-[RideBookingDataCoordinator rideBookingApplicationsDidChange:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
  }

LABEL_41:
}

void sub_10006164C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10006188C(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  uint64_t v7 = [v6 lastObject];
  uint64_t v8 = *(void **)(a1 + 32);

  if (v7 == v8)
  {
    id v9 = v6;
    goto LABEL_46;
  }
  *a4 = *(unsigned char *)(a1 + 48);
  id v9 = [v6 mutableCopy];
  if (objc_opt_respondsToSelector()) {
    unsigned __int8 v10 = [*(id *)(a1 + 32) supportsDuplicationInStack];
  }
  else {
    unsigned __int8 v10 = 1;
  }
  if (![v9 containsObject:*(void *)(a1 + 32)] || (v10 & 1) != 0)
  {
    double v11 = sub_1000C49B4();
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
      goto LABEL_45;
    }
    id v18 = *(id *)(a1 + 40);
    if (!v18)
    {
      double v23 = @"<nil>";
LABEL_25:

      id v24 = v23;
      id v25 = *(id *)(a1 + 32);
      if (!v25)
      {
        uint64_t v30 = @"<nil>";
        goto LABEL_33;
      }
      double v26 = (objc_class *)objc_opt_class();
      unsigned int v27 = NSStringFromClass(v26);
      if (objc_opt_respondsToSelector())
      {
        uint64_t v28 = [v25 performSelector:"accessibilityIdentifier"];
        id v29 = v28;
        if (v28 && ![v28 isEqualToString:v27])
        {
          uint64_t v30 = +[NSString stringWithFormat:@"%@<%p, %@>", v27, v25, v29];

          goto LABEL_31;
        }
      }
      uint64_t v30 = +[NSString stringWithFormat:@"%@<%p>", v27, v25];
LABEL_31:

LABEL_33:
      *(_DWORD *)buf = 138543618;
      id v39 = v24;
      __int16 v40 = 2112;
      uint64_t v41 = v30;
      uint64_t v31 = "[%{public}@] + %@";
LABEL_44:
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, v31, buf, 0x16u);

      goto LABEL_45;
    }
    int v19 = (objc_class *)objc_opt_class();
    uint64_t v20 = NSStringFromClass(v19);
    if (objc_opt_respondsToSelector())
    {
      id v21 = [v18 performSelector:"accessibilityIdentifier"];
      id v22 = v21;
      if (v21 && ![v21 isEqualToString:v20])
      {
        double v23 = +[NSString stringWithFormat:@"%@<%p, %@>", v20, v18, v22];

        goto LABEL_23;
      }
    }
    double v23 = +[NSString stringWithFormat:@"%@<%p>", v20, v18];
LABEL_23:

    goto LABEL_25;
  }
  [v9 removeObject:*(void *)(a1 + 32)];
  double v11 = sub_1000C49B4();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    id v12 = *(id *)(a1 + 40);
    if (!v12)
    {
      id v17 = @"<nil>";
LABEL_35:

      id v24 = v17;
      id v32 = *(id *)(a1 + 32);
      if (!v32)
      {
        uint64_t v30 = @"<nil>";
        goto LABEL_43;
      }
      uint64_t v33 = (objc_class *)objc_opt_class();
      long long v34 = NSStringFromClass(v33);
      if (objc_opt_respondsToSelector())
      {
        uint64_t v35 = [v32 performSelector:"accessibilityIdentifier"];
        id v36 = v35;
        if (v35 && ![v35 isEqualToString:v34])
        {
          uint64_t v30 = +[NSString stringWithFormat:@"%@<%p, %@>", v34, v32, v36];

          goto LABEL_41;
        }
      }
      uint64_t v30 = +[NSString stringWithFormat:@"%@<%p>", v34, v32];
LABEL_41:

LABEL_43:
      *(_DWORD *)buf = 138543618;
      id v39 = v24;
      __int16 v40 = 2112;
      uint64_t v41 = v30;
      uint64_t v31 = "[%{public}@] ~> %@";
      goto LABEL_44;
    }
    double v13 = (objc_class *)objc_opt_class();
    id v14 = NSStringFromClass(v13);
    if (objc_opt_respondsToSelector())
    {
      id v15 = [v12 performSelector:"accessibilityIdentifier"];
      id v16 = v15;
      if (v15 && ![v15 isEqualToString:v14])
      {
        id v17 = +[NSString stringWithFormat:@"%@<%p, %@>", v14, v12, v16];

        goto LABEL_15;
      }
    }
    id v17 = +[NSString stringWithFormat:@"%@<%p>", v14, v12];
LABEL_15:

    goto LABEL_35;
  }
LABEL_45:

  [v9 addObject:*(void *)(a1 + 32)];
LABEL_46:

  return v9;
}

id sub_100061D84(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v3 = (void *)Strong;
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [v3 collectionView:a1 viewForSupplementaryElementOfKind:v4 atIndexPath:isa];

  return v6;
}

void sub_100061F88()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v59 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  long long v58 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v56 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DispatchTimeInterval();
  int64_t v55 = *(void (**)(void, void))(v61 - 8);
  uint64_t v5 = __chkstk_darwin(v61);
  long long v54 = (void *)((char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)v49 - v7);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  uint64_t v64 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  double v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v62 = (char *)v49 - v14;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v53 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (void *)type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v19 = *(v18 - 1);
  __chkstk_darwin(v18);
  id v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled) != 1) {
    return;
  }
  uint64_t v51 = v3;
  uint64_t v52 = v1;
  uint64_t v22 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer;
  uint64_t v50 = *(void *)(v0 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer);
  uint64_t v60 = v0;
  if (v50) {
    goto LABEL_4;
  }
  v49[1] = sub_100100830(0, &qword_1015CE240);
  aBlock[0] = _swiftEmptyArrayStorage;
  v49[0] = sub_10007FE74(&qword_1015CE248, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_1000FF33C(&qword_1015CE250);
  sub_10010113C(&qword_1015CE258, &qword_1015CE250);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  double v23 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v24 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

  (*(void (**)(char *, void *))(v19 + 8))(v21, v18);
  *(void *)(v60 + v22) = v24;
  swift_unknownObjectRelease();
  uint64_t v0 = v60;
  if (*(void *)(v60 + v22))
  {
LABEL_4:
    id v25 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions);
    if (v25)
    {
      swift_unknownObjectRetain();
      id v26 = [v25 expirationDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSinceNow.getter();
      double v28 = v27;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v17, v15);
      double v29 = 60.0;
      uint64_t v30 = v63;
      if (v28 + 60.0 > 60.0) {
        double v29 = v28 + 60.0;
      }
    }
    else
    {
      swift_unknownObjectRetain();
      double v29 = 60.0;
      uint64_t v30 = v63;
    }
    static DispatchTime.now()();
    if ((~*(void *)&v29 & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          void *v8 = (uint64_t)v29;
          uint64_t v31 = v55;
          id v21 = (char *)*((void *)v55 + 13);
          uint64_t v32 = v61;
          ((void (*)(void *, void, uint64_t))v21)(v8, enum case for DispatchTimeInterval.seconds(_:), v61);
          + infix(_:_:)();
          id v18 = (void *)v31[1];
          ((void (*)(void *, uint64_t))v18)(v8, v32);
          uint64_t v33 = *(void (**)(void, void))(v64 + 8);
          v64 += 8;
          int64_t v55 = v33;
          v33(v13, v30);
          if (qword_1015CBDE0 == -1)
          {
LABEL_12:
            uint64_t v34 = type metadata accessor for Logger();
            sub_1000F2248(v34, (uint64_t)qword_1016118B8);
            uint64_t v35 = Logger.logObject.getter();
            os_log_type_t v36 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v35, v36))
            {
              uint64_t v37 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v37 = 134217984;
              *(double *)aBlock = v29;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "Scheduling weather conditions refresh in %f seconds", v37, 0xCu);
              swift_slowDealloc();
            }

            swift_getObjectType();
            uint64_t v38 = v61;
            ((void (*)(void *, void, uint64_t))v21)(v8, enum case for DispatchTimeInterval.never(_:), v61);
            id v39 = v54;
            *long long v54 = 30;
            ((void (*)(void *, void, uint64_t))v21)(v39, enum case for DispatchTimeInterval.nanoseconds(_:), v38);
            __int16 v40 = v62;
            OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
            ((void (*)(void *, uint64_t))v18)(v39, v38);
            ((void (*)(void *, uint64_t))v18)(v8, v38);
            uint64_t v41 = swift_allocObject();
            swift_unknownObjectWeakInit();
            aBlock[4] = sub_1002686D0;
            aBlock[5] = v41;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10008C380;
            aBlock[3] = &unk_1012E0440;
            long long v42 = _Block_copy(aBlock);
            swift_retain();
            long long v43 = v56;
            static DispatchQoS.unspecified.getter();
            long long v44 = v58;
            sub_10003C4FC();
            OS_dispatch_source.setEventHandler(qos:flags:handler:)();
            _Block_release(v42);
            (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v52);
            (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v51);
            swift_release();
            swift_release();
            if (v50)
            {
              v55(v40, v63);
              swift_unknownObjectRelease();
            }
            else
            {
              OS_dispatch_source.resume()();
              swift_unknownObjectRelease();
              v55(v40, v63);
            }
            return;
          }
LABEL_26:
          swift_once();
          goto LABEL_12;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (qword_1015CBDE0 != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  sub_1000F2248(v45, (uint64_t)qword_1016118B8);
  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    id v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Failed to create timer to refresh weather conditions", v48, 2u);
    swift_slowDealloc();
  }
}

void sub_100062968()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v58 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v57 = (char *)v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v56 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int64_t v55 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for DispatchTimeInterval();
  long long v54 = *(void (**)(void, void))(v60 - 8);
  uint64_t v5 = __chkstk_darwin(v60);
  uint64_t v53 = (void *)((char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)v48 - v7);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  uint64_t v63 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  double v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v61 = (char *)v48 - v14;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v52 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (void *)type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v19 = *(v18 - 1);
  __chkstk_darwin(v18);
  id v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_enabled) != 1) {
    return;
  }
  uint64_t v50 = v3;
  uint64_t v51 = v1;
  uint64_t v22 = OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_updatingTimer;
  uint64_t v49 = *(void *)(v0 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_updatingTimer);
  uint64_t v59 = v0;
  if (v49) {
    goto LABEL_4;
  }
  v48[1] = sub_100100830(0, &qword_1015CE240);
  aBlock[0] = _swiftEmptyArrayStorage;
  v48[0] = sub_10007FE74(&qword_1015CE248, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_1000FF33C(&qword_1015CE250);
  sub_1001010F8(&qword_1015CE258, &qword_1015CE250);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  double v23 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v24 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

  (*(void (**)(char *, void *))(v19 + 8))(v21, v18);
  *(void *)(v59 + v22) = v24;
  swift_unknownObjectRelease();
  uint64_t v0 = v59;
  if (*(void *)(v59 + v22))
  {
LABEL_4:
    id v25 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_airQualityConditions);
    if (v25)
    {
      swift_unknownObjectRetain();
      id v26 = [v25 expirationDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSinceNow.getter();
      double v28 = v27;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v15);
      double v29 = 60.0;
      if (v28 + 60.0 > 60.0) {
        double v29 = v28 + 60.0;
      }
    }
    else
    {
      swift_unknownObjectRetain();
      double v29 = 60.0;
    }
    static DispatchTime.now()();
    if ((~*(void *)&v29 & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          void *v8 = (uint64_t)v29;
          uint64_t v30 = v54;
          id v21 = (char *)*((void *)v54 + 13);
          uint64_t v31 = v60;
          ((void (*)(void *, void, uint64_t))v21)(v8, enum case for DispatchTimeInterval.seconds(_:), v60);
          + infix(_:_:)();
          id v18 = (void *)v30[1];
          ((void (*)(void *, uint64_t))v18)(v8, v31);
          uint64_t v32 = *(void (**)(void, void))(v63 + 8);
          v63 += 8;
          long long v54 = v32;
          v32(v13, v62);
          if (qword_1015CBB30 == -1)
          {
LABEL_12:
            uint64_t v33 = type metadata accessor for Logger();
            sub_1000F2248(v33, (uint64_t)qword_101611238);
            uint64_t v34 = Logger.logObject.getter();
            os_log_type_t v35 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v34, v35))
            {
              os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)os_log_type_t v36 = 134217984;
              *(double *)aBlock = v29;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v34, v35, "Scheduling air quality conditions refresh in %f seconds", v36, 0xCu);
              swift_slowDealloc();
            }

            swift_getObjectType();
            uint64_t v37 = v60;
            ((void (*)(void *, void, uint64_t))v21)(v8, enum case for DispatchTimeInterval.never(_:), v60);
            uint64_t v38 = v53;
            *uint64_t v53 = 30;
            ((void (*)(void *, void, uint64_t))v21)(v38, enum case for DispatchTimeInterval.nanoseconds(_:), v37);
            id v39 = v61;
            OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
            ((void (*)(void *, uint64_t))v18)(v38, v37);
            ((void (*)(void *, uint64_t))v18)(v8, v37);
            uint64_t v40 = swift_allocObject();
            swift_unknownObjectWeakInit();
            aBlock[4] = sub_10011D1BC;
            aBlock[5] = v40;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10008C380;
            aBlock[3] = &unk_1012D8E38;
            uint64_t v41 = _Block_copy(aBlock);
            swift_retain();
            long long v42 = v55;
            j___s8Dispatch0A3QoSV11unspecifiedACvgZ();
            long long v43 = v57;
            sub_10003C4FC();
            OS_dispatch_source.setEventHandler(qos:flags:handler:)();
            _Block_release(v41);
            (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v51);
            (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v50);
            swift_release();
            swift_release();
            if (v49)
            {
              v54(v39, v62);
              swift_unknownObjectRelease();
            }
            else
            {
              OS_dispatch_source.resume()();
              swift_unknownObjectRelease();
              v54(v39, v62);
            }
            return;
          }
LABEL_26:
          swift_once();
          goto LABEL_12;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (qword_1015CBB30 != -1) {
    swift_once();
  }
  uint64_t v44 = type metadata accessor for Logger();
  sub_1000F2248(v44, (uint64_t)qword_101611238);
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v45, v46))
  {
    os_log_type_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Failed to create timer to refresh air quality conditions", v47, 2u);
    swift_slowDealloc();
  }
}

id sub_100063550(uint64_t a1)
{
  if (qword_1015CBFD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D73E0);
  sub_1000F2248(v2, (uint64_t)qword_101611D18);
  if (qword_1015CC010 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1000FF33C(&qword_1015D73E8);
  sub_1000F2248(v3, (uint64_t)qword_101611DC0);
  if (qword_1015CBD90 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1000FF33C(&qword_1015D67E0);
  sub_1000F2248(v4, (uint64_t)qword_101611848);
  if (qword_1015CBEF0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1000FF33C(&qword_1015D99E0);
  sub_1000F2248(v5, (uint64_t)qword_101611B68);
  if (qword_1015CBEF8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D73F0);
  sub_1000F2248(v6, (uint64_t)qword_101611B80);
  if (qword_1015CBB28 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1000FF33C(&qword_1015CE170);
  sub_1000F2248(v7, (uint64_t)qword_101611220);
  if (qword_1015CBB40 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1000FF33C(&qword_1015D7400);
  sub_1000F2248(v8, (uint64_t)qword_101611258);
  if (qword_1015CBF28 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1000FF33C(&qword_1015D7408);
  sub_1000F2248(v9, (uint64_t)qword_101611BC0);
  if (qword_1015CBD70 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1000FF33C((uint64_t *)&unk_1015D73C0);
  sub_1000F2248(v10, (uint64_t)qword_101611808);
  uint64_t v11 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration)
                 + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = objc_allocWithZone((Class)sub_1000FF33C((uint64_t *)&unk_1015D7410));
  id v13 = v11;
  uint64_t v14 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v15 = v14;
  swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();

  swift_release();
  return v15;
}

void sub_100063B9C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) copy];
  uint64_t v3 = [*(id *)(a1 + 40) sharedFeatureCache];
  [v3 setObject:v2 forKey:*(void *)(a1 + 48)];

  uint64_t v4 = *(NSObject **)(a1 + 56);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001058A0;
  block[3] = &unk_1012EF330;
  id v9 = *(id *)(a1 + 72);
  id v7 = *(id *)(a1 + 64);
  id v8 = v2;
  id v5 = v2;
  dispatch_async(v4, block);
}

void sub_1000643B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1000643CC()
{
  if (qword_101610608 != -1) {
    dispatch_once(&qword_101610608, &stru_101315580);
  }
  uint64_t v0 = (void *)qword_101610600;

  return v0;
}

void sub_100064C24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

Class sub_100064C50(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  type metadata accessor for MapsFavoriteItem();
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v5.super.isa;
}

unint64_t sub_100064CD4()
{
  return sub_1000A0EA8(&OBJC_IVAR____TtC4Maps20MapsFavoritesManager__sortedShortcuts);
}

void sub_100065014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100065038()
{
  if (qword_101610B18 != -1) {
    dispatch_once(&qword_101610B18, &stru_10131B8D8);
  }
  uint64_t v0 = (void *)qword_101610B10;

  return v0;
}

void sub_1000655B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 104));
  _Unwind_Resume(a1);
}

void sub_1000664F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100066CB0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 240));
  _Unwind_Resume(a1);
}

uint64_t destroy for HomeListSectionHeaderViewModel()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();

  return swift_bridgeObjectRelease();
}

id sub_1000672B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSArray v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_priority] = 1;
  uint64_t v10 = OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_mapItem;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_mapItem] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_source] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_sortOrder] = 0;
  v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_shouldBeClustered] = 0;
  v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_showsBalloonCallout] = 1;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_sourceLabelMarker] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_address] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_searchableStrings] = 0;
  v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_shouldBeHiddenFromMap] = 0;
  v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_hidden] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem____lazy_storage___autocompletionStrings] = 1;
  uint64_t v29 = OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem__mapItem;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem__mapItem] = a1;
  uint64_t v27 = a2;
  *(void *)&v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_shortcutType] = a2;
  uint64_t v11 = &v4[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem__title];
  *uint64_t v11 = a3;
  v11[1] = a4;
  id v12 = *(void **)&v4[v10];
  *(void *)&v4[v10] = a1;
  id v13 = a1;
  uint64_t v14 = v4;
  swift_bridgeObjectRetain();

  sub_1000FF33C(&qword_1015D52A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
  id v31 = [objc_allocWithZone((Class)PersonalizedMapItemKey) initWithMapItem:v13];
  sub_100100830(0, &qword_1015D52B0);
  sub_1000EFBF0(&qword_1015D52B8, &qword_1015D52B0);
  AnyHashable.init<A>(_:)();
  uint64_t v16 = sub_10010B40C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  *(void *)&v14[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_keys] = v16;
  [v13 _coordinate];
  id v17 = &v14[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_coordinate];
  *(void *)id v17 = v18;
  *((void *)v17 + 1) = v19;
  sub_100100830(0, (unint64_t *)&unk_1015D52C0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v21 = [ObjCClassFromMetadata defaultAdornment];
  *(void *)&v14[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_prefix] = v21;
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [self adornmentWithString:v22 priority:0];

  *(void *)&v14[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_title] = v23;
  id v24 = [ObjCClassFromMetadata defaultAdornment];
  *(void *)&v14[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_subtitle] = v24;
  id result = [objc_allocWithZone((Class)SearchResult) initWithMapItem:*(void *)&v5[v29]];
  if (result)
  {
    *(void *)&v14[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem__searchResult] = result;
    if ((unint64_t)(v27 - 1) > 4) {
      uint64_t v26 = 18;
    }
    else {
      uint64_t v26 = qword_100F64D48[v27 - 1];
    }
    *(void *)&v14[OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_sourceSubtype] = v26;

    v30.unint64_t receiver = v14;
    v30.Class super_class = ObjectType;
    return [super init];
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100067A50()
{
  if (qword_10160FA60 != -1) {
    dispatch_once(&qword_10160FA60, &stru_1012F99B0);
  }
  uint64_t v0 = (void *)qword_10160FA58;

  return v0;
}

Swift::String __swiftcall LibraryItemsCount.descriptionForLibrarySectionInHome()()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_101611820;
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
  *(_OWORD *)(v5 + 16) = xmmword_100F5CF70;
  *(void *)(v5 + 56) = &type metadata for Int;
  *(void *)(v5 + 64) = &protocol witness table for Int;
  *(void *)(v5 + 32) = v6;
  uint64_t v7 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v37 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v9 = (void *)qword_101611820;
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100F5CF70;
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  *(void *)(v13 + 56) = &type metadata for Int;
  *(void *)(v13 + 64) = &protocol witness table for Int;
  *(void *)(v13 + 32) = v14;
  uint64_t v15 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)qword_101611820;
  v38._object = (void *)0xE900000000000072;
  v19._countAndFlagsBits = 0x20A280E220;
  v19._object = (void *)0xA500000000000000;
  v20._countAndFlagsBits = 0x20A280E220;
  v20._object = (void *)0xA500000000000000;
  v38._countAndFlagsBits = 0x6574696D696C6544;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)qword_101611820, v20, v38);
  if (MapsFeature_IsEnabled_HikingiOS())
  {
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v18 localizedStringForKey:v21 value:v22 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_100F5CF70;
    uint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
    *(void *)(v24 + 56) = &type metadata for Int;
    *(void *)(v24 + 64) = &protocol witness table for Int;
    *(void *)(v24 + 32) = v25;
    uint64_t v26 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000FF33C(&qword_1015CE220);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_100F5CF80;
    *(void *)(v29 + 32) = v15;
    *(void *)(v29 + 40) = v17;
    *(void *)(v29 + 48) = v7;
    *(void *)(v29 + 56) = v37;
    *(void *)(v29 + 64) = v26;
    *(void *)(v29 + 72) = v28;
  }
  else
  {
    sub_1000FF33C(&qword_1015CE220);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_100F5CFA0;
    *(void *)(v30 + 32) = v15;
    *(void *)(v30 + 40) = v17;
    *(void *)(v30 + 48) = v7;
    *(void *)(v30 + 56) = v37;
  }
  sub_1000FF33C((uint64_t *)&unk_1015CE230);
  sub_10010B4F8();
  uint64_t v31 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v31;
  os_log_type_t v35 = v33;
  result._object = v35;
  result._countAndFlagsBits = v34;
  return result;
}

void sub_100067F18(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    id v6 = [*(id *)(*(void *)(a1 + 32) + 24) objectForKeyedSubscript:*(void *)(a1 + 40)];
    if (!v6)
    {
      id v6 = +[NSMutableArray arrayWithCapacity:1];
      [*(id *)(*(void *)(a1 + 32) + 24) setObject:forKeyedSubscript:];
    }
    id v5 = objc_retainBlock(*(id *)(a1 + 48));
    [v6 addObject:v5];
  }
}

uint64_t sub_100067FF4(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive;
  int v4 = v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive];
  v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = result;
  if (v4 != (result & 1))
  {
    swift_getObjectType();
    uint64_t v5 = swift_conformsToProtocol2();
    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    if (!v5) {
      uint64_t v1 = 0;
    }
    if (!v1) {
      goto LABEL_54;
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    id v9 = v2;
    unint64_t v10 = v8(ObjectType, v6);

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v11) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v11) {
        goto LABEL_17;
      }
    }
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_43;
    }
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v13 = *(void **)(v10 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      [v13 setActive:v2[v3]];
      swift_unknownObjectRelease();
    }
LABEL_17:
    swift_bridgeObjectRelease();
    int v14 = v2[v3];
    swift_getObjectType();
    uint64_t v15 = swift_conformsToProtocol2();
    if (v15) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    if (v15) {
      uint64_t v17 = v2;
    }
    else {
      uint64_t v17 = 0;
    }
    if (v14 == 1)
    {
      if (v17)
      {
        uint64_t v18 = swift_getObjectType();
        Swift::String v19 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
        id v9 = v9;
        unint64_t v10 = v19(v18, v16);

        if (!(v10 >> 62))
        {
          uint64_t v20 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v20)
          {
LABEL_27:
            if (v20 >= 1)
            {
              uint64_t v21 = 0;
              do
              {
                if ((v10 & 0xC000000000000001) != 0)
                {
                  NSString v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  NSString v22 = *(void **)(v10 + 8 * v21 + 32);
                  swift_unknownObjectRetain();
                }
                ++v21;
                id v23 = [v22 observers];
                [v23 registerObserver:v9];
                swift_unknownObjectRelease();
              }
              while (v20 != v21);
              goto LABEL_46;
            }
            __break(1u);
            goto LABEL_53;
          }
LABEL_46:
          Swift::String result = swift_bridgeObjectRelease();
          goto LABEL_47;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_27;
        }
        goto LABEL_46;
      }
    }
    else if (v17)
    {
      uint64_t v24 = swift_getObjectType();
      uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
      uint64_t v26 = v9;
      unint64_t v27 = v25(v24, v16);

      if (v27 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v28) {
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v28) {
          goto LABEL_46;
        }
      }
      if (v28 >= 1)
      {
        uint64_t v29 = 0;
        do
        {
          if ((v27 & 0xC000000000000001) != 0)
          {
            uint64_t v30 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v30 = *(void **)(v27 + 8 * v29 + 32);
            swift_unknownObjectRetain();
          }
          ++v29;
          id v31 = [v30 observers];
          [v31 unregisterObserver:v26];
          swift_unknownObjectRelease();
        }
        while (v28 != v29);
        goto LABEL_46;
      }
LABEL_53:
      __break(1u);
    }
LABEL_54:
    Swift::String result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_47:
  if (v2[v3])
  {
    return sub_10001F1F4();
  }
  return result;
}

uint64_t sub_100068434()
{
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5F0D0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_favoritesDataProvider);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_libraryCountsDataProvider);
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  uint64_t v7 = v1;
  specialized Array._endMutation()();
  id v4 = v2;
  id v5 = v3;
  return v7;
}

void sub_1000686AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1000689BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location,id a22)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

id sub_100068A0C()
{
  if (qword_101612398 != -1) {
    dispatch_once(&qword_101612398, &stru_1012EFF98);
  }
  uint64_t v0 = (void *)qword_101612390;

  return v0;
}

uint64_t sub_100069168()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015D4B40);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  id v4 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v47 - v5;
  uint64_t v58 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v58 - 8);
  uint64_t v8 = __chkstk_darwin(v58);
  uint64_t v49 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v54 = (char *)v47 - v10;
  uint64_t v11 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  if (*(void *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers))
  {
    id v12 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  }
  else
  {
    id v12 = sub_1000F0E20();
    *(void *)(v0 + v11) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + v11))
    {
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_1000716FC(v13);
    }
    else
    {
      *(void *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      unint64_t v14 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v15 = (unint64_t *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess();
      *uint64_t v15 = v14;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = v12[2];
  v47[1] = v12;
  if (v16)
  {
    uint64_t v50 = v4;
    uint64_t v17 = (void **)(v12 + 4);
    uint64_t v18 = type metadata accessor for HomeListFavoritesSectionController();
    uint64_t v56 = &v60;
    uint64_t v57 = v18;
    int64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v51 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v52 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v20 = *v17;
      uint64_t v21 = swift_dynamicCastClass();
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_needsResetScrollOffset;
        *(unsigned char *)(v21 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_needsResetScrollOffset) = 1;
        uint64_t v24 = (void **)(v21 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration);
        sub_1000F1C90(v21 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v59);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        id v26 = v20;
        sub_1000F1BD8((uint64_t)v59);
        if (!Strong)
        {
          (*v53)(v6, 1, 1, v58);
LABEL_10:
          uint64_t v19 = (uint64_t)v6;
          goto LABEL_11;
        }
        id v27 = sub_10010BE34();
        id v28 = sub_1000806A8();
        v59[0] = v27;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
        swift_unknownObjectRelease();

        if ((*v55)(v6, 1, v58) == 1) {
          goto LABEL_10;
        }
        (*v52)(v54, v6, v58);
        uint64_t v29 = *v24;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v31 = [v29 cellForItemAtIndexPath:isa];

        if (!v31) {
          goto LABEL_29;
        }
        self;
        uint64_t v32 = (void *)swift_dynamicCastObjCClass();
        if (!v32)
        {

LABEL_29:
          (*v51)(v54, v58);
          goto LABEL_12;
        }
        [v32 resetScrollOffset];

        (*v51)(v54, v58);
        *(unsigned char *)(v22 + v23) = 0;
      }
      else
      {
        type metadata accessor for HomeListCuratedCollectionsSectionController();
        uint64_t v33 = swift_dynamicCastClass();
        if (!v33) {
          goto LABEL_13;
        }
        uint64_t v34 = v33;
        uint64_t v35 = OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController_needsResetScrollOffset;
        *(unsigned char *)(v33 + OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController_needsResetScrollOffset) = 1;
        os_log_type_t v36 = (void **)(v33 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration);
        sub_1000F1C90(v33 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v59);
        uint64_t v37 = swift_unknownObjectWeakLoadStrong();
        id v38 = v20;
        sub_1000F1BD8((uint64_t)v59);
        if (!v37)
        {
          uint64_t v41 = (uint64_t)v50;
          (*v53)(v50, 1, 1, v58);
LABEL_27:
          uint64_t v19 = v41;
LABEL_11:
          sub_1000FF2E0(v19, &qword_1015D4B40);
          goto LABEL_12;
        }
        uint64_t v48 = v35;
        id v39 = sub_1000357AC();
        id v40 = sub_1000806A8();
        v59[0] = v39;
        uint64_t v41 = (uint64_t)v50;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
        swift_unknownObjectRelease();

        if ((*v55)((char *)v41, 1, v58) == 1) {
          goto LABEL_27;
        }
        (*v52)(v49, (char *)v41, v58);
        long long v42 = *v36;
        Class v43 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v44 = [v42 cellForItemAtIndexPath:v43];

        if (!v44) {
          goto LABEL_31;
        }
        self;
        uint64_t v45 = (void *)swift_dynamicCastObjCClass();
        if (!v45)
        {

LABEL_31:
          (*v51)(v49, v58);
          goto LABEL_12;
        }
        [v45 resetScrollOffset];

        (*v51)(v49, v58);
        *(unsigned char *)(v34 + v48) = 0;
      }
LABEL_12:

LABEL_13:
      v17 += 2;
      if (!--v16) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for HomeListCuratedCollectionsSectionController()
{
  return self;
}

id sub_10006A198()
{
  if (qword_101610BC8 != -1) {
    dispatch_once(&qword_101610BC8, &stru_10131C308);
  }
  uint64_t v0 = (void *)qword_101610BC0;

  return v0;
}

void sub_10006B544(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isEqualToString:@"NavigationDisableLockScreen"])
  {
    uint64_t Integer = GEOConfigGetInteger();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = Integer <= 0
                                                              || (unint64_t)Integer < 0x3E8
                                                              && *(void *)(*(void *)(a1 + 40) + 32) >= (unint64_t)Integer;
  }
  else
  {
    uint64_t v3 = +[NSUserDefaults standardUserDefaults];
    id v5 = [v3 stringForKey:*(void *)(a1 + 32)];

    id v4 = v5;
    if (v5)
    {
      if ([v5 isEqualToString:@"Disable"])
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
      }
      else if ([v5 isEqualToString:@"Enable"])
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
      }
      else
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = *(void *)(*(void *)(a1 + 40) + 32) >= (unint64_t)[v5 longLongValue];
      }
      id v4 = v5;
    }
  }
}

id sub_10006BD6C()
{
  if (qword_101610228 != -1) {
    dispatch_once(&qword_101610228, &stru_1013126C0);
  }
  uint64_t v0 = (void *)qword_101610220;

  return v0;
}

uint64_t sub_10006BE3C()
{
  uint64_t v59 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(uint64_t (***)(uint64_t))(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v58 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for DispatchQoS();
  p_aBlock = *(void ****)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v71 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v60 = v0;
  unint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource_queryContents];
  if (v5 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v48 = 0;
LABEL_35:
    swift_bridgeObjectRelease();
    return sub_10006C5D8(v48);
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_34;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    uint64_t v8 = 0;
    unint64_t v64 = v5 & 0xC000000000000001;
    long long v54 = &v67;
    uint64_t v55 = OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource_lockQueue;
    uint64_t v51 = (void (**)(char *, uint64_t))(v1 + 1);
    uint64_t v50 = (void (**)(char *, uint64_t))(p_aBlock + 1);
    uint64_t v9 = &selRef_loadListEditAllActions;
    uint64_t v10 = &selRef_contentBottomConstraint;
    uint64_t v11 = &selRef_useDefaultLayoutWhenCalculatingBottomInsetForFloatingControls;
    unint64_t v53 = v5;
    uint64_t v52 = v6;
    while (1)
    {
      id v12 = v64 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v8 + 32);
      uint64_t v13 = v12;
      id v14 = [v12 v9[435]];
      if (v14) {
        break;
      }

LABEL_6:
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v48 = (uint64_t)v63;
        goto LABEL_35;
      }
    }
    uint64_t v15 = v14;
    id v16 = [v13 v10[484]];
    if (v16)
    {
      uint64_t v17 = v16;
      id v18 = [v15 v11[136]];

      if (!v18)
      {
        id v19 = [objc_allocWithZone((Class)GEOMapItemStorageUserValues) init];
        [v15 setUserValues:v19];
      }
      id v20 = [v15 v11[136]];
      [v20 setName:v17];
    }
    id v21 = [objc_allocWithZone((Class)MKMapItem) initWithGeoMapItem:v15 isPlaceHolderPlace:0];
    if (!v21) {
      goto LABEL_19;
    }
    uint64_t v22 = v21;
    id v23 = [v21 _styleAttributes];
    if (v23)
    {
      uint64_t v24 = v23;
      unsigned __int8 v25 = [v23 isLabelPOI];

      if (v25)
      {

LABEL_19:
LABEL_29:
        uint64_t v11 = &selRef_useDefaultLayoutWhenCalculatingBottomInsetForFloatingControls;
        goto LABEL_6;
      }
    }
    uint64_t v26 = dispatch thunk of FavoriteItem.customName.getter();
    if (v27)
    {
      uint64_t v28 = v26;
      uint64_t v29 = v27;
      NSString v30 = String._bridgeToObjectiveC()();
      [v22 setName:v30];
    }
    else
    {
      id v31 = [v22 name];
      if (!v31)
      {

LABEL_28:
        uint64_t v10 = &selRef_contentBottomConstraint;
        goto LABEL_29;
      }
      NSString v30 = v31;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v32;
    }

    uint64_t v33 = (__int16)dispatch thunk of FavoriteItem.type.getter();
    id v34 = objc_allocWithZone((Class)type metadata accessor for PersonalizedFavoriteItem());
    id v35 = v22;
    sub_1000672B4(v35, v33, v28, v29);
    id v61 = v35;

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v1 = v54;
    if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    os_log_type_t v36 = v60;
    uint64_t v37 = *(NSObject **)&v60[v55];
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v36;
    *(void *)(v38 + 24) = &v71;
    id v39 = v36;
    sub_10006C5D8((uint64_t)v63);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_10010CAB8;
    *(void *)(v40 + 24) = v38;
    uint64_t v62 = v38;
    uint64_t v69 = sub_10010B930;
    uint64_t v70 = v40;
    p_aBlock = &aBlock;
    aBlock = _NSConcreteStackBlock;
    uint64_t v66 = 1107296256;
    unint64_t v67 = sub_10010B988;
    v68 = &unk_1012DDCD8;
    uint64_t v41 = _Block_copy(&aBlock);
    unint64_t v5 = v70;
    swift_retain();
    swift_release();
    dispatch_sync(v37, v41);
    _Block_release(v41);
    LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v37)
    {
      __break(1u);
      goto LABEL_33;
    }
    sub_100100830(0, (unint64_t *)&qword_1015CE570);
    uint64_t v63 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v42 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v69 = sub_10010CB04;
    uint64_t v70 = v42;
    aBlock = _NSConcreteStackBlock;
    uint64_t v66 = 1107296256;
    unint64_t v67 = sub_10008C380;
    v68 = &unk_1012DDD00;
    Class v43 = _Block_copy(&aBlock);
    swift_release();
    id v44 = v56;
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
    uint64_t v45 = v58;
    uint64_t v46 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    os_log_type_t v47 = v63;
    OS_dispatch_queue.async(group:qos:flags:execute:)();

    _Block_release(v43);
    (*v51)(v45, v46);
    (*v50)(v44, v57);
    uint64_t v63 = sub_10010CAB8;
    unint64_t v5 = v53;
    uint64_t v6 = v52;
    uint64_t v9 = &selRef_loadListEditAllActions;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006C5D8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_10006E2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006E31C(uint64_t a1)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000EC308;
  _OWORD v8[3] = &unk_1012F9370;
  long long v9 = *(_OWORD *)(a1 + 32);
  uint64_t v2 = objc_retainBlock(v8);
  uint64_t v3 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_1000EF36C;
  v5[3] = &unk_1012F93C0;
  void v5[4] = v3;
  id v6 = v2;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v4 = v2;
  [v3 _gatherItemsWithShouldCancel:v4 completion:v5];
}

BOOL sub_10006E804(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (static NSObject.== infix(_:_:)())
  {
    if (a4)
    {
      if (a4 == 1)
      {
        if (a8 == 1) {
          return a2 == a6 && a3 == a7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0;
        }
      }
      else if (a2 | a3)
      {
        if (a2 ^ 1 | a3)
        {
          if (a8 == 2 && a6 == 2 && !a7) {
            return 1;
          }
        }
        else if (a8 == 2 && a6 == 1 && !a7)
        {
          return 1;
        }
      }
      else if (a8 == 2 && !(a7 | a6))
      {
        return 1;
      }
    }
    else if (!a8)
    {
      return a2 == a6 && a3 == a7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0;
    }
  }
  return 0;
}

void sub_10007104C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 192));
  _Unwind_Resume(a1);
}

void sub_100071374(uint64_t a1)
{
  uint64_t v2 = sub_1000EC2B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Forcing recalculation", v3, 2u);
  }

  *(unsigned char *)(*(void *)(a1 + 32) + 76) = 1;
}

uint64_t sub_1000716FC(uint64_t a1)
{
  unint64_t v3 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v34 = v1;
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
  swift_beginAccess();
  *uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_19:
    uint64_t v31 = *v4;
    swift_bridgeObjectRetain_n();
    uint64_t v32 = sub_10001ABB0(v31);
    swift_bridgeObjectRelease();
    v39[0] = (uint64_t)v32;
    sub_10000ECA8(v39);
    swift_bridgeObjectRelease();
    *(void *)(v34 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = v39[0];
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = 32;
  uint64_t v35 = a1;
  while (1)
  {
    uint64_t v8 = *(void **)(a1 + v7);
    (*(void (**)(long long *__return_ptr, uint64_t))((swift_isaMask & *v8) + 0x198))(&v37, v6);
    if (*((void *)&v38 + 1)) {
      break;
    }
    uint64_t v6 = sub_1000FF2E0((uint64_t)&v37, (uint64_t *)&unk_1015D73B0);
LABEL_4:
    v7 += 16;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  sub_100101314(&v37, (uint64_t)v39);
  uint64_t v9 = v40;
  uint64_t v10 = v41;
  sub_1000FF380(v39, v40);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  id v12 = v8;
  LOBYTE(v9) = v11(v9, v10);
  sub_100071F18(v9);
  sub_100100830(0, &qword_1015D48A0);
  long long v37 = 0u;
  long long v38 = 0u;
  uint64_t v13 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  swift_beginAccess();
  sub_1000FF4D4((uint64_t)v39, (uint64_t)&v37);
  id v14 = v13;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v4;
  os_log_type_t v36 = (void *)*v4;
  *uint64_t v4 = 0x8000000000000000;
  unint64_t v18 = sub_100071AC4((uint64_t)v14);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (!__OFADD__(v19, v20))
  {
    char v22 = v17;
    if (*(void *)(v16 + 24) < v21)
    {
      sub_100071C38(v21, isUniquelyReferenced_nonNull_native);
      unint64_t v23 = sub_100071AC4((uint64_t)v14);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_22;
      }
      unint64_t v18 = v23;
      unsigned __int8 v25 = v36;
      if ((v22 & 1) == 0) {
        goto LABEL_15;
      }
LABEL_13:
      uint64_t v26 = v25[7] + 40 * v18;
      sub_1000FF22C(v26);
      sub_100101314(&v37, v26);
LABEL_17:
      *uint64_t v4 = (uint64_t)v25;

      swift_bridgeObjectRelease();
      swift_endAccess();

      uint64_t v6 = sub_1000FF22C((uint64_t)v39);
      a1 = v35;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      unsigned __int8 v25 = v36;
      if (v17) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1003525F0();
      unsigned __int8 v25 = v36;
      if (v22) {
        goto LABEL_13;
      }
    }
LABEL_15:
    v25[(v18 >> 6) + 8] |= 1 << v18;
    *(void *)(v25[6] + 8 * v18) = v14;
    sub_100101314(&v37, v25[7] + 40 * v18);
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_21;
    }
    void v25[2] = v29;
    id v30 = v14;
    goto LABEL_17;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100071AC4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100071B14(a1, v4, &qword_1015D48A0);
}

unint64_t sub_100071B14(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100100830(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = static NSObject.== infix(_:_:)();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

double sub_100071C28@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_100071C38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015CCB78);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (a2)
    {
      sub_100101314(v23, (uint64_t)v34);
    }
    else
    {
      sub_1000FF4D4((uint64_t)v23, (uint64_t)v34);
      id v24 = v22;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = sub_100101314(v34, *(void *)(v7 + 56) + 40 * v15);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100071F18(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v1.super.Class isa = (Class)qword_101611820;
      unint64_t v2 = 0xD000000000000028;
      unint64_t v3 = 0xD000000000000054;
      unint64_t v9 = 0x8000000100F80170;
      unint64_t v4 = 0x8000000100F80140;
      unint64_t v5 = 0x206C6C4120656553;
      unint64_t v6 = 0xEF73746E65636552;
      return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
    }
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v1.super.Class isa = (Class)qword_101611820;
    unint64_t v2 = 0xD00000000000002ALL;
    unint64_t v3 = 0xD00000000000004BLL;
    unint64_t v9 = 0x8000000100F80220;
    unint64_t v4 = 0x8000000100F801D0;
    uint64_t v7 = "See All My Guides";
LABEL_18:
    unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
    unint64_t v5 = 0xD000000000000011;
    return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
  }
  if (qword_1015CBDD8 != -1) {
    swift_once();
  }
  if (byte_1016118B0 != 1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v1.super.Class isa = (Class)qword_101611820;
    unint64_t v2 = 0xD00000000000002ALL;
    unint64_t v3 = 0xD00000000000004ELL;
    unint64_t v9 = 0x8000000100F802C0;
    unint64_t v4 = 0x8000000100F80270;
    uint64_t v7 = "See All Favorites";
    goto LABEL_18;
  }
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v1.super.Class isa = (Class)qword_101611820;
  unint64_t v2 = 0xD000000000000027;
  unint64_t v3 = 0xD00000000000004BLL;
  unint64_t v9 = 0x8000000100F80340;
  unint64_t v4 = 0x8000000100F80310;
  unint64_t v5 = 0x206C6C4120656553;
  unint64_t v6 = 0xEE0064656E6E6950;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
}

uint64_t sub_100073EA0()
{
  uint64_t v53 = v0;
  NSBundle v1 = *(unsigned char **)(v0 + 56);
  if ((v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] & 1) != 0
    || (id v2 = [v1 mapItemStorage], (*(void *)(v0 + 64) = v2) == 0))
  {
LABEL_6:
    unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  unint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) != 1
    || (uint64_t v5 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA,
        *(void *)(v0 + 72) = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA,
        (*(unsigned char *)(v4 + v5) & 1) != 0))
  {

    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(v0 + 48);
  *(unsigned char *)(v4 + v5) = 1;
  if (v8)
  {
    uint64_t v9 = *(void *)(v0 + 40);
    id v10 = *(id *)(v0 + 48);
    [v10 coordinate];
    double v12 = v11;
    [v10 coordinate];
    double v14 = v13;
    [v3 coordinate];
    j__GEOCalculateDistance();
    double v16 = v15;
    unint64_t v17 = self;
    [v3 coordinate];
    if ((unint64_t)(v9 + 1) > 7) {
      uint64_t v20 = 1;
    }
    else {
      uint64_t v20 = dword_100F6E404[v9 + 1];
    }
    uint64_t v27 = *(void *)(v0 + 56);
    id v28 = [v17 idealTransportTypeForOrigin:v20 destination:v12 mapType:v14];

    *(void *)(v27 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType) = v28;
    if (qword_1015CBCB0 != -1) {
      swift_once();
    }
    if (v16 < *(double *)&qword_101611628)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      unint64_t v29 = *(void **)(v0 + 56);
      v55._countAndFlagsBits = 0xD000000000000041;
      v55._object = (void *)0x8000000100F894A0;
      v30._object = (void *)0x8000000100F89480;
      v30._countAndFlagsBits = 0xD000000000000019;
      v31._countAndFlagsBits = 0x79622065736F6C43;
      v31._object = (void *)0xE800000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)qword_101611820, v31, v55);
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v29 setSubtitle:v32];

      *((unsigned char *)v29 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere) = 1;
      *(unsigned char *)(v4 + v5) = 0;
      goto LABEL_6;
    }
    uint64_t v33 = *(void **)(v0 + 56);
    id v34 = [self _navigation_localizedStringForDistance:2 context:1 extraDetail:v16];
    [v33 setSubtitle:v34];

    if (qword_1015CBCD0 != -1) {
      swift_once();
    }
    if (*(double *)&qword_101611648 < v16
      || objc_msgSend(*(id *)(v0 + 56), "type", *(double *)&qword_101611648) == (id)1)
    {
      goto LABEL_27;
    }
  }
  else
  {
    double v16 = 0.0;
  }
  *(double *)(v0 + 80) = v16;
  if (!sub_10000D6A0())
  {
LABEL_27:

    *(unsigned char *)(v4 + v5) = 0;
    goto LABEL_6;
  }
  int64_t v21 = *(char **)(v0 + 56);
  id v22 = [objc_allocWithZone((Class)MKDirectionsRequest) init];
  *(void *)(v0 + 88) = v22;
  id v23 = [self mapItemForCurrentLocation];
  [v22 setSource:v23];

  id v24 = [v21 mkMapItem];
  [v22 setDestination:v24];

  unint64_t v25 = *(void *)&v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] - 1;
  if (v25 > 3) {
    uint64_t v26 = 1;
  }
  else {
    uint64_t v26 = qword_100F6E428[v25];
  }
  [v22 setTransportType:v26];
  id v35 = [objc_allocWithZone((Class)MKDirections) initWithRequest:v22];
  *(void *)(v0 + 96) = v35;
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  os_log_type_t v36 = *(void **)(v0 + 56);
  uint64_t v37 = type metadata accessor for Logger();
  *(void *)(v0 + 104) = sub_1000F2248(v37, (uint64_t)qword_1016115E0);
  id v38 = v36;
  id v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v42 = *(void **)(v0 + 56);
  if (v41)
  {
    id v51 = v35;
    Class v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)Class v43 = 136315138;
    id v44 = [v42 debugDescription];
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v47 = v46;

    *(void *)(v0 + 32) = sub_1000F2280(v45, v47, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Refreshing ETA: %s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v35 = v51;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v48 = swift_task_alloc();
  *(void *)(v0 + 112) = v48;
  *(void *)(v48 + 16) = v35;
  uint64_t v49 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v49;
  uint64_t v50 = sub_1000FF33C((uint64_t *)&unk_1015DC438);
  *uint64_t v49 = v0;
  v49[1] = sub_10000900C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001BLL, 0x8000000100F89460, sub_10010ED34, v48, v50);
}

void sub_100074914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100074D5C(id a1, ChromeOverlay *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  if (objc_opt_respondsToSelector()) {
    [(ChromeOverlay *)v4 didUpdateMapInsets];
  }
}

void sub_100074FF4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

unsigned char *sub_100075370(void (**a1)(char *, uint64_t, uint64_t))
{
  uint64_t v58 = a1;
  uint64_t v2 = sub_1000FF33C(&qword_1015D7430);
  __chkstk_darwin(v2 - 8);
  uint64_t v57 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D7438);
  __chkstk_darwin(v4 - 8);
  uint64_t v48 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D7440);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  __chkstk_darwin(v9);
  id v51 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C((uint64_t *)&unk_1015D7448);
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  __chkstk_darwin(v11);
  uint64_t v54 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  double v14 = *(void (***)(char *, uint64_t, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  double v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer] = 0;
  unint64_t v17 = &v1[OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot];
  *unint64_t v17 = 0;
  v17[1] = 0;
  v1[OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate] = 0;
  v1[OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate] = &_swiftEmptySetSingleton;
  *(void *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands] = _swiftEmptyArrayStorage;
  uint64_t v18 = OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers;
  double v19 = v1;
  *(void *)&v1[v18] = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___suggestionsDataProvider] = 0;
  uint64_t v20 = OBJC_IVAR____TtC4Maps22HomeListRootController_favoritesDataProvider;
  if (qword_1015CBCD8 != -1) {
    swift_once();
  }
  int64_t v21 = (void *)qword_101611650;
  *(void *)&v19[v20] = qword_101611650;
  *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___homeResultDataProvider] = 1;
  uint64_t v22 = OBJC_IVAR____TtC4Maps22HomeListRootController_dataSourceUpdateDebouncer;
  sub_1000FF33C(&qword_1015D7420);
  swift_allocObject();
  id v23 = v21;
  *(void *)&v19[v22] = PassthroughSubject.init()();
  id v24 = &_swiftEmptySetSingleton;
  unint64_t v25 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_14;
    }
    unint64_t v25 = (void *)sub_10033AF18((unint64_t)_swiftEmptyArrayStorage);
  }
  while (1)
  {
    *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController_subscribers] = v25;
    v19[OBJC_IVAR____TtC4Maps22HomeListRootController_isActive] = 0;
    *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___compositionalLayout] = 0;
    *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___diffableDataSource] = 0;
    *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers] = 0;
    *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___sectionControllersByIdentifier] = 0;
    *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders] = v24;
    if (qword_1015CBD40 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1000F2248(v13, (uint64_t)qword_101611778);
    v14[2](v16, v26, v13);
    OSSignposter.init(logger:)();
    uint64_t v27 = &v19[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName];
    *(void *)uint64_t v27 = "HomeListSectionLoading";
    *((void *)v27 + 1) = 22;
    v27[16] = 2;
    *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSingpostState] = 0;
    id v28 = v58;
    *(void *)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController_configuration] = v58;
    double v14 = v28;

    unint64_t v29 = (objc_class *)type metadata accessor for HomeListRootController();
    v61.unint64_t receiver = v19;
    v61.Class super_class = v29;
    [super init];
    id v24 = off_1015F0F98;
    double v19 = v30;
    if ((GEOConfigGetUInteger() & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_14:
    unint64_t v25 = &_swiftEmptySetSingleton;
  }
  Swift::String v31 = *(void **)&v19[OBJC_IVAR____TtC4Maps22HomeListRootController_dataSourceUpdateDebouncer];
  uint64_t v58 = v14;
  v59[0] = v31;
  swift_retain();
  static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  id v60 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v33 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v48, 1, 1, v32);
  sub_1001010F8(&qword_1015D7458, &qword_1015D7420);
  sub_100075DE0(&qword_1015D7460, (unint64_t *)&qword_1015CE570);
  id v34 = v51;
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_1000FF2E0(v33, &qword_1015D7438);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v50);
  swift_release();
  v59[0] = [self mainRunLoop];
  uint64_t v35 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v36 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v57, 1, 1, v35);
  sub_100100830(0, &qword_1015D7468);
  sub_1001010F8(&qword_1015D7470, &qword_1015D7440);
  sub_100075DE0(&qword_1015D7478, &qword_1015D7468);
  uint64_t v37 = v53;
  id v38 = v54;
  Publisher.receive<A>(on:options:)();
  sub_1000FF2E0(v36, &qword_1015D7430);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v37);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1001010F8((unint64_t *)&unk_1015D7480, (uint64_t *)&unk_1015D7448);
  uint64_t v39 = v56;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v39);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  os_log_type_t v40 = v19;
  BOOL v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    v59[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136315394;
    swift_getObjectType();
    uint64_t v44 = _typeName(_:qualified:)();
    id v60 = (id)sub_1000F2280(v44, v45, (uint64_t *)v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    id v60 = (id)sub_1000F2280(0xD000000000000014, 0x8000000100F80C60, (uint64_t *)v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s.%s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v40;
}

uint64_t sub_100075DE0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100100830(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

DimmingBehaviour *sub_100075F60()
{
  uint64_t v0 = [[DimmingBehaviour alloc] initWithDimming:&stru_1012FEFC8 threshold:&stru_1012FEFE8];

  return v0;
}

uint64_t sub_1000766EC()
{
  NSBundle v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 fractionalWidthDimension:1.0];
  [self estimatedCellHeight];
  id v4 = [v2 estimatedDimension:];
  id v35 = self;
  id v5 = [v35 sizeWithWidthDimension:v3 heightDimension:v4];

  id v6 = [self itemWithLayoutSize:v5];
  uint64_t v7 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100F5DFF0;
  *(void *)(v8 + 32) = v6;
  *(void *)&v36[0] = v8;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015D4330);
  id v9 = v6;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v7 verticalGroupWithLayoutSize:v5 subitems:isa];

  id v12 = [self sectionWithGroup:v11];
  sub_1000F1C90((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v36);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v36);
  if (!Strong)
  {

    return (uint64_t)v12;
  }
  id v34 = v9;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    double v14 = v1;
  }
  else {
    double v14 = 0;
  }
  if (v14)
  {
    uint64_t v33 = v11;
    id v15 = v1;
    id v16 = sub_1000F5CB8();
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    if (v20)
    {
      uint64_t v21 = v17;
      uint64_t v22 = *(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
      sub_1000F71E8(*(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot));
      sub_1000F71E8(v20);
      id v23 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000F517C(v23, v21, v19, 0, v22, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      memset(v36, 0, 64);

      swift_bridgeObjectRelease();
    }

    if (*(void *)&v36[0])
    {
      sub_1000FF2E0((uint64_t)v36, (uint64_t *)&unk_1015DB0D0);
      id v24 = [v2 fractionalWidthDimension:1.0];
      [self estimatedHeight];
      id v25 = [v2 estimatedDimension];
      id v26 = [v35 sizeWithWidthDimension:v24 heightDimension:v25];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v28 = [self boundarySupplementaryItemWithLayoutSize:v26 elementKind:v27 alignment:1];
      swift_unknownObjectRelease();

      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_100F5DFF0;
      *(void *)(v29 + 32) = v28;
      *(void *)&v36[0] = v29;
      specialized Array._endMutation()();
      sub_100100830(0, (unint64_t *)&unk_1015D14F0);
      id v30 = v28;
      Class v31 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v12 setBoundarySupplementaryItems:v31];
    }
    else
    {
      swift_unknownObjectRelease();
      sub_1000FF2E0((uint64_t)v36, (uint64_t *)&unk_1015DB0D0);
    }

    return (uint64_t)v12;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100076C50(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) stack];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100077410()
{
  if (qword_101610208 != -1) {
    dispatch_once(&qword_101610208, &stru_1013124B0);
  }
  uint64_t v0 = (void *)qword_101610200;

  return v0;
}

id sub_100077568()
{
  if (qword_101610E98 != -1) {
    dispatch_once(&qword_101610E98, &stru_101320F10);
  }
  uint64_t v0 = (void *)qword_101610E90;

  return v0;
}

void sub_100077850(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateOverlayVisibilityWithCurrentContainerStyle:a2 progress:a4];
}

void sub_100078C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100078CB4()
{
  if (qword_10160EAC0 != -1) {
    dispatch_once(&qword_10160EAC0, &stru_1012E7C18);
  }
  uint64_t v0 = (void *)qword_10160EAB8;

  return v0;
}

void sub_100079568(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000799C8(double *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)CAGradientLayer);
  [v4 setBounds:a1[4], a1[5], a1[6], a1[7]];
  id v5 = +[UIColor whiteColor];
  v10[0] = [v5 CGColor];
  id v6 = +[UIColor whiteColor];
  id v7 = [v6 colorWithAlphaComponent:0.0];
  v10[1] = [v7 CGColor];
  uint64_t v8 = +[NSArray arrayWithObjects:v10 count:2];
  [v4 setColors:v8];

  id v9 = [v3 CGContext];
  [v4 renderInContext:v9];
}

void sub_10007A02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10007A064(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = *(void **)(a1 + 32);
    if (v3)
    {
      id v4 = [v3 copy];
      id v5 = (void *)WeakRetained[2];
      WeakRetained[2] = v4;
    }
    sub_10007A190(WeakRetained);
  }
  else
  {
    GEOFindOrCreateLog();
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136446722;
      uint64_t v8 = "MapsSuggestionsRidesharingSource.m";
      __int16 v9 = 1026;
      int v10 = 163;
      __int16 v11 = 2082;
      id v12 = "-[MapsSuggestionsRidesharingSource updateSuggestionEntriesWithHandler:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v7, 0x1Cu);
    }
  }
}

void sub_10007A190(void *a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    id v3 = [a1 uniqueName];
    id v4 = NSStringFromMapsSuggestionsCurrentBestLocation();
    *(_DWORD *)buf = 138412802;
    uint64_t v13 = v3;
    __int16 v14 = 2112;
    id v15 = @"ALL";
    __int16 v16 = 2112;
    uint64_t v17 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "{MSgDebug} UPDATING SOURCE{%@} for TYPE{%@} at LATLONG{%@}", buf, 0x20u);
  }
  id v5 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    id v6 = [a1 uniqueName];
    *(_DWORD *)buf = 138412546;
    uint64_t v13 = v6;
    __int16 v14 = 2080;
    id v15 = "_updateRideBookingRideStatuses";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s BEGIN", buf, 0x16u);
  }
  int v7 = GEOFindOrCreateLog();
  if (os_signpost_enabled(v7))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "_updateRideBookingRideStatuses", "", buf, 2u);
  }

  uint64_t v8 = a1;
  objc_sync_enter(v8);
  [v8 setRefreshing:1];
  objc_sync_exit(v8);

  objc_initWeak((id *)buf, v8);
  __int16 v9 = v8[5];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10007FFDC;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v11, (id *)buf);
  dispatch_async(v9, block);
  objc_destroyWeak(&v11);
  objc_destroyWeak((id *)buf);
}

void sub_10007A42C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10007A720(uint64_t a1)
{
  double v2 = 10.0;
  if (!*(unsigned char *)(a1 + 48)) {
    double v2 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 88) setConstant:v2];
  double v3 = -10.0;
  if (!*(unsigned char *)(a1 + 48)) {
    double v3 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 96) setConstant:v3];
  id v4 = [*(id *)(a1 + 32) _labelFont];
  [*(id *)(*(void *)(a1 + 32) + 32) setFont:v4];

  id v5 = [*(id *)(*(void *)(a1 + 32) + 32) layer];
  [v5 setMasksToBounds:0];

  int v6 = *(unsigned __int8 *)(a1 + 48);
  if (*(unsigned char *)(a1 + 48))
  {
    id v7 = 0;
  }
  else
  {
    id v5 = +[UIColor blackColor];
    id v7 = [v5 CGColor];
  }
  uint64_t v8 = [*(id *)(*(void *)(a1 + 32) + 32) layer];
  [v8 setShadowColor:v7];

  if (!v6) {
  if (*(unsigned char *)(a1 + 48))
  }
    float v9 = 0.0;
  else {
    float v9 = 0.1;
  }
  int v10 = [*(id *)(*(void *)(a1 + 32) + 32) layer];
  *(float *)&double v11 = v9;
  [v10 setShadowOpacity:v11];

  id v12 = [*(id *)(*(void *)(a1 + 32) + 32) layer];
  [v12 setShadowOffset:0.0, 1.0];

  uint64_t v13 = [*(id *)(*(void *)(a1 + 32) + 32) layer];
  [v13 setShadowRadius:5.0];

  [*(id *)(*(void *)(a1 + 32) + 40) setMasksToBounds:0];
  if (*(unsigned char *)(a1 + 48))
  {
    [*(id *)(*(void *)(a1 + 32) + 40) setShadowColor:0];
  }
  else
  {
    id v14 = +[UIColor blackColor];
    [*(id *)(*(void *)(a1 + 32) + 40) setShadowColor:[v14 CGColor]];
  }
  double v15 = 0.0;
  if (!*(unsigned char *)(a1 + 48)) {
    *(float *)&double v15 = 0.1;
  }
  [*(id *)(*(void *)(a1 + 32) + 40) setShadowOpacity:v15];
  double height = CGSizeZero.height;
  [*(id *)(*(void *)(a1 + 32) + 40) setShadowOffset:CGSizeZero.width, height];
  [*(id *)(*(void *)(a1 + 32) + 40) setShadowRadius:10.0];
  [*(id *)(a1 + 32) updateTheme];
  if ([*(id *)(a1 + 40) length]) {
    [*(id *)(*(void *)(a1 + 32) + 32) setText:*(void *)(a1 + 40)];
  }
  uint64_t v17 = [*(id *)(*(void *)(a1 + 32) + 32) font];
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v18 = 3;
  }
  else {
    uint64_t v18 = 2;
  }
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v19 = 7;
  }
  else {
    uint64_t v19 = 6;
  }
  id v34 = v17;
  [v17 pointSize];
  uint64_t v20 = +[UIImageSymbolConfiguration configurationWithPointSize:weight:scale:](UIImageSymbolConfiguration, "configurationWithPointSize:weight:scale:", v19, v18);
  [*(id *)(*(void *)(a1 + 32) + 48) setPreferredSymbolConfiguration:v20];

  if (*(unsigned char *)(a1 + 48)) {
    CFStringRef v21 = @"chevron.forward.circle.fill";
  }
  else {
    CFStringRef v21 = @"chevron.forward";
  }
  uint64_t v22 = +[UIImage systemImageNamed:v21];
  [*(id *)(*(void *)(a1 + 32) + 48) setImage:v22];

  id v23 = [*(id *)(*(void *)(a1 + 32) + 48) layer];
  [v23 setMasksToBounds:0];

  int v24 = *(unsigned __int8 *)(a1 + 48);
  if (*(unsigned char *)(a1 + 48))
  {
    id v25 = 0;
  }
  else
  {
    id v23 = +[UIColor blackColor];
    id v25 = [v23 CGColor];
  }
  id v26 = [*(id *)(*(void *)(a1 + 32) + 48) layer];
  [v26 setShadowColor:v25];

  if (!v24) {
  if (*(unsigned char *)(a1 + 48))
  }
    float v27 = 0.0;
  else {
    float v27 = 0.1;
  }
  id v28 = [*(id *)(*(void *)(a1 + 32) + 48) layer];
  *(float *)&double v29 = v27;
  [v28 setShadowOpacity:v29];

  id v30 = [*(id *)(*(void *)(a1 + 32) + 48) layer];
  [v30 setShadowOffset:0.0, 1.0];

  Class v31 = [*(id *)(*(void *)(a1 + 32) + 48) layer];
  [v31 setShadowRadius:5.0];

  [*(id *)(*(void *)(a1 + 32) + 56) setMasksToBounds:0];
  if (*(unsigned char *)(a1 + 48))
  {
    [*(id *)(*(void *)(a1 + 32) + 56) setShadowColor:0];
  }
  else
  {
    id v32 = +[UIColor blackColor];
    [*(id *)(*(void *)(a1 + 32) + 56) setShadowColor:[v32 CGColor]];
  }
  double v33 = 0.0;
  if (!*(unsigned char *)(a1 + 48)) {
    *(float *)&double v33 = 0.1;
  }
  [*(id *)(*(void *)(a1 + 32) + 56) setShadowOpacity:v33];
  [*(id *)(*(void *)(a1 + 32) + 56) setShadowOffset:CGSizeZero.width, height];
  [*(id *)(*(void *)(a1 + 32) + 56) setShadowRadius:10.0];
}

BOOL sub_10007B148(id a1, MapsSuggestionsEntry *a2)
{
  double v2 = a2;
  double v3 = objc_alloc_init(MapsSuggestionsOfflineService);
  unsigned __int8 v4 = [(MapsSuggestionsOfflineService *)v3 shouldKeepEntryWhenOffline:v2];

  return v4;
}

void sub_10007B974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007C78C(uint64_t a1)
{
  uint64_t v1 = GEOConfigGetArray();
  if (v1)
  {
    double v2 = +[GEOSortPriorityMapping sortPriorityMappingFromDefaultsValue:v1];
    if (v2)
    {
      uint64_t v3 = +[PersonalizedItemPriorityFunction priorityFunctionForGEOSortPriorityMapping:v2];
      unsigned __int8 v4 = (void *)qword_10160EB18;
      qword_10160EB18 = v3;
    }
  }
  uint64_t v19 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:400 sourceType:1 matchBlock:&stru_1012E8880];
  v21[0] = v19;
  uint64_t v18 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:350 sourceType:1 matchBlock:&stru_1012E88A0];
  v21[1] = v18;
  id v5 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:350 sourceType:6 sourceSubtype:6];
  v21[2] = v5;
  int v6 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:350 sourceType:6 sourceSubtype:8];
  v21[3] = v6;
  id v7 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:300 sourceType:3 sourceSubtype:2];
  void v21[4] = v7;
  uint64_t v8 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:300 sourceType:9];
  v21[5] = v8;
  float v9 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:250 sourceType:2];
  v21[6] = v9;
  int v10 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:200 sourceType:3 sourceSubtype:1];
  v21[7] = v10;
  +[PersonalizedItemPriorityFunctionEntry entryWithPriority:150 sourceType:8];
  double v11 = v17 = (void *)v1;
  v21[8] = v11;
  id v12 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:100 sourceType:1];
  v21[9] = v12;
  uint64_t v13 = +[PersonalizedItemPriorityFunctionEntry defaultEntryWithPriority:200];
  v21[10] = v13;
  id v14 = +[NSArray arrayWithObjects:v21 count:11];

  id v15 = [objc_alloc(*(Class *)(a1 + 32)) initWithEntries:v14];
  __int16 v16 = (void *)qword_10160EB20;
  qword_10160EB20 = (uint64_t)v15;
}

void sub_10007D228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v26);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10007E0E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10007E168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_10007E1EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_10007E2E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007E978(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000FF33C((uint64_t *)&unk_1015D7390);
  sub_1001010F8(&qword_1015CF1D0, (uint64_t *)&unk_1015D7390);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    unsigned __int8 v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      swift_unknownObjectRetain();
      sub_10007EA30(&v6, v5);
      swift_unknownObjectRelease();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_10007EA30(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_10007EF08((uint64_t)v22, a2);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v14 = a1;
  uint64_t v9 = ~v7;
  do
  {
    *(void *)&long long v15 = *(void *)(*(void *)(v5 + 48) + 8 * v8);
    swift_unknownObjectRetain_n();
    sub_1000FF33C(&qword_1015CF1D8);
    if (!swift_dynamicCast())
    {
      uint64_t v21 = 0;
      long long v19 = 0u;
      long long v20 = 0u;
      sub_1000FF2E0((uint64_t)&v19, &qword_1015CF1E0);
LABEL_4:
      swift_unknownObjectRelease();
      goto LABEL_5;
    }
    v22[0] = v19;
    v22[1] = v20;
    uint64_t v23 = v21;
    uint64_t v18 = a2;
    swift_unknownObjectRetain();
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
      sub_1000FF2E0((uint64_t)&v15, &qword_1015CF1E0);
      sub_1000F351C((uint64_t)v22);
      goto LABEL_4;
    }
    long long v19 = v15;
    long long v20 = v16;
    uint64_t v21 = v17;
    char v10 = static AnyHashable.== infix(_:_:)();
    sub_1000F351C((uint64_t)&v19);
    sub_1000F351C((uint64_t)v22);
    swift_unknownObjectRelease();
    if (v10)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      *id v14 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
      swift_unknownObjectRetain();
      return 0;
    }
LABEL_5:
    unint64_t v8 = (v8 + 1) & v9;
  }
  while (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  swift_bridgeObjectRelease();
  a1 = v14;
LABEL_13:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v22[0] = *v2;
  *uint64_t v2 = 0x8000000000000000;
  Swift::Int v12 = swift_unknownObjectRetain();
  sub_10007ECA8(v12, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = *(void *)&v22[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

Swift::Int sub_10007ECA8(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_10013E078();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_10013FCF8();
        goto LABEL_18;
      }
      sub_100140994();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    sub_10007EF08((uint64_t)v24, v5);
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (1)
      {
        *(void *)&long long v17 = *(void *)(*(void *)(v8 + 48) + 8 * a2);
        swift_unknownObjectRetain_n();
        sub_1000FF33C(&qword_1015CF1D8);
        if (!swift_dynamicCast()) {
          break;
        }
        v24[0] = v21;
        v24[1] = v22;
        uint64_t v25 = v23;
        uint64_t v20 = v5;
        swift_unknownObjectRetain();
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v19 = 0;
          long long v17 = 0u;
          long long v18 = 0u;
          sub_1000FF2E0((uint64_t)&v17, &qword_1015CF1E0);
          sub_1000F351C((uint64_t)v24);
          goto LABEL_11;
        }
        long long v21 = v17;
        long long v22 = v18;
        uint64_t v23 = v19;
        char v11 = static AnyHashable.== infix(_:_:)();
        sub_1000F351C((uint64_t)&v21);
        sub_1000F351C((uint64_t)v24);
        uint64_t result = swift_unknownObjectRelease();
        if (v11) {
          goto LABEL_21;
        }
LABEL_12:
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_18;
        }
      }
      uint64_t v23 = 0;
      long long v21 = 0u;
      long long v22 = 0u;
      sub_1000FF2E0((uint64_t)&v21, &qword_1015CF1E0);
LABEL_11:
      uint64_t result = swift_unknownObjectRelease();
      goto LABEL_12;
    }
  }
LABEL_18:
  uint64_t v12 = *v16;
  *(void *)(*v16 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
LABEL_21:
    sub_1000FF33C((uint64_t *)&unk_1015D7390);
    uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_10007EF08(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = a2;
  swift_unknownObjectRetain();
  sub_1000FF33C(&qword_1015CF1D8);
  if (swift_dynamicCast())
  {
    v7[0] = v3;
    v7[1] = v4;
    uint64_t v8 = v5;
    AnyHashable.hash(into:)();
    return sub_1000F351C((uint64_t)v7);
  }
  else
  {
    uint64_t v5 = 0;
    long long v3 = 0u;
    long long v4 = 0u;
    return sub_1000FF2E0((uint64_t)&v3, &qword_1015CF1E0);
  }
}

id sub_10007F014(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (objc_class *)type metadata accessor for HomeListRecentsSectionController();
  v22.unint64_t receiver = v1;
  v22.Class super_class = v11;
  [super homeDataProvidingObjectDidUpdate:a1];
  if (v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] == 1)
  {
    uint64_t v13 = v4;
    BOOL v14 = sub_10007F33C();
    uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilter];
    v20[0] = *(void *)&v1[OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilterQueue];
    long long v16 = (void *)swift_allocObject();
    v16[2] = v15;
    v16[3] = v14;
    v16[4] = v1;
    aBlock[4] = sub_10008C51C;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008C380;
    aBlock[3] = &unk_1012E5100;
    long long v17 = _Block_copy(aBlock);
    id v18 = v15;
    uint64_t v19 = v1;
    static DispatchQoS.unspecified.getter();
    v20[1] = _swiftEmptyArrayStorage;
    sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (id)swift_release();
  }
  return result;
}

uint64_t type metadata accessor for HomeListRecentsSectionController()
{
  return self;
}

void *sub_10007F33C()
{
  uint64_t v12 = _swiftEmptyArrayStorage;
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_markedLocationDataProvider) markedLocation];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v11 = sub_100100830(0, &qword_1015CF700);
    *(void *)&long long v10 = v2;
    id v3 = v2;
    uint64_t v4 = sub_10007F5EC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_10007F5EC((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    v4[2] = v6 + 1;
    sub_1000EFD84(&v10, &v4[4 * v6 + 4]);

    uint64_t v12 = v4;
  }
  id v7 = [*(id *)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataProvider) recents];
  uint64_t v8 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10007F480(v8);
  return v12;
}

void *sub_10007F480(void *result)
{
  uint64_t v2 = result[2];
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v6 = result;
  id result = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v1 = v3;
  if (!result || (int64_t v7 = v3[3] >> 1, v7 < v5))
  {
    if (v4 <= v5) {
      int64_t v8 = v4 + v2;
    }
    else {
      int64_t v8 = v4;
    }
    id result = sub_10007F5EC(result, v8, 1, v3);
    id v3 = result;
    *(void *)uint64_t v1 = result;
    int64_t v7 = result[3] >> 1;
  }
  uint64_t v9 = v3[2];
  uint64_t v10 = v7 - v9;
  if (!v6[2])
  {
    if (!v2) {
      goto LABEL_19;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v10 < v2)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v11 = (unint64_t)&v3[4 * v9 + 4];
  if ((unint64_t)(v6 + 4) < v11 + 32 * v2 && v11 < (unint64_t)&v6[4 * v2 + 4]) {
    goto LABEL_26;
  }
  swift_arrayInitWithCopy();
  if (v2)
  {
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, v2);
    uint64_t v15 = v13 + v2;
    if (!v14)
    {
      v3[2] = v15;
      goto LABEL_19;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    id result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_19:
  id result = (void *)swift_bridgeObjectRelease();
  if (v2 == v10) {
LABEL_23:
  }
    *(void *)uint64_t v1 = v3;
  return result;
}

void *sub_10007F5EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C((uint64_t *)&unk_1015D4740);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10007F6FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007F6FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10007F804()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v44 = v1;
  uint64_t v45 = v2;
  __chkstk_darwin(v1);
  uint64_t v43 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  id v38 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  uint64_t v42 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager_etaTimer;
  uint64_t v39 = sub_100100830(0, &qword_1015CE240);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v8 = v0;
  static DispatchQoS.unspecified.getter();
  uint64_t v47 = _swiftEmptyArrayStorage;
  sub_10007FF4C((unint64_t *)&unk_1015D5E90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000FF33C((uint64_t *)&unk_1015D52D0);
  sub_10010113C((unint64_t *)&unk_1015D5EA0, (uint64_t *)&unk_1015D52D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v38, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v41);
  uint64_t v9 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v47 = _swiftEmptyArrayStorage;
  sub_10007FF4C(&qword_1015CE248, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_1000FF33C(&qword_1015CE250);
  sub_10010113C(&qword_1015CE258, &qword_1015CE250);
  int64_t v11 = v43;
  uint64_t v10 = v44;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v12 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

  (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v10);
  *(void *)(v40 + v42) = v12;
  v8[OBJC_IVAR____TtC4Maps20MapsFavoritesManager_isETATimerRunning] = 0;
  *(void *)&v8[OBJC_IVAR____TtC4Maps20MapsFavoritesManager____lazy_storage___msgRoutine] = 0;
  uint64_t v13 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager_observers;
  *(void *)&v8[v13] = [objc_allocWithZone((Class)GEOObserverHashTable) initWithProtocol:&OBJC_PROTOCOL___HomeDataProvidingObserver queue:0];
  uint64_t v14 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager_storeSubscriptionTypes;
  sub_100028D98();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100F5CF70;
  *(void *)(v15 + 32) = type metadata accessor for FavoriteItem();
  *(void *)&v8[v14] = v15;
  uint64_t v16 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts;
  sub_1000FF33C(&qword_1015D5EB0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 24) = 0;
  *(void *)(v17 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v8[v16] = v17;
  uint64_t v18 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__sortedShortcuts;
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(void *)(v19 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v8[v18] = v19;
  uint64_t v20 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__setupButtons;
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(void *)(v21 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v8[v20] = v21;
  uint64_t v22 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__suggestions;
  uint64_t v23 = swift_allocObject();
  *(_DWORD *)(v23 + 24) = 0;
  *(void *)(v23 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v8[v22] = v23;
  uint64_t v24 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__hasInitialData;
  sub_1000FF33C(&qword_1015D5EB8);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 20) = 0;
  *(unsigned char *)(v25 + 16) = 0;
  *(void *)&v8[v24] = v25;
  uint64_t v26 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager__needsSuggestions;
  uint64_t v27 = swift_allocObject();
  *(_DWORD *)(v27 + 20) = 0;
  *(unsigned char *)(v27 + 16) = 1;
  *(void *)&v8[v26] = v27;
  v8[OBJC_IVAR____TtC4Maps20MapsFavoritesManager_active] = 0;
  *(void *)&v8[OBJC_IVAR____TtC4Maps20MapsFavoritesManager_mapViewMode] = 0;

  id v28 = (objc_class *)type metadata accessor for MapsFavoritesManager();
  v46.unint64_t receiver = v8;
  v46.Class super_class = v28;
  id v29 = [super init];
  type metadata accessor for MapsSyncStore();
  id v30 = v29;
  Class v31 = (void *)static MapsSyncStore.sharedStore.getter();
  id v32 = v30;
  dispatch thunk of MapsSyncStore.subscribe(_:)();

  double v33 = CFNotificationCenterGetDarwinNotifyCenter();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v34 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  CFNotificationCenterAddObserver(v33, v32, (CFNotificationCallback)sub_100224AD8, v34, 0, CFNotificationSuspensionBehaviorDrop);

  sub_10010EA60();
  id v35 = (void *)static OS_dispatch_queue.main.getter();
  _GEOConfigAddDelegateListenerForKey();

  sub_10004BBC0();
  return v32;
}

uint64_t sub_10007FE74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007FEBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007FF04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007FF4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10007FF94(id a1)
{
  id v1 = +[RideBookingAccessProxy coordinator];
  [v1 updateRideStatusMap];
}

void sub_10007FFDC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[6] updateRideStatusMap];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      uint64_t v5 = "MapsSuggestionsRidesharingSource.m";
      __int16 v6 = 1026;
      int v7 = 186;
      __int16 v8 = 2082;
      uint64_t v9 = "-[MapsSuggestionsRidesharingSource _updateRideBookingRideStatuses]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_100080338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_10008034C()
{
  if (qword_10160F200 != -1) {
    dispatch_once(&qword_10160F200, &stru_1012F1400);
  }
  if (!byte_1015E6AB8) {
    return 0;
  }
  uint64_t v0 = +[UIDevice currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  if (v1 == (id)1)
  {
    uint64_t BOOL = GEOConfigGetBOOL();
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/Utils/RideBookingUtils.m");
      id v5 = [objc_alloc((Class)NSString) initWithFormat:@"isRidebookingOverridenOniPad: %d" BOOL];
      *(_DWORD *)buf = 136315394;
      int64_t v11 = v4;
      __int16 v12 = 2112;
      id v13 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
  }
  else
  {
    __int16 v6 = +[UIDevice currentDevice];
    id v7 = [v6 userInterfaceIdiom];

    return v7 != (id)5 && byte_1015E6AB8 != 0;
  }
  return BOOL;
}

id sub_1000804F8()
{
  id v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();

  return v1;
}

id sub_100080538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  __int16 v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_1000805B8(uint64_t a1, uint64_t a2)
{
  return sub_1000805C0(a1, a2);
}

uint64_t sub_1000805C0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  int v4 = (void *)Strong;
  id v5 = sub_1000806A8();
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

  if (!v12)
  {

    return 0;
  }
  __int16 v6 = sub_1001034C8(v12);
  uint64_t v8 = v7;

  if (!v6) {
    return 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a2, ObjectType, v8);

  return v10;
}

id sub_1000806A8()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___diffableDataSource;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___diffableDataSource);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___diffableDataSource);
  }
  else
  {
    id v4 = sub_100063550(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10008070C()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v66 = *(void *)(v2 - 8);
  uint64_t v67 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v65 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v6 = (unint64_t)&v62 - v5;
  uint64_t v69 = type metadata accessor for OSSignposter();
  uint64_t v7 = *(void *)(v69 - 8);
  uint64_t v8 = __chkstk_darwin(v69);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v68 = (char *)&v62 - v11;
  if (qword_1015CBD40 != -1) {
    goto LABEL_45;
  }
  while (1)
  {
    uint64_t v12 = type metadata accessor for Logger();
    sub_1000F2248(v12, (uint64_t)qword_101611778);
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    unint64_t v70 = v1;
    if (v15)
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Signaling section loading has started.", v16, 2u);
      unint64_t v1 = v70;
      swift_slowDealloc();
    }

    unint64_t v17 = v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_proactiveTraySignposter;
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v69;
    v18(v68, v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_proactiveTraySignposter, v69);
    uint64_t v20 = *(const char **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName);
    char v21 = *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName + 16);
    v18(v10, v17, v19);
    OSSignposter.logHandle.getter();
    uint64_t v22 = v7;
    unint64_t v23 = v6;
    OSSignpostID.init(log:)();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v64 = v22 + 8;
    v24(v10, v19);
    uint64_t v25 = OSSignposter.logHandle.getter();
    os_signpost_type_t v26 = static os_signpost_type_t.begin.getter();
    uint64_t result = OS_os_log.signpostsEnabled.getter();
    uint64_t v63 = v24;
    if ((result & 1) == 0) {
      goto LABEL_8;
    }
    if (v21)
    {
      if ((unint64_t)v20 >> 32) {
        goto LABEL_47;
      }
      if (v20 >> 11 == 27) {
        goto LABEL_49;
      }
      if (v20 >> 16 > 0x10) {
        goto LABEL_48;
      }
      uint64_t v20 = &v72;
    }
    else if (!v20)
    {
      __break(1u);
LABEL_8:

      uint64_t v29 = v66;
      uint64_t v28 = v67;
      (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v65, v23, v67);
      goto LABEL_14;
    }
    id v30 = v65;
    uint64_t v29 = v66;
    Class v31 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
    unint64_t v23 = v6;
    unint64_t v32 = v6;
    uint64_t v28 = v67;
    v31(v65, v32, v67);
    double v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v33 = 0;
    os_signpost_id_t v34 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v26, v34, v20, "", v33, 2u);
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
    v31(v30, v23, v28);
LABEL_14:
    type metadata accessor for OSSignpostIntervalState();
    swift_allocObject();
    unint64_t v1 = OSSignpostIntervalState.init(id:isOpen:)();
    (*(void (**)(unint64_t, uint64_t))(v29 + 8))(v23, v28);
    v63(v68, v69);
    unint64_t v35 = v70;
    *(void *)(v70 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSingpostState) = v1;
    swift_release();
    uint64_t v36 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
    uint64_t v37 = *(void *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
    if (v37)
    {
      id v38 = *(void **)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
      int64_t v39 = *(void *)(v37 + 16);
      if (!v39) {
        goto LABEL_25;
      }
    }
    else
    {
      id v38 = sub_1000F0E20();
      unint64_t v1 = *(void *)(v35 + v36);
      *(void *)(v35 + v36) = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)(v35 + v36))
      {
        uint64_t v49 = swift_bridgeObjectRetain();
        sub_1000716FC(v49);
      }
      else
      {
        *(void *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        unint64_t v1 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v50 = (unint64_t *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
        swift_beginAccess();
        *uint64_t v50 = v1;
      }
      swift_bridgeObjectRelease();
      int64_t v39 = v38[2];
      if (!v39)
      {
LABEL_25:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v40 = _swiftEmptyArrayStorage;
        goto LABEL_26;
      }
    }
    unint64_t v71 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10010A63C(0, v39, 0);
    uint64_t v40 = v71;
    uint64_t v41 = v38 + 5;
    do
    {
      uint64_t v42 = (void *)*(v41 - 1);
      uint64_t v43 = *v41;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8);
      id v46 = v42;
      uint64_t v47 = v45(ObjectType, v43);

      unint64_t v71 = v40;
      unint64_t v1 = v40[2];
      unint64_t v48 = v40[3];
      if (v1 >= v48 >> 1)
      {
        sub_10010A63C(v48 > 1, v1 + 1, 1);
        uint64_t v40 = v71;
      }
      v40[2] = v1 + 1;
      v40[v1 + 4] = v47;
      v41 += 2;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
    unint64_t v35 = v70;
LABEL_26:
    uint64_t v51 = sub_100081198((uint64_t)v40);
    uint64_t v54 = sub_10010A404(v51, v53, v52 & 1, v40[2], 0, 1, (uint64_t)v40);
    if (!v54) {
      break;
    }
    uint64_t v7 = v54;
    unint64_t v71 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t result = sub_100081198((uint64_t)v40);
    if (v7 < 0)
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      return result;
    }
    unint64_t v57 = result;
    unint64_t v6 = v55;
    uint64_t v10 = (char *)(v40 + 4);
    while ((v57 & 0x8000000000000000) == 0)
    {
      if (v57 >= v40[2]) {
        goto LABEL_42;
      }
      if (v56) {
        goto LABEL_50;
      }
      uint64_t v58 = *(void *)&v10[8 * v57];
      if ((v58 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_43;
        }
        if (v6 >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_44;
        }
        swift_unknownObjectRetain();
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v1 = v71[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t result = sub_100080E80(v57, v6, 0, (uint64_t)v40);
      unint64_t v57 = result;
      unint64_t v6 = v59;
      if (!--v7)
      {
        id v60 = v71;
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once();
  }
  swift_bridgeObjectRelease();
  id v60 = _swiftEmptyArrayStorage;
LABEL_40:
  uint64_t v61 = sub_10007E978((uint64_t)v60);
  swift_bridgeObjectRelease();
  *(void *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders) = v61;
  return swift_bridgeObjectRelease();
}

unint64_t sub_100080E80(unint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = a4;
  unint64_t v4 = result;
  unint64_t v7 = *(void *)(a4 + 16);
  if (v7 <= result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((a3 & 1) == 0)
  {
    uint64_t v6 = a2 + 1;
    if (!__OFADD__(a2, 1))
    {
      unint64_t v8 = *(void *)(a4 + 8 * result + 32);
      if (!(v8 >> 62))
      {
        if (v6 != *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          return v4;
        }
LABEL_12:
        if (++v4 == v7) {
          return v7;
        }
        while (1)
        {
          swift_bridgeObjectRetain();
          sub_1000FF33C(&qword_1015D73A0);
          sub_1001010F8(&qword_1015D73A8, &qword_1015D73A0);
          uint64_t v10 = sub_1000810C0(v15, v4, v5);
          unint64_t v12 = *v11;
          swift_bridgeObjectRetain();
          ((void (*)(uint64_t (**)(), void))v10)(v15, 0);
          swift_bridgeObjectRelease();
          if (v12 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t result = swift_bridgeObjectRelease();
          if (v13) {
            return v4;
          }
          unint64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_23;
          }
          ++v4;
          if (v14 == v7) {
            return v7;
          }
        }
      }
LABEL_11:
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v6 != v9) {
        return v4;
      }
      goto LABEL_12;
    }
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_100081074(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1000810C0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100081128(v6, a2, a3);
  return sub_1000810BC;
}

uint64_t (*sub_100081128(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    *(void *)uint64_t result = *(void *)(a3 + 8 * a2 + 32);
    swift_bridgeObjectRetain();
    return destroy for PlaceSummaryLine;
  }
  __break(1u);
  return result;
}

uint64_t destroy for PlaceSummaryLine()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100081198(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return v1;
  }
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(result + 32);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      return 0;
    }
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return 0;
  }
  uint64_t v5 = v1 - 1;
  if (v1 == 1) {
    return v1;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 40;
  while (v5 != v6)
  {
    unint64_t v8 = *(void *)(v7 + 8 * v6);
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v9) {
      return v6 + 1;
    }
    if (v5 == ++v6) {
      return v1;
    }
  }
  __break(1u);
  return result;
}

void sub_100081530(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  uint64_t v2 = (void *)qword_10160F808;
  qword_10160F808 = v1;

  v59[0] = @"ControlBackgroundColorKey";
  uint64_t v53 = +[UIColor colorWithWhite:0.968627453 alpha:1.0];
  v60[0] = v53;
  v59[1] = @"controlTintColorKey";
  uint64_t v51 = +[UIColor _maps_keyColor];
  v60[1] = v51;
  v59[2] = @"HairLineColorKey";
  uint64_t v49 = +[UIColor colorWithWhite:0.0 alpha:0.200000003];
  v60[2] = v49;
  id v59[3] = @"GreenButtonColorKey";
  uint64_t v47 = +[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:");
  v60[3] = v47;
  v59[4] = @"GreenButtonHighlightedColorKey";
  uint64_t v45 = +[UIColor colorWithRed:0.268235296 green:0.765882313 blue:0.352941185 alpha:1.0];
  v60[4] = v45;
  v59[5] = @"GroupTableViewBackgroundColorKey";
  uint64_t v43 = +[UIColor colorWithRed:0.937254906 green:0.937254906 blue:0.956862748 alpha:1.0];
  v60[5] = v43;
  v59[6] = @"GroupTableViewCellBackgroundColorKey";
  uint64_t v41 = +[UIColor colorWithWhite:1.0 alpha:1.0];
  v60[6] = v41;
  v59[7] = @"BlueButtonHighlightedColorKey";
  int64_t v39 = +[UIColor _maps_keyColor];
  id v38 = +[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", 0.0);
  uint64_t v37 = [v39 _colorBlendedWithColor:v38];
  v60[7] = v37;
  v59[8] = @"kNavEndButtonBackgroundColor";
  unint64_t v3 = +[UIColor colorWithRed:1.0 green:0.282352954 blue:0.282352954 alpha:1.0];
  v60[8] = v3;
  v59[9] = @"NavResumeButtonHighlightedColor";
  uint64_t v4 = +[UIColor colorWithWhite:0.0 alpha:0.0500000007];
  uint64_t v5 = +[UIColor colorWithWhite:0.0 alpha:0.100000001];
  uint64_t v6 = [v4 _colorBlendedWithColor:v5];
  v60[9] = v6;
  v59[10] = @"kNavTraySecondaryTextColor";
  uint64_t v7 = +[UIColor colorWithRed:0.392156869 green:0.392156869 blue:0.392156869 alpha:1.0];
  v60[10] = v7;
  v59[11] = @"VibrantTopColorKey";
  unint64_t v8 = +[UIColor colorWithRed:0.203921571 green:0.223529413 blue:0.313725501 alpha:0.150000006];
  v60[11] = v8;
  v59[12] = @"VibrantBackgroundColorKey";
  uint64_t v9 = +[UIColor colorWithWhite:0.479999989 alpha:1.0];
  v60[12] = v9;
  v60[13] = kCAFilterPlusD;
  v59[13] = @"VibrantTopFilterKey";
  v59[14] = @"VibrantBackgroundFilterKey";
  v60[14] = kCAFilterColorBurnBlendMode;
  v59[15] = @"StatusIndicatorHighlightedColorKey";
  uint64_t v10 = +[UIColor colorWithRed:0.0 green:0.419607848 blue:0.874509811 alpha:1.0];
  v60[15] = v10;
  uint64_t v11 = +[NSDictionary dictionaryWithObjects:v60 forKeys:v59 count:16];

  [(id)qword_10160F808 setObject:v11 forKeyedSubscript:@"StandardTheme"];
  unint64_t v12 = [(id)qword_10160F808 objectForKeyedSubscript:@"StandardTheme"];
  id v13 = [v12 copy];

  [(id)qword_10160F808 setObject:v13 forKeyedSubscript:@"StandardThemeWithoutVisualEffect"];
  v57[0] = @"ControlBackgroundColorKey";
  uint64_t v54 = +[UIColor colorWithRed:0.172549024 green:0.168627456 blue:0.168627456 alpha:1.0];
  v58[0] = v54;
  v57[1] = @"controlTintColorKey";
  char v52 = +[UIColor whiteColor];
  v58[1] = v52;
  v57[2] = @"HairLineColorKey";
  uint64_t v50 = +[UIColor colorWithWhite:1.0 alpha:0.150000006];
  v58[2] = v50;
  v57[3] = @"GreenButtonColorKey";
  char v56 = +[UIColor colorWithRed:0.298039228 green:0.850980401 blue:0.392156869 alpha:1.0];
  v58[3] = v56;
  v57[4] = @"GreenButtonHighlightedColorKey";
  unint64_t v55 = +[UIColor colorWithRed:0.268235296 green:0.765882313 blue:0.352941185 alpha:1.0];
  v58[4] = v55;
  v57[5] = @"GroupTableViewBackgroundColorKey";
  unint64_t v48 = +[UIColor colorWithRed:0.752941191 green:0.768627465 blue:0.78039217 alpha:1.0];
  v58[5] = v48;
  v57[6] = @"GroupTableViewCellBackgroundColorKey";
  id v46 = +[UIColor colorWithRed:0.811764717 green:0.827450991 blue:0.843137264 alpha:1.0];
  v58[6] = v46;
  v57[7] = @"BlueButtonHighlightedColorKey";
  uint64_t v44 = +[UIColor _maps_keyColor];
  uint64_t v42 = +[UIColor colorWithWhite:0.0 alpha:0.100000001];
  uint64_t v40 = [v44 _colorBlendedWithColor:v42];
  v58[7] = v40;
  v57[8] = @"kNavEndButtonBackgroundColor";
  unint64_t v14 = +[UIColor colorWithRed:1.0 green:0.23137255 blue:0.188235298 alpha:1.0];
  v58[8] = v14;
  v57[9] = @"NavResumeButtonHighlightedColor";
  BOOL v15 = +[UIColor colorWithWhite:1.0 alpha:0.0500000007];
  uint64_t v16 = +[UIColor colorWithWhite:0.0 alpha:0.100000001];
  unint64_t v17 = [v15 _colorBlendedWithColor:v16];
  v58[9] = v17;
  v57[10] = @"kNavTraySecondaryTextColor";
  uint64_t v18 = +[UIColor colorWithRed:0.392156869 green:0.392156869 blue:0.392156869 alpha:1.0];
  v58[10] = v18;
  v57[11] = @"VibrantTopColorKey";
  uint64_t v19 = +[UIColor colorWithWhite:1.0 alpha:0.0399999991];
  v58[11] = v19;
  v57[12] = @"VibrantBackgroundColorKey";
  uint64_t v20 = +[UIColor colorWithWhite:1.0 alpha:0.519999981];
  v58[12] = v20;
  v58[13] = kCAFilterPlusL;
  v57[13] = @"VibrantTopFilterKey";
  v57[14] = @"VibrantBackgroundFilterKey";
  v58[14] = kCAFilterOverlayBlendMode;
  v57[15] = @"StatusIndicatorHighlightedColorKey";
  char v21 = +[UIColor colorWithRed:0.0235294122 green:0.360784322 blue:0.698039234 alpha:1.0];
  v58[15] = v21;
  uint64_t v22 = +[NSDictionary dictionaryWithObjects:v58 forKeys:v57 count:16];

  [(id)qword_10160F808 setObject:v22 forKeyedSubscript:@"DarkTheme"];
  unint64_t v23 = [(id)qword_10160F808 objectForKeyedSubscript:@"DarkTheme"];
  id v24 = [v23 mutableCopy];

  uint64_t v25 = +[UIColor colorWithRed:0.152941182 green:0.184313729 blue:0.215686277 alpha:1.0];
  [v24 setObject:v25 forKeyedSubscript:@"ControlBackgroundColorKey"];

  os_signpost_type_t v26 = +[UIColor colorWithRed:0.278431386 green:0.305882365 blue:0.333333343 alpha:1.0];
  [v24 setObject:v26 forKeyedSubscript:@"HairLineColorKey"];

  uint64_t v27 = +[UIColor colorWithRed:0.113725491 green:0.686274529 blue:0.925490201 alpha:1.0];
  [v24 setObject:v27 forKeyedSubscript:@"controlTintColorKey"];

  uint64_t v28 = +[UIColor colorWithRed:1.0 green:1.0 blue:1.0 alpha:0.439999998];
  [v24 setObject:v28 forKeyedSubscript:@"kNavTraySecondaryTextColor"];

  uint64_t v29 = +[UIColor colorWithRed:0.90196079 green:0.20784314 blue:0.168627456 alpha:1.0];
  [v24 setObject:v29 forKeyedSubscript:@"kNavEndButtonBackgroundColor"];

  id v30 = +[UIColor colorWithRed:0.278431386 green:0.31764707 blue:0.360784322 alpha:1.0];
  [v24 setObject:v30 forKeyedSubscript:@"VibrantBackgroundColorKey"];

  Class v31 = +[UIColor colorWithRed:0.278431386 green:0.31764707 blue:0.360784322 alpha:1.0];
  [v24 setObject:v31 forKeyedSubscript:@"VibrantTopColorKey"];

  unint64_t v32 = +[UIColor colorWithRed:0.243137255 green:0.776470602 blue:0.333333343 alpha:1.0];
  [v24 setObject:v32 forKeyedSubscript:@"GreenButtonColorKey"];

  double v33 = +[UIColor colorWithRed:0.218823522 green:0.698823512 blue:0.300000012 alpha:1.0];
  [v24 setObject:v33 forKeyedSubscript:@"GreenButtonHighlightedColorKey"];

  os_signpost_id_t v34 = +[UIColor colorWithRed:0.125490203 green:0.152941182 blue:0.180392161 alpha:1.0];
  [v24 setObject:v34 forKeyedSubscript:@"GroupTableViewBackgroundColorKey"];

  unint64_t v35 = +[UIColor colorWithRed:0.152941182 green:0.184313729 blue:0.215686277 alpha:1.0];
  [v24 setObject:v35 forKeyedSubscript:@"GroupTableViewCellBackgroundColorKey"];

  id v36 = [v24 copy];
  [(id)qword_10160F808 setObject:v36 forKeyedSubscript:@"DarkThemeWithoutVisualEffect"];
}

void sub_1000821EC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 8) = 0;
  os_signpost_type_t v26 = objc_opt_new();
  +[_MXExtensionManager _maps_updateRideBookingExtensions:*(void *)(a1 + 40)];
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  uint64_t v25 = a1;
  id v2 = *(id *)(a1 + 40);
  id v3 = [v2 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v28;
    do
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        uint64_t v8 = [v7 _containingAppIdentifer];
        if (v8
          && (uint64_t v9 = (void *)v8,
              [v7 extensionPointIdentifier],
              uint64_t v10 = objc_claimAutoreleasedReturnValue(),
              v10,
              v9,
              v10))
        {
          uint64_t v11 = [[RideBookingApplication alloc] initWithExtension:v7];
          uint64_t v12 = [(RideBookingApplication *)v11 identifier];
          if (v12)
          {
            id v13 = (void *)v12;
            unint64_t v14 = [(RideBookingApplication *)v11 identifier];
            id v15 = [v14 length];

            if (v15)
            {
              [*(id *)(*(void *)(v25 + 32) + 48) registerAppTracker:];
              [v26 addObject:v11];
              goto LABEL_16;
            }
          }
          unint64_t v17 = GEOFindOrCreateLog();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          {
            uint64_t v18 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplicationFinder.m");
            uint64_t v19 = [objc_alloc((Class)NSString) initWithFormat:@"Application Identifier is nil for Application %@. Skipping.", v11];
            *(_DWORD *)buf = 136315394;
            unint64_t v32 = v18;
            __int16 v33 = 2112;
            os_signpost_id_t v34 = v19;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
          }
        }
        else
        {
          GEOFindOrCreateLog();
          uint64_t v11 = (RideBookingApplication *)objc_claimAutoreleasedReturnValue();
          if (!os_log_type_enabled(&v11->super, OS_LOG_TYPE_INFO)) {
            goto LABEL_16;
          }
          uint64_t v16 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplicationFinder.m");
          unint64_t v17 = [objc_alloc((Class)NSString) initWithFormat:@"Containing app identifier for extension %@ is nil. Skipping.", v7];
          *(_DWORD *)buf = 136315394;
          unint64_t v32 = v16;
          __int16 v33 = 2112;
          os_signpost_id_t v34 = v17;
          _os_log_impl((void *)&_mh_execute_header, &v11->super, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
        }

LABEL_16:
      }
      id v4 = [v2 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }
    while (v4);
  }

  id v20 = [v26 copy];
  uint64_t v21 = *(void *)(v25 + 32);
  uint64_t v22 = *(void **)(v21 + 32);
  *(void *)(v21 + 32) = v20;

  unint64_t v23 = [*(id *)(v25 + 32) delegate];
  id v24 = [v26 copy];
  [v23 rideBookingApplicationsDidChange:v24];
}

id sub_100082DFC()
{
  if (qword_101612208 != -1) {
    dispatch_once(&qword_101612208, &stru_1012EFC78);
  }
  unint64_t v0 = (void *)qword_101612200;

  return v0;
}

void sub_1000830D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - v11;
  if (qword_1015CBD40 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000F2248(v13, (uint64_t)qword_101611778);
  unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14(v12, a3, v6);
  uint64_t v38 = a3;
  v14(v10, a3, v6);
  id v15 = v3;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    os_log_t v35 = v16;
    uint64_t v36 = a2;
    uint64_t v18 = swift_slowAlloc();
    __int16 v33 = (void *)swift_slowAlloc();
    os_signpost_id_t v34 = (void *)swift_slowAlloc();
    uint64_t v40 = v34;
    *(_DWORD *)uint64_t v18 = 136315650;
    swift_getObjectType();
    uint64_t v19 = _typeName(_:qualified:)();
    uint64_t v39 = sub_1000F2280(v19, v20, (uint64_t *)&v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    sub_100260390();
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v39 = sub_1000F2280(v21, v22, (uint64_t *)&v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v12, v6);
    *(_WORD *)(v18 + 22) = 2112;
    id v24 = sub_1000806A8();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    uint64_t v25 = v39;
    if (!v39) {
      uint64_t v39 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *__int16 v33 = v25;

    v23(v10, v6);
    os_log_t v27 = v35;
    _os_log_impl((void *)&_mh_execute_header, v35, v17, "%s will display cell at index path: %s, identifier path: %@", (uint8_t *)v18, 0x20u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v36;
  }
  else
  {

    os_signpost_type_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v12, v6);

    v26(v10, v6);
  }
  id v28 = sub_1000806A8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  long long v29 = v40;
  if (v40)
  {
    Class isa = sub_1001034C8(v40);

    if (isa)
    {
      if ([isa respondsToSelector:"collectionView:willDisplayCell:forItemAtIndexPath:"])
      {
        id v31 = isa;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v31 collectionView:v37 willDisplayCell:a2 forItemAtIndexPath:isa];
      }
    }
  }
}

void sub_100083698(void *a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    id v4 = (void *)v3;
    uint64_t v5 = OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_needsResetScrollOffset;
    int v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_needsResetScrollOffset);
    id v7 = a1;
    if (v6 == 1)
    {
      [v4 resetScrollOffset];
      *(unsigned char *)(v1 + v5) = 0;
    }
    [v4 fetchMissingImages];
  }
}

uint64_t sub_1000839C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 64) + 8);
  uint64_t v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16))();
  if ((result & 1) == 0)
  {
    id v5 = [*(id *)(a1 + 40) copy];
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v8 = [*(id *)(a1 + 48) copy];
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = *(void **)(v9 + 48);
    *(void *)(v9 + 48) = v8;

    *(unsigned char *)(*(void *)(a1 + 32) + 77) = 0;
    id v11 = [*(id *)(*(void *)(a1 + 32) + 32) copy];
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    id v14 = [*(id *)(*(void *)(a1 + 32) + 56) copy];
    uint64_t v15 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    id v17 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
    uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8);
    uint64_t v19 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v17;

    [*(id *)(*(void *)(a1 + 32) + 56) removeAllObjects];
    unint64_t v20 = *(void **)(*(void *)(a1 + 32) + 64);
    return (uint64_t)[v20 removeAllObjects];
  }
  return result;
}

void sub_100083AD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[_ButtonsGroupViewController alloc] initWithFloatingButtonItems:v3 visualEffectDisabled:*(unsigned __int8 *)(a1 + 48)];

  [(_ButtonsGroupViewController *)v4 setBlurGroupName:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) addObject:v4];
}

void sub_1000845C4(uint64_t a1)
{
  uint64_t v2 = sub_100084D38();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v7 = 138477827;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "updateUserActivity %{private}@", (uint8_t *)&v7, 0xCu);
  }

  id v4 = [*(id *)(a1 + 40) _mapsUserActivity];
  id v5 = [v4 title];
  unsigned __int8 v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

  if ((v6 & 1) == 0) {
    [v4 setTitle:*(void *)(a1 + 32)];
  }
  [v4 becomeCurrent];
  [v4 setNeedsSave:1];
}

void sub_100084B00(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _cachedMapsActivityDataDictionary];
  uint64_t v3 = v2;
  if (v2)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = [v2 objectForKeyedSubscript:@"f"];
    unsigned __int8 v6 = [v3 objectForKeyedSubscript:@"c"];
    int v7 = [v3 objectForKeyedSubscript:@"t"];
    uint64_t v8 = [v3 objectForKeyedSubscript:@"x"];
    [v4 _updateUserActivityWithMapsActivityAtFullFidelity:v5 atCompactFidelity:v6 title:v7 expirationDate:v8];
  }
  uint64_t v9 = sub_100084D38();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    uint64_t v10 = *(void **)(a1 + 40);
    id v11 = [v10 title];
    CFStringRef v12 = @"YES";
    if ([*(id *)(a1 + 40) isEligibleForSearch]) {
      CFStringRef v13 = @"YES";
    }
    else {
      CFStringRef v13 = @"NO";
    }
    if ([*(id *)(a1 + 40) isEligibleForPrediction]) {
      CFStringRef v14 = @"YES";
    }
    else {
      CFStringRef v14 = @"NO";
    }
    if ([*(id *)(a1 + 40) isEligibleForHandoff]) {
      CFStringRef v15 = @"YES";
    }
    else {
      CFStringRef v15 = @"NO";
    }
    if (![*(id *)(a1 + 40) isEligibleForPublicIndexing]) {
      CFStringRef v12 = @"NO";
    }
    uint64_t v16 = [*(id *)(a1 + 40) userInfo];
    id v17 = [*(id *)(a1 + 40) contentAttributeSet];
    int v18 = 138414083;
    uint64_t v19 = v10;
    __int16 v20 = 2113;
    uint64_t v21 = v11;
    __int16 v22 = 2112;
    CFStringRef v23 = v13;
    __int16 v24 = 2112;
    CFStringRef v25 = v14;
    __int16 v26 = 2112;
    CFStringRef v27 = v15;
    __int16 v28 = 2112;
    CFStringRef v29 = v12;
    __int16 v30 = 2112;
    id v31 = v16;
    __int16 v32 = 2112;
    __int16 v33 = v17;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "userActivityWillSave %@ title %{private}@ search %@ prediction %@ handoff %@ publicIndexing %@ userInfo %@ contentAttributeSet %@", (uint8_t *)&v18, 0x52u);
  }
}

id sub_100084D38()
{
  if (qword_101611F18 != -1) {
    dispatch_once(&qword_101611F18, &stru_1012EF698);
  }
  unint64_t v0 = (void *)qword_101611F10;

  return v0;
}

void sub_100085C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100085E6C(uint64_t a1)
{
  v24[0] = &off_1013AAA08;
  int v18 = +[NSBundle mainBundle];
  id v17 = [v18 localizedStringForKey:@"MapView_Venue_LookInside" value:@"localized string not found" table:0];
  v25[0] = v17;
  v24[1] = &off_1013AAA20;
  uint64_t v16 = +[NSBundle mainBundle];
  uint64_t v1 = [v16 localizedStringForKey:@"MapView_POI_AdditionalClusterCount" value:@"localized string not found" table:0];
  v25[1] = v1;
  _OWORD v24[2] = &off_1013AAA38;
  uint64_t v2 = +[NSBundle mainBundle];
  uint64_t v3 = [v2 localizedStringForKey:@"[EV Chargers Availability] No Availability" value:@"localized string not found" table:0];
  void v25[2] = v3;
  void v24[3] = &off_1013AAA50;
  id v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"[EV Chargers Availability] x of y available" value:@"localized string not found" table:0];
  v25[3] = v5;
  v24[4] = &off_1013AAA68;
  unsigned __int8 v6 = +[NSBundle mainBundle];
  int v7 = [v6 localizedStringForKey:@"[EV Chargers Availability] No Status" value:@"localized string not found" table:0];
  v25[4] = v7;
  v24[5] = &off_1013AAA80;
  uint64_t v8 = +[NSBundle mainBundle];
  uint64_t v9 = [v8 localizedStringForKey:@"OFFLINE_REGION_LABEL" value:@"localized string not found" table:@"Offline"];
  v25[5] = v9;
  uint64_t v10 = +[NSDictionary dictionaryWithObjects:v25 forKeys:v24 count:6];

  id v11 = +[NSBundle mainBundle];
  CFStringRef v12 = [v11 preferredLocalizations];
  CFStringRef v13 = [v12 firstObject];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000A594;
  block[3] = &unk_1012E66E0;
  id v21 = *(id *)(a1 + 32);
  id v22 = v10;
  id v23 = v13;
  id v14 = v13;
  id v15 = v10;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

Swift::Int sub_100086188()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 24);
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  if (v3)
  {
    if (v3 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1001007A8(v1, v2, 1u);
    }
    else
    {
      if (v1 | v2)
      {
        if (v1 ^ 1 | v2) {
          Swift::UInt v4 = 2;
        }
        else {
          Swift::UInt v4 = 1;
        }
      }
      else
      {
        Swift::UInt v4 = 0;
      }
      Hasher._combine(_:)(v4);
    }
  }
  else
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    sub_1001007A8(v1, v2, 0);
  }
  return Hasher._finalize()();
}

void sub_100087938()
{
  v16.unint64_t receiver = v0;
  v16.Class super_class = (Class)type metadata accessor for RedoSearchContainerViewController();
  [super viewDidLoad];
  id v1 = [objc_allocWithZone((Class)CardView) initAllowingBlurredForButton:1];
  uint64_t v2 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView;
  int v3 = *(void **)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView];
  *(void *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView] = v1;

  Swift::UInt v4 = *(void **)&v0[v2];
  if (v4)
  {
    id v5 = v4;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v5 setLayoutStyle:6];
    id v6 = [v0 view];
    if (v6)
    {
      int v7 = v6;
      [v6 addSubview:v5];

      id v8 = [v5 contentView];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = sub_1000881FC();
        [v9 addSubview:v10];

        id v11 = sub_1000881FC();
        id v12 = sub_100088798();
        [v11 addArrangedSubview:v12];

        id v13 = sub_1000881FC();
        id v14 = sub_1000886CC();
        [v13 addArrangedSubview:v14];

        id v15 = sub_1000886CC();
        [v15 addTarget:v0 action:"redoSearchButtonClicked:" forControlEvents:64];

        sub_10008825C();
        sub_100087AEC();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100087AEC()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints;
  if (!*(void *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints])
  {
    uint64_t v2 = v0;
    id v3 = [self mainScreen];
    [v3 bounds];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    v76.origin.x = v5;
    v76.origin.y = v7;
    v76.size.width = v9;
    v76.size.double height = v11;
    CGRectGetWidth(v76);
    id v12 = *(void **)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView];
    if (v12)
    {
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_100F62DB0;
      id v14 = v12;
      id v15 = [v14 topAnchor];
      id v16 = [v2 view];
      if (v16)
      {
        id v17 = v16;
        id v18 = [v16 topAnchor];

        id v19 = [v15 constraintEqualToAnchor:v18];
        *(void *)(v13 + 32) = v19;
        id v20 = [v14 leadingAnchor];
        id v21 = [v2 view];
        if (v21)
        {
          id v22 = v21;
          id v23 = [v21 leadingAnchor];

          id v24 = [v20 constraintEqualToAnchor:v23];
          *(void *)(v13 + 40) = v24;
          id v25 = [v14 trailingAnchor];
          id v26 = [v2 view];
          if (v26)
          {
            CFStringRef v27 = v26;
            id v28 = [v26 trailingAnchor];

            id v29 = [v25 constraintEqualToAnchor:v28];
            *(void *)(v13 + 48) = v29;
            id v30 = [v14 bottomAnchor];
            id v31 = [v2 view];
            if (v31)
            {
              __int16 v32 = v31;
              id v33 = [v31 bottomAnchor];

              id v34 = [v30 constraintEqualToAnchor:v33];
              *(void *)(v13 + 56) = v34;
              uint64_t v75 = v13;
              specialized Array._endMutation()();
              unint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_100F6B7E0;
              id v36 = [v14 heightAnchor];
              id v37 = [v36 constraintEqualToConstant:44.0];

              *(void *)(inited + 32) = v37;
              id v38 = sub_1000881FC();
              id v39 = [v38 leadingAnchor];

              id v40 = [v14 contentView];
              if (v40)
              {
                uint64_t v41 = v40;
                id v42 = [v40 leadingAnchor];

                id v43 = [v39 constraintEqualToAnchor:v42];
                *(void *)(inited + 40) = v43;
                id v44 = sub_1000881FC();
                id v45 = [v44 trailingAnchor];

                id v46 = [v14 contentView];
                if (v46)
                {
                  uint64_t v47 = v46;
                  id v48 = [v46 trailingAnchor];

                  id v49 = [v45 constraintEqualToAnchor:v48];
                  *(void *)(inited + 48) = v49;
                  id v50 = sub_1000881FC();
                  id v51 = [v50 topAnchor];

                  id v52 = [v14 contentView];
                  if (v52)
                  {
                    uint64_t v53 = v52;
                    id v54 = [v52 topAnchor];

                    id v55 = [v51 constraintEqualToAnchor:v54];
                    *(void *)(inited + 56) = v55;
                    id v56 = sub_1000881FC();
                    id v57 = [v56 bottomAnchor];

                    id v58 = [v14 contentView];
                    if (v58)
                    {
                      unint64_t v59 = v58;
                      id v60 = [v58 bottomAnchor];

                      id v61 = [v57 constraintEqualToAnchor:v60];
                      *(void *)(inited + 64) = v61;
                      id v62 = sub_1000881FC();
                      id v63 = [v62 bottomAnchor];

                      id v64 = [v14 contentView];
                      if (v64)
                      {
                        uint64_t v65 = v64;
                        id v66 = [v64 bottomAnchor];

                        id v67 = [v63 constraintEqualToAnchor:v66];
                        *(void *)(inited + 72) = v67;
                        id v68 = sub_1000886CC();
                        id v69 = [v68 centerYAnchor];

                        id v70 = sub_100088798();
                        id v71 = [v70 centerYAnchor];

                        id v72 = [v69 constraintEqualToAnchor:v71];
                        *(void *)(inited + 80) = v72;
                        specialized Array._endMutation()();
                        sub_10010B5B0(inited);
                        *(void *)&v2[v1] = v75;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        id v73 = self;
                        sub_10010B37C();
                        Class isa = Array._bridgeToObjectiveC()().super.isa;
                        swift_bridgeObjectRelease();
                        [v73 activateConstraints:isa];

                        return;
                      }
LABEL_22:
                      __break(1u);
                      return;
                    }
LABEL_21:
                    __break(1u);
                    goto LABEL_22;
                  }
LABEL_20:
                  __break(1u);
                  goto LABEL_21;
                }
LABEL_19:
                __break(1u);
                goto LABEL_20;
              }
LABEL_18:
              __break(1u);
              goto LABEL_19;
            }
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_16;
    }
  }
}

id sub_1000881FC()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView);
  }
  else
  {
    id v4 = sub_10003AFCC();
    CGFloat v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10008825C()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state);
  if (v1 == 2)
  {
    id v9 = sub_100088798();
    [v9 stopAnimating];

    id v10 = sub_100088798();
    [v10 setHidden:1];

    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v11._countAndFlagsBits = 0xD00000000000001ELL;
    v12._countAndFlagsBits = 0xD000000000000020;
    v26._countAndFlagsBits = 0xD000000000000038;
    v26._object = (void *)0x8000000100F88CA0;
    v12._object = (void *)0x8000000100F88C50;
    v11._object = (void *)0x8000000100F88C80;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_101611820, v11, v26);
    id v13 = sub_1000886CC();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v13 setTitle:v14 forState:0];

    id v15 = sub_1000886CC();
    id v16 = [self grayColor];
  }
  else
  {
    if (v1 == 1)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v25._countAndFlagsBits = 0xD000000000000027;
      v25._object = (void *)0x8000000100F88D00;
      v2._object = (void *)0x8000000100F88CE0;
      v2._countAndFlagsBits = 0xD00000000000001ALL;
      v3._countAndFlagsBits = 0x6820686372616553;
      v3._object = (void *)0xEB00000000657265;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_101611820, v3, v25);
      id v4 = sub_1000886CC();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v4 setTitle:v5 forState:0];

      id v6 = sub_1000886CC();
      id v7 = [self tintColor];
      [v6 setTitleColor:v7 forState:0];

      id v8 = sub_100088798();
      [v8 stopAnimating];

      id v23 = sub_100088798();
      [v23 setHidden:1];
      goto LABEL_14;
    }
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state))
    {
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      return;
    }
    id v17 = sub_100088798();
    [v17 setHidden:0];

    id v18 = sub_100088798();
    [v18 startAnimating];

    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v19._countAndFlagsBits = 0xD00000000000001DLL;
    v27._countAndFlagsBits = 0xD000000000000037;
    v27._object = (void *)0x8000000100F88D50;
    v19._object = (void *)0x8000000100F88D30;
    v20._countAndFlagsBits = 0x6E69686372616553;
    v20._object = (void *)0xEE00657265682067;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)qword_101611820, v20, v27);
    id v21 = sub_1000886CC();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v21 setTitle:v22 forState:0];

    id v15 = sub_1000886CC();
    id v16 = [self grayColor];
  }
  id v23 = v16;
  [v15 setTitleColor:forState:];

LABEL_14:
}

id sub_1000886CC()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton;
  Swift::String v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton);
  }
  else
  {
    id v4 = [self buttonWithType:0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v3 = v4;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v5];

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    Swift::String v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_100088798()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator;
  Swift::String v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v3 = v4;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v5];

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    Swift::String v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_100088B88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = [*(id *)(a1 + 32) allValues];
    id v62 = objc_opt_new();
    long long v67 = 0u;
    long long v68 = 0u;
    long long v69 = 0u;
    long long v70 = 0u;
    id v4 = v3;
    id v5 = [v4 countByEnumeratingWithState:&v67 objects:v74 count:16];
    if (v5)
    {
      id v6 = v5;
      id v7 = &OBJC_IVAR___CuratedCollectionsListViewController__guideFetcher;
      id v8 = GEOResultRefinementSort_ptr;
      uint64_t v66 = *(void *)v68;
      do
      {
        for (unint64_t i = 0; i != v6; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v68 != v66) {
            objc_enumerationMutation(v4);
          }
          id v10 = *(void **)(*((void *)&v67 + 1) + 8 * i);
          Swift::String v11 = *(void **)((char *)WeakRetained + v7[339]);
          Swift::String v12 = [v10 application];
          id v13 = [v12 identifier];
          [v11 registerBundleID:v13 withSource:WeakRetained];

          NSString v14 = *(void **)((char *)WeakRetained + v7[339]);
          id v15 = [v10 application];
          id v16 = [v15 identifier];
          LOBYTE(v14) = [v14 isBundleIDLocked:v16 forSource:WeakRetained];

          if ((v14 & 1) == 0)
          {
            id v17 = v8[493];
            id v18 = [v10 application];
            Swift::String v19 = [v18 identifier];
            LODWORD(v17) = [v17 canLearnFromBundleID:v19];

            if (v17)
            {
              if ([v10 isValidRide])
              {
                id v20 = v10;
                if ([v20 isCanceledByUser])
                {

                  id v21 = 0;
                }
                else
                {
                  uint64_t v22 = [v20 trayTitle];
                  uint64_t v23 = [v20 traySubtitle];
                  GEOConfigGetDouble();
                  double v25 = v24;
                  Swift::String v26 = [v20 estimatedDropOffDate];
                  GEOConfigGetDouble();
                  uint64_t v27 = [v26 dateByAddingTimeInterval:];

                  if (!v27)
                  {
                    GEOConfigGetDouble();
                    uint64_t v27 = MapsSuggestionsNowWithOffset();
                  }
                  id v63 = (void *)v27;
                  id v64 = (void *)v23;
                  id v21 = +[MapsSuggestionsEntry entryWithType:9 title:v22 subtitle:v23 weight:v27 expires:0 sourceSpecificInfo:v25];
                  if ([v20 isScheduledRide])
                  {
                    id v28 = +[NSCalendar autoupdatingCurrentCalendar];
                    id v29 = [v20 scheduledPickupWindowStartDateComponents];
                    id v30 = [v28 dateFromComponents:v29];

                    GEOConfigGetDouble();
                    double v32 = v31;
                    id v33 = MapsSuggestionsNow();
                    [v33 timeIntervalSinceDate:v30];
                    double v35 = v34;

                    GEOConfigGetDouble();
                    [v21 setWeight:];
                    if (v35 >= v32) {
                      [v21 setBoolean:1 forKey:@"MapsSuggestionsIsNotADestinationKey"];
                    }

                    id v7 = &OBJC_IVAR___CuratedCollectionsListViewController__guideFetcher;
                  }
                  uint64_t v65 = (void *)v22;
                  [v21 setNumber:&off_1013AA1B0 forKey:@"MapsSuggestionsGEOMapItemOriginKey"];
                  id v36 = [v20 identifier];
                  [v21 setString:v36 forKey:@"MapsSuggestionsRideBookingRideIDKey"];

                  id v37 = [v20 application];
                  id v38 = [v37 identifier];
                  [v21 setString:v38 forKey:@"MapsSuggestionsOriginBundleIDKey"];

                  [v21 setString:@"MapsSuggestionsOriginBundleIDKey" forKey:@"MapsSuggestionsPrimaryKey"];
                  [v21 setBoolean:[v20 isActiveRide] forKey:@"MapsSuggestionsRidesharingIsActiveRideKey"];
                  id v39 = [v20 application];
                  id v40 = [v39 identifier];

                  if (v40)
                  {
                    id v41 = objc_alloc((Class)NSSet);
                    id v42 = [v20 application];
                    id v43 = [v42 identifier];
                    *(void *)buf = v43;
                    +[NSArray arrayWithObjects:buf count:1];
                    v45 = id v44 = v4;
                    id v46 = [v41 initWithArray:v45];

                    id v4 = v44;
                    id v7 = &OBJC_IVAR___CuratedCollectionsListViewController__guideFetcher;

                    [v21 setSet:v46 forKey:@"MapsSuggestionsAssociatedBundleIDsKey"];
                  }
                  if (([v20 isActiveRide] & 1) == 0)
                  {
                    [v21 setBoolean:1 forKey:@"MapsSuggestionsIsNotADestinationKey"];
                    GEOConfigGetDouble();
                    [v21 setWeight:];
                  }
                  uint64_t v47 = [v20 pickupLocation];

                  if (v47)
                  {
                    id v48 = [v20 pickupLocation];
                    id v49 = [v48 location];
                    [v49 coordinate];
                    double v51 = v50;
                    double v53 = v52;

                    id v54 = +[NSNumber numberWithDouble:v51];
                    [v21 setNumber:v54 forKey:@"MapsSuggestionsRidesharingPickupLocationLatitudeKey"];

                    id v55 = +[NSNumber numberWithDouble:v53];
                    [v21 setNumber:v55 forKey:@"MapsSuggestionsRidesharingPickupLocationLongitudeKey"];
                  }
                  if (v21) {
                    [v62 addObject:v21];
                  }
                }

                id v8 = GEOResultRefinementSort_ptr;
              }
            }
          }
        }
        id v6 = [v4 countByEnumeratingWithState:&v67 objects:v74 count:16];
      }
      while (v6);
    }

    [WeakRetained addOrUpdateMySuggestionEntries:v62];
    uint64_t v56 = WeakRetained[2];
    if (v56)
    {
      (*(void (**)(void))(v56 + 16))();
      id v57 = (void *)WeakRetained[2];
      WeakRetained[2] = 0;
    }
    id v58 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v58, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v59 = [WeakRetained uniqueName];
      *(_DWORD *)buf = 138412546;
      *(void *)&uint8_t buf[4] = v59;
      __int16 v72 = 2080;
      id v73 = "_updateRideBookingRideStatuses";
      _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v60 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v60))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v60, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "_updateRideBookingRideStatuses", "", buf, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v61 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t v74 = 136446722;
      uint64_t v75 = "MapsSuggestionsRidesharingSource.m";
      __int16 v76 = 1026;
      int v77 = 236;
      __int16 v78 = 2082;
      id v79 = "-[MapsSuggestionsRidesharingSource rideStatusMapDidChange:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", v74, 0x1Cu);
    }
  }
}

void sub_10008A3A8(void *a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v1 = [a1 allValues];
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) _setSuppressStoreUpdateNotifications:0];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

id sub_10008A498()
{
  if (qword_10160F0B0 != -1) {
    dispatch_once(&qword_10160F0B0, &stru_1012EEA68);
  }
  uint64_t v0 = (void *)qword_10160F0A8;

  return v0;
}

uint64_t sub_10008B0BC(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR____TtC4Maps22HomeListRootController_isActive;
  if (v1[OBJC_IVAR____TtC4Maps22HomeListRootController_isActive] != (result & 1))
  {
    id v3 = v1;
    if (qword_1015CBD40 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1000F2248(v4, (uint64_t)qword_101611778);
    id v5 = v1;
    long long v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      swift_getObjectType();
      uint64_t v9 = _typeName(_:qualified:)();
      sub_1000F2280(v9, v10, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 1024;

      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s setActive = %{BOOL}d", (uint8_t *)v8, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v11 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
    uint64_t v27 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
    if (*(void *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers])
    {
      Swift::String v12 = *(void **)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers];
    }
    else
    {
      Swift::String v12 = sub_1000F0E20();
      *(void *)&v5[v11] = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)&v5[v11])
      {
        uint64_t v13 = swift_bridgeObjectRetain();
        sub_1000716FC(v13);
      }
      else
      {
        *(void *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        unint64_t v14 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
        id v15 = (unint64_t *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers];
        swift_beginAccess();
        *id v15 = v14;
      }
      swift_bridgeObjectRelease();
    }
    id v28 = v5;
    uint64_t v16 = v12[2];
    if (v16)
    {
      id v17 = (void **)(v12 + 4);
      swift_bridgeObjectRetain();
      do
      {
        id v18 = *v17;
        v17 += 2;
        uint64_t v19 = v3[v2];
        id v20 = *(void (**)(uint64_t))((swift_isaMask & *v18) + 0xC0);
        id v21 = v18;
        v20(v19);

        --v16;
      }
      while (v16);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v3[v2] == 1)
    {
      v5[OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate] = 0;
      uint64_t v22 = &v5[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate];
      swift_beginAccess();
      *(void *)uint64_t v22 = &_swiftEmptySetSingleton;
      swift_bridgeObjectRelease();
      if (*(void *)&v28[v27])
      {
        uint64_t v23 = *(void **)&v28[v27];
      }
      else
      {
        uint64_t v23 = sub_1000F0E20();
        *(void *)&v28[v27] = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (*(void *)&v28[v27])
        {
          uint64_t v24 = swift_bridgeObjectRetain();
          sub_1000716FC(v24);
        }
        else
        {
          *(void *)&v28[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands] = _swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          unint64_t v25 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
          Swift::String v26 = (unint64_t *)&v28[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers];
          swift_beginAccess();
          *Swift::String v26 = v25;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_1000F2788((uint64_t)v23, 0);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10008B4F8(char a1)
{
  uint64_t v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive) = a1;
  return sub_10008B510(v2);
}

uint64_t sub_10008B510(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive) == (result & 1)) {
    return result;
  }
  unint64_t v3 = v1;
  swift_getObjectType();
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!v4) {
    unint64_t v1 = 0;
  }
  if (!v1) {
    goto LABEL_52;
  }
  uint64_t ObjectType = swift_getObjectType();
  os_log_type_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  id v8 = (id)v3;
  unint64_t v9 = v7(ObjectType, v5);

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v10) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10) {
      goto LABEL_18;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_28;
    }
    goto LABEL_47;
  }
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0)
    {
      Swift::String v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      Swift::String v12 = *(void **)(v9 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    [v12 setActive:*(unsigned __int8 *)(v3 + v2)];
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  int v13 = *(unsigned __int8 *)(v3 + v2);
  swift_getObjectType();
  uint64_t v14 = swift_conformsToProtocol2();
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v14) {
    unint64_t v16 = v3;
  }
  else {
    unint64_t v16 = 0;
  }
  if (v13 != 1)
  {
    if (v16)
    {
      uint64_t v23 = swift_getObjectType();
      uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
      id v25 = v8;
      unint64_t v26 = v24(v23, v15);

      if (v26 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v27) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v27) {
          goto LABEL_47;
        }
      }
      if (v27 >= 1)
      {
        uint64_t v28 = 0;
        do
        {
          if ((v26 & 0xC000000000000001) != 0)
          {
            id v29 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            id v29 = *(void **)(v26 + 8 * v28 + 32);
            swift_unknownObjectRetain();
          }
          ++v28;
          id v30 = [v29 observers];
          [v30 unregisterObserver:v25];
          swift_unknownObjectRelease();
        }
        while (v27 != v28);
        goto LABEL_47;
      }
LABEL_51:
      __break(1u);
    }
LABEL_52:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (!v16) {
    goto LABEL_52;
  }
  uint64_t v17 = swift_getObjectType();
  id v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
  id v8 = v8;
  unint64_t v3 = v18(v17, v15);

  if (v3 >> 62) {
    goto LABEL_44;
  }
  uint64_t v19 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v19)
  {
LABEL_28:
    if (v19 >= 1)
    {
      uint64_t v20 = 0;
      do
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          id v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          id v21 = *(void **)(v3 + 8 * v20 + 32);
          swift_unknownObjectRetain();
        }
        ++v20;
        id v22 = [v21 observers];
        [v22 registerObserver:v8];
        swift_unknownObjectRelease();
      }
      while (v19 != v20);
      goto LABEL_47;
    }
    __break(1u);
    goto LABEL_51;
  }
LABEL_47:

  return swift_bridgeObjectRelease();
}

void *sub_10008B93C()
{
  sub_1000FF33C(&qword_1015DB0E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 64);
  *(void *)(inited + 32) = v2;
  uint64_t v6 = inited;
  specialized Array._endMutation()();
  if (*(void *)(v6 + 32))
  {
    swift_unknownObjectRetain();
    id v3 = v2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    id v4 = v2;
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10008BA40()
{
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5DFF0;
  *(void *)(v0 + 32) = sub_10008BAA4();
  specialized Array._endMutation()();
  return v0;
}

id sub_10008BAA4()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps41HomeListFeatureDiscoverySectionController____lazy_storage___featureDiscoveryDataProvider;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps41HomeListFeatureDiscoverySectionController____lazy_storage___featureDiscoveryDataProvider);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC4Maps41HomeListFeatureDiscoverySectionController____lazy_storage___featureDiscoveryDataProvider);
  }
  else
  {
    id v4 = sub_100056074(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10008BB0C()
{
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5E000;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 48);
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController_sharedTripsDataProvider);
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  id v4 = v2;
  id v5 = v3;
  *(void *)(v1 + 48) = sub_10008BBA4();
  specialized Array._endMutation()();
  return v1;
}

id sub_10008BBA4()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)HomePhotoLookupDataProvider) initWithSuggestionsDataProvider:*(void *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 48)];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10008BC30(char a1)
{
  uint64_t v2 = v1;
  int v4 = a1 & 1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  __chkstk_darwin(v5);
  double v52 = &v48[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = type metadata accessor for DispatchQoS();
  uint64_t v51 = *(void *)(v53 - 8);
  uint64_t result = __chkstk_darwin(v53);
  double v50 = &v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive;
  int v10 = v2[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive];
  v2[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = a1;
  if (v10 == v4) {
    goto LABEL_48;
  }
  int v49 = v10;
  swift_getObjectType();
  uint64_t v11 = swift_conformsToProtocol2();
  if (v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v11) {
    int v13 = v2;
  }
  else {
    int v13 = 0;
  }
  if (!v13) {
    goto LABEL_53;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  unint64_t v16 = v2;
  unint64_t v17 = v15(ObjectType, v12);

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v18) {
      goto LABEL_18;
    }
  }
  if (v18 < 1)
  {
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_28;
    }
    goto LABEL_47;
  }
  for (uint64_t i = 0; i != v18; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0)
    {
      uint64_t v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v20 = *(void **)(v17 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    [v20 setActive:v2[v9]];
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  int v21 = v2[v9];
  swift_getObjectType();
  uint64_t v22 = swift_conformsToProtocol2();
  if (v22) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = 0;
  }
  if (v22) {
    uint64_t v24 = v2;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v21 != 1)
  {
    if (v24)
    {
      uint64_t v31 = swift_getObjectType();
      double v32 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
      id v33 = v16;
      unint64_t v34 = v32(v31, v23);

      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v35) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v35) {
          goto LABEL_47;
        }
      }
      if (v35 >= 1)
      {
        uint64_t v36 = 0;
        do
        {
          if ((v34 & 0xC000000000000001) != 0)
          {
            id v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            id v37 = *(void **)(v34 + 8 * v36 + 32);
            swift_unknownObjectRetain();
          }
          ++v36;
          id v38 = [v37 observers];
          [v38 unregisterObserver:v33];
          swift_unknownObjectRelease();
        }
        while (v35 != v36);
        goto LABEL_47;
      }
LABEL_52:
      __break(1u);
    }
LABEL_53:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (!v24) {
    goto LABEL_53;
  }
  uint64_t v25 = swift_getObjectType();
  unint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
  unint64_t v16 = v16;
  unint64_t v17 = v26(v25, v23);

  if (v17 >> 62) {
    goto LABEL_44;
  }
  uint64_t v27 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v27)
  {
LABEL_28:
    if (v27 >= 1)
    {
      uint64_t v28 = 0;
      do
      {
        if ((v17 & 0xC000000000000001) != 0)
        {
          id v29 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          id v29 = *(void **)(v17 + 8 * v28 + 32);
          swift_unknownObjectRetain();
        }
        ++v28;
        id v30 = [v29 observers];
        [v30 registerObserver:v16];
        swift_unknownObjectRelease();
      }
      while (v27 != v28);
      goto LABEL_47;
    }
    __break(1u);
    goto LABEL_52;
  }
LABEL_47:
  uint64_t result = swift_bridgeObjectRelease();
  LOBYTE(v10) = v49;
LABEL_48:
  if (!(v10 & 1 | ((v2[v9] & 1) == 0)))
  {
    id v39 = sub_10007F33C();
    id v40 = *(void **)&v2[OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilter];
    id v41 = (void *)swift_allocObject();
    v41[2] = v40;
    v41[3] = v39;
    v41[4] = v2;
    aBlock[4] = sub_10008C520;
    aBlock[5] = v41;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008C380;
    aBlock[3] = &unk_1012E4F70;
    id v42 = _Block_copy(aBlock);
    id v43 = v40;
    id v44 = v2;
    id v45 = v50;
    static DispatchQoS.unspecified.getter();
    uint64_t v56 = _swiftEmptyArrayStorage;
    sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
    id v46 = v52;
    uint64_t v47 = v55;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v42);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v46, v47);
    (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v45, v53);
    return swift_release();
  }
  return result;
}

uint64_t sub_10008C2F8()
{
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5F0D0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_markedLocationDataProvider);
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataProvider);
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  uint64_t v7 = v1;
  specialized Array._endMutation()();
  id v4 = v2;
  id v5 = v3;
  return v7;
}

uint64_t sub_10008C380(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_10008C3C4()
{
  sub_10008C3CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10008C3CC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive) == 1
      && (*(void *)(Strong + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents) = a2,
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          sub_1000F1C90((uint64_t)v4 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v8),
          uint64_t v5 = swift_unknownObjectWeakLoadStrong(),
          sub_1000F1BD8((uint64_t)v8),
          v5))
    {
      sub_1000FF33C(&qword_1015D7380);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
      *(void *)(inited + 32) = v4;
      *(void *)(inited + 40) = &off_1012E4ED8;
      id v7 = v4;
      sub_1000F2788(inited, 1);
      swift_setDeallocating();
      sub_1000FF33C(&qword_1015CF1F0);
      swift_arrayDestroy();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10008C520()
{
  return sub_10008C52C(*(void **)(v0 + 16));
}

uint64_t sub_10008C52C(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  Class v9 = Array._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 filteredRecents:isa excludingDuplicatesOfEntries:v9];

  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v11;
  aBlock[4] = sub_10008C3C4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012E4FC0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v17);
}

uint64_t sub_10008C88C()
{
  return sub_10008C894(*(void *)(v0 + 16));
}

uint64_t sub_10008C894(uint64_t a1)
{
  id v2 = [*(id *)(a1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager_observers) allObservers];
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    do
    {
      sub_1000F2354(v5, (uint64_t)v8);
      sub_1000FF33C(&qword_1015D3518);
      if (swift_dynamicCast())
      {
        if ([v7 respondsToSelector:"homeDataProvidingObjectDidUpdate:"]) {
          [v7 homeDataProvidingObjectDidUpdate:a1];
        }
        swift_unknownObjectRelease();
      }
      v5 += 32;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void sub_10008D540(_Unwind_Exception *a1)
{
}

id sub_10008D5B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v6 = (void *)Strong;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v8 = [v6 collectionView:a1 cellForItemAtIndexPath:isa itemIdentifier:v4];

  return v8;
}

uint64_t sub_10008D7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000F2354(a3, (uint64_t)v18);
  sub_100100830(0, (unint64_t *)&unk_1015D6E30);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = (void *)v15;
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  if (!v6)
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v15 = 0u;
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
  sub_1000F71E8(v6);
  sub_1000F71E8(v6);
  id v8 = (id)v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10008DC64(v8, 2, 0, 2, v7, &v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!(void)v15)
  {
LABEL_6:

    sub_1000FF2E0((uint64_t)&v15, &qword_1015D68C0);
    return 0;
  }
  v18[0] = v15;
  v18[1] = v16;
  v18[2] = v17;
  sub_1000FF27C((uint64_t)v18 + 8, (uint64_t)v14, (uint64_t *)&unk_1015D6960);
  sub_100101314(v14, (uint64_t)&v15);
  uint64_t v9 = *((void *)&v16 + 1);
  uint64_t v10 = v17;
  uint64_t v11 = sub_1000FF380(&v15, *((uint64_t *)&v16 + 1));
  uint64_t v12 = sub_10008D958(a2, (uint64_t)v11, v9, v10);

  sub_1000FFC8C((uint64_t)v18);
  sub_1000FF22C((uint64_t)&v15);
  return v12;
}

uint64_t sub_10008D958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a1;
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - v9;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for UICollectionView.CellRegistration();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v15 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a2, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, a3);
  uint64_t v16 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v16;
}

uint64_t destroy for HomeListCuratedCollectionsCellModel(id *a1)
{
  return swift_unknownObjectWeakDestroy();
}

void **initializeWithCopy for HomeListCuratedCollectionsCellModel(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  swift_unknownObjectWeakCopyInit();
  return a1;
}

uint64_t storeEnumTagSinglePayload for HomeListCuratedCollectionsCellModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x2B0], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

double sub_10008DC64@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, _OWORD *a6@<X8>)
{
  id v12 = [a1 firstIdentifier];
  if (!v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v12;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [self identifierPathWithIdentifier:v14];

  id v16 = v15;
  long long v17 = sub_1000F530C((uint64_t)v16, 1, 0, 2, a5);
  uint64_t v19 = v18;

  if (!v17) {
    goto LABEL_7;
  }
  sub_1001003DC(a1, a2, a3, a4, v19, (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v22)
  {
    sub_1000FF2E0((uint64_t)v21, (uint64_t *)&unk_1015D6E80);
    goto LABEL_7;
  }
  sub_1000FF33C(&qword_1015D2AD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    double result = 0.0;
    a6[1] = 0u;
    a6[2] = 0u;
    *a6 = 0u;
  }
  return result;
}

void sub_10008DDF4(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 8);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) collectionHandlerInfoUpdated:*(void *)(a1 + 32) v7];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_10008DEEC(uint64_t a1)
{
  id v2 = objc_getAssociatedObject(*(id *)(a1 + 32), off_1015E4088);
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v3 = [v2 copy];
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      long long v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(a1 + 32) performSelector:NSSelectorFromString(*(NSString **)(*((void *)&v8 + 1) + 8 * (void)v7))];
        long long v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }

  objc_setAssociatedObject(*(id *)(a1 + 32), off_1015E4088, 0, (void *)1);
  objc_setAssociatedObject(*(id *)(a1 + 32), off_1015E4080, 0, (void *)3);
}

void sub_10008E80C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _run];
}

void sub_10008EC14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_10008EC5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v6 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _fetchSuggestionsWithCompletion:v7];
  }
}

void *sub_10008ECC0(void *result)
{
  if (!*(unsigned char *)(*(void *)(result[6] + 8) + 24))
  {
    uint64_t v1 = result;
    id v2 = sub_10008F544();
    if (!os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
LABEL_12:

      *(unsigned char *)(*(void *)(v1[6] + 8) + 24) = 1;
      *(unsigned char *)(v1[5] + 42) = 0;
      return [(id)v1[5] _dispatchIfNeeded];
    }
    id v3 = (id)v1[4];
    if (!v3)
    {
      long long v8 = @"<nil>";
      goto LABEL_11;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        long long v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_9;
      }
    }
    long long v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_9:

LABEL_11:
    *(_DWORD *)buf = 138543362;
    long long v10 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[%{public}@] completion handler called", buf, 0xCu);

    goto LABEL_12;
  }
  return result;
}

void sub_10008EE70(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2 == *(void **)(*(void *)(a1 + 40) + 16)) {
    unsigned int v3 = 1;
  }
  else {
    unsigned int v3 = [v2 isEqual:];
  }
  id v4 = sub_10008F544();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG);
  if (v3)
  {
    if (!v5)
    {
LABEL_23:

      return;
    }
    id v6 = *(id *)(a1 + 40);
    if (!v6)
    {
      long long v11 = @"<nil>";
      goto LABEL_22;
    }
    id v7 = (objc_class *)objc_opt_class();
    long long v8 = NSStringFromClass(v7);
    if (objc_opt_respondsToSelector())
    {
      long long v9 = [v6 performSelector:"accessibilityIdentifier"];
      long long v10 = v9;
      if (v9 && ![v9 isEqualToString:v8])
      {
        long long v11 = +[NSString stringWithFormat:@"%@<%p, %@>", v8, v6, v10];

        goto LABEL_12;
      }
    }
    long long v11 = +[NSString stringWithFormat:@"%@<%p>", v8, v6];
LABEL_12:

LABEL_22:
    *(_DWORD *)buf = 138543362;
    uint64_t v22 = v11;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[%{public}@] values are equal, ignoring", buf, 0xCu);

    goto LABEL_23;
  }
  if (v5)
  {
    id v12 = *(id *)(a1 + 40);
    if (!v12)
    {
      long long v17 = @"<nil>";
      goto LABEL_25;
    }
    uint64_t v13 = (objc_class *)objc_opt_class();
    NSString v14 = NSStringFromClass(v13);
    if (objc_opt_respondsToSelector())
    {
      id v15 = [v12 performSelector:"accessibilityIdentifier"];
      id v16 = v15;
      if (v15 && ![v15 isEqualToString:v14])
      {
        long long v17 = +[NSString stringWithFormat:@"%@<%p, %@>", v14, v12, v16];

        goto LABEL_20;
      }
    }
    long long v17 = +[NSString stringWithFormat:@"%@<%p>", v14, v12];
LABEL_20:

LABEL_25:
    *(_DWORD *)buf = 138543362;
    uint64_t v22 = v17;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[%{public}@] value updated", buf, 0xCu);
  }
  objc_storeStrong((id *)(*(void *)(a1 + 40) + 16), *(id *)(a1 + 32));
  uint64_t v18 = +[NSDate date];
  uint64_t v19 = *(void *)(a1 + 40);
  uint64_t v20 = *(void **)(v19 + 24);
  *(void *)(v19 + 24) = v18;

  *(unsigned char *)(*(void *)(a1 + 40) + 40) = 1;
  [*(id *)(a1 + 40) _dispatchIfNeeded];
}

id sub_10008F544()
{
  if (qword_10160F7D8 != -1) {
    dispatch_once(&qword_10160F7D8, &stru_1012F77B0);
  }
  uint64_t v0 = (void *)qword_10160F7D0;

  return v0;
}

void sub_10008F6B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10008FEAC()
{
  if (qword_101611EF8 != -1) {
    dispatch_once(&qword_101611EF8, &stru_1012EF658);
  }
  uint64_t v0 = (void *)qword_101611EF0;

  return v0;
}

void sub_100090190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100090828(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) copy];
  [v1 _createPOIsForItems:v2];
}

void sub_100090D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose((const void *)(v31 - 176), 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_100091288(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_10009141C(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_1000915B0(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100091744(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_1000918D8(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100091A6C(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100091C00(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100091D94(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100091F28(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_1000920BC(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100092250(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_1000923E4(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100092578(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_10009270C(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_1000928A0(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100092A34(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  if (v5)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
    {
      id v6 = v5;
LABEL_11:
      id v12 = *(void **)(a1 + 32);
      uint64_t v13 = +[NSString stringWithFormat:@"%@: %@", v14, v6];
      [v12 addObject:v13];

      goto LABEL_12;
    }
    id v7 = v5;
    long long v8 = (objc_class *)objc_opt_class();
    long long v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      long long v10 = [v7 performSelector:"accessibilityIdentifier"];
      long long v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        id v6 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    id v6 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100092BC8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (!WeakRetained)
  {
    GEOFindOrCreateLog();
    unsigned int v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v31 = "RideBookingDataCoordinator.m";
      __int16 v32 = 1026;
      *(_DWORD *)id v33 = 841;
      *(_WORD *)&void v33[4] = 2082;
      *(void *)&v33[6] = "-[RideBookingDataCoordinator updateRideStatusMap]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }

    goto LABEL_19;
  }
  if ([WeakRetained[4] count])
  {
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    unsigned int v3 = [v2[4] allValues];
    id v4 = [v3 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v26;
      uint64_t v7 = DefaultLoggingSubsystem;
      do
      {
        long long v8 = 0;
        id v24 = v5;
        do
        {
          if (*(void *)v26 != v6) {
            objc_enumerationMutation(v3);
          }
          long long v9 = *(void **)(*((void *)&v25 + 1) + 8 * (void)v8);
          if ([v9 enabled])
          {
            [v2 _updateRideStatusMapForApplication:v9];
          }
          else
          {
            long long v10 = GEOFindOrCreateLog();
            if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
            {
              uint64_t v11 = v6;
              uint64_t v12 = v7;
              uint64_t v13 = v2;
              id v14 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
              id v15 = objc_alloc((Class)NSString);
              NSStringFromSelector(*(SEL *)(a1 + 40));
              v17 = id v16 = v3;
              uint64_t v18 = [v9 identifier];
              id v19 = [v15 initWithFormat:@"%@, Application %@ is not enabled", v17, v18];
              *(_DWORD *)buf = 136315394;
              uint64_t v31 = v14;
              id v2 = v13;
              uint64_t v7 = v12;
              uint64_t v6 = v11;
              __int16 v32 = 2112;
              *(void *)id v33 = v19;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);

              unsigned int v3 = v16;
              id v5 = v24;
            }
          }
          long long v8 = (char *)v8 + 1;
        }
        while (v5 != v8);
        id v5 = [v3 countByEnumeratingWithState:&v25 objects:v29 count:16];
      }
      while (v5);
    }
LABEL_19:

    goto LABEL_23;
  }
  uint64_t v20 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    int v21 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
    id v22 = [objc_alloc((Class)NSString) initWithFormat:@"No Ridebooking applications exist on this device. Broadcasting so and returning."];
    *(_DWORD *)buf = 136315394;
    uint64_t v31 = v21;
    __int16 v32 = 2112;
    *(void *)id v33 = v22;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
  }
  [v2 _broadcastRideStatusDidChange];
LABEL_23:
}

void sub_1000936B8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    unsigned int v3 = [*(id *)(a1 + 32) allValues];
    id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v10;
      do
      {
        for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v3);
          }
          [WeakRetained _updateAnalyticsWithRideStatus:*(void *)(*((void *)&v9 + 1) + 8 * i)];
        }
        id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      }
      while (v5);
    }

    long long v8 = objc_loadWeakRetained(WeakRetained + 1);
    [v8 rideStatusMapDidChange:*(void *)(a1 + 32)];
  }
  else
  {
    GEOFindOrCreateLog();
    long long v8 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v15 = "RideBookingRideStatusObserverProxy.m";
      __int16 v16 = 1026;
      int v17 = 95;
      __int16 v18 = 2082;
      id v19 = "-[RideBookingRideStatusObserverProxy rideStatusMapDidChange:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100093B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100093F08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

uint64_t destroy for HomeListElementKey(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 24);

  return sub_1001007A8(v2, v3, v4);
}

void sub_100095240(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) tokenGroupName];
  if (v2)
  {
    [*(id *)(*(void *)(a1 + 40) + 56) addObject:*(void *)(a1 + 32)];
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(v3 + 48);
    *(void *)(v3 + 4_Block_object_dispose(&STACK[0x2B0], 8) = v4 + 1;
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 48);
    uint64_t v6 = sub_1000961C8();
    uint64_t v7 = v6;
    if (v4 == v5)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        int v9 = 134217984;
        uint64_t v10 = v4;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Count %lu is the same, meaning token wasn't added", (uint8_t *)&v9, 0xCu);
      }
    }
    else
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
        int v9 = 138543874;
        uint64_t v10 = v8;
        __int16 v11 = 2048;
        uint64_t v12 = v4;
        __int16 v13 = 2048;
        uint64_t v14 = v5;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "UPDATE %{public}@: %lu -> %lu", (uint8_t *)&v9, 0x20u);
      }

      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    }
  }
}

void sub_1000957E4(uint64_t a1)
{
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v2 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v3 = [v2 countByEnumeratingWithState:&v19 objects:v27 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v20;
    uint64_t v18 = *(void *)v20;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v20 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v19 + 1) + 8 * (void)v6);
        uint64_t v8 = sub_1000961C8();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
        {
          id v9 = v7;
          if (v9)
          {
            uint64_t v10 = (objc_class *)objc_opt_class();
            __int16 v11 = NSStringFromClass(v10);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_12;
            }
            id v12 = v2;
            __int16 v13 = [v9 performSelector:"accessibilityIdentifier"];
            uint64_t v14 = v13;
            if (v13 && ![v13 isEqualToString:v11])
            {
              id v15 = +[NSString stringWithFormat:@"%@<%p, %@>", v11, v9, v14];

              id v2 = v12;
              uint64_t v5 = v18;
            }
            else
            {

              id v2 = v12;
              uint64_t v5 = v18;
LABEL_12:
              id v15 = +[NSString stringWithFormat:@"%@<%p>", v11, v9];
            }
          }
          else
          {
            id v15 = @"<nil>";
          }

          uint64_t v16 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543618;
          id v24 = v15;
          __int16 v25 = 2114;
          uint64_t v26 = v16;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "NOTIFYING %{public}@ DID ADD %{public}@", buf, 0x16u);
        }
        [v7 incrementForToken:*(void *)(a1 + 32)];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v17 = [v2 countByEnumeratingWithState:&v19 objects:v27 count:16];
      id v4 = v17;
    }
    while (v17);
  }
}

void sub_100095BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100095DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000961C8()
{
  if (qword_101611128 != -1) {
    dispatch_once(&qword_101611128, &stru_101322F30);
  }
  uint64_t v0 = (void *)qword_101611120;

  return v0;
}

void sub_1000977C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained collection];
    id v4 = [v3 fetchPlaces];

    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    uint64_t v6[2] = sub_100104B80;
    v6[3] = &unk_1012E5D58;
    void v6[4] = v2;
    id v7 = v4;
    id v5 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
  }
}

void sub_10009788C(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _processTopSuggestions:v9 error:v5 wasFromStorageFile:0];
    uint64_t v8 = *(void *)(a1 + 32);
    if (v8) {
      (*(void (**)(void))(v8 + 16))();
    }
  }
}

void sub_100097924(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained) {
    geo_isolate_sync();
  }
}

void sub_100097DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

__CFString *sub_100097E28(int a1)
{
  if (a1) {
    return @"YES";
  }
  else {
    return @"NO";
  }
}

id sub_100097E44(void *a1)
{
  id v1 = a1;
  id v2 = +[NSMutableArray array];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = [*(id *)(*((void *)&v11 + 1) + 8 * i) copy:v11];
        [v2 addObject:v8];
      }
      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  id v9 = [v2 copy];

  return v9;
}

void sub_100098628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose((const void *)(v38 - 232), 8);
  _Unwind_Resume(a1);
}

void sub_100098A7C(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v2 = [a1[4] copy];
    [WeakRetained setHistoryRecents:v2];

    id v3 = [a1[5] copy];
    id v4 = (void *)WeakRetained[8];
    WeakRetained[8] = v3;

    [WeakRetained _processRecents];
  }
}

id sub_1000990A8(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v5 = v3;
    uint64_t v6 = (char *)[v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = 0;
      uint64_t v9 = *(void *)v16;
      while (2)
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v16 != v9) {
            objc_enumerationMutation(v5);
          }
          long long v11 = *(void **)(*((void *)&v15 + 1) + 8 * i);
          char v14 = 0;
          if (v4[2](v4, v11, &i[v8], &v14))
          {
            id v12 = v11;
            goto LABEL_15;
          }
          if (v14) {
            goto LABEL_12;
          }
        }
        id v7 = (char *)[v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
        id v12 = 0;
        v8 += (uint64_t)i;
        if (v7) {
          continue;
        }
        break;
      }
    }
    else
    {
LABEL_12:
      id v12 = 0;
    }
LABEL_15:
  }
  else
  {
    id v12 = 0;
  }

  return v12;
}

void sub_100099318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100099540(uint64_t a1, void *a2)
{
}

BOOL sub_100099550(id a1, GEOMapsHomeSection *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOMapsHomeSection *)a2 sectionType] == (id)1;
}

BOOL sub_100099574(id a1, GEOMapsHomeSection *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOMapsHomeSection *)a2 sectionType] == (id)1;
}

BOOL sub_100099598(id a1, GEOMapsHomeSection *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOMapsHomeSection *)a2 sectionType] == (id)1;
}

id sub_100099700(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = objc_alloc_init((Class)NSMutableArray);
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v6 = v3;
    id v7 = (char *)[v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = 0;
      uint64_t v10 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v16 != v10) {
            objc_enumerationMutation(v6);
          }
          id v12 = v4[2](v4, *(void *)(*((void *)&v15 + 1) + 8 * i), &i[v9]);
          if (v12) {
            [v5 addObject:v12];
          }
        }
        uint64_t v8 = (char *)[v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
        v9 += (uint64_t)i;
      }
      while (v8);
    }

    id v13 = [v5 copy];
  }
  else
  {
    id v13 = &__NSArray0__struct;
  }

  return v13;
}

id sub_10009988C(id a1, GEOCollectionResult *a2, unint64_t a3)
{
  return [(GEOCollectionResult *)a2 collection];
}

NSString *__cdecl sub_100099894(id a1, MapsToken *a2, unint64_t a3)
{
  return [(MapsToken *)a2 reason];
}

void sub_10009A054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009B884(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) loisByType];
  id v3 = v2;
  if (*(void *)(a1 + 40)) {
    id v4 = *(void **)(a1 + 40);
  }
  else {
    id v4 = &__NSArray0__struct;
  }
  [v2 setObject:v4 forKey:*(void *)(a1 + 48)];

  id v5 = [*(id *)(a1 + 32) retrievingLOIsOfTypes];
  [v5 removeObject:*(void *)(a1 + 48)];

  if (*(unsigned char *)(a1 + 64))
  {
    id v6 = [*(id *)(a1 + 32) initialRetrievalDispatchGroup];
    dispatch_group_leave(v6);
  }
  id v7 = [*(id *)(a1 + 32) invalidatedLOIsOfTypes];
  unsigned int v8 = [v7 containsObject:*(void *)(a1 + 48)];

  if (v8)
  {
    uint64_t v9 = *(void **)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 56);
    [v9 retrieveLOIsOfType:v10];
  }
}

void sub_10009C200(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
    char v6 = 1;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        unsigned int v8 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        uint64_t v9 = [*(id *)(a1 + 40) loisByType];
        uint64_t v10 = [v9 objectForKey:v8];

        if (!v10)
        {
          [*(id *)(a1 + 40) retrieveLOIsOfType:[v8 integerValue]];
          char v6 = 0;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v4);

    if ((v6 & 1) == 0)
    {
      long long v11 = [*(id *)(a1 + 40) initialRetrievalDispatchGroup];
      dispatch_group_notify(v11, (dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 48));

      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
    }
  }
  else
  {
  }
}

void sub_10009C594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009C5AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) dispatchQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009B884;
  block[3] = &unk_1012F97C8;
  uint64_t v5 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v10 = v3;
  id v6 = v5;
  char v13 = *(unsigned char *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 48);
  id v11 = v6;
  uint64_t v12 = v7;
  id v8 = v3;
  dispatch_async(v4, block);
}

void sub_10009C78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10009D24C()
{
  if (qword_101611090 != -1) {
    dispatch_once(&qword_101611090, &stru_101322A68);
  }
  uint64_t v0 = (void *)qword_101611088;

  return v0;
}

id sub_10009D6F8(uint64_t a1)
{
  id v2 = sub_10009D894();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Adding thermal pressure observer: %@", (uint8_t *)&v5, 0xCu);
  }

  return [*(id *)(*(void *)(a1 + 40) + 16) registerObserver:*(void *)(a1 + 32)];
}

void sub_10009D7AC(uint64_t a1)
{
  id v2 = sub_10009D894();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v7 = 138412546;
    uint64_t v8 = v3;
    __int16 v9 = 2112;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Add mitigation observer: %@ for mitigation: %@", (uint8_t *)&v7, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v6 = [WeakRetained _observersOfMitigationNamed:*(void *)(a1 + 40)];
  [v6 registerObserver:*(void *)(a1 + 32)];
}

id sub_10009D894()
{
  if (qword_101610708 != -1) {
    dispatch_once(&qword_101610708, &stru_101316690);
  }
  uint64_t v0 = (void *)qword_101610700;

  return v0;
}

void sub_10009E2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10009E2D4()
{
  if (qword_10160F4D8 != -1) {
    dispatch_once(&qword_10160F4D8, &stru_1012F3F20);
  }
  uint64_t v0 = (void *)qword_10160F4D0;

  return v0;
}

void sub_10009E448(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 button];
  if (v3)
  {
    id v8 = v3;
    if ([*(id *)(a1 + 32) count])
    {
      id v4 = [*(id *)(a1 + 40) count];
      int v5 = *(void **)(a1 + 32);
      if (v4)
      {
        uint64_t v6 = [*(id *)(a1 + 40) firstObject];
        [v5 addObject:v6];

        [*(id *)(a1 + 40) removeObjectAtIndex:0];
      }
      else
      {
        int v7 = objc_opt_new();
        [v5 addObject:v7];
      }
    }
    [*(id *)(a1 + 32) addObject:v8];
    uint64_t v3 = v8;
  }
}

void sub_10009E970(id a1, UIButton *a2, HairlineView *a3, BOOL a4, BOOL a5)
{
  BOOL v5 = a5;
  BOOL v6 = a4;
  if (a4) {
    double v8 = 1.0;
  }
  else {
    double v8 = 0.0;
  }
  uint64_t v10 = a3;
  [(UIButton *)a2 setAlpha:v8];
  if (v6 && v5) {
    double v9 = 1.0;
  }
  else {
    double v9 = 0.0;
  }
  [(HairlineView *)v10 setAlpha:v9];
}

void sub_10009EA00(id a1, UIButton *a2, HairlineView *a3, BOOL a4, BOOL a5)
{
  double v8 = a2;
  int v7 = a3;
  if (([(UIButton *)v8 isHidden] & 1) == 0 && !a4)
  {
    [(UIButton *)v8 setHidden:1];
    [(HairlineView *)v7 setHidden:1];
  }
}

void sub_10009EA7C(id a1, UIButton *a2, HairlineView *a3, BOOL a4, BOOL a5)
{
  BOOL v5 = a5;
  BOOL v6 = a4;
  double v9 = a2;
  double v8 = a3;
  if ([(UIButton *)v9 isHidden] && v6)
  {
    [(UIButton *)v9 setHidden:0];
    [(HairlineView *)v8 setHidden:v5];
  }
}

void sub_10009FA1C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) buttonsContainerViewControllerIfLoaded];
  [v2 setVisibleControls:*(void *)(a1 + 40)];

  uint64_t v3 = [*(id *)(a1 + 32) buttonsContainerViewControllerIfLoaded];
  [v3 hideNonVisibleControls:*(void *)(a1 + 40)];

  id v4 = [*(id *)(a1 + 32) buttonsContainerViewControllerIfLoaded];
  [v4 refreshControls];

  id v5 = [*(id *)(a1 + 32) controlsStackView];
  [v5 layoutIfNeeded];
}

void sub_10009FD44(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) buttonsContainerViewControllerIfLoaded];
  [v2 showVisibleControls:*(void *)(a1 + 40)];

  uint64_t v3 = [*(id *)(a1 + 32) buttonsContainerViewController];
  [v3 setVisibleControls:*(void *)(a1 + 40)];

  id v4 = [*(id *)(a1 + 32) controlsStackView];
  [v4 layoutIfNeeded];
}

int64_t sub_1000A0068(id a1, MSCollectionItem *a2, MSCollectionItem *a3)
{
  id v4 = a3;
  id v5 = [(MSCollectionItem *)a2 createTime];
  BOOL v6 = [(MSCollectionItem *)v4 createTime];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_1000A0C1C()
{
  long long v18 = v0;
  uint64_t v2 = v0[20];
  id v1 = (void *)v0[21];
  v0[22] = v1;
  uint64_t v3 = v0[18];
  sub_1000A0FB8(v1);
  id v4 = (os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  id v5 = *v4;
  BOOL v6 = *v4 + 4;
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_1000A2B84(v6, &v17);
  os_unfair_lock_unlock(v5 + 6);
  if (v2) {
    return;
  }
  unint64_t v7 = v17;
  v0[23] = v17;
  uint64_t v8 = swift_release();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v8 = swift_bridgeObjectRelease();
    v0[24] = v9;
    if (v9) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[24] = v9;
    if (v9)
    {
LABEL_4:
      uint64_t v10 = OBJC_IVAR____TtC4Maps20MapsFavoritesManager_mapViewMode;
      v0[25] = OBJC_IVAR____TtC4Maps20MapsFavoritesManager_mapViewMode;
      if (v9 < 1)
      {
        __break(1u);
      }
      else
      {
        v0[26] = 0;
        uint64_t v11 = v0[23];
        if ((v11 & 0xC000000000000001) != 0)
        {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v10 = v0[25];
        }
        else
        {
          id v12 = *(id *)(v11 + 32);
        }
        v0[27] = v12;
        uint64_t v13 = v0[22];
        uint64_t v14 = *(void *)(v0[18] + v10);
        v0[2] = v0;
        v0[3] = sub_100105AA4;
        uint64_t v15 = swift_continuation_init();
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 0x40000000;
        v0[12] = sub_1000336CC;
        v0[13] = &unk_1012DE4D0;
        v0[14] = v15;
        [v12 updateSubtitleWithViewMode:v14 currentLocation:v13 completionHandler:v0 + 10];
        uint64_t v8 = (uint64_t)(v0 + 2);
      }
      _swift_continuation_await(v8);
      return;
    }
  }
  swift_bridgeObjectRelease();

  long long v16 = (void (*)(void))v0[1];
  v16();
}

unint64_t sub_1000A0EA8(void *a1)
{
  uint64_t v3 = v1;
  id v4 = (os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__setupButtons);
  swift_beginAccess();
  id v5 = *v4;
  BOOL v6 = *v4 + 4;
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_1000A2B84(v6, v13);
  os_unfair_lock_unlock(v5 + 6);
  unint64_t v7 = v13[0];
  swift_release();
  uint64_t v8 = (uint64_t *)(v3 + *a1);
  swift_beginAccess();
  uint64_t v9 = *v8;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_1000A2B84((void *)(v9 + 16), &v12);
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  unint64_t v10 = v12;
  swift_release();
  unint64_t v12 = v7;
  sub_1000A18A4(v10);
  return v12;
}

void sub_1000A0FB8(void *a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    __int16 v25 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
    swift_beginAccess();
    uint64_t v26 = *v25;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
    sub_1000A2B84((void *)(v26 + 16), v40);
    os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
    long long v27 = (void *)v40[0];
    swift_release();
    uint64_t v28 = swift_beginAccess();
    unint64_t v39 = (unint64_t)v27;
    __chkstk_darwin(v28);
    id v30 = v29 + 4;
    uint64_t v31 = v29 + 6;
    os_unfair_lock_lock(v29 + 6);
    sub_1000A18E0(v30);
    os_unfair_lock_unlock(v31);
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1000A2678();
    return;
  }
  unint64_t v38 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v39 = (unint64_t)_swiftEmptyArrayStorage;
  id v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  uint64_t v5 = *v4;
  id v37 = a1;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1000A2B84((void *)(v5 + 16), v40);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  unint64_t v6 = v40[0];
  swift_release();
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    id v24 = _swiftEmptyArrayStorage;
LABEL_24:
    id v32 = v37;
    sub_1000A1944((uint64_t *)&v38, v32);

    v40[0] = v24;
    sub_1000A18A4(v38);
    uint64_t v33 = swift_beginAccess();
    __chkstk_darwin(v33);
    uint64_t v35 = v34 + 4;
    uint64_t v36 = v34 + 6;
    os_unfair_lock_lock(v34 + 6);
    sub_1000A18E0(v35);
    os_unfair_lock_unlock(v36);
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1000A2678();

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_23;
  }
LABEL_4:
  if (v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v11 = v10;
      unint64_t v12 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
      if (!v12) {
        goto LABEL_6;
      }
      uint64_t v13 = v12;
      [v12 doubleValue];
      double v15 = v14;

      long long v16 = (void *)dispatch thunk of FavoriteItem.longitude.getter();
      if (!v16) {
        goto LABEL_6;
      }
      unint64_t v17 = v16;
      [v16 doubleValue];
      double v19 = v18;

      id v20 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v15 longitude:v19];
      [v20 distanceFromLocation:v37];
      double v22 = v21;

      if (qword_1015CBCC8 != -1) {
        swift_once();
      }
      if (*(double *)&qword_101611640 < v22)
      {
        id v23 = v11;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
      else
      {
LABEL_6:
        id v9 = v11;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    swift_bridgeObjectRelease();
    id v24 = (void *)v39;
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_1000A145C(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_1000A1680(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, (void (*)(void))a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1000A1680(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_10024FE88(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_1000FF33C(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          id v24 = *v23;
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A18A4(unint64_t a1)
{
  return sub_1000A145C(a1, (unint64_t *)type metadata accessor for MapsFavoriteItem, &qword_1015D69A0, &qword_1015D6998, (uint64_t *)sub_1002C2128);
}

uint64_t sub_1000A18E0(void *a1)
{
  return sub_1000A18F8(a1);
}

uint64_t sub_1000A18F8(void *a1)
{
  uint64_t v3 = **(void **)(v1 + 16);
  swift_bridgeObjectRelease();
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

void sub_1000A1944(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_1000A1A6C(v3);
    *a1 = v3;
  }
  uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8[0] = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8[1] = v6;
  id v7 = v4;
  sub_1000A1A70(v8, v7);

  specialized Array._endMutation()();
}

uint64_t sub_1000A19F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void sub_1000A1A70(uint64_t *a1, void *a2)
{
  uint64_t v3 = v2;
  Swift::Int v5 = a1[1];
  id v149 = a2;
  Swift::Int v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_162;
    }
    if (v5)
    {
      id v10 = v149;
      sub_10022EF70(0, v5, 1, a1, (uint64_t)v10);
    }
    else
    {
    }
    return;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_170;
  }
  v140 = a1;
  Swift::Int v141 = v6;
  Swift::Int v146 = v5;
  if (v5 < 2)
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
    uint64_t v160 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      unint64_t v81 = _swiftEmptyArrayStorage[2];
      goto LABEL_127;
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    type metadata accessor for MapsFavoriteItem();
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (id *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v160 = v9;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *v140;
  uint64_t v139 = *v140 - 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v14 = v5;
  uint64_t v150 = *v140;
  do
  {
    uint64_t v144 = v11;
    Swift::Int v145 = v12;
    Swift::Int v15 = v12 + 1;
    if (v12 + 1 >= v14)
    {
      Swift::Int v22 = v12 + 1;
    }
    else
    {
      uint64_t v16 = *(void **)(v13 + 8 * v15);
      uint64_t v17 = v12;
      uint64_t v18 = *(void **)(v13 + 8 * v12);
      v158 = v18;
      v159 = v16;
      id v19 = v16;
      id v20 = v18;
      BOOL __src = sub_1002273BC((uint64_t)&v159, (uint64_t)&v158, (uint64_t)v149);
      if (v3)
      {
        swift_bridgeObjectRelease();

        goto LABEL_139;
      }

      Swift::Int v21 = v17 + 2;
      Swift::Int v22 = v17 + 2;
      if (v17 + 2 < v146)
      {
        while (1)
        {
          while (1)
          {
            uint64_t v23 = *(void **)(v13 + 8 * v15);
            id v24 = *(id *)(v13 + 8 * v21);
            id v25 = v23;
            uint64_t v26 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
            long long v27 = (void *)dispatch thunk of FavoriteItem.longitude.getter();
            uint64_t v28 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
            uint64_t v29 = dispatch thunk of FavoriteItem.longitude.getter();
            id v30 = (void *)v29;
            if (v26) {
              break;
            }
            uint64_t v26 = v27;
LABEL_24:

            if (__src)
            {
              Swift::Int v22 = v21;
              uint64_t v13 = v150;
              goto LABEL_38;
            }
            Swift::Int v22 = v21 + 1;
            Swift::Int v15 = v21;
            Swift::Int v21 = v22;
            uint64_t v13 = v150;
            if (v22 >= v146) {
              goto LABEL_46;
            }
          }
          uint64_t v11 = v144;
          if (!v27) {
            goto LABEL_24;
          }
          if (!v28)
          {

            goto LABEL_29;
          }
          if (v29)
          {
            id v31 = v26;
            id v152 = v27;
            id v32 = v28;
            id v33 = v30;
            [v31 doubleValue];
            double v35 = v34;
            [v152 doubleValue];
            id v37 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v35 longitude:v36];
            [v37 distanceFromLocation:v149];
            double v39 = v38;

            [v32 doubleValue];
            double v41 = v40;
            [v33 doubleValue];
            id v43 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v41 longitude:v42];
            [v43 distanceFromLocation:v149];
            double v45 = v44;

            if (((__src ^ (v39 >= v45)) & 1) == 0)
            {
              Swift::Int v22 = v21;
              uint64_t v13 = v150;
              break;
            }
            Swift::Int v22 = v21 + 1;
            Swift::Int v15 = v21;
            Swift::Int v21 = v22;
            uint64_t v13 = v150;
            if (v22 >= v146) {
              break;
            }
          }
          else
          {

            id v30 = v26;
LABEL_29:

            uint64_t v13 = v150;
            if (!__src)
            {
              Swift::Int v22 = v21;
              uint64_t v3 = 0;
              uint64_t v12 = v145;
              goto LABEL_47;
            }
            Swift::Int v22 = v21 + 1;
            Swift::Int v15 = v21;
            Swift::Int v21 = v22;
            if (v22 >= v146) {
              goto LABEL_38;
            }
          }
        }
      }
      if (!__src)
      {
LABEL_46:
        uint64_t v3 = 0;
        uint64_t v11 = v144;
        uint64_t v12 = v145;
        goto LABEL_47;
      }
LABEL_38:
      uint64_t v12 = v145;
      if (v22 < v145) {
        goto LABEL_165;
      }
      if (v145 < v22)
      {
        id v46 = (uint64_t *)(v139 + 8 * v22);
        Swift::Int v47 = v22;
        Swift::Int v48 = v145;
        int v49 = (uint64_t *)(v13 + 8 * v145);
        uint64_t v3 = 0;
        uint64_t v11 = v144;
        while (1)
        {
          if (v48 != --v47)
          {
            if (!v13) {
              goto LABEL_168;
            }
            uint64_t v50 = *v49;
            *int v49 = *v46;
            uint64_t *v46 = v50;
          }
          ++v48;
          --v46;
          ++v49;
          if (v48 >= v47) {
            goto LABEL_47;
          }
        }
      }
      uint64_t v3 = 0;
    }
    uint64_t v11 = v144;
LABEL_47:
    if (v22 >= v146) {
      goto LABEL_74;
    }
    if (__OFSUB__(v22, v12)) {
      goto LABEL_161;
    }
    if (v22 - v12 >= v141) {
      goto LABEL_74;
    }
    if (__OFADD__(v12, v141)) {
      goto LABEL_163;
    }
    Swift::Int v51 = v146;
    if (v12 + v141 < v146) {
      Swift::Int v51 = v12 + v141;
    }
    if (v51 < v12)
    {
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:

      __break(1u);
LABEL_167:

      __break(1u);
LABEL_168:

      __break(1u);
LABEL_169:

      __break(1u);
LABEL_170:

      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return;
    }
    if (v22 == v51) {
      goto LABEL_74;
    }
    uint64_t v142 = v3;
    Swift::Int v143 = v51;
    uint64_t v52 = v139 + 8 * v22;
    while (2)
    {
      uint64_t v55 = *(void **)(v13 + 8 * v22);
      uint64_t v148 = v52;
      Swift::Int v153 = v22;
      while (1)
      {
        uint64_t v56 = *(void **)v52;
        id __srca = v55;
        id v57 = v56;
        uint64_t v53 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
        id v58 = (void *)dispatch thunk of FavoriteItem.longitude.getter();
        unint64_t v59 = (void *)dispatch thunk of FavoriteItem.latitude.getter();
        uint64_t v60 = dispatch thunk of FavoriteItem.longitude.getter();
        id v61 = (void *)v60;
        if (!v53) {
          break;
        }
        if (!v58) {
          goto LABEL_57;
        }
        if (v59)
        {
          if (v60)
          {
            id v151 = v53;
            id v62 = v58;
            id v63 = v59;
            id v64 = v61;
            [v151 doubleValue];
            double v66 = v65;
            [v62 doubleValue];
            id v68 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v66 longitude:v67];
            [v68 distanceFromLocation:v149];
            double v70 = v69;

            [v63 doubleValue];
            double v72 = v71;
            id v73 = v64;
            [v64 doubleValue];
            id v75 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v72 longitude:v74];
            [v75 distanceFromLocation:v149];
            double v77 = v76;

            uint64_t v13 = v150;
            if (v70 >= v77) {
              goto LABEL_58;
            }
            goto LABEL_70;
          }

          id v61 = v53;
        }
        else
        {
        }
LABEL_70:
        Swift::Int v54 = v153;
        if (!v13) {
          goto LABEL_166;
        }
        __int16 v78 = *(void **)v52;
        uint64_t v55 = *(void **)(v52 + 8);
        *(void *)uint64_t v52 = v55;
        *(void *)(v52 + _Block_object_dispose(&STACK[0x2B0], 8) = v78;
        v52 -= 8;
        if (v153 == ++v12) {
          goto LABEL_59;
        }
      }
      uint64_t v53 = v58;
LABEL_57:

LABEL_58:
      Swift::Int v54 = v153;
LABEL_59:
      Swift::Int v22 = v54 + 1;
      uint64_t v52 = v148 + 8;
      uint64_t v12 = v145;
      if (v22 != v143) {
        continue;
      }
      break;
    }
    Swift::Int v22 = v143;
    uint64_t v3 = v142;
    uint64_t v11 = v144;
LABEL_74:
    if (v22 < v12) {
      goto LABEL_157;
    }
    Swift::Int v154 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_10035496C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v80 = *((void *)v11 + 2);
    unint64_t v79 = *((void *)v11 + 3);
    unint64_t v81 = v80 + 1;
    if (v80 >= v79 >> 1) {
      uint64_t v11 = sub_10035496C((char *)(v79 > 1), v80 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v81;
    uint64_t v82 = v11 + 32;
    unint64_t v83 = &v11[16 * v80 + 32];
    *(void *)unint64_t v83 = v145;
    *((void *)v83 + 1) = v22;
    if (v80)
    {
      while (2)
      {
        unint64_t v84 = v81 - 1;
        if (v81 >= 4)
        {
          v89 = &v82[16 * v81];
          uint64_t v90 = *((void *)v89 - 8);
          uint64_t v91 = *((void *)v89 - 7);
          BOOL v95 = __OFSUB__(v91, v90);
          uint64_t v92 = v91 - v90;
          if (v95) {
            goto LABEL_145;
          }
          uint64_t v94 = *((void *)v89 - 6);
          uint64_t v93 = *((void *)v89 - 5);
          BOOL v95 = __OFSUB__(v93, v94);
          uint64_t v87 = v93 - v94;
          char v88 = v95;
          if (v95) {
            goto LABEL_146;
          }
          unint64_t v96 = v81 - 2;
          uint64_t v97 = &v82[16 * v81 - 32];
          uint64_t v99 = *(void *)v97;
          uint64_t v98 = *((void *)v97 + 1);
          BOOL v95 = __OFSUB__(v98, v99);
          uint64_t v100 = v98 - v99;
          if (v95) {
            goto LABEL_148;
          }
          BOOL v95 = __OFADD__(v87, v100);
          uint64_t v101 = v87 + v100;
          if (v95) {
            goto LABEL_151;
          }
          if (v101 >= v92)
          {
            uint64_t v119 = &v82[16 * v84];
            uint64_t v121 = *(void *)v119;
            uint64_t v120 = *((void *)v119 + 1);
            BOOL v95 = __OFSUB__(v120, v121);
            uint64_t v122 = v120 - v121;
            if (v95) {
              goto LABEL_155;
            }
            BOOL v112 = v87 < v122;
          }
          else
          {
LABEL_93:
            if (v88) {
              goto LABEL_147;
            }
            unint64_t v96 = v81 - 2;
            id v102 = &v82[16 * v81 - 32];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v105 = __OFSUB__(v103, v104);
            uint64_t v106 = v103 - v104;
            char v107 = v105;
            if (v105) {
              goto LABEL_150;
            }
            uint64_t v108 = &v82[16 * v84];
            uint64_t v110 = *(void *)v108;
            uint64_t v109 = *((void *)v108 + 1);
            BOOL v95 = __OFSUB__(v109, v110);
            uint64_t v111 = v109 - v110;
            if (v95) {
              goto LABEL_153;
            }
            if (__OFADD__(v106, v111)) {
              goto LABEL_154;
            }
            if (v106 + v111 < v87) {
              goto LABEL_105;
            }
            BOOL v112 = v87 < v111;
          }
          if (v112) {
            unint64_t v84 = v96;
          }
        }
        else
        {
          if (v81 == 3)
          {
            uint64_t v86 = *((void *)v11 + 4);
            uint64_t v85 = *((void *)v11 + 5);
            BOOL v95 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            char v88 = v95;
            goto LABEL_93;
          }
          uint64_t v113 = *((void *)v11 + 4);
          uint64_t v114 = *((void *)v11 + 5);
          BOOL v95 = __OFSUB__(v114, v113);
          uint64_t v106 = v114 - v113;
          char v107 = v95;
LABEL_105:
          if (v107) {
            goto LABEL_149;
          }
          uint64_t v115 = &v82[16 * v84];
          uint64_t v117 = *(void *)v115;
          uint64_t v116 = *((void *)v115 + 1);
          BOOL v95 = __OFSUB__(v116, v117);
          uint64_t v118 = v116 - v117;
          if (v95) {
            goto LABEL_152;
          }
          if (v118 < v106) {
            goto LABEL_122;
          }
        }
        unint64_t v123 = v84 - 1;
        if (v84 - 1 >= v81)
        {
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        if (!v13) {
          goto LABEL_167;
        }
        uint64_t v124 = v13;
        NSString v125 = &v82[16 * v123];
        v126 = v82;
        uint64_t v127 = *(void *)v125;
        uint64_t v128 = v126;
        unint64_t v129 = v84;
        uint64_t v130 = &v126[16 * v84];
        uint64_t v131 = *((void *)v130 + 1);
        sub_10022E3AC((id *)(v124 + 8 * *(void *)v125), (id *)(v124 + 8 * *(void *)v130), v124 + 8 * v131, __dst, v149);
        if (v3) {
          goto LABEL_138;
        }
        if (v131 < v127) {
          goto LABEL_142;
        }
        if (v129 > *((void *)v11 + 2)) {
          goto LABEL_143;
        }
        *(void *)NSString v125 = v127;
        *(void *)&v128[16 * v123 + 8] = v131;
        unint64_t v132 = *((void *)v11 + 2);
        if (v129 >= v132) {
          goto LABEL_144;
        }
        uint64_t v82 = v128;
        unint64_t v81 = v132 - 1;
        memmove(v130, v130 + 16, 16 * (v132 - 1 - v129));
        *((void *)v11 + 2) = v132 - 1;
        uint64_t v13 = v150;
        if (v132 <= 2) {
          goto LABEL_122;
        }
        continue;
      }
    }
    unint64_t v81 = 1;
LABEL_122:
    Swift::Int v14 = v146;
    uint64_t v12 = v154;
  }
  while (v154 < v146);
LABEL_127:
  if (v81 >= 2)
  {
    uint64_t v133 = *v140;
    uint64_t v155 = *v140;
    do
    {
      unint64_t v134 = v81 - 2;
      if (v81 < 2) {
        goto LABEL_156;
      }
      if (!v133) {
        goto LABEL_169;
      }
      uint64_t v135 = *(void *)&v11[16 * v134 + 32];
      uint64_t v136 = *(void *)&v11[16 * v81 + 24];
      sub_10022E3AC((id *)(v133 + 8 * v135), (id *)(v133 + 8 * *(void *)&v11[16 * v81 + 16]), v133 + 8 * v136, __dst, v149);
      if (v3) {
        break;
      }
      if (v136 < v135) {
        goto LABEL_158;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_10035503C((uint64_t)v11);
      }
      if (v134 >= *((void *)v11 + 2)) {
        goto LABEL_159;
      }
      uint64_t v137 = &v11[16 * v134 + 32];
      *(void *)uint64_t v137 = v135;
      *((void *)v137 + 1) = v136;
      unint64_t v138 = *((void *)v11 + 2);
      if (v81 > v138) {
        goto LABEL_160;
      }
      memmove(&v11[16 * v81 + 16], &v11[16 * v81 + 32], 16 * (v138 - v81));
      *((void *)v11 + 2) = v138 - 1;
      unint64_t v81 = v138 - 1;
      uint64_t v133 = v155;
    }
    while (v138 > 2);
  }
LABEL_138:
  swift_bridgeObjectRelease();
LABEL_139:
  *(void *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()();

  swift_bridgeObjectRelease();
}

uint64_t sub_1000A2678()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_10008C88C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012DE5F0;
  id v10 = _Block_copy(aBlock);
  id v11 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007FF4C((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

void *sub_1000A2944()
{
  uint64_t v1 = 0;
  switch((unint64_t)[v0 type])
  {
    case 1uLL:
      uint64_t v2 = dispatch thunk of FavoriteItem.customName.getter();
      if (v5) {
        return (void *)v2;
      }
      uint64_t v14 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter();
      uint64_t v1 = v14;
      if (v14)
      {
        id v15 = [v14 name];

        if (v15) {
          goto LABEL_20;
        }
        return 0;
      }
      return v1;
    case 2uLL:
    case 3uLL:
    case 5uLL:
      uint64_t v2 = dispatch thunk of FavoriteItem.customName.getter();
      if (v3) {
        return (void *)v2;
      }
      [v0 type];
      id v4 = (id)MapsSuggestionsLocalizedTitleForShortcutType();
      uint64_t v1 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v1;
    case 6uLL:
      id v7 = [v0 identifier];
      if (!v7) {
        return 0;
      }
      uint64_t v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      if (v9 == 0x725479627261654ELL && v11 == 0xED00007469736E61)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      id v16 = (id)MapsSuggestionsLocalizedNearbyTransitShortString();
      if (!v16) {
        return 0;
      }
      id v15 = v16;
LABEL_20:
      uint64_t v1 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v1;
    default:
      return v1;
  }
}

uint64_t sub_1000A2B84@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000A2D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000FF2E0(a1, &qword_1015CD250);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

id sub_1000A31A8()
{
  if (qword_10160F0C0 != -1) {
    dispatch_once(&qword_10160F0C0, &stru_1012EEA88);
  }
  uint64_t v0 = (void *)qword_10160F0B8;

  return v0;
}

void sub_1000A36BC()
{
  id v61 = v1;
  v1[19] = _swiftEmptyArrayStorage;
  uint64_t v3 = v1 + 19;
  uint64_t v4 = v1[32];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v0 = (unsigned char *)v1[32];
    }
    else {
      uint64_t v0 = (unsigned char *)(v4 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v58 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v56 = v1;
  id v57 = v1 + 19;
  if (v58)
  {
    if (v58 < 1)
    {
      __break(1u);
LABEL_35:
      swift_once();
      goto LABEL_18;
    }
    uint64_t v5 = 0;
    unint64_t v6 = v4 & 0xC000000000000001;
    uint64_t v54 = v1[32] + 32;
    uint64_t v55 = (objc_super *)(v1 + 17);
    do
    {
      if (v6) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v54 + 8 * v5);
      }
      uint64_t v8 = v7;
      if ((dispatch thunk of FavoriteItem.hidden.getter() & 1) == 0)
      {
        uint64_t v9 = (objc_class *)type metadata accessor for MapsFavoriteItem();
        uint64_t v10 = objc_allocWithZone(v9);
        uint64_t v11 = &v10[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
        *uint64_t v11 = 0;
        v11[1] = 0;
        v10[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
        uint64_t v12 = &v10[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
        void *v12 = 0x6966654472657355;
        v12[1] = 0xEB0000000064656ELL;
        *(void *)&v10[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
        v10[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
        v10[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
        v10[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
        uint64_t v13 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
        uint64_t v14 = qword_1015CBCC0;
        id v15 = v8;
        id v16 = v10;
        if (v14 != -1) {
          swift_once();
        }
        v10[v13] = byte_101611638;
        *(void *)&v16[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
        *(void *)&v16[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = v15;
        id v17 = v15;

        uint64_t v1 = v56;
        v56[17] = v16;
        v56[18] = v9;
        uint64_t v18 = [(objc_super *)v55 init];

        *((unsigned char *)&v18->receiver + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) = 1;
        id v19 = v18;
        uint64_t v3 = v57;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v1[19] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v1[19] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v5;
    }
    while (v58 != v5);
  }
  id v20 = v3 + 3;
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + 25;
  uint64_t v21 = v1[25];
  uint64_t v22 = v1[33];
  uint64_t v23 = sub_10004ABFC(v1[32]);
  swift_bridgeObjectRelease();
  id v24 = (uint64_t *)(v21 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__setupButtons);
  uint64_t v3 = v57;
  swift_beginAccess();
  v1[22] = v23;
  uint64_t v25 = *v24;
  *(void *)(swift_task_alloc() + 16) = v20;
  os_unfair_lock_lock((os_unfair_lock_t)(v25 + 24));
  sub_1000A18E0((void *)(v25 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v25 + 24));
  if (v22) {
    return;
  }
  uint64_t v26 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v27 = *v57;
  uint64_t v28 = (uint64_t *)(v26 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  v57[2] = v27;
  uint64_t v29 = *v28;
  *(void *)(swift_task_alloc() + 16) = v57 + 2;
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
  sub_1000A18E0((void *)(v29 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
  uint64_t v30 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v31 = (uint64_t *)(v30 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__sortedShortcuts);
  swift_beginAccess();
  v57[1] = v27;
  uint64_t v32 = *v31;
  *(void *)(swift_task_alloc() + 16) = v57 + 1;
  swift_bridgeObjectRetain();
  os_unfair_lock_lock((os_unfair_lock_t)(v32 + 24));
  sub_1000A18E0((void *)(v32 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v32 + 24));
  uint64_t v0 = v57 + 15;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_1015CBC78 != -1) {
    goto LABEL_35;
  }
LABEL_18:
  uint64_t v33 = type metadata accessor for Logger();
  sub_1000F2248(v33, (uint64_t)qword_1016115E0);
  double v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    unint64_t v59 = v0;
    uint64_t v36 = swift_slowAlloc();
    v60[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 134218242;
    swift_beginAccess();
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    void v3[4] = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 12) = 2080;
    type metadata accessor for MapsFavoriteItem();
    swift_bridgeObjectRetain();
    uint64_t v38 = Array.description.getter();
    unint64_t v40 = v39;
    swift_bridgeObjectRelease();
    void v3[5] = sub_1000F2280(v38, v40, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Fetched %ld persisted items: %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v0 = v59;
  }
  else
  {
  }
  double v41 = (uint64_t *)(*v2 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__hasInitialData);
  swift_beginAccess();
  unsigned char *v0 = 1;
  uint64_t v42 = *v41;
  *(void *)(swift_task_alloc() + 16) = v0;
  os_unfair_lock_lock((os_unfair_lock_t)(v42 + 20));
  sub_10010E808((unsigned char *)(v42 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v42 + 20));
  swift_task_dealloc();
  swift_endAccess();
  uint64_t v43 = *v41;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v43 + 20));
  sub_1000F3E3C((unsigned char *)(v43 + 16), v60);
  os_unfair_lock_unlock((os_unfair_lock_t)(v43 + 20));
  char v44 = v60[0];
  swift_release();
  id v46 = (void *)v56[28];
  double v45 = (void *)v56[29];
  Swift::Int v47 = (void *)v56[27];
  if (v44)
  {
    int v49 = (void *)v56[25];
    uint64_t v48 = v56[26];
    uint64_t v50 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v48, 1, 1, v50);
    Swift::Int v51 = (void *)swift_allocObject();
    v51[2] = 0;
    v51[3] = 0;
    v51[4] = v49;
    id v52 = v49;
    sub_100042AF4(v48, (uint64_t)&unk_1015D5DD0, (uint64_t)v51);
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v53 = (void (*)(void))v56[1];
  v53();
}

id sub_1000A4038(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1000A40A8()
{
  uint64_t v1 = v0;
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  v23.unint64_t receiver = v0;
  v23.Class super_class = (Class)type metadata accessor for MapsFavoriteItem();
  [super debugDescription];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();

  uint64_t v24 = v3;
  unint64_t v25 = v5;
  v6._countAndFlagsBits = 0x203A65707974203ALL;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  [v0 type];
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x203A6469202CLL;
  v8._object = (void *)0xE600000000000000;
  String.append(_:)(v8);
  id v9 = [v0 identifier];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v13 = (void *)0xE400000000000000;
    uint64_t v11 = 1701736270;
  }
  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x6567616E616D202CLL;
  v15._object = (void *)0xED0000203A644964;
  String.append(_:)(v15);
  id v16 = *(id *)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem];
  id v17 = [v16 description];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);

  swift_bridgeObjectRelease();
  return v24;
}

uint64_t type metadata accessor for MapsFavoriteItem()
{
  return self;
}

void sub_1000A4B08(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  Swift::String v7 = sub_1000A4B98(a2);
  unsigned int v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

  if (v8)
  {
    uint64_t v9 = +[NSIndexPath indexPathForRow:a3 inSection:0];
    uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    *a4 = 1;
  }
}

id sub_1000A4B98(void *a1)
{
  id v1 = a1;
  id v2 = [v1 _maps_diffableDataSourceIdentifier];
  if ([v2 length])
  {
    uint64_t v3 = (objc_class *)objc_opt_class();
    unint64_t v4 = NSStringFromClass(v3);
    unint64_t v5 = +[NSString stringWithFormat:@"%@.%@", v4, v2];
  }
  else
  {
    unint64_t v5 = 0;
  }

  return v5;
}

void sub_1000A4CC0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  [*(id *)(a1 + 40) screenScale];
  [v2 imageForScale:[*(id *)(a1 + 40) isCarPlay] isCarPlay:v3];
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 40) setImage:v4 forKey:*(void *)(a1 + 32)];
}

id sub_1000A55F8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_1000A5690()
{
  id v1 = [v0 customName];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    if ([v0 type] == (id)6) {
      return v3;
    }
    swift_bridgeObjectRelease();
  }
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) == 1)
  {
    [v0 type];
    id v4 = (id)NSStringFromMapsSuggestionsShortcutType();
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    v6._countAndFlagsBits = 0x70757465535FLL;
    v6._object = (void *)0xE600000000000000;
    String.append(_:)(v6);
    return v5;
  }
  else
  {
    id v7 = [v0 geoMapItem];
    if (v7)
    {
      [v7 coordinate];
      id v8 = [v0 identifierForCoordinateWithCoordinate:];
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

id sub_1000A588C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

void sub_1000A595C(double a1, double a2)
{
  double v3 = a1 * 100000.0;
  if (v3 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  double v4 = a2 * 100000.0;
  if ((*(void *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_14;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return;
  }
  double v6 = (double)((uint64_t)v3 / 5) * 5.0 / 100000.0;
  double v7 = (double)((uint64_t)v4 / 5) * 5.0 / 100000.0;
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100F5CFA0;
  *(void *)(v8 + 56) = &type metadata for Double;
  *(void *)(v8 + 64) = &protocol witness table for Double;
  *(double *)(v8 + 32) = v6;
  *(void *)(v8 + 96) = &type metadata for Double;
  *(void *)(v8 + 104) = &protocol witness table for Double;
  *(double *)(v8 + 72) = v7;
  String.init(format:_:)();
}

uint64_t sub_1000A5B64()
{
  unsigned __int16 v0 = dispatch thunk of FavoriteItem.type.getter();
  if (v0 > 6u) {
    return 0;
  }
  else {
    return qword_100F6E448[(__int16)v0];
  }
}

id sub_1000A5BF8()
{
  switch((unint64_t)[v0 type])
  {
    case 0uLL:
    case 1uLL:
      id v1 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter();
      if (v1)
      {
        uint64_t v2 = v1;
        id v3 = [v1 _styleAttributes];

        if (v3) {
          return v3;
        }
      }
      id v3 = [self markerStyleAttributes];
      if (v3) {
        return v3;
      }
      __break(1u);
      goto LABEL_6;
    case 2uLL:
LABEL_6:
      id v3 = [self homeStyleAttributes];
      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_8:
      id v3 = [self workStyleAttributes];
      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_10:
      double v4 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter();
      if (v4)
      {
        uint64_t v5 = v4;
        id v3 = [v4 _styleAttributes];

        if (v3) {
          return v3;
        }
      }
      id v3 = [self markerStyleAttributes];
      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_14:
      id v3 = [self schoolStyleAttributes];
      if (v3) {
        return v3;
      }
      __break(1u);
LABEL_16:
      id result = [self nearbyTransitStyleAttributes];
      id v3 = result;
      if (result) {
        return v3;
      }
      __break(1u);
      return result;
    case 3uLL:
      goto LABEL_8;
    case 5uLL:
      goto LABEL_14;
    case 6uLL:
      goto LABEL_16;
    default:
      goto LABEL_10;
  }
}

void sub_1000A6254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000A62EC(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_1000A63F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    if ([*(id *)(a1 + 32) useSearchImageFallback])
    {
      id v3 = [*(id *)(a1 + 40) searchImage];
    }
    else
    {
      id v3 = 0;
    }
  }
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4)
  {
    id v5 = v3;
    (*(void (**)(void))(v4 + 16))();
    id v3 = v5;
  }
}

void sub_1000A6474(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(a1 + 40) == WeakRetained[4])
    {
      [WeakRetained _setFetchedImage:v3];
      if (!v3)
      {
        long long v6 = sub_1000AA148();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v7 = v5[5];
          int v8 = 138412290;
          uint64_t v9 = v7;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Failed to fetch icon for favorite '%@'", (uint8_t *)&v8, 0xCu);
        }
      }
    }
  }
}

uint64_t sub_1000A6574()
{
  if ([v0 type] == (id)6)
  {
    id v1 = [v0 identifier];
    if (v1)
    {
      id v2 = v1;
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v5 = v4;

      if (v3 == 0x725479627261654ELL && v5 == 0xED00007469736E61)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0) {
          goto LABEL_8;
        }
      }
      id v10 = (id)MapsSuggestionsLocalizedNearbyTransitShortSubtitleString();
      if (!v10) {
        return 0;
      }
      id v8 = v10;
      goto LABEL_16;
    }
  }
LABEL_8:
  if (v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] == 1)
  {
    id v8 = (id)MapsSuggestionsLocalizedAddShortcutString();
LABEL_16:
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v9;
  }
  if (!*(void *)&v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle + 8])
  {
    id v11 = [v0 mapItemStorage];
    id v8 = (id)MapsSuggestionsMapItemCityName();

    if (!v8) {
      return 0;
    }
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
  swift_bridgeObjectRetain();
  return v9;
}

void sub_1000A69DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000A7658(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 hasAttributes] & 1) == 0)
  {
    id v8 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)Swift::String v15 = 138543362;
      *(void *)&void v15[4] = v3;
      id v11 = "No attributes available; returning nil: %{public}@";
      uint64_t v12 = v8;
      os_log_type_t v13 = OS_LOG_TYPE_INFO;
LABEL_22:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v11, v15, 0xCu);
      goto LABEL_23;
    }
    goto LABEL_23;
  }
  if (GEOConfigGetBOOL() && [v3 poiType] == 225)
  {
    id v4 = [v3 copy:0x7F00000006];

    [v4 replaceAttributes:v15 count:1];
    id v3 = v4;
  }
  uint64_t v5 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)Swift::String v15 = 138543362;
    *(void *)&void v15[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will fetch image for attributes: %{public}@", v15, 0xCu);
  }

  long long v6 = +[MKIconManager imageForStyle:v3 size:4 forScale:0 format:*(unsigned __int8 *)(a1 + 40) transparent:*(unsigned __int8 *)(a1 + 41) nightMode:*(double *)(a1 + 32)];
  char v7 = GEOFindOrCreateLog();
  id v8 = v7;
  if (!v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)Swift::String v15 = 138543362;
      *(void *)&void v15[4] = v3;
      id v11 = "Failed to fetch image for attributes: %{public}@";
LABEL_21:
      uint64_t v12 = v8;
      os_log_type_t v13 = OS_LOG_TYPE_ERROR;
      goto LABEL_22;
    }
LABEL_23:

    long long v6 = 0;
    goto LABEL_24;
  }
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)Swift::String v15 = 138543362;
    *(void *)&void v15[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Successfully fetched image for attributes: %{public}@", v15, 0xCu);
  }

  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v9 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)Swift::String v15 = 138543362;
      *(void *)&void v15[4] = v3;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Will invert image for attributes: %{public}@", v15, 0xCu);
    }

    uint64_t v10 = [v6 _maps_invertedImage];

    if (v10)
    {
      long long v6 = (void *)v10;
      goto LABEL_24;
    }
    id v8 = GEOFindOrCreateLog();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      goto LABEL_23;
    }
    *(_DWORD *)Swift::String v15 = 138543362;
    *(void *)&void v15[4] = v3;
    id v11 = "Image inverting failed for attributes: %{public}@";
    goto LABEL_21;
  }
LABEL_24:

  return v6;
}

void sub_1000A7CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
}

id sub_1000A930C()
{
  if (qword_101611F58 != -1) {
    dispatch_once(&qword_101611F58, &stru_1012EF718);
  }
  unsigned __int16 v0 = (void *)qword_101611F50;

  return v0;
}

void sub_1000A9C34(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  char v7 = sub_1000AA148();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = (objc_class *)objc_opt_class();
    uint64_t v9 = NSStringFromClass(v8);
    uint64_t v10 = [*(id *)(a1 + 32) strippedData:v5];
    int v13 = 138412802;
    Swift::String v14 = v9;
    __int16 v15 = 2112;
    id v16 = v10;
    __int16 v17 = 2112;
    id v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%@ fetchSuggestions [Shortcuts]  %@ error %@", (uint8_t *)&v13, 0x20u);
  }
  uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v5;
}

void sub_1000A9D58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  char v7 = sub_1000AA148();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = (objc_class *)objc_opt_class();
    uint64_t v9 = NSStringFromClass(v8);
    uint64_t v10 = [*(id *)(a1 + 32) strippedData:v5];
    int v13 = 138412802;
    Swift::String v14 = v9;
    __int16 v15 = 2112;
    id v16 = v10;
    __int16 v17 = 2112;
    id v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%@ fetchSuggestions [Suggestions]  %@ error %@", (uint8_t *)&v13, 0x20u);
  }
  uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v5;
}

id sub_1000AA148()
{
  if (qword_101612248 != -1) {
    dispatch_once(&qword_101612248, &stru_1012EFCF8);
  }
  unsigned __int16 v0 = (void *)qword_101612240;

  return v0;
}

void sub_1000AA308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000AA3B8(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) _currentGuidanceStateMessageWithGuidanceCausedVibration:*(unsigned __int8 *)(a1 + 40)];
  id v2 = [v4 copy];
  [*(id *)(*(void *)(a1 + 32) + 112) receivedGuidanceState:v2];
  id v3 = [*(id *)(a1 + 32) backgroundNavigationDelegate];
  [v3 updateWithGuidance:v4];

  [*(id *)(a1 + 32) _sendWeakLocationNotificationIfNeededWithGuidanceState:v4];
}

id sub_1000ABC9C(void *a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = [a1 objectForKeyedSubscript:a2];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v3 = objc_opt_class();
      id v4 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v3, objc_opt_class(), 0);
      id v5 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:v4 fromData:v2 error:0];
    }
    else
    {
      id v5 = 0;
    }
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_1000ABFCC(os_log_type_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = a2;
  uint64_t v11 = GEOFindOrCreateLog();
  BOOL v12 = os_log_type_enabled(v11, a1);

  if (v12)
  {
    id v13 = [objc_alloc((Class)NSString) initWithFormat:v10 arguments:&a9];
    Swift::String v14 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v14, a1))
    {
      *(_DWORD *)buf = 138477827;
      id v16 = v13;
      _os_log_impl((void *)&_mh_execute_header, v14, a1, "%{private}@", buf, 0xCu);
    }
  }
}

id sub_1000AC254(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = objc_alloc_init((Class)NSMutableArray);
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v6 = v3;
    id v7 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = 0;
      uint64_t v10 = *(void *)v17;
LABEL_4:
      uint64_t v11 = 0;
      while (1)
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v6);
        }
        uint64_t v12 = *(void *)(*((void *)&v16 + 1) + 8 * v11);
        char v15 = 0;
        if (v4[2](v4, v12, v9 + v11, &v15)) {
          [v5 addObject:v12];
        }
        if (v15) {
          break;
        }
        if (v8 == (id)++v11)
        {
          id v8 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
          v9 += v11;
          if (v8) {
            goto LABEL_4;
          }
          break;
        }
      }
    }

    id v13 = [v5 copy];
  }
  else
  {
    id v13 = &__NSArray0__struct;
  }

  return v13;
}

BOOL sub_1000AC3E8(id a1, UIScene *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  id v5 = [(UIScene *)v4 session];
  id v6 = [v5 role];
  if ([v6 isEqualToString:_UIWindowSceneSessionRoleCarPlay])
  {
    id v7 = [(UIScene *)v4 delegate];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  else
  {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

id sub_1000AD30C()
{
  if (qword_101611FA8 != -1) {
    dispatch_once(&qword_101611FA8, &stru_1012EF7B8);
  }
  unsigned __int16 v0 = (void *)qword_101611FA0;

  return v0;
}

id sub_1000AEBF0()
{
  if (qword_10160FE58 != -1) {
    dispatch_once(&qword_10160FE58, &stru_1012FF980);
  }
  unsigned __int16 v0 = (void *)qword_10160FE50;

  return v0;
}

id sub_1000AFBCC()
{
  if (qword_10160EB88 != -1) {
    dispatch_once(&qword_10160EB88, &stru_1012E8C60);
  }
  unsigned __int16 v0 = (void *)qword_10160EB80;

  return v0;
}

id sub_1000B26E8()
{
  if (qword_10160E9F8 != -1) {
    dispatch_once(&qword_10160E9F8, &stru_1012E6D68);
  }
  unsigned __int16 v0 = (void *)qword_10160E9F0;

  return v0;
}

id sub_1000B2ADC()
{
  if (qword_10160FA90 != -1) {
    dispatch_once(&qword_10160FA90, &stru_1012F9B48);
  }
  unsigned __int16 v0 = (void *)qword_10160FA88;

  return v0;
}

id sub_1000B2B30(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v11 = [WeakRetained collectionView:v7 cellForItemAtIndexPath:v8 itemIdentifier:v9];

  if (!v11)
  {
    if (!qword_10160F1C0)
    {
      uint64_t v12 = +[UICollectionViewCellRegistration registrationWithCellClass:objc_opt_class() configurationHandler:&stru_1012F0D18];
      id v13 = (void *)qword_10160F1C0;
      qword_10160F1C0 = v12;
    }
    uint64_t v11 = [v7 dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:];
  }

  return v11;
}

void sub_1000B2DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B32AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

id sub_1000B448C(uint64_t a1)
{
  uint64_t v2 = objc_opt_new();
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  if (qword_1016102C0 != -1) {
    dispatch_once(&qword_1016102C0, &stru_101312C98);
  }
  id v3 = (id)qword_1016102B8;
  id v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = [(id)v15 integerValue];
        if ((v8 & a1) != 0)
        {
          unint64_t v9 = v8;
          uint64_t v10 = objc_opt_new();
          uint64_t v11 = v10;
          uint64_t v12 = &off_1013A9E08;
          switch(v9)
          {
            case 1uLL:
              goto LABEL_13;
            case 2uLL:
              [v10 addObject:&off_1013A9E20];
              uint64_t v12 = &off_1013A9E38;
              goto LABEL_13;
            case 4uLL:
              uint64_t v12 = &off_1013A9E50;
              goto LABEL_13;
            case 8uLL:
              uint64_t v12 = &off_1013A9E68;
LABEL_13:
              [v11 addObject:v12];
              break;
            default:
              break;
          }
          [v2 addObjectsFromArray:v11];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v5);
  }

  id v13 = [v2 copy];

  return v13;
}

void sub_1000B4BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B522C()
{
  if (qword_101611FF8 != -1) {
    dispatch_once(&qword_101611FF8, &stru_1012EF858);
  }
  unsigned __int16 v0 = (void *)qword_101611FF0;

  return v0;
}

void sub_1000B53AC(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  id v6 = +[NSNull null];

  id v7 = [*(id *)(a1 + 32) defaults];
  unint64_t v8 = v7;
  if (v6 == v9) {
    [v7 removeObjectForKey:v5];
  }
  else {
    [v7 setObject:v9 forKey:v5];
  }
}

void sub_1000B728C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    goto LABEL_49;
  }
  id v7 = [v5 version];

  if (!v7)
  {
    long long v18 = sub_1000B8184();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "Manifest version is nil", buf, 2u);
    }

    long long v19 = +[NSError errorWithDomain:@"com.apple.Maps.ReportAProblem.Downloader" code:-5 userInfo:0];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();

    goto LABEL_49;
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 72));
  if (!WeakRetained) {
    goto LABEL_48;
  }
  id v9 = *(void **)(*(void *)(a1 + 32) + 8);
  uint64_t v10 = [v6 version];
  uint64_t v62 = [v9 directoryForNewWebBundleName:v10];

  uint64_t v11 = sub_1000B8184();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v12 = [v6 version];
    *(_DWORD *)buf = 138412290;
    *(void *)uint64_t v82 = v12;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Version Downloading: %@", buf, 0xCu);
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a2);
  id v13 = *(void **)(a1 + 32);
  id v79 = 0;
  Swift::String v14 = [v13 loadWebBundleManifestWithError:&v79];
  id v15 = v79;
  long long v16 = sub_1000B8184();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
  {
    long long v17 = [v14 version];
    *(_DWORD *)buf = 138412290;
    *(void *)uint64_t v82 = v17;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Version Installed: %@", buf, 0xCu);
  }
  if (v15)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    goto LABEL_47;
  }
  id v63 = WeakRetained;
  uint64_t v56 = 0;
  id v58 = objc_alloc_init((Class)NSMutableSet);
  id v57 = objc_alloc_init((Class)NSMutableSet);
  long long v75 = 0u;
  long long v76 = 0u;
  long long v77 = 0u;
  long long v78 = 0u;
  id obj = [v6 files];
  id v20 = [obj countByEnumeratingWithState:&v75 objects:v83 count:16];
  if (!v20) {
    goto LABEL_34;
  }
  id v21 = v20;
  uint64_t v22 = *(void *)v76;
  do
  {
    objc_super v23 = 0;
    id v59 = v21;
    do
    {
      uint64_t v24 = v14;
      unint64_t v25 = v6;
      if (*(void *)v76 != v22) {
        objc_enumerationMutation(obj);
      }
      uint64_t v26 = *(void **)(*((void *)&v75 + 1) + 8 * (void)v23);
      uint64_t v27 = [v63[1] webBundleDirectory:v56];
      uint64_t v28 = [v26 filePath];
      uint64_t v29 = [v27 URLByAppendingPathComponent:v28];

      double v66 = (void *)v29;
      uint64_t v30 = [*(id *)(a1 + 32) _fileHashForFile:v29];
      id v64 = v26;
      id v31 = [v26 fileHash];
      unsigned __int8 v32 = [v30 isEqualToString:v31];

      id v6 = v25;
      uint64_t v33 = [v25 version];
      Swift::String v14 = v24;
      double v34 = [v24 version];
      if (![v33 isEqualToString:v34])
      {

        if (v32)
        {
LABEL_24:
          uint64_t v38 = sub_1000B8184();
          if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
          {
            unint64_t v39 = v64;
            unint64_t v40 = [v64 filePath];
            *(_DWORD *)buf = 138412290;
            *(void *)uint64_t v82 = v40;
            _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "Queue file to move: %@", buf, 0xCu);

            double v41 = v57;
LABEL_31:

            [v41 addObject:v39];
            goto LABEL_32;
          }
          double v41 = v57;
        }
        else
        {
LABEL_26:
          uint64_t v38 = sub_1000B8184();
          if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
          {
            unint64_t v39 = v64;
            uint64_t v42 = [v64 filePath];
            *(_DWORD *)buf = 138412290;
            *(void *)uint64_t v82 = v42;
            _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "Queue file to download: %@", buf, 0xCu);

            double v41 = v58;
            goto LABEL_31;
          }
          double v41 = v58;
        }
        unint64_t v39 = v64;
        goto LABEL_31;
      }
      os_log_type_t v35 = [v63[1] webBundleDirectory];
      [v63[1] absoluteCachedWebBundleDirectory];
      v37 = uint64_t v36 = v6;
      unsigned int v61 = [v35 isEqual:v37];

      id v6 = v36;
      id v21 = v59;

      if ((v32 & 1) == 0) {
        goto LABEL_26;
      }
      if (v61) {
        goto LABEL_24;
      }
LABEL_32:

      objc_super v23 = (char *)v23 + 1;
    }
    while (v21 != v23);
    id v21 = [obj countByEnumeratingWithState:&v75 objects:v83 count:16];
  }
  while (v21);
LABEL_34:

  uint64_t v43 = sub_1000B8184();
  char v44 = v57;
  if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
  {
    unsigned int v45 = [v58 count];
    unsigned int v46 = [v57 count];
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)uint64_t v82 = v45;
    *(_WORD *)&v82[4] = 1024;
    *(_DWORD *)&v82[6] = v46;
    _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_INFO, "Files to download: %d, files to move: %d", buf, 0xEu);
  }

  id WeakRetained = v63;
  if ([v57 count] || objc_msgSend(v58, "count"))
  {
    double v67 = v6;
    Swift::Int v47 = [*(id *)(*(void *)(a1 + 32) + 8) webBundleDirectory];
    id v48 = +[WebBundleFileHelper copyToDirectory:v62 fromDirectory:v47 files:v57];
    [v58 addObjectsFromArray:v48];

    long long v73 = 0u;
    long long v74 = 0u;
    long long v71 = 0u;
    long long v72 = 0u;
    id v49 = v58;
    id v50 = [v49 countByEnumeratingWithState:&v71 objects:v80 count:16];
    if (v50)
    {
      id v51 = v50;
      uint64_t v52 = *(void *)v72;
      do
      {
        for (uint64_t i = 0; i != v51; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v72 != v52) {
            objc_enumerationMutation(v49);
          }
          uint64_t v54 = *(void **)(*((void *)&v71 + 1) + 8 * i);
          dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
          uint64_t v55 = [v54 filePath];
          v68[0] = _NSConcreteStackBlock;
          v68[1] = 3221225472;
          v68[2] = sub_100CFD86C;
          v68[3] = &unk_1012F1570;
          id v70 = *(id *)(a1 + 48);
          id v69 = *(id *)(a1 + 40);
          [v63 _downloadWebBundleFileWithPath:v55 inDirectory:v62 withCompletion:v68];
        }
        id v51 = [v49 countByEnumeratingWithState:&v71 objects:v80 count:16];
      }
      while (v51);
    }

    id v6 = v67;
    char v44 = v57;
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

  id v15 = v56;
LABEL_47:

LABEL_48:
LABEL_49:
}

void sub_1000B7D7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) _loadCachedWebBundleVersion];
  id v5 = sub_1000B8184();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    id v6 = [v3 version];
    id v7 = [*(id *)(a1 + 40) version];
    *(_DWORD *)buf = 138413058;
    id v32 = v3;
    __int16 v33 = 2112;
    double v34 = v6;
    __int16 v35 = 2112;
    uint64_t v36 = v4;
    __int16 v37 = 2112;
    uint64_t v38 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "buildInManifest: %@, builtInVersion: %@, cachedVersion: %@, downloadedManifest Version:%@", buf, 0x2Au);
  }
  unint64_t v8 = *(void **)(a1 + 40);
  if (!v8) {
    goto LABEL_9;
  }
  id v9 = *(void **)(a1 + 32);
  uint64_t v10 = [v8 version];
  LODWORD(v9) = [v9 _isVersion:v10 newerThan:v4];

  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v11 = *(void **)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  id v30 = 0;
  [v11 _updateCachedBundleFromDownloadedBundleDirectoryWithManifest:v12 error:&v30];
  id v13 = v30;
  Swift::String v14 = sub_1000B8184();
  id v15 = v14;
  if (v13)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v32 = v13;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Fail to update cached bundle from downloaded bundle, error: %@", buf, 0xCu);
    }

LABEL_9:
    if (v3)
    {
      long long v16 = *(void **)(a1 + 32);
      long long v17 = [v3 version];
      LODWORD(v16) = [v16 _isVersion:v17 newerThan:v4];

      if (v16)
      {
        long long v18 = sub_1000B8184();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
        {
          long long v19 = [v3 version];
          *(_DWORD *)buf = 138412290;
          id v32 = v19;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Updating cached bundle from built-in directory, version: %@", buf, 0xCu);
        }
        id v20 = *(void **)(a1 + 32);
        id v29 = 0;
        [v20 _updateCachedBundleFromBuiltInDirectoryWithManifest:v3 error:&v29];
        id v21 = v29;
        uint64_t v22 = sub_1000B8184();
        objc_super v23 = v22;
        if (v21)
        {
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            id v32 = v21;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "Fail to update cached bundle from built-in directory: %@", buf, 0xCu);
          }
        }
        else
        {
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            uint64_t v27 = [v3 version];
            *(_DWORD *)buf = 138412290;
            id v32 = v27;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Successfully update cached bundle from built-in directory, version: %@", buf, 0xCu);
          }
          uint64_t v28 = *(void **)(a1 + 32);
          objc_super v23 = [v3 version];
          [v28 _updateCachedWebBundleVersion:v23];
        }
      }
    }
    uint64_t v26 = sub_1000B8184();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Finish Updating Web Bundle", buf, 2u);
    }
    goto LABEL_25;
  }
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    uint64_t v24 = [*(id *)(a1 + 40) version];
    *(_DWORD *)buf = 138412290;
    id v32 = v24;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Successfully update cached bundle from downloaded bundle, version: %@", buf, 0xCu);
  }
  unint64_t v25 = *(void **)(a1 + 32);
  uint64_t v26 = [*(id *)(a1 + 40) version];
  [v25 _updateCachedWebBundleVersion:v26];
LABEL_25:
}

id sub_1000B8184()
{
  if (qword_101612178 != -1) {
    dispatch_once(&qword_101612178, &stru_1012EFB58);
  }
  unsigned __int16 v0 = (void *)qword_101612170;

  return v0;
}

id sub_1000B944C()
{
  if (qword_101611EB8 != -1) {
    dispatch_once(&qword_101611EB8, &stru_1012EF5D8);
  }
  unsigned __int16 v0 = (void *)qword_101611EB0;

  return v0;
}

id sub_1000BAA48()
{
  if (qword_101610B88 != -1) {
    dispatch_once(&qword_101610B88, &stru_10131C040);
  }
  unsigned __int16 v0 = (void *)qword_101610B80;

  return v0;
}

void sub_1000BB2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
}

uint64_t sub_1000BB328(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v8 = v3;
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)
    || ([v3 methodSignatureForSelector:*(void *)(a1 + 48)],
        uint64_t v4 = objc_claimAutoreleasedReturnValue(),
        uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8),
        id v6 = *(void **)(v5 + 40),
        *(void *)(v5 + 40) = v4,
        v6,
        *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)))
  {
    if (objc_opt_respondsToSelector()) {
      [*(id *)(a1 + 32) addObject:v8];
    }
  }

  return _objc_release_x3();
}

double sub_1000BBAF8()
{
  unsigned __int16 v0 = +[UIDevice currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  double result = 10.0;
  if (v1 == (id)5) {
    return 13.0;
  }
  return result;
}

uint64_t sub_1000BBB44(void *a1)
{
  if (!a1) {
    return -1;
  }
  id v1 = [a1 traitCollection];
  id v2 = [v1 userInterfaceIdiom];

  return (uint64_t)v2;
}

id sub_1000BBF90(uint64_t a1, Protocol *a2)
{
  uint64_t v3 = objc_opt_class();
  if (!v3) {
    return 0;
  }
  uint64_t v4 = (void *)v3;
  if (qword_1016100A0 != -1)
  {
    dispatch_once(&qword_1016100A0, &stru_101302C18);
    if (a2) {
      goto LABEL_4;
    }
    return 0;
  }
  if (!a2) {
    return 0;
  }
LABEL_4:
  unsigned int v5 = atomic_load((unsigned int *)dword_1015EE220);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_101610090);
  id v6 = [(id)qword_101610098 objectForKey:v4];
  if (!v6)
  {
    id v6 = +[NSMapTable mapTableWithKeyOptions:256 valueOptions:0];
    [(id)qword_101610098 setObject:v6 forKey:v4];
  }
  unsigned int v7 = [[v6 objectForKey:a2] unsignedIntegerValue];
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_101610090);
  if (v5 == v7 >> 1) {
    return (id)(v7 & 1);
  }
  id v8 = [v4 conformsToProtocol:a2];
  if (qword_1016100B0 != -1) {
    dispatch_once(&qword_1016100B0, &stru_101302C38);
  }
  id v9 = (void *)qword_1016100A8;
  if (os_log_type_enabled((os_log_t)qword_1016100A8, OS_LOG_TYPE_INFO))
  {
    uint64_t v10 = v9;
    uint64_t v11 = NSStringFromClass((Class)v4);
    if (v8) {
      uint64_t v12 = "conforms to";
    }
    else {
      uint64_t v12 = "does not conform to";
    }
    id v13 = NSStringFromProtocol(a2);
    int v16 = 138544130;
    long long v17 = v11;
    __int16 v18 = 2080;
    long long v19 = v12;
    __int16 v20 = 2114;
    id v21 = v13;
    __int16 v22 = 1024;
    unsigned int v23 = v5;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%{public}@ %s %{public}@ (gen: %u)", (uint8_t *)&v16, 0x26u);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&unk_101610090);
  Swift::String v14 = +[NSNumber numberWithUnsignedInt:v8 | (2 * v5)];
  [v6 setObject:v14 forKey:a2];

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_101610090);
  return v8;
}

void sub_1000BD4E4(uint64_t a1)
{
  id v2 = sub_1000BD86C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v24) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "ContainerStyleManager containerStyleManagerWillChangeStyle", (uint8_t *)&v24, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
  [WeakRetained containerStyleManagerWillChangeStyle:*(void *)(*(void *)(a1 + 32) + 56)];

  uint64_t v4 = sub_1000BD86C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v24) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "ContainerStyleManager configureStyleLayout", (uint8_t *)&v24, 2u);
  }

  [*(id *)(a1 + 32) configureStyleLayout];
  unsigned int v5 = sub_1000BD86C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v24) = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "ContainerStyleManager containerStyleManagerConfigureLayoutForStyle", (uint8_t *)&v24, 2u);
  }

  id v6 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
  [v6 containerStyleManagerConfigureLayoutForStyle:*(void *)(*(void *)(a1 + 32) + 56)];

  unsigned int v7 = sub_1000BD86C();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v24) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "ContainerStyleManager layoutForStyle", (uint8_t *)&v24, 2u);
  }

  id v8 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
  id v9 = [v8 currentViewController];

  id v10 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
  uint64_t v11 = (uint64_t)[v10 layoutForCurrentViewControllerWithStyle:*(void *)(*(void *)(a1 + 32) + 56)];

  if (!v11)
  {
    id v12 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
    id v13 = [v12 originalLayoutForViewController:v9];

    Swift::String v14 = [v9 cardPresentationController];
    unsigned int v15 = [v14 presentedModally];

    if (v15) {
      uint64_t v11 = 5;
    }
    else {
      uint64_t v11 = (uint64_t)v13;
    }
  }
  int v16 = [v9 cardPresentationController];
  unsigned __int8 v17 = [v16 usingSheetPresentation];

  if ((v17 & 1) == 0)
  {
    __int16 v18 = sub_1000BD86C();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v24) = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "ContainerStyleManager wantsLayout", (uint8_t *)&v24, 2u);
    }

    long long v19 = [v9 cardPresentationController];
    [v19 wantsLayout:v11];
  }
  __int16 v20 = sub_1000BD86C();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v24) = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "ContainerStyleManager containerStyleManagerDidChangeStyle", (uint8_t *)&v24, 2u);
  }

  id v21 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
  [v21 containerStyleManagerDidChangeStyle:*(void *)(*(void *)(a1 + 32) + 56)];

  __int16 v22 = sub_1000BD86C();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v23 = *(void *)(a1 + 40);
    int v24 = 134217984;
    uint64_t v25 = v23;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "ContainerStyleManager configureStyleLayout %lu end", (uint8_t *)&v24, 0xCu);
  }
}

id sub_1000BD86C()
{
  if (qword_101611F78 != -1) {
    dispatch_once(&qword_101611F78, &stru_1012EF758);
  }
  unsigned __int16 v0 = (void *)qword_101611F70;

  return v0;
}

void sub_1000BE230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000BF6B8()
{
  if (qword_101611EC8 != -1) {
    dispatch_once(&qword_101611EC8, &stru_1012EF5F8);
  }
  unsigned __int16 v0 = (void *)qword_101611EC0;

  return v0;
}

void sub_1000BFF08(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 92) = 0;
  [*(id *)(a1 + 32) setContaineesHidden:[*(id *)(a1 + 32) shouldHideCard]];
  if (([*(id *)(*(void *)(a1 + 32) + 32) containerReadyToInsert] & 1) == 0)
  {
    [*(id *)(*(void *)(a1 + 32) + 32) setContainerReadyToInsert:1];
    if ([*(id *)(*(void *)(a1 + 32) + 32) dequeueWaitingContainees])
    {
      id v2 = [*(id *)(a1 + 32) currentViewController];
      [v2 didBecomeCurrent];
    }
  }
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"ContainerDidUnlockNotification" object:*(void *)(a1 + 32)];
}

id sub_1000C1318(uint64_t a1)
{
  id v2 = sub_1000C3008();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v7 = 134349056;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] child animation completion group notify block running", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = 0;

  return [*(id *)(a1 + 32) _childAnimationsDidComplete];
}

id sub_1000C14F8(uint64_t a1)
{
  [*(id *)(a1 + 32) prepare];
  [*(id *)(a1 + 32) animate];
  id v2 = *(void **)(a1 + 32);

  return [v2 complete:1];
}

void sub_1000C1974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
}

void sub_1000C2000(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (+[ChromeComponentUpdateInfo supportsCallstackSymbols])
  {
    int v7 = sub_100099700(v6, &stru_10131B080);
    uint64_t v8 = sub_1000C2498();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
LABEL_20:

      goto LABEL_23;
    }
    id v9 = *(id *)(a1 + 32);
    if (!v9)
    {
      Swift::String v14 = @"<nil>";
      goto LABEL_19;
    }
    id v10 = (objc_class *)objc_opt_class();
    uint64_t v11 = NSStringFromClass(v10);
    if (objc_opt_respondsToSelector())
    {
      id v12 = [v9 performSelector:"accessibilityIdentifier"];
      id v13 = v12;
      if (v12 && ![v12 isEqualToString:v11])
      {
        Swift::String v14 = +[NSString stringWithFormat:@"%@<%p, %@>", v11, v9, v13];

        goto LABEL_9;
      }
    }
    Swift::String v14 = +[NSString stringWithFormat:@"%@<%p>", v11, v9];
LABEL_9:

LABEL_19:
    *(_DWORD *)buf = 138543874;
    unint64_t v40 = v14;
    __int16 v41 = 2112;
    id v42 = v5;
    __int16 v43 = 2112;
    char v44 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "[%{public}@] Updating \"%@\":\n%@", buf, 0x20u);

    goto LABEL_20;
  }
  int v7 = sub_1000C2498();
  if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_23;
  }
  id v15 = *(id *)(a1 + 32);
  if (!v15)
  {
    __int16 v20 = @"<nil>";
    goto LABEL_22;
  }
  int v16 = (objc_class *)objc_opt_class();
  unsigned __int8 v17 = NSStringFromClass(v16);
  if (objc_opt_respondsToSelector())
  {
    __int16 v18 = [v15 performSelector:"accessibilityIdentifier"];
    long long v19 = v18;
    if (v18 && ![v18 isEqualToString:v17])
    {
      __int16 v20 = +[NSString stringWithFormat:@"%@<%p, %@>", v17, v15, v19];

      goto LABEL_17;
    }
  }
  __int16 v20 = +[NSString stringWithFormat:@"%@<%p>", v17, v15];
LABEL_17:

LABEL_22:
  *(_DWORD *)buf = 138543618;
  unint64_t v40 = v20;
  __int16 v41 = 2112;
  id v42 = v5;
  _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "[%{public}@] Updating \"%@\"", buf, 0x16u);

LABEL_23:
  [*(id *)(a1 + 32) updateComponent:v5 forTiming:*(void *)(a1 + 48) withAnimation:*(void *)(a1 + 40)];
  if ([v6 count])
  {
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    id v21 = v6;
    id v22 = [v21 countByEnumeratingWithState:&v34 objects:v38 count:16];
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = *(void *)v35;
      do
      {
        for (uint64_t i = 0; i != v23; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v35 != v24) {
            objc_enumerationMutation(v21);
          }
          uint64_t v26 = *(void **)(*((void *)&v34 + 1) + 8 * i);
          uint64_t v27 = [v26 completionHandler];

          if (v27)
          {
            uint64_t v28 = *(void **)(a1 + 40);
            id v29 = [v26 completionHandler];
            [v28 addCompletion:v29];
          }
        }
        id v23 = [v21 countByEnumeratingWithState:&v34 objects:v38 count:16];
      }
      while (v23);
    }
  }
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  id v32[2] = sub_1000C3304;
  v32[3] = &unk_1012E6160;
  id v30 = *(void **)(a1 + 40);
  v32[4] = *(void *)(a1 + 32);
  id v33 = v5;
  id v31 = v5;
  [v30 addCompletion:v32];
}

id sub_1000C2498()
{
  if (qword_101610AA0 != -1) {
    dispatch_once(&qword_101610AA0, &stru_10131B188);
  }
  unsigned __int16 v0 = (void *)qword_101610A98;

  return v0;
}

id sub_1000C3008()
{
  if (qword_101610A90 != -1) {
    dispatch_once(&qword_101610A90, &stru_10131AE00);
  }
  unsigned __int16 v0 = (void *)qword_101610A88;

  return v0;
}

id sub_1000C3304(uint64_t a1)
{
  id v2 = sub_1000C49B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      uint64_t v8 = @"<nil>";
      goto LABEL_10;
    }
    uint64_t v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      int v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        uint64_t v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    uint64_t v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    __int16 v20 = v8;
    __int16 v21 = 2112;
    id v22 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[%{public}@] Finished updating %@", buf, 0x16u);
  }
  [*(id *)(*(void *)(a1 + 32) + 104) removeObject:*(void *)(a1 + 40)];
  id result = [*(id *)(*(void *)(a1 + 32) + 96) count];
  if (!result) {
    return result;
  }
  uint64_t v11 = sub_1000C49B4();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    id v12 = *(id *)(a1 + 32);
    if (!v12)
    {
      unsigned __int8 v17 = @"<nil>";
      goto LABEL_21;
    }
    id v13 = (objc_class *)objc_opt_class();
    Swift::String v14 = NSStringFromClass(v13);
    if (objc_opt_respondsToSelector())
    {
      id v15 = [v12 performSelector:"accessibilityIdentifier"];
      int v16 = v15;
      if (v15 && ![v15 isEqualToString:v14])
      {
        unsigned __int8 v17 = +[NSString stringWithFormat:@"%@<%p, %@>", v14, v12, v16];

        goto LABEL_19;
      }
    }
    unsigned __int8 v17 = +[NSString stringWithFormat:@"%@<%p>", v14, v12];
LABEL_19:

LABEL_21:
    __int16 v18 = [*(id *)(*(void *)(a1 + 32) + 96) allKeys];
    *(_DWORD *)buf = 138543618;
    __int16 v20 = v17;
    __int16 v21 = 2112;
    id v22 = v18;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "[%{public}@] Still waiting to update: %@", buf, 0x16u);
  }
  return [*(id *)(a1 + 32) updateComponentsIfNeeded];
}

void sub_1000C3AF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _leaveCompletionWaitDispatchGroupWithReason:*(void *)(a1 + 32)];
}

id sub_1000C49B4()
{
  if (qword_101611F38 != -1) {
    dispatch_once(&qword_101611F38, &stru_1012EF6D8);
  }
  unsigned __int16 v0 = (void *)qword_101611F30;

  return v0;
}

void sub_1000C4A30(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v9 + 1) + 8 * (void)v6) + 16))(*(void *)(*((void *)&v9 + 1) + 8 * (void)v6));
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }

  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = 0;
}

void sub_1000C5C88(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 240), 8);
  _Unwind_Resume(a1);
}

BOOL sub_1000C5CB8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  unsigned int v6 = [a2 isActive];
  int v7 = *(unsigned __int8 *)(a1 + 32);
  if (v7 == v6) {
    *a4 = 1;
  }
  return v7 == v6;
}

void sub_1000C6C78(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) floatingControlsOverlay];
  [v2 setHidden:*(void *)(a1 + 40) == 0 animated:*(unsigned __int8 *)(a1 + 48)];
}

id sub_1000C6CD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNeedsStatusBarAppearanceUpdate];
}

id sub_1000C6CE0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 712) setStyle:*(void *)(a1 + 40)];
}

void sub_1000C6CF4(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) _canShowLookAroundButton];
  id v11 = [*(id *)(a1 + 32) _lookAroundButtonPlaceCardItem];
  id v3 = [*(id *)(a1 + 32) lookAroundOverlay];
  unsigned int v4 = [v3 isHidden];

  uint64_t v5 = v2 ^ 1;
  if ((v5 & 1) == 0 && v4)
  {
    unsigned int v6 = [v11 mapItem];
    if (v6)
    {
      int v7 = [v11 mapItem];
      uint64_t v5 = +[LookAroundButtonContainerViewController isIncompleteMapItem:v7];
    }
    else
    {
      uint64_t v5 = 0;
    }
  }
  uint64_t v8 = [*(id *)(a1 + 32) lookAroundOverlay];
  long long v9 = [v11 mapItem];
  [v8 showLookAroundPreviewForMapItem:v9 isMarkedLocation:[v11 isDroppedPin] willChangeHidden:v4 ^ v5 animated:*(unsigned __int8 *)(a1 + 40)];

  long long v10 = [*(id *)(a1 + 32) lookAroundOverlay];
  [v10 setHidden:v5 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000C6E4C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) coordinator];
  unsigned int v2 = [v5 containerViewController];
  id v3 = [v2 containerStyle];
  unsigned int v4 = [*(id *)(a1 + 32) lookAroundOverlay];
  [v4 setContainerStyle:v3];
}

void sub_1000C6ED4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) mapView];
  [v2 _setShowsNightMode:v1];
}

id sub_1000C6F28(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100060304;
  v4[3] = &unk_10131B018;
  void v4[4] = *(void *)(a1 + 32);
  long long v1 = *(_OWORD *)(a1 + 56);
  long long v5 = *(_OWORD *)(a1 + 40);
  long long v6 = v1;
  long long v2 = *(_OWORD *)(a1 + 88);
  long long v7 = *(_OWORD *)(a1 + 72);
  long long v8 = v2;
  return +[UIView performWithoutAnimation:v4];
}

void sub_1000C6FBC(uint64_t a1)
{
  long long v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"ChromeViewControllerDidUpdateMapInsetsNotification" object:*(void *)(a1 + 32)];

  id v3 = [*(id *)(a1 + 32) topContext];
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) topContext];
    [v5 mapInsetsDidChangeAnimated:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_1000C707C(uint64_t a1)
{
  v109[0] = 0;
  v109[1] = v109;
  v109[2] = 0x3032000000;
  v109[3] = sub_100104430;
  v109[4] = sub_100104A88;
  id v110 = 0;
  v108[0] = _NSConcreteStackBlock;
  v108[1] = 3221225472;
  v108[2] = sub_100BED26C;
  v108[3] = &unk_10131B040;
  long long v1 = (id *)(a1 + 32);
  v108[4] = *(void *)(a1 + 32);
  v108[5] = v109;
  unint64_t v96 = objc_retainBlock(v108);
  if (![*v1 isRunningNavigationDisplay])
  {
    id v99 = 0;
    unsigned int v94 = 0;
    goto LABEL_17;
  }
  long long v2 = ((void (*)(void))v96[2])();
  id v3 = [*(id *)(a1 + 32) navigationDisplay];
  unsigned int v94 = [v3 updateRouteAnnotationsConfiguration:v2];

  if (v94)
  {
    char v4 = sub_1000C49B4();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
LABEL_15:

      id v99 = v2;
      goto LABEL_16;
    }
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      long long v10 = @"<nil>";
      goto LABEL_14;
    }
    long long v6 = (objc_class *)objc_opt_class();
    long long v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      long long v8 = [v5 performSelector:"accessibilityIdentifier"];
      long long v9 = v8;
      if (v8 && ([v8 isEqualToString:v7] & 1) == 0)
      {
        long long v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_10;
      }
    }
    long long v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_10:

LABEL_14:
    *(_DWORD *)buf = 138543362;
    BOOL v112 = v10;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] - navigation display is providing route annotations", buf, 0xCu);

    goto LABEL_15;
  }
  id v99 = 0;
LABEL_16:

LABEL_17:
  id v11 = [*(id *)(a1 + 32) pendingContexts];
  long long v12 = v11;
  if (v11)
  {
    id v93 = v11;
  }
  else
  {
    id v93 = [*(id *)(a1 + 32) contexts];
  }

  long long v106 = 0u;
  long long v107 = 0u;
  long long v104 = 0u;
  long long v105 = 0u;
  id v13 = [v93 reverseObjectEnumerator];
  id obj = [v13 allObjects];

  id v14 = [obj countByEnumeratingWithState:&v104 objects:v122 count:16];
  if (v14)
  {
    uint64_t v98 = *(void *)v105;
LABEL_22:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(void *)v105 != v98) {
        objc_enumerationMutation(obj);
      }
      int v16 = *(void **)(*((void *)&v104 + 1) + 8 * v15);
      if ((objc_opt_respondsToSelector() & 1) == 0
        || ([v16 routeAnnotationsProvider], (id v17 = (id)objc_claimAutoreleasedReturnValue()) == 0))
      {
        id v18 = v16;
        if (objc_opt_respondsToSelector() & 1) != 0 || (objc_opt_respondsToSelector()) {
          id v17 = v18;
        }
        else {
          id v17 = 0;
        }
      }
      if (objc_opt_respondsToSelector())
      {
        long long v19 = ((void (*)(void))v96[2])();
        if ([v17 updateRouteAnnotationsConfiguration:v19])
        {
          id v23 = sub_1000C49B4();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
          {
            id v24 = *(id *)(a1 + 32);
            if (v24)
            {
              uint64_t v25 = (objc_class *)objc_opt_class();
              uint64_t v26 = NSStringFromClass(v25);
              if ((objc_opt_respondsToSelector() & 1) == 0) {
                goto LABEL_49;
              }
              uint64_t v27 = [v24 performSelector:"accessibilityIdentifier"];
              uint64_t v28 = v27;
              if (v27 && ([v27 isEqualToString:v26] & 1) == 0)
              {
                id v29 = +[NSString stringWithFormat:@"%@<%p, %@>", v26, v24, v28];
              }
              else
              {

LABEL_49:
                id v29 = +[NSString stringWithFormat:@"%@<%p>", v26, v24];
              }
            }
            else
            {
              id v29 = @"<nil>";
            }

            *(_DWORD *)buf = 138543618;
            BOOL v112 = v29;
            __int16 v113 = 2114;
            CFStringRef v114 = @"<nil>";
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "[%{public}@] - %{public}@ is updating the route annotation configuration", buf, 0x16u);
          }
          id v38 = v17;
          id v20 = [v19 copy];

          int v22 = 1;
          goto LABEL_94;
        }
      }
      if (objc_opt_respondsToSelector())
      {
        id v20 = [v17 routeAnnotationsConfiguration];

        if (v20)
        {
          id v30 = v17;
          if ([*(id *)(a1 + 32) isRunningNavigationDisplay])
          {
            id v31 = sub_1000C49B4();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
            {
              id v32 = *(id *)(a1 + 32);
              if (v32)
              {
                id v33 = (objc_class *)objc_opt_class();
                long long v34 = NSStringFromClass(v33);
                if ((objc_opt_respondsToSelector() & 1) == 0) {
                  goto LABEL_58;
                }
                long long v35 = [v32 performSelector:"accessibilityIdentifier"];
                long long v36 = v35;
                if (v35 && ([v35 isEqualToString:v34] & 1) == 0)
                {
                  long long v37 = +[NSString stringWithFormat:@"%@<%p, %@>", v34, v32, v36];
                }
                else
                {

LABEL_58:
                  long long v37 = +[NSString stringWithFormat:@"%@<%p>", v34, v32];
                }
              }
              else
              {
                long long v37 = @"<nil>";
              }

              unint64_t v39 = v37;
              id v40 = v30;
              if (v40)
              {
                __int16 v41 = (objc_class *)objc_opt_class();
                id v42 = NSStringFromClass(v41);
                if ((objc_opt_respondsToSelector() & 1) == 0) {
                  goto LABEL_70;
                }
                __int16 v43 = [v40 performSelector:"accessibilityIdentifier"];
                char v44 = v43;
                if (v43 && ([v43 isEqualToString:v42] & 1) == 0)
                {
                  unsigned int v45 = +[NSString stringWithFormat:@"%@<%p, %@>", v42, v40, v44];
                }
                else
                {

LABEL_70:
                  unsigned int v45 = +[NSString stringWithFormat:@"%@<%p>", v42, v40];
                }
              }
              else
              {
                unsigned int v45 = @"<nil>";
              }

              *(_DWORD *)buf = 138543618;
              BOOL v112 = v39;
              __int16 v113 = 2114;
              CFStringRef v114 = v45;
              _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "[%{public}@] Context %{public}@ is overriding the route annotations configuration prepared by navigation display", buf, 0x16u);
            }
          }
          long long v19 = sub_1000C49B4();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
          {
            id v46 = *(id *)(a1 + 32);
            if (v46)
            {
              Swift::Int v47 = (objc_class *)objc_opt_class();
              id v48 = NSStringFromClass(v47);
              if ((objc_opt_respondsToSelector() & 1) == 0) {
                goto LABEL_81;
              }
              id v49 = [v46 performSelector:"accessibilityIdentifier"];
              id v50 = v49;
              if (v49 && ([v49 isEqualToString:v48] & 1) == 0)
              {
                id v51 = +[NSString stringWithFormat:@"%@<%p, %@>", v48, v46, v50];
              }
              else
              {

LABEL_81:
                id v51 = +[NSString stringWithFormat:@"%@<%p>", v48, v46];
              }
            }
            else
            {
              id v51 = @"<nil>";
            }

            uint64_t v52 = v51;
            id v53 = v30;
            if (v53)
            {
              uint64_t v54 = (objc_class *)objc_opt_class();
              uint64_t v55 = NSStringFromClass(v54);
              if ((objc_opt_respondsToSelector() & 1) == 0) {
                goto LABEL_89;
              }
              uint64_t v56 = [v53 performSelector:"accessibilityIdentifier"];
              id v57 = v56;
              if (v56 && ([v56 isEqualToString:v55] & 1) == 0)
              {
                id v58 = +[NSString stringWithFormat:@"%@<%p, %@>", v55, v53, v57];
              }
              else
              {

LABEL_89:
                id v58 = +[NSString stringWithFormat:@"%@<%p>", v55, v53];
              }
            }
            else
            {
              id v58 = @"<nil>";
            }

            *(_DWORD *)buf = 138543618;
            BOOL v112 = v52;
            __int16 v113 = 2114;
            CFStringRef v114 = v58;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "[%{public}@] - %{public}@ is providing a route annotation configuration", buf, 0x16u);
          }
          int v22 = v94;
LABEL_94:

          LODWORD(v14) = 0;
          id v99 = v20;
          __int16 v21 = v17;
          goto LABEL_95;
        }
        id v99 = 0;
      }
      if ((objc_opt_respondsToSelector() & 1) != 0
        && ([v16 wantsRouteAnnotationsControl] & 1) != 0)
      {
        __int16 v21 = 0;
        LODWORD(v14) = 1;
        int v22 = v94;
LABEL_95:

        goto LABEL_96;
      }

      if (v14 == (id)++v15)
      {
        id v14 = [obj countByEnumeratingWithState:&v104 objects:v122 count:16];
        if (v14) {
          goto LABEL_22;
        }
        break;
      }
    }
  }
  __int16 v21 = 0;
  int v22 = v94;
LABEL_96:

  id v59 = [*(id *)(a1 + 32) routeAnnotationsController];
  uint64_t v60 = [v59 configuration];
  unsigned int v61 = [v60 routes];
  uint64_t v62 = [v99 routes];
  unint64_t v63 = v61;
  unint64_t v64 = v62;
  if (v63 | v64)
  {
    double v65 = (void *)v64;
    unsigned __int8 v66 = [(id)v63 isEqual:v64];

    if (v66) {
      goto LABEL_107;
    }
    double v67 = [*(id *)(a1 + 32) searchPinsManager];
    id v59 = [v67 routeStartEndItemSource];

    uint64_t v60 = [*(id *)(a1 + 32) personalizedItemManager];
    int v68 = v22;
    long long v102 = 0u;
    long long v103 = 0u;
    long long v100 = 0u;
    long long v101 = 0u;
    id v69 = [v99 routes];
    id v70 = [v69 countByEnumeratingWithState:&v100 objects:v121 count:16];
    if (v70)
    {
      uint64_t v71 = *(void *)v101;
      do
      {
        for (uint64_t i = 0; i != v70; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v101 != v71) {
            objc_enumerationMutation(v69);
          }
          [*(id *)(*((void *)&v100 + 1) + 8 * i) updateWaypointStyleAttributesWithItemSource:v59 personalizedItemManager:v60];
        }
        id v70 = [v69 countByEnumeratingWithState:&v100 objects:v121 count:16];
      }
      while (v70);
    }

    int v22 = v68;
  }

LABEL_107:
  long long v73 = sub_1000C49B4();
  if (!os_log_type_enabled(v73, OS_LOG_TYPE_INFO)) {
    goto LABEL_134;
  }
  id v74 = *(id *)(a1 + 32);
  if (v74)
  {
    long long v75 = (objc_class *)objc_opt_class();
    long long v76 = NSStringFromClass(v75);
    if (objc_opt_respondsToSelector())
    {
      long long v77 = [v74 performSelector:"accessibilityIdentifier"];
      long long v78 = v77;
      if (v77 && ([v77 isEqualToString:v76] & 1) == 0)
      {
        id v79 = +[NSString stringWithFormat:@"%@<%p, %@>", v76, v74, v78];

        goto LABEL_114;
      }
    }
    id v79 = +[NSString stringWithFormat:@"%@<%p>", v76, v74];
LABEL_114:

    goto LABEL_116;
  }
  id v79 = @"<nil>";
LABEL_116:

  unint64_t v80 = v79;
  if (v22) {
    unint64_t v81 = "Updating";
  }
  else {
    unint64_t v81 = "Replacing";
  }
  uint64_t v82 = v21;
  if (v94)
  {
    uint64_t v82 = [*(id *)(a1 + 32) navigationDisplay];
  }
  id v83 = v82;
  if (!v83)
  {
    char v88 = @"<nil>";
    goto LABEL_129;
  }
  unint64_t v84 = (objc_class *)objc_opt_class();
  uint64_t v85 = NSStringFromClass(v84);
  if (objc_opt_respondsToSelector())
  {
    uint64_t v86 = [v83 performSelector:"accessibilityIdentifier"];
    uint64_t v87 = v86;
    if (v86 && ([v86 isEqualToString:v85] & 1) == 0)
    {
      char v88 = +[NSString stringWithFormat:@"%@<%p, %@>", v85, v83, v87];

      goto LABEL_127;
    }
  }
  char v88 = +[NSString stringWithFormat:@"%@<%p>", v85, v83];
LABEL_127:

LABEL_129:
  __int16 v113 = 2080;
  v89 = @"NO";
  *(_DWORD *)buf = 138544386;
  BOOL v112 = v80;
  if (v14) {
    v89 = @"YES";
  }
  CFStringRef v114 = (const __CFString *)v81;
  __int16 v115 = 2114;
  uint64_t v116 = v88;
  __int16 v117 = 2114;
  id v118 = v99;
  __int16 v119 = 2114;
  uint64_t v120 = v89;
  uint64_t v90 = v89;
  _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_INFO, "[%{public}@] %s route annotations configurations for %{public}@: %{public}@ (wantsControl: %{public}@)", buf, 0x34u);
  if (v94) {

  }
LABEL_134:
  if (v21) {
    char v91 = 1;
  }
  else {
    char v91 = (char)v14;
  }
  if (v99 || (v91 & 1) == 0)
  {
    uint64_t v92 = [*(id *)(a1 + 32) routeAnnotationsController];
    [v92 setConfiguration:v99];
  }
  _Block_object_dispose(v109, 8);
}

void sub_1000C7F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_1000C81A4(uint64_t a1)
{
  long long v2 = [*(id *)(a1 + 32) personalizedItemSourcesForCurrentState];
  id v3 = sub_1000C49B4();
  if (!os_log_type_enabled(v3, OS_LOG_TYPE_INFO)) {
    goto LABEL_16;
  }
  id v4 = *(id *)(a1 + 32);
  if (!v4)
  {
    long long v9 = @"<nil>";
    goto LABEL_10;
  }
  id v5 = (objc_class *)objc_opt_class();
  long long v6 = NSStringFromClass(v5);
  if (objc_opt_respondsToSelector())
  {
    long long v7 = [v4 performSelector:"accessibilityIdentifier"];
    long long v8 = v7;
    if (v7 && ![v7 isEqualToString:v6])
    {
      long long v9 = +[NSString stringWithFormat:@"%@<%p, %@>", v6, v4, v8];

      goto LABEL_8;
    }
  }
  long long v9 = +[NSString stringWithFormat:@"%@<%p>", v6, v4];
LABEL_8:

LABEL_10:
  long long v10 = v9;
  id v11 = v2;
  long long v12 = v11;
  if (v11)
  {
    if ([v11 count])
    {
      id v13 = [v12 componentsJoinedByString:@", "];
      id v14 = +[NSString stringWithFormat:@"<%p> [%@]", v12, v13];
    }
    else
    {
      id v14 = +[NSString stringWithFormat:@"<%p> (empty)", v12];
    }
  }
  else
  {
    id v14 = @"<nil>";
  }

  *(_DWORD *)buf = 138543618;
  id v17 = v10;
  __int16 v18 = 2112;
  long long v19 = v14;
  _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}@] -> item sources: %@", buf, 0x16u);

LABEL_16:
  [*(id *)(a1 + 32) customPOIsController];

  uint64_t v15 = [*(id *)(a1 + 32) personalizedItemManager];
  [v15 setItemSources:v2];
}

void sub_1000C8410(uint64_t a1)
{
  char v2 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(*(void *)(*(void *)(a1 + 40) + 8) + 32), UIEdgeInsetsNull[0]), (int32x4_t)vceqq_f64(*(float64x2_t *)(*(void *)(*(void *)(a1 + 40) + 8) + 48), UIEdgeInsetsNull[1]))), 0xFuLL)));
  id v3 = sub_1000C49B4();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);
  if ((v2 & 1) == 0)
  {
    if (!v4) {
      goto LABEL_20;
    }
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      long long v10 = @"<nil>";
      goto LABEL_19;
    }
    long long v6 = (objc_class *)objc_opt_class();
    long long v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      long long v8 = [v5 performSelector:"accessibilityIdentifier"];
      long long v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        long long v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_9;
      }
    }
    long long v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_9:

LABEL_19:
    id v17 = NSStringFromUIEdgeInsets(*(UIEdgeInsets *)(*(void *)(*(void *)(a1 + 40) + 8) + 32));
    *(_DWORD *)buf = 138543618;
    __int16 v43 = v10;
    __int16 v44 = 2114;
    unsigned int v45 = v17;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "[%{public}@] - map insets: %{public}@", buf, 0x16u);

LABEL_20:
    __int16 v18 = *(double **)(*(void *)(a1 + 40) + 8);
    double v19 = v18[4];
    double v20 = v18[5];
    double v21 = v18[6];
    double v22 = v18[7];
    id v23 = [*(id *)(a1 + 32) mapView];
    [v23 _setEdgeInsets:v19, v20, v21, v22];

    [*(id *)(a1 + 32) mapAttributionInsets];
    double v25 = v24;
    double v27 = v26;
    double v29 = v28;
    double v31 = v30;
    id v32 = [*(id *)(a1 + 32) mapView];
    [v32 _attributionInsets];
    if (v27 == v36 && v25 == v33 && v31 == v35)
    {
      double v39 = v34;

      if (v29 == v39)
      {
LABEL_30:
        [*(id *)(a1 + 32) _updateDebugLayoutGuidesView];
        __int16 v41 = [*(id *)(a1 + 32) navigationDisplay];
        [v41 mapInsetsDidChangeAnimated:*(unsigned __int8 *)(a1 + 48)];

        id v3 = [*(id *)(a1 + 32) overlayController];
        [v3 enumerateOverlaysUsingBlock:&stru_10131AFF0];
        goto LABEL_33;
      }
    }
    else
    {
    }
    id v40 = [*(id *)(a1 + 32) mapView];
    [v40 _setAttributionInsets:v25, v27, v29, v31];

    goto LABEL_30;
  }
  if (v4)
  {
    id v11 = *(id *)(a1 + 32);
    if (!v11)
    {
      int v16 = @"<nil>";
      goto LABEL_32;
    }
    long long v12 = (objc_class *)objc_opt_class();
    id v13 = NSStringFromClass(v12);
    if (objc_opt_respondsToSelector())
    {
      id v14 = [v11 performSelector:"accessibilityIdentifier"];
      uint64_t v15 = v14;
      if (v14 && ![v14 isEqualToString:v13])
      {
        int v16 = +[NSString stringWithFormat:@"%@<%p, %@>", v13, v11, v15];

        goto LABEL_17;
      }
    }
    int v16 = +[NSString stringWithFormat:@"%@<%p>", v13, v11];
LABEL_17:

LABEL_32:
    *(_DWORD *)buf = 138543362;
    __int16 v43 = v16;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "[%{public}@] - map insets are null, meaning we specifically don't want to continue this update", buf, 0xCu);
  }
LABEL_33:
}

void sub_1000C9084(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1000C9324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CA21C(uint64_t a1)
{
  uint64_t v1 = a1;
  os_signpost_id_t v2 = os_signpost_id_generate(*(os_log_t *)(a1 + 32));
  id v3 = *(id *)(v1 + 32);
  BOOL v4 = v3;
  unint64_t v205 = v2 - 1;
  if (v2 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_INTERVAL_BEGIN, v2, "CreatePOIsForItemsCalculation", "", buf, 2u);
  }
  os_signpost_id_t spid = v2;

  id v5 = sub_1000F03EC();
  if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO)) {
    goto LABEL_14;
  }
  id v6 = objc_loadWeakRetained((id *)(v1 + 80));
  if (!v6)
  {
    id v11 = @"<nil>";
    goto LABEL_13;
  }
  long long v7 = (objc_class *)objc_opt_class();
  long long v8 = NSStringFromClass(v7);
  if (objc_opt_respondsToSelector())
  {
    long long v9 = [v6 performSelector:"accessibilityIdentifier"];
    long long v10 = v9;
    if (v9 && ![v9 isEqualToString:v8])
    {
      id v11 = +[NSString stringWithFormat:@"%@<%p, %@>", v8, v6, v10];

      goto LABEL_11;
    }
  }
  id v11 = +[NSString stringWithFormat:@"%@<%p>", v8, v6];
LABEL_11:

LABEL_13:
  long long v12 = v11;
  *(_DWORD *)buf = 138543362;
  v275 = v12;
  _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}@] POI calculation starting...", buf, 0xCu);

LABEL_14:
  id v13 = [*(id *)(*(void *)(*(void *)(v1 + 64) + 8) + 40) allKeys];
  v211 = +[NSSet setWithArray:v13];

  id v14 = +[NSMutableSet set];
  uint64_t v15 = +[NSMutableDictionary dictionary];
  long long v268 = 0u;
  long long v269 = 0u;
  long long v270 = 0u;
  long long v271 = 0u;
  id obj = *(id *)(v1 + 40);
  id v16 = [obj countByEnumeratingWithState:&v268 objects:v285 count:16];
  uint64_t v230 = v1;
  if (!v16) {
    goto LABEL_43;
  }
  id v17 = v16;
  uint64_t v226 = *(void *)v269;
  id location = (id *)(v1 + 80);
  __int16 v18 = &selRef__updateSortedAppStoreAppsForTransportType_;
  do
  {
    double v19 = 0;
    v223 = v18[326];
    do
    {
      if (*(void *)v269 != v226) {
        objc_enumerationMutation(obj);
      }
      double v20 = *(POIAnnotation **)(*((void *)&v268 + 1) + 8 * (void)v19);
      int v21 = *(_DWORD *)(*(void *)(*(void *)(v1 + 72) + 8) + 24);
      if (v21 != atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)(v1 + 48) + 72), 0, memory_order_relaxed))
      {
        os_log_t log = sub_1000F03EC();
        if (!os_log_type_enabled(log, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_282;
        }
        id v43 = objc_loadWeakRetained(location);
        if (v43)
        {
          __int16 v44 = (objc_class *)objc_opt_class();
          unsigned int v45 = NSStringFromClass(v44);
          if ((objc_opt_respondsToSelector() & 1) == 0) {
            goto LABEL_57;
          }
          id v46 = [v43 performSelector:v223];
          Swift::Int v47 = v46;
          if (v46 && ![v46 isEqualToString:v45])
          {
            id v48 = +[NSString stringWithFormat:@"%@<%p, %@>", v45, v43, v47];
          }
          else
          {

LABEL_57:
            id v48 = +[NSString stringWithFormat:@"%@<%p>", v45, v43];
          }
        }
        else
        {
          id v48 = @"<nil>";
        }

        int v49 = *(_DWORD *)(*(void *)(*(void *)(v1 + 72) + 8) + 24);
        *(_DWORD *)buf = 138543618;
        v275 = v48;
        __int16 v276 = 1024;
        LODWORD(v277) = v49;
        _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[%{public}@] Counter (%d) updated while calculating POI items; aborting early",
          buf,
          0x12u);

        goto LABEL_282;
      }
      if ([(POIAnnotation *)v20 shouldBeHiddenFromMap])
      {
        double v22 = sub_1000F03EC();
        if (!os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_39;
        }
        id v23 = objc_loadWeakRetained(location);
        if (v23)
        {
          double v24 = (objc_class *)objc_opt_class();
          double v25 = NSStringFromClass(v24);
          if ((objc_opt_respondsToSelector() & 1) == 0) {
            goto LABEL_27;
          }
          double v26 = [v23 performSelector:v223];
          double v27 = v26;
          if (v26 && ![v26 isEqualToString:v25])
          {
            double v28 = +[NSString stringWithFormat:@"%@<%p, %@>", v25, v23, v27];
          }
          else
          {

LABEL_27:
            double v28 = +[NSString stringWithFormat:@"%@<%p>", v25, v23];
          }

          uint64_t v1 = v230;
        }
        else
        {
          double v28 = @"<nil>";
        }

        double v34 = v28;
        *(_DWORD *)buf = 138543618;
        v275 = v34;
        __int16 v276 = 2112;
        v277 = v20;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "[%{public}@] Item (%@) should be hidden from map; skipping",
          buf,
          0x16u);

        goto LABEL_39;
      }
      long long v266 = 0u;
      long long v267 = 0u;
      long long v264 = 0u;
      long long v265 = 0u;
      double v22 = [(POIAnnotation *)v20 keys];
      id v29 = [v22 countByEnumeratingWithState:&v264 objects:v284 count:16];
      if (v29)
      {
        id v30 = v29;
        uint64_t v31 = *(void *)v265;
        do
        {
          for (uint64_t i = 0; i != v30; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v265 != v31) {
              objc_enumerationMutation(v22);
            }
            uint64_t v33 = *(void *)(*((void *)&v264 + 1) + 8 * i);
            [(POIAnnotation *)v14 addObject:v33];
            [v15 setObject:v20 forKeyedSubscript:v33];
          }
          id v30 = [v22 countByEnumeratingWithState:&v264 objects:v284 count:16];
        }
        while (v30);
        uint64_t v1 = v230;
      }
LABEL_39:

      double v19 = (char *)v19 + 1;
    }
    while (v19 != v17);
    id v35 = [obj countByEnumeratingWithState:&v268 objects:v285 count:16];
    id v17 = v35;
    __int16 v18 = &selRef__updateSortedAppStoreAppsForTransportType_;
  }
  while (v35);
LABEL_43:

  double v36 = sub_1000F03EC();
  if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
  {
    id v37 = objc_loadWeakRetained((id *)(v1 + 80));
    if (v37)
    {
      id v38 = (objc_class *)objc_opt_class();
      double v39 = NSStringFromClass(v38);
      if ((objc_opt_respondsToSelector() & 1) == 0) {
        goto LABEL_49;
      }
      id v40 = [v37 performSelector:"accessibilityIdentifier"];
      __int16 v41 = v40;
      if (v40 && ![v40 isEqualToString:v39])
      {
        id v42 = +[NSString stringWithFormat:@"%@<%p, %@>", v39, v37, v41];
      }
      else
      {

LABEL_49:
        id v42 = +[NSString stringWithFormat:@"%@<%p>", v39, v37];
      }
    }
    else
    {
      id v42 = @"<nil>";
    }

    id v50 = v42;
    *(_DWORD *)buf = 138543618;
    v275 = v50;
    __int16 v276 = 2112;
    v277 = v211;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_INFO, "[%{public}@] - current keys: %@", buf, 0x16u);
  }
  id v51 = sub_1000F03EC();
  if (os_log_type_enabled(v51, OS_LOG_TYPE_INFO))
  {
    id v52 = objc_loadWeakRetained((id *)(v1 + 80));
    if (v52)
    {
      id v53 = (objc_class *)objc_opt_class();
      uint64_t v54 = NSStringFromClass(v53);
      if ((objc_opt_respondsToSelector() & 1) == 0) {
        goto LABEL_69;
      }
      uint64_t v55 = [v52 performSelector:"accessibilityIdentifier"];
      uint64_t v56 = v55;
      if (v55 && ![v55 isEqualToString:v54])
      {
        id v57 = +[NSString stringWithFormat:@"%@<%p, %@>", v54, v52, v56];
      }
      else
      {

LABEL_69:
        id v57 = +[NSString stringWithFormat:@"%@<%p>", v54, v52];
      }
    }
    else
    {
      id v57 = @"<nil>";
    }

    id v58 = v57;
    *(_DWORD *)buf = 138543618;
    v275 = v58;
    __int16 v276 = 2112;
    v277 = v14;
    _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_INFO, "[%{public}@] - incoming keys: %@", buf, 0x16u);
  }
  id v59 = [(POIAnnotation *)v211 mutableCopy];
  [v59 unionSet:v14];
  os_log_t log = +[NSHashTable hashTableWithOptions:512];
  v213 = +[NSHashTable hashTableWithOptions:512];
  v224 = +[NSHashTable hashTableWithOptions:512];
  v222 = +[NSHashTable hashTableWithOptions:512];
  v212 = +[NSHashTable hashTableWithOptions:512];
  v206 = +[NSHashTable hashTableWithOptions:512];
  id v60 = [*(id *)(*(void *)(*(void *)(v1 + 64) + 8) + 40) mutableCopy];
  long long v260 = 0u;
  long long v261 = 0u;
  long long v262 = 0u;
  long long v263 = 0u;
  id obj = v59;
  unsigned int v61 = (id *)[obj countByEnumeratingWithState:&v260 objects:v283 count:16];
  if (!v61) {
    goto LABEL_115;
  }
  uint64_t v62 = v61;
  unint64_t v63 = *(id **)v261;
  v214 = *(id **)v261;
  while (2)
  {
    uint64_t v64 = 0;
    locationa = v62;
    while (2)
    {
      if (*(id **)v261 != v63) {
        objc_enumerationMutation(obj);
      }
      uint64_t v65 = *(void *)(*((void *)&v260 + 1) + 8 * v64);
      int v66 = *(_DWORD *)(*(void *)(*(void *)(v1 + 72) + 8) + 24);
      if (v66 != atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)(v1 + 48) + 72), 0, memory_order_relaxed))
      {
        v178 = sub_1000F03EC();
        if (os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG))
        {
          id v179 = objc_loadWeakRetained((id *)(v1 + 80));
          if (v179)
          {
            v180 = (objc_class *)objc_opt_class();
            v181 = NSStringFromClass(v180);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_249;
            }
            v182 = [v179 performSelector:"accessibilityIdentifier"];
            v183 = v182;
            if (v182 && ![v182 isEqualToString:v181])
            {
              v184 = +[NSString stringWithFormat:@"%@<%p, %@>", v181, v179, v183];

              uint64_t v1 = v230;
            }
            else
            {

              uint64_t v1 = v230;
LABEL_249:
              v184 = +[NSString stringWithFormat:@"%@<%p>", v181, v179];
            }
          }
          else
          {
            v184 = @"<nil>";
          }

          int v192 = *(_DWORD *)(*(void *)(*(void *)(v1 + 72) + 8) + 24);
          *(_DWORD *)buf = 138543618;
          v275 = v184;
          __int16 v276 = 1024;
          LODWORD(v277) = v192;
          _os_log_impl((void *)&_mh_execute_header, v178, OS_LOG_TYPE_DEBUG, "[%{public}@] Counter (%d) updated while comparing existing POIs; aborting early",
            buf,
            0x12u);
        }
        long long v177 = obj;
        goto LABEL_281;
      }
      double v67 = [*(id *)(*(void *)(*(void *)(v1 + 64) + 8) + 40) objectForKeyedSubscript:v65];
      v227 = v67;
      if (v67)
      {
        int v68 = [v67 compoundItem];
      }
      else
      {
        int v68 = 0;
      }
      id v69 = [v15 objectForKeyedSubscript:v65];
      id v70 = v69;
      if (v68) {
        BOOL v71 = 1;
      }
      else {
        BOOL v71 = v69 == 0;
      }
      char v72 = !v71;
      if (v71)
      {
        if (!v68 || !v69)
        {
          if (!v68 || v69) {
            goto LABEL_113;
          }
          goto LABEL_102;
        }
        id v73 = (id)sub_1000ED07C(v69);
        BOOL v71 = v73 == [v227 presentationAttributesHash];
        uint64_t v1 = v230;
        if (!v71 || ([v68 isEqual:v70] & 1) == 0) {
          goto LABEL_95;
        }
      }
      else
      {
LABEL_95:
        if ([v70 shouldBeClustered]) {
          id v74 = v213;
        }
        else {
          id v74 = log;
        }
        [v74 addObject:v70];
        if (v72) {
          goto LABEL_113;
        }
LABEL_102:
        if ([v68 shouldBeClustered]) {
          long long v75 = v222;
        }
        else {
          long long v75 = v224;
        }
        [v75 addObject:v227];
        long long v258 = 0u;
        long long v259 = 0u;
        long long v256 = 0u;
        long long v257 = 0u;
        long long v76 = [v68 keys];
        id v77 = [v76 countByEnumeratingWithState:&v256 objects:v282 count:16];
        if (v77)
        {
          id v78 = v77;
          uint64_t v79 = *(void *)v257;
          do
          {
            for (j = 0; j != v78; j = (char *)j + 1)
            {
              if (*(void *)v257 != v79) {
                objc_enumerationMutation(v76);
              }
              [v60 removeObjectForKey:*(void *)(*((void *)&v256 + 1) + 8 * (void)j)];
            }
            id v78 = [v76 countByEnumeratingWithState:&v256 objects:v282 count:16];
          }
          while (v78);
        }

        uint64_t v1 = v230;
        unint64_t v63 = v214;
        uint64_t v62 = locationa;
      }
LABEL_113:

      if ((id *)++v64 != v62) {
        continue;
      }
      break;
    }
    uint64_t v62 = (id *)[obj countByEnumeratingWithState:&v260 objects:v283 count:16];
    if (v62) {
      continue;
    }
    break;
  }
LABEL_115:

  long long v254 = 0u;
  long long v255 = 0u;
  long long v252 = 0u;
  long long v253 = 0u;
  v208 = log;
  id v228 = [v208 countByEnumeratingWithState:&v252 objects:v281 count:16];
  if (!v228) {
    goto LABEL_170;
  }
  locationb = *(id **)v253;
  v215 = (id *)(v1 + 80);
  unint64_t v81 = &selRef__updateSortedAppStoreAppsForTransportType_;
  while (2)
  {
    uint64_t v82 = 0;
    id v83 = (id *)v81[326];
    v209 = v83;
    while (2)
    {
      if (*(id **)v253 != locationb) {
        objc_enumerationMutation(v208);
      }
      unint64_t v84 = *(POIAnnotation **)(*((void *)&v252 + 1) + 8 * (void)v82);
      int v85 = *(_DWORD *)(*(void *)(*(void *)(v1 + 72) + 8) + 24);
      if (v85 != atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)(v1 + 48) + 72), 0, memory_order_relaxed))
      {
        v185 = sub_1000F03EC();
        if (os_log_type_enabled(v185, OS_LOG_TYPE_DEBUG))
        {
          id v186 = objc_loadWeakRetained(v215);
          if (v186)
          {
            v187 = (objc_class *)objc_opt_class();
            v188 = NSStringFromClass(v187);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_257;
            }
            v189 = [v186 performSelector:v83];
            v190 = v189;
            if (v189 && ![v189 isEqualToString:v188])
            {
              v191 = +[NSString stringWithFormat:@"%@<%p, %@>", v188, v186, v190];

              uint64_t v1 = v230;
            }
            else
            {

              uint64_t v1 = v230;
LABEL_257:
              v191 = +[NSString stringWithFormat:@"%@<%p>", v188, v186];
            }
          }
          else
          {
            v191 = @"<nil>";
          }

          int v200 = *(_DWORD *)(*(void *)(*(void *)(v1 + 72) + 8) + 24);
          *(_DWORD *)buf = 138543618;
          v275 = v191;
          __int16 v276 = 1024;
          LODWORD(v277) = v200;
          _os_log_impl((void *)&_mh_execute_header, v185, OS_LOG_TYPE_DEBUG, "[%{public}@] Counter (%d) updated while creating new normal POIs; aborting early",
            buf,
            0x12u);
        }
        long long v177 = v208;
        goto LABEL_281;
      }
      if ([(POIAnnotation *)v84 shouldBeHiddenFromMap])
      {
        uint64_t v86 = sub_1000F03EC();
        if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR))
        {
          id v87 = objc_loadWeakRetained(v215);
          if (v87)
          {
            char v88 = (objc_class *)objc_opt_class();
            v89 = NSStringFromClass(v88);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_128;
            }
            uint64_t v90 = [v87 performSelector:v83];
            char v91 = v90;
            if (v90 && ![v90 isEqualToString:v89])
            {
              uint64_t v92 = +[NSString stringWithFormat:@"%@<%p, %@>", v89, v87, v91];
            }
            else
            {

LABEL_128:
              uint64_t v92 = +[NSString stringWithFormat:@"%@<%p>", v89, v87];
            }

            uint64_t v1 = v230;
          }
          else
          {
            uint64_t v92 = @"<nil>";
          }

          id v93 = v92;
          *(_DWORD *)buf = 138543618;
          v275 = v93;
          __int16 v276 = 2112;
          v277 = v84;
          _os_log_impl((void *)&_mh_execute_header, v86, OS_LOG_TYPE_ERROR, "[%{public}@] Item (%@) marked as should be hidden from the map; this shouldn't have happened",
            buf,
            0x16u);

          id v83 = v209;
        }
      }
      if ([(POIAnnotation *)v84 shouldBeClustered])
      {
        unsigned int v94 = sub_1000F03EC();
        if (os_log_type_enabled(v94, OS_LOG_TYPE_ERROR))
        {
          id v95 = objc_loadWeakRetained(v215);
          if (v95)
          {
            unint64_t v96 = (objc_class *)objc_opt_class();
            uint64_t v97 = NSStringFromClass(v96);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_140;
            }
            uint64_t v98 = [v95 performSelector:v83];
            id v99 = v98;
            if (v98 && ![v98 isEqualToString:v97])
            {
              long long v100 = +[NSString stringWithFormat:@"%@<%p, %@>", v97, v95, v99];
            }
            else
            {

LABEL_140:
              long long v100 = +[NSString stringWithFormat:@"%@<%p>", v97, v95];
            }

            uint64_t v1 = v230;
          }
          else
          {
            long long v100 = @"<nil>";
          }

          long long v101 = v100;
          *(_DWORD *)buf = 138543618;
          v275 = v101;
          __int16 v276 = 2112;
          v277 = v84;
          _os_log_impl((void *)&_mh_execute_header, v94, OS_LOG_TYPE_ERROR, "[%{public}@] Item (%@) marked as should be clustered; this shouldn't have happened",
            buf,
            0x16u);

          id v83 = v209;
        }
      }
      long long v102 = [[POIAnnotation alloc] initWithItem:v84 defaultLocale:*(void *)(*(void *)(v1 + 48) + 24)];
      if (!v102)
      {
        long long v103 = sub_1000F03EC();
        if (!os_log_type_enabled(v103, OS_LOG_TYPE_ERROR)) {
          goto LABEL_164;
        }
        id v108 = objc_loadWeakRetained(v215);
        if (!v108)
        {
          CFStringRef v114 = @"<nil>";
          goto LABEL_163;
        }
        uint64_t v109 = (objc_class *)objc_opt_class();
        uint64_t v110 = NSStringFromClass(v109);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v111 = [v108 performSelector:v83];
          BOOL v112 = v111;
          if (v111 && ![v111 isEqualToString:v110])
          {
            uint64_t v117 = +[NSString stringWithFormat:@"%@<%p, %@>", v110, v108, v112];
            id v118 = v112;
            __int16 v113 = (void *)v110;
            CFStringRef v114 = (__CFString *)v117;

            goto LABEL_161;
          }
        }
        +[NSString stringWithFormat:@"%@<%p>", v110, v108];
        __int16 v113 = (void *)v110;
        CFStringRef v114 = (__CFString *)objc_claimAutoreleasedReturnValue();
LABEL_161:

        id v83 = v209;
LABEL_163:

        __int16 v115 = v114;
        uint64_t v116 = *(void *)(*(void *)(v230 + 48) + 24);
        *(_DWORD *)buf = 138543874;
        v275 = v115;
        __int16 v276 = 2112;
        v277 = v84;
        __int16 v278 = 2112;
        uint64_t v279 = v116;
        _os_log_impl((void *)&_mh_execute_header, v103, OS_LOG_TYPE_ERROR, "[%{public}@] Could not generate normal POI for item: %@ with locale: %@", buf, 0x20u);

        goto LABEL_164;
      }
      [v212 addObject:v102];
      long long v250 = 0u;
      long long v251 = 0u;
      long long v248 = 0u;
      long long v249 = 0u;
      long long v103 = [(POIAnnotation *)v84 keys];
      id v104 = [v103 countByEnumeratingWithState:&v248 objects:v280 count:16];
      if (v104)
      {
        id v105 = v104;
        uint64_t v106 = *(void *)v249;
        do
        {
          for (k = 0; k != v105; k = (char *)k + 1)
          {
            if (*(void *)v249 != v106) {
              objc_enumerationMutation(v103);
            }
            [v60 setObject:v102 forKeyedSubscript:*(void *)(*((void *)&v248 + 1) + 8 * (void)k)];
          }
          id v105 = [v103 countByEnumeratingWithState:&v248 objects:v280 count:16];
        }
        while (v105);
      }
LABEL_164:

      uint64_t v82 = (char *)v82 + 1;
      uint64_t v1 = v230;
      if (v82 != v228) {
        continue;
      }
      break;
    }
    id v119 = [v208 countByEnumeratingWithState:&v252 objects:v281 count:16];
    unint64_t v81 = &selRef__updateSortedAppStoreAppsForTransportType_;
    id v228 = v119;
    if (v119) {
      continue;
    }
    break;
  }
LABEL_170:

  long long v246 = 0u;
  long long v247 = 0u;
  long long v244 = 0u;
  long long v245 = 0u;
  v207 = v213;
  locationc = (id *)[v207 countByEnumeratingWithState:&v244 objects:v273 count:16];
  if (!locationc) {
    goto LABEL_239;
  }
  v210 = (id *)(v1 + 80);
  uint64_t v120 = &selRef__updateSortedAppStoreAppsForTransportType_;
  v216 = *(id **)v245;
  while (2)
  {
    uint64_t v121 = 0;
    uint64_t v122 = v120[326];
    v203 = v122;
    while (2)
    {
      if (*(id **)v245 != v216) {
        objc_enumerationMutation(v207);
      }
      unint64_t v123 = *(POIAnnotation **)(*((void *)&v244 + 1) + 8 * v121);
      int v124 = *(_DWORD *)(*(void *)(*(void *)(v230 + 72) + 8) + 24);
      if (v124 != atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)(v230 + 48) + 72), 0, memory_order_relaxed))
      {
        v193 = sub_1000F03EC();
        if (os_log_type_enabled(v193, OS_LOG_TYPE_DEBUG))
        {
          id v194 = objc_loadWeakRetained(v210);
          if (v194)
          {
            v195 = (objc_class *)objc_opt_class();
            v196 = NSStringFromClass(v195);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_269;
            }
            v197 = [v194 performSelector:v122];
            v198 = v197;
            if (v197 && ![v197 isEqualToString:v196])
            {
              v199 = +[NSString stringWithFormat:@"%@<%p, %@>", v196, v194, v198];
            }
            else
            {

LABEL_269:
              v199 = +[NSString stringWithFormat:@"%@<%p>", v196, v194];
            }
          }
          else
          {
            v199 = @"<nil>";
          }

          v201 = v199;
          int v202 = *(_DWORD *)(*(void *)(*(void *)(v230 + 72) + 8) + 24);
          *(_DWORD *)buf = 138543618;
          v275 = v201;
          __int16 v276 = 1024;
          LODWORD(v277) = v202;
          _os_log_impl((void *)&_mh_execute_header, v193, OS_LOG_TYPE_DEBUG, "[%{public}@] Counter (%d) updated while creating new clustered POIs; aborting early",
            buf,
            0x12u);
        }
        long long v177 = v207;
        goto LABEL_281;
      }
      uint64_t v229 = v121;
      if ([(POIAnnotation *)v123 shouldBeHiddenFromMap])
      {
        NSString v125 = sub_1000F03EC();
        if (os_log_type_enabled(v125, OS_LOG_TYPE_ERROR))
        {
          id v126 = objc_loadWeakRetained(v210);
          if (v126)
          {
            uint64_t v127 = (objc_class *)objc_opt_class();
            uint64_t v128 = NSStringFromClass(v127);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_183;
            }
            unint64_t v129 = v128;
            uint64_t v130 = [v126 performSelector:v122];
            uint64_t v131 = v130;
            if (v130 && ![v130 isEqualToString:v129])
            {
              v167 = v129;
              unint64_t v132 = +[NSString stringWithFormat:@"%@<%p, %@>", v129, v126, v131];

              uint64_t v128 = v167;
            }
            else
            {

              uint64_t v128 = v129;
LABEL_183:
              unint64_t v132 = +[NSString stringWithFormat:@"%@<%p>", v128, v126];
            }
          }
          else
          {
            unint64_t v132 = @"<nil>";
          }

          uint64_t v133 = v132;
          *(_DWORD *)buf = 138543618;
          v275 = v133;
          __int16 v276 = 2112;
          v277 = v123;
          _os_log_impl((void *)&_mh_execute_header, v125, OS_LOG_TYPE_ERROR, "[%{public}@] Item (%@) marked as should be hidden from the map; this shouldn't have happened",
            buf,
            0x16u);

          uint64_t v121 = v229;
        }
      }
      if (([(POIAnnotation *)v123 shouldBeClustered] & 1) == 0)
      {
        unint64_t v134 = sub_1000F03EC();
        if (os_log_type_enabled(v134, OS_LOG_TYPE_ERROR))
        {
          id v135 = objc_loadWeakRetained(v210);
          if (v135)
          {
            uint64_t v136 = (objc_class *)objc_opt_class();
            uint64_t v137 = NSStringFromClass(v136);
            if ((objc_opt_respondsToSelector() & 1) == 0) {
              goto LABEL_195;
            }
            unint64_t v138 = v137;
            uint64_t v139 = [v135 performSelector:v122];
            v140 = v139;
            if (v139 && ![v139 isEqualToString:v138])
            {
              uint64_t v168 = v138;
              Swift::Int v141 = +[NSString stringWithFormat:@"%@<%p, %@>", v138, v135, v140];

              uint64_t v137 = v168;
            }
            else
            {

              uint64_t v137 = v138;
LABEL_195:
              Swift::Int v141 = +[NSString stringWithFormat:@"%@<%p>", v137, v135];
            }
          }
          else
          {
            Swift::Int v141 = @"<nil>";
          }

          uint64_t v142 = v141;
          *(_DWORD *)buf = 138543618;
          v275 = v142;
          __int16 v276 = 2112;
          v277 = v123;
          _os_log_impl((void *)&_mh_execute_header, v134, OS_LOG_TYPE_ERROR, "[%{public}@] Item (%@) marked as shouldn't be clustered; this shouldn't have happened",
            buf,
            0x16u);

          uint64_t v121 = v229;
        }
      }
      Swift::Int v143 = [[POIAnnotation alloc] initWithItem:v123 defaultLocale:*(void *)(*(void *)(v230 + 48) + 24)];
      uint64_t v144 = sub_1000F03EC();
      Swift::Int v145 = v144;
      if (!v143)
      {
        if (!os_log_type_enabled(v144, OS_LOG_TYPE_ERROR))
        {
          uint64_t v1 = v230;
          goto LABEL_232;
        }
        id v153 = objc_loadWeakRetained(v210);
        if (!v153)
        {
          v159 = @"<nil>";
          goto LABEL_230;
        }
        Swift::Int v154 = (objc_class *)objc_opt_class();
        uint64_t v155 = NSStringFromClass(v154);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v156 = [v153 performSelector:v122];
          id v157 = v156;
          if (v156 && ![v156 isEqualToString:v155])
          {
            uint64_t v169 = +[NSString stringWithFormat:@"%@<%p, %@>", v155, v153, v157];
            long long v170 = v157;
            v158 = (void *)v155;
            v159 = (__CFString *)v169;

            goto LABEL_216;
          }
        }
        +[NSString stringWithFormat:@"%@<%p>", v155, v153];
        v158 = (void *)v155;
        v159 = (__CFString *)objc_claimAutoreleasedReturnValue();
LABEL_216:

LABEL_230:
        uint64_t v165 = v159;
        uint64_t v166 = *(void *)(*(void *)(v230 + 48) + 24);
        *(_DWORD *)buf = 138543874;
        v275 = v165;
        __int16 v276 = 2112;
        v277 = v123;
        uint64_t v1 = v230;
        __int16 v278 = 2112;
        uint64_t v279 = v166;
        _os_log_impl((void *)&_mh_execute_header, v145, OS_LOG_TYPE_ERROR, "[%{public}@] Could not generate cluster POI for item: %@ with locale: %@", buf, 0x20u);

        goto LABEL_231;
      }
      if (os_log_type_enabled(v144, OS_LOG_TYPE_INFO))
      {
        id v146 = objc_loadWeakRetained(v210);
        if (v146)
        {
          uint64_t v147 = (objc_class *)objc_opt_class();
          uint64_t v148 = NSStringFromClass(v147);
          if ((objc_opt_respondsToSelector() & 1) == 0) {
            goto LABEL_207;
          }
          id v149 = [v146 performSelector:v122];
          uint64_t v150 = v149;
          if (v149 && ![v149 isEqualToString:v148])
          {
            +[NSString stringWithFormat:@"%@<%p, %@>", v148, v146, v150];
            id v151 = (void *)v148;
            id v152 = (__CFString *)objc_claimAutoreleasedReturnValue();
          }
          else
          {

LABEL_207:
            +[NSString stringWithFormat:@"%@<%p>", v148, v146];
            id v151 = (void *)v148;
            id v152 = (__CFString *)objc_claimAutoreleasedReturnValue();
          }

          uint64_t v122 = v203;
        }
        else
        {
          id v152 = @"<nil>";
        }

        uint64_t v160 = v152;
        *(_DWORD *)buf = 138543618;
        v275 = v160;
        __int16 v276 = 2112;
        v277 = v143;
        _os_log_impl((void *)&_mh_execute_header, v145, OS_LOG_TYPE_INFO, "[%{public}@] Adding cluster POI: %@", buf, 0x16u);
      }
      [v206 addObject:v143];
      long long v242 = 0u;
      long long v243 = 0u;
      long long v240 = 0u;
      long long v241 = 0u;
      Swift::Int v145 = [(POIAnnotation *)v123 keys];
      id v161 = [v145 countByEnumeratingWithState:&v240 objects:v272 count:16];
      if (v161)
      {
        id v162 = v161;
        uint64_t v163 = *(void *)v241;
        uint64_t v1 = v230;
        do
        {
          for (m = 0; m != v162; m = (char *)m + 1)
          {
            if (*(void *)v241 != v163) {
              objc_enumerationMutation(v145);
            }
            [v60 setObject:v143 forKeyedSubscript:*(void *)(*((void *)&v240 + 1) + 8 * (void)m)];
          }
          id v162 = [v145 countByEnumeratingWithState:&v240 objects:v272 count:16];
        }
        while (v162);
        uint64_t v122 = v203;
      }
      else
      {
        uint64_t v1 = v230;
      }
LABEL_231:
      uint64_t v121 = v229;
LABEL_232:

      if ((id *)++v121 != locationc) {
        continue;
      }
      break;
    }
    long long v171 = (id *)[v207 countByEnumeratingWithState:&v244 objects:v273 count:16];
    uint64_t v120 = &selRef__updateSortedAppStoreAppsForTransportType_;
    locationc = v171;
    if (v171) {
      continue;
    }
    break;
  }
LABEL_239:

  long long v172 = *(id *)(v1 + 32);
  long long v173 = v172;
  if (v205 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v172))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v173, OS_SIGNPOST_INTERVAL_END, spid, "CreatePOIsForItemsCalculation", "", buf, 2u);
  }

  long long v174 = *(NSObject **)(v1 + 56);
  id v175 = &_dispatch_main_q;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100CF2000;
  block[3] = &unk_101321878;
  uint64_t v176 = *(void *)(v1 + 72);
  void block[4] = *(void *)(v1 + 48);
  uint64_t v238 = v176;
  v232 = v60;
  id v233 = *(id *)(v1 + 40);
  objc_copyWeak(&v239, (id *)(v1 + 80));
  id v234 = v224;
  id v235 = v222;
  id v236 = v212;
  id v237 = v206;
  dispatch_group_notify(v174, (dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v239);
  long long v177 = v232;
LABEL_281:

LABEL_282:
}

void sub_1000CC6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000CC6E4()
{
  if (qword_101610088 != -1) {
    dispatch_once(&qword_101610088, &stru_101302BF8);
  }
  unsigned __int16 v0 = (void *)qword_101610080;

  return v0;
}

void sub_1000CCA30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CCE7C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1000CE45C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _internal_topContextWantsCompassLayoutControl] ^ 1;
  id v3 = [*(id *)(a1 + 32) floatingControlsOverlay];
  [v3 setAutomaticallyUpdateCompassInsets:v2];

  BOOL v4 = [*(id *)(a1 + 32) floatingControlsOverlay];
  id v5 = [v4 mapViewDelegate];
  id v6 = [*(id *)(a1 + 32) mapView];
  [v5 mapView:v6 regionDidChangeAnimated:0];

  long long v7 = sub_1000C49B4();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void *)(a1 + 40);
    int v31 = 134217984;
    uint64_t v32 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "IOSChrome floating controls -> %lu", (uint8_t *)&v31, 0xCu);
  }

  [*(id *)(a1 + 32) _updateFloatingControlsDidChangePitching:0 animated:0];
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = [*(id *)(a1 + 32) overlayController];
  id v11 = [*(id *)(a1 + 32) floatingControlsOverlay];
  if (v9 < 1)
  {
    [v10 setViewportConstraintsEnabled:0 forOverlay:v11];

    id v16 = *(void **)(a1 + 32);
    id v17 = (void *)v16[3];
    id v14 = [v16 floatingControlsOverlay];
    uint64_t v15 = [v14 mapViewDelegate];
    [v17 removeAdditionalDelegate:v15 forProtocol:0];
  }
  else
  {
    [v10 setViewportConstraintsEnabled:1 forOverlay:v11];

    long long v12 = *(void **)(a1 + 32);
    id v13 = (void *)v12[3];
    id v14 = [v12 floatingControlsOverlay];
    uint64_t v15 = [v14 mapViewDelegate];
    [v13 addAdditionalDelegate:v15 forProtocol:0];
  }

  if (*(unsigned char *)(a1 + 41))
  {
    if (+[PedestrianARSessionTask isPedestrianARModeSupported])
    {
      int v21 = *(void **)(a1 + 32);
      if (!v21[97])
      {
        double v22 = [v21 appCoordinator];
        id v23 = [v22 platformController];
        uint64_t v24 = [v23 pedestrianARSessionStateManager];
        uint64_t v25 = *(void *)(a1 + 32);
        double v26 = *(void **)(v25 + 776);
        *(void *)(v25 + 776) = v24;

        [*(id *)(*(void *)(a1 + 32) + 776) addObserver:];
      }
    }
  }
  else
  {
    __int16 v18 = *(void **)(*(void *)(a1 + 32) + 776);
    if (v18)
    {
      [v18 removeObserver:];
      uint64_t v19 = *(void *)(a1 + 32);
      double v20 = *(void **)(v19 + 776);
      *(void *)(v19 + 776) = 0;
    }
  }
  double v27 = [*(id *)(a1 + 32) baseModeController];
  double v28 = [v27 actionCoordinator];
  id v29 = [v28 venuesManager];

  id v30 = *(void **)(*(void *)(a1 + 32) + 24);
  if ((*(unsigned char *)(a1 + 40) & 0x40) != 0) {
    [v30 addAdditionalDelegate:v29 forProtocol:0];
  }
  else {
    [v30 removeAdditionalDelegate:v29 forProtocol:0];
  }
}

void sub_1000CFAF8(double a1)
{
  uint64_t v2 = OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayAlpha;
  if (*(double *)(v1 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayAlpha) != a1)
  {
    *(double *)(v1 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayAlpha) = a1;
    id v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController);
    if (v3)
    {
      id v4 = [v3 view];
      if (v4)
      {
        double v5 = 0.0;
        if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden) & 1) == 0) {
          double v5 = *(double *)(v1 + v2);
        }
        id v6 = v4;
        [v4 setAlpha:v5];
      }
    }
  }
}

id sub_1000D0E24(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 248) alpha];
}

void sub_1000D1508(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containeeLayout];
  id v3 = [*(id *)(a1 + 32) currentViewController];
  id v4 = [v3 cardPresentationController];
  unsigned int v5 = [v4 useDefaultLayoutWhenCalculatingBottomInsetForFloatingControls];

  if (v5)
  {
    id v6 = [*(id *)(a1 + 32) currentViewController];
    long long v7 = [v6 cardPresentationController];
    id v2 = [v7 defaultContaineeLayout];
  }
  if (v2 != (id)5)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    if (*(unsigned char *)(a1 + 40))
    {
      [v8 _cardHeightForComputingBottomMapEdgeInsets];
      double Height = v9;
    }
    else
    {
      id v11 = (void *)v8[3];
      long long v12 = [v8 currentViewController];
      id v13 = [v11 objectForKey:v12];

      [v13 bounds];
      double Height = CGRectGetHeight(v30);
    }
    id v14 = [*(id *)(a1 + 32) currentViewController];
    [v14 heightForLayout:[*(id *)(a1 + 32) maxLayoutForEdgeInsetsUpdate]];
    double v16 = v15;

    if (v16 != -1.0) {
      goto LABEL_19;
    }
    id v17 = sub_1000BF6B8();
    if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    {
LABEL_18:

      double v16 = Height;
LABEL_19:
      if (v16 < Height) {
        double Height = v16;
      }
      uint64_t v24 = [*(id *)(a1 + 32) view];
      [v24 bounds];
      CGFloat v25 = CGRectGetHeight(v31);
      double v26 = *(double **)(a1 + 32);
      if (Height < v25 * 0.600000024)
      {
        v26[10] = Height;
      }
      else
      {
        double v27 = [v26 view];
        [v27 bounds];
        *(CGFloat *)(*(void *)(a1 + 32) + 80) = CGRectGetHeight(v32) * 0.600000024;
      }
      return;
    }
    id v18 = *(id *)(a1 + 32);
    if (!v18)
    {
      id v23 = @"<nil>";
      goto LABEL_17;
    }
    uint64_t v19 = (objc_class *)objc_opt_class();
    double v20 = NSStringFromClass(v19);
    if (objc_opt_respondsToSelector())
    {
      int v21 = [v18 performSelector:"accessibilityIdentifier"];
      double v22 = v21;
      if (v21 && ![v21 isEqualToString:v20])
      {
        id v23 = +[NSString stringWithFormat:@"%@<%p, %@>", v20, v18, v22];

        goto LABEL_15;
      }
    }
    id v23 = +[NSString stringWithFormat:@"%@<%p>", v20, v18];
LABEL_15:

LABEL_17:
    *(_DWORD *)buf = 138543362;
    id v29 = v23;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "[%{public}@] Default height limit is not supported, don't limit", buf, 0xCu);

    goto LABEL_18;
  }
}

void sub_1000D2890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000D298C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) viewController];
  [v2 heightForLayout:1];
  double v4 = v3;

  id result = [*(id *)(a1 + 32) _fullHeightFixed];
  if ((result & 1) == 0 && v4 != -1.0)
  {
    [*(id *)(a1 + 32) bottomSafeOffset];
    return [*(id *)(a1 + 32) grabberSafeAreaHeight];
  }
  return result;
}

double sub_1000D2A14(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) containerStyle] == (id)4)
  {
    double v4 = (*(double (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    unsigned int v5 = [*(id *)(a1 + 32) viewController];
    [v5 heightForLayout:2];
    double v7 = v6;

    if (([*(id *)(a1 + 32) _fullHeightFixed] & 1) != 0 || v7 == -1.0)
    {
      double v4 = UISheetPresentationControllerDetentInactive;
    }
    else
    {
      [*(id *)(a1 + 32) bottomSafeOffset];
      double v9 = v7 - v8;
      [*(id *)(a1 + 32) grabberSafeAreaHeight];
      double v4 = v9 + v10;
    }
  }

  return v4;
}

void sub_1000D2CE4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) presentedModally])
  {
    id v2 = [*(id *)(a1 + 32) viewController];
    [v2 heightForLayout:5];
    double v4 = v3;

    if (v4 != -1.0) {
      goto LABEL_4;
    }
  }
  unsigned int v5 = [*(id *)(a1 + 32) viewController];
  [v5 heightForLayout:3];
  double v7 = v6;

  if (v7 != -1.0) {
LABEL_4:
  }
    [*(id *)(a1 + 32) bottomSafeOffset];
}

id sub_1000D46EC()
{
  if (qword_101610A00 != -1) {
    dispatch_once(&qword_101610A00, &stru_10131A8D0);
  }
  unsigned __int16 v0 = (void *)qword_1016109F8;

  return v0;
}

BOOL sub_1000D4BB8()
{
  if (qword_10160EED8 != -1) {
    dispatch_once(&qword_10160EED8, &stru_1012ED168);
  }
  return (byte_10160EED0 & 1) == 0;
}

void sub_1000D6390(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 296))
  {
    uint64_t v3 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    uint64_t v4 = *(void *)(a1 + 32);
    unsigned int v5 = *(void **)(v4 + 304);
    *(void *)(v4 + 304) = v3;
  }
  else
  {
    double v6 = *(void **)(v1 + 288);
    [v6 setAlpha:];
  }
}

id sub_1000D8C98()
{
  if (qword_101610AB0 != -1) {
    dispatch_once(&qword_101610AB0, &stru_10131B1A8);
  }
  unsigned __int16 v0 = (void *)qword_101610AA8;

  return v0;
}

id sub_1000D8CEC()
{
  if (qword_101612218 != -1) {
    dispatch_once(&qword_101612218, &stru_1012EFC98);
  }
  unsigned __int16 v0 = (void *)qword_101612210;

  return v0;
}

void sub_1000DC690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000DCB50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000DCEA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1000DCFA0()
{
  if (qword_101610778 != -1) {
    dispatch_once(&qword_101610778, &stru_101316AA0);
  }
  unsigned __int16 v0 = (void *)qword_101610770;

  return v0;
}

id sub_1000DD5E0(id a1, SEL a2)
{
  id v2 = a1;
  id v3 = CollectionPlaceItem.updatedMapItemStorage()();

  return v3;
}

id CollectionPlaceItem.updatedMapItemStorage()()
{
  id v1 = [v0 mapItemStorage];
  if (v1)
  {
    id v2 = [v0 customName];
    if (v2)
    {
      id v3 = v2;
      id v4 = [v1 userValues];

      if (!v4)
      {
        id v5 = [objc_allocWithZone((Class)GEOMapItemStorageUserValues) init];
        [v1 setUserValues:v5];
      }
      id v6 = [v1 userValues];
      [v6 setName:v3];
    }
  }
  return v1;
}

void sub_1000DE164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
}

void sub_1000DE694(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v4)
    {
      [WeakRetained setHasDefaultImage:0];
      [WeakRetained setCachedImage:v4];
      [WeakRetained notifyObserversInfoUpdated];
    }
    else
    {
      [WeakRetained loadDefaultImage];
    }
  }
}

id sub_1000DE720(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 setHasDefaultImage:1];
  [*(id *)(a1 + 32) setCachedImage:v4];

  id v5 = *(void **)(a1 + 32);

  return [v5 notifyObserversInfoUpdated];
}

void sub_1000DFF04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E0150(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSSet) initWithArray:*(void *)(a1 + 32)];
  id v3 = [objc_alloc((Class)NSMutableSet) initWithArray:*(void *)(*(void *)(a1 + 40) + 24)];
  [v3 minusSet:v2];
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  id v4 = [v3 copy];
  id v5 = [v4 countByEnumeratingWithState:&v41 objects:v52 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v42;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v42 != v7) {
          objc_enumerationMutation(v4);
        }
        [*(id *)(*((void *)&v41 + 1) + 8 * i) removeObserver:*(void *)(a1 + 40)];
      }
      id v6 = [v4 countByEnumeratingWithState:&v41 objects:v52 count:16];
    }
    while (v6);
  }

  id v9 = [v2 mutableCopy];
  id v10 = [objc_alloc((Class)NSSet) initWithArray:*(void *)(*(void *)(a1 + 40) + 24)];
  [v9 minusSet:v10];

  id v11 = [v9 copy];
  long long v12 = [v2 allObjects];
  id v13 = [v12 mutableCopy];
  uint64_t v14 = *(void *)(a1 + 40);
  double v15 = *(void **)(v14 + 24);
  *(void *)(v14 + 24) = v13;

  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v16 = v11;
  id v17 = [v16 countByEnumeratingWithState:&v37 objects:v51 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v38;
    do
    {
      for (j = 0; j != v18; j = (char *)j + 1)
      {
        if (*(void *)v38 != v19) {
          objc_enumerationMutation(v16);
        }
        [*(id *)(*((void *)&v37 + 1) + 8 * (void)j) addObserver:*(void *)(a1 + 40)];
      }
      id v18 = [v16 countByEnumeratingWithState:&v37 objects:v51 count:16];
    }
    while (v18);
  }

  int v21 = sub_1000EC2B4();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
  {
    id v22 = *(id *)(*(void *)(a1 + 40) + 24);
    id v23 = v22;
    if (v22)
    {
      if ([v22 count])
      {
        uint64_t v24 = [v23 componentsJoinedByString:@", "];
        CGFloat v25 = +[NSString stringWithFormat:@"<%p> [%@]", v23, v24];
      }
      else
      {
        CGFloat v25 = +[NSString stringWithFormat:@"<%p> (empty)", v23];
      }
    }
    else
    {
      CGFloat v25 = @"<nil>";
    }

    double v26 = v25;
    id v27 = [v4 allObjects];
    double v28 = v27;
    id v36 = v2;
    if (v27)
    {
      if ([v27 count])
      {
        id v29 = [v28 componentsJoinedByString:@", "];
        CGRect v30 = +[NSString stringWithFormat:@"<%p> [%@]", v28, v29];
      }
      else
      {
        CGRect v30 = +[NSString stringWithFormat:@"<%p> (empty)", v28];
      }
    }
    else
    {
      CGRect v30 = @"<nil>";
    }

    CGRect v31 = v30;
    id v32 = [v16 allObjects];
    uint64_t v33 = v32;
    if (v32)
    {
      if ([v32 count])
      {
        double v34 = [v33 componentsJoinedByString:@", "];
        id v35 = +[NSString stringWithFormat:@"<%p> [%@]", v33, v34];
      }
      else
      {
        id v35 = +[NSString stringWithFormat:@"<%p> (empty)", v33];
      }
    }
    else
    {
      id v35 = @"<nil>";
    }

    *(_DWORD *)buf = 138412802;
    id v46 = v26;
    __int16 v47 = 2112;
    id v48 = v31;
    __int16 v49 = 2112;
    id v50 = v35;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "-> itemSources: %@\n   outgoing: %@\n   incoming: %@", buf, 0x20u);

    id v2 = v36;
  }
}

void sub_1000E20DC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) overlayController];
  id v1 = [v2 overlayContentView];
  [v1 layoutIfNeeded];
}

void sub_1000E4C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

UIColor *__cdecl sub_1000E5D18(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 controlBackgroundColor];
}

UIColor *__cdecl sub_1000E6838(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

NSString *sub_1000E9204(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = a3;
  double v8 = v5;
  if (v5)
  {
    NSComparisonResult v9 = UIContentSizeCategoryCompareToCategory(v5, UIContentSizeCategoryUnspecified);
    double v8 = v5;
    if (v9)
    {
      if (!v6
        || UIContentSizeCategoryCompareToCategory(v6, UIContentSizeCategoryUnspecified) == NSOrderedSame
        || (NSComparisonResult v10 = UIContentSizeCategoryCompareToCategory(v6, v5), v8 = v6, v10 != NSOrderedDescending))
      {
        if (!v7
          || UIContentSizeCategoryCompareToCategory(v7, UIContentSizeCategoryUnspecified) == NSOrderedSame
          || (NSComparisonResult v11 = UIContentSizeCategoryCompareToCategory(v7, v5), v8 = v7, v11 != NSOrderedAscending))
        {
          double v8 = v5;
        }
      }
    }
  }
  long long v12 = v8;

  return v12;
}

uint64_t sub_1000E93B0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 == v4)
  {
    uint64_t v11 = 0;
    goto LABEL_18;
  }
  if (!v3)
  {
    BOOL v6 = 1;
    if (v4) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t v11 = !v6;
    goto LABEL_18;
  }
  BOOL v6 = UIContentSizeCategoryCompareToCategory(v3, UIContentSizeCategoryUnspecified) == NSOrderedSame;
  if (!v5) {
    goto LABEL_17;
  }
LABEL_4:
  NSComparisonResult v7 = UIContentSizeCategoryCompareToCategory(v5, UIContentSizeCategoryUnspecified);
  if (v7) {
    BOOL v8 = 0;
  }
  else {
    BOOL v8 = v6;
  }
  if (v7) {
    char v9 = v6;
  }
  else {
    char v9 = 1;
  }
  uint64_t v10 = v8 - 1;
  if (v6) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 1;
  }
  if ((v9 & 1) == 0) {
    uint64_t v11 = UIContentSizeCategoryCompareToCategory(v3, v5);
  }
LABEL_18:

  return v11;
}

id sub_1000E9920(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained weatherConditions];
    if (!v3) {
      goto LABEL_8;
    }
    if (sub_1000BBB44(v2) == 5)
    {
      id v4 = +[UIFont systemFontOfSize:14.0 weight:UIFontWeightMedium];
      id v5 = [v4 fontDescriptor];
      BOOL v6 = [v5 fontDescriptorWithDesign:UIFontDescriptorSystemDesignRounded];

      NSComparisonResult v7 = +[UIFont fontWithDescriptor:v6 size:0.0];
      BOOL v8 = [v3 name];
      char v9 = +[UIImageSymbolConfiguration configurationWithFont:v7];
      uint64_t v10 = +[UIImage systemImageNamed:v8 withConfiguration:v9];
    }
    else
    {
      id v4 = [v3 name];
      BOOL v6 = [v3 palette];
      NSComparisonResult v7 = +[UIImageSymbolConfiguration configurationWithPaletteColors:v6];
      uint64_t v10 = +[UIImage systemImageNamed:v4 withConfiguration:v7];
    }

    if (!v10) {
LABEL_8:
    }
      uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

void sub_1000EBC88(_Unwind_Exception *a1)
{
}

id sub_1000EC2B4()
{
  if (qword_10160F9D0 != -1) {
    dispatch_once(&qword_10160F9D0, &stru_1012F9460);
  }
  unsigned __int16 v0 = (void *)qword_10160F9C8;

  return v0;
}

BOOL sub_1000EC308(uint64_t a1)
{
  int v1 = *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return v1 != atomic_fetch_add((atomic_uint *volatile)(*(void *)(a1 + 32) + 72), 0);
}

uint64_t sub_1000ED07C(void *a1)
{
  id v1 = a1;
  id v2 = [v1 title];
  uint64_t v3 = [v2 value];
  id v4 = (void *)v3;
  if (v3) {
    id v5 = (__CFString *)v3;
  }
  else {
    id v5 = &stru_101324E70;
  }
  BOOL v6 = v5;

  NSComparisonResult v7 = [v1 subtitle];
  uint64_t v8 = [v7 value];
  char v9 = (void *)v8;
  if (v8) {
    uint64_t v10 = (__CFString *)v8;
  }
  else {
    uint64_t v10 = &stru_101324E70;
  }
  uint64_t v11 = v10;

  [v1 coordinate];
  double v13 = v12;
  double v15 = v14;
  id v16 = [v1 styleAttributes];
  id v17 = [v16 styleAttributes];
  id v18 = v17;
  if (v17) {
    id v19 = v17;
  }
  else {
    id v19 = [GEOFeatureStyleAttributes init];
  }
  double v20 = v19;

  unint64_t v21 = (unint64_t)[(__CFString *)v6 hash];
  id v22 = [(__CFString *)v11 hash];

  id v23 = +[NSNumber numberWithInt:(int)(v13 * 10000.0)];
  id v24 = [v23 hash];

  CGFloat v25 = +[NSNumber numberWithInt:(int)(v15 * 10000.0)];
  id v26 = [v25 hash];

  id v27 = [v20 hash];
  if (objc_opt_respondsToSelector())
  {
    unsigned int v28 = [v1 isRouteStartOrEnd];
    uint64_t v29 = 32;
    if (!v28) {
      uint64_t v29 = 0;
    }
  }
  else
  {
    uint64_t v29 = 0;
  }
  uint64_t v30 = v21 ^ (2 * (void)v22) ^ (4 * (void)v24) ^ (8 * (void)v26) ^ (16 * (void)v27) ^ v29;

  return v30;
}

int64_t sub_1000EEFB4(id a1, PersonalizedItemSource *a2, PersonalizedItemSource *a3)
{
  id v4 = a3;
  if ((id)[(PersonalizedItemSource *)a2 sourceType] == (id)1) {
    int64_t v5 = -1;
  }
  else {
    int64_t v5 = (id)[(PersonalizedItemSource *)v4 sourceType] == (id)1;
  }

  return v5;
}

void sub_1000EF230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000EF2E4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 40);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)int64_t v5 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "GatherItems", "", v5, 2u);
  }
}

void sub_1000EF36C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  char v7 = (*(uint64_t (**)(void))(a1[5] + 16))();
  uint64_t v8 = sub_1000EC2B4();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_INFO);
  if (v7)
  {
    if (v9)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Reset counter has been reset, abandoning update", buf, 2u);
    }
  }
  else
  {
    if (v9)
    {
      *(_DWORD *)buf = 138412546;
      *(void *)&uint8_t buf[4] = v5;
      *(_WORD *)&unsigned char buf[12] = 2112;
      *(void *)&buf[14] = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Notifying observers of new items: %@ itemGroups: %@", buf, 0x16u);
    }

    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    id v59 = sub_100103FA8;
    id v60 = sub_100104860;
    id v61 = 0;
    uint64_t v49 = 0;
    id v50 = &v49;
    uint64_t v51 = 0x3032000000;
    id v52 = sub_100103FA8;
    id v53 = sub_100104860;
    id v54 = 0;
    uint64_t v10 = *(NSObject **)(a1[4] + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000839C4;
    block[3] = &unk_1012F9398;
    long long v30 = *(_OWORD *)(a1 + 5);
    id v11 = (id)v30;
    long long v46 = v30;
    void block[4] = a1[4];
    id v12 = v5;
    id v44 = v12;
    id v13 = v6;
    id v45 = v13;
    __int16 v47 = buf;
    id v48 = &v49;
    dispatch_sync(v10, block);
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    id v14 = *(id *)(*(void *)(a1[6] + 8) + 40);
    id v15 = [v14 countByEnumeratingWithState:&v39 objects:v57 count:16];
    if (v15)
    {
      uint64_t v16 = *(void *)v40;
      do
      {
        id v17 = 0;
        do
        {
          if (*(void *)v40 != v16) {
            objc_enumerationMutation(v14);
          }
          [*(id *)(*((void *)&v39 + 1) + 8 * (void)v17) personalizedItemManager:didChangeItems:itemGroups:a1[4], v12, v13, v30];
          id v17 = (char *)v17 + 1;
        }
        while (v15 != v17);
        id v15 = [v14 countByEnumeratingWithState:&v39 objects:v57 count:16];
      }
      while (v15);
    }

    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id v18 = *(id *)(*(void *)&buf[8] + 40);
    id v19 = [v18 countByEnumeratingWithState:&v35 objects:v56 count:16];
    if (v19)
    {
      uint64_t v20 = *(void *)v36;
      do
      {
        unint64_t v21 = 0;
        do
        {
          if (*(void *)v36 != v20) {
            objc_enumerationMutation(v18);
          }
          uint64_t v22 = *(void *)(*((void *)&v35 + 1) + 8 * (void)v21);
          id v23 = [v12 copy];
          (*(void (**)(uint64_t, id))(v22 + 16))(v22, v23);

          unint64_t v21 = (char *)v21 + 1;
        }
        while (v19 != v21);
        id v19 = [v18 countByEnumeratingWithState:&v35 objects:v56 count:16];
      }
      while (v19);
    }

    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id v24 = (id)v50[5];
    id v25 = [v24 countByEnumeratingWithState:&v31 objects:v55 count:16];
    if (v25)
    {
      uint64_t v26 = *(void *)v32;
      do
      {
        id v27 = 0;
        do
        {
          if (*(void *)v32 != v26) {
            objc_enumerationMutation(v24);
          }
          uint64_t v28 = *(void *)(*((void *)&v31 + 1) + 8 * (void)v27);
          id v29 = [v13 copy:v30, v31];
          (*(void (**)(uint64_t, id))(v28 + 16))(v28, v29);

          id v27 = (char *)v27 + 1;
        }
        while (v25 != v27);
        id v25 = [v24 countByEnumeratingWithState:&v31 objects:v55 count:16];
      }
      while (v25);
    }

    _Block_object_dispose(&v49, 8);
    _Block_object_dispose(buf, 8);
  }
}

void sub_1000EF7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose((const void *)(v47 - 160), 8);
  _Unwind_Resume(a1);
}

id sub_1000EF958()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem_shortcutType);
  switch(v1)
  {
    case 5:
      id v2 = self;
      uint64_t v3 = &selRef_schoolStyleAttributes;
      break;
    case 3:
      id v2 = self;
      uint64_t v3 = &selRef_workStyleAttributes;
      break;
    case 2:
      id v2 = self;
      uint64_t v3 = &selRef_homeStyleAttributes;
      break;
    default:
      id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24PersonalizedFavoriteItem__mapItem);
      uint64_t v3 = &selRef__styleAttributes;
      break;
  }
  id v4 = [v2 *v3];
  if (v4
    || (id result = [self markerStyleAttributes],
        (id v4 = result) != 0))
  {
    sub_1000FF33C((uint64_t *)&unk_1015D5300);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
    uint64_t v7 = sub_100100830(0, (unint64_t *)&qword_1015D9680);
    v15[0] = NSNumber.init(integerLiteral:)(65572).super.super.isa;
    sub_1000EFBF0((unint64_t *)&unk_1015D5310, (unint64_t *)&qword_1015D9680);
    AnyHashable.init<A>(_:)();
    v8.super.super.Class isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
    *(void *)(inited + 96) = v7;
    *(NSNumber *)(inited + 72) = v8;
    sub_1000EFC40(inited);
    if ((v1 & 0xFFFFFFFFFFFFFFFELL) != 2)
    {
      NSNumber.init(integerLiteral:)(65616);
      AnyHashable.init<A>(_:)();
      uint64_t v14 = v7;
      *(NSNumber *)&long long v13 = NSNumber.init(integerLiteral:)(3);
      sub_1000EFD84(&v13, v12);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_100351AD0(v12, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1000F351C((uint64_t)v15);
    }
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v11 = [self adornmentWithStyleAttributes:v4 additionalAttributes:isa];

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EFBF0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100100830(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000EFC40(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CCF10);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000FF27C(v6, (uint64_t)v15, &qword_1015CCF18);
    unint64_t result = sub_1000EFD94((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1000EFD84(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_OWORD *sub_1000EFD84(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1000EFD94(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_1000EFDD8(a1, v4);
}

unint64_t sub_1000EFDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10010A768(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_1000F351C((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

id sub_1000F03EC()
{
  if (qword_1016121D8 != -1) {
    dispatch_once(&qword_1016121D8, &stru_1012EFC18);
  }
  uint64_t v0 = (void *)qword_1016121D0;

  return v0;
}

void sub_1000F04BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void *sub_1000F0E20()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration);
  uint64_t v108 = OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView;
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView);
  swift_unknownObjectWeakLoadStrong();
  id v4 = v3;
  id v5 = sub_1000F2C80();
  id v6 = *(id *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_favoritesDataProvider);
  id v7 = sub_1000F4114();
  id v115 = v4;
  unint64_t v116 = 0xD000000000000010;
  unint64_t v117 = 0x8000000100F80BE0;
  id v118 = &off_1012DFF18;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  id v119 = v5;
  id v120 = v6;
  id v121 = v7;
  char v8 = (char *)objc_allocWithZone((Class)type metadata accessor for HomeListFeatureDiscoverySectionController());
  *(void *)&v8[OBJC_IVAR____TtC4Maps41HomeListFeatureDiscoverySectionController____lazy_storage___featureDiscoveryDataProvider] = 0;
  sub_1000F1C90((uint64_t)&v115, (uint64_t)v114);
  uint64_t v9 = &v8[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  uint64_t v10 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  long long v11 = v8;
  *(void *)&v8[v10] = sub_1000F45E4((uint64_t)_swiftEmptyArrayStorage);
  v11[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(void *)&v11[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(void *)&v11[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000F1C90((uint64_t)v114, (uint64_t)&v11[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  v113.unint64_t receiver = v11;
  v113.Class super_class = (Class)type metadata accessor for HomeListSectionController();
  Class super_class = v113.super_class;
  id v12 = [super init];
  sub_1000F1BD8((uint64_t)v114);
  sub_1000F1BD8((uint64_t)&v115);
  id v13 = v12;
  uint64_t v14 = sub_1000F41C8(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  if (v16 >= v15 >> 1) {
    uint64_t v14 = sub_1000F41C8((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  long long v14[2] = v16 + 1;
  long long v17 = &v14[2 * v16];
  uint64_t v106 = v13;
  void v17[4] = v13;
  v17[5] = &off_1012DCBD8;
  id v18 = *(void **)(v2 + v108);
  swift_unknownObjectWeakLoadStrong();
  id v19 = v18;
  id v20 = sub_1000F2C80();
  id v21 = v6;
  id v22 = sub_1000F4114();
  id v115 = v19;
  unint64_t v116 = 0x6974736567677553;
  unint64_t v117 = 0xEB00000000736E6FLL;
  id v118 = &off_1012DFF18;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  id v119 = v20;
  id v120 = v21;
  id v121 = v22;
  id v23 = (char *)objc_allocWithZone((Class)type metadata accessor for HomeListSuggestionsSectionController());
  uint64_t v24 = OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController_sharedTripsDataProvider;
  *(void *)&v23[v24] = [objc_allocWithZone((Class)SharedTripsDataProvider) initWithCombineAllTrips:1];
  *(void *)&v23[OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider] = 0;
  sub_1000F1C90((uint64_t)&v115, (uint64_t)v114);
  id v25 = &v23[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)id v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;
  uint64_t v26 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  id v27 = v23;
  *(void *)&v23[v26] = sub_1000F45E4((uint64_t)_swiftEmptyArrayStorage);
  v27[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(void *)&v27[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(void *)&v27[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000F1C90((uint64_t)v114, (uint64_t)&v27[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  v112.unint64_t receiver = v27;
  v112.Class super_class = super_class;
  id v28 = [super init];
  sub_1000F1BD8((uint64_t)v114);
  sub_1000F1BD8((uint64_t)&v115);
  unint64_t v29 = v14[2];
  unint64_t v30 = v14[3];
  id v31 = v28;
  if (v29 >= v30 >> 1) {
    uint64_t v14 = sub_1000F41C8((void *)(v30 > 1), v29 + 1, 1, v14);
  }
  long long v14[2] = v29 + 1;
  long long v32 = &v14[2 * v29];
  id v105 = v31;
  v32[4] = v31;
  void v32[5] = &off_1012DF490;
  long long v33 = *(void **)(v2 + v108);
  swift_unknownObjectWeakLoadStrong();
  id v34 = v33;
  id v35 = sub_1000F2C80();
  id v36 = v21;
  id v37 = sub_1000F4114();
  id v115 = v34;
  unint64_t v116 = 0x657469726F766146;
  unint64_t v117 = 0xE900000000000073;
  id v118 = &off_1012DFF18;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  id v119 = v35;
  id v120 = v36;
  id v121 = v37;
  id v38 = objc_allocWithZone((Class)type metadata accessor for HomeListFavoritesSectionController());
  id v39 = sub_10003E404((uint64_t)&v115);
  unint64_t v40 = v14[2];
  unint64_t v41 = v14[3];
  id v42 = v39;
  if (v40 >= v41 >> 1)
  {
    BOOL v101 = v41 > 1;
    id v102 = v42;
    uint64_t v103 = v101;
    uint64_t v14 = sub_1000F41C8((void *)v103, v40 + 1, 1, v14);
    id v42 = v102;
  }
  long long v14[2] = v40 + 1;
  long long v43 = &v14[2 * v40];
  id v104 = v42;
  v43[4] = v42;
  void v43[5] = &off_1012DCD70;
  id v44 = *(void **)(v2 + v108);
  swift_unknownObjectWeakLoadStrong();
  id v45 = v44;
  id v46 = sub_1000F2C80();
  id v47 = v36;
  id v48 = sub_1000F4114();
  id v115 = v45;
  unint64_t v116 = 0x73746E65636552;
  unint64_t v117 = 0xE700000000000000;
  id v118 = &off_1012DFF18;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  id v119 = v46;
  id v120 = v47;
  id v121 = v48;
  id v49 = objc_allocWithZone((Class)type metadata accessor for HomeListRecentsSectionController());
  id v50 = sub_100048434((uint64_t)&v115);
  unint64_t v51 = v14[2];
  unint64_t v52 = v14[3];
  id v53 = v50;
  if (v51 >= v52 >> 1) {
    uint64_t v14 = sub_1000F41C8((void *)(v52 > 1), v51 + 1, 1, v14);
  }
  long long v14[2] = v51 + 1;
  id v54 = &v14[2 * v51];
  v54[4] = v53;
  v54[5] = &off_1012E4ED8;
  if (qword_1015CBDD8 != -1) {
    swift_once();
  }
  if ((byte_1016118B0 & 1) == 0)
  {
    uint64_t v55 = *(void **)(v2 + v108);
    swift_unknownObjectWeakLoadStrong();
    id v56 = v55;
    id v57 = sub_1000F2C80();
    id v58 = v47;
    id v59 = sub_1000F4114();
    id v115 = v56;
    unint64_t v116 = 0x697463656C6C6F43;
    unint64_t v117 = 0xEB00000000736E6FLL;
    id v118 = &off_1012DFF18;
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakInit();
    swift_unknownObjectRelease();
    id v119 = v57;
    id v120 = v58;
    id v121 = v59;
    id v60 = (char *)objc_allocWithZone((Class)type metadata accessor for HomeListCollectionsSectionController());
    uint64_t v61 = OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController_collectionsDataProvider;
    *(void *)&v60[v61] = [objc_allocWithZone((Class)CollectionsDataProvider) initWithContext:2 observeInfo:0 observeContents:v104 v105];
    uint64_t v62 = &v60[OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController____lazy_storage___maxNumberOfCollections];
    *(void *)uint64_t v62 = 0;
    v62[8] = 1;
    sub_1000F1C90((uint64_t)&v115, (uint64_t)v114);
    unint64_t v63 = &v60[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
    *(_OWORD *)unint64_t v63 = 0u;
    *((_OWORD *)v63 + 1) = 0u;
    uint64_t v64 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
    uint64_t v65 = v60;
    *(void *)&v60[v64] = sub_1000F45E4((uint64_t)_swiftEmptyArrayStorage);
    v65[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
    *(void *)&v65[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
    *(void *)&v65[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
    sub_1000F1C90((uint64_t)v114, (uint64_t)&v65[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

    v111.unint64_t receiver = v65;
    v111.Class super_class = super_class;
    id v66 = [super init];
    sub_1000F1BD8((uint64_t)v114);
    sub_1000F1BD8((uint64_t)&v115);
    unint64_t v67 = v14[2];
    unint64_t v68 = v14[3];
    id v69 = v66;
    if (v67 >= v68 >> 1) {
      uint64_t v14 = sub_1000F41C8((void *)(v68 > 1), v67 + 1, 1, v14);
    }
    long long v14[2] = v67 + 1;
    id v70 = &v14[2 * v67];
    v70[4] = v69;
    v70[5] = &off_1012E4488;
  }
  if (GEOConfigGetBOOL())
  {
    BOOL v71 = *(void **)(v2 + v108);
    swift_unknownObjectWeakLoadStrong();
    id v72 = v71;
    id v73 = sub_1000F2C80();
    id v74 = v47;
    id v75 = sub_1000F4114();
    id v115 = v72;
    unint64_t v116 = 0xD000000000000012;
    unint64_t v117 = 0x8000000100F7EF10;
    id v118 = &off_1012DFF18;
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakInit();
    swift_unknownObjectRelease();
    id v119 = v73;
    id v120 = v74;
    id v121 = v75;
    long long v76 = objc_allocWithZone((Class)type metadata accessor for HomeListCuratedCollectionsSectionController());
    v76[OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController_needsResetScrollOffset] = 0;
    *(void *)&v76[OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath] = 0;
    sub_1000F1C90((uint64_t)&v115, (uint64_t)v114);
    id v77 = &v76[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
    *id v77 = 0u;
    v77[1] = 0u;
    uint64_t v78 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
    uint64_t v79 = v76;
    *(void *)&v76[v78] = sub_1000F45E4((uint64_t)_swiftEmptyArrayStorage);
    v79[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
    *(void *)&v79[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
    *(void *)&v79[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
    sub_1000F1C90((uint64_t)v114, (uint64_t)&v79[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

    v109.unint64_t receiver = v79;
    v109.Class super_class = super_class;
    id v80 = [super init];
    sub_1000F1BD8((uint64_t)v114);
    sub_1000F1BD8((uint64_t)&v115);
    unint64_t v81 = v14[2];
    unint64_t v82 = v14[3];
    id v83 = v80;
    if (v81 >= v82 >> 1) {
      uint64_t v14 = sub_1000F41C8((void *)(v82 > 1), v81 + 1, 1, v14);
    }
    long long v14[2] = v81 + 1;
    unint64_t v84 = &v14[2 * v81];
    v84[4] = v83;
    v84[5] = &off_1012E4988;
  }
  int v85 = *(void **)(v2 + v108);
  swift_unknownObjectWeakLoadStrong();
  id v86 = v85;
  id v87 = sub_1000F2C80();
  id v88 = v47;
  id v89 = sub_1000F4114();
  id v115 = v86;
  unint64_t v116 = 0x7265746F6F46;
  unint64_t v117 = 0xE600000000000000;
  id v118 = &off_1012DFF18;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  id v119 = v87;
  id v120 = v88;
  id v121 = v89;
  uint64_t v90 = (char *)objc_allocWithZone((Class)type metadata accessor for HomeListFooterSectionController());
  uint64_t v91 = OBJC_IVAR____TtC4Maps31HomeListFooterSectionController_rapReportMenuProvider;
  *(void *)&v90[v91] = [objc_allocWithZone((Class)RAPReportMenuProvider) init];
  sub_1000F1C90((uint64_t)&v115, (uint64_t)v114);
  uint64_t v92 = &v90[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)uint64_t v92 = 0u;
  *((_OWORD *)v92 + 1) = 0u;
  uint64_t v93 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  unsigned int v94 = v90;
  *(void *)&v90[v93] = sub_1000F45E4((uint64_t)_swiftEmptyArrayStorage);
  v94[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(void *)&v94[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(void *)&v94[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000F1C90((uint64_t)v114, (uint64_t)&v94[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  v110.unint64_t receiver = v94;
  v110.Class super_class = super_class;
  id v95 = [super init];
  sub_1000F1BD8((uint64_t)v114);
  sub_1000F1BD8((uint64_t)&v115);
  unint64_t v96 = v14[2];
  unint64_t v97 = v14[3];
  id v98 = v95;
  if (v96 >= v97 >> 1) {
    uint64_t v14 = sub_1000F41C8((void *)(v97 > 1), v96 + 1, 1, v14);
  }
  long long v14[2] = v96 + 1;
  id v99 = &v14[2 * v96];
  v99[4] = v98;
  v99[5] = &off_1012E2888;

  return v14;
}

uint64_t sub_1000F19F8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB8))();
  if (result)
  {
    uint64_t result = (uint64_t)[a1 active];
    if (result)
    {
      uint64_t v5 = (uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
      sub_1000F1C90((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v15);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      sub_1000F1BD8((uint64_t)v15);
      if (Strong)
      {
        swift_getObjectType();
        if (swift_conformsToProtocol2()) {
          id v7 = v2;
        }
        else {
          id v7 = 0;
        }
        if (!v7) {
          goto LABEL_19;
        }
        id v8 = v2;
        sub_1000F1D84();

        swift_unknownObjectRelease();
      }
      sub_1000F1C90(v5, (uint64_t)v15);
      uint64_t v9 = swift_unknownObjectWeakLoadStrong();
      uint64_t result = sub_1000F1BD8((uint64_t)v15);
      if (!v9) {
        return result;
      }
      swift_getObjectType();
      uint64_t v10 = swift_conformsToProtocol2();
      if (v10) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v10) {
        id v12 = v2;
      }
      else {
        id v12 = 0;
      }
      if (v12)
      {
        uint64_t ObjectType = swift_getObjectType();
        id v14 = v2;
        sub_1000F256C(v12, 1, v9, ObjectType, v11);

        return swift_unknownObjectRelease();
      }
LABEL_19:
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000F1BD8(uint64_t a1)
{
  return a1;
}

void destroy for HomeListSectionController.Configuration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t sub_1000F1C90(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *initializeWithCopy for HomeListSectionController.Configuration(void *a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  a1[2] = *(void *)(a2 + 16);
  id v6 = v4;
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  a1[4] = *(void *)(a2 + 32);
  swift_unknownObjectWeakCopyInit();
  id v7 = *(void **)(a2 + 48);
  id v8 = *(void **)(a2 + 56);
  a1[6] = v7;
  a1[7] = v8;
  uint64_t v9 = *(void **)(a2 + 64);
  a1[8] = v9;
  id v10 = v7;
  id v11 = v8;
  id v12 = v9;
  return a1;
}

void sub_1000F1D84()
{
  if (qword_1015CBD40 == -1) {
    goto LABEL_2;
  }
LABEL_35:
  swift_once();
LABEL_2:
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611778);
  swift_unknownObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)id v4 = 136315138;
    swift_unknownObjectRetain();
    sub_1000FF33C(&qword_1015CF1D8);
    uint64_t v5 = String.init<A>(describing:)();
    sub_1000F2280(v5, v6, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Data provider %s signaled it has updated. Checking all data providers.", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders);
  uint64_t v10 = *(void *)(v7 + 56);
  uint64_t v9 = v7 + 56;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders) + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  uint64_t v13 = v12 & v8;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (v13)
  {
LABEL_8:
    v13 &= v13 - 1;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v16 >= v14) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(v9 + 8 * v16);
    ++v15;
    if (!v17)
    {
      int64_t v15 = v16 + 1;
      if (v16 + 1 >= v14) {
        goto LABEL_28;
      }
      uint64_t v17 = *(void *)(v9 + 8 * v15);
      if (!v17)
      {
        int64_t v15 = v16 + 2;
        if (v16 + 2 >= v14) {
          goto LABEL_28;
        }
        uint64_t v17 = *(void *)(v9 + 8 * v15);
        if (!v17)
        {
          int64_t v18 = v16 + 3;
          if (v18 >= v14)
          {
LABEL_28:
            swift_release();
            uint64_t v24 = Logger.logObject.getter();
            os_log_type_t v25 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v24, v25))
            {
              uint64_t v26 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v26 = 0;
              _os_log_impl((void *)&_mh_execute_header, v24, v25, "All data providers have loaded their initial data. Signaling loading has finished.", v26, 2u);
              swift_slowDealloc();
            }

            sub_1000F376C();
            return;
          }
          uint64_t v17 = *(void *)(v9 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v15 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_34;
              }
              if (v15 >= v14) {
                goto LABEL_28;
              }
              uint64_t v17 = *(void *)(v9 + 8 * v15);
              ++v18;
              if (v17) {
                goto LABEL_22;
              }
            }
          }
          int64_t v15 = v18;
        }
      }
    }
LABEL_22:
    uint64_t v13 = (v17 - 1) & v17;
LABEL_23:
    if (([(id)swift_unknownObjectRetain() hasInitialData] & 1) == 0) {
      break;
    }
    swift_unknownObjectRelease();
    if (v13) {
      goto LABEL_8;
    }
  }
  swift_unknownObjectRetain_n();
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)id v21 = 136315138;
    swift_unknownObjectRetain();
    sub_1000FF33C((uint64_t *)&unk_1015D7390);
    uint64_t v22 = String.init<A>(describing:)();
    sub_1000F2280(v22, v23, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Data provider %s does not have its initial data. Will not send loading signal.", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1000F2248(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1000F2280(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000F23B0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000F2354((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000F2354((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1000FF22C((uint64_t)v12);
  return v7;
}

uint64_t sub_1000F2354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000F23B0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000F3E78(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000F256C(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1000FF33C(&qword_1015D7380);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a5;
  id v9 = a1;
  sub_1000F2788(inited, a2);
  swift_setDeallocating();
  sub_1000FF33C(&qword_1015CF1F0);
  return swift_arrayDestroy();
}

uint64_t sub_1000F2614()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_isActive) != 1) {
    goto LABEL_10;
  }
  uint64_t v1 = v0;
  id v2 = sub_1000F2C80();
  unsigned __int8 v3 = [v2 hasInitialData];

  if (v3)
  {
    unint64_t v4 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100F5DFF0;
    *(void *)(v5 + 32) = sub_1000F2C80();
    specialized Array._endMutation()();
    unint64_t v4 = v5;
  }
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer);
  if (v7 && (unsigned __int8 v8 = [v7 isValid], v6 >= 1) && (v8 & 1) != 0)
  {
LABEL_10:
    char v9 = 0;
  }
  else
  {
    uint64_t v10 = v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate;
    swift_beginAccess();
    if (*(void *)(*(void *)v10 + 16)) {
      char v9 = 1;
    }
    else {
      char v9 = *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate) ^ 1;
    }
  }
  return v9 & 1;
}

uint64_t sub_1000F2788(uint64_t result, char a2)
{
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_isActive) == 1)
  {
    uint64_t v3 = v2;
    uint64_t v5 = result;
    sub_1000F2A44();
    id v6 = sub_1000F2C80();
    unsigned __int8 v7 = [v6 hasInitialData];

    if (v7)
    {
      unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    else
    {
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_100F5DFF0;
      *(void *)(v9 + 32) = sub_1000F2C80();
      os_log_type_t v25 = (void *)v9;
      specialized Array._endMutation()();
      unint64_t v8 = v9;
    }
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer);
    if (!v11 || (uint64_t result = (uint64_t)[v11 isValid], v10 < 1) || (result & 1) == 0)
    {
      char v12 = sub_1000F2614();
      uint64_t v13 = OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate;
      if ((v12 & 1) != 0
        && *(unsigned char *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate) != (a2 & 1)
        && *(unsigned char *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate) == 1)
      {
        sub_10005D8CC();
        uint64_t v13 = OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate;
      }
      *(unsigned char *)(v3 + v13) = a2 & 1;
      int64_t v14 = *(void *)(v5 + 16);
      int64_t v15 = _swiftEmptyArrayStorage;
      if (v14)
      {
        os_log_type_t v25 = _swiftEmptyArrayStorage;
        sub_1000F3570(0, v14, 0);
        int64_t v15 = _swiftEmptyArrayStorage;
        int64_t v16 = (long long *)(v5 + 32);
        do
        {
          long long v17 = *v16;
          os_log_type_t v25 = v15;
          unint64_t v19 = v15[2];
          unint64_t v18 = v15[3];
          long long v23 = v17;
          id v20 = (id)v17;
          if (v19 >= v18 >> 1)
          {
            sub_1000F3570(v18 > 1, v19 + 1, 1);
            int64_t v15 = v25;
          }
          _OWORD v15[2] = v19 + 1;
          *(_OWORD *)&v15[2 * v19 + 4] = v23;
          ++v16;
          --v14;
        }
        while (v14);
      }
      swift_beginAccess();
      uint64_t v21 = v15[2];
      if (v21)
      {
        uint64_t v22 = v15 + 5;
        do
        {
          sub_1000F2DBC(v24, (id)*(v22 - 1), *v22);

          v22 += 2;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        [(id)result homeSetNeedsUpdate];
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_1000F2A44()
{
  uint64_t v1 = v0;
  id v2 = sub_1000F2C80();
  unsigned __int8 v3 = [v2 hasInitialData];

  if (v3)
  {
    unint64_t v4 = (unint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100F5DFF0;
    *(void *)(v5 + 32) = sub_1000F2C80();
    v17[0] = v5;
    specialized Array._endMutation()();
    unint64_t v4 = v5;
  }
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer;
  unint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer);
  if (v6 < 1)
  {
    [v8 invalidate];
    int64_t v16 = *(void **)(v1 + v7);
    *(void *)(v1 + v7) = 0;
  }
  else if (!v8)
  {
    GEOConfigGetDouble();
    double v10 = v9;
    uint64_t v11 = self;
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    void v17[4] = sub_100260458;
    v17[5] = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_10025DB88;
    v17[3] = &unk_1012E0020;
    uint64_t v13 = _Block_copy(v17);
    swift_release();
    id v14 = [v11 scheduledTimerWithTimeInterval:0 repeats:v13 block:v10];
    _Block_release(v13);
    int64_t v15 = *(void **)(v1 + v7);
    *(void *)(v1 + v7) = v14;

    sub_10008070C();
  }
}

id sub_1000F2C80()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___suggestionsDataProvider;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___suggestionsDataProvider);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___suggestionsDataProvider);
  }
  else
  {
    id v4 = objc_allocWithZone((Class)MapsSuggestionsBlockFilter);
    void v11[4] = sub_1000536C4;
    v11[5] = 0;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    void v11[2] = sub_10005366C;
    _OWORD v11[3] = &unk_1012E0070;
    uint64_t v5 = _Block_copy(v11);
    id v6 = [v4 initWithBlock:v5];
    _Block_release(v5);
    swift_release();
    id v7 = [objc_allocWithZone((Class)SuggestionsDataProvider) initWithViewMode:0 filter:v6 includePlaceholderShortcuts:1];

    unint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_1000F2DBC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  uint64_t v21 = a3;
  sub_1000F347C((uint64_t)v30, a2, a3);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v20 = a1;
  uint64_t v11 = ~v9;
  do
  {
    long long v22 = *(_OWORD *)(*(void *)(v7 + 48) + 16 * v10);
    id v12 = (id)v22;
    sub_1000FF33C(&qword_1015CF1F0);
    if (!swift_dynamicCast())
    {
      uint64_t v29 = 0;
      long long v27 = 0u;
      long long v28 = 0u;
      sub_1000FF2E0((uint64_t)&v27, &qword_1015CF1E0);
LABEL_4:

      goto LABEL_5;
    }
    v30[0] = v27;
    v30[1] = v28;
    uint64_t v31 = v29;
    os_log_type_t v25 = a2;
    uint64_t v26 = v21;
    id v13 = a2;
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v24 = 0;
      long long v22 = 0u;
      long long v23 = 0u;
      sub_1000FF2E0((uint64_t)&v22, &qword_1015CF1E0);
      sub_1000F351C((uint64_t)v30);
      goto LABEL_4;
    }
    long long v27 = v22;
    long long v28 = v23;
    uint64_t v29 = v24;
    char v14 = static AnyHashable.== infix(_:_:)();
    sub_1000F351C((uint64_t)&v27);
    sub_1000F351C((uint64_t)v30);

    if (v14)
    {

      swift_bridgeObjectRelease();
      long long v17 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v10);
      *id v20 = v17;
      id v18 = (id)v17;
      return 0;
    }
LABEL_5:
    unint64_t v10 = (v10 + 1) & v11;
  }
  while (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  swift_bridgeObjectRelease();
  a1 = v20;
LABEL_13:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v30[0] = *v3;
  *id v3 = 0x8000000000000000;
  id v16 = a2;
  sub_1000F3048(v16, v21, v10, isUniquelyReferenced_nonNull_native);
  *id v3 = *(void *)&v30[0];
  swift_bridgeObjectRelease();
  *a1 = v16;
  a1[1] = v21;
  return 1;
}

void sub_1000F3048(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1000F46F8();
    }
    else
    {
      if (v9 > v8)
      {
        sub_10013FEA4();
        goto LABEL_18;
      }
      sub_1000F42D8();
    }
    uint64_t v10 = *v4;
    Hasher.init(_seed:)();
    sub_1000F347C((uint64_t)v31, a1, a2);
    Swift::Int v11 = Hasher._finalize()();
    uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
    a3 = v11 & ~v12;
    if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v13 = ~v12;
      while (1)
      {
        long long v23 = *(_OWORD *)(*(void *)(v10 + 48) + 16 * a3);
        id v14 = (id)v23;
        sub_1000FF33C(&qword_1015CF1F0);
        if (!swift_dynamicCast()) {
          break;
        }
        v31[0] = v28;
        v31[1] = v29;
        uint64_t v32 = v30;
        uint64_t v26 = a1;
        uint64_t v27 = a2;
        id v15 = a1;
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v25 = 0;
          long long v23 = 0u;
          long long v24 = 0u;
          sub_1000FF2E0((uint64_t)&v23, &qword_1015CF1E0);
          sub_1000F351C((uint64_t)v31);
          goto LABEL_11;
        }
        long long v28 = v23;
        long long v29 = v24;
        uint64_t v30 = v25;
        char v16 = static AnyHashable.== infix(_:_:)();
        sub_1000F351C((uint64_t)&v28);
        sub_1000F351C((uint64_t)v31);

        if (v16) {
          goto LABEL_21;
        }
LABEL_12:
        a3 = (a3 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          goto LABEL_18;
        }
      }
      uint64_t v30 = 0;
      long long v28 = 0u;
      long long v29 = 0u;
      sub_1000FF2E0((uint64_t)&v28, &qword_1015CF1E0);
LABEL_11:

      goto LABEL_12;
    }
  }
LABEL_18:
  uint64_t v17 = *v22;
  *(void *)(*v22 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  id v18 = (void *)(*(void *)(v17 + 48) + 16 * a3);
  void *v18 = a1;
  v18[1] = a2;
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
LABEL_21:
    sub_1000FF33C(&qword_1015CF1F8);
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    *(void *)(v17 + 16) = v21;
  }
}

uint64_t sub_1000F32AC(void *a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    sub_1000F347C((uint64_t)v22, a1, a2);
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v9 = ~v7;
      while (1)
      {
        long long v14 = *(_OWORD *)(*(void *)(a3 + 48) + 16 * v8);
        id v10 = (id)v14;
        sub_1000FF33C(&qword_1015CF1F0);
        if (!swift_dynamicCast()) {
          break;
        }
        v22[0] = v19;
        v22[1] = v20;
        uint64_t v23 = v21;
        uint64_t v17 = a1;
        uint64_t v18 = a2;
        id v11 = a1;
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v16 = 0;
          long long v14 = 0u;
          long long v15 = 0u;
          sub_10010A7C4((uint64_t)&v14);
          sub_1000F351C((uint64_t)v22);
          goto LABEL_5;
        }
        long long v19 = v14;
        long long v20 = v15;
        uint64_t v21 = v16;
        char v12 = static AnyHashable.== infix(_:_:)();
        sub_1000F351C((uint64_t)&v19);
        sub_1000F351C((uint64_t)v22);

        if (v12) {
          return 1;
        }
LABEL_6:
        unint64_t v8 = (v8 + 1) & v9;
        if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          return 0;
        }
      }
      uint64_t v21 = 0;
      long long v19 = 0u;
      long long v20 = 0u;
      sub_10010A7C4((uint64_t)&v19);
LABEL_5:

      goto LABEL_6;
    }
  }
  return 0;
}

uint64_t sub_1000F347C(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v8 = a2;
  uint64_t v9 = a3;
  id v3 = a2;
  sub_1000FF33C(&qword_1015CF1F0);
  if (swift_dynamicCast())
  {
    v10[0] = v5;
    v10[1] = v6;
    uint64_t v11 = v7;
    AnyHashable.hash(into:)();
    return sub_1000F351C((uint64_t)v10);
  }
  else
  {
    uint64_t v7 = 0;
    long long v5 = 0u;
    long long v6 = 0u;
    return sub_1000FF2E0((uint64_t)&v5, &qword_1015CF1E0);
  }
}

uint64_t sub_1000F351C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000F3570(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000F3590(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_1000F3590(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C((uint64_t *)&unk_1015D6FB0);
    id v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000FF33C(&qword_1015CF1F8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1000F376C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  id v50 = *(const char **)(v2 - 8);
  __chkstk_darwin(v2);
  id v49 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignpostID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = ((char *)&v41 - v9);
  uint64_t v11 = type metadata accessor for OSSignposter();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSingpostState))
  {
    id v44 = v8;
    uint64_t v45 = v2;
    uint64_t v48 = OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSingpostState;
    uint64_t v46 = v4;
    uint64_t v15 = qword_1015CBD40;
    swift_retain();
    if (v15 != -1) {
      swift_once();
    }
    os_log_t v51 = v10;
    uint64_t v16 = type metadata accessor for Logger();
    sub_1000F2248(v16, (uint64_t)qword_101611778);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      long long v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Signaling section loading has finished. No more unloaded section controllers.", v19, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_proactiveTraySignposter, v11);
    uint64_t v47 = v1;
    uint64_t v20 = v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName;
    uint64_t v21 = *(const char **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName);
    char v22 = *(unsigned char *)(v20 + 16);
    uint64_t v23 = OSSignposter.logHandle.getter();
    os_log_t v24 = v51;
    OSSignpostIntervalState.signpostID.getter();
    int v43 = static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
    {

      (*(void (**)(os_log_t, uint64_t))(v5 + 8))(v24, v46);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_26:
      *(void *)(v47 + v4_Block_object_dispose(&STACK[0x358], 8) = 0;
      swift_release();
      swift_release();
      return;
    }
    uint64_t v41 = v12;
    uint64_t v42 = v11;
    if (v22)
    {
      if (!((unint64_t)v21 >> 32))
      {
        uint64_t v26 = v45;
        long long v28 = v49;
        uint64_t v27 = v50;
        if (v21 >> 11 == 27)
        {
LABEL_30:
          __break(1u);
          return;
        }
        if (v21 >> 16 <= 0x10)
        {
          long long v29 = v23;
          uint64_t v25 = &v52;
          goto LABEL_22;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      if (v21)
      {
        uint64_t v25 = v21;
        uint64_t v26 = v45;
        long long v28 = v49;
        uint64_t v27 = v50;
        long long v29 = v23;
LABEL_22:
        swift_retain();
        checkForErrorAndConsumeState(state:)();
        swift_release();
        if ((*((unsigned int (**)(char *, uint64_t))v27 + 11))(v28, v26) == enum case for OSSignpostError.doubleEnd(_:))
        {
          id v34 = "[Error] Interval already ended";
        }
        else
        {
          (*((void (**)(char *, uint64_t))v27 + 1))(v28, v26);
          id v34 = "";
        }
        id v50 = v34;
        id v35 = v44;
        os_log_t v36 = v51;
        uint64_t v37 = v46;
        (*(void (**)(char *, os_log_t, uint64_t))(v5 + 16))(v44, v51, v46);
        id v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v38 = 0;
        os_signpost_id_t v39 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v29, (os_signpost_type_t)v43, v39, v25, v50, v38, 2u);
        swift_slowDealloc();

        unint64_t v40 = *(void (**)(os_log_t, uint64_t))(v5 + 8);
        v40(v36, v37);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v42);
        v40((os_log_t)v35, v37);
        goto LABEL_26;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
  if (qword_1015CBD40 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_1000F2248(v30, (uint64_t)qword_101611778);
  os_log_t v51 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v51, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v31, "Lacking signpost state when trying to signal loading completed.", v32, 2u);
    swift_slowDealloc();
  }
  os_log_t v33 = v51;
}

unsigned char *sub_1000F3E3C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1000F3E78(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000F3F10(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001EB4EC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1001EB4EC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000F3F10(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000F4088(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000F4088(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000FF33C((uint64_t *)&unk_1015D5A40);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000F40F0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive);
}

uint64_t sub_1000F4104()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive);
}

id sub_1000F4114()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___homeResultDataProvider;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___homeResultDataProvider);
  id v3 = v2;
  if (v2 == (void *)1)
  {
    if (GEOConfigGetBOOL()) {
      id v3 = [objc_allocWithZone((Class)HomeResultDataProvider) initWithDelegate:v0];
    }
    else {
      id v3 = 0;
    }
    unint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_10010B3BC(v4);
  }
  sub_1000F41B8(v2);
  return v3;
}

id sub_1000F41B8(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void *sub_1000F41C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D7380);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10010A65C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F42D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C(&qword_1015CF208);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v9) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    long long v27 = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    Hasher.init(_seed:)();
    long long v31 = v27;
    id v19 = (id)v27;
    sub_1000FF33C(&qword_1015CF1F0);
    if (swift_dynamicCast())
    {
      v32[0] = v28;
      v32[1] = v29;
      uint64_t v33 = v30;
      AnyHashable.hash(into:)();
      sub_1000F351C((uint64_t)v32);
    }
    else
    {
      uint64_t v30 = 0;
      long long v28 = 0u;
      long long v29 = 0u;
      sub_1000FF2E0((uint64_t)&v28, &qword_1015CF1E0);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v13) = v27;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_1000F45E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CCFE8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1001EA990((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000F46F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C(&qword_1015CF208);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    id v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_36;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_36;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_36;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_42;
                  }
                  if (v12 >= v9) {
                    goto LABEL_36;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      long long v28 = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
      Hasher.init(_seed:)();
      long long v32 = v28;
      id v19 = (id)v28;
      sub_1000FF33C(&qword_1015CF1F0);
      if (swift_dynamicCast())
      {
        v33[0] = v29;
        v33[1] = v30;
        uint64_t v34 = v31;
        AnyHashable.hash(into:)();
        sub_1000F351C((uint64_t)v33);
      }
      else
      {
        uint64_t v31 = 0;
        long long v29 = 0u;
        long long v30 = 0u;
        sub_1000FF2E0((uint64_t)&v29, &qword_1015CF1E0);
      }
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_OWORD *)(*(void *)(v4 + 48) + 16 * v13) = v28;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000F4A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v5 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5);
  uint64_t v31 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v7);
  UICollectionLayoutListConfiguration.init(appearance:)();
  sub_1000F1C90((uint64_t)v3 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v35);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v35);
  if (!Strong)
  {
LABEL_12:
    id v27 = [self clearColor];
    UICollectionLayoutListConfiguration.backgroundColor.setter();
    UICollectionLayoutListConfiguration.headerTopPadding.setter();
    sub_1000F4F24(v34);
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
    sub_100100830(0, (unint64_t *)&unk_1015D14E0);
    long long v28 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    [v28 contentInsets];
    [v28 setContentInsets:0.0];
    [v28 contentInsets];
    [v28 setContentInsets:];
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return (uint64_t)v28;
  }
  v30[1] = a3;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    int64_t v16 = v3;
  }
  else {
    int64_t v16 = 0;
  }
  if (v16)
  {
    id v17 = v3;
    id v18 = sub_1000F5CB8();
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;
    uint64_t v22 = *(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    if (v22)
    {
      uint64_t v23 = v19;
      v30[0] = v12;
      uint64_t v24 = v11;
      uint64_t v25 = *(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
      sub_1000F71E8(v22);
      sub_1000F71E8(v22);
      id v26 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000F517C(v26, v23, v21, 0, v25, v35);
      uint64_t v11 = v24;
      uint64_t v12 = v30[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      memset(v35, 0, 64);

      swift_bridgeObjectRelease();
    }

    if (*(void *)&v35[0])
    {
      sub_1000FF2E0((uint64_t)v35, (uint64_t *)&unk_1015DB0D0);
      (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v33);
      UICollectionLayoutListConfiguration.headerMode.setter();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      sub_1000FF2E0((uint64_t)v35, (uint64_t *)&unk_1015DB0D0);
    }
    goto LABEL_12;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F4F24(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000F4F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  IndexPath.section.getter();
  id v9 = sub_1000806A8();
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

  if (!(void)v27) {
    return 0;
  }
  uint64_t v10 = sub_1001034C8((void *)v27);

  if (!v10) {
    return 0;
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v10) + 0x1A0);
  uint64_t v12 = v10;
  uint64_t v13 = (void *)v11(a4, a2, a3);

  if (!v13)
  {

    return 0;
  }
  uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  if (!v14)
  {
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    goto LABEL_9;
  }
  uint64_t v15 = *(void *)(v5 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
  sub_1000F71E8(*(void *)(v5 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot));
  sub_1000F71E8(v14);
  id v16 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000F517C(v16, a2, a3, 0, v15, &v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!(void)v23)
  {
LABEL_9:
    sub_1000FF2E0((uint64_t)&v23, (uint64_t *)&unk_1015DB0D0);

    return 0;
  }
  long long v27 = v23;
  v28[0] = v24;
  v28[1] = v25;
  v28[2] = v26;
  sub_1000FF27C((uint64_t)v28 + 8, (uint64_t)v22, &qword_1015D6EA0);
  sub_100101314(v22, (uint64_t)&v23);
  uint64_t v17 = *((void *)&v24 + 1);
  uint64_t v18 = v25;
  uint64_t v19 = sub_1000FF380(&v23, *((uint64_t *)&v24 + 1));
  uint64_t v20 = sub_1000F5394(a4, (uint64_t)v19, v17, v18);

  sub_1001008A0((uint64_t)&v27);
  sub_1000FF22C((uint64_t)&v23);
  return v20;
}

double sub_1000F517C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, _OWORD *a6@<X8>)
{
  id v12 = [a1 firstIdentifier];
  if (!v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v12;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [self identifierPathWithIdentifier:v14];

  id v16 = v15;
  uint64_t v17 = sub_1000F530C((uint64_t)v16, 1, 0, 2, a5);
  uint64_t v19 = v18;

  if (!v17) {
    goto LABEL_7;
  }
  sub_1001003DC(a1, a2, a3, a4, v19, (uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v22)
  {
    sub_1000FF2E0((uint64_t)v21, (uint64_t *)&unk_1015D6E80);
    goto LABEL_7;
  }
  sub_1000FF33C(&qword_1015D2AD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    double result = 0.0;
    a6[2] = 0u;
    a6[3] = 0u;
    *a6 = 0u;
    a6[1] = 0u;
  }
  return result;
}

void *sub_1000F530C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return 0;
  }
  unint64_t v6 = sub_100101C10(a1, a2, a3, a4);
  if ((v7 & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void **)(*(void *)(a5 + 56) + 32 * v6);
  id v9 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1000F5394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getAssociatedTypeWitness();
  uint64_t v8 = type metadata accessor for HomeSupplementaryViewRegistration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v17 - v10);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v12 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
  uint64_t v13 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v11[2];
  uint64_t v14 = *v11;
  uint64_t v15 = v11[1];
  swift_retain();
  swift_bridgeObjectRetain();
  v13(v12, v14, v15, a1, a2);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1000F5520()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000F5550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D73C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F55B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for UICollectionView.SupplementaryRegistration();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1000F563C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for UICollectionView.SupplementaryRegistration();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t type metadata accessor for HomeSupplementaryViewRegistration()
{
  return sub_1000F5520();
}

uint64_t sub_1000F5718@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBD70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D73C0);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611808);

  return sub_1000F5550(v3, a1);
}

void sub_1000F5794(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  [a1 setTitle:v7];

  [a1 setFirstNonEmptySection:*(unsigned __int8 *)(a5 + 16)];
  [a1 setShowsBottomHairline:0];
  if (*(unsigned char *)(a5 + 17) == 1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v16._countAndFlagsBits = 0xD00000000000002DLL;
    v16._object = (void *)0x8000000100F7F2F0;
    v8._object = (void *)0x8000000100F7F2D0;
    v8._countAndFlagsBits = 0xD00000000000001CLL;
    v9._countAndFlagsBits = 1701998413;
    v9._object = (void *)0xE400000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)qword_101611820, v9, v16);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  [a1 setActionTitle:v10];

  NSString v11 = String._bridgeToObjectiveC()();
  [a1 setAccessibilityIdentifiersWithBaseString:v11];

  sub_1000F59B8(a5, (uint64_t)v15);
  uint64_t v12 = swift_allocObject();
  sub_1000FC8E0((uint64_t)v15, v12 + 16);
  aBlock[4] = sub_100243698;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012DF120;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  [a1 setActionHandler:v13];
  _Block_release(v13);
}

uint64_t sub_1000F59B8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for HomeListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000F5A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v5 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  sub_1000F1C90((uint64_t)v3 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v21);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v21);
  if (!Strong) {
    return 0;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    Swift::String v9 = v3;
  }
  else {
    Swift::String v9 = 0;
  }
  if (v9)
  {
    id v10 = v3;
    id v11 = sub_1000F5CB8();
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    if (v15)
    {
      uint64_t v16 = v12;
      uint64_t v17 = *(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
      sub_1000F71E8(*(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot));
      sub_1000F71E8(v15);
      id v18 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000F517C(v18, v16, v14, 0, v17, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      memset(v21, 0, 64);

      swift_bridgeObjectRelease();
    }

    if (*(void *)&v21[0])
    {
      sub_1000FF2E0((uint64_t)v21, (uint64_t *)&unk_1015DB0D0);
      id v19 = sub_1000F5CB8();
      swift_unknownObjectRelease();
      return (uint64_t)v19;
    }
    swift_unknownObjectRelease();
    sub_1000FF2E0((uint64_t)v21, (uint64_t *)&unk_1015DB0D0);
    return 0;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1000F5CB8()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath);
  }
  else
  {
    id v4 = sub_1000FB03C();
    id v5 = [v4 identifierPathByAppendingIdentifier:UICollectionElementKindSectionHeader];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void *sub_1000F5D4C(uint64_t a1, int a2, int a3)
{
  int v178 = a2;
  uint64_t v6 = sub_1000FF33C(&qword_1015D6F60);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v173 - v11;
  if (a3)
  {
    uint64_t v13 = *(void **)(*(char **)((char *)&v3->isa + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration)
                   + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView);
    [v13 alpha];
    uint64_t v15 = v14;
    [v13 setAlpha:0.0];
    uint64_t v16 = self;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v3;
    *(void *)(v17 + 24) = v15;
    v195 = sub_10010E488;
    uint64_t v196 = v17;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10008C380;
    id v194 = &unk_1012DFFD0;
    uint64_t v18 = a1;
    id v19 = _Block_copy(aBlock);
    uint64_t v20 = v3;
    swift_release();
    [v16 animateWithDuration:2 delay:v19 options:0 animations:0.25 completion:0.0];
    uint64_t v21 = v19;
    a1 = v18;
    _Block_release(v21);
  }
  uint64_t v22 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  long long v23 = *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  uint64_t v184 = a1;
  if (v23)
  {
    long long v24 = v23;
  }
  else
  {
    long long v25 = (objc_class *)sub_1000F0E20();
    *(Class *)((char *)&v3->isa + v22) = v25;
    long long v24 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(Class *)((char *)&v3->isa + v22))
    {
      uint64_t v26 = swift_bridgeObjectRetain();
      sub_1000716FC(v26);
    }
    else
    {
      *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = (Class)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      unint64_t v27 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
      long long v28 = (unint64_t *)((char *)v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess();
      *long long v28 = v27;
    }
    swift_bridgeObjectRelease();
  }
  long long v177 = v10;
  v182 = v12;
  uint64_t v29 = *((void *)v24 + 2);
  uint64_t v181 = v6;
  uint64_t v179 = v7;
  int v175 = a3;
  v180 = v3;
  uint64_t v176 = (uint64_t)v24;
  if (v29)
  {
    long long v30 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    swift_bridgeObjectRetain();
    uint64_t v186 = 0;
    uint64_t v187 = 0;
    uint64_t v185 = 0;
    v191 = 0;
    uint64_t v31 = (uint64_t *)((char *)v24 + 40);
    uint64_t v32 = _swiftEmptyArrayStorage;
    v183 = v30;
    while (1)
    {
      uint64_t v34 = (void *)*(v31 - 1);
      uint64_t v33 = *v31;
      uint64_t v35 = *v30;
      if (*v30)
      {
        sub_1000F71E8(*v30);
        sub_1000F71E8(v35);
        os_log_t v36 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = *(uint64_t (**)(void))((swift_isaMask & *v36) + 0xD8);
        id v38 = v36;
        os_signpost_id_t v39 = (void *)v37();

        int v192 = (void *)sub_1000F7698((uint64_t)v39, v35);
        uint64_t v189 = v41;
        uint64_t v190 = v40;
        uint64_t v188 = v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v43 = v34;
        int v192 = 0;
        uint64_t v189 = 0;
        uint64_t v190 = 0;
        uint64_t v188 = 0;
      }
      id v44 = v191;
      uint64_t v45 = v34;
      char v46 = sub_1000F32AC(v45, v33, v184);

      if ((v46 & 1) == 0)
      {
        if (v44)
        {
          id v64 = v44;
          uint64_t v65 = v64;
          id v66 = v192;
          if (v192)
          {
            sub_100100830(0, (unint64_t *)&unk_1015D6E30);
            id v67 = v65;
            id v68 = v66;
            char v69 = static NSObject.== infix(_:_:)();

            if (v69) {
              goto LABEL_16;
            }
          }
          else
          {
          }
        }
        else if (!v192)
        {
          goto LABEL_16;
        }
      }
      uint64_t v47 = *(void (**)(void))((swift_isaMask & *v45) + 0xF8);
      uint64_t v48 = v45;
      v47();

LABEL_16:
      id v49 = *(uint64_t (**)(void))((swift_isaMask & *v45) + 0xF0);
      id v50 = v45;
      os_log_t v51 = (void *)v49();
      uint64_t v53 = v52;
      uint64_t v55 = v54;
      uint64_t v57 = v56;

      if (*(void *)(v53 + 16))
      {
        id v58 = v51;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000F7228(v44);
        uint64_t v186 = v57;
        uint64_t v187 = v55;
        uint64_t v185 = v53;
        id v44 = v51;
      }
      swift_bridgeObjectRetain();
      id v59 = v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v191 = v44;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v32 = sub_100101D50(0, v32[2] + 1, 1, v32);
      }
      unint64_t v62 = v32[2];
      unint64_t v61 = v32[3];
      if (v62 >= v61 >> 1) {
        uint64_t v32 = sub_100101D50((void *)(v61 > 1), v62 + 1, 1, v32);
      }
      _OWORD v32[2] = v62 + 1;
      unint64_t v63 = &v32[4 * v62];
      v63[4] = v59;
      v63[5] = v53;
      v63[6] = v55;
      v63[7] = v57;

      sub_1000F7228(v192);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v31 += 2;
      --v29;
      long long v30 = v183;
      if (!v29) {
        goto LABEL_32;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v186 = 0;
  uint64_t v187 = 0;
  uint64_t v185 = 0;
  v191 = 0;
  uint64_t v32 = _swiftEmptyArrayStorage;
LABEL_32:
  swift_bridgeObjectRelease();
  id v70 = (uint64_t *)((char *)v180 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  uint64_t v71 = *(uint64_t *)((char *)&v180->isa + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  uint64_t v72 = *(uint64_t *)((char *)&v180[1].isa + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  sub_1000F71E8(v71);
  uint64_t v73 = sub_1001018C4((uint64_t)v32);
  uint64_t v75 = v74;
  swift_bridgeObjectRelease();
  uint64_t v76 = *v70;
  uint64_t *v70 = v73;
  v70[1] = v75;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000FA538(v76);
  uint64_t v77 = (uint64_t)v182;
  uint64_t v78 = sub_1000FBEC8((uint64_t)v182, v71, v72, v73, v75);
  uint64_t v80 = v79;
  unint64_t v82 = v81;
  uint64_t v188 = v83;
  sub_1000FA538(v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v84 = *(void *)(v78 + 16);
  if (v84 || *(void *)(v80 + 16) || v82[2] || *(void *)(v188 + 16))
  {
    uint64_t v190 = v80;
    uint64_t v85 = v179;
    if (qword_1015CBD40 != -1) {
      swift_once();
    }
    uint64_t v86 = type metadata accessor for Logger();
    sub_1000F2248(v86, (uint64_t)qword_101611778);
    id v87 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v88 = v188;
    swift_bridgeObjectRetain_n();
    id v89 = v177;
    v87(v177, v182, v181);
    uint64_t v90 = v78;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v91 = v180;
    swift_bridgeObjectRetain_n();
    uint64_t v92 = v91;
    uint64_t v93 = Logger.logObject.getter();
    int v94 = static os_log_type_t.info.getter();
    BOOL v95 = os_log_type_enabled(v93, (os_log_type_t)v94);
    int v192 = v82;
    uint64_t v189 = v90;
    if (v95)
    {
      int v174 = v94;
      v180 = v93;
      uint64_t v96 = swift_slowAlloc();
      long long v173 = (void *)swift_slowAlloc();
      uint64_t v176 = swift_slowAlloc();
      uint64_t v198 = v176;
      *(_DWORD *)uint64_t v96 = 136317186;
      swift_getObjectType();
      uint64_t v97 = _typeName(_:qualified:)();
      aBlock[0] = sub_1000F2280(v97, v98, &v198);
      uint64_t v99 = v184;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      v183 = (uint64_t *)v92;
      swift_bridgeObjectRelease();
      *(_WORD *)(v96 + 12) = 2080;
      sub_1000FB0FC(v99);
      uint64_t v100 = Array.description.getter();
      unint64_t v102 = v101;
      swift_bridgeObjectRelease();
      aBlock[0] = sub_1000F2280(v100, v102, &v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v96 + 22) = 1024;
      LODWORD(aBlock[0]) = v178 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v96 + 2_Block_object_dispose(&STACK[0x358], 8) = 1024;
      LODWORD(aBlock[0]) = v175 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v184 = v96;
      *(_WORD *)(v96 + 34) = 2080;
      if (v84)
      {
        v197 = _swiftEmptyArrayStorage;
        uint64_t v103 = v189;
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v104 = v103 + 32;
        uint64_t v105 = v190;
        do
        {
          sub_1000FF4D4(v104, (uint64_t)aBlock);
          uint64_t v106 = v194;
          long long v107 = v195;
          sub_1000FF380(aBlock, (uint64_t)v194);
          (*((void (**)(void *, id (*)()))v107 + 2))(v106, v107);
          sub_1001007A8(v108, v109, v110);
          sub_1000FF22C((uint64_t)aBlock);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v104 += 40;
          --v84;
        }
        while (v84);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v105 = v190;
      }
      uint64_t v113 = v184;
      sub_100100830(0, (unint64_t *)&unk_1015D6E30);
      uint64_t v114 = Array.description.getter();
      unint64_t v116 = v115;
      swift_bridgeObjectRelease();
      aBlock[0] = sub_1000F2280(v114, v116, &v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v113 + 44) = 2080;
      uint64_t v117 = *(void *)(v105 + 16);
      if (v117)
      {
        v197 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v118 = v105 + 32;
        do
        {
          sub_1000FF4D4(v118, (uint64_t)aBlock);
          id v119 = v194;
          id v120 = v195;
          sub_1000FF380(aBlock, (uint64_t)v194);
          (*((void (**)(void *, id (*)()))v120 + 2))(v119, v120);
          sub_1001007A8(v121, v122, v123);
          sub_1000FF22C((uint64_t)aBlock);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v118 += 40;
          --v117;
        }
        while (v117);
        swift_bridgeObjectRelease();
      }
      uint64_t v124 = v184;
      uint64_t v125 = Array.description.getter();
      unint64_t v127 = v126;
      swift_bridgeObjectRelease();
      aBlock[0] = sub_1000F2280(v125, v127, &v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v128 = v192;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v124 + 54) = 2080;
      uint64_t v129 = v128[2];
      if (v129)
      {
        v197 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v130 = (uint64_t)(v128 + 4);
        do
        {
          sub_1000FF4D4(v130, (uint64_t)aBlock);
          uint64_t v131 = v194;
          unint64_t v132 = v195;
          sub_1000FF380(aBlock, (uint64_t)v194);
          (*((void (**)(void *, id (*)()))v132 + 2))(v131, v132);
          sub_1001007A8(v133, v134, v135);
          sub_1000FF22C((uint64_t)aBlock);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v130 += 40;
          --v129;
        }
        while (v129);
        swift_bridgeObjectRelease();
      }
      uint64_t v136 = v184;
      uint64_t v137 = Array.description.getter();
      unint64_t v139 = v138;
      swift_bridgeObjectRelease();
      aBlock[0] = sub_1000F2280(v137, v139, &v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v140 = v188;
      swift_bridgeObjectRelease();
      uint64_t v141 = v140;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v136 + 64) = 2080;
      uint64_t v142 = *(void *)(v140 + 16);
      if (v142)
      {
        v197 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v143 = v141 + 32;
        uint64_t v144 = v187;
        do
        {
          sub_1000FF4D4(v143, (uint64_t)aBlock);
          Swift::Int v145 = v194;
          id v146 = v195;
          sub_1000FF380(aBlock, (uint64_t)v194);
          (*((void (**)(void *, id (*)()))v146 + 2))(v145, v146);
          sub_1001007A8(v147, v148, v149);
          sub_1000FF22C((uint64_t)aBlock);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v143 += 40;
          --v142;
        }
        while (v142);
        uint64_t v187 = v144;
        swift_bridgeObjectRelease();
      }
      uint64_t v150 = v184;
      uint64_t v151 = Array.description.getter();
      unint64_t v153 = v152;
      swift_bridgeObjectRelease();
      aBlock[0] = sub_1000F2280(v151, v153, &v198);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v88 = v141;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v150 + 74) = 2112;
      uint64_t v154 = v181;
      uint64_t v155 = v177;
      Class isa = NSDiffableDataSourceSnapshot._bridgeToObjectiveC()().super.isa;
      aBlock[0] = (uint64_t)isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v173 = isa;
      objc_super v111 = *(void (**)(char *, uint64_t))(v179 + 8);
      v111(v155, v154);
      id v157 = v180;
      _os_log_impl((void *)&_mh_execute_header, v180, (os_log_type_t)v174, "%s applySnapshotUpdates {\n    sectionControllersToUpdate=%s\n    animateCells=%{BOOL}d\n    animateCollectionView=%{BOOL}d\n    insertions=%s\n    removals=%s\n    moves=%s\n    reconfigurations=%s\n    diffableDataSourceSnapshot=%@\n}", (uint8_t *)v150, 0x54u);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v112 = (uint64_t)v182;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      objc_super v111 = *(void (**)(char *, uint64_t))(v85 + 8);
      v111(v89, v181);

      uint64_t v112 = (uint64_t)v182;
    }
    v158 = sub_10010CC3C(v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100006D7C((uint64_t)v158);
    swift_bridgeObjectRelease();
    id v159 = sub_1000806A8();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    v111((char *)v112, v181);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v161 = v184;
    if (qword_1015CBD40 != -1) {
      swift_once();
    }
    uint64_t v162 = type metadata accessor for Logger();
    sub_1000F2248(v162, (uint64_t)qword_101611778);
    uint64_t v163 = v180;
    swift_bridgeObjectRetain_n();
    unint64_t v164 = v163;
    uint64_t v165 = Logger.logObject.getter();
    os_log_type_t v166 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v165, v166))
    {
      uint64_t v167 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v167 = 136315394;
      swift_getObjectType();
      uint64_t v168 = _typeName(_:qualified:)();
      uint64_t v198 = sub_1000F2280(v168, v169, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v167 + 12) = 2080;
      sub_1000FB0FC(v161);
      uint64_t v170 = Array.description.getter();
      unint64_t v172 = v171;
      swift_bridgeObjectRelease();
      uint64_t v198 = sub_1000F2280(v170, v172, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v165, v166, "%s Skipping diffable snapshot update because no changes. SectionControllersToUpdate=%s", (uint8_t *)v167, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v179 + 8))(v182, v181);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v77, v181);
    }
  }
  return sub_1000F7228(v191);
}

uint64_t sub_1000F71E8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1000F7228(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000F7288()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot);
LABEL_27:
    sub_1000F7638(v2);
    return (uint64_t)v3;
  }
  id v4 = v0;
  swift_getObjectType();
  uint64_t v5 = swift_conformsToProtocol2();
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v5) {
    uint64_t v7 = v0;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v7)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24);
    id v10 = v0;
    uint64_t v11 = v9(ObjectType, v6);

    sub_1000F7BBC(v11);
    uint64_t v12 = v10;
    uint64_t v13 = sub_1000F78C8(v11, (uint64_t)v12);
    swift_bridgeObjectRelease();

    uint64_t v14 = *(uint64_t (**)(void))((swift_isaMask & *v7) + 0x188);
    uint64_t v15 = v12;
    int64_t v16 = v14();

    int64_t v17 = sub_1000F7BB8(v16, (uint64_t)v13);
    uint64_t v42 = v18;
    uint64_t v20 = v19;
    unint64_t v22 = v21;
    unint64_t v23 = v21 >> 1;
    int64_t v43 = v17;
    if (v19 == v21 >> 1)
    {
      uint64_t v24 = v17;
      long long v25 = _swiftEmptyArrayStorage;
      goto LABEL_17;
    }
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v26 = v4;
    }
    else {
      uint64_t v26 = 0;
    }
    if (v26)
    {
      unint64_t v27 = *(uint64_t (**)(void))((swift_isaMask & *v26) + 0x190);
      long long v28 = v15;
      long long v25 = (void *)v27();

      uint64_t v24 = v43;
LABEL_17:
      id v29 = sub_1000FB03C();
      if (v22)
      {
        type metadata accessor for __ContiguousArrayStorageBase();
        swift_unknownObjectRetain_n();
        uint64_t v31 = (void *)swift_dynamicCastClass();
        if (!v31)
        {
          swift_unknownObjectRelease();
          uint64_t v31 = _swiftEmptyArrayStorage;
        }
        uint64_t v32 = v31[2];
        swift_release();
        if (__OFSUB__(v23, v20))
        {
          __break(1u);
        }
        else if (v32 == v23 - v20)
        {
          long long v30 = (void *)swift_dynamicCastClass();
          if (!v30)
          {
            swift_unknownObjectRelease();
            long long v30 = _swiftEmptyArrayStorage;
          }
          goto LABEL_26;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRetain();
      }
      long long v30 = sub_10034EA9C(v24, v42, v20, v22);
LABEL_26:
      swift_unknownObjectRelease();
      uint64_t v33 = (void *)sub_1000F8F14(v29, (uint64_t)v30, (uint64_t)v25);
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      uint64_t v39 = v38;

      swift_bridgeObjectRelease();
      uint64_t v40 = *(void **)v1;
      *(void *)uint64_t v1 = v33;
      *((void *)v1 + 1) = v35;
      *((void *)v1 + 2) = v37;
      *((void *)v1 + 3) = v39;
      id v3 = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000F7228(v40);
      swift_unknownObjectRelease();
      uint64_t v2 = 0;
      goto LABEL_27;
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1000F7638(void *result)
{
  if (result)
  {
    id v1 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000F7698(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a1;
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v16 = a2 + 32;
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  swift_bridgeObjectRetain();
  uint64_t v17 = a2;
  uint64_t v4 = a2 - 24;
  uint64_t v5 = -v2;
  uint64_t v6 = -2;
  for (uint64_t i = 1; ; i += 2)
  {
    id v8 = *(id *)(v4 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v9 = static NSObject.== infix(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v9) {
      break;
    }
    ++v6;
    v4 += 32;
    if (v5 + v6 == -2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  v19[0] = v17;
  v19[1] = v16;
  v19[2] = 0;
  v19[3] = i;
  if (v6 == -2) {
    goto LABEL_8;
  }
  if (*(void *)(*(void *)(v4 + 32) + 16))
  {
    char v12 = 0;
    ++v6;
    goto LABEL_11;
  }
  if (v6 == -1)
  {
LABEL_8:
    uint64_t v6 = 0;
    char v12 = 1;
LABEL_11:
    __chkstk_darwin(result);
    _OWORD v15[2] = v19;
    swift_bridgeObjectRetain();
    id v10 = sub_1000F7B08((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1000FB568, (uint64_t)v15, v6, v12);
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  uint64_t v13 = v6 + 2;
  while (v6 < v13)
  {
    uint64_t v14 = *(void *)(*(void *)v4 + 16);
    char v12 = v14 == 0;
    if (v14) {
      goto LABEL_11;
    }
    --v6;
    v4 -= 32;
    if (v6 == -1)
    {
      uint64_t v6 = 0;
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

void *sub_1000F78C8(uint64_t a1, uint64_t a2)
{
  id v3 = _swiftEmptyArrayStorage;
  unint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = (uint64_t *)(a2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions);
  swift_beginAccess();
  if (v4)
  {
    for (uint64_t i = a1 + 32; ; i += 48)
    {
      sub_1000FF3F0(i, (uint64_t)v20);
      uint64_t v7 = *v5;
      if ((*v5 & 0xC000000000000001) != 0)
      {
        id v8 = *(id *)&v20[0];
        swift_bridgeObjectRetain();
        if (!__CocoaDictionary.lookup(_:)()) {
          goto LABEL_13;
        }
        sub_100100830(0, (unint64_t *)&unk_1015DC230);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v9 = (id)v17;
        swift_unknownObjectRelease();
      }
      else
      {
        if (!*(void *)(v7 + 16)) {
          goto LABEL_14;
        }
        id v8 = *(id *)&v20[0];
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_1001EA990((uint64_t)v8);
        if ((v11 & 1) == 0)
        {
LABEL_13:

          swift_bridgeObjectRelease();
LABEL_14:
          long long v17 = v20[0];
          long long v18 = v20[1];
          long long v19 = v20[2];
          char v12 = v21;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000F9C00(0, v12[2] + 1, 1);
            char v12 = v21;
          }
          unint64_t v14 = v12[2];
          unint64_t v13 = v12[3];
          if (v14 >= v13 >> 1)
          {
            sub_1000F9C00(v13 > 1, v14 + 1, 1);
            char v12 = v21;
          }
          _OWORD v12[2] = v14 + 1;
          uint64_t v15 = &v12[6 * v14];
          v15[3] = v18;
          void v15[4] = v19;
          _OWORD v15[2] = v17;
          goto LABEL_4;
        }
        id v9 = *(id *)(*(void *)(v7 + 56) + 8 * v10);
      }

      swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_14;
      }

      sub_1000FFC8C((uint64_t)v20);
LABEL_4:
      if (!--v4) {
        return v21;
      }
    }
  }
  return v3;
}

void *sub_1000F7B08(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  uint64_t v7 = a3;
  uint64_t result = a1(&v6, &v7);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

int64_t sub_1000F7B74(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

void sub_1000F7BBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    id v49 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v6 = a1 + 32;
    do
    {
      sub_1000FF3F0(v6, (uint64_t)v48);
      id v7 = v48[0];
      sub_1000FFC8C((uint64_t)v48);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v6 += 48;
      --v3;
    }
    while (v3);
    uint64_t v4 = v49;
  }
  uint64_t v8 = sub_1000F81DC((unint64_t)v4);
  swift_bridgeObjectRelease();
  id v9 = (void *)(v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions);
  swift_beginAccess();
  unint64_t v10 = swift_bridgeObjectRetain();
  sub_1000F8200(v10);
  char v12 = sub_1000F84FC(v8, v11);
  swift_bridgeObjectRelease();
  __chkstk_darwin(*v9);
  v40[2] = v12;
  uint64_t v13 = swift_bridgeObjectRetain();
  Swift::Int v14 = sub_1000F8604(v13, (uint64_t (*)(id, id))sub_10033EAD4, (uint64_t)v40);
  swift_bridgeObjectRelease();
  uint64_t v42 = v2;
  unint64_t v44 = v14 & 0xC000000000000001;
  if ((v14 & 0xC000000000000001) != 0)
  {
    uint64_t v15 = __CocoaDictionary.makeIterator()();
    Swift::Int v46 = 0;
    uint64_t v16 = 0;
    unint64_t v17 = 0;
    unint64_t v18 = v15 | 0x8000000000000000;
  }
  else
  {
    uint64_t v19 = -1 << *(unsigned char *)(v14 + 32);
    uint64_t v16 = ~v19;
    uint64_t v20 = *(void *)(v14 + 64);
    Swift::Int v46 = v14 + 64;
    uint64_t v21 = -v19;
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v17 = v22 & v20;
    unint64_t v18 = v14;
  }
  Swift::Int v41 = v14;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v43 = v16;
  int64_t v45 = (unint64_t)(v16 + 64) >> 6;
  while ((v18 & 0x8000000000000000) != 0)
  {
    uint64_t v27 = __CocoaDictionary.Iterator.next()();
    if (!v27) {
      goto LABEL_36;
    }
    uint64_t v29 = v28;
    uint64_t v47 = v27;
    sub_100100830(0, (unint64_t *)&unk_1015D6E30);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v30 = v49;
    swift_unknownObjectRelease();
    uint64_t v47 = v29;
    sub_100100830(0, (unint64_t *)&unk_1015DC230);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v31 = v49;
    swift_unknownObjectRelease();
    uint64_t v26 = v23;
    uint64_t v24 = v17;
    if (!v30) {
      goto LABEL_36;
    }
LABEL_34:

    if (([v31 completed] & 1) == 0) {
      [v31 markAsCompletedWithSuccess:1 error:0];
    }

    uint64_t v23 = v26;
    unint64_t v17 = v24;
  }
  if (v17)
  {
    uint64_t v24 = (v17 - 1) & v17;
    unint64_t v25 = __clz(__rbit64(v17)) | (v23 << 6);
    uint64_t v26 = v23;
    goto LABEL_33;
  }
  int64_t v32 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    return;
  }
  if (v32 >= v45) {
    goto LABEL_36;
  }
  unint64_t v33 = *(void *)(v46 + 8 * v32);
  uint64_t v26 = v23 + 1;
  if (v33) {
    goto LABEL_32;
  }
  uint64_t v26 = v23 + 2;
  if (v23 + 2 >= v45) {
    goto LABEL_36;
  }
  unint64_t v33 = *(void *)(v46 + 8 * v26);
  if (v33) {
    goto LABEL_32;
  }
  uint64_t v26 = v23 + 3;
  if (v23 + 3 >= v45) {
    goto LABEL_36;
  }
  unint64_t v33 = *(void *)(v46 + 8 * v26);
  if (v33) {
    goto LABEL_32;
  }
  uint64_t v26 = v23 + 4;
  if (v23 + 4 >= v45) {
    goto LABEL_36;
  }
  unint64_t v33 = *(void *)(v46 + 8 * v26);
  if (v33)
  {
LABEL_32:
    uint64_t v24 = (v33 - 1) & v33;
    unint64_t v25 = __clz(__rbit64(v33)) + (v26 << 6);
LABEL_33:
    uint64_t v35 = 8 * v25;
    uint64_t v36 = *(void **)(*(void *)(v18 + 56) + v35);
    id v30 = *(id *)(*(void *)(v18 + 48) + v35);
    id v31 = v36;
    if (!v30) {
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  uint64_t v34 = v23 + 5;
  while (v45 != v34)
  {
    unint64_t v33 = *(void *)(v46 + 8 * v34++);
    if (v33)
    {
      uint64_t v26 = v34 - 1;
      goto LABEL_32;
    }
  }
LABEL_36:
  sub_1000F84F4();
  unint64_t v37 = v41;
  if (v44) {
    uint64_t v38 = __CocoaDictionary.count.getter();
  }
  else {
    uint64_t v38 = *(void *)(v41 + 16);
  }
  if (v38 < 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = sub_10034E9A0(v37);
    swift_bridgeObjectRelease();
    sub_10033C9B4((unint64_t)v39);
    swift_release();
  }
}

uint64_t sub_1000F804C(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_100100830(0, a2);
  sub_1000EFBF0(a4, a2);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        Swift::Int v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1000FA0D8(&v17, v14, a2, a3, a5);
      }
    }
    else
    {
      uint64_t v15 = (void **)(a1 + 32);
      do
      {
        uint64_t v16 = *v15++;
        sub_1000FA0D8(&v17, v16, a2, a3, a5);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F81DC(unint64_t a1)
{
  return sub_1000F804C(a1, (unint64_t *)&unk_1015D6E30, (uint64_t)&off_1012D33D0, (unint64_t *)&qword_1015CF250, (uint64_t *)&unk_1015CF258);
}

void sub_1000F8200(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    __CocoaDictionary.count.getter();
  }
  sub_100100830(0, (unint64_t *)&unk_1015D6E30);
  sub_1000EFBF0((unint64_t *)&qword_1015CF250, (unint64_t *)&unk_1015D6E30);
  v19[1] = (id)Set.init(minimumCapacity:)();
  if (v2)
  {
    uint64_t v3 = __CocoaDictionary.makeIterator()();
    unint64_t v18 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v1 = v3 | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v18 = v1 + 64;
    uint64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v1 + 64);
  }
  uint64_t v9 = 0;
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  while ((v1 & 0x8000000000000000) != 0)
  {
    if (!__CocoaDictionary.Iterator.nextKey()()) {
      goto LABEL_34;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v19[0];
    swift_unknownObjectRelease();
    if (!v13) {
      goto LABEL_34;
    }
    uint64_t v10 = v5;
    uint64_t v12 = v9;
LABEL_12:
    sub_1000FA0D8(v19, v13, (unint64_t *)&unk_1015D6E30, (uint64_t)&off_1012D33D0, (uint64_t *)&unk_1015CF258);

    uint64_t v9 = v12;
    unint64_t v5 = v10;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v9 << 6);
    uint64_t v12 = v9;
LABEL_11:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_34;
    }
    goto LABEL_12;
  }
  int64_t v14 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v14 >= v17) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    uint64_t v12 = v9 + 1;
    if (!v15)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v17) {
        goto LABEL_34;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v17) {
          goto LABEL_34;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v17) {
            goto LABEL_34;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v17) {
              goto LABEL_34;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v9 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_1000F84F4();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1000F84F4()
{
  return swift_release();
}

void *sub_1000F84FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_1000F9DA8(a1);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= __CocoaSet.count.getter() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  Swift::Int v7 = sub_10013D51C(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_1000FA91C(a1, v2);
}

Swift::Int sub_1000F8604(uint64_t a1, uint64_t (*a2)(id, id), uint64_t a3)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = _swiftEmptyDictionarySingleton;
    __CocoaDictionary.makeIterator()();
    if (__CocoaDictionary.Iterator.next()())
    {
      sub_100100830(0, (unint64_t *)&unk_1015D6E30);
      do
      {
        swift_dynamicCast();
        sub_100100830(0, (unint64_t *)&unk_1015DC230);
        swift_dynamicCast();
        id v7 = v25;
        id v8 = v26;
        char v9 = a2(v7, v8);

        if (v9)
        {
          unint64_t v10 = _swiftEmptyDictionarySingleton[2];
          if (_swiftEmptyDictionarySingleton[3] <= v10)
          {
            uint64_t v13 = v10 + 1;
            id v14 = v7;
            id v15 = v8;
            sub_10034F9DC(v13, 1);
          }
          else
          {
            id v11 = v7;
            id v12 = v8;
          }
          Swift::Int result = NSObject._rawHashValue(seed:)(_swiftEmptyDictionarySingleton[5]);
          int64_t v17 = &_swiftEmptyDictionarySingleton[8];
          uint64_t v18 = -1 << LOBYTE(_swiftEmptyDictionarySingleton[4]);
          unint64_t v19 = result & ~v18;
          unint64_t v20 = v19 >> 6;
          if (((-1 << v19) & ~_swiftEmptyDictionarySingleton[(v19 >> 6) + 8]) != 0)
          {
            unint64_t v5 = __clz(__rbit64((-1 << v19) & ~_swiftEmptyDictionarySingleton[(v19 >> 6) + 8])) | v19 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v21 = 0;
            unint64_t v22 = (unint64_t)(63 - v18) >> 6;
            do
            {
              if (++v20 == v22 && (v21 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v23 = v20 == v22;
              if (v20 == v22) {
                unint64_t v20 = 0;
              }
              v21 |= v23;
              uint64_t v24 = v17[v20];
            }
            while (v24 == -1);
            unint64_t v5 = __clz(__rbit64(~v24)) + (v20 << 6);
          }
          *(void *)((char *)v17 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
          uint64_t v6 = 8 * v5;
          *(void *)(_swiftEmptyDictionarySingleton[6] + v6) = v7;
          *(void *)(_swiftEmptyDictionarySingleton[7] + v6) = v8;
          ++_swiftEmptyDictionarySingleton[2];
        }
      }
      while (__CocoaDictionary.Iterator.next()());
      uint64_t v4 = _swiftEmptyDictionarySingleton;
    }
    sub_1000F84F4();
  }
  else
  {
    uint64_t v4 = (void *)sub_1000F88E4(a1, a2, a3);
    swift_bridgeObjectRelease();
  }
  return (Swift::Int)v4;
}

uint64_t sub_1000F88E4(uint64_t isStackAllocationSafe, uint64_t (*a2)(id, id), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_1000F8A5C((unint64_t *)((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    id v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    sub_1000F8A5C((unint64_t *)v11, v8, v6, a2);
    a3 = v12;
    swift_slowDealloc();
  }
  return a3;
}

void sub_1000F8A5C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id, id))
{
  uint64_t v21 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v23 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v23) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v23) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v22 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v23) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v22 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v6 << 6);
LABEL_5:
    uint64_t v12 = *(void **)(*(void *)(a3 + 56) + 8 * v11);
    id v13 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    id v14 = v12;
    LOBYTE(v12) = a4(v13, v14);

    if (v12)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1000F8C54(a1, a2, v21, a3);
        return;
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v23) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v22 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v23) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1000F8C54(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1000FF33C(&qword_1015CCFE8);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = result;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v32) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v32) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v32) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v32) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v32) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = 8 * v13;
    uint64_t v18 = *(void **)(*(void *)(v4 + 56) + v17);
    Swift::Int v19 = *(void *)(v8 + 40);
    id v20 = *(id *)(*(void *)(v4 + 48) + v17);
    id v21 = v18;
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = 8 * v25;
    *(void *)(*(void *)(v8 + 48) + v30) = v20;
    *(void *)(*(void *)(v8 + 56) + v30) = v21;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1000F8EEC()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

void *sub_1000F8EF4()
{
  unint64_t v1 = (_OWORD *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot);
  *unint64_t v1 = 0u;
  v1[1] = 0u;
  return sub_1000F7228(v2);
}

uint64_t sub_1000F8F14(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  int64_t v6 = (void *)sub_1000F9858((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v7 = *(void *)(a2 + 16);
  id v75 = v5;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v74 = a3;
  uint64_t v8 = a2 + 32;
  unint64_t v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    sub_1000FF3F0(v8, (uint64_t)v81);
    id v10 = v81[0];
    if (([v10 hasPrefix:v5] & 1) == 0)
    {

      goto LABEL_4;
    }
    if (!v6[2]) {
      break;
    }
    id v11 = v10;
    unint64_t v12 = sub_100101C10((uint64_t)v11, 2, 0, 2);
    if (v13)
    {
      sub_1000FF27C(v6[7] + 40 * v12, (uint64_t)&v76, &qword_1015D2AC0);
    }
    else
    {
      *(void *)&long long v78 = 0;
      long long v76 = 0u;
      long long v77 = 0u;
    }

    if (!*((void *)&v77 + 1)) {
      goto LABEL_14;
    }
    sub_1000FF2E0((uint64_t)&v76, (uint64_t *)&unk_1015D6E90);

LABEL_4:
    sub_1000FFC8C((uint64_t)v81);
LABEL_5:
    v8 += 48;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      a3 = v74;
LABEL_32:
      uint64_t v39 = *(void *)(a3 + 16);
      if (!v39) {
        return (uint64_t)v5;
      }
      uint64_t v40 = _swiftEmptyArrayStorage;
      for (uint64_t i = a3 + 32; ; i += 64)
      {
        sub_1000FFEE8(i, (uint64_t)v81);
        id v42 = v81[1];
        id v43 = v81[2];
        id v44 = v81[0];
        swift_bridgeObjectRetain();
        if ([v44 hasPrefix:v5])
        {
          if (!v6[2])
          {
            *(void *)&long long v78 = 0;
            long long v76 = 0u;
            long long v77 = 0u;
LABEL_45:
            sub_1000FF2E0((uint64_t)&v76, (uint64_t *)&unk_1015D6E90);
            unint64_t v48 = sub_100100938();
            uint64_t v49 = swift_allocObject();
            sub_1000FFEE8((uint64_t)v81, v49 + 16);
            *(void *)&long long v76 = v49;
            *((void *)&v77 + 1) = &type metadata for HomeListSupplementaryViewSnapshot;
            *(void *)&long long v78 = v48;
            id v50 = v44;
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v80 = v6;
            unint64_t v53 = sub_100101C10((uint64_t)v50, (uint64_t)v42, (uint64_t)v43, 0);
            uint64_t v54 = v6[2];
            BOOL v55 = (v52 & 1) == 0;
            uint64_t v56 = v54 + v55;
            if (__OFADD__(v54, v55)) {
              goto LABEL_63;
            }
            char v57 = v52;
            if (v6[3] >= v56)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                int64_t v6 = v80;
                if ((v52 & 1) == 0) {
                  goto LABEL_54;
                }
              }
              else
              {
                sub_100352B98();
                int64_t v6 = v80;
                if ((v57 & 1) == 0) {
                  goto LABEL_54;
                }
              }
            }
            else
            {
              sub_1000F99B8(v56, isUniquelyReferenced_nonNull_native);
              unint64_t v58 = sub_100101C10((uint64_t)v50, (uint64_t)v42, (uint64_t)v43, 0);
              if ((v57 & 1) != (v59 & 1)) {
                goto LABEL_66;
              }
              unint64_t v53 = v58;
              int64_t v6 = v80;
              if ((v57 & 1) == 0)
              {
LABEL_54:
                v6[(v53 >> 6) + 8] |= 1 << v53;
                uint64_t v60 = v6[6] + 32 * v53;
                *(void *)uint64_t v60 = v50;
                *(void *)(v60 + _Block_object_dispose(&STACK[0x358], 8) = v42;
                *(void *)(v60 + 16) = v43;
                *(unsigned char *)(v60 + 24) = 0;
                uint64_t v61 = v6[7] + 40 * v53;
                long long v62 = v76;
                long long v63 = v77;
                *(void *)(v61 + 32) = v78;
                *(_OWORD *)uint64_t v61 = v62;
                *(_OWORD *)(v61 + 16) = v63;
                uint64_t v64 = v6[2];
                BOOL v31 = __OFADD__(v64, 1);
                uint64_t v65 = v64 + 1;
                if (v31) {
                  goto LABEL_65;
                }
                uint64_t v6[2] = v65;
                id v66 = v50;
                swift_bridgeObjectRetain();
                goto LABEL_56;
              }
            }
            sub_10025D6D4((uint64_t)&v76, v6[7] + 40 * v53);
LABEL_56:
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            sub_1000FFEE8((uint64_t)v81, (uint64_t)&v76);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v40 = sub_1000FA578(0, v40[2] + 1, 1, v40);
            }
            unint64_t v68 = v40[2];
            unint64_t v67 = v40[3];
            if (v68 >= v67 >> 1) {
              uint64_t v40 = sub_1000FA578((void *)(v67 > 1), v68 + 1, 1, v40);
            }
            v40[2] = v68 + 1;
            char v69 = &v40[8 * v68];
            long long v70 = v76;
            long long v71 = v77;
            long long v72 = v79;
            v69[4] = v78;
            v69[5] = v72;
            v69[2] = v70;
            v69[3] = v71;
            swift_bridgeObjectRelease();

            sub_1001008A0((uint64_t)v81);
            id v5 = v75;
            goto LABEL_36;
          }
          id v45 = v44;
          swift_bridgeObjectRetain();
          unint64_t v46 = sub_100101C10((uint64_t)v45, (uint64_t)v42, (uint64_t)v43, 0);
          if (v47)
          {
            sub_1000FF27C(v6[7] + 40 * v46, (uint64_t)&v76, &qword_1015D2AC0);
          }
          else
          {
            *(void *)&long long v78 = 0;
            long long v76 = 0u;
            long long v77 = 0u;
          }
          swift_bridgeObjectRelease();

          if (!*((void *)&v77 + 1)) {
            goto LABEL_45;
          }
          sub_1000FF2E0((uint64_t)&v76, (uint64_t *)&unk_1015D6E90);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        sub_1001008A0((uint64_t)v81);
LABEL_36:
        if (!--v39) {
          return (uint64_t)v5;
        }
      }
    }
  }
  *(void *)&long long v78 = 0;
  long long v76 = 0u;
  long long v77 = 0u;
LABEL_14:
  sub_1000FF2E0((uint64_t)&v76, (uint64_t *)&unk_1015D6E90);
  unint64_t v14 = sub_100100330();
  uint64_t v15 = swift_allocObject();
  sub_1000FF3F0((uint64_t)v81, v15 + 16);
  *(void *)&long long v76 = v15;
  *((void *)&v77 + 1) = &type metadata for HomeListCellSnapshot;
  *(void *)&long long v78 = v14;
  id v16 = v10;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v80 = v6;
  unint64_t v19 = sub_100101C10((uint64_t)v16, 2, 0, 2);
  uint64_t v20 = v6[2];
  BOOL v21 = (v18 & 1) == 0;
  uint64_t v22 = v20 + v21;
  if (!__OFADD__(v20, v21))
  {
    char v23 = v18;
    if (v6[3] >= v22)
    {
      if (v17)
      {
        int64_t v6 = v80;
        if ((v18 & 1) == 0) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_100352B98();
        int64_t v6 = v80;
        if ((v23 & 1) == 0) {
          goto LABEL_23;
        }
      }
    }
    else
    {
      sub_1000F99B8(v22, v17);
      unint64_t v24 = sub_100101C10((uint64_t)v16, 2, 0, 2);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_66;
      }
      unint64_t v19 = v24;
      int64_t v6 = v80;
      if ((v23 & 1) == 0)
      {
LABEL_23:
        v6[(v19 >> 6) + 8] |= 1 << v19;
        uint64_t v26 = v6[6] + 32 * v19;
        *(void *)uint64_t v26 = v16;
        *(_OWORD *)(v26 + _Block_object_dispose(&STACK[0x358], 8) = xmmword_100F67610;
        *(unsigned char *)(v26 + 24) = 2;
        uint64_t v27 = v6[7] + 40 * v19;
        long long v28 = v76;
        long long v29 = v77;
        *(void *)(v27 + 32) = v78;
        *(_OWORD *)uint64_t v27 = v28;
        *(_OWORD *)(v27 + 16) = v29;
        uint64_t v30 = v6[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_64;
        }
        uint64_t v6[2] = v32;
        id v33 = v16;
        goto LABEL_25;
      }
    }
    sub_10025D6D4((uint64_t)&v76, v6[7] + 40 * v19);
LABEL_25:

    swift_bridgeObjectRelease();
    sub_1000FF3F0((uint64_t)v81, (uint64_t)&v76);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v9 = sub_1000F9638(0, v9[2] + 1, 1, v9);
    }
    unint64_t v35 = v9[2];
    unint64_t v34 = v9[3];
    if (v35 >= v34 >> 1) {
      unint64_t v9 = sub_1000F9638((void *)(v34 > 1), v35 + 1, 1, v9);
    }
    v9[2] = v35 + 1;
    uint64_t v36 = &v9[6 * v35];
    long long v37 = v76;
    long long v38 = v78;
    v36[3] = v77;
    void v36[4] = v38;
    v36[2] = v37;

    sub_1000FFC8C((uint64_t)v81);
    id v5 = v75;
    goto LABEL_5;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_1000F9638(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015DA320);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000F9760(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F9760(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1000F9858(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CD180);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000FF27C(v4, (uint64_t)&v18, &qword_1015CD188);
    uint64_t v5 = v18;
    uint64_t v6 = v19;
    uint64_t v7 = v20;
    char v8 = v21;
    unint64_t result = sub_100101C10(v18, v19, v20, v21);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v2[6] + 32 * result;
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + _Block_object_dispose(&STACK[0x358], 8) = v6;
    *(void *)(v11 + 16) = v7;
    *(unsigned char *)(v11 + 24) = v8;
    uint64_t v12 = v2[7] + 40 * result;
    long long v13 = v22;
    long long v14 = v23;
    *(void *)(v12 + 32) = v24;
    *(_OWORD *)uint64_t v12 = v13;
    *(_OWORD *)(v12 + 16) = v14;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 72;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1000F99B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015CD180);
  long long v28 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    uint64_t v27 = v2;
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v7 = (void *)(v5 + 64);
    uint64_t v8 = -1;
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    unint64_t v9 = v8 & *(void *)(v5 + 64);
    int64_t v10 = (unint64_t)(v6 + 63) >> 6;
    swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return;
        }
        if (v15 >= v10) {
          goto LABEL_23;
        }
        unint64_t v16 = v7[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_23;
          }
          unint64_t v16 = v7[v11];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v10)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                swift_release();
                uint64_t v3 = v27;
                goto LABEL_30;
              }
              uint64_t v26 = 1 << *(unsigned char *)(v5 + 32);
              if (v26 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v7 = -1 << v26;
              }
              uint64_t v3 = v27;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_32;
                }
                if (v11 >= v10) {
                  goto LABEL_23;
                }
                unint64_t v16 = v7[v11];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v17;
          }
        }
LABEL_20:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = *(void *)(v5 + 48) + 32 * v14;
      uint64_t v19 = *(void **)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      uint64_t v21 = *(void *)(v18 + 16);
      char v22 = *(unsigned char *)(v18 + 24);
      uint64_t v23 = *(void *)(v5 + 56) + 40 * v14;
      if (a2)
      {
        long long v24 = *(_OWORD *)v23;
        long long v25 = *(_OWORD *)(v23 + 16);
        uint64_t v30 = *(void *)(v23 + 32);
        v29[0] = v24;
        v29[1] = v25;
      }
      else
      {
        sub_100356CA4(v23, (uint64_t)v29);
        id v12 = v19;
        sub_100100818(v20, v21, v22);
      }
      sub_1000FA77C((uint64_t)v19, v20, v21, v22, (uint64_t)v29, v28);
    }
  }
  swift_release();
LABEL_30:
  *uint64_t v3 = v28;
}

uint64_t sub_1000F9C00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000F9C20(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000F9C20(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015DA320);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1000F9DA8(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_100100830(0, (unint64_t *)&unk_1015D6E30);
      sub_1000EFBF0((unint64_t *)&qword_1015CF250, (unint64_t *)&unk_1015D6E30);
      Set.Iterator.init(_cocoa:)();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v17 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v9 = (v5 - 1) & v5;
        unint64_t v10 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v11 = v4;
      }
      else
      {
        int64_t v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v13 >= v17) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v18 + 8 * v13);
        uint64_t v11 = v4 + 1;
        if (!v14)
        {
          uint64_t v11 = v4 + 2;
          if (v4 + 2 >= v17) {
            goto LABEL_36;
          }
          unint64_t v14 = *(void *)(v18 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v4 + 3;
            if (v4 + 3 >= v17) {
              goto LABEL_36;
            }
            unint64_t v14 = *(void *)(v18 + 8 * v11);
            if (!v14)
            {
              uint64_t v11 = v4 + 4;
              if (v4 + 4 >= v17) {
                goto LABEL_36;
              }
              unint64_t v14 = *(void *)(v18 + 8 * v11);
              if (!v14)
              {
                uint64_t v11 = v4 + 5;
                if (v4 + 5 >= v17) {
                  goto LABEL_36;
                }
                unint64_t v14 = *(void *)(v18 + 8 * v11);
                if (!v14)
                {
                  uint64_t v15 = v4 + 6;
                  while (v17 != v15)
                  {
                    unint64_t v14 = *(void *)(v18 + 8 * v15++);
                    if (v14)
                    {
                      uint64_t v11 = v15 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_1000F84F4();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
      }
      id v12 = *(id *)(*(void *)(a1 + 48) + 8 * v10);
      if (!v12) {
        goto LABEL_36;
      }
      while (1)
      {
        unint64_t v16 = (void *)sub_10013DC08(v12, (unint64_t *)&unk_1015D6E30, (uint64_t)&off_1012D33D0, (uint64_t *)&unk_1015CF258);

        uint64_t v4 = v11;
        unint64_t v5 = v9;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (__CocoaSet.Iterator.next()())
        {
          sub_100100830(0, (unint64_t *)&unk_1015D6E30);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v12 = v19;
          swift_unknownObjectRelease();
          uint64_t v11 = v4;
          uint64_t v9 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

uint64_t sub_1000FA0D8(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = __CocoaSet.member(for:)();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_100100830(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v27 = sub_10013D538(v12, result + 1, a5, a3);
    long long v38 = (void *)v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v13;
      sub_10013EC30(v33, a5);
      long long v29 = v38;
    }
    else
    {
      long long v29 = (void *)v27;
      id v30 = v13;
    }
    sub_10013EECC((uint64_t)v13, v29);
    uint64_t *v8 = (uint64_t)v29;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    Swift::Int v16 = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v17 = NSObject._rawHashValue(seed:)(v16);
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_100100830(0, a3);
      id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
      char v21 = static NSObject.== infix(_:_:)();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        long long v25 = *(void **)(*(void *)(*v8 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
        char v24 = static NSObject.== infix(_:_:)();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v8;
    uint64_t *v8 = 0x8000000000000000;
    id v32 = a2;
    sub_1000FA3A4((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    uint64_t *v8 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

void sub_1000FA3A4(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_10013EC30(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_10014058C(a4);
      goto LABEL_14;
    }
    sub_100141488(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = NSObject._rawHashValue(seed:)(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100100830(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = static NSObject.== infix(_:_:)();

    if (v16)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_1000FA538(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1000FA578(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C((uint64_t *)&unk_1015D73D0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      Swift::Int v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      Swift::Int v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000FA688(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000FA688(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

__n128 sub_1000FA77C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  if (a4)
  {
    if (a4 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1001007A8(a2, a3, 1u);
    }
    else
    {
      if (a2 | a3)
      {
        if (a2 ^ 1 | a3) {
          Swift::UInt v12 = 2;
        }
        else {
          Swift::UInt v12 = 1;
        }
      }
      else
      {
        Swift::UInt v12 = 0;
      }
      Hasher._combine(_:)(v12);
    }
  }
  else
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    sub_1001007A8(a2, a3, 0);
  }
  Hasher._finalize()();
  unint64_t v13 = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a6 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v13;
  uint64_t v14 = a6[6] + 32 * v13;
  *(void *)uint64_t v14 = a1;
  *(void *)(v14 + _Block_object_dispose(&STACK[0x358], 8) = a2;
  *(void *)(v14 + 16) = a3;
  *(unsigned char *)(v14 + 24) = a4;
  uint64_t v15 = a6[7] + 40 * v13;
  *(void *)(v15 + 32) = *(void *)(a5 + 32);
  __n128 result = *(__n128 *)(a5 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)a5;
  *(__n128 *)(v15 + 16) = result;
  ++a6[2];
  return result;
}

void *sub_1000FA91C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100100830(0, (unint64_t *)&unk_1015D6E30);
    sub_1000EFBF0((unint64_t *)&qword_1015CF250, (unint64_t *)&unk_1015D6E30);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v46;
    uint64_t v4 = v47;
    uint64_t v6 = v48;
    int64_t v5 = v49;
    unint64_t v7 = v50;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v43 = v6;
  int64_t v44 = v5;
  unint64_t v45 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v44 = v5;
          unint64_t v45 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v42 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v42 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      uint64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (!v16
      || (uint64_t v39 = v16,
          sub_100100830(0, (unint64_t *)&unk_1015D6E30),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_1000F84F4();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_100100830(0, (unint64_t *)&unk_1015D6E30);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = static NSObject.== infix(_:_:)();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = static NSObject.== infix(_:_:)();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v41;
    uint64_t v6 = v43;
    int64_t v5 = v44;
    unint64_t v7 = v45;
  }
LABEL_47:

  char v31 = *(unsigned char *)(v2 + 32);
  unint64_t v32 = (unint64_t)((1 << v31) + 63) >> 6;
  size_t v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_10013F194((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    uint64_t v35 = v34;
    swift_release();
    sub_1000F84F4();
  }
  else
  {
    uint64_t v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_10013F194((unint64_t *)v36, v32, v2, v19, &v41);
    uint64_t v35 = v37;
    swift_release();
    sub_1000F84F4();
    swift_slowDealloc();
  }
  return (void *)v35;
}

uint64_t sub_1000FAE74(uint64_t (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = 0;
  uint64_t v7 = a3 + 32;
  while (1)
  {
    long long v11 = *(_OWORD *)(v7 + 16 * v6);
    id v8 = (id)v11;
    char v9 = a1(&v11);

    if (v3 || (v9 & 1) != 0) {
      break;
    }
    if (v4 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_1000FAF38(void **a1)
{
  return sub_1000FAF58(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1000FAF58(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  uint64_t v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD8))();
  int64_t v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a2) + 0xD8))();
  LOBYTE(v3) = static NSObject.== infix(_:_:)();

  return v3 & 1;
}

id sub_1000FB03C()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath);
  }
  else
  {
    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [self identifierPathWithIdentifier:v4];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_1000FB0FC(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  char v24 = _swiftEmptyArrayStorage;
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v7 << 6))
  {
    uint64_t v10 = *(void **)(*(void *)(a1 + 48) + 16 * i);
    long long v11 = *(uint64_t (**)(void))((swift_isaMask & *v10) + 0xD8);
    uint64_t v12 = v10;
    unint64_t v13 = (void *)v11();
    id v14 = [v13 firstIdentifier];

    if (v14)
    {
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v24 = sub_1000FB364(0, v24[2] + 1, 1, v24);
      }
      unint64_t v22 = v24[2];
      unint64_t v21 = v24[3];
      if (v22 >= v21 >> 1) {
        char v24 = sub_1000FB364((void *)(v21 > 1), v22 + 1, 1, v24);
      }
      id v24[2] = v22 + 1;
      id v23 = &v24[2 * v22];
      void v23[4] = v18;
      v23[5] = v20;
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {

      if (v5) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 >= v6) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v2 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v2 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v2 + 8 * v7);
        if (!v16)
        {
          int64_t v7 = v15 + 3;
          if (v15 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v2 + 8 * v7);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v6)
  {
LABEL_29:
    swift_release();
    return;
  }
  unint64_t v16 = *(void *)(v2 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v2 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
}

void *sub_1000FB364(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015CE220);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000FB474(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000FB474(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t *sub_1000FB568@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000FB588(a1, *(void **)(v2 + 16), a2);
}

uint64_t *sub_1000FB588@<X0>(uint64_t *result@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *result;
  if (*result >= a2[2] && v3 < a2[3] >> 1)
  {
    uint64_t v5 = a2[1] + 32 * v3;
    unint64_t v6 = *(void **)v5;
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t v8 = *(void *)(v5 + 16);
    uint64_t v9 = *(void *)(v5 + 24);
    *a3 = *(void *)v5;
    a3[1] = v7;
    a3[2] = v8;
    a3[3] = v9;
    id v10 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1000FB608()
{
  uint64_t v1 = v0;
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (MSPSharedTripReceivingAvailable())
  {
    id v3 = [*(id *)&v0[OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController_sharedTripsDataProvider] sharedTripSummaries];
    sub_100100830(0, &qword_1015D68B8);
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = v1;
    uint64_t v2 = sub_10024F4E0(v4);
    swift_bridgeObjectRelease();
  }
  sub_1000FB764((uint64_t)v2);
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration
                                                                + 48], "suggestions"));
  sub_100100830(0, &qword_1015D68B0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = v1;
  uint64_t v9 = sub_1000FBB2C(v7);
  swift_bridgeObjectRelease();

  sub_1000FB764((uint64_t)v9);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000FB764(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1000F9638(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1000FBB2C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v25 = v1 & 0xC000000000000001;
      id v3 = _swiftEmptyArrayStorage;
      for (uint64_t i = 4; ; ++i)
      {
        if (v25) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(v1 + 8 * i);
        }
        id v6 = v5;
        uint64_t v7 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        id v8 = [v5 _maps_diffableDataSourceIdentifier];
        if (!v8)
        {
          long long v31 = 0u;
          long long v32 = 0u;
          long long v30 = 0u;

          if ((void)v30) {
            goto LABEL_25;
          }
          goto LABEL_4;
        }
        unint64_t v9 = v8;
        int64_t v26 = v3;
        unint64_t v10 = v1;
        uint64_t v11 = v2;
        id v12 = sub_1000FB03C();
        id v13 = [v12 identifierPathByAppendingIdentifier:v9];

        if ([v6 type] != (id)21) {
          break;
        }
        if (([self shouldShowRatingRequestSuggestionsOnProactiveTray] & 1) != 0
          && (id v14 = sub_10008BBA4(), v15 = [v14 resultForSuggestionsEntry:v6], v14, v15))
        {
          uint64_t v2 = v11;
          if (v15 == (id)1)
          {
            *(void *)&long long v27 = v6;
            char v17 = 2;
            goto LABEL_20;
          }
          unint64_t v1 = v10;
          if (v15 == (id)2)
          {
            *(void *)&long long v27 = v6;
            swift_unknownObjectWeakInit();
            uint64_t v16 = swift_unknownObjectWeakAssign();
            sub_100101750(v16, (uint64_t)&v27 + 8, (uint64_t *)&unk_1015D68D0);
            char v17 = 1;
            goto LABEL_21;
          }

          long long v31 = 0u;
          long long v32 = 0u;
          long long v30 = 0u;
        }
        else
        {

          long long v31 = 0u;
          long long v32 = 0u;
          long long v30 = 0u;

          uint64_t v2 = v11;
          unint64_t v1 = v10;
        }
        id v3 = v26;
        if ((void)v30)
        {
LABEL_25:
          long long v27 = v30;
          long long v28 = v31;
          long long v29 = v32;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v3 = sub_1000F9638(0, v3[2] + 1, 1, v3);
          }
          unint64_t v20 = v3[2];
          unint64_t v19 = v3[3];
          if (v20 >= v19 >> 1) {
            id v3 = sub_1000F9638((void *)(v19 > 1), v20 + 1, 1, v3);
          }
          v3[2] = v20 + 1;
          unint64_t v21 = &v3[6 * v20];
          long long v22 = v27;
          long long v23 = v29;
          v21[3] = v28;
          void v21[4] = v23;
          v21[2] = v22;
          goto LABEL_5;
        }
LABEL_4:
        sub_1000FF2E0((uint64_t)&v30, &qword_1015D68C0);
LABEL_5:
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
      *(void *)&long long v27 = v6;
      swift_unknownObjectWeakInit();
      uint64_t v18 = swift_unknownObjectWeakAssign();
      sub_100101750(v18, (uint64_t)&v27 + 8, (uint64_t *)&unk_1015D68D0);
      char v17 = 1;
      uint64_t v2 = v11;
LABEL_20:
      unint64_t v1 = v10;
LABEL_21:
      id v3 = v26;
      LOBYTE(v2_Block_object_dispose(&STACK[0x358], 8) = v17;
      *(void *)&long long v32 = &type metadata for HomeListTwoLinesCellModel;
      *((void *)&v32 + 1) = sub_10024F750();
      *((void *)&v30 + 1) = swift_allocObject();
      sub_10024F840((uint64_t)&v27, *((void *)&v30 + 1) + 16);
      *(void *)&long long v30 = v13;
      if (v13) {
        goto LABEL_25;
      }
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000FBEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v67[0] = (uint64_t)_swiftEmptyArrayStorage;
  v67[1] = (uint64_t)_swiftEmptyArrayStorage;
  v67[2] = (uint64_t)_swiftEmptyArrayStorage;
  unint64_t v68 = _swiftEmptyArrayStorage;
  if (a2)
  {
    *((void *)&v65 + 1) = &type metadata for HomeListCollectionViewSnapshot;
    unint64_t v66 = sub_10010CBE0();
    *(void *)&long long v64 = a2;
    *((void *)&v64 + 1) = a3;
  }
  else
  {
    unint64_t v66 = 0;
    long long v64 = 0u;
    long long v65 = 0u;
  }
  sub_1000F71E8(a2);
  sub_1000FCDBC((uint64_t)&v64, v67, a4, a5);
  sub_1000FF2E0((uint64_t)&v64, (uint64_t *)&unk_1015D6E80);
  sub_100100830(0, (unint64_t *)&unk_1015D6E30);
  sub_1000FC490();
  NSDiffableDataSourceSnapshot.init()();
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v59 = a1;
  uint64_t v57 = v10;
  if (v10)
  {
    uint64_t v56 = a4 + 32;
    v54[1] = a4;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    long long v55 = xmmword_100F5DFF0;
    do
    {
      uint64_t v12 = v56 + 32 * v11;
      id v13 = *(void **)v12;
      uint64_t v14 = *(void *)(v12 + 8);
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = v55;
      *(void *)(v15 + 32) = v13;
      *(void *)&long long v64 = v15;
      id v16 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      specialized Array._endMutation()();
      v17._rawValue = (void *)v64;
      id v18 = v16;
      sub_1000FF33C(&qword_1015D6F60);
      NSDiffableDataSourceSnapshot.appendSections(_:)(v17);
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(v14 + 16);
      if (v19)
      {
        id v58 = v18;
        v60[0] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v20 = v14 + 32;
        do
        {
          sub_1000FF3F0(v20, (uint64_t)&v64);
          id v21 = (id)v64;
          sub_1000FFC8C((uint64_t)&v64);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v20 += 48;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        id v18 = v58;
      }
      ++v11;
      *(void *)&long long v64 = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    while (v11 != v57);
    swift_bridgeObjectRelease();
  }
  long long v22 = v68;
  long long v63 = _swiftEmptyArrayStorage;
  uint64_t v23 = v68[2];
  uint64_t result = swift_bridgeObjectRetain();
  if (v23)
  {
    unint64_t v25 = 0;
    uint64_t v26 = (uint64_t)(v22 + 4);
    while (1)
    {
      if (v25 >= v22[2])
      {
        __break(1u);
        return result;
      }
      sub_1000FF4D4(v26, (uint64_t)&v64);
      uint64_t v27 = *((void *)&v65 + 1);
      unint64_t v28 = v66;
      sub_1000FF380(&v64, *((uint64_t *)&v65 + 1));
      long long v29 = (void *)(*(uint64_t (**)(uint64_t, unint64_t))(v28 + 16))(v27, v28);
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      unsigned __int8 v35 = v34;
      LODWORD(v27) = v34;

      if (v27 < 2)
      {
        sub_1001007A8(v31, v33, v35);
      }
      else if (__PAIR128__(v33, v31) >= 2)
      {
        sub_100101314(&v64, (uint64_t)v60);
        uint64_t v36 = v63;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000FFD1C(0, v36[2] + 1, 1);
          uint64_t v36 = v63;
        }
        unint64_t v38 = v36[2];
        unint64_t v37 = v36[3];
        if (v38 >= v37 >> 1) {
          sub_1000FFD1C(v37 > 1, v38 + 1, 1);
        }
        uint64_t v39 = v61;
        uint64_t v40 = v62;
        uint64_t v41 = sub_100100994((uint64_t)v60, v61);
        __chkstk_darwin(v41);
        uint64_t v43 = (char *)v54 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v44 + 16))(v43);
        sub_10025D3E4(v38, (uint64_t)v43, (uint64_t *)&v63, v39, v40);
        uint64_t result = sub_1000FF22C((uint64_t)v60);
        goto LABEL_16;
      }
      uint64_t result = sub_1000FF22C((uint64_t)&v64);
LABEL_16:
      ++v25;
      v26 += 40;
      if (v23 == v25)
      {
        unint64_t v45 = v63;
        goto LABEL_27;
      }
    }
  }
  unint64_t v45 = _swiftEmptyArrayStorage;
LABEL_27:
  swift_bridgeObjectRelease();
  uint64_t v46 = v45[2];
  if (v46)
  {
    v60[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v47 = (uint64_t)(v45 + 4);
    do
    {
      sub_1000FF4D4(v47, (uint64_t)&v64);
      uint64_t v48 = *((void *)&v65 + 1);
      unint64_t v49 = v66;
      sub_1000FF380(&v64, *((uint64_t *)&v65 + 1));
      (*(void (**)(uint64_t, unint64_t))(v49 + 16))(v48, v49);
      sub_1001007A8(v50, v51, v52);
      sub_1000FF22C((uint64_t)&v64);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v47 += 40;
      --v46;
    }
    while (v46);
    unint64_t v53 = (void *)v60[0];
    swift_release();
  }
  else
  {
    swift_release();
    unint64_t v53 = _swiftEmptyArrayStorage;
  }
  sub_1000FF33C(&qword_1015D6F60);
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v53);
  swift_bridgeObjectRelease();
  return v67[0];
}

unint64_t sub_1000FC490()
{
  unint64_t result = qword_1015CF250;
  if (!qword_1015CF250)
  {
    sub_100100830(255, (unint64_t *)&unk_1015D6E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF250);
  }
  return result;
}

void *sub_1000FC4F8()
{
  long long v11 = xmmword_100F5CF70;
  sub_1000FC6A4((uint64_t)v12);
  sub_1000FF27C((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_1015DB0D0);
  sub_1000FC63C((uint64_t)v10, (uint64_t)v9);
  if (*(void *)&v9[0])
  {
    long long v5 = v9[0];
    long long v6 = v9[1];
    long long v7 = v9[2];
    long long v8 = v9[3];
    uint64_t v0 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_1000FA578(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    }
    unint64_t v2 = v0[2];
    unint64_t v1 = v0[3];
    if (v2 >= v1 >> 1) {
      uint64_t v0 = sub_1000FA578((void *)(v1 > 1), v2 + 1, 1, v0);
    }
    v0[2] = v2 + 1;
    id v3 = &v0[8 * v2];
    void v3[4] = v7;
    void v3[5] = v8;
    v3[2] = v5;
    v3[3] = v6;
  }
  else
  {
    sub_1000FF2E0((uint64_t)v9, (uint64_t *)&unk_1015DB0D0);
    uint64_t v0 = _swiftEmptyArrayStorage;
  }
  sub_1000FF33C((uint64_t *)&unk_1015DB0D0);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_1000FC63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015DB0D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FC6A4@<X0>(uint64_t a1@<X8>)
{
  void (*v7)(void *__return_ptr, uint64_t, uint64_t);
  id v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void v23[9];
  unsigned char v24[48];

  unint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!v4) {
    unint64_t v1 = 0;
  }
  if (!v1)
  {
LABEL_21:
    unint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t ObjectType = swift_getObjectType();
  long long v7 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 16);
  long long v8 = v2;
  v7(v23, ObjectType, v5);

  if (v23[1])
  {
    sub_1000FC8E0((uint64_t)v23, (uint64_t)v24);
    sub_1000F1C90((uint64_t)v8 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v23);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    sub_1000F1BD8((uint64_t)v23);
    if (!Strong) {
      goto LABEL_17;
    }
    swift_getObjectType();
    uint64_t v10 = swift_conformsToProtocol2();
    if (v10) {
      long long v11 = v10;
    }
    else {
      long long v11 = 0;
    }
    if (!v10) {
      unint64_t v2 = 0;
    }
    if (v2)
    {
      uint64_t v12 = swift_getObjectType();
      id v13 = v8;
      sub_1000FC980((uint64_t)v2, Strong, v12, v11);
      uint64_t v15 = v14;
      swift_unknownObjectRelease();

      if (v15)
      {

        id v16 = 0;
LABEL_18:
        v24[16] = v16;
        Swift::OpaquePointer v17 = sub_1000F5CB8();
        id v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;
        *(void *)(a1 + 4_Block_object_dispose(&STACK[0x358], 8) = &type metadata for HomeListSectionHeaderViewModel;
        *(void *)(a1 + 56) = sub_1000FC92C();
        id v21 = swift_allocObject();
        *(void *)(a1 + 24) = v21;
        unint64_t result = sub_1000FC8E0((uint64_t)v24, v21 + 16);
        *(void *)a1 = v17;
        *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v18;
        *(void *)(a1 + 16) = v20;
        return result;
      }
LABEL_17:
      id v16 = 1;
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  unint64_t result = sub_1000FF2E0((uint64_t)v23, &qword_1015DC240);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x358], 8) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1000FC8E0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_WORD *)(a2 + 16) = *(_WORD *)(a1 + 16);
  swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  return a2;
}

unint64_t sub_1000FC92C()
{
  unint64_t result = qword_1015DC248;
  if (!qword_1015DC248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DC248);
  }
  return result;
}

void sub_1000FC980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v6 = (void *)a1;
  uint64_t v7 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  if (*(void *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers))
  {
    long long v8 = *(void **)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  }
  else
  {
    long long v8 = sub_1000F0E20();
    *(void *)(a2 + v7) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(a2 + v7))
    {
      uint64_t v9 = swift_bridgeObjectRetain();
      sub_1000716FC(v9);
    }
    else
    {
      *(void *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      unint64_t v10 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
      long long v11 = (unint64_t *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess();
      *long long v11 = v10;
    }
    a1 = swift_bridgeObjectRelease();
  }
  __chkstk_darwin(a1);
  uint64_t v30 = v6;
  uint64_t v31 = a4;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1000FAE74((uint64_t (*)(long long *))sub_1000FAF38, (uint64_t)v29, (uint64_t)v8);
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (v14) {
    return;
  }
  if (!*(void *)(a2 + v7))
  {
    uint64_t v15 = sub_1000F0E20();
    *(void *)(a2 + v7) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(a2 + v7))
    {
      uint64_t v26 = swift_bridgeObjectRetain();
      sub_1000716FC(v26);
    }
    else
    {
      *(void *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      unint64_t v27 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
      unint64_t v28 = (unint64_t *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess();
      *unint64_t v28 = v27;
    }
    swift_bridgeObjectRelease();
    if ((v12 & 0x8000000000000000) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v15 = *(void **)(a2 + v7);
  if (v12 < 0) {
    goto LABEL_25;
  }
LABEL_10:
  if (v15[2] < (unint64_t)v12)
  {
LABEL_27:
    __break(1u);
    return;
  }
  char v16 = 1;
  v34[0] = v15;
  v34[1] = v15 + 4;
  long long v34[2] = 0;
  v34[3] = (2 * v12) | 1;
  uint64_t v17 = swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v32 = v15;
    uint64_t v33 = 0;
    uint64_t v18 = v12 - 1;
    uint64_t v19 = (id *)&v15[2 * v12 + 2];
    while (v18 < v12)
    {
      uint64_t v20 = *(uint64_t (**)(id, uint64_t))((swift_isaMask & *(void *)*v19) + 0xF0);
      id v21 = *v19;
      uint64_t v23 = (void *)v20(v21, v22);
      uint64_t v25 = *(void *)(v24 + 16);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      char v16 = v25 == 0;
      if (v25) {
        goto LABEL_22;
      }
      --v18;
      v19 -= 2;
      if (v18 == -1)
      {
        uint64_t v18 = 0;
        goto LABEL_22;
      }
    }
    goto LABEL_26;
  }
  uint64_t v18 = 0;
LABEL_22:
  __chkstk_darwin(v17);
  uint64_t v30 = v34;
  sub_1000FCCE8((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1000FCD48, (uint64_t)v29, v18, v16);
  swift_bridgeObjectRelease();
}

void *sub_1000FCCE8(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  uint64_t v7 = a3;
  unint64_t result = a1(&v6, &v7);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

uint64_t *sub_1000FCD48@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1000FCD68(a1, *(void **)(v2 + 16), a2);
}

uint64_t *sub_1000FCD68@<X0>(uint64_t *result@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3 = *result;
  if (*result >= a2[2] && v3 < a2[3] >> 1)
  {
    long long v5 = *(_OWORD *)(a2[1] + 16 * v3);
    *a3 = v5;
    return (uint64_t *)(id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000FCDBC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v168 = a3;
  uint64_t v185 = a2;
  uint64_t v6 = sub_1000FF33C(&qword_1015D6F70);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v161 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v177 = (uint64_t)&v161 - v10;
  uint64_t v176 = sub_1000FF33C(&qword_1015D6F78);
  uint64_t v179 = *(void *)(v176 - 8);
  uint64_t v11 = __chkstk_darwin(v176);
  int v178 = (char *)&v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v14 = (char *)&v161 - v13;
  uint64_t v184 = a1;
  sub_1000FF27C(a1, (uint64_t)&v192, (uint64_t *)&unk_1015D6E80);
  uint64_t v15 = v193;
  uint64_t v163 = v14;
  uint64_t v181 = v6;
  v180 = v9;
  if (v193)
  {
    uint64_t v16 = v194;
    sub_1000FF380(&v192, v193);
    uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
    sub_1000FF22C((uint64_t)&v192);
  }
  else
  {
    sub_1000FF2E0((uint64_t)&v192, (uint64_t *)&unk_1015D6E80);
    uint64_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v18 = (void (*)(char *, uint64_t, uint64_t))sub_1001011E0(v168);
  int64_t v19 = *((void *)v18 + 2);
  uint64_t v170 = a4;
  unint64_t v183 = (unint64_t)v17;
  if (v19)
  {
    *(void *)&long long v189 = _swiftEmptyArrayStorage;
    sub_100100D30(0, v19, 0);
    int v175 = v18;
    uint64_t v20 = (uint64_t)v18 + 32;
    uint64_t v21 = v189;
    do
    {
      sub_1000FF4D4(v20, (uint64_t)&v192);
      uint64_t v22 = v193;
      uint64_t v23 = v194;
      sub_1000FF380(&v192, v193);
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      char v30 = v29;
      sub_1000FF22C((uint64_t)&v192);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100100D30(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v189;
      }
      unint64_t v32 = *(void *)(v21 + 16);
      unint64_t v31 = *(void *)(v21 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_100100D30(v31 > 1, v32 + 1, 1);
        uint64_t v21 = v189;
      }
      *(void *)(v21 + 16) = v32 + 1;
      uint64_t v33 = v21 + 32 * v32;
      *(void *)(v33 + 32) = v24;
      *(void *)(v33 + 40) = v26;
      *(void *)(v33 + 4_Block_object_dispose(&STACK[0x358], 8) = v28;
      *(unsigned char *)(v33 + 56) = v30;
      v20 += 40;
      --v19;
    }
    while (v19);
    v182 = (uint64_t *)v21;
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)v183;
  }
  else
  {
    swift_bridgeObjectRelease();
    v182 = _swiftEmptyArrayStorage;
  }
  int64_t v34 = v17[2];
  unsigned __int8 v35 = _swiftEmptyArrayStorage;
  if (v34)
  {
    *(void *)&long long v189 = _swiftEmptyArrayStorage;
    sub_100100D30(0, v34, 0);
    uint64_t v36 = (uint64_t)(v17 + 4);
    do
    {
      sub_1000FF4D4(v36, (uint64_t)&v192);
      uint64_t v37 = v193;
      uint64_t v38 = v194;
      sub_1000FF380(&v192, v193);
      uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
      uint64_t v41 = v40;
      uint64_t v43 = v42;
      char v45 = v44;
      sub_1000FF22C((uint64_t)&v192);
      unsigned __int8 v35 = (void *)v189;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100100D30(0, v35[2] + 1, 1);
        unsigned __int8 v35 = (void *)v189;
      }
      unint64_t v47 = v35[2];
      unint64_t v46 = v35[3];
      if (v47 >= v46 >> 1)
      {
        sub_100100D30(v46 > 1, v47 + 1, 1);
        unsigned __int8 v35 = (void *)v189;
      }
      v35[2] = v47 + 1;
      uint64_t v48 = &v35[4 * v47];
      unsigned char v48[4] = v39;
      v48[5] = v41;
      id v48[6] = v43;
      *((unsigned char *)v48 + 56) = v45;
      v36 += 40;
      --v34;
    }
    while (v34);
    uint64_t v17 = (void *)v183;
  }
  uint64_t v49 = (uint64_t)v182;
  if (sub_1000FFFE4((uint64_t)v182, (uint64_t)v35))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_61:
    swift_bridgeObjectRelease();
    Swift::Int v145 = sub_1001011E0(v168);
    uint64_t v146 = v145[2];
    if (v146)
    {
      unint64_t v183 = (unint64_t)v145;
      uint64_t v147 = (uint64_t)(v145 + 4);
      do
      {
        sub_1000FF4D4(v147, (uint64_t)&v192);
        sub_1000FF27C(v184, (uint64_t)v186, (uint64_t *)&unk_1015D6E80);
        if (v187)
        {
          uint64_t v150 = v188;
          sub_1000FF380(v186, v187);
          uint64_t v151 = v193;
          uint64_t v152 = v194;
          sub_1000FF380(&v192, v193);
          unint64_t v153 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v152 + 16))(v151, v152);
          uint64_t v155 = v154;
          uint64_t v157 = v156;
          unsigned __int8 v159 = v158;
          (*(void (**)(long long *__return_ptr))(v150 + 32))(&v189);

          sub_1001007A8(v155, v157, v159);
          sub_1000FF22C((uint64_t)v186);
        }
        else
        {
          sub_1000FF2E0((uint64_t)v186, (uint64_t *)&unk_1015D6E80);
          long long v189 = 0u;
          long long v190 = 0u;
          unint64_t v191 = 0;
        }
        uint64_t v148 = v193;
        uint64_t v149 = v194;
        sub_1000FF380(&v192, v193);
        sub_1000FDED0((uint64_t)&v189, v185, v148, v149);
        sub_1000FF2E0((uint64_t)&v189, (uint64_t *)&unk_1015D6E80);
        sub_1000FF22C((uint64_t)&v192);
        v147 += 40;
        --v146;
      }
      while (v146);
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v192 = v49;
  *(void *)&long long v189 = v35;
  sub_1000FF33C(&qword_1015D6F80);
  sub_1001010F8(&qword_1015D6F88, &qword_1015D6F80);
  sub_100102500();
  uint64_t v50 = v178;
  BidirectionalCollection<>.difference<A>(from:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100102554();
  uint64_t v51 = v163;
  uint64_t v52 = v176;
  CollectionDifference<A>.inferringMoves()();
  uint64_t v53 = v179;
  uint64_t v55 = v179 + 8;
  uint64_t v54 = *(void (**)(char *, uint64_t))(v179 + 8);
  v54(v50, v52);
  v186[0] = v17;
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  uint64_t v57 = (uint64_t)v180;
  uint64_t v179 = v53 + 16;
  int v175 = v56;
  v56(v180, (uint64_t)v51, v52);
  uint64_t v58 = sub_1001010F8(&qword_1015D6FA0, &qword_1015D6F78);
  dispatch thunk of Collection.startIndex.getter();
  uint64_t v59 = v181;
  *(void *)(v57 + *(int *)(v181 + 36)) = v192;
  uint64_t v60 = v177;
  sub_100101750(v57, v177, &qword_1015D6F70);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v59 + 36));
  uint64_t v62 = *v61;
  dispatch thunk of Collection.endIndex.getter();
  if (v62 == v192)
  {
LABEL_60:
    sub_1000FF2E0(v60, &qword_1015D6F70);
    v54(v51, v52);
    goto LABEL_61;
  }
  long long v173 = v54;
  uint64_t v174 = v55;
  uint64_t v162 = v185 + 2;
  unint64_t v169 = v185 + 1;
  uint64_t v172 = v58;
  unint64_t v171 = v61;
  while (1)
  {
    v182 = (uint64_t *)dispatch thunk of Collection.subscript.read();
    unint64_t v66 = *(void **)(v65 + 8);
    uint64_t v67 = *(void *)(v65 + 16);
    uint64_t v68 = *(void *)(v65 + 24);
    uint64_t v69 = v60;
    uint64_t v71 = *(void *)(v65 + 32);
    long long v70 = *(char **)(v65 + 40);
    int v72 = *(unsigned __int8 *)(v65 + 48);
    char v73 = *(unsigned char *)(v65 + 49);
    unint64_t v183 = *(void *)v65;
    v180 = v70;
    LODWORD(v181) = v72;
    sub_1001009E4(v183, v66, v67, v68, v71);
    ((void (*)(uint64_t *, void))v182)(&v192, 0);
    uint64_t v74 = v178;
    v175(v178, v69, v52);
    dispatch thunk of Collection.formIndex(after:)();
    v173(v74, v52);
    if (v73) {
      break;
    }
    uint64_t v81 = v183;
    uint64_t v82 = v170;
    uint64_t v83 = *(void *)(v170 + 16);
    id v84 = v66;
    sub_100100818(v67, v68, v71);
    char v85 = v181;
    if (v83)
    {
      id v86 = v84;
      sub_100100818(v67, v68, v71);
      unint64_t v87 = sub_100101C10((uint64_t)v86, v67, v68, v71);
      if (v88)
      {
        os_log_type_t v166 = v66;
        uint64_t v89 = *(void *)(v82 + 56) + 32 * v87;
        uint64_t v90 = *(void *)(v89 + 8);
        uint64_t v91 = *(void *)(v89 + 16);
        uint64_t v92 = *(void *)(v89 + 24);
        id v93 = *(id *)v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v164 = v86;

        uint64_t v165 = v67;
        uint64_t v167 = v68;
        v182 = (uint64_t *)v71;
        sub_1001007A8(v67, v68, v71);
        *((void *)&v190 + 1) = &type metadata for HomeListSectionSnapshot;
        unint64_t v191 = sub_10010132C();
        int v94 = (void *)swift_allocObject();
        *(void *)&long long v189 = v94;
        v94[2] = v93;
        v94[3] = v90;
        v94[4] = v91;
        v94[5] = v92;
        sub_100101314(&v189, (uint64_t)&v192);
        if (*(void *)(v186[0] + 16) < v81) {
          goto LABEL_71;
        }
        if (v81 < 0) {
          goto LABEL_72;
        }
        sub_1000FF4D4((uint64_t)&v192, (uint64_t)&v189);
        sub_100100B80(v81, v81, (uint64_t)&v189);
        if (v85)
        {
          sub_1000FF4D4((uint64_t)&v192, (uint64_t)&v189);
          unint64_t v126 = v185;
          unint64_t v127 = (void *)*v185;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t *v126 = (uint64_t)v127;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v127 = sub_1000FF814(0, v127[2] + 1, 1, v127);
            uint64_t *v185 = (uint64_t)v127;
          }
          unint64_t v130 = v127[2];
          unint64_t v129 = v127[3];
          if (v130 >= v129 >> 1)
          {
            uint64_t v144 = sub_1000FF814((void *)(v129 > 1), v130 + 1, 1, v127);
            uint64_t *v185 = (uint64_t)v144;
          }
          uint64_t v131 = *((void *)&v190 + 1);
          uint64_t v132 = v191;
          uint64_t v133 = sub_100100994((uint64_t)&v189, *((uint64_t *)&v190 + 1));
          __chkstk_darwin(v133);
          unsigned __int8 v135 = (char *)&v161 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v136 + 16))(v135);
          uint64_t v137 = (uint64_t)v135;
          unint64_t v138 = v185;
          sub_100100A84(v130, v137, v185, v131, v132);
          sub_1000FF22C((uint64_t)&v189);
          uint64_t v139 = *v138;

          uint64_t v140 = v165;
          uint64_t v141 = v167;
          LOBYTE(v131) = (_BYTE)v182;
          sub_1001007A8(v165, v167, v182);
          sub_100100A34(v81, v166, v140, v141, v131);
          *unint64_t v138 = v139;
        }
        else
        {
          sub_1000FF4D4((uint64_t)&v192, (uint64_t)&v189);
          BOOL v95 = v162;
          uint64_t v96 = (void *)*v162;
          char v97 = swift_isUniquelyReferenced_nonNull_native();
          *BOOL v95 = (uint64_t)v96;
          if ((v97 & 1) == 0)
          {
            uint64_t v96 = sub_1000FF814(0, v96[2] + 1, 1, v96);
            *uint64_t v162 = (uint64_t)v96;
          }
          unint64_t v99 = v96[2];
          unint64_t v98 = v96[3];
          if (v99 >= v98 >> 1)
          {
            uint64_t v143 = sub_1000FF814((void *)(v98 > 1), v99 + 1, 1, v96);
            *uint64_t v162 = (uint64_t)v143;
          }
          uint64_t v100 = *((void *)&v190 + 1);
          uint64_t v101 = v191;
          uint64_t v102 = sub_100100994((uint64_t)&v189, *((uint64_t *)&v190 + 1));
          __chkstk_darwin(v102);
          uint64_t v104 = (char *)&v161 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v105 + 16))(v104);
          uint64_t v106 = v162;
          sub_100100A84(v99, (uint64_t)v104, v162, v100, v101);
          sub_1000FF22C((uint64_t)&v189);
          uint64_t v107 = *v106;

          uint64_t v108 = v165;
          uint64_t v109 = v167;
          LOBYTE(v100) = (_BYTE)v182;
          sub_1001007A8(v165, v167, v182);
          uint64_t v110 = v81;
          objc_super v111 = v166;
          uint64_t v112 = v108;
          uint64_t v113 = v109;
          unsigned __int8 v114 = v100;
LABEL_52:
          sub_100100A34(v110, v111, v112, v113, v114);
          *uint64_t v106 = v107;
        }
        goto LABEL_53;
      }

      sub_1001007A8(v67, v68, v71);
    }

    sub_1001007A8(v67, v68, v71);
    sub_100100A34(v81, v66, v67, v68, v71);
    uint64_t v52 = v176;
    long long v63 = v171;
    uint64_t v60 = v177;
LABEL_27:
    uint64_t v64 = *v63;
    dispatch thunk of Collection.endIndex.getter();
    if (v64 == v192)
    {
      uint64_t v51 = v163;
      uint64_t v54 = v173;
      goto LABEL_60;
    }
  }
  unint64_t v75 = v183;
  if ((v183 & 0x8000000000000000) == 0)
  {
    long long v76 = (void *)v186[0];
    if (v183 >= *(void *)(v186[0] + 16)) {
      goto LABEL_69;
    }
    long long v77 = v66;
    sub_1000FF4D4(v186[0] + 40 * v183 + 32, (uint64_t)&v192);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      long long v76 = sub_1003481D0(v76);
      v186[0] = v76;
    }
    char v78 = v181;
    unint64_t v79 = v76[2];
    if (v75 >= v79) {
      goto LABEL_70;
    }
    unint64_t v80 = v79 - 1;
    sub_1000FF22C((uint64_t)&v76[5 * v75 + 4]);
    if ((uint64_t)(v80 - v75) < 0) {
      goto LABEL_73;
    }
    memmove(&v76[5 * v75 + 4], &v76[5 * v75 + 9], 40 * (v80 - v75));
    v76[2] = v80;
    v186[0] = v76;
    if (v78)
    {
      sub_1000FF4D4((uint64_t)&v192, (uint64_t)&v189);
      unint64_t v115 = v169;
      unint64_t v116 = (void *)*v169;
      char v117 = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v115 = (uint64_t)v116;
      if ((v117 & 1) == 0)
      {
        unint64_t v116 = sub_1000FF814(0, v116[2] + 1, 1, v116);
        *unint64_t v169 = (uint64_t)v116;
      }
      unint64_t v119 = v116[2];
      unint64_t v118 = v116[3];
      if (v119 >= v118 >> 1)
      {
        uint64_t v142 = sub_1000FF814((void *)(v118 > 1), v119 + 1, 1, v116);
        *unint64_t v169 = (uint64_t)v142;
      }
      uint64_t v120 = *((void *)&v190 + 1);
      uint64_t v121 = v191;
      uint64_t v122 = sub_100100994((uint64_t)&v189, *((uint64_t *)&v190 + 1));
      v182 = &v161;
      __chkstk_darwin(v122);
      uint64_t v124 = (char *)&v161 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v125 + 16))(v124);
      uint64_t v106 = v169;
      sub_100100A84(v119, (uint64_t)v124, v169, v120, v121);
      sub_1000FF22C((uint64_t)&v189);
      uint64_t v110 = v183;
      uint64_t v107 = *v106;
      objc_super v111 = v77;
      uint64_t v112 = v67;
      uint64_t v113 = v68;
      unsigned __int8 v114 = v71;
      goto LABEL_52;
    }
    sub_100100A34(v75, v66, v67, v68, v71);
LABEL_53:
    sub_1000FF22C((uint64_t)&v192);
    uint64_t v60 = v177;
    uint64_t v52 = v176;
    long long v63 = v171;
    goto LABEL_27;
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1000FDE9C()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t sub_1000FDED0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  void (*v106)(long long *__return_ptr, int *, uint64_t *, uint64_t, void (*)(void, void, void), uint64_t, uint64_t);
  int *v107;
  unsigned __int8 v108;
  char v109;
  uint64_t *v110;
  void *v111;
  char v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t *v120;
  void *v121;
  char v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  void *v133;
  void *v134;
  void *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  unsigned __int8 v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  char v159;
  uint64_t result;
  uint64_t *v161;
  char v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t (*v171)(uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t *v176;
  uint64_t v177;
  void *v178;
  uint64_t (*v179)(void, void);
  uint64_t v180;
  uint64_t v181;
  void (*v182)(char *, uint64_t);
  uint64_t v183;
  void (*v184)(char *, uint64_t, uint64_t);
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  int *v193;
  void *v194;
  uint64_t v195;
  uint64_t *v196;
  void v197[3];
  uint64_t v198;
  uint64_t v199;
  long long v200;
  long long v201;
  uint64_t v202;
  void *v203;
  uint64_t v204;
  uint64_t v205;

  v180 = a4;
  uint64_t v196 = a2;
  uint64_t v187 = a3;
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v168 = (char *)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v169 = (char *)&v168 - v9;
  __chkstk_darwin(v8);
  unint64_t v191 = (char *)&v168 - v10;
  uint64_t v11 = (int *)sub_1000FF33C(&qword_1015D6F70);
  uint64_t v12 = __chkstk_darwin(v11);
  char v14 = (char *)&v168 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v185 = (uint64_t)&v168 - v15;
  uint64_t v188 = sub_1000FF33C(&qword_1015D6F78);
  long long v189 = *(void *)(v188 - 8);
  uint64_t v16 = __chkstk_darwin(v188);
  uint64_t v186 = (char *)&v168 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int64_t v19 = (char *)&v168 - v18;
  v195 = a1;
  sub_1000FF27C(a1, (uint64_t)&v203, (uint64_t *)&unk_1015D6E80);
  uint64_t v20 = v204;
  uint64_t v170 = v19;
  uint64_t v192 = v14;
  uint64_t v193 = v11;
  if (v204)
  {
    uint64_t v21 = v205;
    sub_1000FF380(&v203, v204);
    uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    sub_1000FF22C((uint64_t)&v203);
  }
  else
  {
    sub_1000FF2E0((uint64_t)&v203, (uint64_t *)&unk_1015D6E80);
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v180 + 24);
  uint64_t v172 = v180 + 24;
  unint64_t v171 = v23;
  uint64_t v24 = ((uint64_t (*)(uint64_t))v23)(v187);
  int64_t v25 = *(void *)(v24 + 16);
  long long v173 = v5;
  uint64_t v194 = v22;
  if (v25)
  {
    *(void *)&int v200 = _swiftEmptyArrayStorage;
    sub_100100D30(0, v25, 0);
    uint64_t v26 = v24 + 32;
    uint64_t v27 = (void *)v200;
    do
    {
      sub_1000FF4D4(v26, (uint64_t)&v203);
      uint64_t v28 = v204;
      uint64_t v29 = v205;
      sub_1000FF380(&v203, v204);
      uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
      uint64_t v32 = v31;
      uint64_t v34 = v33;
      char v36 = v35;
      sub_1000FF22C((uint64_t)&v203);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100100D30(0, v27[2] + 1, 1);
        uint64_t v27 = (void *)v200;
      }
      unint64_t v38 = v27[2];
      unint64_t v37 = v27[3];
      if (v38 >= v37 >> 1)
      {
        sub_100100D30(v37 > 1, v38 + 1, 1);
        uint64_t v27 = (void *)v200;
      }
      v27[2] = v38 + 1;
      uint64_t v39 = &v27[4 * v38];
      void v39[4] = v30;
      void v39[5] = v32;
      v39[6] = v34;
      *((unsigned char *)v39 + 56) = v36;
      v26 += 40;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v22 = v194;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = _swiftEmptyArrayStorage;
  }
  int64_t v40 = v22[2];
  uint64_t v41 = _swiftEmptyArrayStorage;
  if (v40)
  {
    long long v190 = (uint64_t)v27;
    *(void *)&int v200 = _swiftEmptyArrayStorage;
    sub_100100D30(0, v40, 0);
    uint64_t v42 = (uint64_t)(v22 + 4);
    do
    {
      sub_1000FF4D4(v42, (uint64_t)&v203);
      uint64_t v43 = v204;
      uint64_t v44 = v205;
      sub_1000FF380(&v203, v204);
      uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
      uint64_t v47 = v46;
      uint64_t v49 = v48;
      char v51 = v50;
      sub_1000FF22C((uint64_t)&v203);
      uint64_t v41 = (void *)v200;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100100D30(0, v41[2] + 1, 1);
        uint64_t v41 = (void *)v200;
      }
      unint64_t v53 = v41[2];
      unint64_t v52 = v41[3];
      if (v53 >= v52 >> 1)
      {
        sub_100100D30(v52 > 1, v53 + 1, 1);
        uint64_t v41 = (void *)v200;
      }
      v41[2] = v53 + 1;
      uint64_t v54 = &v41[4 * v53];
      v54[4] = v45;
      v54[5] = v47;
      v54[6] = v49;
      *((unsigned char *)v54 + 56) = v51;
      v42 += 40;
      --v40;
    }
    while (v40);
    uint64_t v22 = v194;
    uint64_t v27 = (void *)v190;
  }
  char v55 = sub_1000FFFE4((uint64_t)v27, (uint64_t)v41);
  uint64_t v56 = v188;
  if (v55)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  v203 = v27;
  *(void *)&int v200 = v41;
  sub_1000FF33C(&qword_1015D6F80);
  sub_1001010F8(&qword_1015D6F88, &qword_1015D6F80);
  sub_100102500();
  uint64_t v57 = v186;
  BidirectionalCollection<>.difference<A>(from:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100102554();
  uint64_t v58 = v170;
  CollectionDifference<A>.inferringMoves()();
  uint64_t v59 = v189;
  uint64_t v60 = v189 + 8;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v189 + 8);
  v61(v57, v56);
  v197[0] = v22;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  uint64_t v63 = (uint64_t)v192;
  long long v189 = v59 + 16;
  uint64_t v184 = v62;
  v62(v192, (uint64_t)v58, v56);
  uint64_t v64 = (uint64_t (*)(void, void))sub_1001010F8(&qword_1015D6FA0, &qword_1015D6F78);
  dispatch thunk of Collection.startIndex.getter();
  uint64_t v65 = v193;
  *(void *)(v63 + v193[9]) = v203;
  uint64_t v66 = v185;
  sub_100101750(v63, v185, &qword_1015D6F70);
  uint64_t v67 = (void *)(v66 + v65[9]);
  uint64_t v68 = (void *)*v67;
  dispatch thunk of Collection.endIndex.getter();
  if (v68 != v203)
  {
    v182 = v61;
    unint64_t v183 = v60;
    uint64_t v177 = v180 + 32;
    int v175 = v196 + 2;
    uint64_t v176 = v196 + 1;
    uint64_t v179 = v64;
    int v178 = v67;
    while (1)
    {
      long long v70 = (void (*)(void **, void))dispatch thunk of Collection.subscript.read();
      unint64_t v73 = *(void *)v71;
      int v72 = *(int **)(v71 + 8);
      uint64_t v74 = *(uint64_t **)(v71 + 16);
      uint64_t v75 = *(void *)(v71 + 24);
      uint64_t v76 = v56;
      long long v77 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 32);
      int v78 = *(unsigned __int8 *)(v71 + 48);
      uint64_t v79 = *(unsigned __int8 *)(v71 + 49);
      uint64_t v80 = *(void *)v71;
      uint64_t v192 = *(char **)(v71 + 40);
      uint64_t v193 = v72;
      LODWORD(v194) = v78;
      sub_1001009E4(v80, v72, (uint64_t)v74, v75, v77);
      v70(&v203, 0);
      uint64_t v81 = v186;
      v184(v186, v66, v76);
      dispatch thunk of Collection.formIndex(after:)();
      v182(v81, v76);
      if ((v79 & 1) == 0) {
        break;
      }
      long long v190 = (uint64_t)v74;
      id v82 = v193;
      if ((v73 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      uint64_t v74 = (uint64_t *)v73;
      uint64_t v83 = (void *)v197[0];
      if (v73 >= *(void *)(v197[0] + 16)) {
        goto LABEL_76;
      }
      uint64_t v79 = 40;
      sub_1000FF4D4(v197[0] + 40 * v73 + 32, (uint64_t)&v203);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v83 = sub_1003481D0(v83);
        v197[0] = v83;
      }
      char v84 = (char)v194;
      unint64_t v85 = v83[2];
      if (v73 >= v85) {
        goto LABEL_77;
      }
      unint64_t v86 = v85 - 1;
      sub_1000FF22C((uint64_t)&v83[5 * v73 + 4]);
      if ((uint64_t)(v86 - v73) < 0)
      {
        uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      memmove(&v83[5 * v73 + 4], &v83[5 * v73 + 9], 40 * (v86 - v73));
      v83[2] = v86;
      v197[0] = v83;
      if (v84)
      {
        sub_1000FF4D4((uint64_t)&v203, (uint64_t)&v200);
        unint64_t v87 = v176;
        char v88 = (void *)*v176;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t *v87 = (uint64_t)v88;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v88 = sub_1000FF814(0, v88[2] + 1, 1, v88);
          *uint64_t v176 = (uint64_t)v88;
        }
        unint64_t v91 = v88[2];
        unint64_t v90 = v88[3];
        if (v91 >= v90 >> 1)
        {
          uint64_t v133 = sub_1000FF814((void *)(v90 > 1), v91 + 1, 1, v88);
          *uint64_t v176 = (uint64_t)v133;
        }
        uint64_t v92 = *((void *)&v201 + 1);
        uint64_t v93 = v202;
        uint64_t v94 = sub_100100994((uint64_t)&v200, *((uint64_t *)&v201 + 1));
        __chkstk_darwin(v94);
        uint64_t v96 = (char *)&v168 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v97 + 16))(v96);
        unint64_t v98 = v176;
        sub_100100A84(v91, (uint64_t)v96, v176, v92, v93);
        sub_1000FF22C((uint64_t)&v200);
        uint64_t v99 = *v98;
        uint64_t v100 = v73;
        id v101 = v82;
        uint64_t v102 = v190;
        uint64_t v103 = v75;
        unsigned __int8 v104 = v77;
LABEL_50:
        sub_100100A34(v100, v101, v102, v103, v104);
        *unint64_t v98 = v99;
        goto LABEL_26;
      }
      sub_100100A34(v73, v82, v190, v75, v77);
LABEL_26:
      sub_1000FF22C((uint64_t)&v203);
LABEL_27:
      uint64_t v66 = v185;
      uint64_t v56 = v188;
      uint64_t v64 = v179;
      uint64_t v69 = (void *)*v178;
      dispatch thunk of Collection.endIndex.getter();
      if (v69 == v203)
      {
        uint64_t v58 = v170;
        uint64_t v61 = v182;
        goto LABEL_58;
      }
    }
    long long v190 = v73;
    uint64_t v105 = v180;
    uint64_t v106 = *(void (**)(long long *__return_ptr, int *, uint64_t *, uint64_t, void (*)(void, void, void), uint64_t, uint64_t))(v180 + 32);
    uint64_t v79 = (uint64_t)v193;
    uint64_t v107 = v193;
    sub_100100818((uint64_t)v74, v75, v77);
    v106(&v200, v107, v74, v75, (void (*)(void, void, void))v77, v187, v105);
    uint64_t v108 = v77;
    long long v77 = (void (*)(char *, uint64_t, uint64_t))v75;
    if (!*((void *)&v201 + 1))
    {
      sub_1000FF2E0((uint64_t)&v200, (uint64_t *)&unk_1015D6E80);

      sub_1001007A8((uint64_t)v74, v75, v108);
      sub_100100A34(v190, (void *)v79, (uint64_t)v74, v75, v108);
      goto LABEL_27;
    }
    sub_100101314(&v200, (uint64_t)&v203);
    uint64_t v64 = (uint64_t (*)(void, void))v190;
    uint64_t v109 = (char)v194;
    if (*(void *)(v197[0] + 16) < v190) {
      goto LABEL_78;
    }
    if (v190 < 0) {
      goto LABEL_79;
    }
    sub_1000FF4D4((uint64_t)&v203, (uint64_t)&v200);
    sub_100100B80((uint64_t)v64, (int64_t)v64, (uint64_t)&v200);
    if (v109)
    {
      sub_1000FF4D4((uint64_t)&v203, (uint64_t)&v200);
      uint64_t v120 = v196;
      uint64_t v121 = (void *)*v196;
      uint64_t v122 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v120 = (uint64_t)v121;
      if ((v122 & 1) == 0)
      {
        uint64_t v121 = sub_1000FF814(0, v121[2] + 1, 1, v121);
        void *v196 = (uint64_t)v121;
      }
      uint64_t v124 = v121[2];
      uint64_t v123 = v121[3];
      if (v124 >= v123 >> 1)
      {
        unsigned __int8 v135 = sub_1000FF814((void *)(v123 > 1), v124 + 1, 1, v121);
        void *v196 = (uint64_t)v135;
      }
      uint64_t v125 = *((void *)&v201 + 1);
      uint64_t v174 = v202;
      unint64_t v126 = sub_100100994((uint64_t)&v200, *((uint64_t *)&v201 + 1));
      __chkstk_darwin(v126);
      uint64_t v128 = (char *)&v168 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v129 + 16))(v128);
      unint64_t v130 = (uint64_t)v128;
      uint64_t v131 = v196;
      sub_100100A84(v124, v130, v196, v125, v174);
      sub_1000FF22C((uint64_t)&v200);
      uint64_t v132 = *v131;

      sub_1001007A8((uint64_t)v74, v75, v108);
      sub_100100A34(v190, (void *)v79, (uint64_t)v74, v75, v108);
      *uint64_t v131 = v132;
      goto LABEL_26;
    }
    sub_1000FF4D4((uint64_t)&v203, (uint64_t)&v200);
    uint64_t v110 = v175;
    objc_super v111 = (void *)*v175;
    uint64_t v112 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v110 = (uint64_t)v111;
    if ((v112 & 1) == 0)
    {
      objc_super v111 = sub_1000FF814(0, v111[2] + 1, 1, v111);
      *int v175 = (uint64_t)v111;
    }
    unsigned __int8 v114 = v111[2];
    uint64_t v113 = v111[3];
    if (v114 >= v113 >> 1)
    {
      uint64_t v134 = sub_1000FF814((void *)(v113 > 1), v114 + 1, 1, v111);
      *int v175 = (uint64_t)v134;
    }
    unint64_t v115 = *((void *)&v201 + 1);
    uint64_t v174 = v202;
    unint64_t v116 = sub_100100994((uint64_t)&v200, *((uint64_t *)&v201 + 1));
    __chkstk_darwin(v116);
    unint64_t v118 = (char *)&v168 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v119 + 16))(v118);
    unint64_t v98 = v175;
    sub_100100A84(v114, (uint64_t)v118, v175, v115, v174);
    sub_1000FF22C((uint64_t)&v200);
    uint64_t v99 = *v98;

    sub_1001007A8((uint64_t)v74, v75, v108);
    uint64_t v100 = v190;
    id v101 = v193;
    uint64_t v102 = (uint64_t)v74;
    uint64_t v103 = v75;
    unsigned __int8 v104 = v108;
    goto LABEL_50;
  }
LABEL_58:
  sub_1000FF2E0(v66, &qword_1015D6F70);
  v61(v58, v56);
LABEL_59:
  swift_bridgeObjectRelease();
  uint64_t v136 = v191;
  uint64_t v137 = v171(v187, v180);
  unint64_t v138 = *(void *)(v137 + 16);
  if (v138)
  {
    uint64_t v194 = (void *)v137;
    uint64_t v139 = v137 + 32;
    do
    {
      sub_1000FF4D4(v139, (uint64_t)&v203);
      sub_1000FF27C(v195, (uint64_t)v197, (uint64_t *)&unk_1015D6E80);
      if (v198)
      {
        uint64_t v140 = v199;
        sub_1000FF380(v197, v198);
        uint64_t v141 = v204;
        uint64_t v142 = v205;
        sub_1000FF380(&v203, v204);
        uint64_t v143 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v142 + 16))(v141, v142);
        Swift::Int v145 = v144;
        uint64_t v147 = v146;
        uint64_t v149 = v148;
        (*(void (**)(long long *__return_ptr))(v140 + 32))(&v200);

        uint64_t v136 = v191;
        sub_1001007A8(v145, v147, v149);
        sub_1000FF22C((uint64_t)v197);
      }
      else
      {
        sub_1000FF2E0((uint64_t)v197, (uint64_t *)&unk_1015D6E80);
        int v200 = 0u;
        v201 = 0u;
        int v202 = 0;
      }
      uint64_t v150 = v204;
      uint64_t v151 = v205;
      sub_1000FF380(&v203, v204);
      sub_1000FDED0(&v200, v196, v150, v151);
      sub_1000FF2E0((uint64_t)&v200, (uint64_t *)&unk_1015D6E80);
      sub_1000FF22C((uint64_t)&v203);
      v139 += 40;
      --v138;
    }
    while (v138);
    uint64_t v152 = v136;
  }
  else
  {
    uint64_t v152 = v136;
  }
  swift_bridgeObjectRelease();
  unint64_t v153 = v195;
  uint64_t v154 = *(void *)(v195 + 24);
  uint64_t v155 = v173;
  long long v77 = *(void (**)(char *, uint64_t, uint64_t))(v173 + 16);
  uint64_t v156 = v187;
  v77(v152, v181, v187);
  sub_1000FF27C(v153, (uint64_t)&v203, (uint64_t *)&unk_1015D6E80);
  if (v154)
  {
    uint64_t v157 = (*(uint64_t (**)(void **, uint64_t))(v180 + 40))(&v203, v187);
    unsigned __int8 v158 = v187;
    unsigned __int8 v159 = v157;
    sub_1000FF2E0((uint64_t)&v203, (uint64_t *)&unk_1015D6E80);
    uint64_t v64 = *(uint64_t (**)(void, void))(v155 + 8);
    uint64_t result = v64(v152, v158);
    if (v159)
    {
      v77(v169, v181, v158);
      uint64_t v161 = v196 + 3;
      uint64_t v79 = v196[3];
      uint64_t v162 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v74 = v161;
      *uint64_t v161 = v79;
      if ((v162 & 1) == 0)
      {
LABEL_80:
        uint64_t v79 = (uint64_t)sub_1000FF814(0, *(void *)(v79 + 16) + 1, 1, (void *)v79);
        *uint64_t v74 = v79;
      }
      id v164 = *(void *)(v79 + 16);
      uint64_t v163 = *(void *)(v79 + 24);
      if (v164 >= v163 >> 1) {
        *uint64_t v74 = (uint64_t)sub_1000FF814((void *)(v163 > 1), v164 + 1, 1, (void *)v79);
      }
      uint64_t v165 = (uint64_t)v168;
      os_log_type_t v166 = v169;
      uint64_t v167 = v187;
      v77(v168, (uint64_t)v169, v187);
      sub_100100A84(v164, v165, v74, v167, v180);
      return v64(v166, v167);
    }
  }
  else
  {
    sub_1000FF2E0((uint64_t)&v203, (uint64_t *)&unk_1015D6E80);
    return (*(uint64_t (**)(char *, uint64_t))(v155 + 8))(v152, v156);
  }
  return result;
}

uint64_t sub_1000FF22C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000FF27C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000FF33C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000FF2E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000FF33C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000FF33C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *sub_1000FF380(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1000FF3C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1000FF3F0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for HomeListCellSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

uint64_t sub_1000FF4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaceSummaryUnitString(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1000FF570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t destroy for HomeListSectionSnapshot(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void **initializeBufferWithCopyOfBuffer for HomeListOneLineCellModel(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void *CarEVChargingAvailabilityViewController.preferredFocusEnvironments.getter()
{
  return &_swiftEmptyArrayStorage;
}

void *sub_1000FF648()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1000FFB6C(*(void *)(v0 + 8));
  sub_1000FF69C((uint64_t)v2);
  uint64_t v3 = sub_1000FFA4C(v1);
  sub_1000FF69C((uint64_t)v3);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000FF69C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1000FF814(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_1000FF33C(&qword_1015D2AD0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1000FF814(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D6EB0);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000FF93C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000FF93C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1000FF33C(&qword_1015D2AD0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1000FFA4C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
    sub_1000FFD1C(0, v1, 0);
    unint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1000FFEE8(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1000FFD1C(v5 > 1, v6 + 1, 1);
        unint64_t v2 = v12;
      }
      uint64_t v9 = &type metadata for HomeListSupplementaryViewSnapshot;
      unint64_t v10 = sub_100100938();
      *(void *)&long long v8 = swift_allocObject();
      sub_1000FFEE8((uint64_t)v11, v8 + 16);
      v2[2] = v6 + 1;
      sub_100101314(&v8, (uint64_t)&v2[5 * v6 + 4]);
      sub_1001008A0((uint64_t)v11);
      v4 += 64;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_1000FFB6C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
    sub_1000FFD1C(0, v1, 0);
    unint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1000FF3F0(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1000FFD1C(v5 > 1, v6 + 1, 1);
        unint64_t v2 = v12;
      }
      uint64_t v9 = &type metadata for HomeListCellSnapshot;
      unint64_t v10 = sub_100100330();
      *(void *)&long long v8 = swift_allocObject();
      sub_1000FF3F0((uint64_t)v11, v8 + 16);
      v2[2] = v6 + 1;
      sub_100101314(&v8, (uint64_t)&v2[5 * v6 + 4]);
      sub_1000FFC8C((uint64_t)v11);
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1000FFC8C(uint64_t a1)
{
  return a1;
}

uint64_t destroy for HomeListCellSnapshot(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return sub_1000FF22C(v1);
}

uint64_t sub_1000FFD1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000FFD3C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000FFD3C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D6EB0);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1000FF33C(&qword_1015D2AD0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void destroy for PlaceSummaryView.Autocomplete(id *a1)
{
}

uint64_t sub_1000FFEE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for HomeListSupplementaryViewSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  uint64_t v6 = a2 + 24;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x358], 8) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v3;
  swift_bridgeObjectRetain();
  v9(v5, v6, v8);
  return a1;
}

uint64_t sub_1000FFFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  for (uint64_t i = 0; ; i += 32)
  {
    uint64_t v21 = v2;
    uint64_t v5 = *(void *)(a1 + i + 40);
    uint64_t v6 = *(void *)(a1 + i + 48);
    int v7 = *(unsigned __int8 *)(a1 + i + 56);
    uint64_t v9 = *(void **)(a2 + i + 32);
    uint64_t v8 = *(void *)(a2 + i + 40);
    uint64_t v10 = *(void *)(a2 + i + 48);
    int v11 = *(unsigned __int8 *)(a2 + i + 56);
    id v12 = *(id *)(a1 + i + 32);
    sub_100100818(v5, v6, v7);
    id v13 = v9;
    sub_100100818(v8, v10, v11);
    if ((static NSObject.== infix(_:_:)() & 1) == 0)
    {

      sub_1001007A8(v8, v10, v11);
      uint64_t v16 = v5;
      uint64_t v17 = v6;
      unsigned __int8 v18 = v7;
      goto LABEL_37;
    }
    if (!v7) {
      break;
    }
    if (v7 == 1)
    {
      if (v11 != 1)
      {

        sub_1001007A8(v8, v10, v11);
        uint64_t v16 = v5;
        uint64_t v17 = v6;
        unsigned __int8 v18 = 1;
        goto LABEL_37;
      }
      if (v5 == v8 && v6 == v10)
      {

        sub_1001007A8(v5, v6, 1u);
        sub_1001007A8(v5, v6, 1u);
      }
      else
      {
        char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();

        sub_1001007A8(v8, v10, 1u);
        sub_1001007A8(v5, v6, 1u);
        if ((v4 & 1) == 0) {
          return 0;
        }
      }
    }
    else
    {
      if (v5 | v6)
      {
        if (v5 ^ 1 | v6)
        {
          if (v11 != 2 || v8 != 2) {
            goto LABEL_34;
          }
        }
        else if (v11 != 2 || v8 != 1)
        {
          goto LABEL_34;
        }
        if (v10) {
          goto LABEL_34;
        }
      }
      else if (v11 != 2 || v10 | v8)
      {
LABEL_34:

        sub_1001007A8(v8, v10, v11);
        return 0;
      }
    }
LABEL_6:
    uint64_t v2 = v21 - 1;
    if (v21 == 1) {
      return 1;
    }
  }
  if (!v11)
  {
    if (v5 == v8 && v6 == v10)
    {

      sub_1001007A8(v5, v6, 0);
      sub_1001007A8(v5, v6, 0);
    }
    else
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

      sub_1001007A8(v8, v10, 0);
      sub_1001007A8(v5, v6, 0);
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    goto LABEL_6;
  }

  sub_1001007A8(v8, v10, v11);
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  unsigned __int8 v18 = 0;
LABEL_37:
  sub_1001007A8(v16, v17, v18);
  return 0;
}

unint64_t sub_100100330()
{
  unint64_t result = qword_1015D6EB8;
  if (!qword_1015D6EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6EB8);
  }
  return result;
}

void *initializeWithCopy for HomeListSectionSnapshot(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

double sub_1001003DC@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  if (*(void *)(a5 + 16))
  {
    id v11 = a1;
    sub_100100818(a2, a3, a4);
    unint64_t v12 = sub_100101C10((uint64_t)v11, a2, a3, a4);
    if (v13)
    {
      sub_1000FF27C(*(void *)(a5 + 56) + 40 * v12, (uint64_t)&v15, &qword_1015D2AC0);

      sub_1001007A8(a2, a3, a4);
      if (*((void *)&v16 + 1))
      {
        sub_1000FF4D4((uint64_t)&v15, a6);
        sub_1000FF2E0((uint64_t)&v15, &qword_1015D2AC0);
        return result;
      }
    }
    else
    {
      uint64_t v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;

      sub_1001007A8(a2, a3, a4);
    }
  }
  else
  {
    uint64_t v17 = 0;
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_1000FF2E0((uint64_t)&v15, (uint64_t *)&unk_1015D6E90);
  *(void *)(a6 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return result;
}

unint64_t sub_100100500(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v7 = a5 & ~v6;
  if ((*(void *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v32 = ~v6;
    sub_100100830(0, (unint64_t *)&qword_1015CE490);
    BOOL v11 = a2 != 2;
    BOOL v12 = a2 != 1;
    if (a3)
    {
      BOOL v11 = 1;
      BOOL v12 = 1;
    }
    BOOL v13 = a4 == 2;
    uint64_t v31 = a3;
    if (a4 != 2) {
      BOOL v11 = 1;
    }
    BOOL v28 = v11;
    char v14 = a4 != 2 || v12;
    if (a3 | a2) {
      BOOL v13 = 0;
    }
    BOOL v26 = v13;
    char v27 = v14;
    char v30 = a4;
    do
    {
      uint64_t v16 = *(void *)(v5 + 48) + 32 * v7;
      uint64_t v17 = *(void *)(v16 + 8);
      uint64_t v18 = *(void *)(v16 + 16);
      int v15 = *(unsigned __int8 *)(v16 + 24);
      id v19 = *(id *)v16;
      sub_100100818(v17, v18, v15);
      if ((static NSObject.== infix(_:_:)() & 1) == 0) {
        goto LABEL_13;
      }
      if (v15)
      {
        if (v15 == 1)
        {
          if (a4 != 1)
          {
            LOBYTE(v15) = 1;
LABEL_13:

            sub_1001007A8(v17, v18, v15);
            goto LABEL_14;
          }
          BOOL v22 = v17 == a2;
          uint64_t v20 = a2;
          uint64_t v21 = v31;
          BOOL v22 = v22 && v18 == v31;
          if (v22) {
            goto LABEL_41;
          }
          char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();

          sub_1001007A8(v17, v18, 1u);
          a2 = v20;
          a4 = v30;
          if (v29) {
            return v7;
          }
        }
        else if (v17 | v18)
        {
          if (v17 ^ 1 | v18)
          {

            if (!v28) {
              return v7;
            }
          }
          else
          {

            if ((v27 & 1) == 0) {
              return v7;
            }
          }
        }
        else
        {

          if (v26) {
            return v7;
          }
        }
      }
      else
      {
        if (a4)
        {
          LOBYTE(v15) = 0;
          goto LABEL_13;
        }
        BOOL v22 = v17 == a2;
        uint64_t v20 = a2;
        uint64_t v21 = v31;
        if (v22 && v18 == v31)
        {
LABEL_41:

          sub_1001007A8(v20, v21, v15);
          return v7;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();

        sub_1001007A8(v17, v18, 0);
        a2 = v20;
        a4 = v30;
        if (v24) {
          return v7;
        }
      }
LABEL_14:
      unint64_t v7 = (v7 + 1) & v32;
    }
    while (((*(void *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_1001007A8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for HomeListElementKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  id v7 = v3;
  sub_100100818(v4, v5, v6);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_100100818(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100100830(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_10010086C()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t sub_1001008A0(uint64_t a1)
{
  return a1;
}

uint64_t destroy for HomeListSupplementaryViewSnapshot(id *a1)
{
  swift_bridgeObjectRelease();

  return sub_1000FF22C((uint64_t)(a1 + 3));
}

unint64_t sub_100100938()
{
  unint64_t result = qword_1015D6EA8;
  if (!qword_1015D6EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6EA8);
  }
  return result;
}

double sub_10010098C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_1001003DC(a1, a2, a3, a4, *(void *)(v5 + 24), a5);
}

uint64_t sub_100100994(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1001009E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  id v8 = a2;

  return sub_100100818(a3, a4, a5);
}

uint64_t sub_100100A34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  return sub_1001007A8(a3, a4, a5);
}

uint64_t sub_100100A84(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_100100B1C((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_100101314(&v12, v10 + 40 * a1 + 32);
}

uint64_t *sub_100100B1C(uint64_t *a1)
{
  id v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100100B80(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1000FF814(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(void *)uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1000FF33C(&qword_1015D2AD0);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = (char *)(v14 + 40);
    id v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
      memmove(v18, v19, 40 * v17);
    }
    uint64_t v20 = v5[2];
    BOOL v16 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v16)
    {
      id v5[2] = v21;
LABEL_20:
      sub_1000FF4D4(a3, v14);
      return sub_1000FF2E0(a3, &qword_1015DC520);
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100100D30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100100D50(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100100D50(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015D6FA8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100100EB8()
{
  id v1 = *v0;
  id v2 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001010F8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10010113C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10010118C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

__n128 initializeWithTake for RefinementsBarButtonViewModel.Submenu(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *sub_1001011E0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  id v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_1000FFD1C(0, v1, 0);
    id v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = (void *)*(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      uint64_t v17 = v2;
      unint64_t v10 = v2[2];
      unint64_t v9 = v2[3];
      id v11 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
      {
        sub_1000FFD1C(v9 > 1, v10 + 1, 1);
        id v2 = v17;
      }
      size_t v15 = &type metadata for HomeListSectionSnapshot;
      unint64_t v16 = sub_10010132C();
      uint64_t v12 = (void *)swift_allocObject();
      *(void *)&long long v14 = v12;
      _OWORD v12[2] = v11;
      uint64_t v12[3] = v6;
      void v12[4] = v7;
      void v12[5] = v8;
      v2[2] = v10 + 1;
      sub_100101314(&v14, (uint64_t)&v2[5 * v10 + 4]);
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_100101314(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_10010132C()
{
  unint64_t result = qword_1015D6EC0;
  if (!qword_1015D6EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6EC0);
  }
  return result;
}

uint64_t destroy for PlaceSummaryDynamicContextServerOverride()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t variable initialization expression of CuratedCollectionItemLibraryCoordinator.isAddingToLibrary()
{
  return 0;
}

double sub_1001013C4@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_1001013CC(a1, a2, a3, a4, *(void *)(v5 + 8), a5);
}

double sub_1001013CC@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  if (*(void *)(a5 + 16))
  {
    id v11 = a1;
    sub_100100818(a2, a3, a4);
    unint64_t v12 = sub_100101C10((uint64_t)v11, a2, a3, a4);
    if (v13)
    {
      uint64_t v14 = *(void *)(a5 + 56) + 32 * v12;
      uint64_t v15 = *(void *)(v14 + 8);
      uint64_t v16 = *(void *)(v14 + 16);
      uint64_t v17 = *(void *)(v14 + 24);
      id v18 = *(id *)v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();

      sub_1001007A8(a2, a3, a4);
      *(void *)(a6 + 24) = &type metadata for HomeListSectionSnapshot;
      *(void *)(a6 + 32) = sub_10010132C();
      id v19 = (void *)swift_allocObject();
      *(void *)a6 = v19;
      id v19[2] = v18;
      v19[3] = v15;
      void v19[4] = v16;
      void v19[5] = v17;
      return result;
    }

    sub_1001007A8(a2, a3, a4);
  }
  *(void *)(a6 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return result;
}

__n128 initializeWithTake for HomeListCellSnapshot(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100101508(uint64_t a1)
{
  sub_1000FF27C(a1, (uint64_t)&v8, (uint64_t *)&unk_1015D6E80);
  if (!*((void *)&v9 + 1))
  {
    sub_1000FF2E0((uint64_t)&v8, (uint64_t *)&unk_1015D6E80);
    long long v5 = 0u;
    long long v6 = 0u;
    long long v7 = 0u;
    goto LABEL_7;
  }
  sub_1000FF33C(&qword_1015D2AD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    long long v6 = 0u;
    long long v7 = 0u;
    long long v5 = 0u;
    goto LABEL_7;
  }
  if (!(void)v5)
  {
LABEL_7:
    sub_1000FF2E0((uint64_t)&v5, &qword_1015D68C0);
    char v3 = 0;
    return v3 & 1;
  }
  long long v8 = v5;
  long long v9 = v6;
  long long v10 = v7;
  sub_1000FF27C(v1 + 8, (uint64_t)&v5, (uint64_t *)&unk_1015D6960);
  char v2 = sub_100101730((uint64_t)&v5, (uint64_t)&v8 + 8);
  sub_1000FF2E0((uint64_t)&v5, (uint64_t *)&unk_1015D6960);
  sub_1000FFC8C((uint64_t)&v8);
  char v3 = v2 ^ 1;
  return v3 & 1;
}

uint64_t sub_100101614(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000FF4D4(a1, (uint64_t)v13);
  sub_1000FF33C(a3);
  if (!swift_dynamicCast())
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_1000FF2E0((uint64_t)&v10, &qword_1015CF1E0);
LABEL_6:
    char v5 = 0;
    return v5 & 1;
  }
  v15[0] = v10;
  v15[1] = v11;
  uint64_t v16 = v12;
  sub_1000FF4D4(a2, (uint64_t)&v10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    sub_1000FF2E0((uint64_t)&v7, &qword_1015CF1E0);
    sub_1000F351C((uint64_t)v15);
    goto LABEL_6;
  }
  v13[0] = v7;
  v13[1] = v8;
  uint64_t v14 = v9;
  char v5 = static AnyHashable.== infix(_:_:)();
  sub_1000F351C((uint64_t)v13);
  sub_1000F351C((uint64_t)v15);
  return v5 & 1;
}

uint64_t sub_100101730(uint64_t a1, uint64_t a2)
{
  return sub_100101614(a1, a2, (uint64_t *)&unk_1015D1C50);
}

__n128 initializeWithTake for NearbyTransitGroupViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x358], 8) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_100101750(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000FF33C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001017B8(uint64_t a1)
{
  sub_1000FF27C(a1, (uint64_t)&v9, (uint64_t *)&unk_1015D6E80);
  if (!*((void *)&v10[0] + 1))
  {
    sub_1000FF2E0((uint64_t)&v9, (uint64_t *)&unk_1015D6E80);
    long long v5 = 0u;
    long long v6 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_7;
  }
  sub_1000FF33C(&qword_1015D2AD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    long long v7 = 0u;
    long long v8 = 0u;
    long long v5 = 0u;
    long long v6 = 0u;
    goto LABEL_7;
  }
  if (!(void)v5)
  {
LABEL_7:
    sub_1000FF2E0((uint64_t)&v5, (uint64_t *)&unk_1015DB0D0);
    char v3 = 0;
    return v3 & 1;
  }
  long long v9 = v5;
  v10[0] = v6;
  v10[1] = v7;
  _OWORD v10[2] = v8;
  sub_1000FF27C(v1 + 24, (uint64_t)&v5, &qword_1015D6EA0);
  char v2 = sub_1001025A8((uint64_t)&v5, (uint64_t)v10 + 8);
  sub_1000FF2E0((uint64_t)&v5, &qword_1015D6EA0);
  sub_1001008A0((uint64_t)&v9);
  char v3 = v2 ^ 1;
  return v3 & 1;
}

uint64_t sub_1001018C4(uint64_t a1)
{
  char v2 = _swiftEmptyArrayStorage;
  char v3 = (void *)sub_100102374((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (uint64_t)v2;
  }
  for (uint64_t i = (long long *)(a1 + 48); ; i += 2)
  {
    long long v33 = *(i - 1);
    long long v34 = *i;
    uint64_t v7 = v3[2];
    id v8 = (id)v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      sub_100101C10((uint64_t)v8, 1, 0, 2);
      if (v9) {
        goto LABEL_4;
      }
    }
    id v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_100101C10((uint64_t)v10, 1, 0, 2);
    uint64_t v14 = v3[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v3[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1003527BC();
      }
    }
    else
    {
      sub_100101E60(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_100101C10((uint64_t)v10, 1, 0, 2);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_24;
      }
      unint64_t v13 = v18;
    }
    uint64_t v32 = v2;
    if (v17)
    {
      uint64_t v20 = v3[7] + 32 * v13;
      uint64_t v21 = *(void **)v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *(_OWORD *)uint64_t v20 = v33;
      *(_OWORD *)(v20 + 16) = v34;
    }
    else
    {
      v3[(v13 >> 6) + 8] |= 1 << v13;
      uint64_t v22 = v3[6] + 32 * v13;
      *(void *)uint64_t v22 = v10;
      *(_OWORD *)(v22 + _Block_object_dispose(&STACK[0x358], 8) = xmmword_100F67600;
      *(unsigned char *)(v22 + 24) = 2;
      uint64_t v23 = (_OWORD *)(v3[7] + 32 * v13);
      *uint64_t v23 = v33;
      v23[1] = v34;
      uint64_t v24 = v3[2];
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_23;
      }
      v3[2] = v26;
      id v27 = v10;
    }

    swift_bridgeObjectRelease();
    id v28 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v2 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v2 = sub_100101D50(0, v32[2] + 1, 1, v32);
    }
    unint64_t v30 = v2[2];
    unint64_t v29 = v2[3];
    if (v30 >= v29 >> 1) {
      char v2 = sub_100101D50((void *)(v29 > 1), v30 + 1, 1, v2);
    }
    v2[2] = v30 + 1;
    long long v6 = &v2[4 * v30];
    *((_OWORD *)v6 + 2) = v33;
    *((_OWORD *)v6 + 3) = v34;
LABEL_4:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v4) {
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_100101C10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  if (a4)
  {
    if (a4 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1001007A8(a2, a3, 1u);
    }
    else
    {
      if (a2 | a3)
      {
        if (a2 ^ 1 | a3) {
          Swift::UInt v8 = 2;
        }
        else {
          Swift::UInt v8 = 1;
        }
      }
      else
      {
        Swift::UInt v8 = 0;
      }
      Hasher._combine(_:)(v8);
    }
  }
  else
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    sub_1001007A8(a2, a3, 0);
  }
  Swift::Int v9 = Hasher._finalize()();

  return sub_100100500(a1, a2, a3, a4, v9);
}

void *sub_100101D50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D41B0);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 5);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100102280(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_100101E60(uint64_t a1, char a2)
{
  char v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015CCFE0);
  char v34 = a2;
  char v35 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    unint64_t v30 = v2;
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v6 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v13 >= v31) {
          goto LABEL_22;
        }
        unint64_t v14 = v32[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v31) {
            goto LABEL_22;
          }
          unint64_t v14 = v32[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 2;
            if (v15 >= v31)
            {
LABEL_22:
              swift_release();
              char v3 = v30;
              if (v34)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v14 = v32[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_29;
                }
                if (v10 >= v31) {
                  goto LABEL_22;
                }
                unint64_t v14 = v32[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
LABEL_19:
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      uint64_t v16 = 32 * v12;
      uint64_t v17 = *(void *)(v5 + 48) + v16;
      char v19 = *(void **)v17;
      uint64_t v18 = *(void *)(v17 + 8);
      uint64_t v20 = *(void *)(v17 + 16);
      char v21 = *(unsigned char *)(v17 + 24);
      uint64_t v22 = *(void *)(v5 + 56) + v16;
      uint64_t v24 = *(void **)v22;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v26 = *(void *)(v22 + 16);
      uint64_t v25 = *(void *)(v22 + 24);
      if ((v34 & 1) == 0)
      {
        id v27 = v19;
        sub_100100818(v18, v20, v21);
        id v28 = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_1001020D4((uint64_t)v19, v18, v20, v21, (uint64_t)v24, v23, v26, v25, v35);
    }
  }
  unint64_t result = swift_release();
  *char v3 = v35;
  return result;
}

unint64_t sub_1001020D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  if (a4)
  {
    if (a4 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_1001007A8(a2, a3, 1u);
    }
    else
    {
      if (a2 | a3)
      {
        if (a2 ^ 1 | a3) {
          Swift::UInt v17 = 2;
        }
        else {
          Swift::UInt v17 = 1;
        }
      }
      else
      {
        Swift::UInt v17 = 0;
      }
      Hasher._combine(_:)(v17);
    }
  }
  else
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    sub_1001007A8(a2, a3, 0);
  }
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v19 = a9[6] + 32 * result;
  *(void *)uint64_t v19 = a1;
  *(void *)(v19 + _Block_object_dispose(&STACK[0x358], 8) = a2;
  *(void *)(v19 + 16) = a3;
  *(unsigned char *)(v19 + 24) = a4;
  uint64_t v20 = (void *)(a9[7] + 32 * result);
  *uint64_t v20 = a5;
  v20[1] = a6;
  void v20[2] = a7;
  _OWORD v20[3] = a8;
  ++a9[2];
  return result;
}

uint64_t sub_100102280(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_100102374(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    char v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CCFE0);
  char v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = a1 + 40;
  while (1)
  {
    uint64_t v5 = *(void *)v4;
    uint64_t v6 = *(void *)(v4 + 8);
    char v7 = *(unsigned char *)(v4 + 16);
    long long v17 = *(_OWORD *)(v4 + 40);
    long long v18 = *(_OWORD *)(v4 + 24);
    id v8 = *(id *)(v4 - 8);
    sub_100100818(v5, v6, v7);
    id v9 = (id)v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100101C10((uint64_t)v8, v5, v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = v2[6] + 32 * result;
    *(void *)uint64_t v12 = v8;
    *(void *)(v12 + _Block_object_dispose(&STACK[0x358], 8) = v5;
    *(void *)(v12 + 16) = v6;
    *(unsigned char *)(v12 + 24) = v7;
    int64_t v13 = (_OWORD *)(v2[7] + 32 * result);
    *int64_t v13 = v18;
    v13[1] = v17;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 64;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100102500()
{
  unint64_t result = qword_1015D6F90;
  if (!qword_1015D6F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6F90);
  }
  return result;
}

unint64_t sub_100102554()
{
  unint64_t result = qword_1015D6F98;
  if (!qword_1015D6F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6F98);
  }
  return result;
}

uint64_t sub_1001025A8(uint64_t a1, uint64_t a2)
{
  return sub_100101614(a1, a2, (uint64_t *)&unk_1015D1C40);
}

void *sub_100103238(uint64_t a1)
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  if (*(void *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers))
  {
    char v2 = *(void **)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  }
  else
  {
    char v2 = sub_1000F0E20();
    *(void *)(a1 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + v1))
    {
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_1000716FC(v4);
    }
    else
    {
      *(void *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      unint64_t v5 = sub_100012CCC((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v6 = (unint64_t *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess();
      *uint64_t v6 = v5;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v2[2];
  if (v7)
  {
    id v8 = (id *)(v2 + 4);
    swift_bridgeObjectRetain();
    while (1)
    {
      long long v28 = *(_OWORD *)v8;
      uint64_t v10 = (uint64_t)*v8 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
      uint64_t v12 = *(void *)(v10 + 8);
      uint64_t v11 = *(void *)(v10 + 16);
      id v13 = *v8;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v16 = sub_100103580(v12, v11);
      uint64_t v17 = _swiftEmptyDictionarySingleton[2];
      BOOL v18 = (v15 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18)) {
        break;
      }
      char v20 = v15;
      if (_swiftEmptyDictionarySingleton[3] >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1003529D4();
        }
      }
      else
      {
        sub_100103744(v19, isUniquelyReferenced_nonNull_native);
        unint64_t v21 = sub_100103580(v12, v11);
        if ((v20 & 1) != (v22 & 1)) {
          goto LABEL_24;
        }
        unint64_t v16 = v21;
      }
      if (v20)
      {
        uint64_t v9 = _swiftEmptyDictionarySingleton[7];

        *(_OWORD *)(v9 + 16 * v16) = v28;
      }
      else
      {
        _swiftEmptyDictionarySingleton[(v16 >> 6) + 8] |= 1 << v16;
        uint64_t v23 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v16);
        *uint64_t v23 = v12;
        v23[1] = v11;
        *(_OWORD *)(_swiftEmptyDictionarySingleton[7] + 16 * v16) = v28;
        uint64_t v24 = _swiftEmptyDictionarySingleton[2];
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_23;
        }
        _swiftEmptyDictionarySingleton[2] = v26;
        swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 += 2;
      if (!--v7) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    unint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_21:
    swift_bridgeObjectRelease();
    return _swiftEmptyDictionarySingleton;
  }
  return result;
}

void *sub_1001034C8(void *a1)
{
  id v1 = [a1 firstIdentifier];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  unint64_t v5 = sub_1001036DC();
  if (v5[2] && (unint64_t v6 = sub_100103580(v2, v4), (v7 & 1) != 0))
  {
    id v8 = *(void **)(v5[7] + 16 * v6);
    id v9 = v8;
  }
  else
  {
    id v8 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_100103580(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1001035F8(a1, a2, v4);
}

unint64_t sub_1001035F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        id v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

void *sub_1001036DC()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___sectionControllersByIdentifier;
  if (*(void *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___sectionControllersByIdentifier))
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___sectionControllersByIdentifier);
  }
  else
  {
    uint64_t v2 = sub_100103238(v0);
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100103744(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015DCB98);
  char v39 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v37 = v2;
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v40 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v35 = (id)v40;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    char v20 = (void *)(*(void *)(v7 + 48) + v19);
    *char v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v40;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_100103A9C()
{
}

id sub_100103AB8(id a1)
{
  return &__kCFBooleanTrue;
}

uint64_t sub_100103ACC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103ADC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103AEC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103AFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B0C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B1C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B2C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B3C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B5C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B6C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B7C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B8C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103B9C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103BAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103BBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103BCC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103BDC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103BEC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103BFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C0C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C1C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C2C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C3C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C5C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C6C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C7C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C8C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103C9C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103CAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103CBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103CCC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103CDC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103CEC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103CFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D0C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D1C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D2C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D3C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D5C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D6C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D7C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D8C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103D9C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103DAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103DBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103DCC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103DDC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103DEC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103DFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E0C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E1C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E2C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E3C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E5C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E6C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E7C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E8C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103E9C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103EAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103EBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103ECC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103EDC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103EEC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103EFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103F0C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103F1C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100103F2C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100103F38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103F48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103F58(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103F68(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103F78(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103F88(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103F98(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103FA8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103FB8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103FC8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103FD8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100103FE8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

id sub_100103FF8(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t sub_100104024(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104034(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104044(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104054(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104064(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104074(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104084(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104094(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001040A4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001040B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001040C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001040D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001040E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001040F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104104(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104114(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104124(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104134(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104144(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104154(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104164(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104174(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104184(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104194(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001041A4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001041B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001041C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001041D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001041E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001041F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104204(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104214(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104224(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104234(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104244(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104254(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104264(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104274(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

id sub_100104284(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t sub_1001042B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001042C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001042D0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001042E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001042F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104300(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104310(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104320(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104330(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104340(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104350(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104360(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104370(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104380(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104390(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001043A0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001043B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001043C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001043D0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001043E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001043F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104400(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104410(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104420(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104430(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104440(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104450(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104460(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104470(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104480(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104490(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001044A0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001044B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001044C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001044D0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001044E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001044F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104500(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104510(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104520(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104530(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104540(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104550(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104560(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104570(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104580(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100104590(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001045A0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001045B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001045C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001045D0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1001045E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001045F0(uint64_t a1)
{
}

void sub_1001045F8(uint64_t a1)
{
}

void sub_100104600(uint64_t a1)
{
}

void sub_100104608(uint64_t a1)
{
}

void sub_100104610(uint64_t a1)
{
}

void sub_100104618(uint64_t a1)
{
}

void sub_100104620(uint64_t a1)
{
}

void sub_100104628(uint64_t a1)
{
}

void sub_100104630(uint64_t a1)
{
}

void sub_100104638(uint64_t a1)
{
}

void sub_100104640(uint64_t a1)
{
}

void sub_100104648(uint64_t a1)
{
}

void sub_100104650(uint64_t a1)
{
}

void sub_100104658(uint64_t a1)
{
}

void sub_100104660(uint64_t a1)
{
}

void sub_100104668(uint64_t a1)
{
}

void sub_100104670(uint64_t a1)
{
}

void sub_100104678(uint64_t a1)
{
}

void sub_100104680(uint64_t a1)
{
}

void sub_100104688(uint64_t a1)
{
}

void sub_100104690(uint64_t a1)
{
}

void sub_100104698(uint64_t a1)
{
}

void sub_1001046A0(uint64_t a1)
{
}

void sub_1001046A8(uint64_t a1)
{
}

void sub_1001046B0(uint64_t a1)
{
}

void sub_1001046B8(uint64_t a1)
{
}

void sub_1001046C0(uint64_t a1)
{
}

void sub_1001046C8(uint64_t a1)
{
}

void sub_1001046D0(uint64_t a1)
{
}

void sub_1001046D8(uint64_t a1)
{
}

void sub_1001046E0(uint64_t a1)
{
}

void sub_1001046E8(uint64_t a1)
{
}

void sub_1001046F0(uint64_t a1)
{
}

void sub_1001046F8(uint64_t a1)
{
}

void sub_100104700(uint64_t a1)
{
}

void sub_100104708(uint64_t a1)
{
}

void sub_100104710(uint64_t a1)
{
}

void sub_100104718(uint64_t a1)
{
}

void sub_100104720(uint64_t a1)
{
}

void sub_100104728(uint64_t a1)
{
}

void sub_100104730(uint64_t a1)
{
}

void sub_100104738(uint64_t a1)
{
}

void sub_100104740(uint64_t a1)
{
}

void sub_100104748(uint64_t a1)
{
}

void sub_100104750(uint64_t a1)
{
}

void sub_100104758(uint64_t a1)
{
}

void sub_100104760(uint64_t a1)
{
}

void sub_100104768(uint64_t a1)
{
}

void sub_100104770(uint64_t a1)
{
}

void sub_100104778(uint64_t a1)
{
}

void sub_100104780(uint64_t a1)
{
}

void sub_100104788(uint64_t a1)
{
}

void sub_100104790(uint64_t a1)
{
}

void sub_100104798(uint64_t a1)
{
}

void sub_1001047A0(uint64_t a1)
{
}

void sub_1001047A8(uint64_t a1)
{
}

void sub_1001047B0(uint64_t a1)
{
}

void sub_1001047B8(uint64_t a1)
{
}

void sub_1001047C0(uint64_t a1)
{
}

void sub_1001047C8(uint64_t a1)
{
}

void sub_1001047D0(uint64_t a1)
{
}

void sub_1001047D8(uint64_t a1)
{
}

void sub_1001047E0(uint64_t a1)
{
}

void sub_1001047E8(uint64_t a1)
{
}

void sub_1001047F0(uint64_t a1)
{
}

void sub_1001047F8(uint64_t a1)
{
}

void sub_100104800(uint64_t a1)
{
}

void sub_100104808(uint64_t a1)
{
}

void sub_100104810(uint64_t a1)
{
}

void sub_100104818(uint64_t a1)
{
}

void sub_100104820(uint64_t a1)
{
}

void sub_100104828(uint64_t a1)
{
}

void sub_100104830(uint64_t a1)
{
}

void sub_100104838(uint64_t a1)
{
}

void sub_100104840(uint64_t a1)
{
}

void sub_100104848(uint64_t a1)
{
}

void sub_100104850(uint64_t a1)
{
}

void sub_100104858(uint64_t a1)
{
}

void sub_100104860(uint64_t a1)
{
}

void sub_100104868(uint64_t a1)
{
}

void sub_100104870(uint64_t a1)
{
}

void sub_100104878(uint64_t a1)
{
}

void sub_100104880(uint64_t a1)
{
}

void sub_100104888(uint64_t a1)
{
}

void sub_100104890(uint64_t a1)
{
}

void sub_100104898(uint64_t a1)
{
}

void sub_1001048A0(uint64_t a1)
{
}

void sub_1001048A8(uint64_t a1)
{
}

void sub_1001048B0(uint64_t a1)
{
}

void sub_1001048B8(uint64_t a1)
{
}

void sub_1001048C0(uint64_t a1)
{
}

void sub_1001048C8(uint64_t a1)
{
}

void sub_1001048D0(uint64_t a1)
{
}

void sub_1001048D8(uint64_t a1)
{
}

void sub_1001048E0(uint64_t a1)
{
}

void sub_1001048E8(uint64_t a1)
{
}

void sub_1001048F0(uint64_t a1)
{
}

void sub_1001048F8(uint64_t a1)
{
}

void sub_100104900(uint64_t a1)
{
}

void sub_100104908(uint64_t a1)
{
}

void sub_100104910(uint64_t a1)
{
}

void sub_100104918(uint64_t a1)
{
}

void sub_100104920(uint64_t a1)
{
}

void sub_100104928(uint64_t a1)
{
}

void sub_100104930(uint64_t a1)
{
}

void sub_100104938(uint64_t a1)
{
}

void sub_100104940(uint64_t a1)
{
}

void sub_100104948(uint64_t a1)
{
}

void sub_100104950(uint64_t a1)
{
}

void sub_100104958(uint64_t a1)
{
}

void sub_100104960(uint64_t a1)
{
}

void sub_100104968(uint64_t a1)
{
}

void sub_100104970(uint64_t a1)
{
}

void sub_100104978(uint64_t a1)
{
}

void sub_100104980(uint64_t a1)
{
}

void sub_100104988(uint64_t a1)
{
}

void sub_100104990(uint64_t a1)
{
}

void sub_100104998(uint64_t a1)
{
}

void sub_1001049A0(uint64_t a1)
{
}

void sub_1001049A8(uint64_t a1)
{
}

void sub_1001049B0(uint64_t a1)
{
}

void sub_1001049B8(uint64_t a1)
{
}

void sub_1001049C0(uint64_t a1)
{
}

void sub_1001049C8(uint64_t a1)
{
}

void sub_1001049D0(uint64_t a1)
{
}

void sub_1001049D8(uint64_t a1)
{
}

void sub_1001049E0(uint64_t a1)
{
}

void sub_1001049E8(uint64_t a1)
{
}

void sub_1001049F0(uint64_t a1)
{
}

void sub_1001049F8(uint64_t a1)
{
}

void sub_100104A00(uint64_t a1)
{
}

void sub_100104A08(uint64_t a1)
{
}

void sub_100104A10(uint64_t a1)
{
}

void sub_100104A18(uint64_t a1)
{
}

void sub_100104A20(uint64_t a1)
{
}

void sub_100104A28(uint64_t a1)
{
}

void sub_100104A30(uint64_t a1)
{
}

void sub_100104A38(uint64_t a1)
{
}

void sub_100104A40(uint64_t a1)
{
}

void sub_100104A48(uint64_t a1)
{
}

void sub_100104A50(uint64_t a1)
{
}

void sub_100104A58(uint64_t a1)
{
}

void sub_100104A60(uint64_t a1)
{
}

void sub_100104A68(uint64_t a1)
{
}

void sub_100104A70(uint64_t a1)
{
}

void sub_100104A78(uint64_t a1)
{
}

void sub_100104A80(uint64_t a1)
{
}

void sub_100104A88(uint64_t a1)
{
}

void sub_100104A90(uint64_t a1)
{
}

void sub_100104A98(uint64_t a1)
{
}

void sub_100104AA0(uint64_t a1)
{
}

void sub_100104AA8(uint64_t a1)
{
}

void sub_100104AB0(uint64_t a1)
{
}

void sub_100104AB8(uint64_t a1)
{
}

void sub_100104AC0(uint64_t a1)
{
}

void sub_100104AC8(uint64_t a1)
{
}

void sub_100104AD0(uint64_t a1)
{
}

void sub_100104AD8(uint64_t a1)
{
}

void sub_100104AE0(uint64_t a1)
{
}

void sub_100104AE8(uint64_t a1)
{
}

void sub_100104AF0(uint64_t a1)
{
}

void sub_100104AF8(uint64_t a1)
{
}

void sub_100104B00(uint64_t a1)
{
}

void sub_100104B08(uint64_t a1)
{
}

void sub_100104B10(uint64_t a1)
{
}

void sub_100104B18(uint64_t a1)
{
}

void sub_100104B20(uint64_t a1)
{
}

void sub_100104B28(uint64_t a1)
{
}

void sub_100104B30(uint64_t a1)
{
}

void sub_100104B38(uint64_t a1)
{
}

void sub_100104B40(uint64_t a1)
{
}

void sub_100104B48(uint64_t a1)
{
}

void sub_100104B50(uint64_t a1)
{
}

void sub_100104B58(uint64_t a1)
{
}

void sub_100104B60(uint64_t a1)
{
}

id sub_100104B80(uint64_t a1)
{
  return [*(id *)(a1 + 32) rebuildContent:*(void *)(a1 + 40)];
}

__n128 initializeWithTake for HomeListElementKey(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100104C04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100104FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100105004(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100105014(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

BOOL sub_100105024(uint64_t a1, uint64_t a2)
{
  return sub_10006E804(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_100105058()
{
  return swift_release();
}

uint64_t sub_100105060()
{
  return swift_release();
}

uint64_t sub_100105068()
{
  return swift_release();
}

uint64_t sub_100105070()
{
  return swift_release();
}

uint64_t sub_100105078()
{
  return swift_release();
}

uint64_t sub_100105080()
{
  return swift_release();
}

uint64_t sub_100105088()
{
  return swift_release();
}

uint64_t sub_100105090()
{
  return swift_release();
}

uint64_t sub_100105098()
{
  return swift_release();
}

uint64_t sub_1001050A0()
{
  return swift_release();
}

uint64_t sub_1001050A8()
{
  return swift_release();
}

uint64_t sub_1001050B0()
{
  return swift_release();
}

uint64_t sub_1001050B8()
{
  return swift_release();
}

uint64_t sub_1001050C0()
{
  return swift_release();
}

uint64_t sub_1001050C8()
{
  return swift_release();
}

uint64_t sub_1001050D0()
{
  return swift_release();
}

uint64_t sub_1001050D8()
{
  return swift_release();
}

uint64_t sub_1001050E0()
{
  return swift_release();
}

uint64_t sub_1001050E8()
{
  return swift_release();
}

uint64_t sub_1001050F0()
{
  return swift_release();
}

uint64_t sub_1001050F8()
{
  return swift_release();
}

uint64_t sub_100105100()
{
  return swift_release();
}

uint64_t sub_100105108()
{
  return swift_release();
}

uint64_t sub_100105110()
{
  return swift_release();
}

uint64_t sub_100105118()
{
  return swift_release();
}

uint64_t sub_100105120()
{
  return swift_release();
}

uint64_t sub_100105128()
{
  return swift_release();
}

uint64_t sub_100105130()
{
  return swift_release();
}

uint64_t sub_100105138()
{
  return swift_release();
}

uint64_t sub_100105140()
{
  return swift_release();
}

uint64_t sub_100105148()
{
  return swift_release();
}

uint64_t sub_100105150()
{
  return swift_release();
}

uint64_t sub_100105158()
{
  return swift_release();
}

uint64_t sub_100105160()
{
  return swift_release();
}

uint64_t sub_100105168()
{
  return swift_release();
}

uint64_t sub_100105170()
{
  return swift_release();
}

uint64_t sub_100105178()
{
  return swift_release();
}

uint64_t sub_100105180()
{
  return swift_release();
}

uint64_t sub_100105188()
{
  return swift_release();
}

uint64_t sub_100105190()
{
  return swift_release();
}

uint64_t sub_100105198()
{
  return swift_release();
}

uint64_t sub_1001051A0()
{
  return swift_release();
}

uint64_t sub_1001051A8()
{
  return swift_release();
}

uint64_t sub_1001051B0()
{
  return swift_release();
}

uint64_t sub_1001051B8()
{
  return swift_release();
}

uint64_t sub_1001051C0()
{
  return swift_release();
}

uint64_t sub_1001051C8()
{
  return swift_release();
}

uint64_t sub_1001051D0()
{
  return swift_release();
}

uint64_t sub_1001051D8()
{
  return swift_release();
}

uint64_t sub_1001051E0()
{
  return swift_release();
}

uint64_t sub_1001051E8()
{
  return swift_release();
}

uint64_t sub_1001051F0()
{
  return swift_release();
}

uint64_t sub_1001051F8()
{
  return swift_release();
}

uint64_t sub_100105200()
{
  return swift_release();
}

uint64_t sub_100105208()
{
  return swift_release();
}

uint64_t sub_100105210()
{
  return swift_release();
}

uint64_t sub_100105218()
{
  return swift_release();
}

uint64_t sub_100105220()
{
  return swift_release();
}

uint64_t sub_100105228()
{
  return swift_release();
}

uint64_t sub_100105230()
{
  return swift_release();
}

uint64_t sub_100105238()
{
  return swift_release();
}

uint64_t sub_100105240()
{
  return swift_release();
}

uint64_t sub_100105248()
{
  return swift_release();
}

uint64_t sub_100105250()
{
  return swift_release();
}

uint64_t sub_100105258()
{
  return swift_release();
}

uint64_t sub_100105260()
{
  return swift_release();
}

id sub_10010527C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 32))
  {
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:];
    uint64_t v2 = *(void *)(a1 + 32);
  }
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t v4 = *(void *)(v2 + 40);

  return [v3 addObjectsFromArray:v4];
}

uint64_t getEnumTagSinglePayload for HomeListSupplementaryViewSnapshot(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t *sub_100105338(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

id sub_1001053F4(id a1)
{
  return &__kCFBooleanTrue;
}

void sub_100105410(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v2();
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained loadDefaultImage];
  }
}

uint64_t getEnumTagSinglePayload for HomeListCuratedCollectionsCellModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t destroy for HomeListFooterCellModel()
{
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_1001054CC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

uint64_t sub_100105618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for AnyDynamicHashable()
{
  return sub_1000F5520();
}

uint64_t sub_100105658(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 76) = 1;
  atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)(result + 32) + 72), 1u, memory_order_relaxed);
  return result;
}

id sub_100105674(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) complete:a2];
}

id sub_100105680(uint64_t a1)
{
  return [*(id *)(a1 + 32) animate];
}

BOOL sub_100105688(id a1, CollectionHandler *a2, unint64_t a3, BOOL *a4)
{
  BOOL v5 = [(CollectionHandler *)a2 isFavoriteCollection];
  if (v5) {
    *a4 = 1;
  }
  return v5;
}

uint64_t getEnumTagSinglePayload for HomeListCellSnapshot(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for HomeListElementKey()
{
  return &type metadata for HomeListElementKey;
}

id sub_100105778(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyObserversItemsDidChange];
}

void sub_100105780(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = &__NSArray0__struct;
}

id sub_1001057A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

id sub_1001057A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateCalendarItems];
}

void sub_1001057B0(uint64_t a1)
{
}

uint64_t type metadata accessor for AnyWeakHashable()
{
  return sub_1000F5520();
}

uint64_t sub_10010585C(uint64_t result)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 32);
  return result;
}

void sub_100105874(uint64_t a1)
{
}

void sub_100105880(uint64_t a1)
{
}

id sub_100105894(uint64_t a1, void *a2)
{
  return [a2 isEqualivantToKey:*(void *)(a1 + 32)];
}

uint64_t sub_1001058A0(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

id sub_1001058B8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1001058C4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1001058D0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1001058DC(id a1)
{
  return &__kCFBooleanTrue;
}

void sub_1001058E8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t storeEnumTagSinglePayload for HomeListSupplementaryViewSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListSupplementaryViewSnapshot()
{
  return &type metadata for HomeListSupplementaryViewSnapshot;
}

uint64_t storeEnumTagSinglePayload for HomeListSectionHeaderViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x358], 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x358], 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HomeListSectionHeaderViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for HomeListSectionHeaderViewModel()
{
  return &type metadata for HomeListSectionHeaderViewModel;
}

ValueMetadata *type metadata accessor for HomeListSectionSnapshot()
{
  return &type metadata for HomeListSectionSnapshot;
}

id sub_100105A60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10008D5B8(a1, a2, a3);
}

id sub_100105A68(uint64_t a1)
{
  return sub_100061D84(a1);
}

void sub_100105A70()
{
}

ValueMetadata *type metadata accessor for HomeListCellSnapshot()
{
  return &type metadata for HomeListCellSnapshot;
}

uint64_t sub_100105A88()
{
  return swift_getWitnessTable();
}

uint64_t sub_100105AA4()
{
  return _swift_task_switch(sub_100020664, 0, 0);
}

DimmingBehaviour *sub_100105C1C()
{
  uint64_t v0 = [[DimmingBehaviour alloc] initWithDimming:&stru_1012FEF88 threshold:&stru_1012FEFA8];

  return v0;
}

void sub_100105D30()
{
  if (qword_1016101A0 != -1) {
    dispatch_once(&qword_1016101A0, &stru_10130CB20);
  }
}

id sub_100105D60()
{
  if (qword_1016108F0 != -1) {
    dispatch_once(&qword_1016108F0, &stru_101319528);
  }
  uint64_t v0 = (void *)qword_1016108E8;

  return v0;
}

BOOL sub_100105DB4()
{
  if (qword_1016101C0 != -1) {
    dispatch_once(&qword_1016101C0, &stru_101312180);
  }
  return (byte_1016101B8 & 1) == 0;
}

void *initializeWithTake for PlaceSummaryStringFormatType(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

void sub_100105E0C(id a1)
{
  byte_1015F1630 = 1;
  __GEOConfigRegisterStateCaptureFunctions(sub_10096FC5C, sub_10096FC68);
}

void sub_100105E3C(id a1)
{
  id v1 = [objc_alloc((Class)NSCalendar) initWithCalendarIdentifier:NSCalendarIdentifierGregorian];
  unint64_t v2 = (void *)qword_1016108E8;
  qword_1016108E8 = (uint64_t)v1;
}

void sub_100105E88(id a1)
{
  byte_1015E6AB8 = GEOConfigGetBOOL();
}

void sub_100105EB4(id a1)
{
  id v1 = (void *)qword_10160ED98;
  qword_10160ED98 = (uint64_t)&off_1013AD5A8;
}

void sub_100105ECC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "WebBundle");
  unint64_t v2 = (void *)qword_101612170;
  qword_101612170 = (uint64_t)v1;
}

void sub_100105F10(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Weather");
  unint64_t v2 = (void *)qword_101612130;
  qword_101612130 = (uint64_t)v1;
}

void sub_100105F54(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VirtualGarage");
  unint64_t v2 = (void *)qword_101612120;
  qword_101612120 = (uint64_t)v1;
}

void sub_100105F98(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFTileObserver");
  unint64_t v2 = (void *)qword_10160F4D0;
  qword_10160F4D0 = (uint64_t)v1;
}

void sub_100105FDC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionTileAvailabilityMonitor");
  unint64_t v2 = (void *)qword_1016104A0;
  qword_1016104A0 = (uint64_t)v1;
}

void sub_100106020(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionThermalStateMonitor");
  unint64_t v2 = (void *)qword_10160FC80;
  qword_10160FC80 = (uint64_t)v1;
}

void sub_100106064(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionSunsetSunriseMonitor");
  unint64_t v2 = (void *)qword_101610A58;
  qword_101610A58 = (uint64_t)v1;
}

void sub_1001060A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionStateManager");
  unint64_t v2 = (void *)qword_10160E9F0;
  qword_10160E9F0 = (uint64_t)v1;
}

void sub_1001060EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionOfflineMonitor");
  unint64_t v2 = (void *)qword_10160F930;
  qword_10160F930 = (uint64_t)v1;
}

void sub_100106130(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionNetworkReachabilityMonitor");
  unint64_t v2 = (void *)qword_10160F920;
  qword_10160F920 = (uint64_t)v1;
}

void sub_100106174(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionMonitor");
  unint64_t v2 = (void *)qword_10160E980;
  qword_10160E980 = (uint64_t)v1;
}

void sub_1001061B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionMapsHomeMonitor");
  unint64_t v2 = (void *)qword_101610EC8;
  qword_101610EC8 = (uint64_t)v1;
}

void sub_1001061FC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionLocationTypeMonitor");
  unint64_t v2 = (void *)qword_10160FA58;
  qword_10160FA58 = (uint64_t)v1;
}

void sub_100106240(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionLocationHorizontalAccuracyMonitor");
  unint64_t v2 = (void *)qword_101610B40;
  qword_101610B40 = (uint64_t)v1;
}

void sub_100106284(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionHomeWorkMonitor");
  unint64_t v2 = (void *)qword_10160EC00;
  qword_10160EC00 = (uint64_t)v1;
}

void sub_1001062C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionCoarseLocationMonitor");
  unint64_t v2 = (void *)qword_1016107C8;
  qword_1016107C8 = (uint64_t)v1;
}

void sub_10010630C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionChromeStackMonitor");
  unint64_t v2 = (void *)qword_10160F7C0;
  qword_10160F7C0 = (uint64_t)v1;
}

void sub_100106350(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionCarPlayConnectionMonitor");
  unint64_t v2 = (void *)qword_101610FC8;
  qword_101610FC8 = (uint64_t)v1;
}

void sub_100106394(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionAppLaunchDelayMonitor");
  unint64_t v2 = (void *)qword_10160F718;
  qword_10160F718 = (uint64_t)v1;
}

void sub_1001063D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFPuckModeCircleView");
  unint64_t v2 = (void *)qword_1016108C8;
  qword_1016108C8 = (uint64_t)v1;
}

void sub_10010641C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFAvailability");
  unint64_t v2 = (void *)qword_10160EEE0;
  qword_10160EEE0 = (uint64_t)v1;
}

void sub_100106460(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionTask");
  unint64_t v2 = (void *)qword_10160FE50;
  qword_10160FE50 = (uint64_t)v1;
}

void sub_1001064A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionAnalyticsCapturer");
  unint64_t v2 = (void *)qword_1016101A8;
  qword_1016101A8 = (uint64_t)v1;
}

void sub_1001064E8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UserProfile");
  unint64_t v2 = (void *)qword_101612100;
  qword_101612100 = (uint64_t)v1;
}

void sub_10010652C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UserLocationView");
  unint64_t v2 = (void *)qword_101610BB0;
  qword_101610BB0 = (uint64_t)v1;
}

void sub_100106570(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TransitPay");
  unint64_t v2 = (void *)qword_1016120E0;
  qword_1016120E0 = (uint64_t)v1;
}

void sub_1001065B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TrafficIncidentsSourceManager");
  unint64_t v2 = (void *)qword_10160FB48;
  qword_10160FB48 = (uint64_t)v1;
}

void sub_1001065F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ThermalPressureAnalyticsTask");
  unint64_t v2 = (void *)qword_101610220;
  qword_101610220 = (uint64_t)v1;
}

void sub_10010663C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "StatusIndicator");
  unint64_t v2 = (void *)qword_101612270;
  qword_101612270 = (uint64_t)v1;
}

void sub_100106680(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchPins");
  unint64_t v2 = (void *)qword_1016103F8;
  qword_1016103F8 = (uint64_t)v1;
}

void sub_1001066C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchAC");
  unint64_t v2 = (void *)qword_101612070;
  qword_101612070 = (uint64_t)v1;
}

void sub_100106708(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningSessionRouteLoadedNotifier");
  unint64_t v2 = (void *)qword_101610358;
  qword_101610358 = (uint64_t)v1;
}

void sub_10010674C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningFeatureDiscovery");
  unint64_t v2 = (void *)qword_101612060;
  qword_101612060 = (uint64_t)v1;
}

void sub_100106790(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RouteOverlay");
  unint64_t v2 = (void *)qword_101610080;
  qword_101610080 = (uint64_t)v1;
}

void sub_1001067D4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPSubmission");
  unint64_t v2 = (void *)qword_101612020;
  qword_101612020 = (uint64_t)v1;
}

void sub_100106818(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ProactiveTray");
  unint64_t v2 = (void *)qword_101612240;
  qword_101612240 = (uint64_t)v1;
}

void sub_10010685C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PreferredNetworksFeatureDiscoverySource");
  unint64_t v2 = (void *)qword_10160F358;
  qword_10160F358 = (uint64_t)v1;
}

void sub_1001068A0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PreferencesSync");
  unint64_t v2 = (void *)qword_101611FF0;
  qword_101611FF0 = (uint64_t)v1;
}

void sub_1001068E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PlatformController");
  unint64_t v2 = (void *)qword_101610770;
  qword_101610770 = (uint64_t)v1;
}

void sub_100106928(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PersonalizedItemManager");
  unint64_t v2 = (void *)qword_10160F9C8;
  qword_10160F9C8 = (uint64_t)v1;
}

void sub_10010696C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARUsageMigratorTask");
  unint64_t v2 = (void *)qword_1016104F8;
  qword_1016104F8 = (uint64_t)v1;
}

void sub_1001069B0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionTransportTypeMonitor");
  unint64_t v2 = (void *)qword_101610338;
  qword_101610338 = (uint64_t)v1;
}

void sub_1001069F4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionTileAvailabilityMonitor");
  unint64_t v2 = (void *)qword_101611018;
  qword_101611018 = (uint64_t)v1;
}

void sub_100106A38(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionThermalStateMonitor");
  unint64_t v2 = (void *)qword_10160F618;
  qword_10160F618 = (uint64_t)v1;
}

void sub_100106A7C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionTask");
  unint64_t v2 = (void *)qword_10160EFA8;
  qword_10160EFA8 = (uint64_t)v1;
}

void sub_100106AC0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionSunsetSunriseMonitor");
  unint64_t v2 = (void *)qword_1016102A8;
  qword_1016102A8 = (uint64_t)v1;
}

void sub_100106B04(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionStateManager");
  unint64_t v2 = (void *)qword_10160EB80;
  qword_10160EB80 = (uint64_t)v1;
}

void sub_100106B48(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionRoutePlanningConfigurationMonitor");
  unint64_t v2 = (void *)qword_10160F178;
  qword_10160F178 = (uint64_t)v1;
}

void sub_100106B8C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionRouteDistanceMonitor");
  unint64_t v2 = (void *)qword_101610AF0;
  qword_101610AF0 = (uint64_t)v1;
}

void sub_100106BD0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionOfflineMonitor");
  unint64_t v2 = (void *)qword_101611158;
  qword_101611158 = (uint64_t)v1;
}

void sub_100106C14(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionNetworkReachabilityMonitor");
  unint64_t v2 = (void *)qword_10160FB98;
  qword_10160FB98 = (uint64_t)v1;
}

void sub_100106C58(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionMonitor");
  unint64_t v2 = (void *)qword_10160FA88;
  qword_10160FA88 = (uint64_t)v1;
}

void sub_100106C9C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionMapsSkyMonitor");
  unint64_t v2 = (void *)qword_1016109D8;
  qword_1016109D8 = (uint64_t)v1;
}

void sub_100106CE0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionCoarseLocationMonitor");
  unint64_t v2 = (void *)qword_10160F738;
  qword_10160F738 = (uint64_t)v1;
}

void sub_100106D24(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionCarPlayConnectionMonitor");
  unint64_t v2 = (void *)qword_10160ED70;
  qword_10160ED70 = (uint64_t)v1;
}

void sub_100106D68(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionArrivalStepAvailabilityMonitor");
  unint64_t v2 = (void *)qword_10160FAD8;
  qword_10160FAD8 = (uint64_t)v1;
}

void sub_100106DAC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARMuteSpeechOverrideTask");
  unint64_t v2 = (void *)qword_10160F8C0;
  qword_10160F8C0 = (uint64_t)v1;
}

void sub_100106DF0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARMotionMonitorTask");
  unint64_t v2 = (void *)qword_101610200;
  qword_101610200 = (uint64_t)v1;
}

void sub_100106E34(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARAvailability");
  unint64_t v2 = (void *)qword_1016101C8;
  qword_1016101C8 = (uint64_t)v1;
}

void sub_100106E78(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "OfflineMapsPairedDeviceDiskSpaceTipSource");
  unint64_t v2 = (void *)qword_101611008;
  qword_101611008 = (uint64_t)v1;
}

void sub_100106EBC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Offline");
  unint64_t v2 = (void *)qword_101611FC0;
  qword_101611FC0 = (uint64_t)v1;
}

void sub_100106F00(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NearbyTransit");
  unint64_t v2 = (void *)qword_101611FB0;
  qword_101611FB0 = (uint64_t)v1;
}

void sub_100106F44(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Navigation");
  unint64_t v2 = (void *)qword_101611F90;
  qword_101611F90 = (uint64_t)v1;
}

void sub_100106F88(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavigationFeedbackEVBadTripCollector");
  unint64_t v2 = (void *)qword_10160F3B0;
  qword_10160F3B0 = (uint64_t)v1;
}

void sub_100106FCC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavigationBanners");
  unint64_t v2 = (void *)qword_101611FA0;
  qword_101611FA0 = (uint64_t)v1;
}

void sub_100107010(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsUserLocationView");
  unint64_t v2 = (void *)qword_1016109F8;
  qword_1016109F8 = (uint64_t)v1;
}

void sub_100107054(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsToken");
  unint64_t v2 = (void *)qword_101611120;
  qword_101611120 = (uint64_t)v1;
}

void sub_100107098(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsThrottler");
  unint64_t v2 = (void *)qword_10160F7D0;
  qword_10160F7D0 = (uint64_t)v1;
}

void sub_1001070DC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsThermalPressureController");
  unint64_t v2 = (void *)qword_101610700;
  qword_101610700 = (uint64_t)v1;
}

void sub_100107120(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsSunsetSunriseObserver");
  unint64_t v2 = (void *)qword_101611088;
  qword_101611088 = (uint64_t)v1;
}

void sub_100107164(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsRingBuffer");
  unint64_t v2 = (void *)qword_101610E90;
  qword_101610E90 = (uint64_t)v1;
}

void sub_1001071A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsRegionChange");
  unint64_t v2 = (void *)qword_101610AA8;
  qword_101610AA8 = (uint64_t)v1;
}

void sub_1001071EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsProtocolConformance");
  unint64_t v2 = (void *)qword_1016100A8;
  qword_1016100A8 = (uint64_t)v1;
}

void sub_100107230(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsPowerSourceController");
  unint64_t v2 = (void *)qword_101610B10;
  qword_101610B10 = (uint64_t)v1;
}

void sub_100107274(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsPerformance");
  unint64_t v2 = (void *)qword_101611F70;
  qword_101611F70 = (uint64_t)v1;
}

void sub_1001072B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsLaunch");
  unint64_t v2 = (void *)qword_101611F50;
  qword_101611F50 = (uint64_t)v1;
}

void sub_1001072FC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsChrome");
  unint64_t v2 = (void *)qword_101611F30;
  qword_101611F30 = (uint64_t)v1;
}

void sub_100107340(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsChromeComponentUpdates");
  unint64_t v2 = (void *)qword_101610A98;
  qword_101610A98 = (uint64_t)v1;
}

void sub_100107384(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsCarPlayExternalDeviceMonitor");
  unint64_t v2 = (void *)qword_101610D58;
  qword_101610D58 = (uint64_t)v1;
}

void sub_1001073C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsActivity");
  unint64_t v2 = (void *)qword_101611F10;
  qword_101611F10 = (uint64_t)v1;
}

void sub_10010740C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsARSessionManager");
  unint64_t v2 = (void *)qword_101610600;
  qword_101610600 = (uint64_t)v1;
}

void sub_100107450(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapRegion");
  unint64_t v2 = (void *)qword_101612210;
  qword_101612210 = (uint64_t)v1;
}

void sub_100107494(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "LightLevelProviding");
  unint64_t v2 = (void *)qword_101611EF0;
  qword_101611EF0 = (uint64_t)v1;
}

void sub_1001074D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "LightLevel");
  unint64_t v2 = (void *)qword_101612200;
  qword_101612200 = (uint64_t)v1;
}

void sub_10010751C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "GroupAnimation");
  unint64_t v2 = (void *)qword_101610A88;
  qword_101610A88 = (uint64_t)v1;
}

void sub_100107560(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CustomPOIsController");
  unint64_t v2 = (void *)qword_1016121D0;
  qword_1016121D0 = (uint64_t)v1;
}

void sub_1001075A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ContainerVC");
  unint64_t v2 = (void *)qword_101611EC0;
  qword_101611EC0 = (uint64_t)v1;
}

void sub_1001075E8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CompanionController");
  unint64_t v2 = (void *)qword_101612390;
  qword_101612390 = (uint64_t)v1;
}

void sub_10010762C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Collections");
  unint64_t v2 = (void *)qword_101611EB0;
  qword_101611EB0 = (uint64_t)v1;
}

void sub_100107670(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ChromeDelegateProxy");
  unint64_t v2 = (void *)qword_101610B80;
  qword_101610B80 = (uint64_t)v1;
}

void sub_1001076B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ChromeContextTransition");
  unint64_t v2 = (void *)qword_101610BC0;
  qword_101610BC0 = (uint64_t)v1;
}

void sub_1001076F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ChromeContextCoordination");
  unint64_t v2 = (void *)qword_10160EAB8;
  qword_10160EAB8 = (uint64_t)v1;
}

void sub_10010773C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarPlay");
  unint64_t v2 = (void *)qword_101612350;
  qword_101612350 = (uint64_t)v1;
}

void sub_100107780(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarDisplayConfigAuxiliaryTask");
  unint64_t v2 = (void *)qword_10160EA80;
  qword_10160EA80 = (uint64_t)v1;
}

void sub_1001077C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "AddressBookManager");
  unint64_t v2 = (void *)qword_10160F0A8;
  qword_10160F0A8 = (uint64_t)v1;
}

void sub_100107808(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "AddressBookAddress");
  unint64_t v2 = (void *)qword_10160F0B8;
  qword_10160F0B8 = (uint64_t)v1;
}

void sub_10010784C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ActionCoordinator");
  unint64_t v2 = (void *)qword_10160F5F8;
  qword_10160F5F8 = (uint64_t)v1;
}

void sub_100107890(id a1)
{
  os_log_t v1 = (void *)qword_10160EFF8;
  qword_10160EFF8 = (uint64_t)&off_1013AD728;
}

void sub_1001078A8(id a1)
{
  os_log_t v1 = (void *)qword_10160F100;
  qword_10160F100 = (uint64_t)&off_1013AD758;
}

void sub_1001078C0(id a1)
{
  os_log_t v1 = (void *)qword_10160FBB8;
  qword_10160FBB8 = (uint64_t)&off_1013AE040;
}

void sub_1001078D8(id a1)
{
  os_log_t v1 = (void *)qword_1016102B8;
  qword_1016102B8 = (uint64_t)&off_1013AE370;
}

uint64_t sub_1001078F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100107900(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) shouldRecordExtendedLaunchTime];
  if (result)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 finishedTest:@"launch" extraResults:0];
  }
  return result;
}

id sub_100107958(uint64_t a1)
{
  if (-[ContainerViewController delaysFirstCardPresentation]_0())
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 194) = 1;
    [*(id *)(a1 + 32) _dismissPresentedViewControllersIfNeededForViewController:*(void *)(a1 + 40)];
  }
  id result = [*(id *)(a1 + 32) suspendPropagatingEdgeInsetsForReason:@"container will present controller"];
  if (*(void *)(a1 + 40) && !*(unsigned char *)(a1 + 56))
  {
    uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    return [v3 pushContaineeState:v4];
  }
  return result;
}

void sub_1001079EC(id a1)
{
  byte_1015DF7E0 = GEOConfigGetBOOL();
}

void sub_100107A18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[41] = *(unsigned char *)(a1 + 48);
    uint64_t v3 = WeakRetained;
    [WeakRetained setAstronomicalCondition:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

id sub_100107A7C(uint64_t a1)
{
  [*(id *)(a1 + 32) updateComponentsIfNeededWithAnimation:*(void *)(a1 + 40)];
  unint64_t v2 = *(void **)(a1 + 40);

  return _[v2 runInCurrentContext];
}

void sub_100107ABC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  if ([v8 type] == (id)6)
  {
    uint64_t v6 = [v8 identifier];
    unsigned int v7 = [v6 isEqualToString:@"NearbyTransit"];

    if (v7)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
      *a4 = 1;
    }
  }
}

id sub_100107B54(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 248) setAlpha:];
}

id sub_100107B68(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _freezeInnerLayoutGuide];
}

id sub_100107B70(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateContent];
}

void sub_100107B78(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardsOverlay];
  [v1 beginDeferringPresentingMapPopovers];
}

uint64_t sub_100107BBC(uint64_t a1)
{
  return (*(uint64_t (**)(void, double))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(double *)(a1 + 40));
}

void sub_100107BD4(id a1)
{
  id v1 = (void *)qword_10160FC40;
  qword_10160FC40 = (uint64_t)&off_1013AE088;
}

id sub_100107BEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyObserversItemsDidChange];
}

void sub_100107BF4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v2;
}

void sub_100107C40(uint64_t a1)
{
  if ([(id)objc_opt_class() requiresUniqueContextIdentifiers])
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v2 = *(id *)(a1 + 40);
    id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v10;
      do
      {
        for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v10 != v5) {
            objc_enumerationMutation(v2);
          }
          uint64_t v7 = *(void *)(*((void *)&v9 + 1) + 8 * i);
          id v8 = [*(id *)(a1 + 32) uniqueIdentifierForContext:v7];
          [*(id *)(*(void *)(a1 + 32) + 48) setObject:v7 forKey:v8];
        }
        id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
      }
      while (v4);
    }
  }
}

void sub_100107D84(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 72) chromeViewController:*(void *)(a1 + 32) didMoveFromContextStack:*(void *)(a1 + 40) toContextStack:*(void *)(a1 + 48)];
  if ([(id)objc_opt_class() requiresUniqueContextIdentifiers])
  {
    long long v10 = 0u;
    long long v11 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    id v2 = *(id *)(a1 + 56);
    id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v9;
      do
      {
        uint64_t v6 = 0;
        do
        {
          if (*(void *)v9 != v5) {
            objc_enumerationMutation(v2);
          }
          uint64_t v7 = [*(id *)(a1 + 32) uniqueIdentifierForContext:*(void *)(*((void *)&v8 + 1) + 8 * (void)v6) context:v8];
          [*(id *)(*(void *)(a1 + 32) + 48) removeObjectForKey:v7];

          uint64_t v6 = (char *)v6 + 1;
        }
        while (v4 != v6);
        id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
      }
      while (v4);
    }
  }
}

id sub_100107ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else {
    return +[WebBundleFileHelper parseManifestFileFromData:a2 withCompletion:*(void *)(a1 + 32)];
  }
}

id sub_100107EFC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _saveMapsSuggestionsEngineStateIfNeeded];
}

id sub_100107F04(uint64_t a1)
{
  return _[*(id *)(a1 + 32) saveStorageToFile:0 callback:0];
}

uint64_t sub_100107F14(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[4] + 16))(a1[4], *(unsigned __int8 *)(*(void *)(a1[5] + 8) + 24), *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24));
}

void sub_100107F3C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001574C;
  block[3] = &unk_1012E5D08;
  void block[4] = *(void *)(a1 + 32);
  if (qword_10160F7E0 != -1) {
    dispatch_once(&qword_10160F7E0, block);
  }
}

void sub_100107FC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _reloadCollectionPlaceItems];
    id WeakRetained = v2;
  }
}

id sub_10010800C()
{
  uint64_t v0 = objc_opt_class();

  return _[v0 initializePairedDeviceRegistry];
}

void sub_100108038(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setTransitUserHere:*(unsigned __int8 *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

void sub_10010808C(id a1)
{
  id v1 = objc_alloc_init(SearchVirtualGarageManager);
  id v2 = (void *)qword_101610150;
  qword_101610150 = (uint64_t)v1;
}

void sub_1001080C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _createAuxiliaryTasksIfNecessaryForPreference:2];
}

void sub_10010810C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    long long v10 = v3;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v3 = v10;
    if (WeakRetained)
    {
      uint64_t v5 = WeakRetained;
      if ([v10 hasFloorOrdinal]) {
        uint64_t v6 = (uint64_t)[v10 floorOrdinal];
      }
      else {
        uint64_t v6 = 0x7FFFFFFFLL;
      }
      [v10 coordinate];
      uint64_t v7 = +[SearchResult customSearchResultWithCoordinate:floorOrdinal:](SearchResult, "customSearchResultWithCoordinate:floorOrdinal:", v6);
      [v10 timestamp];
      [v7 setTimestamp:];
      long long v8 = +[CustomSearchManager sharedManager];
      [v8 setCustomSearchResult:v7 animated:0 shouldSelectOnMap:0];

      long long v9 = [v5 searchPinsManager];
      [v9 setDroppedPin:v7 animated:0 shouldSelect:0];

      id v3 = v10;
    }
  }
}

void sub_10010821C(id a1)
{
  id v1 = objc_alloc_init(RAPRecordManagerTrafficIncidentReportSaver);
  id v2 = (void *)qword_10160FA78;
  qword_10160FA78 = (uint64_t)v1;
}

id sub_100108258(uint64_t a1)
{
  return [*(id *)(a1 + 32) _createCompanionRoutesConnectionOnIsolationQueue];
}

id sub_100108260(uint64_t a1)
{
  +[MapsAnalyticStateProvider updateMapSettingsInformationLabels:*(unsigned __int8 *)(a1 + 32) traffic:*(unsigned __int8 *)(a1 + 33)];

  return +[MapsAnalyticStateProvider updateSettingsInformation];
}

id sub_1001082A8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) setText:*(void *)(a1 + 40)];
}

id sub_1001082BC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 72) setActive:*(unsigned char *)(a1 + 40) == 0];
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 80);

  return [v3 setActive:v2];
}

void sub_100108320(uint64_t a1, void *a2)
{
}

void sub_100108334(id a1)
{
  id v1 = +[NRPairedDeviceRegistry sharedInstance];
}

void sub_100108368(id a1, BOOL a2, NSError *a3)
{
}

id *sub_10010837C(id *result)
{
  id v1 = result;
  ++*((void *)result[4] + 13);
  if (*((unsigned char *)result + 64)) {
    id result = (id *)[result[5] setHidden:0];
  }
  if (*((unsigned char *)v1 + 65)) {
    id result = (id *)[v1[6] setHidden:0];
  }
  if (*((unsigned char *)v1 + 66))
  {
    id v2 = v1[7];
    return (id *)[v2 setHidden:0];
  }
  return result;
}

PedestrianARSessionOfflineMonitor *sub_100108408(uint64_t a1)
{
  id v1 = [[PedestrianARSessionOfflineMonitor alloc] initWithObserver:*(void *)(a1 + 32)];

  return v1;
}

PedestrianARSessionNetworkReachabilityMonitor *sub_10010844C(uint64_t a1)
{
  id v1 = [[PedestrianARSessionNetworkReachabilityMonitor alloc] initWithObserver:*(void *)(a1 + 32)];

  return v1;
}

PedestrianARSessionMapsSkyMonitor *sub_100108490(uint64_t a1)
{
  id v1 = [[PedestrianARSessionMapsSkyMonitor alloc] initWithObserver:*(void *)(a1 + 32)];

  return v1;
}

PedestrianARSessionCarPlayConnectionMonitor *sub_1001084D4(uint64_t a1)
{
  id v1 = [[PedestrianARSessionCarPlayConnectionMonitor alloc] initWithObserver:*(void *)(a1 + 32)];

  return v1;
}

uint64_t sub_100108518(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100108530(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained batteryMonitorTokenWitnessedChangeInBatteryState:*(void *)(a1 + 32)];
}

id sub_100108584(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateMapViewWithEVChargingConfig];
}

void sub_10010858C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setUnpairedVehicles:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

uint64_t sub_1001085E0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 33) = 1;
  [*(id *)(a1 + 32) setNotificationSettings:*(void *)(a1 + 40)];
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

void sub_100108630(id a1)
{
  id v1 = objc_alloc_init(TrafficIncidentAuthenticationManager);
  id v2 = (void *)qword_101610160;
  qword_101610160 = (uint64_t)v1;
}

id sub_10010866C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 64) _maps_scrollContentToOriginalPosition];
  id v2 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v2 resetScrollOffset];
}

void sub_1001086C0(id a1)
{
  id v1 = objc_alloc_init(CoreRoutineLocationOfInterestManager);
  id v2 = (void *)qword_10160FA38;
  qword_10160FA38 = (uint64_t)v1;
}

void sub_1001086FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateBackgroundView];
}

void sub_10010873C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 40) allObjects];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10010878C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _handleResult:*(void *)(a1 + 32) error:*(void *)(a1 + 40) cacheKey:*(void *)(a1 + 48)];
}

id sub_1001087E0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 265) = 0;
  return [*(id *)(a1 + 32) updateContentState];
}

id sub_1001087F8(uint64_t a1)
{
  +[MapsAnalyticStateProvider updateLocaleInformation:*(void *)(a1 + 32)];

  return +[MapsAnalyticStateProvider updateTouristInformation];
}

void sub_10010883C(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_101610D50;
  qword_101610D50 = v1;
}

void sub_100108878(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:off_1015F22B0 object:0];
}

void sub_1001088CC(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_101611178;
  qword_101611178 = v1;
}

void sub_100108908(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1016106E0;
  qword_1016106E0 = v1;
}

void sub_100108944(id a1)
{
  uint64_t v1 = +[NSOrderedSet orderedSetWithObject:&OBJC_PROTOCOL___FloatingControlsOverlayDelegate];
  uint64_t v2 = (void *)qword_10160F1B0;
  qword_10160F1B0 = v1;
}

void sub_10010898C(id a1)
{
  uint64_t v1 = objc_alloc_init(TrafficIncidentsStorageManager);
  uint64_t v2 = (void *)qword_10160EA18;
  qword_10160EA18 = (uint64_t)v1;
}

void sub_1001089C8(id a1)
{
  uint64_t v1 = objc_alloc_init(MapsSiriContextProvider);
  uint64_t v2 = (void *)qword_101610828;
  qword_101610828 = (uint64_t)v1;
}

id sub_100108A04(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadAvailability];
}

void sub_100108A0C(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"MapsApplicationCoreRoutineEnabledStateChangedNotification" object:*(void *)(a1 + 32)];
}

void sub_100108A6C(uint64_t a1, uint64_t a2)
{
  int v2 = a2 == 2;
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(unsigned __int8 *)(v3 + 136) != v2)
  {
    *(unsigned char *)(v3 + 136) = v2;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100108A0C;
    block[3] = &unk_1012E5D08;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

BOOL sub_100108B08(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 32) == a2;
}

void sub_100108B18(id a1)
{
  uint64_t v1 = objc_alloc_init(TrafficIncidentsSourceManager);
  int v2 = (void *)qword_10160FB38;
  qword_10160FB38 = (uint64_t)v1;
}

void sub_100108B54(id a1)
{
  id v1 = +[MKLocationManager sharedLocationManager];
  [v1 isLocationServicesAvailable];
}

void sub_100108B9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained[5];
    BOOL v4 = v3 == 1;
    BOOL v5 = v3 < 1;
    uint64_t v6 = v3 - 1;
    if (!v5)
    {
      WeakRetained[5] = v6;
      if (v4)
      {
        if (*((unsigned char *)WeakRetained + 25))
        {
          uint64_t v7 = WeakRetained;
          [*(id *)(a1 + 32) setHidden:1];
          id WeakRetained = v7;
        }
      }
    }
  }
}

id sub_100108C10(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateAlpha];
}

id sub_100108C18(id result)
{
  if (!*((unsigned char *)result + 48)) {
    return [*((id *)result + 5) setHidden:0];
  }
  return result;
}

void sub_100108C40(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

void sub_100108C98(id a1)
{
  id v1 = objc_alloc_init(TrafficIncidentLayoutStorage);
  id v2 = (void *)qword_10160F118;
  qword_10160F118 = (uint64_t)v1;
}

void sub_100108CD4(id a1)
{
  id v1 = [[TrafficIncidentLayoutManager alloc] initWithFormType:7];
  id v2 = (void *)qword_1016103D0;
  qword_1016103D0 = (uint64_t)v1;
}

id sub_100108D18(uint64_t a1)
{
  return [*(id *)(a1 + 32) runWithCurrentOptions];
}

void sub_100108D20(id a1)
{
  id v1 = objc_alloc_init(MapsPowerSourceController);
  id v2 = (void *)qword_101610B00;
  qword_101610B00 = (uint64_t)v1;
}

void sub_100108D5C(id a1)
{
  id v1 = objc_alloc_init(CuratedCollectionSyncManager);
  id v2 = (void *)qword_10160EF88;
  qword_10160EF88 = (uint64_t)v1;
}

void sub_100108D98(id a1)
{
  id v1 = (void *)qword_1016106F0;
  qword_1016106F0 = (uint64_t)&off_1013AEDD0;
}

void sub_100108DB0(id a1)
{
  id v1 = [[MapsLightLevelController alloc] initWithWindowScene:0];
  id v2 = (void *)qword_10160F500;
  qword_10160F500 = (uint64_t)v1;
}

void sub_100108DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    if (WeakRetained)
    {
      id v5 = WeakRetained;
      [WeakRetained setTotalOfflineDataSize:a2];
    }
  }
}

void sub_100108E5C(id a1)
{
  id v1 = objc_alloc_init(VLFLocationManager);
  id v2 = (void *)qword_101610318;
  qword_101610318 = (uint64_t)v1;
}

void sub_100108E98(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_101610988;
  qword_101610988 = v1;
}

void sub_100108ED4(id a1)
{
}

void sub_100108EEC(id a1)
{
  uint64_t v1 = objc_alloc_init(MapsXPCConnectionsManager);
  id v2 = (void *)qword_1016108D8;
  qword_1016108D8 = (uint64_t)v1;
}

void sub_100108F28(id a1)
{
  byte_1016110E0 = MGGetBoolAnswer();
}

void sub_100108F50(id a1)
{
  uint64_t v1 = objc_alloc_init(BatteryMonitorController);
  id v2 = (void *)qword_101610918;
  qword_101610918 = (uint64_t)v1;
}

void sub_100108F8C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    if (WeakRetained)
    {
      id v4 = WeakRetained;
      [WeakRetained _updateRouteMarkersInContext:0];
      id WeakRetained = v4;
    }
  }
}

id sub_100108FDC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _populateExternalDevice];
}

void sub_100108FE4(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_101610B90;
  qword_101610B90 = v1;
}

void sub_100109020(id a1)
{
  uint64_t v1 = objc_alloc_init(UserInformationManager);
  uint64_t v2 = (void *)qword_10160FE08;
  qword_10160FE08 = (uint64_t)v1;
}

id sub_10010905C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
}

void sub_100109068(id a1)
{
  id v1 = [[WeatherSettingsManager alloc] initSharedManager];
  uint64_t v2 = (void *)qword_10160FD50;
  qword_10160FD50 = (uint64_t)v1;
}

void sub_1001090A8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10160F668;
  qword_10160F668 = (uint64_t)v1;
}

void sub_1001090E0(id a1)
{
  id v1 = objc_alloc_init(DeviceRecentLocations);
  uint64_t v2 = (void *)qword_101610968;
  qword_101610968 = (uint64_t)v1;
}

void sub_10010911C(id a1)
{
  uint64_t v1 = +[NSOrderedSet orderedSetWithObject:&OBJC_PROTOCOL___MKMapViewDelegatePrivate];
  uint64_t v2 = (void *)qword_1016107A0;
  qword_1016107A0 = v1;
}

void sub_100109164(id a1)
{
  uint64_t v1 = objc_alloc_init(MapsPinsController);
  uint64_t v2 = (void *)qword_10160FE60;
  qword_10160FE60 = (uint64_t)v1;
}

void sub_1001091A0(id a1)
{
  uint64_t v1 = objc_alloc_init(CarSessionController);
  uint64_t v2 = (void *)qword_10160FA00;
  qword_10160FA00 = (uint64_t)v1;
}

void sub_1001091DC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isCarPlayAvailable]) {
    id v2 = objc_alloc_init(*(Class *)(a1 + 32));
  }
  else {
    id v2 = 0;
  }
  uint64_t v3 = (void *)qword_1016110E8;
  qword_1016110E8 = (uint64_t)v2;
}

void sub_100109234(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(v2 + 77);
  if (*(unsigned char *)(v2 + 77)) {
    id v4 = &__NSArray0__struct;
  }
  else {
    id v4 = [*(id *)(v2 + 48) copy];
  }
  id v5 = v4;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v4);
  if (!v3)
  {
  }
}

void sub_1001092BC(id a1)
{
  uint64_t v1 = objc_alloc_init(MapsARSessionManager);
  uint64_t v2 = (void *)qword_1016105F0;
  qword_1016105F0 = (uint64_t)v1;
}

void sub_1001092F8(uint64_t a1)
{
}

void sub_10010930C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    WeakRetained[32] = 0;
  }
}

void sub_100109340(id a1)
{
  uint64_t v1 = objc_alloc_init(MapsExternalDevice);
  uint64_t v2 = (void *)qword_10160F420;
  qword_10160F420 = (uint64_t)v1;
}

void sub_10010937C(id a1)
{
  uint64_t v1 = objc_alloc_init(CustomSearchManager);
  uint64_t v2 = (void *)qword_10160EAE0;
  qword_10160EAE0 = (uint64_t)v1;
}

void sub_1001093B8(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_10160FF68;
  qword_10160FF68 = v1;
}

void sub_1001093F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(v2 + 77);
  if (*(unsigned char *)(v2 + 77)) {
    id v4 = &__NSArray0__struct;
  }
  else {
    id v4 = [*(id *)(v2 + 40) copy];
  }
  id v5 = v4;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v4);
  if (!v3)
  {
  }
}

void sub_10010947C(id a1)
{
  uint64_t v1 = objc_alloc_init(MapsOfflineUIHelper);
  uint64_t v2 = (void *)qword_101610038;
  qword_101610038 = (uint64_t)v1;
}

void sub_1001094B8(id a1)
{
  uint64_t v1 = objc_alloc_init(AddressBookManager);
  uint64_t v2 = (void *)qword_10160F058;
  qword_10160F058 = (uint64_t)v1;
}

void sub_1001094F4(id a1)
{
  uint64_t v1 = objc_alloc_init(KeyboardObserver);
  uint64_t v2 = (void *)qword_1016102E0;
  qword_1016102E0 = (uint64_t)v1;
}

void sub_100109530(id a1)
{
  uint64_t v1 = objc_alloc_init(CollectionManager);
  uint64_t v2 = (void *)qword_101610388;
  qword_101610388 = (uint64_t)v1;
}

void sub_10010956C(id a1)
{
  uint64_t v1 = objc_alloc_init(ParkedCarManager);
  uint64_t v2 = (void *)qword_101610F30;
  qword_101610F30 = (uint64_t)v1;
}

void sub_1001095A8(id a1)
{
  id v1 = [[MapsOfflineHelper alloc] init_internal];
  uint64_t v2 = (void *)qword_10160EC50;
  qword_10160EC50 = (uint64_t)v1;
}

void sub_1001095E8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_1016108B8;
  qword_1016108B8 = (uint64_t)v1;
}

void sub_100109620(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 registerDefaults:&off_1013AEDF8];
}

void sub_100109670(uint64_t a1)
{
  id v1 = [objc_alloc(*(Class *)(a1 + 32)) initWithCarPlay:0];
  uint64_t v2 = (void *)qword_10160FED0;
  qword_10160FED0 = (uint64_t)v1;
}

void sub_1001096B0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10160FF78;
  qword_10160FF78 = (uint64_t)v1;
}

void sub_1001096E8(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 registerDefaults:&off_1013AEFD8];
}

void sub_100109738(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _createAuxiliaryTasksIfNecessaryForPreference:1];
}

void sub_10010977C(id a1)
{
  id v1 = objc_alloc_init(Recents);
  uint64_t v2 = (void *)qword_10160EEC8;
  qword_10160EEC8 = (uint64_t)v1;
}

uint64_t sub_1001097B8()
{
  if (qword_10160F7A8 != -1) {
    dispatch_once(&qword_10160F7A8, &stru_1012F75F8);
  }
  return byte_10160F799;
}

__CFString *sub_1001097FC(uint64_t a1)
{
  switch(a1)
  {
    case 2:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"STATUS_BAR_INDICATOR_NO_INTERNET";
      goto LABEL_9;
    case 3:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"STATUS_BAR_INDICATOR_AIRPLANE_MODE";
      goto LABEL_9;
    case 4:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"STATUS_BAR_INDICATOR_CELLULAR_DATA_OFF";
      goto LABEL_9;
    case 5:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"STATUS_BAR_INDICATOR_LOCATION_SERVICES_OFF";
      goto LABEL_9;
    case 6:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"Precise Location: Off";
LABEL_9:
      CFStringRef v4 = 0;
      goto LABEL_10;
    case 7:
    case 8:
      id v1 = +[NSBundle mainBundle];
      uint64_t v2 = v1;
      CFStringRef v3 = @"STATUS_BAR_INDICATOR_OFFLINE_MAPS";
      CFStringRef v4 = @"Offline";
LABEL_10:
      id v5 = [v1 localizedStringForKey:v3 value:@"localized string not found" table:v4];

      break;
    default:
      id v5 = &stru_101324E70;
      break;
  }

  return v5;
}

CFStringRef sub_10010994C(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Nominal";
  }
  else {
    return off_1013173D8[a1 - 1];
  }
}

id sub_100109974(id a1)
{
  return &off_1013A9640;
}

id sub_100109980(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_10010998C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109998(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1001099A4(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1001099B0(id a1)
{
  return &off_1013A98C8;
}

id sub_1001099BC(id a1)
{
  return &off_1013A9790;
}

id sub_1001099C8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1001099D4(id a1)
{
  return &off_1013A9688;
}

id sub_1001099E0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1001099EC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_1001099F8(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A04(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A10(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A1C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A28(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A34(id a1)
{
  return &off_1013A9640;
}

id sub_100109A40(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A4C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A58(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A64(id a1)
{
  return &off_1013A9640;
}

id sub_100109A70(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A7C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109A88(id a1)
{
  return &off_1013AF348;
}

id sub_100109A94(id a1)
{
  return 0;
}

id sub_100109A9C(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109AA8(id a1)
{
  return &off_1013AF2F8;
}

id sub_100109AB4(id a1)
{
  return &off_1013AF398;
}

id sub_100109AC0(id a1)
{
  return &off_1013AF378;
}

id sub_100109ACC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109AD8(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100109AE4(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100109AF0(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100109AFC(id a1)
{
  return &off_1013A9748;
}

id sub_100109B08()
{
  if (qword_10160FC88 != -1) {
    dispatch_once(&qword_10160FC88, &stru_1012FEC80);
  }
  uint64_t v0 = (void *)qword_10160FC80;

  return v0;
}

id sub_100109B5C()
{
  if (qword_101610ED0 != -1) {
    dispatch_once(&qword_101610ED0, &stru_101320F98);
  }
  uint64_t v0 = (void *)qword_101610EC8;

  return v0;
}

id sub_100109BB0()
{
  if (qword_1016107D0 != -1) {
    dispatch_once(&qword_1016107D0, &stru_101316F08);
  }
  uint64_t v0 = (void *)qword_1016107C8;

  return v0;
}

id sub_100109C04()
{
  if (qword_101610FD0 != -1) {
    dispatch_once(&qword_101610FD0, &stru_101322160);
  }
  uint64_t v0 = (void *)qword_101610FC8;

  return v0;
}

id sub_100109C58()
{
  if (qword_10160F720 != -1) {
    dispatch_once(&qword_10160F720, &stru_1012F73F8);
  }
  uint64_t v0 = (void *)qword_10160F718;

  return v0;
}

id sub_100109CAC()
{
  if (qword_1016108D0 != -1) {
    dispatch_once(&qword_1016108D0, &stru_101319418);
  }
  uint64_t v0 = (void *)qword_1016108C8;

  return v0;
}

id sub_100109D00()
{
  if (qword_10160EEE8 != -1) {
    dispatch_once(&qword_10160EEE8, &stru_1012ED188);
  }
  uint64_t v0 = (void *)qword_10160EEE0;

  return v0;
}

id sub_100109D54()
{
  if (qword_1016101B0 != -1) {
    dispatch_once(&qword_1016101B0, &stru_101311F80);
  }
  uint64_t v0 = (void *)qword_1016101A8;

  return v0;
}

id sub_100109DA8()
{
  if (qword_10160FB50 != -1) {
    dispatch_once(&qword_10160FB50, &stru_1012FA060);
  }
  uint64_t v0 = (void *)qword_10160FB48;

  return v0;
}

id sub_100109DFC()
{
  if (qword_101610400 != -1) {
    dispatch_once(&qword_101610400, &stru_101313DB8);
  }
  uint64_t v0 = (void *)qword_1016103F8;

  return v0;
}

id sub_100109E50()
{
  if (qword_101612078 != -1) {
    dispatch_once(&qword_101612078, &stru_1012EF958);
  }
  uint64_t v0 = (void *)qword_101612070;

  return v0;
}

id sub_100109EA4()
{
  if (qword_101610360 != -1) {
    dispatch_once(&qword_101610360, &stru_101313428);
  }
  uint64_t v0 = (void *)qword_101610358;

  return v0;
}

id sub_100109EF8()
{
  if (qword_101612028 != -1) {
    dispatch_once(&qword_101612028, &stru_1012EF8B8);
  }
  uint64_t v0 = (void *)qword_101612020;

  return v0;
}

id sub_100109F4C()
{
  if (qword_10160F360 != -1) {
    dispatch_once(&qword_10160F360, &stru_1012F2D40);
  }
  uint64_t v0 = (void *)qword_10160F358;

  return v0;
}

id sub_100109FA0()
{
  if (qword_101610500 != -1) {
    dispatch_once(&qword_101610500, &stru_101314DC0);
  }
  uint64_t v0 = (void *)qword_1016104F8;

  return v0;
}

id sub_100109FF4()
{
  if (qword_10160F8C8 != -1) {
    dispatch_once(&qword_10160F8C8, &stru_1012F8408);
  }
  uint64_t v0 = (void *)qword_10160F8C0;

  return v0;
}

id sub_10010A048()
{
  if (qword_1016101D0 != -1) {
    dispatch_once(&qword_1016101D0, &stru_1013121A0);
  }
  uint64_t v0 = (void *)qword_1016101C8;

  return v0;
}

id sub_10010A09C()
{
  if (qword_101611010 != -1) {
    dispatch_once(&qword_101611010, &stru_101322220);
  }
  uint64_t v0 = (void *)qword_101611008;

  return v0;
}

id sub_10010A0F0()
{
  if (qword_10160F3B8 != -1) {
    dispatch_once(&qword_10160F3B8, &stru_1012F3718);
  }
  uint64_t v0 = (void *)qword_10160F3B0;

  return v0;
}

id sub_10010A144()
{
  if (qword_10160F600 != -1) {
    dispatch_once(&qword_10160F600, &stru_1012F5D80);
  }
  uint64_t v0 = (void *)qword_10160F5F8;

  return v0;
}

UIImageSymbolConfiguration *sub_10010A19C(uint64_t a1)
{
  return +[UIImageSymbolConfiguration configurationWithPointSize:weight:](UIImageSymbolConfiguration, "configurationWithPointSize:weight:", a1);
}

uint64_t sub_10010A1AC(unint64_t a1)
{
  return sub_10010A1C4(a1, (void (*)(void))&type metadata accessor for CollectionPlaceItem);
}

uint64_t sub_10010A1C4(unint64_t a1, void (*a2)(void))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v5 = _swiftEmptyArrayStorage;
  if (!v4) {
    return (uint64_t)v5;
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10025AF50(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        a2(0);
        swift_dynamicCast();
        id v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025AF50(0, v5[2] + 1, 1);
          id v5 = v15;
        }
        unint64_t v9 = v5[2];
        unint64_t v8 = v5[3];
        if (v9 >= v8 >> 1)
        {
          sub_10025AF50(v8 > 1, v9 + 1, 1);
          id v5 = v15;
        }
        id v5[2] = v9 + 1;
        sub_1000EFD84(v14, &v5[4 * v9 + 4]);
      }
    }
    else
    {
      long long v10 = (id *)(a1 + 32);
      a2(0);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        id v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025AF50(0, v5[2] + 1, 1);
          id v5 = v15;
        }
        unint64_t v13 = v5[2];
        unint64_t v12 = v5[3];
        if (v13 >= v12 >> 1)
        {
          sub_10025AF50(v12 > 1, v13 + 1, 1);
          id v5 = v15;
        }
        id v5[2] = v13 + 1;
        sub_1000EFD84(v14, &v5[4 * v13 + 4]);
        ++v10;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10010A404(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a4 != result)
  {
    uint64_t v8 = result;
    if (a4 < result)
    {
      uint64_t v7 = a3 & 1;
      uint64_t v11 = result;
      unint64_t v10 = a4;
      uint64_t v9 = a5;
      a5 = a2;
      if (a6) {
        goto LABEL_20;
      }
      goto LABEL_7;
    }
LABEL_19:
    uint64_t v7 = a6 & 1;
    uint64_t v11 = a4;
    unint64_t v10 = v8;
    uint64_t v9 = a2;
    if (a3)
    {
LABEL_20:
      uint64_t v17 = 0;
      uint64_t v14 = 0;
      if ((uint64_t)v10 < v11) {
        goto LABEL_21;
      }
LABEL_33:
      if ((v7 & 1) == 0)
      {
        if ((v10 & 0x8000000000000000) != 0)
        {
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        if (v10 >= *(void *)(a7 + 16))
        {
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        BOOL v20 = __OFADD__(v14, a5);
        v14 += a5;
        if (v20)
        {
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
      }
      if (a4 >= v8) {
        return v14;
      }
      BOOL v20 = __OFSUB__(0, v14);
      uint64_t v14 = -v14;
      if (!v20) {
        return v14;
      }
      goto LABEL_51;
    }
LABEL_7:
    if ((v10 & 0x8000000000000000) != 0) {
      goto LABEL_42;
    }
    if (v10 >= *(void *)(a7 + 16)) {
      goto LABEL_44;
    }
    unint64_t v15 = *(void *)(a7 + 8 * v10 + 32);
    if (v15 >> 62) {
      goto LABEL_46;
    }
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v17 = v16 - v9;
    if (!__OFSUB__(v16, v9)) {
      goto LABEL_11;
    }
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (a6)
  {
    if (a3) {
      return 0;
    }
    while (1)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      uint64_t v21 = a5;
      uint64_t v22 = v7;
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v7 = v22;
      a5 = v21;
      uint64_t v17 = v23 - v9;
      if (__OFSUB__(v23, v9)) {
        goto LABEL_48;
      }
LABEL_11:
      ++v10;
      uint64_t v14 = v17;
      if ((uint64_t)v10 >= v11) {
        goto LABEL_33;
      }
LABEL_21:
      if (v10 <= *(void *)(a7 + 16)) {
        unint64_t v18 = *(void *)(a7 + 16);
      }
      else {
        unint64_t v18 = v10;
      }
      uint64_t v14 = v17;
      while (v18 != v10)
      {
        unint64_t v19 = *(void *)(a7 + 32 + 8 * v10);
        if (v19 >> 62)
        {
          uint64_t v25 = a5;
          unsigned int v24 = v7;
          swift_bridgeObjectRetain();
          uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v7 = v24;
          a5 = v25;
          BOOL v20 = __OFADD__(v14, v9);
          v14 += v9;
          if (v20)
          {
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v9 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          BOOL v20 = __OFADD__(v14, v9);
          v14 += v9;
          if (v20) {
            goto LABEL_32;
          }
        }
        if ((uint64_t)++v10 >= v11) {
          goto LABEL_33;
        }
      }
      __break(1u);
    }
  }
  if ((a3 & 1) == 0)
  {
    if (a4 < 0) {
      goto LABEL_43;
    }
    if (*(void *)(a7 + 16) <= (unint64_t)a4) {
      goto LABEL_45;
    }
    uint64_t v14 = a5 - a2;
    if (!__OFSUB__(a5, a2)) {
      return v14;
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_10010A63C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001FB4C(a1, a2, a3, (void *)*v3);
  *CFStringRef v3 = result;
  return result;
}

uint64_t sub_10010A65C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1000FF33C(&qword_1015CF1F0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10010A768(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10010A7C4(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015CF1E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Int sub_10010A824(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  Swift::Int v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10013E3A4();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_100140054();
      goto LABEL_12;
    }
    sub_100140C90();
  }
  uint64_t v9 = *v3;
  uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      sub_10010A768(*(void *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      char v12 = static AnyHashable.== infix(_:_:)();
      uint64_t result = sub_1000F351C((uint64_t)v19);
      if (v12) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v14 = *(void *)(v13 + 48) + 40 * a2;
  long long v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(v6 + 32);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_10010A990(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_160;
    }
    if (v3) {
      return sub_10003EF6C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_168;
  }
  Swift::Int v124 = result;
  Swift::Int v129 = v3;
  uint64_t v121 = a1;
  if (v3 < 2)
  {
    unint64_t v8 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v137 = (uint64_t)&_swiftEmptyArrayStorage;
    uint64_t v132 = (void **)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_126:
      if (v12 >= 2)
      {
        uint64_t v115 = *v121;
        do
        {
          unint64_t v116 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_155;
          }
          if (!v115) {
            goto LABEL_167;
          }
          uint64_t v117 = *(void *)&v8[16 * v116 + 32];
          uint64_t v118 = *(void *)&v8[16 * v12 + 24];
          sub_10025F774((void **)(v115 + 8 * v117), (id *)(v115 + 8 * *(void *)&v8[16 * v12 + 16]), (id *)(v115 + 8 * v118), v132);
          if (v1) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_156;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v8 = sub_10035503C((uint64_t)v8);
          }
          if (v116 >= *((void *)v8 + 2)) {
            goto LABEL_157;
          }
          unint64_t v119 = &v8[16 * v116 + 32];
          *(void *)unint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v8 + 2);
          if (v12 > v120) {
            goto LABEL_158;
          }
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v120 - v12));
          *((void *)v8 + 2) = v120 - 1;
          unint64_t v12 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_137:
      swift_bridgeObjectRelease();
      *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_100100830(0, &qword_1015D48A0);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v132 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v137 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v122 = *a1 + 16;
  uint64_t v123 = *a1 - 8;
  unint64_t v8 = (char *)&_swiftEmptyArrayStorage;
  Swift::Int v11 = v129;
  uint64_t v133 = *a1;
  while (2)
  {
    Swift::Int v13 = v9 + 1;
    Swift::Int v128 = v9;
    if (v9 + 1 >= v11) {
      goto LABEL_52;
    }
    uint64_t v125 = v8;
    uint64_t v14 = *(void **)(v10 + 8 * v9);
    id v15 = *(id *)(v10 + 8 * v13);
    id v16 = v14;
    id v17 = [v15 input];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v21 = v20;
    }
    else
    {
      uint64_t v19 = 0;
      unint64_t v21 = 0xE000000000000000;
    }
    id v22 = [v16 input];
    Swift::Int v9 = v128;
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;

      if (v19 != v24) {
        goto LABEL_25;
      }
    }
    else
    {
      unint64_t v26 = 0xE000000000000000;
      if (v19)
      {
LABEL_25:
        int v130 = _stringCompareWithSmolCheck(_:_:expecting:)();
        goto LABEL_26;
      }
    }
    if (v21 != v26) {
      goto LABEL_25;
    }
    int v130 = 0;
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    Swift::Int v13 = v128 + 2;
    if (v128 + 2 >= v129) {
      goto LABEL_43;
    }
    char v27 = (id *)(v122 + 8 * v128);
    while (1)
    {
      Swift::Int v134 = v13;
      BOOL v29 = *(v27 - 1);
      id v30 = *v27;
      id v31 = v29;
      id v32 = [v30 input];
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v36 = v35;
      }
      else
      {
        uint64_t v34 = 0;
        unint64_t v36 = 0xE000000000000000;
      }
      id v37 = [v31 input];
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v41 = v40;

        if (v34 != v39) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v41 = 0xE000000000000000;
        if (v34) {
          goto LABEL_28;
        }
      }
      if (v36 == v41)
      {

        swift_bridgeObjectRelease_n();
        if (v130)
        {
          unint64_t v8 = v125;
          uint64_t v10 = v133;
          Swift::Int v13 = v134;
          Swift::Int v9 = v128;
          goto LABEL_44;
        }
        goto LABEL_29;
      }
LABEL_28:
      int v28 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v130 ^ v28)) {
        break;
      }
LABEL_29:
      Swift::Int v13 = v134 + 1;
      ++v27;
      if (v129 == v134 + 1)
      {
        Swift::Int v13 = v129;
        goto LABEL_42;
      }
    }
    Swift::Int v13 = v134;
LABEL_42:
    Swift::Int v9 = v128;
LABEL_43:
    unint64_t v8 = v125;
    uint64_t v10 = v133;
    if (v130)
    {
LABEL_44:
      if (v13 < v9) {
        goto LABEL_161;
      }
      if (v9 < v13)
      {
        uint64_t v42 = (uint64_t *)(v123 + 8 * v13);
        Swift::Int v43 = v13;
        Swift::Int v44 = v9;
        uint64_t v45 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v44 != --v43)
          {
            if (!v10) {
              goto LABEL_166;
            }
            uint64_t v46 = *v45;
            *uint64_t v45 = *v42;
            *uint64_t v42 = v46;
          }
          ++v44;
          --v42;
          ++v45;
        }
        while (v44 < v43);
      }
    }
LABEL_52:
    if (v13 >= v129) {
      goto LABEL_78;
    }
    if (__OFSUB__(v13, v9)) {
      goto LABEL_159;
    }
    if (v13 - v9 >= v124)
    {
LABEL_78:
      if (v13 < v9) {
        goto LABEL_154;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v8 = sub_10035496C(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v67 = *((void *)v8 + 2);
      unint64_t v66 = *((void *)v8 + 3);
      unint64_t v12 = v67 + 1;
      Swift::Int v136 = v13;
      if (v67 >= v66 >> 1) {
        unint64_t v8 = sub_10035496C((char *)(v66 > 1), v67 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v12;
      uint64_t v68 = v8 + 32;
      uint64_t v69 = &v8[16 * v67 + 32];
      *(void *)uint64_t v69 = v128;
      *((void *)v69 + 1) = v136;
      if (!v67)
      {
        unint64_t v12 = 1;
LABEL_14:
        Swift::Int v11 = v129;
        Swift::Int v9 = v136;
        if (v136 >= v129) {
          goto LABEL_126;
        }
        continue;
      }
      while (1)
      {
        unint64_t v70 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v75 = &v68[16 * v12];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_143;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_144;
          }
          unint64_t v82 = v12 - 2;
          uint64_t v83 = &v68[16 * v12 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_146;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_149;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v68[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_153;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_115;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v99 = *((void *)v8 + 4);
            uint64_t v100 = *((void *)v8 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_109;
          }
          uint64_t v72 = *((void *)v8 + 4);
          uint64_t v71 = *((void *)v8 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_145;
        }
        unint64_t v82 = v12 - 2;
        char v88 = &v68[16 * v12 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_148;
        }
        uint64_t v94 = &v68[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_151;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_152;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_115:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_117;
        }
LABEL_109:
        if (v93) {
          goto LABEL_147;
        }
        id v101 = &v68[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_150;
        }
        if (v104 < v92) {
          goto LABEL_14;
        }
LABEL_117:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v12)
        {
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        if (!v10) {
          goto LABEL_165;
        }
        uint64_t v110 = &v68[16 * v109];
        uint64_t v111 = *(void *)v110;
        uint64_t v112 = &v68[16 * v70];
        uint64_t v113 = *((void *)v112 + 1);
        sub_10025F774((void **)(v10 + 8 * *(void *)v110), (id *)(v10 + 8 * *(void *)v112), (id *)(v10 + 8 * v113), v132);
        if (v1) {
          goto LABEL_137;
        }
        if (v113 < v111) {
          goto LABEL_140;
        }
        if (v70 > *((void *)v8 + 2)) {
          goto LABEL_141;
        }
        *(void *)uint64_t v110 = v111;
        *(void *)&v68[16 * v109 + 8] = v113;
        unint64_t v114 = *((void *)v8 + 2);
        if (v70 >= v114) {
          goto LABEL_142;
        }
        unint64_t v12 = v114 - 1;
        memmove(&v68[16 * v70], v112 + 16, 16 * (v114 - 1 - v70));
        *((void *)v8 + 2) = v114 - 1;
        if (v114 <= 2) {
          goto LABEL_14;
        }
      }
    }
    break;
  }
  if (__OFADD__(v9, v124)) {
    goto LABEL_162;
  }
  Swift::Int v47 = v129;
  if (v9 + v124 < v129) {
    Swift::Int v47 = v9 + v124;
  }
  if (v47 >= v9)
  {
    if (v13 != v47)
    {
      unint64_t v126 = v8;
      Swift::Int v127 = v47;
      uint64_t v48 = v123 + 8 * v13;
      do
      {
        char v50 = *(void **)(v10 + 8 * v13);
        uint64_t v131 = v48;
        Swift::Int v135 = v13;
        while (1)
        {
          char v51 = *(void **)v48;
          id v52 = v50;
          id v53 = v51;
          id v54 = [v52 input];
          if (v54)
          {
            char v55 = v54;
            uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v58 = v57;
          }
          else
          {
            uint64_t v56 = 0;
            unint64_t v58 = 0xE000000000000000;
          }
          id v59 = [v53 input];
          if (v59)
          {
            uint64_t v60 = v59;
            uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v63 = v62;
          }
          else
          {
            uint64_t v61 = 0;
            unint64_t v63 = 0xE000000000000000;
          }
          uint64_t v10 = v133;
          if (v56 == v61 && v58 == v63) {
            break;
          }
          char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v64 & 1) == 0) {
            goto LABEL_62;
          }
          Swift::Int v49 = v135;
          if (!v133) {
            goto LABEL_164;
          }
          uint64_t v65 = *(void **)v48;
          char v50 = *(void **)(v48 + 8);
          *(void *)uint64_t v48 = v50;
          *(void *)(v48 + _Block_object_dispose(&STACK[0x358], 8) = v65;
          v48 -= 8;
          if (v135 == ++v9) {
            goto LABEL_63;
          }
        }

        swift_bridgeObjectRelease_n();
LABEL_62:
        Swift::Int v49 = v135;
LABEL_63:
        Swift::Int v13 = v49 + 1;
        uint64_t v48 = v131 + 8;
        Swift::Int v9 = v128;
      }
      while (v13 != v127);
      Swift::Int v13 = v127;
      unint64_t v8 = v126;
    }
    goto LABEL_78;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10010B2F0()
{
  unint64_t result = qword_1015D4330;
  if (!qword_1015D4330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D4330);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HomeListFooterCellModel(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HomeListFooterCellModel(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

unint64_t sub_10010B37C()
{
  unint64_t result = qword_1015CE5E0;
  if (!qword_1015CE5E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CE5E0);
  }
  return result;
}

void sub_10010B3BC(id a1)
{
  if (a1 != (id)1) {
}
  }

unint64_t sub_10010B3CC()
{
  unint64_t result = qword_1015CE570;
  if (!qword_1015CE570)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CE570);
  }
  return result;
}

uint64_t sub_10010B40C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_10010A768(v4, (uint64_t)v5);
      sub_10001A604((uint64_t)v6, (uint64_t)v5);
      sub_1000F351C((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_10010B498(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015CD250);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10010B4F8()
{
  unint64_t result = qword_1015D5A60;
  if (!qword_1015D5A60)
  {
    sub_10010118C((uint64_t *)&unk_1015CE230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5A60);
  }
  return result;
}

unint64_t sub_10010B554()
{
  unint64_t result = qword_1015CE1F0;
  if (!qword_1015CE1F0)
  {
    sub_10010118C((uint64_t *)&unk_1015CE580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE1F0);
  }
  return result;
}

uint64_t sub_10010B5B0(unint64_t a1)
{
  return sub_100016B14(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10010B5C8);
}

uint64_t sub_10010B5C8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10024FE88(&qword_1015D6900, (uint64_t *)&unk_1015D68F0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000FF33C((uint64_t *)&unk_1015D68F0);
          unint64_t v12 = sub_1002C20C0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10010B7E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  char v3 = _swiftEmptyArrayStorage;
  do
  {
    sub_1003315D0(v2, (uint64_t)v11);
    if (*(void *)&v11[0])
    {
      long long v8 = v11[0];
      long long v9 = v11[1];
      long long v10 = v11[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v3 = sub_1000F9638(0, v3[2] + 1, 1, v3);
      }
      unint64_t v5 = v3[2];
      unint64_t v4 = v3[3];
      if (v5 >= v4 >> 1) {
        char v3 = sub_1000F9638((void *)(v4 > 1), v5 + 1, 1, v3);
      }
      v3[2] = v5 + 1;
      unint64_t v6 = &v3[6 * v5];
      v6[3] = v9;
      void v6[4] = v10;
      uint64_t v6[2] = v8;
    }
    else
    {
      sub_1000FF2E0((uint64_t)v11, &qword_1015D68C0);
    }
    v2 += 32;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10010B930()
{
  return LibraryViewController.prepareForNoteEditorPresentation(completion:)(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10010B938()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t LibraryViewController.prepareForNoteEditorPresentation(completion:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10010B988(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

unint64_t sub_10010B9B0()
{
  unint64_t result = qword_1015CE1E0;
  if (!qword_1015CE1E0)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE1E0);
  }
  return result;
}

uint64_t type metadata accessor for HomeListFeatureDiscoverySectionController()
{
  return self;
}

double sub_10010BA38@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t static CollectionPickerContaineeViewController.wantsDefaultHeaderContentViews()()
{
  return 1;
}

uint64_t type metadata accessor for HomeListSuggestionsSectionController()
{
  return self;
}

uint64_t type metadata accessor for HomeListRootControllerConfiguration()
{
  return self;
}

uint64_t sub_10010BAC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10010BB20()
{
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  if (static NSObject.== infix(_:_:)()) {
    char v0 = sub_100058F88();
  }
  else {
    char v0 = 0;
  }
  return v0 & 1;
}

ValueMetadata *type metadata accessor for HomeListCuratedCollectionsCellModel()
{
  return &type metadata for HomeListCuratedCollectionsCellModel;
}

unint64_t sub_10010BBA4()
{
  unint64_t result = qword_1015DB0F0;
  if (!qword_1015DB0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB0F0);
  }
  return result;
}

unint64_t sub_10010BBF8()
{
  unint64_t result = qword_1015CE430;
  if (!qword_1015CE430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE430);
  }
  return result;
}

unint64_t sub_10010BC4C()
{
  unint64_t result = qword_1015CE470;
  if (!qword_1015CE470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE470);
  }
  return result;
}

unint64_t sub_10010BCA0(uint64_t a1)
{
  unint64_t result = sub_10010BC4C();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

uint64_t sub_10010BCC8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBB40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D7400);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611258);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10010BD74()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D7400);
  sub_10003D64C(v0, qword_101611258);
  sub_1000F2248(v0, (uint64_t)qword_101611258);
  sub_100100830(0, (unint64_t *)&unk_1015CE480);
  return UICollectionView.CellRegistration.init(handler:)();
}

id sub_10010BE10()
{
  return sub_10005375C(&OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___placeLibraryIdentifierPath);
}

id sub_10010BE34()
{
  return sub_10005375C(&OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesIdentifierPath);
}

id sub_10010BE60@<X0>(void *a1@<X8>)
{
  a1[3] = type metadata accessor for HomeListFavoritesSectionController();
  a1[4] = &off_1012DCD40;
  *a1 = v3;

  return v3;
}

uint64_t sub_10010BEB4(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1015CBDD8 != -1) {
    swift_once();
  }
  if (byte_1016118B0 != 1)
  {
    unint64_t v5 = self;
    id v6 = [v5 fractionalWidthDimension:1.0];
    [self estimatedCellHeight];
    id v7 = [v5 estimatedDimension:];
    id v37 = self;
    id v8 = [v37 sizeWithWidthDimension:v6 heightDimension:v7];

    id v9 = [self itemWithLayoutSize:v8];
    long long v10 = self;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
    *(void *)(v11 + 32) = v9;
    *(void *)&v38[0] = v11;
    specialized Array._endMutation()();
    sub_100100830(0, (unint64_t *)&qword_1015D4330);
    id v12 = v9;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v14 = [v10 verticalGroupWithLayoutSize:v8 subitems:isa];

    id v15 = [self sectionWithGroup:v14];
    sub_1000F1C90((uint64_t)v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v38);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    sub_1000F1BD8((uint64_t)v38);
    if (Strong)
    {
      unint64_t v36 = v12;
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        id v17 = v2;
      }
      else {
        id v17 = 0;
      }
      if (!v17)
      {
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      unint64_t v35 = v14;
      id v18 = v2;
      id v19 = sub_1000F5CB8();
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;
      uint64_t v23 = *(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
      if (v23)
      {
        uint64_t v24 = v20;
        uint64_t v25 = *(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
        sub_1000F71E8(*(void *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot));
        sub_1000F71E8(v23);
        id v26 = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000F517C(v26, v24, v22, 0, v25, v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        memset(v38, 0, 64);

        swift_bridgeObjectRelease();
      }

      if (*(void *)&v38[0])
      {
        sub_1000FF2E0((uint64_t)v38, (uint64_t *)&unk_1015DB0D0);
        id v27 = [v5 fractionalWidthDimension:1.0];
        [self estimatedHeight];
        id v28 = [v5 estimatedDimension];
        id v29 = [v37 sizeWithWidthDimension:v27 heightDimension:v28];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v31 = [self boundarySupplementaryItemWithLayoutSize:v29 elementKind:v30 alignment:1];
        swift_unknownObjectRelease();

        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_100F5DFF0;
        *(void *)(v32 + 32) = v31;
        *(void *)&v38[0] = v32;
        specialized Array._endMutation()();
        sub_100100830(0, (unint64_t *)&unk_1015D14F0);
        id v33 = v31;
        Class v34 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v15 setBoundarySupplementaryItems:v34];
      }
      else
      {
        swift_unknownObjectRelease();
        sub_1000FF2E0((uint64_t)v38, (uint64_t *)&unk_1015DB0D0);
      }
    }
    else
    {
    }
    return (uint64_t)v15;
  }

  return sub_1000F4A4C(a1, 0, 0);
}

ValueMetadata *type metadata accessor for HomeListCollectionHandlerCellModel()
{
  return &type metadata for HomeListCollectionHandlerCellModel;
}

uint64_t sub_10010C4A8()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CE170);
  sub_10003D64C(v0, qword_101611220);
  sub_1000F2248(v0, (uint64_t)qword_101611220);
  sub_100100830(0, &qword_1015CE178);
  return UICollectionView.CellRegistration.init(handler:)();
}

unint64_t sub_10010C58C()
{
  unint64_t result = qword_1015D6E70;
  if (!qword_1015D6E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6E70);
  }
  return result;
}

unint64_t sub_10010C5E0()
{
  unint64_t result = qword_1015D6E68;
  if (!qword_1015D6E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6E68);
  }
  return result;
}

unint64_t sub_10010C634(uint64_t a1)
{
  unint64_t result = sub_10010C5E0();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

uint64_t type metadata accessor for HomeListLibraryCountsDataProvider()
{
  return self;
}

uint64_t sub_10010C728()
{
  return sub_100034478(*(void *)(v0 + 16));
}

ValueMetadata *type metadata accessor for HomeListFeatureDiscoveryCellModel()
{
  return &type metadata for HomeListFeatureDiscoveryCellModel;
}

uint64_t sub_10010C740()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D73E0);
  sub_10003D64C(v0, qword_101611D18);
  sub_1000F2248(v0, (uint64_t)qword_101611D18);
  sub_100100830(0, &qword_1015DAEC0);
  return UICollectionView.CellRegistration.init(handler:)();
}

id sub_10010C7D0@<X0>(void *a1@<X8>)
{
  a1[3] = type metadata accessor for HomeListRecentsSectionController();
  a1[4] = &off_1012E4EA8;
  *a1 = v3;

  return v3;
}

uint64_t sub_10010C824()
{
  uint64_t result = GEOConfigGetUInteger();
  if (result < 0) {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListFavoritesCellModelLegacy()
{
  return &type metadata for HomeListFavoritesCellModelLegacy;
}

uint64_t sub_10010C864(uint64_t a1)
{
  return sub_10003D548(a1, (uint64_t *)&unk_1015D73F0, qword_101611B80);
}

uint64_t type metadata accessor for AirQualityConditionsDataProvider()
{
  return self;
}

void sub_10010C8F4()
{
  sub_100011E04(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10010C8FC()
{
  return sub_100033EC0(*(void *)(v0 + 16));
}

void sub_10010C904()
{
  sub_10000B964();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for NavigationProgressCapturingTask()
{
  uint64_t result = qword_1015DB4E8;
  if (!qword_1015DB4E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10010C9FC()
{
  return type metadata accessor for NavigationProgressCapturingTask();
}

uint64_t type metadata accessor for HomeListFooterSectionController()
{
  return self;
}

uint64_t sub_10010CA28()
{
  sub_1000FF33C(&qword_1015DA320);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CF70;
  sub_100039448((void *)(v0 + 32));
  return v0;
}

void sub_10010CA7C()
{
}

void sub_10010CAA8()
{
}

uint64_t sub_10010CAB0()
{
  return sub_100057F68();
}

uint64_t sub_10010CAB8()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC4Maps30PersonalizedFavoriteItemSource__allItems) = **(void **)(v0 + 24);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

void sub_10010CB04()
{
}

unint64_t sub_10010CB10()
{
  unint64_t result = qword_1015D64A0;
  if (!qword_1015D64A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D64A0);
  }
  return result;
}

unint64_t sub_10010CB64()
{
  unint64_t result = qword_1015D64C8;
  if (!qword_1015D64C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D64C8);
  }
  return result;
}

unint64_t sub_10010CBB8(uint64_t a1)
{
  unint64_t result = sub_10010CB64();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

unint64_t sub_10010CBE0()
{
  unint64_t result = qword_1015D6F68;
  if (!qword_1015D6F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6F68);
  }
  return result;
}

void *sub_10010CC34()
{
  return sub_1001011E0(*v0);
}

void *sub_10010CC3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  id v3 = _swiftEmptyArrayStorage;
  do
  {
    sub_1000FF4D4(v2, (uint64_t)v19);
    sub_1000FF4D4((uint64_t)v19, (uint64_t)&v11);
    sub_1000FF33C(&qword_1015D2AD0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      long long v17 = 0u;
      long long v18 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
    }
    sub_1000FF22C((uint64_t)v19);
    if ((void)v15)
    {
      long long v11 = v15;
      long long v12 = v16;
      long long v13 = v17;
      long long v14 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v3 = sub_1000FA578(0, v3[2] + 1, 1, v3);
      }
      unint64_t v5 = v3[2];
      unint64_t v4 = v3[3];
      if (v5 >= v4 >> 1) {
        id v3 = sub_1000FA578((void *)(v4 > 1), v5 + 1, 1, v3);
      }
      v3[2] = v5 + 1;
      id v6 = &v3[8 * v5];
      long long v7 = v11;
      long long v8 = v12;
      long long v9 = v14;
      void v6[4] = v13;
      void v6[5] = v9;
      uint64_t v6[2] = v7;
      v6[3] = v8;
    }
    else
    {
      sub_1000FF2E0((uint64_t)&v15, (uint64_t *)&unk_1015DB0D0);
    }
    v2 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t type metadata accessor for WeatherConditionsDataProvider()
{
  return self;
}

void sub_10010CE38()
{
  sub_10000BCB8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10010CE40()
{
  return sub_100035D08(*(void *)(v0 + 16));
}

uint64_t sub_10010CE50(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10010CEAC(uint64_t a1, uint64_t a2)
{
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return sub_1000590FC(a1 + 8, a2 + 8, v4);
}

ValueMetadata *type metadata accessor for HomeListFavoritesCellModel()
{
  return &type metadata for HomeListFavoritesCellModel;
}

unint64_t sub_10010CF48()
{
  unint64_t result = qword_1015D4370;
  if (!qword_1015D4370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4370);
  }
  return result;
}

unint64_t sub_10010CF9C()
{
  unint64_t result = qword_1015D9998;
  if (!qword_1015D9998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9998);
  }
  return result;
}

unint64_t sub_10010CFF0()
{
  unint64_t result = qword_1015D99D8;
  if (!qword_1015D99D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D99D8);
  }
  return result;
}

unint64_t sub_10010D044(uint64_t a1)
{
  unint64_t result = sub_10010CFF0();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

uint64_t sub_10010D06C@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1000FF33C(a2);
  uint64_t v8 = sub_1000F2248(v7, a3);
  long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10010D10C@<X0>(uint64_t a1@<X8>)
{
  return sub_10010D06C(&qword_1015CBEF0, &qword_1015D99E0, (uint64_t)qword_101611B68, a1);
}

uint64_t sub_10010D138(uint64_t a1)
{
  return sub_10003D548(a1, &qword_1015D99E0, qword_101611B68);
}

uint64_t sub_10010D168(void *a1, uint64_t a2, void *a3)
{
  return sub_10002138C(a1, a2, a3, (SEL *)&selRef_setFavoritesDataProvider_);
}

uint64_t sub_10010D174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

ValueMetadata *type metadata accessor for HomeListTwoLinesCellModel()
{
  return &type metadata for HomeListTwoLinesCellModel;
}

uint64_t sub_10010D18C()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D67E0);
  sub_10003D64C(v0, qword_101611848);
  sub_1000F2248(v0, (uint64_t)qword_101611848);
  sub_100100830(0, &qword_1015D67E8);
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t type metadata accessor for FavoriteCollectionHandler()
{
  return self;
}

uint64_t sub_10010D268()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + _Block_object_dispose(&STACK[0x358], 8) = sub_100105268;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_10000A9EC, 0, 0);
}

uint64_t type metadata accessor for PersonalizedFavoriteItem()
{
  return self;
}

uint64_t sub_10010D35C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_100105268;
  v3[7] = v2;
  return _swift_task_switch(sub_1000363B0, 0, 0);
}

uint64_t sub_10010D408(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10001C428, 0, 0);
}

uint64_t sub_10010D508(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005056C;
  return sub_100008108(a1, v4, v5, v6);
}

uint64_t sub_10010D5BC()
{
  if (qword_1015CBCD8 != -1) {
    swift_once();
  }
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_1015D5E60 + dword_1015D5E60);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000088E4;
  return v3(1);
}

uint64_t sub_10010D690(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 8_Block_object_dispose(&STACK[0x358], 8) = a1;
  *(void *)(v3 + 96) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1002FEF2C;
  }
  else {
    uint64_t v4 = sub_100034CA4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t storeEnumTagSinglePayload for HomeListOneLineCellModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + _Block_object_dispose(&STACK[0x358], 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HomeListOneLineCellModel(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for HomeListOneLineCellModel()
{
  return &type metadata for HomeListOneLineCellModel;
}

unint64_t sub_10010D8F0()
{
  unint64_t result = qword_1015D4340;
  if (!qword_1015D4340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4340);
  }
  return result;
}

unint64_t sub_10010D944()
{
  unint64_t result = qword_1015DB5C8;
  if (!qword_1015DB5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB5C8);
  }
  return result;
}

unint64_t sub_10010D998()
{
  unint64_t result = qword_1015DB608;
  if (!qword_1015DB608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB608);
  }
  return result;
}

unint64_t sub_10010D9EC(uint64_t a1)
{
  unint64_t result = sub_10010D998();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

uint64_t sub_10010DA14@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CC010 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D73E8);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611DC0);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10010DAC0()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D73E8);
  sub_10003D64C(v0, qword_101611DC0);
  sub_1000F2248(v0, (uint64_t)qword_101611DC0);
  sub_100008038();
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t type metadata accessor for RedoSearchChromeOverlay()
{
  return self;
}

void sub_10010DB88(char a1, char a2)
{
  char v3 = a1 & 1;
  uint64_t v4 = OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden) != (a1 & 1))
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden) = v3;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_isHidden) = v3;
    uint64_t v5 = OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController;
    uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController);
    if (v6)
    {
      id v8 = [v6 view];
      if (v8)
      {
        uint64_t v9 = v8;
        long long v10 = *(void **)(v2 + v5);
        if (v10)
        {
          id v11 = [v10 view];
          if (v11)
          {
            long long v12 = v11;
            double v13 = 0.0;
            if ((*(unsigned char *)(v2 + v4) & 1) == 0) {
              double v13 = *(double *)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayAlpha);
            }
            [v11 setAlpha:v13];
          }
        }
        id v14 = [objc_allocWithZone((Class)GroupAnimation) init];
        [v14 setAnimated:a2 & 1];
        [v14 setDuration:0.3];
        [v14 setOptions:4];
        uint64_t v15 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v15;
        *(unsigned char *)(v16 + 24) = v3;
        *(void *)(v16 + 32) = v9;
        id v29 = sub_1001452EC;
        uint64_t v30 = v16;
        uint64_t v25 = _NSConcreteStackBlock;
        uint64_t v26 = 1107296256;
        id v27 = sub_10008C380;
        id v28 = &unk_1012DA460;
        long long v17 = _Block_copy(&v25);
        id v18 = v9;
        swift_release();
        [v14 addPreparation:v17];
        _Block_release(v17);
        uint64_t v19 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v29 = sub_1001452FC;
        uint64_t v30 = v19;
        uint64_t v25 = _NSConcreteStackBlock;
        uint64_t v26 = 1107296256;
        id v27 = sub_10008C380;
        id v28 = &unk_1012DA488;
        uint64_t v20 = _Block_copy(&v25);
        swift_release();
        [v14 addAnimations:v20];
        _Block_release(v20);
        uint64_t v21 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v21;
        *(void *)(v22 + 24) = v18;
        id v29 = sub_100145344;
        uint64_t v30 = v22;
        uint64_t v25 = _NSConcreteStackBlock;
        uint64_t v26 = 1107296256;
        id v27 = sub_100316A88;
        id v28 = &unk_1012DA4D8;
        uint64_t v23 = _Block_copy(&v25);
        id v24 = v18;
        swift_release();
        [v14 addCompletion:v23];
        _Block_release(v23);
        [v14 runWithCurrentOptions];
      }
    }
  }
}

void sub_10010DF84()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_constraints);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (*v1)
  {
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v3)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    uint64_t v4 = self;
    sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 deactivateConstraints:isa];

    uint64_t v7 = sub_100144CE4();
    if (*v6)
    {
      *uint64_t v6 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
    }
    ((void (*)(unsigned char *, void))v7)(v8, 0);
    *uint64_t v1 = 0;
    goto LABEL_9;
  }
LABEL_10:
  sub_10005C400();
}

unint64_t sub_10010E0CC()
{
  unint64_t result = qword_1015D6E50;
  if (!qword_1015D6E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6E50);
  }
  return result;
}

unint64_t sub_10010E120()
{
  unint64_t result = qword_1015D6E60;
  if (!qword_1015D6E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6E60);
  }
  return result;
}

unint64_t sub_10010E174(uint64_t a1)
{
  unint64_t result = sub_10010E120();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

uint64_t sub_10010E19C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10010E1F8(double *a1, double *a2)
{
  if (*a1 == *a2) {
    return sub_1000590FC(a1 + 1, a2 + 1, *a1);
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for HomeListFooterCellModel()
{
  return &type metadata for HomeListFooterCellModel;
}

unint64_t sub_10010E230()
{
  unint64_t result = qword_1015DA330;
  if (!qword_1015DA330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA330);
  }
  return result;
}

unint64_t sub_10010E284()
{
  unint64_t result = qword_1015D9B30;
  if (!qword_1015D9B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9B30);
  }
  return result;
}

unint64_t sub_10010E2D8()
{
  unint64_t result = qword_1015D9B70;
  if (!qword_1015D9B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9B70);
  }
  return result;
}

unint64_t sub_10010E32C(uint64_t a1)
{
  unint64_t result = sub_10010E2D8();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

uint64_t sub_10010E354()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D7408);
  sub_10003D64C(v0, qword_101611BC0);
  sub_1000F2248(v0, (uint64_t)qword_101611BC0);
  sub_10000B250();
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t type metadata accessor for HomeListRootController()
{
  uint64_t result = qword_1015D7130;
  if (!qword_1015D7130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10010E420()
{
  return type metadata accessor for HomeListRootController();
}

id sub_10010E488()
{
  return [*(id *)(*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration)+ OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView) setAlpha:*(double *)(v0 + 24)];
}

uint64_t storeEnumTagSinglePayload for HomeListCellSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + ++*(void *)(*((void *)result + 4) + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x358], 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x358], 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10010E570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D68C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010E5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D68C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10010E644()
{
  unint64_t result = qword_1015D6E40;
  if (!qword_1015D6E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6E40);
  }
  return result;
}

unint64_t sub_10010E698()
{
  unint64_t result = qword_1015D6E78;
  if (!qword_1015D6E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D6E78);
  }
  return result;
}

unint64_t sub_10010E6EC(uint64_t a1)
{
  unint64_t result = sub_10010E698();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

uint64_t sub_10010E714()
{
  uint64_t result = MapsFeature_IsEnabled_MyPlacesFeatures();
  byte_1016118B0 = result;
  return result;
}

uint64_t sub_10010E738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D4360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010E7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015DA328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *sub_10010E808(unsigned char *result)
{
  *uint64_t result = **(unsigned char **)(v1 + 16);
  return result;
}

uint64_t type metadata accessor for MapsHomeQuickActionMenuPresenter()
{
  return self;
}

uint64_t sub_10010E880(char a1)
{
  *(unsigned char *)(v1 + 56) = a1;
  return _swift_task_switch(sub_100045FA0, 0, 0);
}

uint64_t sub_10010E8B8()
{
  *(void *)(v1 + 200) = v0;
  sub_1000FF33C(&qword_1015CD250);
  *(void *)(v1 + 20_Block_object_dispose(&STACK[0x358], 8) = swift_task_alloc();
  return _swift_task_switch(sub_10004B7E8, 0, 0);
}

uint64_t sub_10010E94C()
{
  *(void *)(*(void *)v1 + ++*(void *)(*((void *)result + 4) + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_100224B74;
  }
  else {
    unint64_t v2 = sub_1000274B4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10010EA60()
{
  return sub_100024958((uint64_t)&unk_1012DE650, (uint64_t)&unk_1012DE678, (uint64_t)&unk_1015D5DF8);
}

uint64_t sub_10010EA9C()
{
  return sub_100025A6C(*(char **)(v0 + 16));
}

uint64_t sub_10010EAA4(uint64_t a1, uint64_t a2)
{
  return sub_10010EACC(a1, a2, (uint64_t *)&unk_1015D5DB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10001228C);
}

void sub_10010EAC4(uint64_t a1)
{
  sub_10002C618(a1, *(void **)(v1 + 16));
}

uint64_t sub_10010EACC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_1000FF33C(a3) - 8);
  uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a4(a1, a2, v8);
}

uint64_t sub_10010EB60()
{
  uint64_t result = GEOConfigGetDouble();
  qword_101611628 = v1;
  return result;
}

uint64_t sub_10010EB90()
{
  uint64_t result = GEOConfigGetDouble();
  qword_101611640 = v1;
  return result;
}

uint64_t sub_10010EBC0()
{
  uint64_t result = GEOConfigGetBOOL();
  byte_101611638 = result;
  return result;
}

uint64_t sub_10010EBF0()
{
  uint64_t result = GEOConfigGetDouble();
  qword_101611630 = v1;
  return result;
}

uint64_t sub_10010EC20()
{
  uint64_t result = GEOConfigGetDouble();
  qword_101611648 = v1;
  return result;
}

uint64_t sub_10010EC50()
{
  uint64_t result = GEOConfigGetDouble();
  qword_101611620 = v1;
  return result;
}

uint64_t sub_10010EC80()
{
  uint64_t result = GEOConfigGetInteger();
  qword_1016115F8 = result;
  return result;
}

uint64_t sub_10010ECB0(void *a1, uint64_t a2)
{
  sub_1000FF33C(&qword_1015DC448);

  return sub_10000D5B8(a1, a2);
}

void sub_10010ED34(uint64_t a1)
{
  sub_10001A94C(a1, *(void **)(v1 + 16));
}

uint64_t sub_10010ED54(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_101611778);
}

uint64_t sub_10010ED80(uint64_t a1)
{
  return sub_10003D5CC(a1, qword_101611748);
}

id sub_1001147D8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult);
  if (!v1) {
    goto LABEL_11;
  }
  id v2 = v1;
  if (![v2 isSuccess]) {
    goto LABEL_9;
  }
  if ([v2 value])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)double v13 = 0u;
    long long v14 = 0u;
  }
  sub_10011896C((uint64_t)v13, (uint64_t)v15);
  if (v16)
  {
    sub_100118A34();
    if (swift_dynamicCast())
    {
      [v12 copy];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      swift_dynamicCast();
      id v3 = v13[0];
      [v13[0] clearFindMyData];
      id v4 = [objc_allocWithZone((Class)MKMapItem) initWithGeoMapItem:[v3 geoMapItem] isPlaceHolderPlace:0];

      swift_unknownObjectRelease();
      return v4;
    }
LABEL_9:

    goto LABEL_11;
  }

  sub_1001189D4((uint64_t)v15);
LABEL_11:
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_location);
  if (!v5) {
    return 0;
  }
  id v6 = v5;
  [v6 coordinate];
  double v8 = v7;
  [v6 coordinate];
  id v10 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v8 longitude:v9];
  id v4 = [objc_allocWithZone((Class)MKMapItem) initWithCLLocation:v10];

  return v4;
}

uint64_t sub_100114A28(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = type metadata accessor for Handle();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  double v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v19 - v9;
  if ([a1 isKindOfClass:swift_getObjCClassFromMetadata()])
  {
    uint64_t v11 = swift_dynamicCastClassUnconditional();
    uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_handle);
    double v13 = *(char **)(v11 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_handle);
    long long v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, v12 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v4);
    v14(v8, (uint64_t)&v13[OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle], v4);
    swift_unknownObjectRetain();
    uint64_t v15 = v13;
    char v16 = static Handle.== infix(_:_:)();
    long long v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
    swift_unknownObjectRelease();
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

void sub_100114C60(void *a1, uint64_t a2, void (*a3)(id))
{
  id v5 = [a1 error];
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = v5;
  swift_getErrorValue();
  if (sub_100114DEC(v18) == qword_1015D44B0 && v7 == off_1015D44B8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_10;
    }
  }
  swift_getErrorValue();
  if (sub_100114F6C(v17))
  {
LABEL_10:

LABEL_11:
    id v10 = a1;
    goto LABEL_12;
  }
  id MyHandleWaypointRequest = FindMyHandleWaypointRequestError.NSError.getter();
  char v16 = (void *)_convertErrorToNSError(_:)();
  id v10 = [self resultWithError:v16];

LABEL_12:
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    double v13 = *(void **)(Strong + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult);
    *(void *)(Strong + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult) = v10;
    id v14 = v10;
  }
  a3(v10);
}

uint64_t sub_100114DEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  uint64_t v7 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v8 = [v7 domain];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v9;
}

id sub_100114F6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  uint64_t v7 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v8 = [v7 code];

  return v8;
}

id FindMyHandleWaypointRequestError.NSError.getter()
{
  sub_10011533C();
  if (!_getErrorEmbeddedNSError<A>(_:)()) {
    swift_allocError();
  }
  uint64_t v0 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v1 = [v0 domain];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!_getErrorEmbeddedNSError<A>(_:)()) {
    swift_allocError();
  }
  uint64_t v2 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v3 = [v2 code];

  sub_1000FF33C(&qword_1015CC060);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + ++*(void *)(*((void *)result + 4) + 40) = v5;
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v14._countAndFlagsBits = 0xD000000000000031;
  v14._object = (void *)0x8000000100F74330;
  v6._object = (void *)0x8000000100F742B0;
  v7._object = (void *)0x8000000100F742E0;
  v6._countAndFlagsBits = 0xD000000000000022;
  v7._countAndFlagsBits = 0x1000000000000049;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)qword_101611820, v7, v14);
  *(void *)(inited + 72) = &type metadata for String;
  *(Swift::String *)(inited + 4_Block_object_dispose(&STACK[0x358], 8) = v8;
  sub_1001160B4(inited);
  id v9 = objc_allocWithZone((Class)NSError);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v9 initWithDomain:v10 code:v3 userInfo:isa];

  return v12;
}

unint64_t sub_10011533C()
{
  unint64_t result = qword_1015CC058;
  if (!qword_1015CC058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CC058);
  }
  return result;
}

uint64_t sub_100115504(void *a1)
{
  sub_10023F13C();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 setSearchString:v3];

  uint64_t result = (uint64_t)[a1 setOrigin:3];
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult);
  if (v5)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_1001186F8;
    *(void *)(v7 + 24) = v6;
    uint64_t v17 = sub_100118710;
    uint64_t v18 = v7;
    double v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    uint64_t v15 = sub_100115828;
    char v16 = &unk_1012D86B8;
    Swift::String v8 = _Block_copy(&v13);
    id v9 = v5;
    id v10 = a1;
    swift_retain();
    swift_release();
    uint64_t v17 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
    uint64_t v18 = 0;
    double v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    uint64_t v15 = sub_100115874;
    char v16 = &unk_1012D86E0;
    uint64_t v11 = _Block_copy(&v13);
    swift_release();
    [v9 withValue:v8 orError:v11];
    _Block_release(v8);

    _Block_release(v11);
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if (result)
    {
      __break(1u);
    }
    else
    {
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      uint64_t result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_100115768(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone((Class)GEOLatLng) init];
  if (v5)
  {
    [a1 coordinate];
    [v5 setLat:];
    [a1 coordinate];
    [v5 setLng:v4];
    [a2 setCoordinate:v5];
  }
  else
  {
    __break(1u);
  }
}

void sub_100115828(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_100115874(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_100115928(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_handle);
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_location);
  uint64_t v7 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v7[OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_handle] = v5;
  if (v6)
  {
    id v8 = v5;
    id v9 = v6;
    id v10 = v8;
    id v11 = v9;
    id v12 = v7;
    [v11 coordinate];
    if (!CLLocationCoordinate2DIsValid(v20))
    {

      uint64_t v6 = 0;
    }
  }
  else
  {
    id v13 = v5;
    uint64_t v14 = v7;
    id v11 = 0;
  }
  *(void *)&v7[OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_location] = v6;

  v19.unint64_t receiver = v7;
  v19.Class super_class = ObjectType;
  uint64_t v15 = (char *)[super init];

  char v16 = *(void **)(v2 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult);
  uint64_t v17 = *(void **)&v15[OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult];
  *(void *)&v15[OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult] = v16;
  id v18 = v16;

  a1[3] = ObjectType;
  *a1 = v15;
}

id sub_100115AB8(double a1)
{
  uint64_t v3 = type metadata accessor for Handle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_handle);
  id v8 = sub_10023F6AC();
  if (v8)
  {
    id v9 = v8;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v3);
    Handle.identifier.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = [self contactWithDisplayName:0 emailOrPhoneNumber:v10];
  }
  id v11 = [v9 avatarImageWithSize:0 scale:128.0 rightToLeft:128.0];

  return v11;
}

id CollectionPickerContaineeViewController.__deallocating_deinit()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  [super dealloc];
}

void FindMyHandleWaypointRequestError.hash(into:)()
{
}

Swift::Int FindMyHandleWaypointRequestError.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_100116060()
{
  return Hasher._finalize()();
}

unint64_t sub_1001160B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CD318);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000FF27C(v6, (uint64_t)&v15, &qword_1015CD320);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100103580(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v11 = (uint64_t *)(v3[6] + 16 * result);
    *id v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1000EFD84(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001161EC(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015CD290);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CD298);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000FF27C(v12, (uint64_t)v5, &qword_1015CD290);
    char v14 = *v5;
    unint64_t result = sub_1001EA714(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001163E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CD110);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000FF27C(v6, (uint64_t)&v13, &qword_1015CD118);
    uint64_t v7 = v13;
    unint64_t result = sub_1001EA7BC(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1000EFD84(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100116514(uint64_t a1)
{
  return sub_100116564(a1, &qword_1015CD280, &qword_1015CD288, (uint64_t (*)(void))sub_1001EA8BC);
}

unint64_t sub_10011653C(uint64_t a1)
{
  return sub_100116564(a1, &qword_1015CD270, &qword_1015CD278, (uint64_t (*)(void))sub_1001EAAB4);
}

unint64_t sub_100116564(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  id v29 = a4;
  uint64_t v7 = sub_1000FF33C(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(a3);
  uint64_t v11 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  long long v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1000FF27C(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    _OWORD v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100116760(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CD460);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100103580(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100116874(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CCCC8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 3);
    uint64_t v6 = (uint64_t)*(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    id v8 = *v4;
    id v9 = *v4;
    swift_bridgeObjectRetain();
    id v10 = v7;
    unint64_t result = sub_100103580(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    long long v14 = (void *)(v2[7] + 16 * result);
    *long long v14 = v10;
    v14[1] = v8;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10011699C(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015CCCB8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CCCC0);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000FF27C(v12, (uint64_t)v5, &qword_1015CCCB8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100103580(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v19 = (uint64_t *)(v7[6] + 16 * result);
    *char v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for Handle();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100116B9C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015CCCB0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_100103580(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t variable initialization expression of CuratedCollectionItemLibraryCoordinator.placeItemInLibrary()
{
  return 0;
}

uint64_t variable initialization expression of CarPlaceCardEVChargingViewModel.summaryTitle()
{
  return 0;
}

id variable initialization expression of PlaceCardLibraryOperationsCoordinator.savedStateObservers()
{
  id v0 = objc_allocWithZone((Class)GEOObserverHashTable);

  return [v0 initWithProtocol:&OBJC_PROTOCOL___MULibraryAccessProviderObserver queue:0];
}

id variable initialization expression of PlaceCardLibraryOperationsCoordinator.dataOperationsProvider()
{
  type metadata accessor for MapsSyncStore();
  uint64_t v0 = static MapsSyncStore.sharedStore.getter();
  uint64_t v1 = (objc_class *)type metadata accessor for LibraryDataOperationsProvider();
  uint64_t v2 = (char *)objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = v0;
  v4.unint64_t receiver = v2;
  v4.Class super_class = v1;
  return [super init];
}

uint64_t variable initialization expression of PlaceCardLibraryOperationsCoordinator.storeSubscriptionTypes()
{
  sub_100028D98();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CF80;
  *(void *)(v0 + 32) = type metadata accessor for FavoriteItem();
  *(void *)(v0 + ++*(void *)(*((void *)result + 4) + 40) = type metadata accessor for CollectionPlaceItem();
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x358], 8) = type metadata accessor for Collection();
  return v0;
}

void *variable initialization expression of PlaceCardCollectionMembershipProvider.containingCollectionIDs()
{
  return &_swiftEmptySetSingleton;
}

double variable initialization expression of PlaceNoteEditViewController.defaultPadding()
{
  return 16.0;
}

id variable initialization expression of UserProfileLinkLibraryProvider.observers()
{
  id v0 = objc_allocWithZone((Class)GEOObserverHashTable);

  return [v0 initWithProtocol:&OBJC_PROTOCOL___UserProfileLinkDataProvidingObserver queue:0];
}

uint64_t variable initialization expression of UserProfileLinkLibraryProvider.lastTotalCount()
{
  return 0;
}

uint64_t variable initialization expression of LibraryRecentsDataProvider.storeSubscriptionTypes()
{
  sub_100028D98();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CF90;
  *(void *)(v0 + 32) = type metadata accessor for FavoriteItem();
  *(void *)(v0 + ++*(void *)(*((void *)result + 4) + 40) = type metadata accessor for CollectionPlaceItem();
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x358], 8) = type metadata accessor for Collection();
  *(void *)(v0 + 56) = type metadata accessor for CachedCuratedCollection();
  *(void *)(v0 + 64) = type metadata accessor for UserRoute();
  *(void *)(v0 + 72) = type metadata accessor for CuratedCollection();
  return v0;
}

uint64_t variable initialization expression of LibraryPlacesViewController.sortType()
{
  return 2;
}

id variable initialization expression of LibraryPlacesViewController.countsManager()
{
  if (qword_1015CBF98 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static LibraryItemsCountManager.shared;

  return v0;
}

uint64_t variable initialization expression of LibraryPlacesViewController.placesTitle()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v3._countAndFlagsBits = 0xD000000000000024;
  v3._object = (void *)0x8000000100F74390;
  v0._object = (void *)0x8000000100F74370;
  v0._countAndFlagsBits = 0xD000000000000014;
  v1._countAndFlagsBits = 0x736563616C50;
  v1._object = (void *)0xE600000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v3)._countAndFlagsBits;
}

id variable initialization expression of LibraryItemsCountManager.observers()
{
  id v0 = objc_allocWithZone((Class)GEOObserverHashTable);

  return [v0 initWithProtocol:&OBJC_PROTOCOL____TtP4Maps32LibraryItemsCountManagerObserver_ queue:0];
}

uint64_t variable initialization expression of LibraryItemsCountManager.storeSubscriptionTypes()
{
  return sub_100117108((uint64_t (*)(void))&type metadata accessor for FavoriteItem);
}

uint64_t variable initialization expression of LibraryPlacesDataProvider.storeSubscriptionTypes()
{
  sub_100028D98();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CFA0;
  *(void *)(v0 + 32) = type metadata accessor for FavoriteItem();
  *(void *)(v0 + ++*(void *)(*((void *)result + 4) + 40) = type metadata accessor for CollectionPlaceItem();
  return v0;
}

uint64_t variable initialization expression of FavoriteCollectionHandler.storeSubscriptionTypes()
{
  return sub_100117108((uint64_t (*)(void))&type metadata accessor for CollectionPlaceItem);
}

uint64_t sub_100117108(uint64_t (*a1)(void))
{
  sub_100028D98();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5CF70;
  *(void *)(v2 + 32) = a1(0);
  return v2;
}

void sub_10011716C(void *a1@<X8>)
{
  *a1 = *v1;
}

NSNumber sub_100117178()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_100117180(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Float._forceBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return result;
}

uint64_t sub_1001171D4(uint64_t a1, uint64_t a2)
{
  char v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_10011722C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = static Float._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

BOOL sub_100117254(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_100117268(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10011727C(uint64_t a1, uint64_t a2)
{
  return sub_1001173FC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10011729C(uint64_t a1, uint64_t a2)
{
  return sub_1001173FC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1001172C0(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_100117338(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1001173B8@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1001173FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100117440()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100117494()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

Swift::Int sub_100117508()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100117550()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10011757C()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void *sub_1001175C0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x358], 8) = 0;
  return result;
}

void sub_1001175D0(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1001175D8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1001175EC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_100117600@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x358], 8) = v3 == 0;
  return result;
}

uint64_t *sub_10011762C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x358], 8) = v5 == 0;
  return result;
}

void *sub_100117650(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_100117664@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100117678(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10011768C()
{
  return *v0 == 0;
}

uint64_t sub_10011769C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_1001176B4(void *result)
{
  *v1 &= ~*result;
  return result;
}

void sub_1001176C8(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1001176D4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1001176E8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_100117718(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10011772C(void *result)
{
  *v1 &= *result;
  return result;
}

void sub_100117744()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100117774()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_1001177BC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_100117804()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_100117890(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1001178A4(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_1001178B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_100118688(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_1001178F8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_100117904@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_100117914@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_100117920()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_1001179E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100117A0C()
{
  sub_1001184B8((unint64_t *)&qword_1015CD430, type metadata accessor for NSKeyValueChangeKey);
  sub_1001184B8(&qword_1015CD438, type metadata accessor for NSKeyValueChangeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100117AC8@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100117B10()
{
  sub_1001184B8((unint64_t *)&qword_1015CD440, type metadata accessor for Key);
  sub_1001184B8(&qword_1015CD448, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100117BCC()
{
  return Float.hashValue.getter(*v0);
}

void sub_100117BD4()
{
  if ((*v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_100117C08(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFF) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

BOOL sub_100117C1C(float *a1, float *a2)
{
  return *a1 == *a2;
}

id sub_100117C30(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_cachedLoadResult] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_handle] = a1;
  if (a2)
  {
    uint64_t v6 = v2;
    id v7 = a1;
    id v8 = a2;
    [v8 coordinate];
    if (!CLLocationCoordinate2DIsValid(v13))
    {

      a2 = 0;
    }
  }
  else
  {
    id v9 = v2;
    id v10 = a1;
  }
  *(void *)&v2[OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_location] = a2;

  v12.unint64_t receiver = v2;
  v12.Class super_class = ObjectType;
  return [super init];
}

id sub_100117CE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v42 = a4;
  uint64_t v43 = a5;
  uint64_t v41 = a3;
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v7 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v7 - 8);
  unint64_t v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Handle();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  objc_super v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  CLLocationCoordinate2D v13 = *(void **)(v5 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_location);
  if (v13)
  {
    id v14 = v13;
    [v14 coordinate];
    unint64_t v16 = v15;
    [v14 coordinate];
    unint64_t v18 = v17;

    unint64_t v19 = v16;
    unint64_t v20 = v18;
  }
  else
  {
    unint64_t v20 = 0xC066800000000000;
    unint64_t v19 = 0xC066800000000000;
  }
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v21(v12, *(void *)(v6 + OBJC_IVAR____TtC4Maps27FindMyHandleWaypointRequest_handle)+ OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v9);
  MyHandleMapServiceTicket = (objc_class *)type metadata accessor for FindMyHandleMapServiceTicket();
  BOOL v23 = objc_allocWithZone(MyHandleMapServiceTicket);
  *(void *)&v23[OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket] = 0;
  v23[OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_isCancelled] = 0;
  v21(&v23[OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_handle], (uint64_t)v12, v9);
  uint64_t v24 = &v23[OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_coordinate];
  *(void *)uint64_t v24 = v19;
  *((void *)v24 + 1) = v20;
  v24[16] = 0;
  v44.unint64_t receiver = v23;
  v44.Class super_class = MyHandleMapServiceTicket;
  [super init];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v38;
  v27[2] = v26;
  v27[3] = v28;
  v27[4] = v41;
  uint64_t v29 = type metadata accessor for TaskPriority();
  uint64_t v30 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v40, 1, 1, v29);
  id v31 = (void *)swift_allocObject();
  _OWORD v31[2] = 0;
  v31[3] = 0;
  uint64_t v32 = v39;
  void v31[4] = v25;
  v31[5] = v32;
  v31[6] = sub_100118814;
  v31[7] = v27;
  uint64_t v34 = v42;
  uint64_t v33 = v43;
  v31[8] = v42;
  v31[9] = v33;
  id v35 = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  id v36 = v25;
  sub_1000F4F24(v34);
  sub_100042AF4(v30, (uint64_t)&unk_1015CD258, (uint64_t)v31);
  swift_release();
  swift_release();
  swift_release();
  return v36;
}

uint64_t _s4Maps32FindMyHandleWaypointRequestErrorO16errorDescriptionSSSgvg_0()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v3._countAndFlagsBits = 0xD000000000000031;
  v3._object = (void *)0x8000000100F74330;
  v0._object = (void *)0x8000000100F742B0;
  v1._object = (void *)0x8000000100F742E0;
  v0._countAndFlagsBits = 0xD000000000000022;
  v1._countAndFlagsBits = 0x1000000000000049;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v3)._countAndFlagsBits;
}

unint64_t sub_100118120()
{
  unint64_t result = qword_1015CC128;
  if (!qword_1015CC128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CC128);
  }
  return result;
}

uint64_t type metadata accessor for FindMyHandleWaypointRequest()
{
  return self;
}

uint64_t getEnumTagSinglePayload for FindMyHandleWaypointRequestError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for FindMyHandleWaypointRequestError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100118290);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyHandleWaypointRequestError()
{
  return &type metadata for FindMyHandleWaypointRequestError;
}

void type metadata accessor for GEOTransportTypePreference(uint64_t a1)
{
}

void type metadata accessor for GEOAPAnalyticSessionType(uint64_t a1)
{
}

void type metadata accessor for PlaceCardViewControllerExcludedContent(uint64_t a1)
{
}

void type metadata accessor for MULibraryPlaceSavedState(uint64_t a1)
{
}

void type metadata accessor for ViewMode(uint64_t a1)
{
}

void type metadata accessor for MapsSuggestionsShortcutType(uint64_t a1)
{
}

void type metadata accessor for PersonalizedItemSourceSubtype(uint64_t a1)
{
}

__n128 initializeWithTake for PlaceSummaryUnitSecondaryName(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for PersonalizedItemPriority(uint64_t a1)
{
}

void type metadata accessor for GEOLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for GEOMapType(uint64_t a1)
{
}

void type metadata accessor for CardButtonType(uint64_t a1)
{
}

void type metadata accessor for GEOEVChargerAvailability_RealTimeStatus(uint64_t a1)
{
}

void type metadata accessor for CarNavigationGuidanceSignStyle(uint64_t a1)
{
}

void type metadata accessor for MNInstructionsGuidanceLevel(uint64_t a1)
{
}

void type metadata accessor for ContainerStyle(uint64_t a1)
{
}

void type metadata accessor for SearchHomeDataProviderType(uint64_t a1)
{
}

uint64_t sub_100118428()
{
  return sub_1001184B8(&qword_1015CC9D8, type metadata accessor for PlaceCardViewControllerExcludedContent);
}

uint64_t sub_100118470()
{
  return sub_1001184B8(&qword_1015CC9E0, type metadata accessor for PlaceCardViewControllerExcludedContent);
}

uint64_t sub_1001184B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100118500()
{
  return sub_1001184B8(&qword_1015CC9E8, type metadata accessor for PlaceCardViewControllerExcludedContent);
}

uint64_t sub_100118548()
{
  return sub_1001184B8(&qword_1015CC9F0, type metadata accessor for PlaceCardViewControllerExcludedContent);
}

unint64_t sub_100118590(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1000FF33C(&qword_1015CCC48);
  int v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  unint64_t result = sub_1001EA66C(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  uint64_t v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    CLLocationCoordinate2D v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    id v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_1001EA66C(v4);
    uint64_t v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100118688(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1001186C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001186F8(void *a1)
{
  sub_100115768(a1, *(void **)(v1 + 16));
}

uint64_t sub_100118700()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100118710()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100118738()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100118770()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100118784(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_10011879C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001187D4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100118814(void *a1)
{
  sub_100114C60(a1, *(void *)(v1 + 16), *(void (**)(id))(v1 + 24));
}

uint64_t sub_100118820()
{
  swift_unknownObjectRelease();

  swift_release();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100118880(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  BOOL v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *BOOL v11 = v2;
  v11[1] = sub_10005056C;
  return sub_1001D77BC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10011896C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015CD260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001189D4(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015CD260);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100118A34()
{
  unint64_t result = qword_1015D1C60;
  if (!qword_1015D1C60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D1C60);
  }
  return result;
}

void type metadata accessor for GEOEVChargerPlugConnectorType(uint64_t a1)
{
}

void type metadata accessor for FeedbackUploadPolicy(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

uint64_t sub_100118AD8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100118AF8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for GEOUITarget(uint64_t a1)
{
}

void type metadata accessor for GEOMapItemPlaceType(uint64_t a1)
{
}

uint64_t sub_100118B88()
{
  return sub_1001184B8(&qword_1015CD3E0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100118BD0()
{
  return sub_1001184B8(&qword_1015CD3E8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100118C18()
{
  return sub_1001184B8(&qword_1015CD3F0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100118C60()
{
  return sub_1001184B8(&qword_1015CD3F8, type metadata accessor for Key);
}

uint64_t sub_100118CA8()
{
  return sub_1001184B8(&qword_1015CD400, type metadata accessor for Key);
}

uint64_t sub_100118CF0()
{
  return sub_1001184B8(&qword_1015CD408, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100118D38()
{
  return sub_1001184B8(&qword_1015CD410, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100118D80()
{
  return sub_1001184B8(&qword_1015CD418, type metadata accessor for GEOEVChargerPlugConnectorType);
}

uint64_t sub_100118DC8()
{
  return sub_1001184B8(&qword_1015CD420, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100118E10()
{
  return sub_1001184B8(&qword_1015CD428, type metadata accessor for Key);
}

void type metadata accessor for GEOTransitNearbyScheduleGroupType(uint64_t a1)
{
}

void type metadata accessor for GEOTransitDepartureLiveStatus(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_100118E94()
{
  return sub_1001184B8(&qword_1015CD480, type metadata accessor for GEOTransitDepartureLiveStatus);
}

uint64_t sub_100118EDC()
{
  return sub_1001184B8(&qword_1015CD488, type metadata accessor for GEOTransitNearbyScheduleGroupType);
}

void type metadata accessor for VKIconSizeGroup(uint64_t a1)
{
}

id sub_100118F90()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CommunityIDMapsSync()) init];
  qword_101611218 = (uint64_t)result;
  return result;
}

id sub_1001190C0()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CommunityIDMapsSync();
  return [super dealloc];
}

uint64_t type metadata accessor for CommunityIDMapsSync()
{
  return self;
}

BOOL sub_100119128(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100119140()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100119188()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001191B4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_1001191F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  void v6[4] = a6;
  uint64_t v6[2] = a4;
  return _swift_task_switch(sub_10011921C, 0, 0);
}

uint64_t sub_10011921C()
{
  uint64_t v1 = v0[2];
  type metadata accessor for CommunityIDRequest();
  v0[5] = CommunityIDRequest.__allocating_init()();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CommunityIDRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CommunityIDRequest.fetch(options:));
  objc_super v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *objc_super v2 = v0;
  v2[1] = sub_1001192E0;
  return v4(v1);
}

uint64_t sub_1001192E0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10011947C;
  }
  else
  {

    uint64_t v4 = sub_1001193FC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001193FC()
{
  uint64_t v1 = (void (*)(void, void))v0[3];
  if (v1) {
    v1(v0[7], 0);
  }
  swift_bridgeObjectRelease();
  objc_super v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10011947C()
{
  uint64_t v1 = *(void *)(v0 + 24);

  uint64_t v2 = *(void *)(v0 + 64);
  if (v1)
  {
    uint64_t v3 = *(void (**)(void, uint64_t))(v0 + 24);
    swift_errorRetain();
    v3(0, v2);
    swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1001195DC(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    type metadata accessor for CommunityID();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  if (a2) {
    uint64_t v6 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);
}

uint64_t sub_100119678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[2] = a6;
  v7[3] = a7;
  BOOL v11 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CommunityIDRequest.fetch(options:)
                                        + async function pointer to dispatch thunk of CommunityIDRequest.fetch(options:));
  uint64_t v9 = (void *)swift_task_alloc();
  void v7[4] = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_100119730;
  return v11(a5);
}

uint64_t sub_100119730(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + ++*(void *)(*((void *)result + 4) + 40) = a1;
  *(void *)(v3 + 4_Block_object_dispose(&STACK[0x358], 8) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100119A00;
  }
  else {
    uint64_t v4 = sub_100119844;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_100119844()
{
  unint64_t v1 = v0[5];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v8 = v0[2];
    swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v9 = (void (*)(void, uint64_t))v0[2];
      sub_10011A904();
      uint64_t v10 = swift_allocError();
      *BOOL v11 = 0;
      v9(0, v10);
      swift_errorRelease();
    }
    goto LABEL_12;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v2 = *(id *)(v0[5] + 32);
  }
  uint64_t v3 = v0[2];
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = (void (*)(uint64_t, void))v0[2];
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100F5DFF0;
    *(void *)(v5 + 32) = v2;
    uint64_t v13 = v5;
    specialized Array._endMutation()();
    id v6 = v2;
    v4(v13, 0);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
LABEL_12:
  uint64_t v12 = (void (*)(void))v0[1];
  v12();
}

uint64_t sub_100119A00()
{
  unint64_t v1 = (void (*)(void, uint64_t))v0[2];
  uint64_t v2 = v0[6];
  if (v1)
  {
    swift_errorRetain();
    v1(0, v2);
    swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100119DB0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate();
  uint64_t v9 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
  uint64_t v10 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
  id v12 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 initWithKey:v13 ascending:1];

  *(void *)(v11 + 32) = v14;
  uint64_t v26 = v11;
  specialized Array._endMutation()();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100F5E000;
  *(void *)(v15 + 32) = v9;
  *(void *)(v15 + ++*(void *)(*((void *)result + 4) + 40) = v10;
  *(void *)(v15 + 4_Block_object_dispose(&STACK[0x358], 8) = a1;
  uint64_t v26 = v15;
  specialized Array._endMutation()();
  id v16 = objc_allocWithZone(Predicate);
  id v17 = v9;
  id v18 = v10;
  id v19 = a1;
  MapsSyncQueryPredicate.init(and:)();
  id v20 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  uint64_t v21 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 1, 1, v22);
  BOOL v23 = (void *)swift_allocObject();
  void v23[2] = 0;
  v23[3] = 0;
  void v23[4] = v21;
  v23[5] = a2;
  v23[6] = v25;
  id v24 = v21;
  sub_1000F4F24(a2);
  sub_100042AF4((uint64_t)v7, (uint64_t)&unk_1015CE090, (uint64_t)v23);
  swift_release();
}

void sub_10011A068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunityIDRequest();
  uint64_t v11 = (void *)CommunityIDRequest.__allocating_init()();
  type metadata accessor for MapsSyncQueryPredicate();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100F5CF70;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_10011A750();
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + ++*(void *)(*((void *)result + 4) + 40) = a2;
  swift_bridgeObjectRetain();
  NSString v13 = NSPredicate.init(format:_:)();
  id v14 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  id v15 = v13;
  id v16 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
  id v18 = (void *)swift_allocObject();
  v18[2] = 0;
  _OWORD v18[3] = 0;
  void v18[4] = v11;
  v18[5] = v16;
  void v18[6] = a3;
  v18[7] = a4;
  id v19 = v11;
  id v20 = v16;
  sub_1000F4F24(a3);
  sub_100042AF4((uint64_t)v10, (uint64_t)&unk_1015CE078, (uint64_t)v18);
  swift_release();
}

void sub_10011A264(uint64_t a1, uint64_t a2, void (*a3)(void, void))
{
  type metadata accessor for CommunityID();
  uint64_t v4 = (void *)MapsSyncObject.__allocating_init()();
  swift_bridgeObjectRetain();
  dispatch thunk of CommunityID.communityIdentifier.setter();
  dispatch thunk of CommunityID.usedCount.setter();
  dispatch thunk of CommunityID.expired.setter();
  type metadata accessor for MapsSyncStore();
  uint64_t v5 = (void *)static MapsSyncStore.sharedStore.getter();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
  *(void *)(v6 + 32) = v4;
  specialized Array._endMutation()();
  id v7 = v4;
  dispatch thunk of MapsSyncStore.save(objects:)();

  swift_bridgeObjectRelease();
  if (a3) {
    a3(0, 0);
  }
}

uint64_t sub_10011A3EC(void *a1, void (*a2)(uint64_t, void))
{
  dispatch thunk of CommunityID.expired.setter();
  type metadata accessor for MapsSyncStore();
  uint64_t v4 = (void *)static MapsSyncStore.sharedStore.getter();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F5DFF0;
  *(void *)(v5 + 32) = a1;
  specialized Array._endMutation()();
  id v6 = a1;
  dispatch thunk of MapsSyncStore.save(objects:)();

  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100F5DFF0;
    *(void *)(v8 + 32) = v6;
    uint64_t v10 = v8;
    specialized Array._endMutation()();
    id v9 = v6;
    a2(v10, 0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void (*sub_10011A58C(void *a1, void (*a2)(uint64_t, void)))(uint64_t *, void)
{
  uint64_t result = (void (*)(uint64_t *, void))dispatch thunk of CommunityID.usedCount.modify();
  if (__OFADD__(*v5, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v5;
    result(v12, 0);
    type metadata accessor for MapsSyncStore();
    id v6 = (void *)static MapsSyncStore.sharedStore.getter();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100F5DFF0;
    *(void *)(v7 + 32) = a1;
    v12[0] = v7;
    specialized Array._endMutation()();
    id v8 = a1;
    dispatch thunk of MapsSyncStore.save(objects:)();

    uint64_t result = (void (*)(uint64_t *, void))swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_100F5DFF0;
      *(void *)(v9 + 32) = v8;
      v12[0] = v9;
      specialized Array._endMutation()();
      uint64_t v10 = v12[0];
      id v11 = v8;
      a2(v10, 0);
      return (void (*)(uint64_t *, void))swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10011A710()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10011A748(objc_class *a1, uint64_t a2)
{
  sub_1001195DC(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_10011A750()
{
  unint64_t result = qword_1015CF9B0;
  if (!qword_1015CF9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF9B0);
  }
  return result;
}

uint64_t sub_10011A7A4()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10011A7FC()
{
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  id v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_100105268;
  id v8 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CommunityIDRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CommunityIDRequest.fetch(options:));
  id v6 = (void *)swift_task_alloc();
  void v5[4] = v6;
  *id v6 = v5;
  v6[1] = sub_100119730;
  return v8(v2);
}

unint64_t sub_10011A904()
{
  unint64_t result = qword_1015CE080;
  if (!qword_1015CE080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1015CE080);
  }
  return result;
}

uint64_t sub_10011A958()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10011A9A8()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + _Block_object_dispose(&STACK[0x358], 8) = sub_10005056C;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return _swift_task_switch(sub_10011921C, 0, 0);
}

unsigned char *initializeBufferWithCopyOfBuffer for CommunityIDMapsSync.AccessError(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CommunityIDMapsSync.AccessError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CommunityIDMapsSync.AccessError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011ABCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10011ABF4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10011ABFC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CommunityIDMapsSync.AccessError()
{
  return &type metadata for CommunityIDMapsSync.AccessError;
}

unint64_t sub_10011AC1C()
{
  unint64_t result = qword_1015CE098;
  if (!qword_1015CE098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE098);
  }
  return result;
}

uint64_t sub_10011AC84(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 value])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  sub_10011896C((uint64_t)v24, (uint64_t)aBlock);
  if (!v20) {
    return sub_1001189D4((uint64_t)aBlock);
  }
  sub_100100830(0, (unint64_t *)&qword_1015D1C60);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    NSString v13 = v23;
    sub_100100830(0, (unint64_t *)&qword_1015CE570);
    uint64_t v18 = static OS_dispatch_queue.main.getter();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a2;
    uint64_t v21 = sub_10011B620;
    uint64_t v22 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008C380;
    id v20 = &unk_1012D8D48;
    id v15 = _Block_copy(aBlock);
    id v16 = v13;
    swift_unknownObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10010B9B0();
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010B554();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v17 = (void *)v18;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

void sub_10011AFC0(uint64_t a1, void *a2)
{
  uint64_t v4 = self;
  id v5 = [v4 sharedInstance];
  if (v5 && (uint64_t v6 = v5, v7 = [v5 isCarAppSceneHostingNavigation], v6, v7))
  {
    id v8 = [v4 sharedInstance];
    if (!v8)
    {
      __break(1u);
      return;
    }
    uint64_t v9 = "detourToWaypoint:";
  }
  else
  {
    id v8 = [a2 appCoordinator];
    uint64_t v9 = "addStopWithWaypoint:";
  }
  id v10 = v8;
  [v8 v9:a1];
}

id sub_10011B13C()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for FindMyActionHandler();
  return [super dealloc];
}

uint64_t type metadata accessor for FindMyActionHandler()
{
  return self;
}

uint64_t sub_10011B194(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Handle();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  NSString v13 = (char *)&v32 - v12;
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    self;
    id v15 = (void *)swift_dynamicCastObjCClassUnconditional();
    id v33 = a1;
    id v16 = v13;
    id v17 = [v15 findMyHandleIdentifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10030D804((uint64_t)_swiftEmptyArrayStorage);
    Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v18(v11, v16, v7);
    [v15 coordinate];
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    MyHandleMapServiceTicket = (objc_class *)type metadata accessor for FindMyHandleMapServiceTicket();
    id v24 = objc_allocWithZone(MyHandleMapServiceTicket);
    *(void *)&v24[OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket] = 0;
    v24[OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_isCancelled] = 0;
    v18(&v24[OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_handle], v11, v7);
    uint64_t v25 = &v24[OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_coordinate];
    *(void *)uint64_t v25 = v20;
    *((void *)v25 + 1) = v22;
    v25[16] = 0;
    v34.unint64_t receiver = v24;
    v34.Class super_class = MyHandleMapServiceTicket;
    [super init];
    uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v11, v7);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a2;
    uint64_t v29 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
    uint64_t v30 = (void *)swift_allocObject();
    void v30[2] = 0;
    v30[3] = 0;
    v30[4] = v26;
    v30[5] = 0;
    v30[6] = sub_10011B578;
    v30[7] = v28;
    v30[8] = 0;
    v30[9] = 0;
    swift_unknownObjectRetain();
    id v31 = v26;
    swift_retain();
    sub_100042AF4((uint64_t)v6, (uint64_t)&unk_1015CD258, (uint64_t)v30);

    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v27)(v16, v7);
  }
  return result;
}

uint64_t sub_10011B540()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011B578(void *a1)
{
  return sub_10011AC84(a1, *(void *)(v1 + 16));
}

uint64_t sub_10011B580()
{
  swift_unknownObjectRelease();

  swift_release();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10011B5E0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10011B620()
{
  sub_10011AFC0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_10011B628(void *a1, uint64_t a2, void *a3)
{
  return [a1 setCollectionInfo:*a3];
}

uint64_t sub_10011B638@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBB28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015CE170);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611220);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

id sub_10011B6E4()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

Swift::Int sub_10011B70C()
{
  id v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

void sub_10011B75C()
{
  id v1 = *v0;
  NSObject.hash(into:)();
}

Swift::Int sub_10011B7B4()
{
  id v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

uint64_t sub_10011B800()
{
  return static NSObject.== infix(_:_:)() & 1;
}

unint64_t sub_10011B858()
{
  unint64_t result = qword_1015CE128;
  if (!qword_1015CE128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE128);
  }
  return result;
}

unint64_t sub_10011B8AC(uint64_t a1)
{
  unint64_t result = sub_10011B8D4();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = result;
  return result;
}

unint64_t sub_10011B8D4()
{
  unint64_t result = qword_1015CE168;
  if (!qword_1015CE168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE168);
  }
  return result;
}

id sub_10011B928()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_updatingTimer;
  if (*(void *)&v0[OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_updatingTimer])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    *(void *)&v0[v1] = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  v3.unint64_t receiver = v0;
  v3.Class super_class = (Class)type metadata accessor for AirQualityConditionsDataProvider();
  return [super dealloc];
}

void sub_10011BAC8(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_enabled) != (a1 & 1))
  {
    uint64_t v2 = v1;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_enabled))
    {
      if (qword_1015CBB30 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_1000F2248(v3, (uint64_t)qword_101611238);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Enabling air quality conditions data provider", v6, 2u);
        swift_slowDealloc();
      }

      sub_100062968();
    }
    else
    {
      if (qword_1015CBB30 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_1000F2248(v7, (uint64_t)qword_101611238);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Disabling air quality conditions data provider", v10, 2u);
        swift_slowDealloc();
      }

      uint64_t v11 = OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_updatingTimer;
      if (*(void *)(v2 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_updatingTimer))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        OS_dispatch_source.cancel()();
        *(void *)(v2 + v11) = 0;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_10011BD00()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_lastSavedLocation);
    if (v2)
    {
      uint64_t v3 = qword_1015CBB30;
      id v4 = v2;
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_1000F2248(v5, (uint64_t)qword_101611238);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Scheduled air quality conditions refresh", v8, 2u);
        swift_slowDealloc();
      }

      sub_10011BE44(v4);
    }
    else
    {
      id v4 = (id)Strong;
    }
  }
}

uint64_t sub_10011BE44(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    id v13 = [self sharedManager];
    unsigned int v14 = [v13 shouldShowAirQualityConditions];

    if (v14 && *((unsigned char *)v2 + OBJC_IVAR____TtC4Maps32AirQualityConditionsDataProvider_enabled) == 1)
    {
      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
      id v16 = (void *)swift_allocObject();
      v16[2] = 0;
      v16[3] = 0;
      v16[4] = v2;
      void v16[5] = a1;
      id v17 = v2;
      id v18 = a1;
      sub_10011CDF8((uint64_t)v6, (uint64_t)&unk_1015CE208, (uint64_t)v16);
      return swift_release();
    }
    else
    {
      return sub_1000388F4(0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10011C0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[4] = a4;
  void v5[5] = a5;
  uint64_t v6 = type metadata accessor for Date();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for WeatherMetadata();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URL();
  v5[12] = v8;
  v5[13] = *(void *)(v8 - 8);
  v5[14] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AirQualityScaleCategory();
  v5[15] = v9;
  uint8_t v5[16] = *(void *)(v9 - 8);
  v5[17] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for AirQualityScale();
  v5[18] = v10;
  v5[19] = *(void *)(v10 - 8);
  v5[20] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for AirQuality();
  v5[21] = v11;
  v5[22] = *(void *)(v11 - 8);
  v5[23] = swift_task_alloc();
  uint64_t v12 = sub_1000FF33C(&qword_1015CE210);
  v5[24] = v12;
  v5[25] = *(void *)(v12 - 8);
  v5[26] = swift_task_alloc();
  v5[27] = sub_1000FF33C(&qword_1015CE218);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  return _swift_task_switch(sub_10011C3D8, 0, 0);
}

uint64_t sub_10011C3D8()
{
  if (qword_1015CBB30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[30] = sub_1000F2248(v1, (uint64_t)qword_101611238);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Fetching air quality conditions", v4, 2u);
    swift_slowDealloc();
  }

  static WeatherQuery.airQuality.getter();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[31] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10011C558;
  uint64_t v6 = v0[29];
  uint64_t v7 = v0[26];
  uint64_t v8 = v0[27];
  uint64_t v9 = v0[5];
  return WeatherService.weather<A>(for:including:)(v6, v9, v7, v8);
}

uint64_t sub_10011C558()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 208);
  uint64_t v3 = *(void *)(*(void *)v1 + 200);
  uint64_t v4 = *(void *)(*(void *)v1 + 192);
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_10011CD20;
  }
  else {
    uint64_t v5 = sub_10011C6C8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10011C6C8()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  sub_10011D0C8(v0[29], v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000FF2E0(v0[28], &qword_1015CE218);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to retrieve air quality conditions", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0[29];

    sub_1000388F4(0);
  }
  else
  {
    uint64_t v8 = v0[20];
    uint64_t v9 = v0[18];
    uint64_t v10 = v0[19];
    (*(void (**)(void, void, void))(v0[22] + 32))(v0[23], v0[28], v0[21]);
    AirQuality.scale.getter();
    char v11 = AirQualityScale.isNumerical.getter();
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v56(v8, v9);
    uint64_t v13 = v0[16];
    uint64_t v12 = v0[17];
    uint64_t v14 = v0[15];
    if (v11)
    {
      sub_1000FF33C(&qword_1015CE220);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_100F5CFA0;
      v0[2] = AirQuality.index.getter();
      sub_10011D130();
      *(Swift::String *)(v15 + 32) = BinaryInteger.formatted()();
      AirQuality.currentScaleCategory.getter();
      uint64_t v16 = AirQualityScaleCategory.description.getter();
      uint64_t v18 = v17;
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v19(v12, v14);
      *(void *)(v15 + 4_Block_object_dispose(&STACK[0x358], 8) = v16;
      *(void *)(v15 + 56) = v18;
      v0[3] = v15;
      sub_1000FF33C((uint64_t *)&unk_1015CE230);
      sub_1001010F8((unint64_t *)&qword_1015D5A60, (uint64_t *)&unk_1015CE230);
      BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      AirQuality.currentScaleCategory.getter();
      AirQualityScaleCategory.description.getter();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v19(v12, v14);
    }
    uint64_t v20 = AirQuality.index.getter();
    if (v20 < 0) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    uint64_t v21 = v0[20];
    uint64_t v23 = v0[17];
    uint64_t v22 = v0[18];
    uint64_t v45 = v0[15];
    uint64_t v47 = v0[14];
    uint64_t v54 = v0[13];
    uint64_t v55 = v0[12];
    id v24 = v19;
    uint64_t v26 = v0[10];
    uint64_t v25 = v0[11];
    uint64_t v48 = v0[8];
    uint64_t v49 = v0[9];
    uint64_t v52 = v0[7];
    uint64_t v53 = v0[6];
    uint64_t v46 = (void *)v0[5];
    uint64_t v51 = v20;
    AirQuality.scale.getter();
    char v50 = AirQualityScale.isNumerical.getter();
    v56(v21, v22);
    AirQuality.currentScaleCategory.getter();
    AirQualityScaleCategory.color.getter();
    v24(v23, v45);
    AirQuality.learnMoreURL.getter();
    id v27 = v46;
    AirQuality.metadata.getter();
    WeatherMetadata.expirationDate.getter();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v49);
    id v28 = objc_allocWithZone((Class)AirQualityConditions);
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    URL._bridgeToObjectiveC()(v30);
    uint64_t v32 = v31;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v35 = [v28 initWithAirQualityIndex:v51 isNumerical:v50 & 1 color:v29 learnMoreURL:v32 forLocation:v27 withExpirationDate:isa airQualityDescription:v34];

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v48, v53);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v47, v55);
    id v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Successfully fetched air quality conditions", v38, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0[29];
    uint64_t v40 = v0[22];
    uint64_t v39 = v0[23];
    uint64_t v41 = v0[21];

    id v42 = v35;
    sub_1000388F4(v35);

    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
  }
  sub_1000FF2E0(v7, &qword_1015CE218);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_10011CD20()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10011CDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1000FF2E0(a1, &qword_1015CD250);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_10011CF80()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10011CFC0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10011D008(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10005056C;
  return sub_10011C0A8(a1, v4, v5, v7, v6);
}

uint64_t sub_10011D0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015CE218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10011D130()
{
  unint64_t result = qword_1015CE228;
  if (!qword_1015CE228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE228);
  }
  return result;
}

uint64_t sub_10011D184()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10011D1BC()
{
}

uint64_t sub_10011D1C4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *LibraryLinkOutlineCellModel.libraryItemsCount.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryLinkOutlineCellModel_libraryItemsCount);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void LibraryLinkOutlineCellModel.libraryItemsCount.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC4Maps27LibraryLinkOutlineCellModel_libraryItemsCount);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*LibraryLinkOutlineCellModel.libraryItemsCount.modify())()
{
  return j__swift_endAccess;
}

uint64_t LibraryLinkOutlineCellModel.needsReload(fromPreviousViewModel:)(void *a1)
{
  return [a1 isEqual:v1] ^ 1;
}

uint64_t LibraryLinkOutlineCellModel.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_10011D518(a1, (uint64_t)v15);
  if (v16)
  {
    if (!swift_dynamicCast())
    {
LABEL_11:
      char v11 = 0;
      return v11 & 1;
    }
    id v3 = v14;
    uint64_t v4 = (id *)&v14[OBJC_IVAR____TtC4Maps27LibraryLinkOutlineCellModel_libraryItemsCount];
    swift_beginAccess();
    id v5 = *v4;
    id v6 = *v4;
  }
  else
  {
    sub_1001189D4((uint64_t)v15);
    id v5 = 0;
    id v3 = 0;
  }
  uint64_t v7 = (void **)(v1 + OBJC_IVAR____TtC4Maps27LibraryLinkOutlineCellModel_libraryItemsCount);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!v5)
  {
    id v12 = v8;

    if (!v8)
    {
      char v11 = 1;
      return v11 & 1;
    }

    goto LABEL_11;
  }
  if (!v8)
  {

    goto LABEL_11;
  }
  type metadata accessor for LibraryItemsCount();
  id v9 = v8;
  id v10 = v5;
  char v11 = static NSObject.== infix(_:_:)();

  return v11 & 1;
}

uint64_t sub_10011D518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015CD260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id LibraryLinkOutlineCellModel.hash.getter()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryLinkOutlineCellModel_libraryItemsCount);
  swift_beginAccess();
  id result = *v1;
  if (*v1) {
    return [result hash];
  }
  return result;
}

id LibraryLinkOutlineCellModel.cellRegistration.getter()
{
  if (qword_1015CBB38 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_101611250;

  return v0;
}

id LibraryLinkOutlineCellModel.homeActionObject.getter@<X0>(void *a1@<X8>)
{
  a1[3] = swift_getObjectType();
  *a1 = v3;

  return v3;
}

double LibraryLinkOutlineCellModel.homeDragAndDropObject.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

id CuratedCollectionItemLibraryCoordinator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id LibraryLinkOutlineCellModel.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC4Maps27LibraryLinkOutlineCellModel_libraryItemsCount] = 0;
  v3.unint64_t receiver = v0;
  v3.Class super_class = ObjectType;
  return [super init];
}

id sub_10011D8BC(uint64_t a1, uint64_t a2, void *a3)
{
  objc_super v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *LibraryLinkOutlineCell.cellModel.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC4Maps22LibraryLinkOutlineCell_cellModel);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void LibraryLinkOutlineCell.cellModel.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC4Maps22LibraryLinkOutlineCell_cellModel);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  sub_10011DA40();
}

uint64_t sub_10011DA40()
{
  uint64_t v1 = type metadata accessor for UIListContentConfiguration();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewListCell.defaultContentConfiguration()();
  id v5 = (void *)(v0 + OBJC_IVAR____TtC4Maps22LibraryLinkOutlineCell_cellModel);
  swift_beginAccess();
  if (*v5)
  {
    id v6 = (id *)(*v5 + OBJC_IVAR____TtC4Maps27LibraryLinkOutlineCellModel_libraryItemsCount);
    swift_beginAccess();
    if (*v6)
    {
      id v7 = *v6;
      LibraryItemsCount.descriptionForLibrarySectionInHome()();
    }
  }
  UIListContentConfiguration.text.setter();
  _OWORD v11[3] = v1;
  void v11[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v8 = sub_100100B1C(v11);
  (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(v8, v4, v1);
  UICollectionViewCell.contentConfiguration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t (*LibraryLinkOutlineCell.cellModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_10011DC3C;
}

uint64_t sub_10011DC3C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_10011DA40();
  }
  return result;
}

id LibraryLinkOutlineCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return [v9 initWithFrame:a1, a2, a3, a4];
}

id LibraryLinkOutlineCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = sub_1000FF33C(&qword_1015CE288);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v5[OBJC_IVAR____TtC4Maps22LibraryLinkOutlineCell_cellModel] = 0;
  v28.unint64_t receiver = v5;
  v28.Class super_class = ObjectType;
  id v22 = [super initWithFrame:a1, a2, a3, a4];
  sub_1000FF33C(&qword_1015CE290);
  type metadata accessor for UICellAccessory();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100F5CF70;
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for UICellAccessory.DisplayedState.always(_:), v18);
  uint64_t v23 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 1, 1, v23);
  id v24 = v22;
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
  static UICellAccessory.disclosureIndicator(displayed:options:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  UICollectionViewListCell.accessories.setter();
  id v25 = v24;
  NSString v26 = String._bridgeToObjectiveC()();
  [v25 setAccessibilityIdentifier:v26];

  return v25;
}

uint64_t sub_10011E154()
{
  type metadata accessor for LibraryLinkOutlineCellRegistration();
  type metadata accessor for LibraryLinkOutlineCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  void v4[4] = sub_10011E238;
  void v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1001FB7A8;
  v4[3] = &unk_1012D8EB0;
  uint64_t v1 = _Block_copy(v4);
  id v2 = [(id)swift_getObjCClassFromMetadata() registrationWithCellClass:ObjCClassFromMetadata configurationHandler:v1];
  _Block_release(v1);
  uint64_t result = swift_release();
  qword_101611250 = (uint64_t)v2;
  return result;
}

void sub_10011E238(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000F2354(a3, (uint64_t)v13);
  sub_10011E48C();
  if (swift_dynamicCast())
  {
    type metadata accessor for LibraryLinkOutlineCell();
    uint64_t v4 = swift_dynamicCastClass();
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = a1;
      id v7 = [v12 viewModel];
      type metadata accessor for LibraryLinkOutlineCellModel();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8)
      {
        id v9 = (void *)v8;
        id v10 = (void **)(v5 + OBJC_IVAR____TtC4Maps22LibraryLinkOutlineCell_cellModel);
        swift_beginAccess();
        uint64_t v11 = *v10;
        *id v10 = v9;
        swift_unknownObjectRetain_n();

        sub_10011DA40();
        swift_unknownObjectRelease_n();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
}

id LibraryLinkOutlineCellRegistration.init()()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for LibraryLinkOutlineCellRegistration();
  return [super init];
}

uint64_t type metadata accessor for LibraryLinkOutlineCellRegistration()
{
  return self;
}

id LibraryLinkOutlineCellRegistration.__deallocating_deinit()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for LibraryLinkOutlineCellRegistration();
  return [super dealloc];
}

uint64_t type metadata accessor for LibraryLinkOutlineCellModel()
{
  return self;
}

uint64_t type metadata accessor for LibraryLinkOutlineCell()
{
  return self;
}

unint64_t sub_10011E48C()
{
  unint64_t result = qword_1015CE3D0;
  if (!qword_1015CE3D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CE3D0);
  }
  return result;
}

id sub_10011E4D0()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries);
  if (v1 >> 62) {
    goto LABEL_12;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 containsPhotoCarouselUnit];

      if ((v7 & 1) == 0)
      {
        ++v3;
        if (v6 != v2) {
          continue;
        }
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain_n();
  }
  id v7 = 0;
LABEL_14:
  swift_bridgeObjectRelease_n();
  return v7;
}

id sub_10011E5D0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  id v7 = v3;
  if (String.count.getter() >= 1)
  {
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10 > 0) {
        goto LABEL_4;
      }
    }
    else if (*(uint64_t *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
    {
LABEL_4:
      uint64_t v8 = &v7[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_identifier];
      *(void *)uint64_t v8 = a1;
      *((void *)v8 + 1) = a2;
      *(void *)&v7[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries] = a3;

      v11.unint64_t receiver = v7;
      v11.Class super_class = (Class)type metadata accessor for PlaceSummaryTemplate();
      return [super init];
    }
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  type metadata accessor for PlaceSummaryTemplate();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_10011E6E0()
{
  _StringGuts.grow(_:)(55);
  v1._countAndFlagsBits = 0x6E65644920202020;
  v1._object = (void *)0xEF3A726569666974;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_identifier);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_identifier + 8);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x746E45202020200ALL;
  v5._object = (void *)0xEE00203A73656972;
  String.append(_:)(v5);
  unint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (!v7) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_13;
    }
  }
  uint64_t result = sub_10025AEF4(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v9 = 0;
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v6 + 8 * v9 + 32);
    }
    objc_super v11 = v10;
    uint64_t v12 = sub_1001BA09C();
    uint64_t v14 = v13;

    unint64_t v16 = _swiftEmptyArrayStorage[2];
    unint64_t v15 = _swiftEmptyArrayStorage[3];
    if (v16 >= v15 >> 1) {
      sub_10025AEF4(v15 > 1, v16 + 1, 1);
    }
    ++v9;
    _swiftEmptyArrayStorage[2] = v16 + 1;
    uint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
    void v17[4] = v12;
    v17[5] = v14;
  }
  while (v7 != v9);
LABEL_13:
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = Array.description.getter();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19._object = (void *)0x8000000100F75D10;
  v19._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v19);
  unsigned __int8 v20 = sub_10011E4D0();
  BOOL v21 = (v20 & 1) == 0;
  if (v20) {
    uint64_t v22 = 5457241;
  }
  else {
    uint64_t v22 = 20302;
  }
  if (v21) {
    unint64_t v23 = 0xE200000000000000;
  }
  else {
    unint64_t v23 = 0xE300000000000000;
  }
  unint64_t v24 = v23;
  String.append(_:)(*(Swift::String *)&v22);
  swift_bridgeObjectRelease();
  return 0;
}

id sub_10011E9A4()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for PlaceSummaryTemplate();
  [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryTemplate()
{
  return self;
}

id sub_10011EA4C(void *a1)
{
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  unint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  id result = [a1 templateEntrys:v4];
  if (result)
  {
    unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
    id v8 = result;
    NSArray.makeIterator()();

    sub_10011ECA8();
    dispatch thunk of IteratorProtocol.next()();
    while (v20)
    {
      sub_1000EFD84(&v19, v18);
      sub_1000F2354((uint64_t)v18, (uint64_t)v17);
      sub_10011ED00();
      swift_dynamicCast();
      id v9 = sub_1001BD5DC(v16);
      sub_1000FF22C((uint64_t)v18);
      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      dispatch thunk of IteratorProtocol.next()();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    unint64_t v10 = v21;

    id result = [a1 templateId];
    if (result)
    {
      objc_super v11 = result;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      id v15 = objc_allocWithZone((Class)type metadata accessor for PlaceSummaryTemplate());
      return sub_10011E5D0(v12, v14, v10);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_10011ECA8()
{
  unint64_t result = qword_1015CE418;
  if (!qword_1015CE418)
  {
    type metadata accessor for NSFastEnumerationIterator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE418);
  }
  return result;
}

unint64_t sub_10011ED00()
{
  unint64_t result = qword_1015CE420;
  if (!qword_1015CE420)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CE420);
  }
  return result;
}

Swift::Int sub_10011ED40()
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v3 + 1))
    {
      v5[0] = v2;
      v5[1] = v3;
      uint64_t v6 = v4;
      AnyHashable.hash(into:)();
      sub_1000F351C((uint64_t)v5);
      return Hasher._finalize()();
    }
  }
  else
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
  }
  sub_10010A7C4((uint64_t)&v2);
  Swift::UInt Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Hasher._combine(_:)(Strong);
    swift_unknownObjectRelease();
  }
  return Hasher._finalize()();
}

Swift::UInt sub_10011EE28()
{
  NSObject.hash(into:)();
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v2 + 1))
    {
      v4[0] = v1;
      v4[1] = v2;
      uint64_t v5 = v3;
      AnyHashable.hash(into:)();
      return sub_1000F351C((uint64_t)v4);
    }
  }
  else
  {
    uint64_t v3 = 0;
    long long v1 = 0u;
    long long v2 = 0u;
  }
  sub_10010A7C4((uint64_t)&v1);
  Swift::UInt result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    Hasher._combine(_:)(result);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Int sub_10011EF00()
{
  Hasher.init(_seed:)();
  NSObject.hash(into:)();
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v3 + 1))
    {
      v5[0] = v2;
      v5[1] = v3;
      uint64_t v6 = v4;
      AnyHashable.hash(into:)();
      sub_1000F351C((uint64_t)v5);
      return Hasher._finalize()();
    }
  }
  else
  {
    uint64_t v4 = 0;
    long long v2 = 0u;
    long long v3 = 0u;
  }
  sub_10010A7C4((uint64_t)&v2);
  Swift::UInt Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Hasher._combine(_:)(Strong);
    swift_unknownObjectRelease();
  }
  return Hasher._finalize()();
}

void **assignWithCopy for HomeListCuratedCollectionsCellModel(void **a1, void **a2)
{
  long long v3 = *a2;
  uint64_t v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  swift_unknownObjectWeakCopyAssign();
  return a1;
}

void **assignWithTake for HomeListCuratedCollectionsCellModel(void **a1, void **a2)
{
  long long v3 = *a1;
  *a1 = *a2;

  swift_unknownObjectWeakTakeAssign();
  return a1;
}

void sub_10011F084(Swift::Void (__swiftcall **a1)(DataSource *__struct_ptr _, Swift::OpaquePointer didChangeSelectedCollections)@<X8>)
{
  *a1 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
  a1[1] = 0;
}

void sub_10011F0A0(Swift::Void (__swiftcall **a1)(DataSource *__struct_ptr _, Swift::OpaquePointer didChangeSelectedCollections)@<X8>)
{
  *a1 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
  a1[1] = 0;
}

uint64_t (*sub_10011F0B8())(uint64_t a1)
{
  sub_10011F890();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F57C;
}

uint64_t (*sub_10011F124())(uint64_t a1)
{
  sub_10011F83C();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F57C;
}

uint64_t (*sub_10011F190())(uint64_t a1, uint64_t a2)
{
  sub_10011F7AC();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F800;
}

uint64_t (*sub_10011F1FC())(uint64_t a1)
{
  sub_10011F758();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F57C;
}

uint64_t (*sub_10011F268())(uint64_t)
{
  sub_10011F704();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F9A8;
}

uint64_t (*sub_10011F2D4())(uint64_t a1)
{
  sub_10011F6B0();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F57C;
}

uint64_t (*sub_10011F340())(uint64_t)
{
  sub_10011F65C();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F9A8;
}

uint64_t (*sub_10011F3AC())(uint64_t)
{
  sub_10011F608();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F9A8;
}

uint64_t (*sub_10011F418())(uint64_t)
{
  sub_10011F5B4();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F9A8;
}

uint64_t (*sub_10011F484())(uint64_t a1)
{
  sub_10011F4F0();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_10011F57C;
}

unint64_t sub_10011F4F0()
{
  unint64_t result = qword_1015CE4A0;
  if (!qword_1015CE4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4A0);
  }
  return result;
}

uint64_t sub_10011F544()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10011F57C(uint64_t a1)
{
  long long v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

unint64_t sub_10011F5B4()
{
  unint64_t result = qword_1015CE4A8;
  if (!qword_1015CE4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4A8);
  }
  return result;
}

unint64_t sub_10011F608()
{
  unint64_t result = qword_1015CE4B0;
  if (!qword_1015CE4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4B0);
  }
  return result;
}

unint64_t sub_10011F65C()
{
  unint64_t result = qword_1015CE4B8;
  if (!qword_1015CE4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4B8);
  }
  return result;
}

unint64_t sub_10011F6B0()
{
  unint64_t result = qword_1015CE4C0;
  if (!qword_1015CE4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4C0);
  }
  return result;
}

unint64_t sub_10011F704()
{
  unint64_t result = qword_1015CE4C8;
  if (!qword_1015CE4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4C8);
  }
  return result;
}

unint64_t sub_10011F758()
{
  unint64_t result = qword_1015CE4D0;
  if (!qword_1015CE4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4D0);
  }
  return result;
}

unint64_t sub_10011F7AC()
{
  unint64_t result = qword_1015CE4D8;
  if (!qword_1015CE4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4D8);
  }
  return result;
}

uint64_t sub_10011F800(uint64_t a1, uint64_t a2)
{
  long long v3 = *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 16);
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  return v3(&v6, &v5);
}

unint64_t sub_10011F83C()
{
  unint64_t result = qword_1015CE4E0;
  if (!qword_1015CE4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4E0);
  }
  return result;
}

unint64_t sub_10011F890()
{
  unint64_t result = qword_1015CE4E8;
  if (!qword_1015CE4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE4E8);
  }
  return result;
}

ValueMetadata *_s10TapHandlerV25UserGeneratedGuideHandlerVMa()
{
  return &_s10TapHandlerV25UserGeneratedGuideHandlerVN;
}

ValueMetadata *_s10TapHandlerV20CuratedGuidesHandlerVMa()
{
  return &_s10TapHandlerV20CuratedGuidesHandlerVN;
}

ValueMetadata *_s10TapHandlerV19ActionButtonHandlerVMa()
{
  return &_s10TapHandlerV19ActionButtonHandlerVN;
}

ValueMetadata *_s10TapHandlerV22AccessoryEntityHandlerVMa()
{
  return &_s10TapHandlerV22AccessoryEntityHandlerVN;
}

ValueMetadata *_s10TapHandlerV24ContainmentParentHandlerVMa()
{
  return &_s10TapHandlerV24ContainmentParentHandlerVN;
}

ValueMetadata *_s10TapHandlerV23RefinementButtonHandlerVMa()
{
  return &_s10TapHandlerV23RefinementButtonHandlerVN;
}

ValueMetadata *_s10TapHandlerV20TappableEntryHandlerVMa()
{
  return &_s10TapHandlerV20TappableEntryHandlerVN;
}

ValueMetadata *_s10TapHandlerV18UserLibraryHandlerVMa()
{
  return &_s10TapHandlerV18UserLibraryHandlerVN;
}

ValueMetadata *_s10TapHandlerV15UserNoteHandlerVMa()
{
  return &_s10TapHandlerV15UserNoteHandlerVN;
}

ValueMetadata *_s10TapHandlerV19PhotoCarouseHandlerVMa()
{
  return &_s10TapHandlerV19PhotoCarouseHandlerVN;
}

void *sub_10011F9AC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x358], 8) = v2;
  return result;
}

id sub_10011FA10()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps9UGCReport____lazy_storage___newReviewedPlace;
  BOOL v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps9UGCReport____lazy_storage___newReviewedPlace);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps9UGCReport____lazy_storage___newReviewedPlace);
  }
  else
  {
    uint64_t v4 = (void *)sub_10011FABC(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    BOOL v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10011FABC(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UGCReviewedPlace) initWithMUID:[*(id *)(a1 + OBJC_IVAR____TtC4Maps9UGCReport_mapItem) _muid]];
  id v3 = *(void **)(a1 + OBJC_IVAR____TtC4Maps9UGCReport_initialForm);
  id v4 = [v3 photosForm];
  id v5 = [v4 activePhotoList];

  sub_1000FF33C((uint64_t *)&unk_1015CE590);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
LABEL_3:
    [v2 setNumberOfPhotosAdded:v7];
    id v8 = [v3 ratingsForm];
    id v9 = [v8 overallCategory];

    id v10 = [v9 currentState];
    [v2 setRecommendState:v10];
    [v2 setIsDeleted:[v3 actionType] == 2];
    return (uint64_t)v2;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease_n();
  if ((v7 & 0x8000000000000000) == 0) {
    goto LABEL_3;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10011FE60()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for UGCReport();
  return [super dealloc];
}

uint64_t type metadata accessor for UGCReport()
{
  return self;
}

void sub_10011FF34(uint64_t a1, void (*a2)(id), uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  unint64_t v6 = v5;
  id v11 = [v6 buildSubmissionParameters];
  if (v11)
  {
    uint64_t v12 = v11;
    aBlock[0] = 0;
    id v13 = [self buildICloudUserCredentialsWithError:aBlock];
    id v14 = aBlock[0];
    if (v13)
    {
      id v15 = v13;
      unint64_t v16 = self;
      id v17 = v15;
      id v18 = v14;
      id v19 = [v16 progressWithTotalUnitCount:100];
      id v20 = [v16 progressWithTotalUnitCount:100];
      [v20 setCompletedUnitCount:20];
      unint64_t v21 = (void *)swift_allocObject();
      v21[2] = v20;
      v21[3] = v12;
      void v21[4] = v6;
      _OWORD v21[5] = v17;
      v21[6] = a1;
      v21[7] = a4;
      v21[8] = a5;
      v21[9] = v19;
      aBlock[4] = sub_100122F50;
      aBlock[5] = v21;
      id v33 = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10012062C;
      void aBlock[3] = &unk_1012D96A8;
      uint64_t v22 = _Block_copy(aBlock);
      id v23 = v20;
      id v24 = v6;
      id v25 = v19;
      id v26 = v12;
      sub_1000F4F24((uint64_t)a4);
      swift_release();
      [v24 fetchCoarsenedDeviceLocationWithCompletion:v22];
      _Block_release(v22);
      [v25 addChild:v23 withPendingUnitCount:10];
      if (a2) {
        a2(v25);
      }
    }
    else
    {
      id v29 = aBlock[0];
      uint64_t v30 = _convertNSErrorToError(_:)();

      swift_willThrow();
      if (a4)
      {
        sub_100122BB0();
        uint64_t v31 = swift_allocError();
        *(void *)uint64_t v32 = v30;
        *(void *)(v32 + _Block_object_dispose(&STACK[0x358], 8) = 0;
        *(unsigned char *)(v32 + 16) = 1;
        swift_errorRetain();
        a4(0, v31);

        swift_errorRelease();
      }
      else
      {
      }
      swift_errorRelease();
    }
  }
  else if (a4)
  {
    sub_100122BB0();
    uint64_t v27 = swift_allocError();
    *(void *)uint64_t v28 = 0xD000000000000017;
    *(void *)(v28 + _Block_object_dispose(&STACK[0x358], 8) = 0x8000000100F75FD0;
    *(unsigned char *)(v28 + 16) = 0;
    a4(0, v27);
    swift_errorRelease();
  }
}

void sub_1001202C4(uint64_t a1, int a2, id a3, void *a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  objc_msgSend(a3, "setCompletedUnitCount:", objc_msgSend(a3, "totalUnitCount"));
  id v14 = [a4 traits];
  [v14 setDeviceLocation:a1];

  uint64_t v15 = OBJC_IVAR____TtC4Maps9UGCReport_submitter;
  id v16 = *(id *)&a5[OBJC_IVAR____TtC4Maps9UGCReport_submitter];
  id v17 = [a4 requestParams];
  id v18 = [a4 attachedImages];
  id v19 = [a4 traits];
  id v20 = (void *)swift_allocObject();
  void v20[2] = a8;
  _OWORD v20[3] = a9;
  void v20[4] = a5;
  aBlock[4] = sub_100122F88;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10012062C;
  void aBlock[3] = &unk_1012D96F8;
  unint64_t v21 = _Block_copy(aBlock);
  sub_1000F4F24(a8);
  uint64_t v22 = a5;
  swift_release();
  [v16 submitOrEnqueueFeedback:v17 attachedImages:v18 userInfo:a6 traits:v19 uploadPolicy:a7 feedbackObjectToUpdate:0 completion:v21];
  _Block_release(v21);

  id v23 = [*(id *)&a5[v15] currentProgress];
  [a10 addChild:v23 withPendingUnitCount:90];
}

void sub_1001204F8(void *a1, uint64_t a2, void (*a3)(void *), uint64_t a4, void *a5)
{
  if (a2)
  {
    if (a3) {
      a3(a1);
    }
  }
  else
  {
    id v9 = sub_10011FA10();
    id v10 = (void *)swift_allocObject();
    _OWORD v10[2] = a3;
    _OWORD v10[3] = a4;
    void v10[4] = a1;
    unint64_t v13[4] = sub_100122FE0;
    v13[5] = v10;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    id v13[2] = sub_100341218;
    v13[3] = &unk_1012D9748;
    id v11 = _Block_copy(v13);
    sub_1000F4F24((uint64_t)a3);
    id v12 = a1;
    swift_release();
    [a5 persistSubmissionWithUpdatedReviewedPlace:v9 communityIdentifier:0 completion:v11];
    _Block_release(v11);
  }
}

uint64_t sub_100120754(uint64_t a1, void (*a2)(id), uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = self;
  id v11 = [v10 progressWithTotalUnitCount:100];
  id v12 = [v10 progressWithTotalUnitCount:100];
  [v12 setCompletedUnitCount:20];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  id v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v12;
  void v14[3] = v5;
  void v14[4] = a4;
  v14[5] = a5;
  v14[6] = v13;
  v14[7] = a1;
  v14[8] = v11;
  aBlock[4] = sub_100122B7C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10012062C;
  void aBlock[3] = &unk_1012D93D8;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v12;
  id v17 = v5;
  swift_retain();
  id v18 = v11;
  sub_1000F4F24(a4);
  swift_release();
  [v17 fetchCoarsenedDeviceLocationWithCompletion:v15];
  _Block_release(v15);
  [v18 addChild:v16 withPendingUnitCount:10];
  if (a2) {
    a2(v18);
  }

  return swift_release();
}

id sub_100120938(uint64_t a1, uint64_t a2, void *a3, char *a4, void (*a5)(void, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v91 = a8;
  uint64_t v92 = a7;
  uint64_t v94 = a6;
  uint64_t v95 = a5;
  uint64_t v90 = (void *)a1;
  id v11 = a9;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)&double v18 = __chkstk_darwin(v16).n128_u64[0];
  id v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a3 setCompletedUnitCount:[a3 totalUnitCount]];
  id v21 = *(id *)&a4[OBJC_IVAR____TtC4Maps9UGCReport_initialForm];
  id result = [v21 isEdited];
  if (result)
  {
    uint64_t v83 = v20;
    uint64_t v84 = v17;
    uint64_t v85 = v15;
    uint64_t v86 = v16;
    uint64_t v87 = v13;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 0;
    uint64_t v89 = swift_allocObject();
    *(void *)(v89 + 16) = 0;
    char v93 = dispatch_group_create();
    id v24 = [v21 ratingsForm];
    unsigned __int8 v25 = [v24 isEdited];

    id v26 = &selRef_openRequestLocation;
    id v88 = a9;
    if ((v25 & 1) != 0 || a4[OBJC_IVAR____TtC4Maps9UGCReport_shouldMigrateRatingsWithICloud] == 1)
    {
      id v81 = v21;
      uint64_t v82 = v12;
      uint64_t v27 = v23;
      id v28 = [self progressWithTotalUnitCount:100];
      id v29 = v93;
      dispatch_group_enter(v93);
      uint64_t v30 = OBJC_IVAR____TtC4Maps9UGCReport_mapItem;
      id v80 = [*(id *)&a4[OBJC_IVAR____TtC4Maps9UGCReport_mapItem] _muid];
      id result = [*(id *)&a4[v30] _geoMapItem];
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v31 = result;
      id v79 = self;
      id v32 = [v31 _identifierHistory];
      swift_unknownObjectRelease();
      id v33 = (void *)swift_allocObject();
      uint64_t v34 = v91;
      _OWORD v33[2] = v92;
      v33[3] = a4;
      uint64_t v36 = v89;
      id v35 = v90;
      void v33[4] = v90;
      v33[5] = v34;
      v33[6] = v28;
      v33[7] = v36;
      v33[8] = v27;
      v33[9] = v29;
      id v101 = sub_100122D7C;
      uint64_t v102 = v33;
      aBlock = _NSConcreteStackBlock;
      uint64_t v98 = 1107296256;
      uint64_t v99 = sub_1001DA1FC;
      uint64_t v100 = &unk_1012D94F0;
      os_log_type_t v37 = _Block_copy(&aBlock);
      id v38 = v35;
      id v39 = v28;
      uint64_t v23 = v27;
      swift_retain();
      swift_retain();
      uint64_t v40 = v29;
      swift_retain();
      uint64_t v41 = a4;
      swift_release();
      [v79 fetchCommunityIDWithMUID:v80 identifierHistory:v32 CompletionHandler:v37];
      _Block_release(v37);

      id v26 = &selRef_openRequestLocation;
      id v21 = v81;
      id v42 = [v81 photosForm];
      unsigned int v43 = [v42 isEmpty];

      if (v43) {
        uint64_t v44 = 80;
      }
      else {
        uint64_t v44 = 40;
      }
      id v11 = v88;
      [v88 addChild:v39 withPendingUnitCount:v44];

      uint64_t v12 = v82;
    }
    id v45 = [v21 v26[471]];
    unsigned __int8 v46 = [v45 isEdited];

    if ((v46 & 1) != 0 || a4[OBJC_IVAR____TtC4Maps9UGCReport_shouldMigrateRatingsWithICloud] == 1)
    {
      id v47 = [self progressWithTotalUnitCount:100];
      uint64_t v48 = v93;
      dispatch_group_enter(v93);
      uint64_t v49 = self;
      aBlock = 0;
      id v50 = [v49 buildICloudUserCredentialsWithError:&aBlock];
      uint64_t v51 = aBlock;
      if (!v50)
      {
        char v74 = aBlock;
        uint64_t v75 = _convertNSErrorToError(_:)();

        swift_willThrow();
        if (v95)
        {
          sub_100122BB0();
          uint64_t v76 = swift_allocError();
          *(void *)uint64_t v77 = v75;
          *(void *)(v77 + _Block_object_dispose(&STACK[0x358], 8) = 0;
          *(unsigned char *)(v77 + 16) = 1;
          swift_errorRetain();
          v95(0, v76);

          swift_errorRelease();
        }
        else
        {
        }
        swift_errorRelease();
        swift_release();
        return (id)swift_release();
      }
      uint64_t v52 = v50;
      uint64_t v53 = (void *)swift_allocObject();
      v53[2] = v47;
      v53[3] = v89;
      v53[4] = v23;
      v53[5] = v48;
      swift_retain();
      swift_retain();
      uint64_t v54 = v48;
      uint64_t v55 = v51;
      id v56 = v52;
      id v57 = v47;
      sub_1001216E0((uint64_t)v90, (uint64_t)v52, v91, (void (*)(void, uint64_t))sub_100122CF4, (uint64_t)v53);

      swift_release();
      id v58 = [v21 ratingsForm];
      LODWORD(v52) = [v58 isEmpty];

      if (v52) {
        uint64_t v59 = 80;
      }
      else {
        uint64_t v59 = 40;
      }
      id v11 = v88;
      [v88 addChild:v57 withPendingUnitCount:v59];
    }
    sub_100100830(0, (unint64_t *)&qword_1015CE570);
    uint64_t v60 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v61 = (void *)swift_allocObject();
    uint64_t v62 = v92;
    v61[2] = a4;
    v61[3] = v62;
    uint64_t v63 = v94;
    uint64_t v64 = (uint64_t)v95;
    v61[4] = v23;
    v61[5] = v64;
    uint64_t v65 = v89;
    v61[6] = v63;
    v61[7] = v65;
    v61[8] = v11;
    id v101 = sub_100122CDC;
    uint64_t v102 = v61;
    aBlock = _NSConcreteStackBlock;
    uint64_t v98 = 1107296256;
    uint64_t v99 = sub_10008C380;
    uint64_t v100 = &unk_1012D9478;
    unint64_t v66 = _Block_copy(&aBlock);
    swift_retain();
    unint64_t v67 = a4;
    swift_retain();
    swift_retain();
    sub_1000F4F24(v64);
    id v68 = v11;
    uint64_t v69 = v83;
    static DispatchQoS.unspecified.getter();
    uint64_t v96 = _swiftEmptyArrayStorage;
    sub_10010B9B0();
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010B554();
    unint64_t v70 = v85;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v71 = v93;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v66);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v70, v12);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v69, v86);
    swift_release();
    swift_release();
    return (id)swift_release();
  }
  if (v95)
  {
    sub_100122BB0();
    uint64_t v72 = swift_allocError();
    *(void *)uint64_t v73 = 0xD00000000000001FLL;
    *(void *)(v73 + _Block_object_dispose(&STACK[0x358], 8) = 0x8000000100F75F80;
    *(unsigned char *)(v73 + 16) = 0;
    v95(0, v72);
    return (id)swift_errorRelease();
  }
  return result;
}

id sub_10012125C(id a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v24 = a4;
  if (!a1) {
    goto LABEL_5;
  }
  id result = [a1 tdmUserInfo:a4];
  if (result)
  {
    id v16 = result;
    id v17 = [result anonymousUserId];

    if (v17)
    {
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

LABEL_6:
      swift_beginAccess();
      *(void *)(a2 + 16) = v18;
      *(void *)(a2 + 24) = v20;
      swift_bridgeObjectRelease();
      id v21 = (void *)swift_allocObject();
      v21[2] = a6;
      v21[3] = a7;
      void v21[4] = a8;
      _OWORD v21[5] = a9;
      id v22 = a6;
      swift_retain();
      swift_retain();
      id v23 = a9;
      sub_1001213BC(v24, (uint64_t)a1, a5, (void (*)(void, uint64_t))sub_100123240, (uint64_t)v21);
      return (id)swift_release();
    }
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_1001213BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  unint64_t v6 = v5;
  id v12 = [v6 buildRatingSubmissionParameters];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 traits];
    [v14 setDeviceLocation:a1];

    id v15 = *(id *)&v6[OBJC_IVAR____TtC4Maps9UGCReport_submitter];
    id v16 = [v13 requestParams];
    id v17 = [v13 traits];
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a4;
    *(void *)(v18 + 24) = a5;
    aBlock[4] = sub_100122E08;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10012062C;
    void aBlock[3] = &unk_1012D9568;
    uint64_t v19 = _Block_copy(aBlock);
    sub_1000F4F24((uint64_t)a4);
    swift_release();
    [v15 submitOrEnqueueFeedback:v16 attachedImages:0 userInfo:a2 traits:v17 uploadPolicy:a3 feedbackObjectToUpdate:0 completion:v19];
    _Block_release(v19);
  }
  else if (a4)
  {
    sub_100122BB0();
    uint64_t v20 = swift_allocError();
    *(void *)uint64_t v21 = 0xD000000000000017;
    *(void *)(v21 + _Block_object_dispose(&STACK[0x358], 8) = 0x8000000100F75FD0;
    *(unsigned char *)(v21 + 16) = 0;
    a4(0, v20);
    swift_errorRelease();
  }
}

void sub_10012160C(void *a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  objc_msgSend(a3, "setCompletedUnitCount:", objc_msgSend(a3, "totalUnitCount"));
  if (a1)
  {
    swift_beginAccess();
    id v11 = *(void **)(a4 + 16);
    *(void *)(a4 + 16) = a1;
    id v12 = a1;
  }
  if (a2)
  {
    swift_beginAccess();
    *(void *)(a5 + 16) = a2;
    swift_errorRetain();
    swift_errorRelease();
  }
  dispatch_group_leave(a6);
}

void sub_1001216E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  unint64_t v6 = v5;
  id v12 = [v6 buildPhotosSubmissionParameters];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 traits];
    [v14 setDeviceLocation:a1];

    id v15 = *(id *)&v6[OBJC_IVAR____TtC4Maps9UGCReport_submitter];
    id v16 = [v13 requestParams];
    id v17 = [v13 attachedImages];
    id v18 = [v13 traits];
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a4;
    *(void *)(v19 + 24) = a5;
    aBlock[4] = sub_100122E08;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10012062C;
    void aBlock[3] = &unk_1012D95B8;
    uint64_t v20 = _Block_copy(aBlock);
    sub_1000F4F24((uint64_t)a4);
    swift_release();
    [v15 submitOrEnqueueFeedback:v16 attachedImages:v17 userInfo:a2 traits:v18 uploadPolicy:a3 feedbackObjectToUpdate:0 completion:v20];
    _Block_release(v20);
  }
  else if (a4)
  {
    sub_100122BB0();
    uint64_t v21 = swift_allocError();
    *(void *)uint64_t v22 = 0xD000000000000017;
    *(void *)(v22 + _Block_object_dispose(&STACK[0x358], 8) = 0x8000000100F75FD0;
    *(unsigned char *)(v22 + 16) = 0;
    a4(0, v21);
    swift_errorRelease();
  }
}

void sub_100121954(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v13 = [self progressWithTotalUnitCount:100];
  id v14 = sub_10011FA10();
  swift_beginAccess();
  if (*(void *)(a2 + 24))
  {
    swift_bridgeObjectRetain();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  id v16 = (void *)swift_allocObject();
  v16[2] = v13;
  v16[3] = a3;
  v16[4] = a4;
  void v16[5] = a5;
  void v16[6] = a6;
  aBlock[4] = sub_100122ED8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100341218;
  void aBlock[3] = &unk_1012D9608;
  id v17 = _Block_copy(aBlock);
  id v18 = v13;
  swift_retain();
  sub_1000F4F24(a4);
  swift_retain();
  swift_release();
  [a1 persistSubmissionWithUpdatedReviewedPlace:v14 communityIdentifier:v15 completion:v17];
  _Block_release(v17);

  [a7 addChild:v18 withPendingUnitCount:10];
}

void sub_100121B2C(uint64_t a1, id a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6)
{
  id v9 = (uint64_t *)(a3 + 16);
  [a2 setCompletedUnitCount:[a2 totalUnitCount]];
  if (a1)
  {
    swift_beginAccess();
    *id v9 = a1;
    swift_errorRetain();
    swift_errorRelease();
  }
  if (a4)
  {
    swift_beginAccess();
    id v10 = *(void **)(a6 + 16);
    swift_beginAccess();
    uint64_t v11 = *v9;
    id v12 = v10;
    swift_errorRetain();
    a4(v10, v11);
    swift_errorRelease();
  }
}

id sub_100121D6C(void *a1, uint64_t a2, SEL *a3)
{
  id v5 = objc_allocWithZone((Class)UGCSubmissionFields);
  unint64_t v6 = a1;
  id v7 = [v5 init];
  [*(id *)&v6[OBJC_IVAR____TtC4Maps9UGCReport_initialForm] *a3 v7];
  id v8 = [v6 buildSubmissionParametersWithSubmissionFields:v7];

  return v8;
}

uint64_t sub_100121EFC(void *a1)
{
  id v3 = [objc_allocWithZone((Class)GEORPFeedbackRequestParameters) init];
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  id v5 = [objc_allocWithZone((Class)GEORPFeedbackDetails) init];
  if (!v5)
  {

    return 0;
  }
  unint64_t v6 = v5;
  id v7 = [objc_allocWithZone((Class)GEORPFeedbackSubmissionParameters) init];
  [v4 setSubmissionParameters:v7];

  id v8 = [v4 submissionParameters];
  if (!v8)
  {
    __break(1u);
    goto LABEL_23;
  }
  id v9 = v8;
  [v8 setDetails:v6];

  id v10 = [a1 parentSubmissionIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v11 < 1) {
    goto LABEL_9;
  }
  id v12 = [v4 submissionParameters];
  if (!v12)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v13 = v12;
  NSString v14 = [a1 parentSubmissionIdentifier];
  if (!v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v13 setParentFeedbackId:v14];

LABEL_9:
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC4Maps9UGCReport_reportType);
  if (v15 == 1)
  {
    id v16 = [v4 submissionParameters];
    if (v16)
    {
      id v17 = v16;
      [v16 setType:11];
      id v18 = &selRef_setIncidentFeedback_;
      uint64_t v19 = &selRef_incidentFeedback;
LABEL_17:

      id v22 = [a1 *v19];
      [v6 *v18 v22];

      id v23 = [a1 photoList];
      sub_100100830(0, &qword_1015CE558);
      unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      if (v24 >> 62)
      {
        sub_1000FF33C(&qword_1015CE560);
        _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      }
      swift_bridgeObjectRelease();
      id v25 = objc_allocWithZone((Class)UGCSubmissionParameters);
      sub_1000FF33C(&qword_1015CE560);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v20 = [v25 initWithRequestParameters:v4 attachedImages:isa];

      return (uint64_t)v20;
    }
    goto LABEL_24;
  }
  if (!v15)
  {
    id v21 = [v4 submissionParameters];
    if (v21)
    {
      id v17 = v21;
      [v21 setType:10];
      id v18 = &selRef_setPoiEnrichmentUpdate_;
      uint64_t v19 = &selRef_poiEnrichment;
      goto LABEL_17;
    }
    goto LABEL_25;
  }
LABEL_26:
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

void sub_100122310(id a1, uint64_t a2, void (*a3)(id, uint64_t))
{
  if (a1) {
    a1 = [objc_allocWithZone((Class)GEOLocation) initWithCLLocation:a1];
  }
  id v5 = a1;
  a3(a1, a2);
}

void sub_1001223FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

ValueMetadata *type metadata accessor for UGCReport.ReportType()
{
  return &type metadata for UGCReport.ReportType;
}

unint64_t sub_100122558()
{
  unint64_t result = qword_1015CE550;
  if (!qword_1015CE550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE550);
  }
  return result;
}

uint64_t sub_1001225AC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001225E4(uint64_t a1)
{
  sub_100341284(a1, *(void *)(v1 + 16));
}

id sub_1001225EC(uint64_t a1, void *a2, void *a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR____TtC4Maps9UGCReport____lazy_storage___newReviewedPlace] = 0;
  v4[OBJC_IVAR____TtC4Maps9UGCReport_shouldMigrateRatingsWithICloud] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps9UGCReport_reportType] = a1;
  *(void *)&v4[OBJC_IVAR____TtC4Maps9UGCReport_initialForm] = a2;
  *(void *)&v4[OBJC_IVAR____TtC4Maps9UGCReport_mapItem] = a3;
  *(void *)&v4[OBJC_IVAR____TtC4Maps9UGCReport_submitter] = a4;
  id v8 = self;
  id v9 = v4;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = [v8 unretainedUGCInstance];
  *(void *)&v9[OBJC_IVAR____TtC4Maps9UGCReport_locationManager] = v13;

  v15.unint64_t receiver = v9;
  v15.Class super_class = (Class)type metadata accessor for UGCReport();
  return [super init];
}

void sub_1001226D8(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  uint64_t v5 = self;
  _Block_copy(a2);
  id v6 = [v5 currentDevice];
  id v7 = [v6 userInterfaceIdiom];

  if (v7 == (id)5)
  {
    a2[2](a2, 0, 0);
    swift_release();
  }
  else
  {
    id v8 = *(void **)(a1 + OBJC_IVAR____TtC4Maps9UGCReport_locationManager);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_100122A88;
    *(void *)(v9 + 24) = v4;
    uint64_t v12[4] = sub_100122ADC;
    void v12[5] = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    _OWORD v12[2] = sub_100033BC0;
    uint64_t v12[3] = &unk_1012D9310;
    id v10 = _Block_copy(v12);
    swift_retain();
    swift_release();
    id v11 = [v8 singleLocationUpdateWithHandler:v10];
    _Block_release(v10);
    if (v11)
    {
      [v11 start];
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      _Block_release(a2);
      __break(1u);
    }
  }
}

void sub_1001228C8(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3 && String.count.getter() >= 1)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    [a1 setCommunityIdentifier:v8];
  }
  unsigned int v9 = [a1 isDeleted];
  id v10 = self;
  if (v9)
  {
    id v11 = [a1 muid];
    uint64_t v17 = a4;
    uint64_t v18 = a5;
    id v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    objc_super v15 = sub_100341218;
    id v16 = &unk_1012D9298;
    id v12 = _Block_copy(&v13);
    swift_retain();
    swift_release();
    [v10 removeReviewedPlaceForMUID:v11 completion:v12];
  }
  else
  {
    uint64_t v17 = a4;
    uint64_t v18 = a5;
    id v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    objc_super v15 = sub_100341218;
    id v16 = &unk_1012D9270;
    id v12 = _Block_copy(&v13);
    swift_retain();
    swift_release();
    [v10 addOrEditReviewedPlace:a1 completion:v12];
  }
  _Block_release(v12);
}

void sub_100122A88(uint64_t a1, uint64_t a2)
{
  sub_1001223FC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100122AA4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100122ADC(void *a1, uint64_t a2)
{
  sub_100122310(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_100122AE4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100122B1C()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

id sub_100122B7C(uint64_t a1, uint64_t a2)
{
  return sub_100120938(a1, a2, *(void **)(v2 + 16), *(char **)(v2 + 24), *(void (**)(void, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64));
}

unint64_t sub_100122BB0()
{
  unint64_t result = qword_1015CE568;
  if (!qword_1015CE568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE568);
  }
  return result;
}

uint64_t sub_100122C04()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100122C3C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100122C74()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100122CDC()
{
  sub_100121954(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64));
}

void sub_100122CF4(void *a1, uint64_t a2)
{
  sub_10012160C(a1, a2, *(id *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(NSObject **)(v2 + 40));
}

uint64_t sub_100122D14()
{
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

id sub_100122D7C(void *a1)
{
  return sub_10012125C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72));
}

uint64_t sub_100122DB4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100122E10()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100122E50()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_100122E80()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100122ED8(uint64_t a1)
{
  sub_100121B2C(a1, *(id *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100122EE8()
{
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

void sub_100122F50(uint64_t a1, int a2)
{
  sub_1001202C4(a1, a2, *(id *)(v2 + 16), *(void **)(v2 + 24), *(char **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void **)(v2 + 72));
}

void sub_100122F88(void *a1, uint64_t a2)
{
  sub_1001204F8(a1, a2, *(void (**)(void *))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_100122F98()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100122FE0(uint64_t result)
{
  uint64_t v2 = *(uint64_t (**)(void, uint64_t))(v1 + 16);
  if (v2) {
    return v2(*(void *)(v1 + 32), result);
  }
  return result;
}

uint64_t sub_100123018(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t destroy for UGCReport.UGCReportError(uint64_t a1)
{
  return sub_100123038(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_100123038(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t _s4Maps9UGCReportC14UGCReportErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100123018(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UGCReport.UGCReportError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100123018(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100123038(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for UGCReport.UGCReportError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for UGCReport.UGCReportError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100123038(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UGCReport.UGCReportError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UGCReport.UGCReportError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001231D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1001231DC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UGCReport.UGCReportError()
{
  return &type metadata for UGCReport.UGCReportError;
}

void sub_100123334()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps29RAPTextViewCollectionViewCell_textView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 setDelegate:v0];
  id v2 = [v1 placeholderLabel];
  if (v2)
  {
    unsigned int v3 = v2;
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v4._countAndFlagsBits = 0xD00000000000001BLL;
    v9._countAndFlagsBits = 0xD000000000000022;
    v9._object = (void *)0x8000000100F76200;
    v4._object = (void *)0x8000000100F761C0;
    v5._object = (void *)0x8000000100F761E0;
    v5._countAndFlagsBits = 0xD000000000000015;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)qword_101611820, v5, v9);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v6];

    id v7 = [v0 contentView];
    [v7 addSubview:v1];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001234C0()
{
  uint64_t v1 = v0;
  id v2 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5E820;
  Swift::String v4 = *(void **)&v1[OBJC_IVAR____TtC4Maps29RAPTextViewCollectionViewCell_textView];
  id v5 = [v4 topAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 topAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7 constant:16.0];
  *(void *)(v3 + 32) = v8;
  id v9 = [v4 bottomAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 bottomAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11 constant:-16.0];
  *(void *)(v3 + ++*(void *)(*((void *)result + 4) + 40) = v12;
  id v13 = [v4 leadingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 leadingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15 constant:16.0];
  *(void *)(v3 + 4_Block_object_dispose(&STACK[0x358], 8) = v16;
  id v17 = [v4 trailingAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 trailingAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19 constant:-16.0];
  *(void *)(v3 + 56) = v20;
  id v21 = [v4 heightAnchor];
  [v1 preferredHeight];
  id v22 = [v21 constraintEqualToConstant:];

  *(void *)(v3 + 64) = v22;
  specialized Array._endMutation()();
  sub_10010B37C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_10012396C()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for RAPTextViewCollectionViewCell();
  [super dealloc];
}

uint64_t type metadata accessor for RAPTextViewCollectionViewCell()
{
  return self;
}

void sub_100123B70(void *a1)
{
  uint64_t v3 = self;
  id v4 = [a1 text];
  id v6 = [v3 validatedComment:v4];

  if (v6)
  {
    Swift::UInt Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong textViewCellDidChangeWithTextViewCell:v1 validatedText:v6];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_100123CE4(uint64_t a1)
{
  return a1;
}

id sub_100123DBC()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellImageView;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellImageView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIImageView) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = self;
    id v3 = v4;
    id v6 = [v5 clearColor];
    [v3 setBackgroundColor:v6];

    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    objc_super v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_100123E88()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellTitleLabel;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellTitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellTitleLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100123F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell_horizontalPadding] = 0x4030000000000000;
  *(void *)&v3[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell_verticlePadding] = 0x4034000000000000;
  id v10 = (uint64_t *)&v3[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell_uniqueIdentifier];
  id v11 = v3;
  UUID.init()();
  uint64_t v12 = UUID.uuidString.getter();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *id v10 = v12;
  v10[1] = v14;
  *(void *)&v11[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellImageView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellTitleLabel] = 0;

  if (a3)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  id v16 = (objc_class *)type metadata accessor for BrowseCategoryTableViewCell();
  v20.unint64_t receiver = v11;
  v20.Class super_class = v16;
  [super initWithStyle:a1 reuseIdentifier:v15];

  id v18 = v17;
  sub_100124128();

  return v18;
}

void sub_100124128()
{
  uint64_t v1 = self;
  id v2 = [v1 clearColor];
  [v0 setBackgroundColor:v2];

  id v3 = [v0 contentView];
  id v4 = sub_100123DBC();
  [v3 addSubview:v4];

  id v5 = sub_100123DBC();
  LODWORD(v6) = 1148846080;
  [v5 setContentHuggingPriority:0 forAxis:v6];

  id v7 = sub_100123DBC();
  LODWORD(v_Block_object_dispose(&STACK[0x358], 8) = 1148846080;
  [v7 setContentCompressionResistancePriority:0 forAxis:v8];

  id v9 = sub_100123DBC();
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setAccessibilityIdentifier:v10];

  id v11 = [v0 contentView];
  id v12 = sub_100123E88();
  [v11 addSubview:v12];

  id v13 = sub_100123E88();
  id v14 = [v1 clearColor];
  [v13 setBackgroundColor:v14];

  id v15 = sub_100123E88();
  id v16 = [self system17];
  [v15 setFont:v16];

  id v17 = sub_100123E88();
  NSString v18 = String._bridgeToObjectiveC()();
  [v17 setAccessibilityIdentifier:v18];

  id v19 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100F5E870;
  id v21 = sub_100123DBC();
  id v22 = [v21 leadingAnchor];

  id v23 = [v0 contentView];
  id v24 = [v23 leadingAnchor];

  id v25 = [v22 constraintEqualToAnchor:v24 constant:16.0];
  *(void *)(v20 + 32) = v25;
  id v26 = sub_100123DBC();
  id v27 = [v26 widthAnchor];

  id v28 = [v27 constraintEqualToConstant:30.0];
  *(void *)(v20 + ++*(void *)(*((void *)result + 4) + 40) = v28;
  id v29 = sub_100123DBC();
  id v30 = [v29 heightAnchor];

  id v31 = [v30 constraintEqualToConstant:30.0];
  *(void *)(v20 + 4_Block_object_dispose(&STACK[0x358], 8) = v31;
  id v32 = sub_100123E88();
  id v33 = [v32 leadingAnchor];

  id v34 = sub_100123DBC();
  id v35 = [v34 trailingAnchor];

  id v36 = [v33 constraintEqualToAnchor:v35 constant:8.0];
  *(void *)(v20 + 56) = v36;
  id v37 = sub_100123E88();
  id v38 = [v37 trailingAnchor];

  id v39 = [v0 contentView];
  id v40 = [v39 trailingAnchor];

  id v41 = [v38 constraintEqualToAnchor:v40 constant:-16.0];
  *(void *)(v20 + 64) = v41;
  id v42 = sub_100123E88();
  id v43 = [v42 topAnchor];

  id v44 = [v0 contentView];
  id v45 = [v44 topAnchor];

  id v46 = [v43 constraintEqualToAnchor:v45 constant:20.0];
  *(void *)(v20 + 72) = v46;
  id v47 = sub_100123E88();
  id v48 = [v47 bottomAnchor];

  id v49 = [v0 contentView];
  id v50 = [v49 bottomAnchor];

  id v51 = [v48 constraintEqualToAnchor:v50 constant:-20.0];
  *(void *)(v20 + 80) = v51;
  id v52 = sub_100123DBC();
  id v53 = [v52 centerYAnchor];

  id v54 = sub_100123E88();
  id v55 = [v54 centerYAnchor];

  id v56 = [v53 constraintEqualToAnchor:v55];
  *(void *)(v20 + 8_Block_object_dispose(&STACK[0x358], 8) = v56;
  specialized Array._endMutation()();
  sub_10010B37C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 activateConstraints:isa];
}

id sub_1001249D4()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for BrowseCategoryTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for BrowseCategoryTableViewCell()
{
  return self;
}

void sub_100124A8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell_horizontalPadding] = 0x4030000000000000;
  *(void *)&v1[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell_verticlePadding] = 0x4034000000000000;
  double v6 = (uint64_t *)&v1[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell_uniqueIdentifier];
  UUID.init()();
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *double v6 = v7;
  v6[1] = v9;
  *(void *)&v1[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps27BrowseCategoryTableViewCell____lazy_storage___cellTitleLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100124BF0()
{
  sub_100126998(319, &qword_1015CE6C8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_100126998(319, &qword_1015CE6D0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_100124D30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContentSizeCategory();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v9 = *(void *)(v7 + 64);
  }
  else {
    size_t v9 = v8 + 1;
  }
  size_t v10 = v9 + *(_DWORD *)(v7 + 80);
  uint64_t v11 = *(_DWORD *)(v7 + 80) | 7;
  if (v8 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(v7 + 64);
  }
  uint64_t v13 = *(void *)(a3 + 16);
  uint64_t v43 = v12;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  if ((v11 | v15) != 7
    || ((*(_DWORD *)(v14 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v12 + 1 + v15 + ((v11 + v9 + (v10 & ~(unint64_t)*(_DWORD *)(v7 + 80))) & ~v11)) & ~v15)
     + *(void *)(v14 + 64) > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    id v19 = (uint64_t *)(v18 + (((v11 | v15) + 16) & ~(v11 | v15)));
    swift_retain();
  }
  else
  {
    size_t v38 = v11 + v9;
    uint64_t v39 = v12 + 1;
    uint64_t v40 = *(void *)(v13 - 8);
    uint64_t v41 = v13;
    unint64_t v20 = ~(unint64_t)*(_DWORD *)(v7 + 80);
    id v37 = *(unsigned int (**)(void, void, void))(v7 + 48);
    if (v37(a2, 1, v6))
    {
      memcpy(a1, a2, v9);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    id v22 = a1;
    uint64_t v23 = ~v11;
    id v42 = v22;
    id v24 = (void *)(((unint64_t)v22 + v10) & v20);
    id v25 = (const void *)(((unint64_t)a2 + v10) & v20);
    if (v37(v25, 1, v6))
    {
      uint64_t v26 = v6;
      memcpy(v24, v25, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v24, v25, v6);
      uint64_t v26 = v6;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v6);
    }
    id v27 = (void *)(((unint64_t)v24 + v38) & v23);
    id v28 = (unsigned __int8 *)(((unint64_t)v25 + v38) & v23);
    unsigned int v29 = v28[v43];
    unsigned int v30 = v29 - 2;
    if (v29 < 2)
    {
      id v19 = v42;
      uint64_t v32 = v26;
    }
    else
    {
      if (v43 <= 3) {
        uint64_t v31 = v43;
      }
      else {
        uint64_t v31 = 4;
      }
      id v19 = v42;
      uint64_t v32 = v26;
      switch(v31)
      {
        case 1:
          int v33 = *v28;
          goto LABEL_32;
        case 2:
          int v33 = *(unsigned __int16 *)v28;
          goto LABEL_32;
        case 3:
          int v33 = *(unsigned __int16 *)v28 | (*(unsigned __int8 *)((((unint64_t)v25 + v38) & v23) + 2) << 16);
          goto LABEL_32;
        case 4:
          int v33 = *(_DWORD *)v28;
LABEL_32:
          int v34 = (v33 | (v30 << (8 * v43))) + 2;
          unsigned int v29 = v33 + 2;
          if (v43 < 4) {
            unsigned int v29 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
      (*(void (**)(void *, unint64_t, uint64_t))(v7 + 16))(v27, ((unint64_t)v25 + v38) & v23, v32);
      char v35 = 1;
    }
    else
    {
      void *v27 = *(void *)v28;
      swift_retain();
      char v35 = 0;
    }
    *((unsigned char *)v27 + v43) = v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v40 + 16))(((unint64_t)v27 + v39 + v15) & ~v15, (unint64_t)&v28[v39 + v15] & ~v15, v41);
  }
  return v19;
}

uint64_t sub_1001250F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentSizeCategory();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  unint64_t v7 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v8 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v8 = v7 + 1;
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v10 = (v8 + a1 + v9) & ~v9;
  if (!v6(v10, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v10, v4);
  }
  uint64_t v11 = (unsigned __int8 *)(((v9 | 7) + v8 + v10) & ~(v9 | 7));
  if (v7 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v7;
  }
  unsigned int v13 = v11[v12];
  unsigned int v14 = v13 - 2;
  if (v13 >= 2)
  {
    if (v12 <= 3) {
      uint64_t v15 = v12;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *v11;
        goto LABEL_20;
      case 2:
        int v16 = *(unsigned __int16 *)v11;
        goto LABEL_20;
      case 3:
        int v16 = *(unsigned __int16 *)v11 | (v11[2] << 16);
        goto LABEL_20;
      case 4:
        int v16 = *(_DWORD *)v11;
LABEL_20:
        int v17 = (v16 | (v14 << (8 * v12))) + 2;
        unsigned int v13 = v16 + 2;
        if (v12 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(v11, v4);
  }
  else {
    swift_release();
  }
  uint64_t v18 = *(void *)(*(void *)(a2 + 16) - 8);
  id v19 = *(uint64_t (**)(unint64_t))(v18 + 8);
  unint64_t v20 = (unint64_t)&v11[v12 + 1 + *(unsigned __int8 *)(v18 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);

  return v19(v20);
}

void *sub_100125340(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ContentSizeCategory();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    int v8 = *(_DWORD *)(v6 + 84);
    unint64_t v9 = *(void *)(v6 + 64);
    if (v8) {
      size_t v10 = *(void *)(v6 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    int v8 = *(_DWORD *)(v6 + 84);
    unint64_t v9 = *(void *)(v6 + 64);
  }
  if (v8) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v9 + 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  id v28 = a1;
  unsigned int v13 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  unsigned int v14 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v14, 1, v5))
  {
    memcpy(v13, v14, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v13, v14, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
  }
  size_t v15 = (v12 | 7) + v11;
  int v16 = (void *)(((unint64_t)v13 + v15) & ~(v12 | 7));
  int v17 = (unsigned __int8 *)(((unint64_t)v14 + v15) & ~(v12 | 7));
  if (v9 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v9;
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        goto LABEL_25;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        goto LABEL_25;
      case 3:
        int v22 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        goto LABEL_25;
      case 4:
        int v22 = *(_DWORD *)v17;
LABEL_25:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(v16, v17, v5);
    char v24 = 1;
  }
  else
  {
    *int v16 = *(void *)v17;
    swift_retain();
    char v24 = 0;
  }
  *((unsigned char *)v16 + v1_Block_object_dispose(&STACK[0x358], 8) = v24;
  uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v25 + 16))(((unint64_t)v16 + v18 + *(unsigned __int8 *)(v25 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (unint64_t)&v17[v18 + 1 + *(unsigned __int8 *)(v25 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  return v28;
}

void *sub_100125644(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ContentSizeCategory();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  unint64_t v13 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v14 = *(void *)(v6 + 64);
  }
  else {
    size_t v14 = v13 + 1;
  }
  uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
  id v37 = a1;
  int v16 = (void *)(((unint64_t)a1 + v14 + v15) & ~v15);
  int v17 = (void *)(((unint64_t)a2 + v14 + v15) & ~v15);
  int v18 = v7(v16, 1, v5);
  int v19 = v7(v17, 1, v5);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v16, v17, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v16, v5);
LABEL_20:
    memcpy(v16, v17, v14);
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v16, v17, v5);
LABEL_21:
  size_t v20 = (v15 | 7) + v14;
  uint64_t v21 = (unsigned __int8 *)(((unint64_t)v16 + v20) & ~(v15 | 7));
  int v22 = (unsigned __int8 *)(((unint64_t)v17 + v20) & ~(v15 | 7));
  if (v13 <= 8) {
    uint64_t v23 = 8;
  }
  else {
    uint64_t v23 = v13;
  }
  if (v21 != v22)
  {
    unsigned int v24 = v21[v23];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v21;
          goto LABEL_35;
        case 2:
          int v27 = *(unsigned __int16 *)v21;
          goto LABEL_35;
        case 3:
          int v27 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_35;
        case 4:
          int v27 = *(_DWORD *)v21;
LABEL_35:
          int v28 = (v27 | (v25 << (8 * v23))) + 2;
          unsigned int v24 = v27 + 2;
          if (v23 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(v21, v5);
    }
    else {
      swift_release();
    }
    unsigned int v29 = v22[v23];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v31 = v23;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v22;
          goto LABEL_49;
        case 2:
          int v32 = *(unsigned __int16 *)v22;
          goto LABEL_49;
        case 3:
          int v32 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_49;
        case 4:
          int v32 = *(_DWORD *)v22;
LABEL_49:
          int v33 = (v32 | (v30 << (8 * v23))) + 2;
          unsigned int v29 = v32 + 2;
          if (v23 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(v21, v22, v5);
      v21[v23] = 1;
    }
    else
    {
      *(void *)uint64_t v21 = *(void *)v22;
      v21[v23] = 0;
      swift_retain();
    }
  }
  uint64_t v34 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 24))((unint64_t)&v21[v23 + 1 + *(unsigned __int8 *)(v34 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (unint64_t)&v22[v23 + 1 + *(unsigned __int8 *)(v34 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return v37;
}

void *sub_100125ADC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ContentSizeCategory();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    int v8 = *(_DWORD *)(v6 + 84);
    unint64_t v9 = *(void *)(v6 + 64);
    if (v8) {
      size_t v10 = *(void *)(v6 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    int v8 = *(_DWORD *)(v6 + 84);
    unint64_t v9 = *(void *)(v6 + 64);
  }
  if (v8) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v9 + 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  int v28 = a1;
  unint64_t v13 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  size_t v14 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v14, 1, v5))
  {
    memcpy(v13, v14, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v13, v14, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
  }
  size_t v15 = (v12 | 7) + v11;
  int v16 = (void *)(((unint64_t)v13 + v15) & ~(v12 | 7));
  int v17 = (unsigned __int8 *)(((unint64_t)v14 + v15) & ~(v12 | 7));
  if (v9 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v9;
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        goto LABEL_25;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        goto LABEL_25;
      case 3:
        int v22 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        goto LABEL_25;
      case 4:
        int v22 = *(_DWORD *)v17;
LABEL_25:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(v16, v17, v5);
    char v24 = 1;
  }
  else
  {
    char v24 = 0;
    *int v16 = *(void *)v17;
  }
  *((unsigned char *)v16 + v1_Block_object_dispose(&STACK[0x358], 8) = v24;
  uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v25 + 32))(((unint64_t)v16 + v18 + *(unsigned __int8 *)(v25 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (unint64_t)&v17[v18 + 1 + *(unsigned __int8 *)(v25 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  return v28;
}

void *sub_100125DDC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ContentSizeCategory();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  unint64_t v13 = *(void *)(v6 + 64);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v14 = *(void *)(v6 + 64);
  }
  else {
    size_t v14 = v13 + 1;
  }
  uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
  size_t v38 = a1;
  int v16 = (void *)(((unint64_t)a1 + v14 + v15) & ~v15);
  int v17 = (void *)(((unint64_t)a2 + v14 + v15) & ~v15);
  int v18 = v7(v16, 1, v5);
  int v19 = v7(v17, 1, v5);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v16, v17, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v16, v5);
LABEL_20:
    memcpy(v16, v17, v14);
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v16, v17, v5);
LABEL_21:
  size_t v20 = (v15 | 7) + v14;
  uint64_t v21 = (unsigned __int8 *)(((unint64_t)v16 + v20) & ~(v15 | 7));
  int v22 = (unsigned __int8 *)(((unint64_t)v17 + v20) & ~(v15 | 7));
  if (v13 <= 8) {
    uint64_t v23 = 8;
  }
  else {
    uint64_t v23 = v13;
  }
  if (v21 != v22)
  {
    unsigned int v24 = v21[v23];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v21;
          goto LABEL_35;
        case 2:
          int v27 = *(unsigned __int16 *)v21;
          goto LABEL_35;
        case 3:
          int v27 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_35;
        case 4:
          int v27 = *(_DWORD *)v21;
LABEL_35:
          int v28 = (v27 | (v25 << (8 * v23))) + 2;
          unsigned int v24 = v27 + 2;
          if (v23 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(v21, v5);
    }
    else {
      swift_release();
    }
    unsigned int v29 = v22[v23];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v31 = v23;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v22;
          goto LABEL_49;
        case 2:
          int v32 = *(unsigned __int16 *)v22;
          goto LABEL_49;
        case 3:
          int v32 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_49;
        case 4:
          int v32 = *(_DWORD *)v22;
LABEL_49:
          int v33 = (v32 | (v30 << (8 * v23))) + 2;
          unsigned int v29 = v32 + 2;
          if (v23 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(v21, v22, v5);
      char v34 = 1;
    }
    else
    {
      char v34 = 0;
      *(void *)uint64_t v21 = *(void *)v22;
    }
    v21[v23] = v34;
  }
  uint64_t v35 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v35 + 40))((unint64_t)&v21[v23 + 1 + *(unsigned __int8 *)(v35 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v35 + 80), (unint64_t)&v22[v23 + 1 + *(unsigned __int8 *)(v35 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  return v38;
}

uint64_t sub_100126270(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for ContentSizeCategory() - 8);
  uint64_t v7 = v6;
  unsigned int v8 = *(_DWORD *)(v6 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  unint64_t v10 = *(void *)(v6 + 64);
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = *(void *)(v6 + 64);
  }
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  if (v9 <= v13) {
    unsigned int v16 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v16 = v9;
  }
  if (v16 <= 0xFE) {
    unsigned int v17 = 254;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v8) {
    unint64_t v18 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v18 = v10 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v18 + v14;
  uint64_t v20 = v14 | 7;
  uint64_t v21 = v11 + v15 + 1;
  BOOL v22 = a2 >= v17;
  unsigned int v23 = a2 - v17;
  if (v23 != 0 && v22)
  {
    uint64_t v24 = ((v21 + ((v20 + v18 + (v19 & ~v14)) & ~v20)) & ~v15) + *(void *)(v12 + 64);
    char v25 = 8 * v24;
    if (v24 <= 3)
    {
      unsigned int v27 = ((v23 + ~(-1 << v25)) >> v25) + 1;
      if (HIWORD(v27))
      {
        int v26 = *(_DWORD *)((char *)a1 + v24);
        if (!v26) {
          goto LABEL_37;
        }
        goto LABEL_27;
      }
      if (v27 > 0xFF)
      {
        int v26 = *(unsigned __int16 *)((char *)a1 + v24);
        if (!*(unsigned __int16 *)((char *)a1 + v24)) {
          goto LABEL_37;
        }
        goto LABEL_27;
      }
      if (v27 < 2) {
        goto LABEL_37;
      }
    }
    int v26 = *((unsigned __int8 *)a1 + v24);
    if (!*((unsigned char *)a1 + v24)) {
      goto LABEL_37;
    }
LABEL_27:
    int v28 = (v26 - 1) << v25;
    if (v24 > 3) {
      int v28 = 0;
    }
    if (v24)
    {
      if (v24 <= 3) {
        int v29 = ((v21 + ((v20 + v18 + (v19 & ~v14)) & ~v20)) & ~v15) + *(_DWORD *)(v12 + 64);
      }
      else {
        int v29 = 4;
      }
      switch(v29)
      {
        case 2:
          int v30 = *a1;
          break;
        case 3:
          int v30 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v30 = *(_DWORD *)a1;
          break;
        default:
          int v30 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v30 = 0;
    }
    return v17 + (v30 | v28) + 1;
  }
LABEL_37:
  if (v9 == v17)
  {
    if (v8 < 2) {
      return 0;
    }
    unsigned int v34 = (*(uint64_t (**)(unsigned __int16 *))(v7 + 48))(a1);
    if (v34 >= 2) {
      return v34 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v32 = ((((unint64_t)a1 + v19) & ~v14) + v18 + v20) & ~v20;
    if (v16 > 0xFE)
    {
      uint64_t v35 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 48);
      return v35((v21 + v32) & ~v15, v13);
    }
    else
    {
      unsigned int v33 = *(unsigned __int8 *)(v32 + v11);
      if (v33 >= 2) {
        return (v33 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
}

void sub_10012654C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v8 = 0;
  uint64_t v9 = *(void *)(type metadata accessor for ContentSizeCategory() - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  unint64_t v12 = *(void *)(v9 + 64);
  if (v12 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v9 + 64);
  }
  uint64_t v14 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  if (v11 <= v15) {
    unsigned int v18 = *(_DWORD *)(v14 + 84);
  }
  else {
    unsigned int v18 = v11;
  }
  if (v18 <= 0xFE) {
    unsigned int v19 = 254;
  }
  else {
    unsigned int v19 = v18;
  }
  if (v10) {
    unint64_t v20 = *(void *)(v9 + 64);
  }
  else {
    unint64_t v20 = v12 + 1;
  }
  size_t v21 = v13 + 1;
  uint64_t v22 = v13 + 1 + v17;
  size_t v23 = ((v22 + (((v16 | 7) + v20 + ((v20 + v16) & ~v16)) & ~(v16 | 7))) & ~v17) + *(void *)(v14 + 64);
  if (a3 <= v19) {
    goto LABEL_24;
  }
  if (v23 <= 3)
  {
    unsigned int v24 = ((a3 - v19 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v24))
    {
      int v8 = 4;
      if (v19 >= a2) {
        goto LABEL_32;
      }
      goto LABEL_25;
    }
    if (v24 >= 0x100) {
      int v8 = 2;
    }
    else {
      int v8 = v24 > 1;
    }
LABEL_24:
    if (v19 >= a2) {
      goto LABEL_32;
    }
    goto LABEL_25;
  }
  int v8 = 1;
  if (v19 >= a2)
  {
LABEL_32:
    switch(v8)
    {
      case 1:
        a1[v23] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      case 2:
        *(_WORD *)&a1[v23] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      case 3:
        goto LABEL_68;
      case 4:
        *(_DWORD *)&a1[v23] = 0;
        goto LABEL_36;
      default:
LABEL_36:
        if (a2)
        {
LABEL_37:
          if (v11 == v19)
          {
            int v28 = *(void (**)(unsigned char *, void))(v9 + 56);
            v28(a1, (a2 + 1));
          }
          else
          {
            int v29 = (unsigned char *)((((unint64_t)&a1[v20 + v16] & ~v16) + v20 + (v16 | 7)) & ~(v16 | 7));
            if (v18 > 0xFE)
            {
              int v30 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 56);
              v30((unint64_t)&v29[v22] & ~v17, a2, v15);
            }
            else if (a2 > 0xFE)
            {
              if (v21 <= 3) {
                int v31 = ~(-1 << (8 * v21));
              }
              else {
                int v31 = -1;
              }
              if (v13 != -1)
              {
                int v32 = v31 & (a2 - 255);
                if (v21 <= 3) {
                  int v33 = v13 + 1;
                }
                else {
                  int v33 = 4;
                }
                bzero(v29, v21);
                switch(v33)
                {
                  case 2:
                    *(_WORD *)int v29 = v32;
                    break;
                  case 3:
                    *(_WORD *)int v29 = v32;
                    _OWORD v29[2] = BYTE2(v32);
                    break;
                  case 4:
                    *(_DWORD *)int v29 = v32;
                    break;
                  default:
                    *int v29 = v32;
                    break;
                }
              }
            }
            else
            {
              v29[v13] = -(char)a2;
            }
          }
        }
        break;
    }
    return;
  }
LABEL_25:
  unsigned int v25 = ~v19 + a2;
  if (v23 < 4)
  {
    int v26 = (v25 >> (8 * v23)) + 1;
    if (v23)
    {
      int v27 = v25 & ~(-1 << (8 * v23));
      bzero(a1, v23);
      if (v23 == 3)
      {
        *(_WORD *)a1 = v27;
        a1[2] = BYTE2(v27);
      }
      else if (v23 == 2)
      {
        *(_WORD *)a1 = v27;
      }
      else
      {
        *a1 = v27;
      }
    }
  }
  else
  {
    bzero(a1, v23);
    *(_DWORD *)a1 = v25;
    int v26 = 1;
  }
  switch(v8)
  {
    case 1:
      a1[v23] = v26;
      break;
    case 2:
      *(_WORD *)&a1[v23] = v26;
      break;
    case 3:
LABEL_68:
      __break(1u);
      JUMPOUT(0x100126948);
    case 4:
      *(_DWORD *)&a1[v23] = v26;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ContentSizeCategoryLimiter()
{
  return sub_1000F5520();
}

void sub_100126998(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1001269F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100126A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000FF33C(&qword_1015CE6E8);
  __chkstk_darwin(v6 - 8);
  uint64_t v57 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v10 = (char *)&v50 - v9;
  uint64_t v11 = type metadata accessor for ContentSizeCategory();
  unint64_t v12 = *(void **)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v54 = (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v50 - v15;
  __chkstk_darwin(v17);
  unsigned int v19 = (char *)&v50 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v50 - v21;
  sub_1000FF27C(v3, (uint64_t)v10, &qword_1015CE6E8);
  id v56 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v56(v10, 1, v11) == 1)
  {
    sub_100127288((uint64_t)v10);
  }
  else
  {
    id v51 = v16;
    uint64_t v55 = a2;
    id v50 = (void (*)(char *, char *, uint64_t))v12[4];
    v50(v22, v10, v11);
    uint64_t v53 = a1;
    sub_100127324(&qword_1015CE6F0, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x8000000100F763B0, (uint64_t)v19);
    uint64_t v23 = static ContentSizeCategory.allCases.getter();
    uint64_t v24 = sub_1002A9290((uint64_t)v19, v23);
    uint64_t v52 = v3;
    char v26 = v25;
    swift_bridgeObjectRelease();
    if (v26) {
      uint64_t v27 = 0;
    }
    else {
      uint64_t v27 = v24;
    }
    uint64_t v28 = static ContentSizeCategory.allCases.getter();
    uint64_t v29 = sub_1002A9290((uint64_t)v22, v28);
    char v31 = v30;
    swift_bridgeObjectRelease();
    if (v31) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = v29;
    }
    int v33 = (void (*)(char *, uint64_t))v12[1];
    v33(v19, v11);
    if (v27 < v32) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v50)(v55, v22, v11);
    }
    v33(v22, v11);
    a2 = v55;
    uint64_t v3 = v52;
    a1 = v53;
    uint64_t v16 = v51;
  }
  id v36 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v56;
  uint64_t v35 = v57;
  sub_1000FF27C(v3 + *(int *)(a1 + 36), v57, &qword_1015CE6E8);
  if (v36(v35, 1, v11) == 1)
  {
    sub_100127288(v35);
  }
  else
  {
    uint64_t v55 = a2;
    id v37 = v12;
    size_t v38 = (void (*)(char *, uint64_t, uint64_t))v12[4];
    v38(v16, v35, v11);
    uint64_t v52 = v3;
    uint64_t v53 = a1;
    uint64_t v39 = v54;
    sub_100127324(&qword_1015CE6F0, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x8000000100F763B0, v54);
    uint64_t v40 = static ContentSizeCategory.allCases.getter();
    uint64_t v41 = sub_1002A9290(v39, v40);
    char v43 = v42;
    swift_bridgeObjectRelease();
    if (v43) {
      uint64_t v44 = 0;
    }
    else {
      uint64_t v44 = v41;
    }
    uint64_t v45 = static ContentSizeCategory.allCases.getter();
    uint64_t v46 = sub_1002A9290((uint64_t)v16, v45);
    char v48 = v47;
    swift_bridgeObjectRelease();
    if (v48) {
      uint64_t v46 = 0;
    }
    id v49 = (void (*)(uint64_t, uint64_t))v37[1];
    v49(v39, v11);
    if (v46 < v44) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v38)(v55, v16, v11);
    }
    v49((uint64_t)v16, v11);
    a2 = v55;
  }
  return sub_100127324(&qword_1015CE6F0, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x8000000100F763B0, a2);
}

uint64_t sub_100126F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = type metadata accessor for ContentSizeCategory();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010118C(&qword_1015CE6D8);
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v24 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v24 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, v2 + *(int *)(a1 + 44), v7, v16);
  swift_getKeyPath();
  sub_100126A3C(a1, (uint64_t)v6);
  uint64_t v19 = *(void *)(a1 + 24);
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  unint64_t v20 = sub_10012722C();
  uint64_t v28 = v19;
  unint64_t v29 = v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100254BFC(v14, v12, WitnessTable);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v24 + 8);
  v22(v14, v12);
  sub_100254BFC(v18, v12, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v22)(v18, v12);
}

uint64_t sub_100127204()
{
  return static View._viewListCount(inputs:)();
}

unint64_t sub_10012722C()
{
  unint64_t result = qword_1015CE6E0;
  if (!qword_1015CE6E0)
  {
    sub_10010118C(&qword_1015CE6D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE6E0);
  }
  return result;
}

uint64_t sub_100127288(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015CE6E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001272E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100127324(&qword_1015CE6F8, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_100127324@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000FF33C(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF27C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    uint64_t v21 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_1000F2280(v27, v25, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1001275DC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10012765C(a1, a2, a3, &qword_1015CE700, (void (*)(void, void, void))sub_100127C58);
}

uint64_t sub_1001275FC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10012765C(a1, a2, a3, &qword_1015CE708, (void (*)(void, void, void))sub_100127C58);
}

uint64_t sub_10012761C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10012765C(a1, a2, a3, &qword_1015CE710, (void (*)(void, void, void))sub_100127C58);
}

uint64_t sub_10012763C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10012765C(a1, a2, a3, &qword_1015CE718, (void (*)(void, void, void))sub_100127C58);
}

uint64_t sub_10012765C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, void (*a5)(void, void, void))
{
  uint64_t v10 = type metadata accessor for EnvironmentValues();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    os_log_type_t v14 = static os_log_type_t.fault.getter();
    uint64_t v15 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v15, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v23 = a5;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v25 = v22;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v21 = v17 + 4;
      sub_1000FF33C(a4);
      uint64_t v18 = _typeName(_:qualified:)();
      uint64_t v24 = sub_1000F2280(v18, v19, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a5 = v23;
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    a5(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v25;
  }
  return a1;
}

uint64_t sub_1001278A0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100127964(a1, a2, a3, 0x3E2D2029746E4928, 0xEB00000000292820, (void (*)(void, void, void))sub_100127C58);
}

uint64_t sub_1001278D4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100127964(a1, a2, a3, 0xD00000000000002CLL, 0x8000000100F763F0, (void (*)(void, void, void))sub_100127C4C);
}

uint64_t sub_100127904(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100127964(a1, a2, a3, 0xD000000000000016, 0x8000000100F76420, (void (*)(void, void, void))sub_100127C58);
}

uint64_t sub_100127934(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100127964(a1, a2, a3, 0xD000000000000011, 0x8000000100F763D0, (void (*)(void, void, void))sub_100127C58);
}

uint64_t sub_100127964(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, void (*a6)(void, void, void))
{
  uint64_t v12 = type metadata accessor for EnvironmentValues();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_retain();
  }
  else
  {
    uint64_t v25 = a4;
    swift_retain();
    os_log_type_t v16 = static os_log_type_t.fault.getter();
    uint64_t v17 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v17, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      unint64_t v23 = a5;
      unint64_t v19 = (uint8_t *)v18;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v24 = a6;
      uint64_t v27 = v20;
      *(_DWORD *)unint64_t v19 = 136315138;
      v22[1] = v19 + 4;
      uint64_t v26 = sub_1000F2280(v25, v23, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v19, 0xCu);
      swift_arrayDestroy();
      a6 = v24;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    a6(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return v27;
  }
  return a1;
}

uint64_t sub_100127B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_100127324(&qword_1015CE720, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_100127BDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_100127C4C()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitRecent()
{
  return &type metadata for PlaceSummaryUnitRecent;
}

BOOL sub_100127C6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100127C80(void *a1)
{
  unsigned int v2 = [a1 type];
  if (!v2) {
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    uint64_t v3 = 0;
    goto LABEL_7;
  }
  if (v2 != 2)
  {
LABEL_5:

    return 0;
  }
  uint64_t v3 = 1;
LABEL_7:
  uint64_t v4 = (char *)[a1 allowedHoursStatesCount];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = 0;
    uint64_t v7 = _swiftEmptyArrayStorage;
    do
    {
      unsigned int v8 = [a1 allowedHoursStateAtIndex:v6] - 1;
      if (v8 < 7)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1001CF52C(0, v7[2] + 1, 1, v7);
        }
        unint64_t v10 = v7[2];
        unint64_t v9 = v7[3];
        if (v10 >= v9 >> 1) {
          uint64_t v7 = sub_1001CF52C((void *)(v9 > 1), v10 + 1, 1, v7);
        }
        _OWORD v7[2] = v10 + 1;
        *((unsigned char *)v7 + v10 + 32) = v8;
      }
      ++v6;
    }
    while (v5 != v6);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }

  if (!v7[2]) {
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryUnitHours.PlaceSummaryUnitHoursState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PlaceSummaryUnitHours.PlaceSummaryUnitHoursState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100127F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

unsigned char *sub_100127F64(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHours.PlaceSummaryUnitHoursState()
{
  return &type metadata for PlaceSummaryUnitHours.PlaceSummaryUnitHoursState;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaceSummaryUnitHours(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PlaceSummaryUnitSecondaryName()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for PlaceSummaryUnitHours(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PlaceSummaryUnitHours(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryUnitSecondaryName(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryUnitSecondaryName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHours()
{
  return &type metadata for PlaceSummaryUnitHours;
}

unint64_t sub_1001280FC()
{
  unint64_t result = qword_1015CE728;
  if (!qword_1015CE728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE728);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlaceSummaryUnitHours.PlaceSummaryUnitHoursType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012821CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHours.PlaceSummaryUnitHoursType()
{
  return &type metadata for PlaceSummaryUnitHours.PlaceSummaryUnitHoursType;
}

unint64_t sub_100128258()
{
  unint64_t result = qword_1015CE730;
  if (!qword_1015CE730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE730);
  }
  return result;
}

void *sub_1001282B0()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC4Maps23TransitSchedulesContext_viewController);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return _swiftEmptyArrayStorage;
}

void sub_100128460(void *a1, void *a2)
{
  id v3 = [a1 iosBasedChromeViewController];
  if (v3)
  {
    unsigned int v4 = v3;
    [v3 updateViewMode:3 animated:1 preserveMapSelection:1];
  }
  id v5 = [a2 mapView];
  if (v5)
  {
    id v6 = v5;
    [v5 _setApplicationState:7];
  }
}

uint64_t sub_10012863C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10012867C()
{
  sub_100128460(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitUserNote()
{
  return &type metadata for PlaceSummaryUnitUserNote;
}

id sub_1001287C4()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_10012882C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  BOOL v7 = (uint64_t *)(a1 + *a4);
  *BOOL v7 = v6;
  v7[1] = v8;

  return swift_bridgeObjectRelease();
}

id sub_1001289B0()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SearchHomeUserGuidesDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for SearchHomeUserGuidesDataProvider()
{
  return self;
}

void sub_100128A6C(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = v1 + OBJC_IVAR____TtC4Maps32SearchHomeUserGuidesDataProvider_objects;
    swift_beginAccess();
    if (*(void *)(*(void *)v3 + 16) > a1)
    {
      sub_1000F2354(*(void *)v3 + 32 * a1 + 32, (uint64_t)v11);
      type metadata accessor for SearchHomeUserGuidesCellViewModel();
      if (swift_dynamicCast())
      {
        unsigned int v4 = v12;
        id v5 = *(void **)&v12[OBJC_IVAR____TtC4Maps33SearchHomeUserGuidesCellViewModel_collections];
        uint64_t v6 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v7 = swift_allocObject();
        *(void *)(v7 + 16) = v6;
        *(void *)(v7 + 24) = a1;
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = sub_100128DA4;
        *(void *)(v8 + 24) = v7;
        void v11[4] = sub_100128DE4;
        uint64_t v11[5] = v8;
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 1107296256;
        void v11[2] = sub_100316A20;
        _OWORD v11[3] = &unk_1012D9B00;
        unint64_t v9 = _Block_copy(v11);
        id v10 = v5;
        swift_release();
        [v10 deleteCollection:v9];
        _Block_release(v9);
      }
    }
  }
}

uint64_t sub_100128C30(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (!result)
  {
    uint64_t v9 = v3;
    uint64_t v10 = v4;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v7 = (void *)Strong;
      swift_beginAccess();
      sub_1002ACEC0(a3, v8);
      swift_endAccess();
    }
    else
    {
      memset(v8, 0, sizeof(v8));
    }
    return sub_1001189D4((uint64_t)v8);
  }
  return result;
}

uint64_t sub_100128D34()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100128D6C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100128DA4(uint64_t a1)
{
  return sub_100128C30(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100128DAC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100128DE4(uint64_t a1)
{
  return sub_1003169F8(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_100128E74()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = Strong;
    unsigned int v2 = [Strong isTopContext:v0];
    uint64_t v3 = v6;
    if (v2)
    {
      if ([*(id *)(*(void *)(v0 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration)+ OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem) isCurrentLocation])
      {
        [v6 popContext:v0 animated:1 completion:0];
      }
      else
      {
        id v4 = [v6 mapSelectionManager];
        if (!v4)
        {
          __break(1u);
          return;
        }
        id v5 = v4;
        [v4 clearSelection];
      }
      uint64_t v3 = v6;
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PlaceSummaryView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for PlaceSummaryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for PlaceSummaryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryView()
{
  return &type metadata for PlaceSummaryView;
}

uint64_t sub_100129108()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100129124()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100129148(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentSizeCategory();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.sizeCategory.setter();
}

void sub_100129210(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v5 = sub_1000FF33C(&qword_1015CE6E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v40 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v48 = sub_1000FF33C(&qword_1015CE858);
  __chkstk_darwin(v48);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v47 = (uint64_t)&v40 - v16;
  uint64_t v17 = sub_1000FF33C(&qword_1015CE860);
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000FF33C(&qword_1015CE868);
  __chkstk_darwin(v49);
  uint64_t v21 = (uint64_t *)((char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_1000FF33C(&qword_1015CE870);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    EnvironmentObject.error()();
    __break(1u);
LABEL_11:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  int v25 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase);
  if (v25 != 1)
  {
    if (v25 == 2)
    {
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      char v31 = (void *)EnvironmentObject.init()();
      void *v21 = v31;
      v21[1] = v32;
      swift_storeEnumTagMultiPayload();
      sub_1001299F8();
      sub_1001010F8(&qword_1015CE880, &qword_1015CE858);
      id v33 = v31;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C((uint64_t)v24, (uint64_t)v19, &qword_1015CE870);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CE888);
      sub_100129A4C();
      sub_1001010F8(&qword_1015CE898, &qword_1015CE888);
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0((uint64_t)v24, &qword_1015CE870);

      return;
    }
    goto LABEL_11;
  }
  uint64_t v43 = v17;
  uint64_t v44 = v22;
  uint64_t v45 = a3;
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t v26 = EnvironmentObject.init()();
  uint64_t v41 = v27;
  uint64_t v42 = v26;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_searchAlongRoute) == 1)
  {
    uint64_t v28 = enum case for ContentSizeCategory.extraLarge(_:);
    uint64_t v29 = type metadata accessor for ContentSizeCategory();
    uint64_t v30 = *(void *)(v29 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v12, v28, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v12, 0, 1, v29);
  }
  else
  {
    uint64_t v29 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 1, 1, v29);
  }
  sub_1000FF27C((uint64_t)v12, (uint64_t)v9, &qword_1015CE6E8);
  type metadata accessor for ContentSizeCategory();
  uint64_t v34 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v46, 1, 1, v29);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v48;
  *(void *)&v14[*(int *)(v48 + 40)] = KeyPath;
  sub_1000FF33C(&qword_1015CE6F0);
  swift_storeEnumTagMultiPayload();
  id v37 = &v14[*(int *)(v36 + 44)];
  uint64_t v38 = v41;
  *(void *)id v37 = v42;
  *((void *)v37 + 1) = v38;
  sub_100101750((uint64_t)v9, (uint64_t)v14, &qword_1015CE6E8);
  sub_100101750(v34, (uint64_t)&v14[*(int *)(v36 + 36)], &qword_1015CE6E8);
  sub_1000FF2E0((uint64_t)v12, &qword_1015CE6E8);
  uint64_t v39 = v47;
  sub_100101750((uint64_t)v14, v47, &qword_1015CE858);
  sub_1000FF27C(v39, (uint64_t)v21, &qword_1015CE858);
  swift_storeEnumTagMultiPayload();
  sub_1001299F8();
  sub_1001010F8(&qword_1015CE880, &qword_1015CE858);
  _ConditionalContent<>.init(storage:)();
  sub_1000FF27C((uint64_t)v24, (uint64_t)v19, &qword_1015CE870);
  swift_storeEnumTagMultiPayload();
  sub_1000FF33C(&qword_1015CE888);
  sub_100129A4C();
  sub_1001010F8(&qword_1015CE898, &qword_1015CE888);
  _ConditionalContent<>.init(storage:)();
  sub_1000FF2E0((uint64_t)v24, &qword_1015CE870);
  sub_1000FF2E0(v39, &qword_1015CE858);
}

void sub_1001299C4(uint64_t a1@<X8>)
{
  sub_100129210(*v1, v1[1], a1);
}

uint64_t sub_1001299D0()
{
  return EnvironmentValues.sizeCategory.getter();
}

unint64_t sub_1001299F8()
{
  unint64_t result = qword_1015CE878;
  if (!qword_1015CE878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE878);
  }
  return result;
}

unint64_t sub_100129A4C()
{
  unint64_t result = qword_1015CE890;
  if (!qword_1015CE890)
  {
    sub_10010118C(&qword_1015CE870);
    sub_1001299F8();
    sub_1001010F8(&qword_1015CE880, &qword_1015CE858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE890);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PlaceSummaryView.Autocomplete(void *a1, uint64_t a2)
{
  __n128 v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for PlaceSummaryView.Autocomplete(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for PlaceSummaryView.Autocomplete(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for PlaceSummaryView.Autocomplete()
{
  return &type metadata for PlaceSummaryView.Autocomplete;
}

uint64_t _s4Maps16PlaceSummaryViewV12AutocompleteVwet_0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s4Maps16PlaceSummaryViewV12AutocompleteVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryView.SearchResult()
{
  return &type metadata for PlaceSummaryView.SearchResult;
}

unint64_t sub_100129C80()
{
  unint64_t result = qword_1015CE8A0;
  if (!qword_1015CE8A0)
  {
    sub_10010118C(&qword_1015CE8A8);
    sub_100129A4C();
    sub_1001010F8(&qword_1015CE898, &qword_1015CE888);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE8A0);
  }
  return result;
}

uint64_t sub_100129D20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100129D3C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v122 = a3;
  uint64_t v108 = type metadata accessor for Divider();
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000FF33C(&qword_1015CE8B0);
  uint64_t v118 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v105 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015CE8B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v121 = (uint64_t)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v119 = (char *)&v103 - v10;
  uint64_t v11 = sub_1000FF33C(&qword_1015CE8C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000FF33C(&qword_1015CE8C8);
  __chkstk_darwin(v109);
  uint64_t v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000FF33C(&qword_1015CE8D0);
  __chkstk_darwin(v110);
  uint64_t v17 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1000FF33C(&qword_1015CE8D8);
  __chkstk_darwin(v111);
  uint64_t v113 = (uint64_t)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000FF33C(&qword_1015CE8E0);
  __chkstk_darwin(v112);
  uint64_t v124 = (uint64_t)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000FF33C(&qword_1015CE8E8);
  __chkstk_darwin(v20);
  uint64_t v117 = (uint64_t)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v114 = (uint64_t)&v103 - v23;
  __chkstk_darwin(v24);
  uint64_t v123 = (char *)&v103 - v25;
  uint64_t v26 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  unint64_t v116 = a1;
  uint64_t v29 = a1;
  uint64_t v30 = sub_1001A0CB8(1);

  char v31 = v29;
  sub_1001A0F48((uint64_t)v28);

  int IsEnabled_SearchAndDiscovery = MapsFeature_IsEnabled_SearchAndDiscovery();
  uint64_t v115 = v20;
  if ((IsEnabled_SearchAndDiscovery & 1) == 0
    || !*(void *)&v31[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics])
  {
    double v35 = 64.0;
    uint64_t v36 = *(void *)&v31[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics];
    if (!v36) {
      goto LABEL_5;
    }
LABEL_7:
    char v37 = *(unsigned char *)(v36 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_showsDivider);
    goto LABEL_8;
  }
  swift_getKeyPath();
  uint64_t v104 = a2;
  swift_getKeyPath();
  id v33 = v28;
  uint64_t v34 = v31;
  static Published.subscript.getter();

  uint64_t v28 = v33;
  a2 = v104;
  swift_release();
  swift_release();
  double v35 = v125 * 0.203562341;
  uint64_t v36 = *(void *)&v31[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics];
  if (v36) {
    goto LABEL_7;
  }
LABEL_5:
  char v37 = 0;
LABEL_8:
  *(void *)uint64_t v13 = static HorizontalAlignment.leading.getter();
  *((void *)v13 + 1) = 0x4030000000000000;
  uint8_t v13[16] = 0;
  uint64_t v38 = (uint64_t)&v13[*(int *)(sub_1000FF33C(&qword_1015CE8F0) + 44)];
  uint64_t v39 = v116;
  unint64_t v116 = v28;
  sub_10012A70C(v39, a2, IsEnabled_SearchAndDiscovery, (uint64_t)v28, v30, v38, v35);
  swift_bridgeObjectRelease();
  sub_1000FF27C((uint64_t)v13, (uint64_t)v15, &qword_1015CE8C0);
  uint64_t v40 = &v15[*(int *)(v109 + 36)];
  *(void *)uint64_t v40 = 0xD000000000000014;
  *((void *)v40 + 1) = 0x8000000100F76570;
  v40[16] = 9;
  sub_1000FF2E0((uint64_t)v13, &qword_1015CE8C0);
  char v41 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_1000FF27C((uint64_t)v15, (uint64_t)v17, &qword_1015CE8C8);
  id v50 = &v17[*(int *)(v110 + 36)];
  *id v50 = v41;
  *((void *)v50 + 1) = v43;
  *((void *)v50 + 2) = v45;
  *((void *)v50 + 3) = v47;
  *((void *)v50 + 4) = v49;
  v50[40] = 0;
  sub_1000FF2E0((uint64_t)v15, &qword_1015CE8C8);
  char v51 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v60 = v113;
  sub_1000FF27C((uint64_t)v17, v113, &qword_1015CE8D0);
  uint64_t v61 = v60 + *(int *)(v111 + 36);
  *(unsigned char *)uint64_t v61 = v51;
  *(void *)(v61 + _Block_object_dispose(&STACK[0x358], 8) = v53;
  *(void *)(v61 + 16) = v55;
  *(void *)(v61 + 24) = v57;
  *(void *)(v61 + 32) = v59;
  *(unsigned char *)(v61 + ++*(void *)(*((void *)result + 4) + 40) = 0;
  sub_1000FF2E0((uint64_t)v17, &qword_1015CE8D0);
  char v62 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v71 = v124;
  sub_1000FF27C(v60, v124, &qword_1015CE8D8);
  uint64_t v72 = v71 + *(int *)(v112 + 36);
  *(unsigned char *)uint64_t v72 = v62;
  *(void *)(v72 + _Block_object_dispose(&STACK[0x358], 8) = v64;
  *(void *)(v72 + 16) = v66;
  *(void *)(v72 + 24) = v68;
  *(void *)(v72 + 32) = v70;
  *(unsigned char *)(v72 + ++*(void *)(*((void *)result + 4) + 40) = 0;
  sub_1000FF2E0(v60, &qword_1015CE8D8);
  if (*(void *)&v31[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_backgroundColor]) {
    uint64_t v73 = *(void *)&v31[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_backgroundColor];
  }
  else {
    uint64_t v73 = static Color.clear.getter();
  }
  uint64_t v75 = (uint64_t)v119;
  uint64_t v74 = v120;
  uint64_t v76 = v118;
  uint64_t v77 = (uint64_t)v123;
  swift_retain();
  char v78 = static Edge.Set.all.getter();
  uint64_t v79 = v124;
  uint64_t v80 = v114;
  sub_1000FF27C(v124, v114, &qword_1015CE8E0);
  uint64_t v81 = v80 + *(int *)(v115 + 36);
  *(void *)uint64_t v81 = v73;
  *(unsigned char *)(v81 + _Block_object_dispose(&STACK[0x358], 8) = v78;
  sub_1000FF2E0(v79, &qword_1015CE8E0);
  sub_100101750(v80, v77, &qword_1015CE8E8);
  if (v37)
  {
    uint64_t v82 = v106;
    Divider.init()();
    char v83 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    uint64_t v91 = v90;
    uint64_t v92 = v107;
    char v93 = v105;
    uint64_t v94 = v108;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v105, v82, v108);
    uint64_t v95 = &v93[*(int *)(v74 + 36)];
    *uint64_t v95 = v83;
    *((void *)v95 + 1) = v85;
    *((void *)v95 + 2) = v87;
    *((void *)v95 + 3) = v89;
    *((void *)v95 + 4) = v91;
    v95[40] = 0;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v82, v94);
    uint64_t v96 = (uint64_t)v93;
    uint64_t v77 = (uint64_t)v123;
    sub_100101750(v96, v75, &qword_1015CE8B0);
    uint64_t v97 = 0;
  }
  else
  {
    uint64_t v97 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v75, v97, 1, v74);
  uint64_t v98 = v117;
  sub_1000FF27C(v77, v117, &qword_1015CE8E8);
  uint64_t v99 = v121;
  sub_1000FF27C(v75, v121, &qword_1015CE8B8);
  uint64_t v100 = v122;
  sub_1000FF27C(v98, v122, &qword_1015CE8E8);
  uint64_t v101 = sub_1000FF33C(&qword_1015CE8F8);
  sub_1000FF27C(v99, v100 + *(int *)(v101 + 48), &qword_1015CE8B8);
  sub_1000FF2E0(v75, &qword_1015CE8B8);
  sub_1000FF2E0(v77, &qword_1015CE8E8);
  sub_1000FF2E0((uint64_t)v116, (uint64_t *)&unk_1015D59D0);
  sub_1000FF2E0(v99, &qword_1015CE8B8);
  return sub_1000FF2E0(v98, &qword_1015CE8E8);
}

uint64_t sub_10012A70C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v76 = a6;
  uint64_t v77 = a5;
  uint64_t v80 = a1;
  uint64_t v69 = _s4LineVMa(0);
  __chkstk_darwin(v69);
  uint64_t v71 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015CE900);
  uint64_t v74 = *(void *)(v12 - 8);
  uint64_t v75 = v12;
  __chkstk_darwin(v12);
  uint64_t v70 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v78 = *(void *)(v17 - 8);
  uint64_t v79 = v17;
  __chkstk_darwin(v17);
  uint64_t v68 = (uint64_t)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015CE908);
  __chkstk_darwin(v19 - 8);
  uint64_t v73 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v72 = (uint64_t)&v67 - v22;
  uint64_t v23 = sub_1000FF33C(&qword_1015CE910);
  __chkstk_darwin(v23 - 8);
  uint64_t v82 = (uint64_t)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v67 - v26;
  uint64_t v28 = sub_1000FF33C(&qword_1015CE918);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000FF33C(&qword_1015CE920);
  uint64_t v32 = v31 - 8;
  __chkstk_darwin(v31);
  uint64_t v81 = (uint64_t)&v67 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v67 - v35;
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v67 - v38;
  *(void *)uint64_t v30 = static VerticalAlignment.center.getter();
  *((void *)v30 + 1) = 0;
  v30[16] = 0;
  uint64_t v40 = sub_1000FF33C(&qword_1015CE928);
  uint64_t v41 = a2;
  uint64_t v42 = a4;
  uint64_t v43 = a4;
  uint64_t v44 = v77;
  sub_10012AE58(v80, v41, a3, v43, v77, (uint64_t)&v30[*(int *)(v40 + 44)], a7);
  sub_1000FF27C((uint64_t)v30, (uint64_t)v36, &qword_1015CE918);
  uint64_t v45 = &v36[*(int *)(v32 + 44)];
  *(void *)uint64_t v45 = 0xD000000000000018;
  *((void *)v45 + 1) = 0x8000000100F76590;
  v45[16] = 9;
  sub_1000FF2E0((uint64_t)v30, &qword_1015CE918);
  uint64_t v80 = v39;
  sub_100101750((uint64_t)v36, (uint64_t)v39, &qword_1015CE920);
  if ((a3 & 1) != 0 || !*(void *)(v44 + 16))
  {
    uint64_t v47 = sub_1000FF33C(&qword_1015CE930);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v27, 1, 1, v47);
  }
  else
  {
    sub_10012C70C(v44, (uint64_t)v27);
    uint64_t v46 = sub_1000FF33C(&qword_1015CE930);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v27, 0, 1, v46);
  }
  uint64_t v48 = (uint64_t)v27;
  sub_1000FF27C(v42, (uint64_t)v16, (uint64_t *)&unk_1015D59D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v16, 1, v79) == 1)
  {
    sub_1000FF2E0((uint64_t)v16, (uint64_t *)&unk_1015D59D0);
    uint64_t v49 = 1;
    uint64_t v50 = v75;
    uint64_t v51 = v76;
    uint64_t v53 = (uint64_t)v73;
    uint64_t v52 = v74;
    uint64_t v54 = v72;
  }
  else
  {
    uint64_t v55 = v68;
    sub_10012E2C8((uint64_t)v16, v68);
    uint64_t v56 = v48;
    uint64_t v57 = v71;
    sub_10012E6FC(v55, v71, type metadata accessor for PlaceSummaryViewModelLine);
    uint64_t v58 = (uint64_t)v70;
    *(unsigned char *)(v57 + *(int *)(v69 + 20)) = 0;
    sub_10012E6FC(v57, v58, _s4LineVMa);
    uint64_t v50 = v75;
    uint64_t v59 = v58 + *(int *)(v75 + 36);
    *(void *)uint64_t v59 = 0xD000000000000011;
    *(void *)(v59 + _Block_object_dispose(&STACK[0x358], 8) = 0x8000000100F765B0;
    *(unsigned char *)(v59 + 16) = 9;
    uint64_t v60 = v57;
    uint64_t v48 = v56;
    sub_10012E764(v60, _s4LineVMa);
    sub_10012E764(v55, type metadata accessor for PlaceSummaryViewModelLine);
    uint64_t v54 = v72;
    sub_100101750(v58, v72, &qword_1015CE900);
    uint64_t v49 = 0;
    uint64_t v51 = v76;
    uint64_t v53 = (uint64_t)v73;
    uint64_t v52 = v74;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v54, v49, 1, v50);
  uint64_t v61 = (uint64_t)v80;
  uint64_t v62 = v81;
  sub_1000FF27C((uint64_t)v80, v81, &qword_1015CE920);
  uint64_t v63 = v82;
  sub_1000FF27C(v48, v82, &qword_1015CE910);
  sub_1000FF27C(v54, v53, &qword_1015CE908);
  sub_1000FF27C(v62, v51, &qword_1015CE920);
  uint64_t v64 = v48;
  uint64_t v65 = sub_1000FF33C(&qword_1015CE938);
  sub_1000FF27C(v63, v51 + *(int *)(v65 + 48), &qword_1015CE910);
  sub_1000FF27C(v53, v51 + *(int *)(v65 + 64), &qword_1015CE908);
  sub_1000FF2E0(v54, &qword_1015CE908);
  sub_1000FF2E0(v64, &qword_1015CE910);
  sub_1000FF2E0(v61, &qword_1015CE920);
  sub_1000FF2E0(v53, &qword_1015CE908);
  sub_1000FF2E0(v63, &qword_1015CE910);
  return sub_1000FF2E0(v62, &qword_1015CE920);
}

uint64_t sub_10012AE58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v161 = a4;
  uint64_t v162 = a5;
  LODWORD(v164) = a3;
  uint64_t v163 = a2;
  uint64_t v169 = a6;
  uint64_t v157 = sub_1000FF33C(&qword_1015CE980);
  __chkstk_darwin(v157);
  uint64_t v10 = (Class *)((char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000FF33C(&qword_1015CE988);
  __chkstk_darwin(v11);
  uint64_t v154 = (Class *)((char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1000FF33C(&qword_1015CE990);
  __chkstk_darwin(v13);
  uint64_t v155 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1000FF33C(&qword_1015CFF60);
  __chkstk_darwin(v146);
  uint64_t v149 = (uint64_t)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v144);
  uint64_t v147 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1000FF33C(&qword_1015CE998);
  __chkstk_darwin(v145);
  uint64_t v150 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_1000FF33C(&qword_1015CE9A0);
  __chkstk_darwin(v152);
  uint64_t v148 = (uint64_t)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v151 = (uint64_t)&v134 - v20;
  uint64_t v21 = sub_1000FF33C(&qword_1015CE9A8);
  uint64_t v165 = *(void *)(v21 - 8);
  uint64_t v166 = v21;
  __chkstk_darwin(v21);
  uint64_t v156 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000FF33C(&qword_1015CE9B0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v134 - v27;
  uint64_t v29 = sub_1000FF33C(&qword_1015CE9B8);
  __chkstk_darwin(v29 - 8);
  uint64_t v167 = (uint64_t)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v134 - v32;
  __chkstk_darwin(v34);
  uint64_t v170 = (uint64_t)&v134 - v35;
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v160 = a1;
    id v36 = a1;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v37 = (objc_class *)v186[0];
    uint64_t v168 = v25;
    uint64_t v158 = v13;
    unsigned __int8 v159 = v10;
    uint64_t v153 = v11;
    if ((~v186[0] & 0xF000000000000007) != 0)
    {
      sub_10012E3D8(v186[0]);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v38 = (ListInteractionSession *)v186[25];
      char v39 = v187;
      uint64_t v40 = v188;
      char v41 = v189;
      uint64_t v140 = v191;
      uint64_t v141 = v190;
      int v139 = static Edge.Set.leading.getter();
      EdgeInsets.init(_all:)();
      uint64_t v137 = v43;
      uint64_t v138 = v42;
      int64_t v135 = v45;
      Swift::Int v136 = v44;
      uint64_t v46 = v28;
      char v47 = static Edge.Set.trailing.getter();
      EdgeInsets.init(_all:)();
      uint64_t v49 = v48;
      uint64_t v51 = v50;
      uint64_t v53 = v52;
      double v142 = a7;
      uint64_t v55 = v54;
      v173[0] = v39;
      LOBYTE(v192) = v41;
      char v172 = 0;
      char v171 = 0;
      char v56 = static Edge.Set.vertical.getter();
      EdgeInsets.init(_all:)();
      uint64_t v58 = v57;
      uint64_t v60 = v59;
      uint64_t v62 = v61;
      uint64_t v64 = v63;
      sub_10012E49C((unint64_t)v37);
      v174[0] = 0;
      v175.super.Class isa = v37;
      v175._currentListInteractionSession = v38;
      uint64_t v25 = v168;
      LOBYTE(v175._dateActive) = v173[0];
      v175._proactiveItemAddDates = v40;
      LOBYTE(v175._dragItem) = (_BYTE)v192;
      v175._previewView = v141;
      v175._currentDragSession = v140;
      LOBYTE(v175._locationManager) = v139;
      *(void *)&v175._eventProactiveSuggestionInteractionSent = v138;
      v175._tableView = v137;
      v175._collectionView = v136;
      v175._presentationStyle = v135;
      LOBYTE(v175._currentLocation) = v172;
      LOBYTE(v175._delegate) = v47;
      uint64_t v28 = v46;
      v175._keyCommands = v49;
      uint64_t v176 = v51;
      uint64_t v177 = v53;
      uint64_t v178 = v55;
      char v179 = v171;
      char v180 = v56;
      uint64_t v181 = v58;
      uint64_t v182 = v60;
      uint64_t v183 = v62;
      uint64_t v184 = v64;
      char v185 = 0;
      CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:)(&v175, v65);
    }
    else
    {
      sub_10012E37C((uint64_t)&v175);
    }
    sub_100101750((uint64_t)&v175, (uint64_t)v186, &qword_1015CE9C0);
    uint64_t v66 = static HorizontalAlignment.leading.getter();
    char v67 = (char)v164;
    uint64_t v68 = 0x4000000000000000;
    if (v164) {
      uint64_t v68 = 0x3FF0000000000000;
    }
    *(void *)uint64_t v33 = v66;
    *((void *)v33 + 1) = v68;
    v33[16] = 0;
    uint64_t v69 = sub_1000FF33C(&qword_1015CE9C8);
    sub_10012BC68(v160, v163, v161, v67 & 1, v162, &v33[*(int *)(v69 + 44)]);
    sub_100101750((uint64_t)v33, v170, &qword_1015CE9B8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v70 = v36;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    Class isa = v175.super.isa;
    if ((~(uint64_t)v175.super.isa & 0xF000000000000007) == 0)
    {
      uint64_t v72 = 1;
LABEL_17:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v165 + 56))(v28, v72, 1, v166);
      sub_100101750((uint64_t)v186, (uint64_t)v173, &qword_1015CE9C0);
      uint64_t v128 = v170;
      uint64_t v129 = v167;
      sub_1000FF27C(v170, v167, &qword_1015CE9B8);
      sub_1000FF27C((uint64_t)v28, (uint64_t)v25, &qword_1015CE9B0);
      sub_100101750((uint64_t)v173, (uint64_t)v174, &qword_1015CE9C0);
      uint64_t v130 = v169;
      sub_100101750((uint64_t)v174, v169, &qword_1015CE9C0);
      uint64_t v131 = (int *)sub_1000FF33C(&qword_1015CE9D0);
      sub_1000FF27C(v129, v130 + v131[12], &qword_1015CE9B8);
      uint64_t v132 = v130 + v131[16];
      *(void *)uint64_t v132 = 0;
      *(unsigned char *)(v132 + _Block_object_dispose(&STACK[0x358], 8) = 0;
      sub_1000FF27C((uint64_t)v25, v130 + v131[20], &qword_1015CE9B0);
      sub_10012E420((uint64_t)v174, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10012E3C4);
      sub_1000FF2E0((uint64_t)v28, &qword_1015CE9B0);
      sub_1000FF2E0(v128, &qword_1015CE9B8);
      sub_1000FF2E0((uint64_t)v25, &qword_1015CE9B0);
      sub_1000FF2E0(v129, &qword_1015CE9B8);
      sub_100101750((uint64_t)v173, (uint64_t)&v175, &qword_1015CE9C0);
      return sub_10012E420((uint64_t)&v175, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10012E49C);
    }
    unint64_t v73 = (unint64_t)v175.super.isa >> 61;
    uint64_t v143 = v28;
    if (((unint64_t)v175.super.isa >> 61) - 1 < 2)
    {
      sub_10012E3D8((unint64_t)v175.super.isa);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v103 = v192;
      unsigned __int8 v104 = v193;
      uint64_t v105 = v194;
      char v106 = v195;
      uint64_t v107 = v196;
      uint64_t v108 = v197;
      char v109 = static Edge.Set.leading.getter();
      EdgeInsets.init(_all:)();
      uint64_t v110 = v154;
      Class *v154 = isa;
      v110[1] = v103;
      *((unsigned char *)v110 + 16) = v104;
      v110[3] = v105;
      *((unsigned char *)v110 + 32) = v106;
      v110[5] = v107;
      v110[6] = v108;
      *((unsigned char *)v110 + 56) = v109;
      v110[8] = v111;
      v110[9] = v112;
      v110[10] = v113;
      v110[11] = v114;
      *((unsigned char *)v110 + 96) = 0;
      swift_storeEnumTagMultiPayload();
      sub_10012E3D8((unint64_t)isa);
      sub_1000FF33C(&qword_1015CE9D8);
      sub_10012EC3C(&qword_1015CE9E8, &qword_1015CE9A0, (void (*)(void))sub_10012E5A0);
      sub_10012E660();
      uint64_t v115 = (uint64_t)v155;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v115, (uint64_t)v159, &qword_1015CE990);
      swift_storeEnumTagMultiPayload();
      sub_10012E4F8();
      uint64_t v102 = (uint64_t)v156;
      _ConditionalContent<>.init(storage:)();
      sub_10012E49C((unint64_t)isa);
      sub_1000FF2E0(v115, &qword_1015CE990);
    }
    else
    {
      if (v73 == 3 || !v73)
      {
        sub_10012E3D8((unint64_t)v175.super.isa);
        static Alignment.center.getter();
        _FrameLayout.init(width:height:alignment:)();
        id v164 = v192;
        LODWORD(v163) = v193;
        uint64_t v74 = v194;
        char v75 = v195;
        uint64_t v76 = v196;
        uint64_t v77 = v197;
        uint64_t v78 = v147;
        uint64_t v79 = &v147[*(int *)(v144 + 20)];
        uint64_t v80 = enum case for RoundedCornerStyle.continuous(_:);
        uint64_t v81 = type metadata accessor for RoundedCornerStyle();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 104))(v79, v80, v81);
        __asm { FMOV            V0.2D, #6.0 }
        *uint64_t v78 = _Q0;
        uint64_t v87 = v149;
        sub_10012E6FC((uint64_t)v78, v149, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
        *(_WORD *)(v87 + *(int *)(v146 + 36)) = 256;
        uint64_t v88 = (uint64_t)v150;
        sub_1000FF27C(v87, (uint64_t)&v150[*(int *)(v145 + 36)], &qword_1015CFF60);
        uint64_t v89 = v164;
        *(void *)uint64_t v88 = isa;
        *(void *)(v88 + _Block_object_dispose(&STACK[0x358], 8) = v89;
        *(unsigned char *)(v88 + 16) = v163;
        *(void *)(v88 + 24) = v74;
        *(unsigned char *)(v88 + 32) = v75;
        *(void *)(v88 + ++*(void *)(*((void *)result + 4) + 40) = v76;
        *(void *)(v88 + 4_Block_object_dispose(&STACK[0x358], 8) = v77;
        sub_10012E3D8((unint64_t)isa);
        sub_1000FF2E0(v87, &qword_1015CFF60);
        sub_10012E764((uint64_t)v78, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
        sub_10012E49C((unint64_t)isa);
        LOBYTE(v79) = static Edge.Set.leading.getter();
        EdgeInsets.init(_all:)();
        uint64_t v91 = v90;
        uint64_t v93 = v92;
        uint64_t v95 = v94;
        uint64_t v97 = v96;
        uint64_t v98 = v148;
        sub_1000FF27C(v88, v148, &qword_1015CE998);
        uint64_t v99 = v98 + *(int *)(v152 + 36);
        *(unsigned char *)uint64_t v99 = (_BYTE)v79;
        *(void *)(v99 + _Block_object_dispose(&STACK[0x358], 8) = v91;
        *(void *)(v99 + 16) = v93;
        *(void *)(v99 + 24) = v95;
        *(void *)(v99 + 32) = v97;
        *(unsigned char *)(v99 + ++*(void *)(*((void *)result + 4) + 40) = 0;
        sub_1000FF2E0(v88, &qword_1015CE998);
        uint64_t v100 = v151;
        sub_100101750(v98, v151, &qword_1015CE9A0);
        sub_1000FF27C(v100, (uint64_t)v154, &qword_1015CE9A0);
        swift_storeEnumTagMultiPayload();
        sub_1000FF33C(&qword_1015CE9D8);
        sub_10012EC3C(&qword_1015CE9E8, &qword_1015CE9A0, (void (*)(void))sub_10012E5A0);
        sub_10012E660();
        uint64_t v101 = (uint64_t)v155;
        _ConditionalContent<>.init(storage:)();
        sub_1000FF27C(v101, (uint64_t)v159, &qword_1015CE990);
        swift_storeEnumTagMultiPayload();
        sub_10012E4F8();
        uint64_t v102 = (uint64_t)v156;
        _ConditionalContent<>.init(storage:)();
        sub_10012E49C((unint64_t)isa);
        sub_1000FF2E0(v101, &qword_1015CE990);
        sub_1000FF2E0(v100, &qword_1015CE9A0);
LABEL_16:
        uint64_t v28 = v143;
        sub_100101750(v102, (uint64_t)v143, &qword_1015CE9A8);
        uint64_t v72 = 0;
        uint64_t v25 = v168;
        goto LABEL_17;
      }
      sub_10012E3D8((unint64_t)v175.super.isa);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      unint64_t v116 = v192;
      unsigned __int8 v117 = v193;
      uint64_t v118 = v194;
      char v119 = v195;
      uint64_t v120 = v196;
      uint64_t v121 = v197;
      char v122 = static Edge.Set.leading.getter();
      EdgeInsets.init(_all:)();
      uint64_t v123 = v159;
      Class *v159 = isa;
      v123[1] = v116;
      *((unsigned char *)v123 + 16) = v117;
      v123[3] = v118;
      *((unsigned char *)v123 + 32) = v119;
      v123[5] = v120;
      v123[6] = v121;
      *((unsigned char *)v123 + 56) = v122;
      v123[8] = v124;
      v123[9] = v125;
      v123[10] = v126;
      v123[11] = v127;
      *((unsigned char *)v123 + 96) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CE9D8);
      sub_10012E4F8();
      sub_10012E660();
      uint64_t v102 = (uint64_t)v156;
      _ConditionalContent<>.init(storage:)();
    }
    sub_10012E49C((unint64_t)isa);
    goto LABEL_16;
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10012BC68@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v42 = a5;
  int v45 = a4;
  uint64_t v44 = a2;
  uint64_t v48 = a6;
  uint64_t v8 = sub_1000FF33C(&qword_1015CE910);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v41 - v11;
  uint64_t v12 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v43 = sub_1000FF33C(&qword_1015CEA20);
  uint64_t v15 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v41 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v41 - v21;
  if (a1)
  {
    id v23 = a1;
    uint64_t v24 = sub_1001A0CB8(0);

    uint64_t v50 = v24;
    sub_1000FF27C(a3, (uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1015D59D0);
    unint64_t v25 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v26 = swift_allocObject();
    sub_100101750((uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, (uint64_t *)&unk_1015D59D0);
    uint64_t v27 = (void *)(v26 + ((v14 + v25 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v28 = v44;
    void *v27 = a1;
    v27[1] = v28;
    id v29 = v23;
    sub_1000FF33C(&qword_1015CE958);
    type metadata accessor for UUID();
    sub_1000FF33C(&qword_1015CEA28);
    sub_1001010F8(&qword_1015CE960, &qword_1015CE958);
    sub_10012E9C0();
    sub_10012E32C(&qword_1015CE970, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelLine);
    ForEach<>.init(_:content:)();
    uint64_t v30 = v43;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v19, v43);
    if ((v45 & 1) != 0 && *(void *)(v42 + 16))
    {
      uint64_t v31 = v47;
      sub_10012C70C(v42, v47);
      uint64_t v32 = sub_1000FF33C(&qword_1015CE930);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
    }
    else
    {
      uint64_t v33 = sub_1000FF33C(&qword_1015CE930);
      uint64_t v31 = v47;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v47, 1, 1, v33);
    }
    uint64_t v35 = v48;
    uint64_t v34 = (uint64_t)v49;
    id v36 = v46;
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v37(v46, v22, v30);
    sub_1000FF27C(v31, v34, &qword_1015CE910);
    v37(v35, v36, v30);
    uint64_t v38 = sub_1000FF33C(&qword_1015CEA38);
    sub_1000FF27C(v34, (uint64_t)&v35[*(int *)(v38 + 48)], &qword_1015CE910);
    sub_1000FF2E0(v31, &qword_1015CE910);
    char v39 = *(void (**)(char *, uint64_t))(v15 + 8);
    v39(v22, v30);
    sub_1000FF2E0(v34, &qword_1015CE910);
    return ((uint64_t (*)(char *, uint64_t))v39)(v36, v30);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10012C1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v38 = a4;
  char v39 = a3;
  uint64_t v40 = a5;
  uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v8 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015CEA40);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v38 - v19;
  sub_10012E6FC(a1, (uint64_t)&v38 - v19, type metadata accessor for PlaceSummaryViewModelLine);
  (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(v20, 0, 1, v7);
  uint64_t v21 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1000FF27C(a2, (uint64_t)v14, (uint64_t *)&unk_1015D59D0);
  sub_1000FF27C((uint64_t)v20, v21, (uint64_t *)&unk_1015D59D0);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v8 + 48);
  if (v22((uint64_t)v14, 1, v7) == 1)
  {
    sub_1000FF2E0((uint64_t)v20, (uint64_t *)&unk_1015D59D0);
    if (v22(v21, 1, v7) == 1)
    {
      sub_1000FF2E0((uint64_t)v14, (uint64_t *)&unk_1015D59D0);
LABEL_19:
      uint64_t v30 = _s4LineVMa(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v40, 1, 1, v30);
    }
    id v23 = &qword_1015CEA40;
    goto LABEL_12;
  }
  sub_1000FF27C((uint64_t)v14, (uint64_t)v17, (uint64_t *)&unk_1015D59D0);
  if (v22(v21, 1, v7) == 1)
  {
    id v23 = &qword_1015CEA40;
LABEL_11:
    sub_1000FF2E0((uint64_t)v20, (uint64_t *)&unk_1015D59D0);
    sub_10012E764((uint64_t)v17, type metadata accessor for PlaceSummaryViewModelLine);
LABEL_12:
    sub_1000FF2E0((uint64_t)v14, v23);
    goto LABEL_13;
  }
  sub_10012E2C8(v21, (uint64_t)v10);
  if ((static UUID.== infix(_:_:)() & 1) == 0
    || (sub_10019E30C(*(void *)&v17[v7[5]], *(void *)&v10[v7[5]]) & 1) == 0
    || v17[v7[6]] != v10[v7[6]])
  {
    sub_10012E764((uint64_t)v10, type metadata accessor for PlaceSummaryViewModelLine);
    id v23 = (uint64_t *)&unk_1015D59D0;
    goto LABEL_11;
  }
  uint64_t v35 = v7[7];
  int v36 = v17[v35];
  int v37 = v10[v35];
  sub_10012E764((uint64_t)v10, type metadata accessor for PlaceSummaryViewModelLine);
  sub_1000FF2E0((uint64_t)v20, (uint64_t *)&unk_1015D59D0);
  sub_10012E764((uint64_t)v17, type metadata accessor for PlaceSummaryViewModelLine);
  sub_1000FF2E0((uint64_t)v14, (uint64_t *)&unk_1015D59D0);
  if (v36 == v37) {
    goto LABEL_19;
  }
LABEL_13:
  uint64_t v24 = v39;
  if (v39)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v25 = v24;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v26 = *(void *)(v41 + 16);
    if (!v26)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v27 = 0;
    uint64_t v28 = v41 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v29 = *(void *)(v8 + 72);
    while ((static UUID.== infix(_:_:)() & 1) == 0)
    {
      ++v27;
      v28 += v29;
      if (v26 == v27) {
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v32 = a1;
    uint64_t v33 = v40;
    sub_10012E6FC(v32, v40, type metadata accessor for PlaceSummaryViewModelLine);
    uint64_t v34 = _s4LineVMa(0);
    *(unsigned char *)(v33 + *(int *)(v34 + 20)) = v27 == 0;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10012C70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015CE940);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015CE948);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s4LineVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) == 1)
  {
    uint64_t v13 = *(void *)(type metadata accessor for PlaceSummaryViewModelLine(0) - 8);
    sub_10012E6FC(a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v12, type metadata accessor for PlaceSummaryViewModelLine);
    v12[*(int *)(v10 + 20)] = 0;
    sub_10012E6FC((uint64_t)v12, (uint64_t)v9, _s4LineVMa);
    swift_storeEnumTagMultiPayload();
    sub_10012E32C(&qword_1015CE968, (void (*)(uint64_t))_s4LineVMa);
    sub_1001010F8(&qword_1015CE978, &qword_1015CE940);
    _ConditionalContent<>.init(storage:)();
    return sub_10012E764((uint64_t)v12, _s4LineVMa);
  }
  else
  {
    *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
    *((void *)v6 + 1) = 0x4000000000000000;
    uint8_t v6[16] = 0;
    v15[1] = &v6[*(int *)(sub_1000FF33C(&qword_1015CE950) + 44)];
    v15[3] = a1;
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015CE958);
    type metadata accessor for UUID();
    _OWORD v15[2] = a2;
    sub_1001010F8(&qword_1015CE960, &qword_1015CE958);
    sub_10012E32C(&qword_1015CE968, (void (*)(uint64_t))_s4LineVMa);
    sub_10012E32C(&qword_1015CE970, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelLine);
    ForEach<>.init(_:content:)();
    sub_1000FF27C((uint64_t)v6, (uint64_t)v9, &qword_1015CE940);
    swift_storeEnumTagMultiPayload();
    sub_1001010F8(&qword_1015CE978, &qword_1015CE940);
    _ConditionalContent<>.init(storage:)();
    return sub_1000FF2E0((uint64_t)v6, &qword_1015CE940);
  }
}

uint64_t sub_10012CB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10012E6FC(a1, a2, type metadata accessor for PlaceSummaryViewModelLine);
  uint64_t result = _s4LineVMa(0);
  *(unsigned char *)(a2 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t sub_10012CB60@<X0>(uint64_t a1@<X8>)
{
  return sub_100129D3C(*(char **)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_10012CB68@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_1000FF33C(&qword_1015CEA48);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015CEA50);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015CEA58);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v14 = a1;
    uint64_t v15 = sub_1001A0CB8(1);

    BOOL v16 = 1;
    if (!*(void *)&v14[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_actionButtons + 8]) {
      BOOL v16 = *(void *)&v14[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_refinementButtons] != 0;
    }
    uint64_t v17 = static HorizontalAlignment.leading.getter();
    uint64_t v18 = 0x4010000000000000;
    if (!*(void *)(v15 + 16)) {
      uint64_t v18 = 0x4020000000000000;
    }
    *(void *)uint64_t v7 = v17;
    *((void *)v7 + 1) = v18;
    uint8_t v7[16] = 0;
    uint64_t v19 = sub_1000FF33C(&qword_1015CEA60);
    sub_10012CE48((char *)a1, a2, v15, v16, (uint64_t)&v7[*(int *)(v19 + 44)]);
    swift_bridgeObjectRelease();
    char v20 = static Edge.Set.horizontal.getter();
    sub_1000FF27C((uint64_t)v7, (uint64_t)v10, &qword_1015CEA48);
    uint64_t v21 = &v10[*(int *)(v8 + 36)];
    char *v21 = v20;
    *(_OWORD *)(v21 + _Block_object_dispose(&STACK[0x358], 8) = 0u;
    *(_OWORD *)(v21 + 24) = 0u;
    v21[40] = 1;
    sub_1000FF2E0((uint64_t)v7, &qword_1015CEA48);
    sub_1000FF27C((uint64_t)v10, (uint64_t)v13, &qword_1015CEA50);
    uint64_t v22 = &v13[*(int *)(v11 + 36)];
    *(void *)uint64_t v22 = 0xD00000000000001ALL;
    *((void *)v22 + 1) = 0x8000000100F765D0;
    v22[16] = 9;
    sub_1000FF2E0((uint64_t)v10, &qword_1015CEA50);
    return sub_100101750((uint64_t)v13, v25, &qword_1015CEA58);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10012CE48@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v139 = a4;
  uint64_t v131 = a3;
  uint64_t v138 = a5;
  uint64_t v7 = sub_1000FF33C(&qword_1015CE940);
  __chkstk_darwin(v7 - 8);
  unint64_t v126 = (void *)((char *)v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v127 = sub_1000FF33C(&qword_1015CEA68);
  __chkstk_darwin(v127);
  uint64_t v130 = (uint64_t)v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015CEA70);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v133 = v10;
  uint64_t v134 = v11;
  __chkstk_darwin(v10);
  uint64_t v129 = (uint64_t)v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v128 = (uint64_t)v125 - v14;
  uint64_t v15 = sub_1000FF33C(&qword_1015CEA78);
  __chkstk_darwin(v15 - 8);
  uint64_t v137 = (uint64_t)v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v132 = (uint64_t)v125 - v18;
  uint64_t v19 = sub_1000FF33C(&qword_1015CEA80);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000FF33C(&qword_1015CEA88);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000FF33C(&qword_1015CEA90);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v136 = (uint64_t)v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)v125 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)v125 - v33;
  *(void *)uint64_t v21 = static VerticalAlignment.center.getter();
  *((void *)v21 + 1) = 0;
  v21[16] = 0;
  uint64_t v35 = &v21[*(int *)(sub_1000FF33C(&qword_1015CEA98) + 44)];
  int64_t v135 = a1;
  v125[1] = a2;
  sub_10012D8D8(a1, a2, v35);
  LOBYTE(a2) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  sub_1000FF27C((uint64_t)v21, (uint64_t)v25, &qword_1015CEA80);
  uint64_t v44 = &v25[*(int *)(v23 + 44)];
  *uint64_t v44 = a2;
  uint64_t v45 = v131;
  *((void *)v44 + 1) = v37;
  *((void *)v44 + 2) = v39;
  *((void *)v44 + 3) = v41;
  *((void *)v44 + 4) = v43;
  v44[40] = 0;
  sub_1000FF2E0((uint64_t)v21, &qword_1015CEA80);
  LOBYTE(v21) = static Edge.Set.bottom.getter();
  uint64_t v46 = *(void *)(v45 + 16);
  EdgeInsets.init(_all:)();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  sub_1000FF27C((uint64_t)v25, (uint64_t)v31, &qword_1015CEA88);
  uint64_t v55 = &v31[*(int *)(v27 + 44)];
  *uint64_t v55 = (char)v21;
  *((void *)v55 + 1) = v48;
  *((void *)v55 + 2) = v50;
  *((void *)v55 + 3) = v52;
  *((void *)v55 + 4) = v54;
  v55[40] = 0;
  sub_1000FF2E0((uint64_t)v25, &qword_1015CEA88);
  uint64_t v56 = (uint64_t)v34;
  sub_100101750((uint64_t)v31, (uint64_t)v34, &qword_1015CEA90);
  if (v46)
  {
    uint64_t v57 = static HorizontalAlignment.leading.getter();
    uint64_t v58 = (uint64_t)v126;
    uint64_t *v126 = v57;
    *(void *)(v58 + _Block_object_dispose(&STACK[0x358], 8) = 0x4000000000000000;
    *(unsigned char *)(v58 + 16) = 0;
    sub_1000FF33C(&qword_1015CE950);
    *(void *)&v161[0] = v45;
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015CE958);
    type metadata accessor for UUID();
    _s4LineVMa(0);
    sub_1001010F8(&qword_1015CE960, &qword_1015CE958);
    sub_10012E32C(&qword_1015CE968, (void (*)(uint64_t))_s4LineVMa);
    sub_10012E32C(&qword_1015CE970, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelLine);
    ForEach<>.init(_:content:)();
    char v59 = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    uint64_t v68 = v130;
    sub_1000FF27C(v58, v130, &qword_1015CE940);
    uint64_t v69 = v68 + *(int *)(v127 + 36);
    *(unsigned char *)uint64_t v69 = v59;
    *(void *)(v69 + _Block_object_dispose(&STACK[0x358], 8) = v61;
    *(void *)(v69 + 16) = v63;
    *(void *)(v69 + 24) = v65;
    *(void *)(v69 + 32) = v67;
    *(unsigned char *)(v69 + ++*(void *)(*((void *)result + 4) + 40) = 0;
    sub_1000FF2E0(v58, &qword_1015CE940);
    char v70 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v72 = v71;
    uint64_t v74 = v73;
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    uint64_t v79 = v129;
    sub_1000FF27C(v68, v129, &qword_1015CEA68);
    uint64_t v80 = v133;
    uint64_t v81 = v79 + *(int *)(v133 + 36);
    *(unsigned char *)uint64_t v81 = v70;
    *(void *)(v81 + _Block_object_dispose(&STACK[0x358], 8) = v72;
    *(void *)(v81 + 16) = v74;
    *(void *)(v81 + 24) = v76;
    *(void *)(v81 + 32) = v78;
    *(unsigned char *)(v81 + ++*(void *)(*((void *)result + 4) + 40) = 0;
    sub_1000FF2E0(v68, &qword_1015CEA68);
    uint64_t v82 = v128;
    sub_100101750(v79, v128, &qword_1015CEA70);
    uint64_t v83 = v132;
    sub_100101750(v82, v132, &qword_1015CEA70);
    uint64_t v84 = 0;
    uint64_t v85 = v80;
  }
  else
  {
    uint64_t v84 = 1;
    uint64_t v83 = v132;
    uint64_t v85 = v133;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56))(v83, v84, 1, v85);
  if (v135)
  {
    uint64_t v86 = *(void *)&v135[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_actionButtons + 8];
    if (v86)
    {
      uint64_t v87 = *(void *)&v135[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_actionButtons];
      swift_bridgeObjectRetain();
      char v88 = static Edge.Set.leading.getter();
      EdgeInsets.init(_all:)();
      uint64_t v90 = v89;
      uint64_t v92 = v91;
      uint64_t v94 = v93;
      uint64_t v96 = v95;
      char v97 = static Edge.Set.bottom.getter();
      EdgeInsets.init(_all:)();
      uint64_t v143 = v87;
      uint64_t v144 = v86;
      char v145 = v88;
      uint64_t v146 = v90;
      uint64_t v147 = v92;
      uint64_t v148 = v94;
      uint64_t v149 = v96;
      LOBYTE(v150) = 0;
      LOBYTE(v151) = v97;
      uint64_t v152 = v98;
      uint64_t v153 = v99;
      uint64_t v154 = v100;
      uint64_t v155 = v101;
      LOBYTE(v156) = 0;
      sub_10012EDC0((uint64_t)&v143);
    }
    else
    {
      uint64_t v102 = *(void *)&v135[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_refinementButtons];
      if (!v102)
      {
        sub_10012EA6C((uint64_t)v159);
        goto LABEL_10;
      }
      uint64_t KeyPath = swift_getKeyPath();
      swift_bridgeObjectRetain();
      char v104 = static Edge.Set.bottom.getter();
      EdgeInsets.init(_all:)();
      uint64_t v106 = v105;
      uint64_t v108 = v107;
      uint64_t v110 = v109;
      uint64_t v112 = v111;
      char v113 = static Edge.Set.horizontal.getter();
      EdgeInsets.init(_all:)();
      v142[0] = 0;
      char v141 = 0;
      char v140 = 0;
      uint64_t v143 = KeyPath;
      uint64_t v144 = 0;
      char v145 = 0;
      uint64_t v146 = v102;
      LOBYTE(v147) = v104;
      uint64_t v148 = v106;
      uint64_t v149 = v108;
      uint64_t v150 = v110;
      uint64_t v151 = v112;
      LOBYTE(v152) = 0;
      LOBYTE(v153) = v113;
      uint64_t v154 = v114;
      uint64_t v155 = v115;
      uint64_t v156 = v116;
      uint64_t v157 = v117;
      char v158 = 0;
      sub_10012EC30((uint64_t)&v143);
    }
    sub_100101750((uint64_t)&v143, (uint64_t)v159, &qword_1015CEAB0);
    sub_1000FF33C(&qword_1015CEAB8);
    sub_1000FF33C(&qword_1015CEAC0);
    sub_10012EC3C(&qword_1015CEAC8, &qword_1015CEAB8, (void (*)(void))sub_10012ECB8);
    sub_10012EC3C(&qword_1015CEAE8, &qword_1015CEAC0, (void (*)(void))sub_10012ED3C);
    _ConditionalContent<>.init(storage:)();
    v159[4] = v161[4];
    v159[5] = v161[5];
    v160[0] = v162[0];
    *(_OWORD *)((char *)v160 + 10) = *(_OWORD *)((char *)v162 + 10);
    v159[0] = v161[0];
    v159[1] = v161[1];
    v159[2] = v161[2];
    v159[3] = v161[3];
    CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:)((DataSource *)v159, v118);
LABEL_10:
    sub_100101750((uint64_t)v159, (uint64_t)v161, &qword_1015CEAA0);
    uint64_t v119 = v136;
    sub_1000FF27C(v56, v136, &qword_1015CEA90);
    uint64_t v120 = v137;
    sub_1000FF27C(v83, v137, &qword_1015CEA78);
    sub_100101750((uint64_t)v161, (uint64_t)v142, &qword_1015CEAA0);
    uint64_t v121 = v138;
    sub_1000FF27C(v119, v138, &qword_1015CEA90);
    uint64_t v122 = sub_1000FF33C(&qword_1015CEAA8);
    sub_1000FF27C(v120, v121 + *(int *)(v122 + 48), &qword_1015CEA78);
    uint64_t v123 = v121 + *(int *)(v122 + 64);
    sub_100101750((uint64_t)v142, (uint64_t)&v143, &qword_1015CEAA0);
    sub_100101750((uint64_t)&v143, v123, &qword_1015CEAA0);
    sub_10012EB2C((uint64_t)&v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_10012EA90);
    sub_1000FF2E0(v83, &qword_1015CEA78);
    sub_1000FF2E0(v56, &qword_1015CEA90);
    sub_100101750((uint64_t)v142, (uint64_t)v159, &qword_1015CEAA0);
    sub_10012EB2C((uint64_t)v159, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_10012EB98);
    sub_1000FF2E0(v120, &qword_1015CEA78);
    return sub_1000FF2E0(v119, &qword_1015CEA90);
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

unint64_t sub_10012D8D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015CEB08);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v96 = (uint64_t *)((char *)&v76 - v10);
  if (a1)
  {
    uint64_t v80 = a2;
    uint64_t v81 = a3;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v79 = a1;
    id v11 = a1;
    static Published.subscript.getter();
    id v78 = v11;

    swift_release();
    swift_release();
    unint64_t v12 = v111;
    uint64_t v85 = v8;
    if ((~v111 & 0xF000000000000007) != 0)
    {
      sub_10012E3D8(v111);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      unint64_t v24 = v125;
      uint64_t v25 = v126;
      uint64_t v26 = v127;
      uint64_t v27 = v128;
      uint64_t v29 = v129;
      uint64_t v28 = v130;
      unsigned __int8 v30 = static Edge.Set.trailing.getter();
      EdgeInsets.init(_all:)();
      unint64_t v98 = v12;
      unint64_t v99 = v24;
      uint64_t v100 = v25;
      uint64_t v101 = v26;
      uint64_t v102 = v27;
      uint64_t v103 = v29;
      uint64_t v104 = v28;
      uint64_t v105 = v30;
      uint64_t v106 = v31;
      uint64_t v107 = v32;
      uint64_t v108 = v33;
      uint64_t v109 = v34;
      __int16 v110 = 0;
      sub_1000FF33C(&qword_1015CEB10);
      sub_1000FF33C(&qword_1015CEB18);
      sub_10012EDC8();
      sub_10012EC3C(&qword_1015CEB48, &qword_1015CEB18, (void (*)(void))sub_10012EF00);
      _ConditionalContent<>.init(storage:)();
      sub_10012E49C(v12);
    }
    else
    {
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      unint64_t v13 = v125;
      unint64_t v14 = v126;
      uint64_t v15 = v127;
      uint64_t v16 = v128;
      uint64_t v17 = v129;
      uint64_t v18 = v130;
      unsigned __int8 v19 = static Edge.Set.trailing.getter();
      EdgeInsets.init(_all:)();
      unint64_t v98 = v13;
      unint64_t v99 = v14;
      uint64_t v100 = v15;
      uint64_t v101 = v16;
      uint64_t v102 = v17;
      uint64_t v103 = v18;
      uint64_t v104 = v19;
      uint64_t v105 = v20;
      uint64_t v106 = v21;
      uint64_t v107 = v22;
      uint64_t v108 = v23;
      uint64_t v109 = 0;
      __int16 v110 = 256;
      sub_1000FF33C(&qword_1015CEB10);
      sub_1000FF33C(&qword_1015CEB18);
      sub_10012EDC8();
      sub_10012EC3C(&qword_1015CEB48, &qword_1015CEB18, (void (*)(void))sub_10012EF00);
      _ConditionalContent<>.init(storage:)();
    }
    unint64_t v97 = v111;
    uint64_t v86 = v112;
    uint64_t v83 = v115;
    uint64_t v84 = v113;
    uint64_t v94 = v116;
    uint64_t v95 = v114;
    uint64_t v82 = v117;
    uint64_t v92 = v119;
    uint64_t v93 = v118;
    uint64_t v90 = v121;
    uint64_t v91 = v120;
    uint64_t v89 = v122;
    int v87 = v124;
    int v88 = v123;
    uint64_t v35 = static HorizontalAlignment.leading.getter();
    uint64_t v36 = v96;
    uint64_t *v96 = v35;
    v36[1] = 0x4000000000000000;
    *((unsigned char *)v36 + 16) = 0;
    sub_1000FF33C(&qword_1015CEB68);
    id v37 = v78;
    uint64_t v38 = sub_1001A0CB8(0);

    unint64_t v111 = v38;
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v80;
    *(void *)(v39 + 16) = v79;
    *(void *)(v39 + 24) = v40;
    id v41 = v37;
    sub_1000FF33C(&qword_1015CE958);
    type metadata accessor for UUID();
    sub_1000FF33C(&qword_1015CEA28);
    sub_1001010F8(&qword_1015CE960, &qword_1015CE958);
    sub_10012E9C0();
    sub_10012E32C(&qword_1015CE970, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelLine);
    ForEach<>.init(_:content:)();
    swift_getKeyPath();
    swift_getKeyPath();
    id v42 = v41;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    unint64_t v43 = v111;
    if ((~v111 & 0xF000000000000007) != 0)
    {
      sub_10012E3D8(v111);
      unsigned __int8 v45 = static Edge.Set.trailing.getter();
      EdgeInsets.init(_all:)();
      uint64_t v47 = v46;
      uint64_t v49 = v48;
      uint64_t v51 = v50;
      uint64_t v53 = v52;
      sub_10012E49C(v43);
      uint64_t v79 = v49;
      uint64_t v80 = v47;
      uint64_t v77 = v53;
      id v78 = v51;
      uint64_t v44 = v45;
    }
    else
    {
      uint64_t v44 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = 0;
      uint64_t v77 = 0;
      id v78 = 0;
      unint64_t v43 = 0xF000000000000007;
    }
    uint64_t v54 = (uint64_t)v85;
    sub_1000FF27C((uint64_t)v96, (uint64_t)v85, &qword_1015CEB08);
    uint64_t v55 = v81;
    uint64_t v56 = v86;
    void *v81 = v97;
    v55[1] = v56;
    uint64_t v57 = v95;
    v55[2] = v84;
    v55[3] = v57;
    uint64_t v58 = v94;
    v55[4] = v83;
    void v55[5] = v58;
    uint64_t v59 = v93;
    v55[6] = v82;
    v55[7] = v59;
    uint64_t v60 = v91;
    v55[8] = v92;
    v55[9] = v60;
    uint64_t v61 = v89;
    v55[10] = v90;
    v55[11] = v61;
    uint64_t v89 = v61;
    int v63 = v87;
    int v62 = v88;
    *((unsigned char *)v55 + 96) = v88;
    int v87 = v63;
    int v88 = v62;
    *((unsigned char *)v55 + 97) = v63;
    uint64_t v64 = (int *)sub_1000FF33C(&qword_1015CEB70);
    sub_1000FF27C(v54, (uint64_t)v55 + v64[12], &qword_1015CEB08);
    uint64_t v65 = (char *)v55 + v64[16];
    *(void *)uint64_t v65 = 0;
    v65[8] = 0;
    uint64_t v66 = (char *)v55 + v64[20];
    *(void *)uint64_t v66 = v43;
    *((void *)v66 + 1) = v44;
    uint64_t v67 = v79;
    *((void *)v66 + 2) = v80;
    *((void *)v66 + 3) = v67;
    uint64_t v68 = v77;
    *((void *)v66 + 4) = v78;
    *((void *)v66 + 5) = v68;
    v66[48] = 0;
    char v75 = v63;
    char v74 = v62;
    uint64_t v73 = v61;
    uint64_t v70 = v83;
    uint64_t v69 = v84;
    uint64_t v71 = v82;
    sub_10012EFC4(v97, v86, v84, v95, v83, v94, v82, v93, v92, v91, v90, v73, v74, v75);
    sub_10012E3C4(v43);
    sub_1000FF2E0((uint64_t)v96, &qword_1015CEB08);
    sub_10012E49C(v43);
    sub_1000FF2E0((uint64_t)v85, &qword_1015CEB08);
    return sub_10012EFD4(v97, v86, v69, v95, v70, v94, v71, v93, v92, v91, v90, v89, v88, v87);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    unint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10012E06C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v6 = a2;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v7 = *(void *)(v15 + 16);
    if (v7)
    {
      uint64_t v8 = 0;
      uint64_t v9 = *(void *)(type metadata accessor for PlaceSummaryViewModelLine(0) - 8);
      uint64_t v10 = v15 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      uint64_t v11 = *(void *)(v9 + 72);
      while ((static UUID.== infix(_:_:)() & 1) == 0)
      {
        ++v8;
        v10 += v11;
        if (v7 == v8) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
      sub_10012E6FC(a1, a3, type metadata accessor for PlaceSummaryViewModelLine);
      uint64_t v14 = _s4LineVMa(0);
      *(unsigned char *)(a3 + *(int *)(v14 + 20)) = v8 == 0;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a3, 0, 1, v14);
    }
    else
    {
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v12 = _s4LineVMa(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 1, 1, v12);
    }
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_10012E32C((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10012E29C@<X0>(uint64_t a1@<X8>)
{
  return sub_10012CB68(*(void **)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_10012E2A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10012E2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceSummaryViewModelLine(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10012E32C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_10012E37C(uint64_t a1)
{
  *(void *)a1 = 0xF000000000000007;
  double result = 0.0;
  *(_OWORD *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + ++*(void *)(*((void *)result + 4) + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 8_Block_object_dispose(&STACK[0x358], 8) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 16_Block_object_dispose(&STACK[0x358], 8) = 0u;
  *(_OWORD *)(a1 + 177) = 0u;
  return result;
}

unint64_t sub_10012E3C4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10012E3D8(result);
  }
  return result;
}

unint64_t sub_10012E3D8(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      double result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10012E420(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 192);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    v4);
  return a1;
}

unint64_t sub_10012E49C(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10012E4B0(result);
  }
  return result;
}

unint64_t sub_10012E4B0(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      double result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10012E4F8()
{
  unint64_t result = qword_1015CE9E0;
  if (!qword_1015CE9E0)
  {
    sub_10010118C(&qword_1015CE990);
    sub_10012EC3C(&qword_1015CE9E8, &qword_1015CE9A0, (void (*)(void))sub_10012E5A0);
    sub_10012E660();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE9E0);
  }
  return result;
}

unint64_t sub_10012E5A0()
{
  unint64_t result = qword_1015CE9F0;
  if (!qword_1015CE9F0)
  {
    sub_10010118C(&qword_1015CE998);
    sub_10012EE64(&qword_1015CE9F8, &qword_1015CEA00, &qword_1015CEA08, &qword_1015CEA10);
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CE9F0);
  }
  return result;
}

unint64_t sub_10012E660()
{
  unint64_t result = qword_1015CEA18;
  if (!qword_1015CEA18)
  {
    sub_10010118C(&qword_1015CE9D8);
    sub_10012EE64(&qword_1015CE9F8, &qword_1015CEA00, &qword_1015CEA08, &qword_1015CEA10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEA18);
  }
  return result;
}

uint64_t sub_10012E6FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10012E764(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10012E7C4()
{
  uint64_t v1 = *(void *)(sub_1000FF33C((uint64_t *)&unk_1015D59D0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for PlaceSummaryViewModelLine(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
    swift_bridgeObjectRelease();
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 16;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10012E90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1000FF33C((uint64_t *)&unk_1015D59D0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void **)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + v7 + 8);

  return sub_10012C1B4(a1, v2 + v6, v8, v9, a2);
}

unint64_t sub_10012E9C0()
{
  unint64_t result = qword_1015CEA30;
  if (!qword_1015CEA30)
  {
    sub_10010118C(&qword_1015CEA28);
    sub_10012E32C(&qword_1015CE968, (void (*)(uint64_t))_s4LineVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEA30);
  }
  return result;
}

double sub_10012EA6C(uint64_t a1)
{
  *(void *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x358], 8) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 120) = -256;
  return result;
}

uint64_t sub_10012EA90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int16 a16)
{
  if (HIBYTE(a16) <= 0xFEu) {
    return sub_10012EAD4(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (unsigned __int16)(a16 & 0x1FF) >> 8);
  }
  return result;
}

uint64_t sub_10012EAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17)
{
  if (a17) {
    sub_10012EB20();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10012EB20()
{
  return swift_retain();
}

uint64_t sub_10012EB2C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v4 = *(_WORD *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_10012EB98(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int16 a16)
{
  if (HIBYTE(a16) <= 0xFEu) {
    return sub_10012EBDC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (unsigned __int16)(a16 & 0x1FF) >> 8);
  }
  return result;
}

uint64_t sub_10012EBDC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17)
{
  if (a17) {
    sub_100127C58(a1, a2, a3 & 1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10012EC30(uint64_t result)
{
  *(unsigned char *)(result + 121) = 1;
  return result;
}

uint64_t sub_10012EC3C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012ECB8()
{
  return sub_10012EC3C(&qword_1015CEAD0, &qword_1015CEAD8, (void (*)(void))sub_10012ECE8);
}

unint64_t sub_10012ECE8()
{
  unint64_t result = qword_1015CEAE0;
  if (!qword_1015CEAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEAE0);
  }
  return result;
}

uint64_t sub_10012ED3C()
{
  return sub_10012EC3C(&qword_1015CEAF0, &qword_1015CEAF8, (void (*)(void))sub_10012ED6C);
}

unint64_t sub_10012ED6C()
{
  unint64_t result = qword_1015CEB00;
  if (!qword_1015CEB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEB00);
  }
  return result;
}

uint64_t sub_10012EDC0(uint64_t result)
{
  *(unsigned char *)(result + 121) = 0;
  return result;
}

unint64_t sub_10012EDC8()
{
  unint64_t result = qword_1015CEB20;
  if (!qword_1015CEB20)
  {
    sub_10010118C(&qword_1015CEB10);
    sub_10012EE64(&qword_1015CEB28, &qword_1015CEB30, &qword_1015CEB38, &qword_1015CEB40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEB20);
  }
  return result;
}

uint64_t sub_10012EE64(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_1001010F8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012EF00()
{
  return sub_10012EC3C(&qword_1015CEB50, &qword_1015CEB58, (void (*)(void))sub_10012EF30);
}

unint64_t sub_10012EF30()
{
  unint64_t result = qword_1015CEB60;
  if (!qword_1015CEB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEB60);
  }
  return result;
}

uint64_t sub_10012EF84()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012EFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012E06C(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_10012EFC4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  if ((a14 & 1) == 0) {
    return sub_10012E3D8(result);
  }
  return result;
}

unint64_t sub_10012EFD4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  if ((a14 & 1) == 0) {
    return sub_10012E4B0(result);
  }
  return result;
}

uint64_t sub_10012EFE4()
{
  return sub_1001010F8(&qword_1015CEB78, &qword_1015CEB80);
}

unint64_t sub_10012F024()
{
  unint64_t result = qword_1015CEB88;
  if (!qword_1015CEB88)
  {
    sub_10010118C(&qword_1015CEA58);
    sub_10012F0A0();
    sub_10012F140();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEB88);
  }
  return result;
}

unint64_t sub_10012F0A0()
{
  unint64_t result = qword_1015CEB90;
  if (!qword_1015CEB90)
  {
    sub_10010118C(&qword_1015CEA50);
    sub_1001010F8(&qword_1015CEB98, &qword_1015CEA48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEB90);
  }
  return result;
}

unint64_t sub_10012F140()
{
  unint64_t result = qword_1015CFCC0;
  if (!qword_1015CFCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFCC0);
  }
  return result;
}

uint64_t sub_10012F1AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10012F274()
{
  uint64_t v0 = type metadata accessor for RefinementsBarButtonViewModel(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(v9 + 16);
  if (v4)
  {
    uint64_t v5 = v9 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v6 = *(void *)(v1 + 72);
    while (1)
    {
      sub_1001302BC(v5, (uint64_t)v3);
      swift_unknownObjectRetain();
      sub_100130320((uint64_t)v3);
      self;
      if (swift_dynamicCastObjCClass()) {
        break;
      }
      swift_unknownObjectRelease();
      v5 += v6;
      if (!--v4) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return 1;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
}

id sub_10012F434()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for RefinementsBarViewModel(0);
  return [super dealloc];
}

uint64_t sub_10012F4DC()
{
  return type metadata accessor for RefinementsBarViewModel(0);
}

uint64_t type metadata accessor for RefinementsBarViewModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015CEBD0);
}

void sub_10012F504()
{
  sub_10012F59C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10012F59C()
{
  if (!qword_1015CEBE0)
  {
    sub_10010118C(&qword_1015CEBE8);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015CEBE0);
    }
  }
}

uint64_t sub_10012F5F8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for RefinementsBarViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10012F63C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_10012F6A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10012F718()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps35RefinementsMultiSelectCellViewModel__isSelected;
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D5AD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10012F7EC()
{
  return type metadata accessor for RefinementsMultiSelectCellViewModel(0);
}

uint64_t type metadata accessor for RefinementsMultiSelectCellViewModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015CEC20);
}

void sub_10012F814()
{
  sub_10012F8D8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10012F8D8()
{
  if (!qword_1015CEC30)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015CEC30);
    }
  }
}

void *sub_10012F930(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v13 = v10[16];
    sub_10012FA94();
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    uint64_t v14 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    v17[16] = v18[16];
    *((void *)v17 + 3) = *((void *)v18 + 3);
    *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
    uint64_t v20 = a3[10];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_10012FA94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10012FA9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  sub_10012FB30();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_10012FB30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10012FB38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  char v12 = *((unsigned char *)v9 + 16);
  sub_10012FA94();
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + _Block_object_dispose(&STACK[0x358], 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + _Block_object_dispose(&STACK[0x358], 8) = v18;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + _Block_object_dispose(&STACK[0x358], 8) = *(unsigned char *)(v21 + 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_10012FC4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  char v12 = *((unsigned char *)v9 + 16);
  sub_10012FA94();
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + _Block_object_dispose(&STACK[0x358], 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  sub_10012FB30();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 8);
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(void *)(v14 + _Block_object_dispose(&STACK[0x358], 8) = v16;
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  *(unsigned char *)(v18 + _Block_object_dispose(&STACK[0x358], 8) = *((unsigned char *)v19 + 8);
  *(void *)uint64_t v18 = v20;
  return a1;
}

uint64_t sub_10012FD90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(a1 + v_Block_object_dispose(&STACK[0x358], 8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  char v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  _OWORD *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)(v16 + _Block_object_dispose(&STACK[0x358], 8) = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  return a1;
}

uint64_t sub_10012FE64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = v10;
  sub_10012FB30();
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  *(void *)(v13 + _Block_object_dispose(&STACK[0x358], 8) = *(void *)(v14 + 8);
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_unknownObjectRelease();
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + _Block_object_dispose(&STACK[0x358], 8) = *(unsigned char *)(v17 + 8);
  return a1;
}

uint64_t sub_10012FF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012FF90);
}

uint64_t sub_10012FF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100130050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100130064);
}

uint64_t sub_100130064(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RefinementsBarButtonViewModel(uint64_t a1)
{
  return sub_100130928(a1, qword_1015CED60);
}

uint64_t sub_100130140()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100130208()
{
  unint64_t result = qword_1015CEDB0;
  if (!qword_1015CEDB0)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CEDB0);
  }
  return result;
}

void *sub_100130260()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_10013026C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for RefinementsMultiSelectCellViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001302BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RefinementsBarButtonViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100130320(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RefinementsBarButtonViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_10013037C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_100130464(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1001304E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v_Block_object_dispose(&STACK[0x358], 8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_100130580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_100130638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1001306BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_10013075C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100130770);
}

uint64_t sub_100130770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100130834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100130848);
}

uint64_t sub_100130848(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + _Block_object_dispose(&STACK[0x358], 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element(uint64_t a1)
{
  return sub_100130928(a1, qword_1015CEE18);
}

uint64_t sub_100130928(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100130960()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for RefinementsBarButtonViewModel.Submenu(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RefinementsBarButtonViewModel.Submenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for RefinementsBarButtonViewModel.Submenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RefinementsBarButtonViewModel.Submenu(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RefinementsBarButtonViewModel.Submenu(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RefinementsBarButtonViewModel.Submenu()
{
  return &type metadata for RefinementsBarButtonViewModel.Submenu;
}

uint64_t destroy for RefinementsBarButtonViewModel.RefinementsBarButtonValue()
{
  return sub_10012FB30();
}

uint64_t _s4Maps29RefinementsBarButtonViewModelV25RefinementsBarButtonValueOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_10012FA94();
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RefinementsBarButtonViewModel.RefinementsBarButtonValue(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_10012FA94();
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x358], 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10012FB30();
  return a1;
}

uint64_t assignWithTake for RefinementsBarButtonViewModel.RefinementsBarButtonValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_10012FB30();
  return a1;
}

ValueMetadata *type metadata accessor for RefinementsBarButtonViewModel.RefinementsBarButtonValue()
{
  return &type metadata for RefinementsBarButtonViewModel.RefinementsBarButtonValue;
}

uint64_t sub_100130E5C()
{
  unint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher____lazy_storage___maxNumberOfCollections);
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher____lazy_storage___maxNumberOfCollections
                + 8) != 1)
    return *(void *)v1;
  uint64_t result = GEOConfigGetUInteger();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)unint64_t v1 = result;
    v1[8] = 0;
  }
  return result;
}

uint64_t sub_100130EBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_collectionDataProvider);
  [v2 setActive:1];
  id v3 = [v2 collections];
  sub_1001314D4();
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = sub_100130E5C();
  uint64_t v6 = sub_1002E56E0(v5, v4);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v26 = v6;
  uint64_t v27 = v8;
  uint64_t v28 = v10;
  unint64_t v29 = v12;
  id v13 = [self addToCollection];
  if ((v12 & 1) == 0 || (uint64_t result = swift_isUniquelyReferenced_nonNull(), v26 = v6, (result & 1) == 0))
  {
    uint64_t result = (v12 >> 1) - v10;
    if (__OFSUB__(v12 >> 1, v10))
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    uint64_t result = sub_1001316F0((void *)result);
    uint64_t v10 = v28;
    unint64_t v12 = v29;
  }
  BOOL v15 = __OFSUB__(v12 >> 1, v10);
  uint64_t v16 = (void *)((v12 >> 1) - v10);
  if (v15)
  {
    __break(1u);
    goto LABEL_16;
  }
  sub_100131514((uint64_t)v16);
  uint64_t result = (uint64_t)sub_100131610(v16, (uint64_t)v13);
  unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v17 = (v29 >> 1) - v28;
  if (v29 >> 1 == v28)
  {
    swift_unknownObjectRetain();
    uint64_t v18 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_unknownObjectRelease();
    *(void *)(v1 + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_diffableSnapshotObjects) = v18;
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if ((uint64_t)(v29 >> 1) > v28)
  {
    uint64_t v19 = (objc_class *)type metadata accessor for SearchHomeUserGuidesCellViewModel();
    swift_unknownObjectRetain_n();
    uint64_t v20 = (void **)(v27 + 8 * v28);
    do
    {
      uint64_t v21 = *v20;
      uint64_t v22 = (char *)objc_allocWithZone(v19);
      *(void *)&v22[OBJC_IVAR____TtC4Maps33SearchHomeUserGuidesCellViewModel_collections] = v21;
      v24.unint64_t receiver = v22;
      v24.Class super_class = v19;
      id v23 = v21;
      [super init];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      ++v20;
      --v17;
    }
    while (v17);
    swift_unknownObjectRelease();
    uint64_t v18 = (void *)v25;
    goto LABEL_14;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_10013112C()
{
  uint64_t v1 = v0;
  [*(id *)(v0 + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_collectionDataProvider) setActive:0];
  sub_100130EBC();
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_100258F4C(v2);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_title);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_title + 8);
  uint64_t v6 = (objc_class *)type metadata accessor for SearchHomeUserGuidesDataProvider();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC4Maps32SearchHomeUserGuidesDataProvider_objects] = v3;
  *(void *)&v7[OBJC_IVAR____TtC4Maps32SearchHomeUserGuidesDataProvider_type] = 7;
  uint64_t v8 = &v7[OBJC_IVAR____TtC4Maps32SearchHomeUserGuidesDataProvider_identifier];
  *(void *)uint64_t v8 = 0xD00000000000001BLL;
  *((void *)v8 + 1) = 0x8000000100F768F0;
  uint64_t v9 = &v7[OBJC_IVAR____TtC4Maps32SearchHomeUserGuidesDataProvider_title];
  *(void *)uint64_t v9 = v5;
  *((void *)v9 + 1) = v4;
  v14.unint64_t receiver = v7;
  v14.Class super_class = v6;
  swift_bridgeObjectRetain();
  id v10 = [super init];
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
  *(void *)(v11 + 32) = v10;
  uint64_t v13 = v11;
  specialized Array._endMutation()();
  *(void *)(v1 + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_dataProviders) = v13;
  id v12 = v10;
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_delegate))
  {
    [(id)swift_unknownObjectRetain() didUpdateDataFetcher:v1];
    swift_unknownObjectRelease();
  }
}

id sub_100131354()
{
  return sub_100131468(type metadata accessor for SearchHomeUserGuidesDataFetcher);
}

uint64_t type metadata accessor for SearchHomeUserGuidesDataFetcher()
{
  return self;
}

id sub_100131450()
{
  return sub_100131468(type metadata accessor for SearchHomeUserGuidesCellViewModel);
}

id sub_100131468(uint64_t (*a1)(void))
{
  v3.unint64_t receiver = v1;
  v3.Class super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for SearchHomeUserGuidesCellViewModel()
{
  return self;
}

unint64_t sub_1001314D4()
{
  unint64_t result = qword_1015D9240;
  if (!qword_1015D9240)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D9240);
  }
  return result;
}

uint64_t sub_100131514(uint64_t result)
{
  uint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  uint64_t v5 = (v3 >> 1) - v4;
  if (__OFSUB__(v3 >> 1, v4))
  {
    __break(1u);
LABEL_11:
    return sub_1001316F0(v1);
  }
  uint64_t v1 = (void *)result;
  if (v3)
  {
    uint64_t v6 = v2[1];
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain();
    uint64_t v7 = (void *)swift_dynamicCastClass();
    if (!v7)
    {
      swift_unknownObjectRelease();
      uint64_t v7 = _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v7[2];
    if ((void *)(v6 + 8 * v4 + 8 * v5) == &v7[v8 + 4])
    {
      unint64_t v9 = v7[3];
      unint64_t result = swift_release();
      uint64_t v10 = (v9 >> 1) - v8;
      BOOL v11 = __OFADD__(v5, v10);
      v5 += v10;
      if (v11)
      {
        __break(1u);
        return result;
      }
    }
    else
    {
      unint64_t result = swift_release();
    }
  }
  if (v5 < (uint64_t)v1 + 1) {
    goto LABEL_11;
  }
  return result;
}

void *sub_100131610(void *result, uint64_t a2)
{
  uint64_t v3 = v2[2];
  unint64_t v4 = v2[3];
  unint64_t v5 = v4 >> 1;
  uint64_t v6 = (v4 >> 1) - v3;
  if (__OFSUB__(v4 >> 1, v3))
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = result;
  uint64_t v8 = (char *)result - v6 + 1;
  if (__OFSUB__((char *)result + 1, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_10:
    *(void *)(v2[1] + 8 * v3 + 8 * (void)v7) = a2;
    return result;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  unint64_t result = (void *)swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    unint64_t result = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = result[2];
  BOOL v11 = __OFADD__(v10, v8);
  id v12 = &v8[v10];
  if (v11) {
    goto LABEL_13;
  }
  result[2] = v12;
  unint64_t result = (void *)swift_release();
  uint64_t v13 = &v8[v5];
  if (__OFADD__(v5, v8))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (((unint64_t)v13 & 0x8000000000000000) == 0)
  {
    v2[3] = v4 & 1 | (2 * (void)v13);
    goto LABEL_10;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1001316F0(void *a1)
{
  uint64_t v3 = (uint64_t)a1 + 1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  unint64_t v7 = v1[3];
  swift_unknownObjectRetain();
  uint64_t v8 = sub_1001317AC(a1, v3, v4, v5, v6, v7);
  swift_unknownObjectRelease();
  BOOL v11 = v8;
  unint64_t v9 = (void (*)(uint64_t, uint64_t))sub_1001319B4();
  sub_1001319D0((uint64_t *)&v11, (uint64_t)a1, 0, v9);
  swift_release();

  return swift_release();
}

void *sub_1001317AC(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_34:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v7 = a2;
  uint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_34;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  BOOL v11 = (void *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    BOOL v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11[2];
  uint64_t v13 = a4 + 8 * a5 + 8 * v8;
  if ((void *)v13 == &v11[v12 + 4])
  {
    unint64_t v15 = v11[3];
    unint64_t result = (void *)swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  unint64_t v17 = (void *)swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      unint64_t v17 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = v17[2];
    if ((void *)v13 == &v17[v18 + 4])
    {
      unint64_t v20 = v17[3];
      unint64_t result = (void *)swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      unint64_t result = (void *)swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    unint64_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v19 = v17[2];
  if ((void *)v13 == &v17[v19 + 4])
  {
    unint64_t v23 = v17[3];
    unint64_t result = (void *)swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_39:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= (uint64_t)v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = (void *)v25;
  }
  if (!v26) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v27 = (void *)swift_allocObject();
  int64_t v28 = j__malloc_size(v27);
  uint64_t v29 = v28 - 32;
  if (v28 < 32) {
    uint64_t v29 = v28 - 25;
  }
  v27[2] = v6;
  v27[3] = (2 * (v29 >> 3)) | 1;
  return v27;
}

Swift::Void (__swiftcall *sub_1001319B4())(DataSource *__struct_ptr _, Swift::OpaquePointer didChangeSelectedCollections)
{
  return CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
}

uint64_t sub_1001319D0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3] >> 1;
  uint64_t v7 = (void *)(v6 - v5);
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v15 = (char *)v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v33 = &v15[-v14];
  if (__OFSUB__(v15, v14))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  __dst = (char *)(v9 + 32);
  uint64_t v17 = v9 + 32 + 8 * a2;
  uint64_t v31 = (char *)(v17 + 8 * a3);
  uint64_t v18 = sub_100131CE0(v7);
  uint64_t v32 = a4;
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v30 = v9;
    uint64_t v20 = v4[2];
    uint64_t v21 = (char *)(v4[1] + 8 * v20);
    sub_1001314D4();
    swift_arrayDestroy();
    if (a2 < 0) {
      goto LABEL_43;
    }
    BOOL v22 = &v21[8 * a2];
    if (__dst != v21 || __dst >= v22) {
      memmove(__dst, v21, 8 * a2);
    }
    swift_arrayDestroy();
    v32(v17, a3);
    if (v14 < 0) {
      goto LABEL_43;
    }
    unint64_t v23 = &v22[8 * (void)v33];
    if (v31 != v23 || v31 >= &v23[8 * v14]) {
      memmove(v31, v23, 8 * v14);
    }
    swift_arrayDestroy();
    *(void *)(v19 + 16) = 0;
    swift_release();
    uint64_t v9 = v30;
LABEL_23:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v20))
    {
      uint64_t v28 = *(void *)(v9 + 16);
      BOOL v11 = __OFADD__(v20, v28);
      uint64_t v29 = v20 + v28;
      if (!v11)
      {
        if (v29 >= v20)
        {
          if ((v29 & 0x8000000000000000) == 0)
          {
            *uint64_t v4 = v9;
            v4[1] = &__dst[-8 * v20];
            _OWORD v4[2] = v20;
            v4[3] = (2 * v29) | 1;
            return result;
          }
          goto LABEL_36;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v20 = v4[2];
  BOOL v11 = __OFADD__(v20, a2);
  uint64_t v24 = v20 + a2;
  if (v11)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v24 < v20)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (__OFSUB__(v24, v20))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  sub_1001314D4();
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[8 * (v24 - v20)], a3);
  uint64_t v25 = &v33[v24];
  if (__OFADD__(v24, v33))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v26 = (char *)(v4[3] >> 1);
  if ((uint64_t)v26 < (uint64_t)v25)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!__OFSUB__(v26, v25))
  {
    swift_arrayInitWithCopy();
    goto LABEL_23;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100131CE0(void *a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9[2];
  if ((void *)(v8 + 8 * v6 + 8 * v7) != &v9[v10 + 4])
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = v9[3];
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < (uint64_t)a1) {
      return 0;
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain();
    a1 = (void *)swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = _swiftEmptyArrayStorage;
    }
    uint64_t v16 = v8 + 8 * v6 - (void)a1;
    uint64_t v17 = v16 - 32;
    uint64_t v18 = v16 - 25;
    if (v17 >= 0) {
      uint64_t v18 = v17;
    }
    uint64_t isUniquelyReferenced_nonNull = v7 + (v18 >> 3);
    if (!__OFADD__(v7, v18 >> 3))
    {
      uint64_t v4 = a1[2];
      if (isUniquelyReferenced_nonNull >= v4) {
        return (uint64_t)a1;
      }
LABEL_21:
      sub_100132014(isUniquelyReferenced_nonNull, v4, 0);
      return (uint64_t)a1;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_100131E50(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_delegate;
  *(void *)&v1[OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_delegate] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_dataProviders] = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_title;
  uint64_t v5 = qword_1015CBD78;
  uint64_t v6 = v1;
  if (v5 != -1) {
    swift_once();
  }
  v14._countAndFlagsBits = 0xD000000000000035;
  v14._object = (void *)0x8000000100F769D0;
  v7._object = (void *)0x8000000100F769A0;
  v7._countAndFlagsBits = 0xD000000000000024;
  v8._countAndFlagsBits = 0x656469754720794DLL;
  v8._object = (void *)0xE900000000000073;
  *(Swift::String *)&v6[v4] = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)qword_101611820, v8, v14);
  uint64_t v9 = OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_collectionDataProvider;
  *(void *)&v6[v9] = [objc_allocWithZone((Class)CollectionsDataProvider) initWithContext:2 observeInfo:0 observeContents:0];
  uint64_t v10 = &v6[OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher____lazy_storage___maxNumberOfCollections];
  *(void *)uint64_t v10 = 0;
  void v10[8] = 1;
  *(void *)&v6[OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_diffableSnapshotObjects] = _swiftEmptyArrayStorage;
  *(void *)&v1[v3] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v6[OBJC_IVAR____TtC4Maps31SearchHomeUserGuidesDataFetcher_isFetchingDataComplete] = 1;
  id v11 = *(id *)&v6[v9];
  [v11 setActive:1];

  v13.unint64_t receiver = v6;
  v13.Class super_class = (Class)type metadata accessor for SearchHomeUserGuidesDataFetcher();
  return [super init];
}

char *sub_100132014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 8 * a1;
  sub_1001314D4();
  uint64_t result = (char *)swift_arrayDestroy();
  BOOL v10 = __OFSUB__(a3, v4);
  uint64_t v11 = a3 - v4;
  if (v10)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v11) {
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v10 = __OFSUB__(v12, a2);
  uint64_t v13 = v12 - a2;
  if (v10) {
    goto LABEL_18;
  }
  if (v13 < 0)
  {
LABEL_21:
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v8 + 8 * a3);
  Swift::String v14 = (char *)(v7 + 32 + 8 * a2);
  if (result != v14 || result >= &v14[8 * v13]) {
    uint64_t result = (char *)memmove(result, v14, 8 * v13);
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v10 = __OFADD__(v16, v11);
  uint64_t v17 = v16 + v11;
  if (v10) {
    goto LABEL_19;
  }
  *(void *)(v7 + 16) = v17;
LABEL_14:
  if (a3 > 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

void sub_10013212C()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  byte_1015CEF60 = v1 == 0;
}

void sub_100132190(uint64_t a1, __int16 a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v61 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v12);
  Swift::String v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = __chkstk_darwin(v15).n128_u64[0];
  uint64_t v19 = (char *)&v58 - v18;
  unint64_t v20 = *(void *)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex];
  if ((v20 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_allStates];
  if (v20 >= *(void *)(v21 + 16))
  {
LABEL_25:
    __break(1u);
    return;
  }
  char v22 = a2;
  unsigned int v23 = a2 & 0x100;
  uint64_t v24 = v21 + 16 * v20;
  uint64_t v25 = *(void *)(v24 + 32);
  int v26 = *(unsigned __int8 *)(v24 + 40);
  int v27 = v26 | (v23 >> 8);
  int v28 = v22 & 1;
  if (v27 != 1 && v28 == 0)
  {
    id v41 = self;
    uint64_t v42 = *(void *)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView];
    uint64_t v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v43;
    *(void *)(v44 + 24) = v25;
    uint64_t v66 = sub_100135320;
    uint64_t v67 = v44;
    aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    uint64_t v64 = sub_10008C380;
    uint64_t v65 = &unk_1012DA008;
    unsigned __int8 v45 = _Block_copy(&aBlock);
    swift_release();
    [v41 transitionWithView:v42 duration:5242880 options:v45 animations:0 completion:1.0];
    _Block_release(v45);
  }
  else
  {
    int v30 = v26 ^ 1 | (v23 >> 8);
    if (v30 != 1 && v28 == 0)
    {
      [*(id *)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_timer] invalidate];
      uint64_t v46 = self;
      uint64_t v47 = *(void *)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView];
      uint64_t v48 = *(void *)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView];
      uint64_t v49 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v66 = sub_1001352E0;
      uint64_t v67 = v49;
      aBlock = _NSConcreteStackBlock;
      uint64_t v63 = 1107296256;
      uint64_t v64 = sub_100316A88;
      uint64_t v65 = &unk_1012D9FB8;
      uint64_t v50 = _Block_copy(&aBlock);
      swift_release();
      [v46 transitionFromView:v47 toView:v48 duration:5243136 options:v50 completion:1.0];
      _Block_release(v50);
    }
    else
    {
      BOOL v32 = (v22 & 1) == 0;
      if (v22) {
        char v33 = v27;
      }
      else {
        char v33 = 1;
      }
      if (v33)
      {
        if (v32) {
          char v34 = 1;
        }
        else {
          char v34 = v30;
        }
        if ((v34 & 1) == 0)
        {
          uint64_t v35 = *(void **)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_timer];
          uint64_t v60 = v16;
          [v35 invalidate:v17];
          [*(id *)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView] reset];
          sub_100100830(0, (unint64_t *)&qword_1015CE570);
          uint64_t v58 = static OS_dispatch_queue.main.getter();
          static DispatchTime.now()();
          + infix(_:_:)();
          uint64_t v59 = v9;
          uint64_t v36 = *(void (**)(char *, uint64_t))(v60 + 8);
          v60 += 8;
          v36(v14, v12);
          uint64_t v37 = swift_allocObject();
          *(void *)(v37 + 16) = v3;
          uint64_t v66 = sub_1001351D0;
          uint64_t v67 = v37;
          aBlock = _NSConcreteStackBlock;
          uint64_t v63 = 1107296256;
          uint64_t v64 = sub_10008C380;
          uint64_t v65 = &unk_1012D9F40;
          uint64_t v38 = _Block_copy(&aBlock);
          uint64_t v39 = v3;
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock = (void **)_swiftEmptyArrayStorage;
          sub_10010B9B0();
          sub_1000FF33C((uint64_t *)&unk_1015CE580);
          sub_10010B554();
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v40 = (void *)v58;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v38);

          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v59);
          v36(v19, v12);
        }
      }
      else
      {
        uint64_t v59 = v6;
        uint64_t v60 = v16;
        uint64_t v51 = *(void **)&v3[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView];
        uint64_t v52 = (void *)sub_1001351EC(v25);
        [v51 setImage:v52];

        sub_100100830(0, (unint64_t *)&qword_1015CE570);
        uint64_t v58 = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v53 = *(void (**)(char *, uint64_t))(v60 + 8);
        v60 += 8;
        v53(v14, v12);
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = v3;
        uint64_t v66 = sub_1001352D8;
        uint64_t v67 = v54;
        aBlock = _NSConcreteStackBlock;
        uint64_t v63 = 1107296256;
        uint64_t v64 = sub_10008C380;
        uint64_t v65 = &unk_1012D9F90;
        uint64_t v55 = _Block_copy(&aBlock);
        uint64_t v56 = v3;
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock = (void **)_swiftEmptyArrayStorage;
        sub_10010B9B0();
        sub_1000FF33C((uint64_t *)&unk_1015CE580);
        sub_10010B554();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v57 = (void *)v58;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v55);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v8, v5);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v11, v9);
        v53(v19, v12);
      }
    }
  }
}

void sub_100132A58()
{
  uint64_t v5 = v0;
  v114.unint64_t receiver = v0;
  v114.Class super_class = (Class)type metadata accessor for HikingWelcomeViewController();
  [super viewDidLoad];
  id v6 = [v0 presentationController];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 setDelegate:v5];
  }
  id v8 = [v5 view];
  if (!v8)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v9 = v8;
  id v10 = [self systemBackgroundColor];
  [v9 setBackgroundColor:v10];

  uint64_t v11 = *(void **)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView];
  [v11 setClipsToBounds:1];
  [v11 setContentMode:2];
  unint64_t v12 = *(void *)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex];
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v13 = *(void *)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_allStates];
  if (v12 >= *(void *)(v13 + 16))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v14 = v13 + 16 * v12;
  if ((*(unsigned char *)(v14 + 40) & 1) == 0)
  {
    uint64_t v15 = (void *)sub_1001351EC(*(void *)(v14 + 32));
    [v11 setImage:v15];
  }
  id v113 = v11;
  id v1 = *(void **)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleText];
  [v1 setNumberOfLines:0];
  [v1 setTextAlignment:1];
  id v16 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleLargeTitle];
  id v17 = [v16 fontDescriptorWithSymbolicTraits:2];

  if (v17)
  {
    id v18 = [self fontWithDescriptor:v17 size:0.0];
    [v1 setFont:v18];
  }
  sub_1001357DC();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v19];

  uint64_t v4 = &selRef_setAutoresizingMask_;
  LODWORD(v20) = 1148846080;
  [v1 setContentCompressionResistancePriority:1 forAxis:v20];
  unint64_t v2 = *(void **)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bodyText];
  [v2 setTextAlignment:1];
  [v2 setNumberOfLines:0];
  id v21 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v2 setFont:v21];

  sub_10013594C();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v22];

  LODWORD(v23) = 1148846080;
  [v2 setContentCompressionResistancePriority:1 forAxis:v23];
  id v3 = [self boldButton];
  [v3 addTarget:v5 action:"continueTapped" forControlEvents:64];
  if (qword_1015CBD78 != -1) {
    goto LABEL_36;
  }
LABEL_11:
  v115._countAndFlagsBits = 0xD000000000000038;
  v115._object = (void *)0x8000000100F76CA0;
  v24._object = (void *)0x8000000100F76C80;
  v24._countAndFlagsBits = 0xD000000000000017;
  v25._countAndFlagsBits = 0x65756E69746E6F43;
  v25._object = (void *)0xE800000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)qword_101611820, v25, v115);
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setTitle:v26 forState:0];

  LODWORD(v27) = 1148846080;
  [v3 v4[511] 1 v27];
  if (qword_1015CBB48 != -1) {
    swift_once();
  }
  if ((byte_1015CEF60 & 1) == 0)
  {
    id v28 = [v3 widthAnchor];
    id v29 = [v28 constraintEqualToConstant:320.0];

    [v29 setActive:1];
  }
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100F5E000;
  *(void *)(v30 + 32) = v1;
  *(void *)(v30 + ++*(void *)(*((void *)result + 4) + 40) = v2;
  *(void *)(v30 + 4_Block_object_dispose(&STACK[0x358], 8) = v3;
  specialized Array._endMutation()();
  id v31 = objc_allocWithZone((Class)UIStackView);
  sub_100100830(0, (unint64_t *)&qword_1015CF000);
  id v32 = v1;
  id v33 = v2;
  id v111 = v3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v35 = [v31 initWithArrangedSubviews:isa];

  [v35 setAxis:1];
  [v35 setSpacing:14.0];
  id v112 = v33;
  [v35 setCustomSpacing:v33 afterView:24.0];
  uint64_t v36 = *(void **)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bottomStackView];
  *(void *)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bottomStackView] = v35;
  id v37 = v35;

  [v113 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v38 = [v5 view];
  if (!v38) {
    goto LABEL_38;
  }
  uint64_t v39 = v38;
  [v38 addSubview:v113];

  uint64_t v40 = *(void **)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView];
  [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v41 = [v5 view];
  if (!v41)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v42 = v41;
  [v41 addSubview:v40];

  id v43 = [v5 view];
  if (!v43)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v44 = v43;
  [v43 addSubview:*(void *)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_topContentGradientView]];

  id v45 = [v5 view];
  if (!v45)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v46 = v45;
  [v45 addSubview:*(void *)&v5[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleToBodyGradientView]];

  [v37 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v47 = [v5 view];
  if (!v47)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v48 = v47;
  [v47 addSubview:v37];

  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_100F5F0C0;
  id v50 = [v37 bottomAnchor];
  id v51 = [v5 view];
  if (!v51)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v52 = v37;
  uint64_t v53 = v51;
  id v54 = [v51 safeAreaLayoutGuide];

  id v55 = [v54 bottomAnchor];
  id v56 = [v50 constraintEqualToAnchor:v55 constant:-58.0];

  *(void *)(v49 + 32) = v56;
  id v57 = [v52 leadingAnchor];
  id v58 = [v5 view];
  if (!v58)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v59 = v58;
  id v60 = [v58 layoutMarginsGuide];

  id v61 = [v60 leadingAnchor];
  double v62 = 44.0;
  if (byte_1015CEF60) {
    double v62 = 0.0;
  }
  id v63 = [v57 constraintEqualToAnchor:v61 constant:v62];

  *(void *)(v49 + ++*(void *)(*((void *)result + 4) + 40) = v63;
  __int16 v110 = v52;
  id v64 = [v52 trailingAnchor];
  id v65 = [v5 view];
  if (!v65) {
    goto LABEL_45;
  }
  uint64_t v66 = v65;
  id v67 = [v65 layoutMarginsGuide];

  id v68 = [v67 trailingAnchor];
  double v69 = -44.0;
  if (byte_1015CEF60) {
    double v69 = 0.0;
  }
  id v70 = [v64 constraintEqualToAnchor:v68 constant:v69];

  *(void *)(v49 + 4_Block_object_dispose(&STACK[0x358], 8) = v70;
  id v71 = [v113 topAnchor];
  id v72 = [v5 view];
  if (!v72) {
    goto LABEL_46;
  }
  uint64_t v73 = v72;
  id v74 = [v72 topAnchor];

  id v75 = [v71 constraintEqualToAnchor:v74];
  *(void *)(v49 + 56) = v75;
  id v76 = [v113 leadingAnchor];
  id v77 = [v5 view];
  if (!v77)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  id v78 = v77;
  id v79 = [v77 leadingAnchor];

  id v80 = [v76 constraintEqualToAnchor:v79];
  *(void *)(v49 + 64) = v80;
  id v81 = [v113 trailingAnchor];
  id v82 = [v5 view];
  if (!v82)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v83 = v82;
  id v84 = [v82 trailingAnchor];

  id v85 = [v81 constraintEqualToAnchor:v84];
  *(void *)(v49 + 72) = v85;
  id v86 = [v113 bottomAnchor];
  id v87 = [v112 topAnchor];
  id v88 = [v86 constraintEqualToAnchor:v87];

  *(void *)(v49 + 80) = v88;
  id v89 = [v40 topAnchor];
  id v90 = [v5 view];
  if (!v90)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v91 = v90;
  id v92 = [v90 topAnchor];

  id v93 = [v89 constraintEqualToAnchor:v92];
  *(void *)(v49 + 8_Block_object_dispose(&STACK[0x358], 8) = v93;
  id v94 = [v40 leadingAnchor];
  id v95 = [v5 view];
  if (!v95)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v96 = v95;
  id v97 = [v95 leadingAnchor];

  id v98 = [v94 constraintEqualToAnchor:v97];
  *(void *)(v49 + 96) = v98;
  id v99 = [v40 trailingAnchor];
  id v100 = [v5 view];
  if (v100)
  {
    uint64_t v101 = v100;
    uint64_t v102 = self;
    id v103 = [v101 trailingAnchor];

    id v104 = [v99 constraintEqualToAnchor:v103];
    *(void *)(v49 + 104) = v104;
    id v105 = [v40 bottomAnchor];
    id v106 = [v112 topAnchor];
    id v107 = [v105 constraintEqualToAnchor:v106];

    *(void *)(v49 + 112) = v107;
    specialized Array._endMutation()();
    sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
    Class v108 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v102 activateConstraints:v108];

    sub_1001338A4();
    sub_1001339CC();
    sub_1000FF33C((uint64_t *)&unk_1015CF010);
    uint64_t v109 = swift_allocObject();
    *(_OWORD *)(v109 + 16) = xmmword_100F5CF70;
    *(void *)(v109 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
    *(void *)(v109 + ++*(void *)(*((void *)result + 4) + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    UIViewController.registerForTraitChanges(_:action:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_100133D3C();

    return;
  }
LABEL_51:
  __break(1u);
}

void sub_1001338A4()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v5[4] = sub_100135ABC;
  void v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_10008C380;
  v5[3] = &unk_1012DA080;
  id v3 = _Block_copy(v5);
  swift_release();
  [v1 setPlaybackDidEndBlock:v3];
  _Block_release(v3);
  [v1 setAspectFill:1];
  sub_100134C7C();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 loadAssetNamed:v4];
}

void sub_1001339CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_topContentGradientView);
  [v2 setDisableReduceTransparency:1];
  [v2 setColors:0];
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5E000;
  NSString v4 = self;
  id v5 = [v4 systemBackgroundColor];
  id v6 = [v5 colorWithAlphaComponent:0.0];

  *(void *)(v3 + 32) = v6;
  id v7 = [v4 systemBackgroundColor];
  id v8 = [v7 colorWithAlphaComponent:0.2];

  *(void *)(v3 + ++*(void *)(*((void *)result + 4) + 40) = v8;
  id v9 = [v4 systemBackgroundColor];
  id v10 = [v9 colorWithAlphaComponent:0.6];

  *(void *)(v3 + 4_Block_object_dispose(&STACK[0x358], 8) = v10;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CEFF0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setColors:isa];

  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100F5E000;
  sub_100100830(0, (unint64_t *)&qword_1015D9680);
  *(NSNumber *)(v12 + 32) = NSNumber.init(integerLiteral:)(0);
  *(NSNumber *)(v12 + ++*(void *)(*((void *)result + 4) + 40) = NSNumber.init(floatLiteral:)(0.6);
  *(NSNumber *)(v12 + 4_Block_object_dispose(&STACK[0x358], 8) = NSNumber.init(integerLiteral:)(1);
  specialized Array._endMutation()();
  Class v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setLocations:v13];

  uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleToBodyGradientView);
  [v14 setDisableReduceTransparency:1];
  [v14 setColors:0];
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100F5F0D0;
  id v16 = [v4 systemBackgroundColor];
  id v17 = [v16 colorWithAlphaComponent:0.6];

  *(void *)(v15 + 32) = v17;
  *(void *)(v15 + ++*(void *)(*((void *)result + 4) + 40) = [v4 systemBackgroundColor];
  specialized Array._endMutation()();
  v18.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 setColors:v18.super.isa];
}

void sub_100133D3C()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex);
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_allStates);
  if (v1 >= *(void *)(v2 + 16))
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v3 = v2 + 16 * v1;
  int v4 = *(unsigned __int8 *)(v3 + 40);
  if (v4)
  {
    [*(id *)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView) setHidden:1];
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 32);
    id v6 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView);
    [v6 setHidden:0];
    id v7 = (void *)sub_1001351EC(v5);
    [v6 setImage:v7];
  }
  id v8 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView);

  [v8 setHidden:v4 ^ 1u];
}

void sub_100133E74()
{
  id v1 = [self sharedConfiguration];
  if (v1)
  {
    uint64_t v2 = v1;
    unsigned int v3 = [v1 currentCountrySupportsCuratedRoutes];

    if (v3) {
      double v4 = 2.0;
    }
    else {
      double v4 = 0.0;
    }
    uint64_t v5 = self;
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    void v10[4] = sub_100135190;
    void v10[5] = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    _OWORD v10[2] = sub_10025DB88;
    _OWORD v10[3] = &unk_1012D9EF0;
    id v7 = _Block_copy(v10);
    swift_release();
    id v8 = [v5 scheduledTimerWithTimeInterval:1 repeats:v7 block:v4];
    _Block_release(v7);
    id v9 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_timer);
    *(void *)(v0 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_timer) = v8;
  }
  else
  {
    __break(1u);
  }
}

void sub_1001340A4()
{
  v45.unint64_t receiver = v0;
  v45.Class super_class = (Class)type metadata accessor for HikingWelcomeViewController();
  [super viewDidLayoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bottomStackView];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 view];
    if (v3)
    {
      double v4 = v3;
      [*(id *)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleText] frame];
      [v4 convertRect:v2 fromCoordinateSpace:];
      CGFloat v6 = v5;
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;

      id v13 = [v0 view];
      if (v13)
      {
        uint64_t v14 = v13;
        [*(id *)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bodyText] frame];
        [v14 convertRect:v2 fromCoordinateSpace:];

        uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleToBodyGradientView];
        CGFloat v16 = v6;
        v46.origin.x = v6;
        CGFloat v17 = v8;
        v46.origin.y = v8;
        CGFloat v18 = v10;
        v46.size.width = v10;
        CGFloat v19 = v12;
        v46.size.double height = v12;
        double MinY = CGRectGetMinY(v46);
        id v20 = [v0 view];
        if (v20)
        {
          id v21 = v20;
          [v20 frame];
          CGFloat v23 = v22;
          CGFloat v25 = v24;
          CGFloat v27 = v26;
          CGFloat v29 = v28;

          v47.origin.x = v23;
          v47.origin.y = v25;
          v47.size.width = v27;
          v47.size.double height = v29;
          double Width = CGRectGetWidth(v47);
          v48.origin.x = v16;
          v48.origin.y = v17;
          v48.size.width = v18;
          v48.size.double height = v19;
          [v15 setFrame:CGRectMake(0.0, MinY, Width, CGRectGetHeight(v48) + 14.0)];
          [*(id *)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView] frame];
          double Height = CGRectGetHeight(v49);
          id v32 = *(void **)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_topContentGradientView];
          [v15 frame];
          double v33 = CGRectGetMinY(v50);
          id v34 = [v0 view];
          if (v34)
          {
            id v35 = v34;
            [v34 frame];
            CGFloat v37 = v36;
            CGFloat v39 = v38;
            CGFloat v41 = v40;
            CGFloat v43 = v42;

            v51.origin.x = v37;
            v51.origin.y = v39;
            v51.size.width = v41;
            v51.size.double height = v43;
            [v32 setFrame:CGRectMake(0.0, v33 - Height / 3.0, CGRectGetWidth(v51), Height / 3.0)];

            return;
          }
LABEL_11:
          __break(1u);
          return;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

id sub_100134460()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for HikingWelcomeViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for HikingWelcomeViewController()
{
  return self;
}

void sub_100134590(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView);
    CGFloat v6 = (void *)sub_1001351EC(a2);
    [v5 setImage:v6];
  }
}

uint64_t sub_100134628(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  __chkstk_darwin(v5);
  double v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v20 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v19 - v13;
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  CGFloat v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  aBlock[4] = sub_100135328;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  void aBlock[3] = &unk_1012DA030;
  CGFloat v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10010B9B0();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v20);
}

void sub_100134984()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView);

    [v2 play];
  }
}

void sub_1001349FC(uint64_t a1)
{
  id v2 = self;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v7[4] = sub_100135330;
  void v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_100316A88;
  v7[3] = &unk_1012DA058;
  uint64_t v6 = _Block_copy(v7);
  swift_release();
  [v2 transitionFromView:v3 toView:v4 duration:5243136 options:v6 completion:1.0];
  _Block_release(v6);
}

void sub_100134B1C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView);

    [v2 reset];
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_100133E74();
  }
}

void sub_100134BC8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_allStates);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      unint64_t v4 = *(void *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex);
      BOOL v5 = v3 != 1;
      BOOL v6 = __OFADD__(v4, v5);
      unint64_t v7 = v4 + v5;
      if (!v6)
      {
        *(void *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex) = v7;
        if ((v4 & 0x8000000000000000) == 0)
        {
          if (v4 < *(void *)(v2 + 16))
          {
            sub_100132190(*(void *)(v2 + 16 * v4 + 32), *(unsigned __int8 *)(v2 + 16 * v4 + 40));

            return;
          }
LABEL_11:
          __break(1u);
          return;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

id sub_100134C7C()
{
  id result = [self sharedConfiguration];
  if (result)
  {
    uint64_t v2 = result;
    unsigned int v3 = [result currentCountrySupportsTopographicMap];

    id v4 = [v0 traitCollection];
    id v5 = [v4 userInterfaceStyle];

    unint64_t v6 = 0xD000000000000018;
    if (v5 != (id)2) {
      unint64_t v6 = 0xD000000000000013;
    }
    unint64_t v7 = 0xD000000000000026;
    if (v5 != (id)2) {
      unint64_t v7 = 0xD000000000000021;
    }
    if (v3) {
      return (id)v6;
    }
    else {
      return (id)v7;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100134D84()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    unint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex);
    *(void *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex) = 0;
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = *(void *)(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_allStates);
      if (v2 < *(void *)(v3 + 16))
      {
        sub_100132190(*(void *)(v3 + 16 * v2 + 32), *(unsigned __int8 *)(v3 + 16 * v2 + 40));

        return;
      }
    }
    __break(1u);
  }
}

void sub_100134ED4()
{
  [self captureUserAction:127 target:134 value:0];
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v3[4] = sub_100135188;
  void v3[5] = v1;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10008C380;
  v3[3] = &unk_1012D9EC8;
  unint64_t v2 = _Block_copy(v3);
  swift_release();
  [v0 dismissViewControllerAnimated:1 completion:v2];
  _Block_release(v2);
}

void sub_100134FCC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    unint64_t v2 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_completionHandler);
    if (v2)
    {
      uint64_t v3 = swift_retain();
      v2(v3);
      sub_10006C5D8((uint64_t)v2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for HikingWelcomeViewController.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + _Block_object_dispose(&STACK[0x358], 8) = *((unsigned char *)a2 + 8);
  *(void *)id result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for HikingWelcomeViewController.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HikingWelcomeViewController.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)id result = 0;
    *(unsigned char *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
    *(_DWORD *)id result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100135104(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100135120(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)id result = (a2 - 1);
    *(unsigned char *)(result + _Block_object_dispose(&STACK[0x358], 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + _Block_object_dispose(&STACK[0x358], 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for HikingWelcomeViewController.State()
{
  return &type metadata for HikingWelcomeViewController.State;
}

uint64_t sub_100135150()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100135188()
{
}

void sub_100135190()
{
}

uint64_t sub_100135198()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001351D0()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView) play];
}

uint64_t sub_1001351EC(uint64_t a1)
{
  _StringGuts.grow(_:)(16);
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [self imageNamed:v4];

    return (uint64_t)v5;
  }
  return result;
}

void sub_1001352D8()
{
  sub_1001349FC(*(void *)(v0 + 16));
}

uint64_t sub_1001352E0(uint64_t a1)
{
  return sub_100134628(a1, v1);
}

uint64_t sub_1001352E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100135320()
{
  sub_100134590(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100135328()
{
}

void sub_100135330()
{
}

void *sub_100135338()
{
  uint64_t result = [self sharedConfiguration];
  if (result)
  {
    uint64_t v1 = result;
    unsigned int v2 = [result currentCountrySupportsCuratedRoutes];

    if (v2)
    {
      Swift::String v3 = sub_1001CF538(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v5 = v3[2];
      unint64_t v4 = v3[3];
      unint64_t v6 = v4 >> 1;
      unint64_t v7 = v5 + 1;
      if (v4 >> 1 <= v5)
      {
        Swift::String v3 = sub_1001CF538((void *)(v4 > 1), v5 + 1, 1, v3);
        unint64_t v4 = v3[3];
        unint64_t v6 = v4 >> 1;
      }
      v3[2] = v7;
      uint64_t v8 = &v3[2 * v5];
      void v8[4] = 0;
      *((unsigned char *)v8 + ++*(void *)(*((void *)result + 4) + 40) = 0;
      unint64_t v9 = v5 + 2;
      if (v6 <= v7)
      {
        Swift::String v3 = sub_1001CF538((void *)(v4 > 1), v5 + 2, 1, v3);
        unint64_t v4 = v3[3];
        unint64_t v6 = v4 >> 1;
      }
      v3[2] = v9;
      uint64_t v10 = &v3[2 * v7];
      void v10[4] = 1;
      *((unsigned char *)v10 + ++*(void *)(*((void *)result + 4) + 40) = 0;
      if (v6 <= v9) {
        Swift::String v3 = sub_1001CF538((void *)(v4 > 1), v5 + 3, 1, v3);
      }
      v3[2] = v5 + 3;
      double v11 = &v3[2 * v9];
      void v11[4] = 2;
      *((unsigned char *)v11 + ++*(void *)(*((void *)result + 4) + 40) = 0;
    }
    else
    {
      Swift::String v3 = _swiftEmptyArrayStorage;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v3 = sub_1001CF538(0, v3[2] + 1, 1, v3);
    }
    unint64_t v13 = v3[2];
    unint64_t v12 = v3[3];
    if (v13 >= v12 >> 1) {
      Swift::String v3 = sub_1001CF538((void *)(v12 > 1), v13 + 1, 1, v3);
    }
    v3[2] = v13 + 1;
    uint64_t v14 = &v3[2 * v13];
    void v14[4] = 0;
    *((unsigned char *)v14 + ++*(void *)(*((void *)result + 4) + 40) = 1;
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100135510(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex] = 0;
  uint64_t v5 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView;
  id v6 = objc_allocWithZone((Class)UIImageView);
  unint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)MapsVideoPlayerView) init];
  *(void *)&v7[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_timer] = 0;
  uint64_t v9 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleText;
  *(void *)&v7[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bodyText;
  *(void *)&v7[v10] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v7[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bottomStackView] = 0;
  uint64_t v11 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_topContentGradientView;
  *(void *)&v7[v11] = [objc_allocWithZone((Class)MUGradientView) init];
  uint64_t v12 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleToBodyGradientView;
  *(void *)&v7[v12] = [objc_allocWithZone((Class)MUGradientView) init];
  unint64_t v13 = (uint64_t *)&v7[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_completionHandler];
  *unint64_t v13 = a1;
  v13[1] = a2;
  sub_1000F4F24(a1);
  *(void *)&v7[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_allStates] = sub_100135338();

  v15.unint64_t receiver = v7;
  v15.Class super_class = (Class)type metadata accessor for HikingWelcomeViewController();
  return [super initWithNibName:0 bundle:0];
}

void sub_100135694()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_stateIndex] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_imageView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_videoView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)MapsVideoPlayerView) init];
  *(void *)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_timer] = 0;
  uint64_t v3 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleText;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bodyText;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_bottomStackView] = 0;
  uint64_t v5 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_topContentGradientView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)MUGradientView) init];
  uint64_t v6 = OBJC_IVAR____TtC4Maps27HikingWelcomeViewController_titleToBodyGradientView;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)MUGradientView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1001357DC()
{
  id result = [self sharedConfiguration];
  if (result)
  {
    uint64_t v1 = result;
    unsigned int v2 = [result currentCountrySupportsCuratedRoutes];

    if (v2)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v3.super.Class isa = (Class)qword_101611820;
      unint64_t v4 = 0xD000000000000023;
      unint64_t v5 = 0xD000000000000040;
      unint64_t v9 = 0x8000000100F76FC0;
      unint64_t v6 = 0x8000000100F76F70;
      unint64_t v7 = 0x8000000100F76F90;
      unint64_t v8 = 0xD000000000000014;
    }
    else
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v3.super.Class isa = (Class)qword_101611820;
      unint64_t v4 = 0xD000000000000019;
      unint64_t v8 = 0xD00000000000002ALL;
      unint64_t v5 = 0xD000000000000043;
      unint64_t v9 = 0x8000000100F76F20;
      unint64_t v6 = 0x8000000100F76ED0;
      unint64_t v7 = 0x8000000100F76F00;
    }
    return (id)NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, (Swift::String_optional)0, v3, *(Swift::String *)&v4, *(Swift::String *)&v5)._countAndFlagsBits;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10013594C()
{
  id result = [self sharedConfiguration];
  if (result)
  {
    uint64_t v1 = result;
    unsigned int v2 = [result currentCountrySupportsCuratedRoutes];

    if (v2)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v3.super.Class isa = (Class)qword_101611820;
      unint64_t v4 = 0xD000000000000044;
      unint64_t v5 = 0xD000000000000073;
      unint64_t v9 = 0x8000000100F76E80;
      unint64_t v6 = 0x8000000100F76DE0;
      unint64_t v7 = 0x8000000100F76E00;
      unint64_t v8 = 0xD000000000000018;
    }
    else
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v3.super.Class isa = (Class)qword_101611820;
      unint64_t v8 = 0xD00000000000002ELL;
      unint64_t v4 = 0xD000000000000047;
      unint64_t v5 = 0xD000000000000078;
      unint64_t v9 = 0x8000000100F76D90;
      unint64_t v6 = 0x8000000100F76CE0;
      unint64_t v7 = 0x8000000100F76D10;
    }
    return (id)NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, (Swift::String_optional)0, v3, *(Swift::String *)&v5, *(Swift::String *)&v4)._countAndFlagsBits;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100135ABC()
{
}

uint64_t sub_100135AC4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100135AFC()
{
  return sub_1002F66E0(*(void *)(v0 + 16));
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitPhotoCarousel()
{
  return &type metadata for PlaceSummaryUnitPhotoCarousel;
}

uint64_t sub_100135B40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100135BB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100135C2C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_100135D68()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015CF280);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v0[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider__categories];
  double v28 = _swiftEmptyArrayStorage;
  unint64_t v13 = v0;
  sub_1000FF33C(&qword_1015CF0B0);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  uint64_t v14 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_storeSubscriptionTypes;
  sub_100028D98();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100F5CF70;
  *(void *)(v15 + 32) = type metadata accessor for CollectionTransitItem();
  *(void *)&v13[v14] = v15;
  *(void *)&v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_mapItemUpdater] = 0;
  *(void *)&v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation] = 0;
  CGFloat v16 = &v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedZoomLevel];
  *(void *)CGFloat v16 = 0;
  v16[8] = 1;
  *(void *)&v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_geoNearbyTransitSchedule] = 0;
  *(void *)&v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_transitAttribution] = 0;
  *(void *)&v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_singleLocationUpdate] = 0;
  *(void *)&v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_pinnedLines] = &_swiftEmptySetSingleton;
  *(void *)&v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  CGFloat v17 = &v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate];
  *(_OWORD *)CGFloat v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((void *)v17 + 4) = 0;
  id v18 = [self referenceDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  swift_endAccess();
  swift_beginAccess();
  char v27 = 0;
  Published.init(initialValue:)();
  swift_endAccess();
  v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser] = 0;
  v13[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive] = 0;

  uint64_t v19 = (objc_class *)type metadata accessor for NearbyTransitDeparturesProvider();
  v26.unint64_t receiver = v13;
  v26.Class super_class = v19;
  id v20 = [super init];
  type metadata accessor for MapsSyncStore();
  id v21 = v20;
  uint64_t v22 = (void *)static MapsSyncStore.sharedStore.getter();
  id v23 = v21;
  dispatch thunk of MapsSyncStore.subscribe(_:)();

  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v23 storeDidChangeWithTypes:isa];

  return v23;
}

id sub_1001361A4()
{
  v2.unint64_t receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for NearbyTransitDeparturesProvider();
  return [super dealloc];
}

uint64_t sub_10013636C()
{
  return type metadata accessor for NearbyTransitDeparturesProvider();
}

uint64_t type metadata accessor for NearbyTransitDeparturesProvider()
{
  uint64_t result = qword_1015CF090;
  if (!qword_1015CF090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001363C0()
{
  sub_100136510();
  if (v0 <= 0x3F)
  {
    sub_100136568();
    if (v1 <= 0x3F)
    {
      sub_1001365C4();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100136510()
{
  if (!qword_1015CF0A0)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015CF0A0);
    }
  }
}

void sub_100136568()
{
  if (!qword_1015CF0A8)
  {
    sub_10010118C(&qword_1015CF0B0);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015CF0A8);
    }
  }
}

void sub_1001365C4()
{
  if (!qword_1015CF0B8)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015CF0B8);
    }
  }
}

uint64_t sub_10013661C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NearbyTransitDeparturesProvider();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id sub_10013665C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self sharedService];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  id v6 = [v4 defaultTraits];

  if (!v6) {
    return v6;
  }
  id v7 = [objc_allocWithZone((Class)GEOTraitsTransitScheduleModeFilter) init];
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 setNumAdditionalDepartures:4];
    id v9 = [objc_allocWithZone((Class)GEOTraitsTransitScheduleTimeRange) init];
    [v8 setTimeRange:v9];

    id v10 = [v8 timeRange];
    if (v10)
    {
      uint64_t v11 = v10;
      [v10 setDuration:3600.0];
    }
    id v12 = [v8 timeRange];
    if (v12)
    {
      unint64_t v13 = v12;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      Date.timeIntervalSinceReferenceDate.getter();
      double v15 = v14;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      [v13 setStartTime:v15];
    }
    id v16 = [objc_allocWithZone((Class)GEOTraitsTransitScheduleFilter) init];
    CGFloat v17 = v16;
    if (v16)
    {
      [v16 setHighFrequencyFilter:v8];
      [v17 setLowFrequencyFilter:v8];
    }
    [v6 setTransitTripStopTimeFilter:v17];
  }
  id v18 = [v6 transitScheduleFilter];
  if (!v18) {
    return v6;
  }
  uint64_t v19 = v18;
  id result = [v18 highFrequencyFilter];
  if (result)
  {
    id v21 = result;
    [result setNumAdditionalDepartures:4];

    id result = [v19 lowFrequencyFilter];
    if (result)
    {
      uint64_t v22 = result;
      [result setNumAdditionalDepartures:4];

      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10013699C()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 sharedLocationManager];
  if (!v3)
  {
    __break(1u);
    goto LABEL_30;
  }
  id v4 = v3;
  unsigned __int8 v5 = [v3 isLocationServicesAvailable];

  if ((v5 & 1) == 0)
  {
    if (qword_1015CBD38 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000F2248(v6, (uint64_t)qword_101611760);
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Requesting nearby departures based on the user location, but the location manager has insufficient privileges", v9, 2u);
      swift_slowDealloc();
    }
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser) == 1)
  {
    if (qword_1015CBD38 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000F2248(v10, (uint64_t)qword_101611760);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Calling requestNearbyDeparturesForUserLocation, but already tracking the user's location", v12, 2u);
      swift_slowDealloc();
    }

    return;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser) = 1;
  id v13 = [v2 sharedLocationManager];
  if (!v13)
  {
LABEL_30:
    __break(1u);
    return;
  }
  double v14 = v13;
  unsigned __int8 v15 = [v13 hasLocation];

  if ((v15 & 1) != 0 || (id v16 = [v2 sharedLocationManager]) == 0)
  {
    sub_100136EEC();
  }
  else
  {
    CGFloat v17 = v16;
    if (qword_1015CBD38 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000F2248(v18, (uint64_t)qword_101611760);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Location manager doesn't have a location yet, requesting a single update. Did we launch from the complication?", v21, 2u);
      swift_slowDealloc();
    }

    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10013C448;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100033BC0;
    void aBlock[3] = &unk_1012DA1A8;
    uint64_t v23 = _Block_copy(aBlock);
    swift_release();
    id v24 = [v17 singleLocationUpdateWithHandler:v23];
    _Block_release(v23);
    uint64_t v25 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_singleLocationUpdate;
    *(void *)(v1 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_singleLocationUpdate) = v24;
    swift_unknownObjectRelease();
    objc_super v26 = *(void **)(v1 + v25);
    if (v26) {
      [v26 start];
    }
  }
}

void sub_100136DDC()
{
  if (qword_1015CBD38 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000F2248(v0, (uint64_t)qword_101611760);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Received a single location update, will request nearby departures", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v5 = (void *)Strong;
    sub_100136EEC();
  }
}

void sub_100136EEC()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser;
  if ((v0[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedZoomLevel + 8] & 1) == 0
    && (v0[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser] & 1) == 0)
  {
    double v2 = *(double *)&v0[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedZoomLevel];
    GEOConfigGetDouble();
    if (v2 < v3)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(aBlock[0]) = 6;
      id v4 = v0;
      static Published.subscript.setter();
      return;
    }
    uint64_t v1 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser;
  }
  if (v0[v1] == 1)
  {
    id v5 = [self sharedLocationManager];
    id v6 = [v5 currentLocation];

    if (v6) {
      goto LABEL_8;
    }
LABEL_14:
    if (qword_1015CBD38 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_1000F2248(v19, (uint64_t)qword_101611760);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v20, "Attempting to request nearby departures, but we don't have a lookup coordinate", v21, 2u);
      swift_slowDealloc();
    }
    goto LABEL_19;
  }
  id v6 = *(id *)&v0[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation];
  id v18 = v6;
  if (!v6) {
    goto LABEL_14;
  }
LABEL_8:
  id v7 = self;
  uint64_t v22 = v6;
  id v8 = [v7 sharedService];
  if (v8)
  {
    id v9 = v8;
    id v10 = sub_10013665C();
    id v11 = [self sharedLocationManager];
    id v12 = [v11 currentLocation];

    id v13 = [v9 ticketForNearbyTransitDeparturesWithLookupOrigin:v22 userLocation:v12 traits:v10];
    if (v13)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(aBlock[0]) = 1;
      double v14 = v0;
      static Published.subscript.setter();
      unsigned __int8 v15 = *(void **)&v14[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_mapItemUpdater];
      if (v15) {
        [v15 setActive:0];
      }
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_10013C640;
      aBlock[5] = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10013844C;
      void aBlock[3] = &unk_1012DA1D0;
      CGFloat v17 = _Block_copy(aBlock);
      swift_release();
      [v13 submitWithHandler:v17 networkActivity:0];
      _Block_release(v17);

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
  }
LABEL_19:
}

uint64_t sub_1001372FC()
{
  swift_getErrorValue();
  uint64_t v0 = dispatch thunk of Error._domain.getter();
  uint64_t v2 = v1;
  swift_getErrorValue();
  uint64_t v3 = dispatch thunk of Error._code.getter();
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v4)
  {
    swift_bridgeObjectRelease();
    if (v3 == -1009) {
      goto LABEL_16;
    }
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0 && v3 == -1009) {
      goto LABEL_16;
    }
  }
  id v7 = (id)GEOErrorDomain();
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    if (v0 == v9 && v2 == v11)
    {
      swift_bridgeObjectRelease();
      if (v3 != -9) {
        goto LABEL_17;
      }
LABEL_16:
      char v13 = 1;
      goto LABEL_24;
    }
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0 && v3 == -9) {
      goto LABEL_16;
    }
  }
LABEL_17:
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v14) {
    char v13 = 1;
  }
  else {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_1001374B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v17 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  char v12 = (void *)static OS_dispatch_queue.main.getter();
  char v13 = (void *)swift_allocObject();
  id v13[2] = a3;
  v13[3] = a2;
  unint64_t v13[4] = a1;
  aBlock[4] = sub_10013C674;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  void aBlock[3] = &unk_1012DA220;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007FEBC((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_1001010F8((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v16);
}

void sub_1001377B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (unsigned __int8 *)Strong;
    if (a2)
    {
      swift_errorRetain();
      if (qword_1015CBD38 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_1000F2248(v7, (uint64_t)qword_101611760);
      swift_errorRetain();
      swift_errorRetain();
      id v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        v46[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 136315138;
        swift_getErrorValue();
        uint64_t v11 = Error.localizedDescription.getter();
        sub_1000F2280(v11, v12, v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error making request %s", v10, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_getErrorValue();
      uint64_t v21 = dispatch thunk of Error._domain.getter();
      uint64_t v23 = v22;
      if (sub_1001372FC())
      {
        swift_bridgeObjectRelease();
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v46[0]) = 4;
        static Published.subscript.setter();
        swift_errorRelease();
        return;
      }
      id v24 = (id)GEOErrorDomain();
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        if (v21 == v26 && v23 == v28)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v33 & 1) == 0) {
            goto LABEL_31;
          }
        }
        swift_getErrorValue();
        if (dispatch thunk of Error._code.getter() == -8)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          char v34 = 5;
LABEL_32:
          LOBYTE(v46[0]) = v34;
          id v35 = v6;
          static Published.subscript.setter();
          swift_errorRelease();
LABEL_33:

          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_31:
      swift_getKeyPath();
      swift_getKeyPath();
      char v34 = 3;
      goto LABEL_32;
    }
    if (a3
      && *(void *)(a3 + 16)
      && (sub_1000F2354(a3 + 32, (uint64_t)v46), sub_100100830(0, &qword_1015CF128), (swift_dynamicCast() & 1) != 0))
    {
      id v13 = [v45 _transitInfo];
      if (v13)
      {
        id v14 = [v13 nearbySchedule];
        swift_unknownObjectRelease();
        if (v14)
        {
          id v15 = [objc_allocWithZone((Class)MKTransitMapItemUpdater) initWithMapItem:v45 delegate:v6];
          [v15 setActive:v6[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive]];
          uint64_t v16 = *(void **)&v6[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_mapItemUpdater];
          *(void *)&v6[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_mapItemUpdater] = v15;
          id v17 = v15;

          id v18 = [v45 _transitAttribution];
          *(void *)&v6[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_transitAttribution] = v18;
          swift_unknownObjectRelease();
          *(void *)&v6[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_geoNearbyTransitSchedule] = v14;
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          sub_1001380D0();
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          if (*(void *)(v46[0] + 16))
          {
            uint64_t v19 = *(void *)(v46[0] + 48);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (*(void *)(v19 + 16))
            {
              swift_getKeyPath();
              swift_getKeyPath();
              LOBYTE(v46[0]) = 2;
              os_log_type_t v20 = v6;
              static Published.subscript.setter();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_unknownObjectRelease();
              return;
            }
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          swift_getKeyPath();
          LOBYTE(v46[0]) = 5;
          id v35 = v6;
          static Published.subscript.setter();
          if (qword_1015CBD38 != -1) {
            swift_once();
          }
          uint64_t v41 = type metadata accessor for Logger();
          sub_1000F2248(v41, (uint64_t)qword_101611760);
          double v42 = Logger.logObject.getter();
          os_log_type_t v43 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v44 = 0;
            _os_log_impl((void *)&_mh_execute_header, v42, v43, "The first category has no groups", v44, 2u);
            swift_slowDealloc();

            swift_unknownObjectRelease();
            return;
          }

          swift_unknownObjectRelease();
          goto LABEL_33;
        }
      }
      if (qword_1015CBD38 != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for Logger();
      sub_1000F2248(v36, (uint64_t)qword_101611760);
      CGFloat v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v37, v38))
      {
        CGFloat v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)CGFloat v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Missing schedule from response", v39, 2u);
        swift_slowDealloc();
      }

      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v46[0]) = 5;
      double v40 = v6;
      static Published.subscript.setter();
    }
    else
    {
      if (qword_1015CBD38 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_1000F2248(v29, (uint64_t)qword_101611760);
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v30, v31))
      {
        id v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "No valid mapItems", v32, 2u);
        swift_slowDealloc();
      }

      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v46[0]) = 5;
      static Published.subscript.setter();
    }
  }
}

id sub_1001380D0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_geoNearbyTransitSchedule];
  if (!v1 || (id v2 = [v1 categories]) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v22 = (void (*)(void **, void))static Published.subscript.modify();
    *uint64_t v23 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    v22(&v29, 0);
    swift_release();
    return (id)swift_release();
  }
  uint64_t v3 = v2;
  sub_1000FF33C(&qword_1015CF130);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_5;
    }
LABEL_24:
    uint64_t v28 = _swiftEmptyArrayStorage;
LABEL_25:
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v29 = v28;
    id v24 = v0;
    return (id)static Published.subscript.setter();
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_24;
  }
LABEL_5:
  unint64_t v27 = v4 & 0xC000000000000001;
  uint64_t v28 = _swiftEmptyArrayStorage;
  uint64_t v6 = 4;
  unint64_t v25 = v4;
  uint64_t v26 = v0;
  while (1)
  {
    uint64_t v7 = v6 - 4;
    if (v27)
    {
      id v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_22;
      }
    }
    else
    {
      id v8 = *(void **)(v4 + 8 * v6);
      swift_unknownObjectRetain();
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    id result = [v8 groups:v25, v26];
    if (!result) {
      break;
    }
    uint64_t v11 = result;
    sub_1000FF33C(&qword_1015CF138);
    unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = sub_1001384E8(v12);
    swift_bridgeObjectRelease();
    if (*(void *)(v13 + 16))
    {
      id result = [v8 displayName];
      if (!result) {
        goto LABEL_27;
      }
      id v14 = result;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      id v18 = [v8 artwork];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v28 = sub_1001CFAF0(0, v28[2] + 1, 1, v28);
      }
      unint64_t v20 = v28[2];
      unint64_t v19 = v28[3];
      if (v20 >= v19 >> 1) {
        uint64_t v28 = sub_1001CFAF0((void *)(v19 > 1), v20 + 1, 1, v28);
      }
      v28[2] = v20 + 1;
      uint64_t v21 = &v28[4 * v20];
      void v21[4] = v15;
      _OWORD v21[5] = v17;
      v21[6] = v13;
      v21[7] = v18;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v4 = v25;
      uint64_t v0 = v26;
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    ++v6;
    if (v9 == v5) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10013844C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001384E8(unint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  __chkstk_darwin(v4 - 8);
  long long v243 = (char *)&v199 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = type metadata accessor for Logger();
  unint64_t v6 = *(void *)(v210 - 8);
  __chkstk_darwin(v210);
  int64_t v8 = (int64_t)&v199 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v214 = a1;
  if (a1 >> 62) {
    goto LABEL_296;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v11 = v9;
  if (!v9)
  {
LABEL_297:
    swift_bridgeObjectRelease();
    uint64_t v196 = _swiftEmptyArrayStorage;
    v197 = _swiftEmptyArrayStorage;
    goto LABEL_298;
  }
LABEL_3:
  uint64_t v230 = 0;
  uint64_t v237 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_pinnedLines;
  unint64_t v211 = a1 & 0xC000000000000001;
  uint64_t v205 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v204 = a1 + 32;
  v203 = (void (**)(int64_t, uint64_t, uint64_t))(v6 + 16);
  unint64_t v12 = (void (**)(int64_t, uint64_t))(v6 + 8);
  unint64_t v6 = 0;
  int v202 = v12;
  int v200 = &v250;
  *(void *)&long long v10 = 136315138;
  long long v201 = v10;
  v199 = (char *)&type metadata for Any + 8;
  v207 = (void *)0x8000000100F77200;
  v206 = (void *)0x8000000100F771E0;
  uint64_t v13 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
  v213 = _swiftEmptyArrayStorage;
  v212 = _swiftEmptyArrayStorage;
  long long v240 = v2;
  uint64_t v209 = v11;
  int64_t v208 = v8;
  while (1)
  {
    if (v211)
    {
      long long v245 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v14 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_295;
      }
    }
    else
    {
      if (v6 >= *(void *)(v205 + 16))
      {
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        __break(1u);
LABEL_302:
        __break(1u);
LABEL_303:
        __break(1u);
LABEL_304:
        __break(1u);
LABEL_305:
        __break(1u);
LABEL_306:
        __break(1u);
LABEL_307:
        __break(1u);
LABEL_308:
        __break(1u);
LABEL_309:
        __break(1u);
LABEL_310:
        __break(1u);
LABEL_311:
        uint64_t result = swift_unknownObjectRelease();
        __break(1u);
        return result;
      }
      long long v245 = *(void **)(v204 + 8 * v6);
      swift_unknownObjectRetain();
      unint64_t v14 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_295;
      }
    }
    unint64_t v215 = v14;
    unint64_t v216 = v6;
    uint64_t v15 = v245;
    uint64_t v16 = sub_10014273C(v245);
    id v17 = [v15 lineCells:v199, v200];
    if (!v17) {
      goto LABEL_307;
    }
    id v18 = v17;
    sub_1000FF33C(&qword_1015CF140);
    unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v241 = v16;
    if (!v20)
    {
      if (qword_1015CBD38 != -1) {
        swift_once();
      }
      uint64_t v21 = v210;
      uint64_t v22 = sub_1000F2248(v210, (uint64_t)qword_101611760);
      int64_t v23 = v208;
      (*v203)(v208, v22, v21);
      id v24 = v245;
      swift_unknownObjectRetain_n();
      unint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        unint64_t v27 = (uint8_t *)swift_slowAlloc();
        unint64_t v250 = swift_slowAlloc();
        *(_DWORD *)unint64_t v27 = v201;
        id v28 = [v24 displayName];
        if (!v28) {
          goto LABEL_311;
        }
        uint64_t v29 = v28;
        uint64_t v247 = (uint64_t)(v27 + 4);
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v32 = v31;

        uint64_t v249 = sub_1000F2280(v30, v32, (uint64_t *)&v250);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Group %s has no line sections", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*v202)(v208, v210);
        id v2 = v240;
      }
      else
      {

        swift_unknownObjectRelease_n();
        (*v202)(v23, v21);
      }
    }
    id v33 = [v245 lineCells];
    if (!v33) {
      goto LABEL_308;
    }
    unint64_t v6 = (unint64_t)v33;
    uint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((unint64_t)v34 >> 62) {
      break;
    }
    int64_t v8 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_23;
    }
LABEL_202:
    id v220 = 0;
    unint64_t v219 = 0;
    int v232 = 1;
    v224 = &_swiftEmptySetSingleton;
    v223 = &_swiftEmptySetSingleton;
    int v231 = 1;
    v221 = _swiftEmptyArrayStorage;
    id v233 = _swiftEmptyArrayStorage;
    v222 = _swiftEmptyArrayStorage;
LABEL_203:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v250 = (unint64_t)v222;
    swift_bridgeObjectRetain();
    uint64_t v138 = (uint64_t)v221;
    swift_bridgeObjectRetain();
    sub_10024B9C8(v138);
    unint64_t v139 = v250;
    uint64_t v140 = (uint64_t)v224;
    swift_bridgeObjectRetain();
    uint64_t v141 = swift_bridgeObjectRetain();
    uint64_t v142 = sub_10013A5C8(v141, v140);
    id v143 = [v245 incidents];
    if (!v143) {
      goto LABEL_309;
    }
    uint64_t v144 = v143;
    sub_1000FF33C((uint64_t *)&unk_1015D85B0);
    int64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    unint64_t v145 = (unint64_t)sub_100142FE8(v8, v142, 0, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(void *)(v139 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_240;
    }
    uint64_t v146 = (uint64_t)v223;
    uint64_t v147 = (uint64_t)v224;
    if (v223[2] <= v224[2] >> 3)
    {
      unint64_t v250 = (unint64_t)v224;
      swift_bridgeObjectRetain();
      sub_10013D3A8(v146);
      uint64_t v148 = (void *)v250;
      if (!*(void *)(v250 + 16)) {
        goto LABEL_226;
      }
LABEL_207:
      unint64_t v250 = (unint64_t)_swiftEmptyArrayStorage;
      if (v145 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v149 = _CocoaArrayWrapper.endIndex.getter();
        if (!v149) {
          goto LABEL_229;
        }
LABEL_209:
        if (v149 < 1) {
          goto LABEL_301;
        }
        for (uint64_t i = 0; i != v149; ++i)
        {
          if ((v145 & 0xC000000000000001) != 0)
          {
            uint64_t v151 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v151 = *(void **)(v145 + 8 * i + 32);
            swift_unknownObjectRetain();
          }
          id v152 = [v151 affectedEntities];
          if (!v152) {
            goto LABEL_211;
          }
          uint64_t v153 = v152;
          sub_1000FF33C(&qword_1015CF1C0);
          static Array._unconditionallyBridgeFromObjectiveC(_:)();

          swift_bridgeObjectRetain();
          unint64_t v154 = swift_bridgeObjectRetain();
          uint64_t v155 = v230;
          unint64_t v156 = (unint64_t)sub_100142E10(v154, (uint64_t)v148);
          uint64_t v230 = v155;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v157 = v156 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v157)
          {
LABEL_211:
            swift_unknownObjectRetain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          swift_unknownObjectRelease();
        }
        swift_bridgeObjectRelease();
        char v158 = (void *)v250;
        uint64_t v13 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
      }
      else
      {
        uint64_t v149 = *(void *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v149) {
          goto LABEL_209;
        }
LABEL_229:
        swift_bridgeObjectRelease();
        char v158 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      goto LABEL_231;
    }
    swift_bridgeObjectRetain();
    uint64_t v148 = sub_10013D73C(v146, v147);
    if (v148[2]) {
      goto LABEL_207;
    }
LABEL_226:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v158 = (void *)v145;
LABEL_231:
    unsigned __int8 v159 = v245;
    if ([(id)swift_unknownObjectRetain() hasWalkingDetails])
    {
      uint64_t v160 = sub_1002C34C4([v159 minWalkingTime], [v159 maxWalkingTime]);
      int64_t v8 = v161;
    }
    else
    {
      uint64_t v160 = 0;
      int64_t v8 = 0;
    }
    id v162 = [v159 displayName];
    if (!v162) {
      goto LABEL_310;
    }
    uint64_t v163 = v162;
    uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v166 = v165;

    swift_unknownObjectRelease();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v167 = v213;
    }
    else {
      uint64_t v167 = sub_1001CF684(0, v213[2] + 1, 1, v213);
    }
    unint64_t v169 = v167[2];
    unint64_t v168 = v167[3];
    if (v169 >= v168 >> 1) {
      uint64_t v167 = sub_1001CF684((void *)(v168 > 1), v169 + 1, 1, v167);
    }
    v167[2] = v169 + 1;
    v213 = v167;
    uint64_t v170 = &v167[8 * v169];
    v170[4] = v164;
    v170[5] = v166;
    v170[6] = v160;
    v170[7] = v8;
    v170[8] = v139;
    v170[9] = v158;
    *((unsigned char *)v170 + 80) = 0;
    v170[11] = v216;
    id v2 = v240;
LABEL_240:
    if (v233[2])
    {
      if (v224[2] <= v223[2] >> 3)
      {
        unint64_t v250 = (unint64_t)v223;
        sub_10013D3A8((uint64_t)v224);
        swift_bridgeObjectRelease();
        char v171 = (void *)v250;
        if (*(void *)(v250 + 16))
        {
LABEL_243:
          unint64_t v250 = (unint64_t)_swiftEmptyArrayStorage;
          if (v145 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v172 = _CocoaArrayWrapper.endIndex.getter();
            if (v172) {
              goto LABEL_245;
            }
          }
          else
          {
            uint64_t v172 = *(void *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v172)
            {
LABEL_245:
              if (v172 < 1) {
                goto LABEL_302;
              }
              for (uint64_t j = 0; j != v172; ++j)
              {
                if ((v145 & 0xC000000000000001) != 0)
                {
                  uint64_t v174 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  uint64_t v174 = *(void **)(v145 + 8 * j + 32);
                  swift_unknownObjectRetain();
                }
                id v175 = [v174 affectedEntities];
                if (!v175) {
                  goto LABEL_247;
                }
                uint64_t v176 = v175;
                sub_1000FF33C(&qword_1015CF1C0);
                static Array._unconditionallyBridgeFromObjectiveC(_:)();

                swift_bridgeObjectRetain();
                unint64_t v177 = swift_bridgeObjectRetain();
                uint64_t v178 = v230;
                unint64_t v179 = (unint64_t)sub_100142E10(v177, (uint64_t)v171);
                uint64_t v230 = v178;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v180 = v179 >> 62
                     ? _CocoaArrayWrapper.endIndex.getter()
                     : *(void *)((v179 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v180)
                {
LABEL_247:
                  swift_unknownObjectRetain();
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v250 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                }
                swift_unknownObjectRelease();
              }
              swift_bridgeObjectRelease();
              uint64_t v181 = (void *)v250;
              id v2 = v240;
              goto LABEL_267;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v181 = _swiftEmptyArrayStorage;
LABEL_267:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v145 = (unint64_t)v181;
          goto LABEL_268;
        }
      }
      else
      {
        char v171 = sub_10013D73C((uint64_t)v224, (uint64_t)v223);
        swift_bridgeObjectRelease();
        if (v171[2]) {
          goto LABEL_243;
        }
      }
      swift_bridgeObjectRelease();
LABEL_268:
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v255._uint64_t countAndFlagsBits = 0xD000000000000023;
      v255._object = v207;
      v182._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
      v182._object = v206;
      v183._uint64_t countAndFlagsBits = 0x4C2064656E6E6950;
      v183._object = (void *)0xEC00000073656E69;
      Swift::String v184 = NSLocalizedString(_:tableName:bundle:value:comment:)(v182, (Swift::String_optional)0, (NSBundle)qword_101611820, v183, v255);
      uint64_t countAndFlagsBits = v184._countAndFlagsBits;
      object = v184._object;
      uint64_t v187 = 0;
      int64_t v8 = 0;
      if (((v231 | v232) & 1) == 0)
      {
        uint64_t v187 = sub_1002C34C4(v219, (uint64_t)v220);
        int64_t v8 = v188;
      }
      id v189 = [v245 pinnedDisplayName];
      if (v189 || (id v189 = [v245 displayName]) != 0)
      {
        uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v191 = v190;
        swift_bridgeObjectRelease();

        object = v191;
      }
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v192 = v212;
      }
      else {
        uint64_t v192 = sub_1001CF684(0, v212[2] + 1, 1, v212);
      }
      unint64_t v194 = v192[2];
      unint64_t v193 = v192[3];
      if (v194 >= v193 >> 1) {
        uint64_t v192 = sub_1001CF684((void *)(v193 > 1), v194 + 1, 1, v192);
      }
      v192[2] = v194 + 1;
      v212 = v192;
      char v195 = &v192[8 * v194];
      v195[4] = countAndFlagsBits;
      v195[5] = object;
      v195[6] = v187;
      v195[7] = v8;
      v195[8] = v233;
      v195[9] = v145;
      *((unsigned char *)v195 + 80) = 1;
      v195[11] = v216;
      swift_unknownObjectRelease();
      goto LABEL_280;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_280:
    unint64_t v6 = v215;
    if (v215 == v209) {
      goto LABEL_288;
    }
  }
  if (v34 < 0) {
    unint64_t v6 = v34;
  }
  else {
    unint64_t v6 = v34 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  int64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_202;
  }
LABEL_23:
  id v220 = 0;
  unint64_t v219 = 0;
  unint64_t v35 = 0;
  unint64_t v227 = v34 & 0xC000000000000001;
  uint64_t v218 = v34 & 0xFFFFFFFFFFFFFF8;
  uint64_t v217 = v34 + 32;
  int v232 = 1;
  v224 = &_swiftEmptySetSingleton;
  v223 = &_swiftEmptySetSingleton;
  int v231 = 1;
  v221 = _swiftEmptyArrayStorage;
  id v233 = _swiftEmptyArrayStorage;
  v222 = _swiftEmptyArrayStorage;
  uint64_t v226 = v34;
  int64_t v225 = v8;
  while (1)
  {
    if (v227)
    {
      uint64_t v36 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v37 = __OFADD__(v35, 1);
      unint64_t v38 = v35 + 1;
      if (v37) {
        goto LABEL_289;
      }
    }
    else
    {
      if (v35 >= *(void *)(v218 + 16)) {
        goto LABEL_294;
      }
      uint64_t v36 = *(void **)(v217 + 8 * v35);
      swift_unknownObjectRetain();
      BOOL v37 = __OFADD__(v35, 1);
      unint64_t v38 = v35 + 1;
      if (v37)
      {
LABEL_289:
        __break(1u);
LABEL_290:
        __break(1u);
LABEL_291:
        __break(1u);
LABEL_292:
        __break(1u);
LABEL_293:
        __break(1u);
LABEL_294:
        __break(1u);
LABEL_295:
        __break(1u);
LABEL_296:
        swift_bridgeObjectRetain();
        a1 = v214;
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        if (!v11) {
          goto LABEL_297;
        }
        goto LABEL_3;
      }
    }
    uint64_t v249 = (uint64_t)_swiftEmptyArrayStorage;
    unint64_t v250 = (unint64_t)_swiftEmptyArrayStorage;
    id v39 = [v36 departureSequences];
    if (!v39) {
      goto LABEL_303;
    }
    double v40 = v39;
    sub_1000FF33C(&qword_1015CF148);
    unint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v238 = v36;
    unint64_t v235 = v38;
    if (v42) {
      break;
    }
    LODWORD(v247) = 0;
    os_log_type_t v43 = _swiftEmptyArrayStorage;
    long long v246 = _swiftEmptyArrayStorage;
LABEL_103:
    id v236 = v43;
    swift_bridgeObjectRelease();
    uint64_t v83 = v246[2];
    uint64_t v242 = swift_bridgeObjectRetain();
    unint64_t v84 = v250;
    if (v250 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (!v6) {
        goto LABEL_24;
      }
LABEL_105:
      if ((v84 & 0xC000000000000001) != 0)
      {
        uint64_t v239 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        id v2 = v233;
      }
      else
      {
        id v2 = v233;
        if (!*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_290;
        }
        uint64_t v239 = *(void *)(v84 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      unint64_t v85 = v249;
      long long v248 = _swiftEmptyArrayStorage;
      if ((unint64_t)v249 >> 62)
      {
        if (v249 < 0) {
          unint64_t v6 = v249;
        }
        else {
          unint64_t v6 = v249 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        int64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        unint64_t v244 = v85;
        if (!v8)
        {
LABEL_125:
          swift_bridgeObjectRelease();
          unint64_t v87 = (unint64_t)_swiftEmptyArrayStorage;
          goto LABEL_126;
        }
      }
      else
      {
        int64_t v8 = *(void *)((v249 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        unint64_t v244 = v85;
        if (!v8) {
          goto LABEL_125;
        }
      }
      if (v8 < 1) {
        goto LABEL_291;
      }
      for (uint64_t k = 0; k != v8; ++k)
      {
        if ([(id)swift_unknownObjectRetain() v13[339]])
        {
          swift_unknownObjectRelease();
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v87 = (unint64_t)v248;
      id v2 = v233;
LABEL_126:
      id v88 = v245;
      if ((v87 & 0x8000000000000000) != 0 || (v87 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v229 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
      }
      else
      {
        uint64_t v229 = *(void *)(v87 + 16);
      }
      swift_release();
      id v89 = [v88 displayName];
      if (!v89) {
        goto LABEL_304;
      }
      id v90 = v89;
      uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v93 = v92;

      id v94 = v238;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v95 = [v94 displayName];
      if (!v95) {
        goto LABEL_305;
      }
      uint64_t v96 = v95;
      uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v99 = v98;

      id v100 = [v94 artworks];
      if (!v100) {
        goto LABEL_306;
      }
      uint64_t v101 = v100;
      int v102 = v247 & (v83 != 0);
      sub_1000FF33C((uint64_t *)&unk_1015CF1B0);
      uint64_t v103 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v247 = v103;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v228 = v102;
      uint64_t v234 = v99;
      if (v102)
      {
        if (swift_isUniquelyReferenced_nonNull_native()) {
          id v104 = v2;
        }
        else {
          id v104 = sub_1001CF794(0, v2[2] + 1, 1, v2);
        }
        unint64_t v6 = v104[2];
        unint64_t v105 = v104[3];
        unint64_t v106 = v6 + 1;
        int64_t v8 = 1;
        if (v6 >= v105 >> 1) {
          id v104 = sub_1001CF794((void *)(v105 > 1), v6 + 1, 1, v104);
        }
        char v107 = 1;
        id v2 = v104;
      }
      else
      {
        Class v108 = v221;
        uint64_t v109 = v222;
        if (v83)
        {
          if (swift_isUniquelyReferenced_nonNull_native()) {
            id v104 = v109;
          }
          else {
            id v104 = sub_1001CF794(0, v109[2] + 1, 1, v109);
          }
          unint64_t v6 = v104[2];
          unint64_t v110 = v104[3];
          unint64_t v106 = v6 + 1;
          if (v6 < v110 >> 1)
          {
            int64_t v8 = 0;
            char v107 = 1;
            id v111 = (char *)&v252 + 8;
LABEL_147:
            *((void *)v111 - 32) = v104;
            goto LABEL_148;
          }
          char v107 = 1;
          uint64_t v136 = sub_1001CF794((void *)(v110 > 1), v6 + 1, 1, v104);
          id v104 = v136;
          int64_t v8 = 0;
          uint64_t v137 = (char *)&v252 + 8;
        }
        else
        {
          if (swift_isUniquelyReferenced_nonNull_native()) {
            id v104 = v108;
          }
          else {
            id v104 = sub_1001CF794(0, v108[2] + 1, 1, v108);
          }
          unint64_t v6 = v104[2];
          unint64_t v112 = v104[3];
          unint64_t v106 = v6 + 1;
          if (v6 < v112 >> 1)
          {
            int64_t v8 = 0;
            char v107 = 0;
            id v111 = (char *)&v252;
            goto LABEL_147;
          }
          uint64_t v136 = sub_1001CF794((void *)(v112 > 1), v6 + 1, 1, v104);
          id v104 = v136;
          int64_t v8 = 0;
          char v107 = 0;
          uint64_t v137 = (char *)&v252;
        }
        *((void *)v137 - 32) = v136;
      }
LABEL_148:
      BOOL v113 = v229 != 0;
      v104[2] = v106;
      objc_super v114 = &v104[10 * v6];
      uint64_t v115 = v234;
      v114[4] = v97;
      v114[5] = v115;
      uint64_t v116 = v239;
      v114[6] = v242;
      v114[7] = v116;
      *((unsigned char *)v114 + 64) = v8;
      v114[9] = v247;
      *((unsigned char *)v114 + 80) = v113;
      v114[11] = v91;
      v114[12] = v93;
      uint64_t v229 = v93;
      *((unsigned char *)v114 + 104) = v107;
      uint64_t v117 = v250;
      unint64_t v118 = v250 >> 62;
      if (v250 >> 62)
      {
        if ((v250 & 0x8000000000000000) != 0) {
          unint64_t v6 = v250;
        }
        else {
          unint64_t v6 = v250 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v119 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        uint64_t v119 = *(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      id v233 = v2;
      if (v119)
      {
        long long v248 = _swiftEmptyArrayStorage;
        sub_10025AF70(0, v119 & ~(v119 >> 63), 0);
        if (v119 < 0) {
          goto LABEL_292;
        }
        uint64_t v120 = 0;
        id v2 = v248;
        do
        {
          if ((v117 & 0xC000000000000001) != 0)
          {
            uint64_t v121 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v121 = *(void **)(v117 + 8 * v120 + 32);
            swift_unknownObjectRetain();
          }
          unint64_t v6 = (unint64_t)[v121 muid];
          swift_unknownObjectRelease();
          long long v248 = v2;
          unint64_t v123 = v2[2];
          unint64_t v122 = v2[3];
          int64_t v8 = v123 + 1;
          if (v123 >= v122 >> 1)
          {
            sub_10025AF70(v122 > 1, v123 + 1, 1);
            id v2 = v248;
          }
          ++v120;
          v2[2] = v8;
          v2[v123 + 4] = v6;
        }
        while (v119 != v120);
        swift_bridgeObjectRelease();
        uint64_t v124 = v117 & 0xFFFFFFFFFFFFFF8;
        if (v118)
        {
LABEL_176:
          if (v117 < 0) {
            unint64_t v6 = v117;
          }
          else {
            unint64_t v6 = v124;
          }
          swift_bridgeObjectRetain_n();
          uint64_t v125 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_161;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        id v2 = _swiftEmptyArrayStorage;
        uint64_t v124 = v117 & 0xFFFFFFFFFFFFFF8;
        if (v118) {
          goto LABEL_176;
        }
      }
      uint64_t v125 = *(void *)(v124 + 16);
      swift_bridgeObjectRetain_n();
LABEL_161:
      if (v125)
      {
        if (v125 < 1) {
          goto LABEL_293;
        }
        uint64_t v126 = 0;
        uint64_t v127 = _swiftEmptyArrayStorage;
        do
        {
          if ((v117 & 0xC000000000000001) != 0)
          {
            unsigned __int8 v128 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            unsigned __int8 v128 = *(void **)(v117 + 8 * v126 + 32);
            swift_unknownObjectRetain();
          }
          id v129 = [v128 system];
          if (v129)
          {
            id v130 = [v129 muid];
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v127 = sub_1001CF8B4(0, v127[2] + 1, 1, v127);
            }
            unint64_t v132 = v127[2];
            unint64_t v131 = v127[3];
            if (v132 >= v131 >> 1) {
              uint64_t v127 = sub_1001CF8B4((void *)(v131 > 1), v132 + 1, 1, v127);
            }
            v127[2] = v132 + 1;
            v127[v132 + 4] = v130;
          }
          else
          {
            swift_unknownObjectRelease();
          }
          ++v126;
        }
        while (v125 != v126);
      }
      else
      {
        uint64_t v127 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v248 = v2;
      sub_10024BB24((uint64_t)v127);
      uint64_t v133 = sub_100142D9C((uint64_t)v248);
      swift_bridgeObjectRelease();
      if (v228)
      {
        uint64_t v134 = sub_10013A5C8(v133, (uint64_t)v224);
        int64_t v135 = (char *)v253 + 8;
      }
      else
      {
        uint64_t v134 = sub_10013A5C8(v133, (uint64_t)v223);
        int64_t v135 = (char *)v253;
      }
      *((void *)v135 - 32) = v134;
      id v2 = v240;
      uint64_t v13 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
      int64_t v8 = v225;
      unint64_t v35 = v235;
      unint64_t v6 = (unint64_t)v238;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease();
      if (v35 == v8) {
        goto LABEL_203;
      }
    }
    else
    {
      unint64_t v6 = *(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v6) {
        goto LABEL_105;
      }
LABEL_24:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v6 = v249;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v8 = v225;
      unint64_t v35 = v235;
      if (v235 == v225) {
        goto LABEL_203;
      }
    }
  }
  LODWORD(v247) = 0;
  LODWORD(v242) = 0;
  unint64_t v244 = v41 & 0xC000000000000001;
  uint64_t v239 = v41 & 0xFFFFFFFFFFFFFF8;
  LODWORD(v236) = v232;
  LODWORD(v234) = v231;
  os_log_type_t v43 = _swiftEmptyArrayStorage;
  long long v246 = _swiftEmptyArrayStorage;
  unint64_t v44 = 0;
  if ((v41 & 0xC000000000000001) != 0)
  {
    while (1)
    {
      id v45 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      int64_t v8 = v44 + 1;
      if (__OFADD__(v44, 1)) {
        goto LABEL_283;
      }
LABEL_44:
      id v46 = [v45 line];
      if (!v46) {
        goto LABEL_300;
      }
      unint64_t v47 = v41;
      CGRect v48 = v43;
      id v49 = [v46 muid];
      swift_unknownObjectRelease();
      unint64_t v50 = v250;
      if (v250 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
        if (!v51)
        {
LABEL_55:
          swift_bridgeObjectRelease();
          goto LABEL_56;
        }
      }
      else
      {
        uint64_t v51 = *(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v51) {
          goto LABEL_55;
        }
      }
      unint64_t v52 = v51 - 1;
      if (__OFSUB__(v51, 1)) {
        goto LABEL_284;
      }
      if ((v50 & 0xC000000000000001) != 0)
      {
        uint64_t v53 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v52 & 0x8000000000000000) != 0) {
          goto LABEL_285;
        }
        if (v52 >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_286;
        }
        uint64_t v53 = *(void **)(v50 + 8 * v52 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      id v54 = [v53 muid];
      swift_unknownObjectRelease();
      if (v49 == v54) {
        goto LABEL_74;
      }
LABEL_56:
      id v55 = [v45 line];
      if (v55)
      {
        id v56 = v55;
        swift_unknownObjectRetain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        if (v242)
        {
          BOOL v57 = 1;
          unsigned int v58 = 1;
          if ((v247 & 1) == 0) {
LABEL_64:
          }
            unsigned int v58 = [v238 isSignificant] & v57;
        }
        else
        {
          uint64_t v59 = *(void *)((char *)v2 + v237);
          swift_bridgeObjectRetain();
          BOOL v57 = sub_1002565AC((uint64_t)[v56 muid], v59);
          swift_bridgeObjectRelease();
          if ((v247 & 1) == 0) {
            goto LABEL_64;
          }
          unsigned int v58 = 1;
        }
        LODWORD(v242) = v57;
        id v60 = [v56 muid];
        if (*(void *)(v241 + 16))
        {
          sub_1001EC99C(v60);
          if (v61)
          {
            unint64_t v62 = swift_bridgeObjectRetain();
            sub_10024B844(v62);
          }
        }
        id v63 = [v56 system];
        if (v63)
        {
          id v64 = [v63 muid];
          if (*(void *)(v241 + 16))
          {
            sub_1001EC99C(v64);
            if (v65)
            {
              unint64_t v66 = swift_bridgeObjectRetain();
              sub_10024B844(v66);
            }
          }
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        LODWORD(v247) = v58;
        id v2 = v240;
      }
LABEL_74:
      swift_getKeyPath();
      swift_getKeyPath();
      swift_unknownObjectRetain();
      uint64_t v67 = (uint64_t)v243;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      sub_10031D5CC(v45, v67, (uint64_t)[v245 groupType], (uint64_t *)&v251);
      if ((*((void *)&v251 + 1) & 0x2000000000000000) != 0) {
        uint64_t v68 = HIBYTE(*((void *)&v251 + 1)) & 0xFLL;
      }
      else {
        uint64_t v68 = v251 & 0xFFFFFFFFFFFFLL;
      }
      sub_100142CC4((uint64_t)&v251);
      if (v68)
      {
        os_log_type_t v43 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v246 = sub_1001CF9C4(0, v246[2] + 1, 1, v246);
        }
        unint64_t v41 = v47;
        unint64_t v70 = v246[2];
        unint64_t v69 = v246[3];
        unint64_t v71 = v70 + 1;
        if (v70 >= v69 >> 1)
        {
          id v72 = sub_1001CF9C4((void *)(v69 > 1), v70 + 1, 1, v246);
          long long v246 = v72;
        }
        else
        {
          id v72 = v246;
        }
      }
      else
      {
        os_log_type_t v43 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          os_log_type_t v43 = sub_1001CF9C4(0, v48[2] + 1, 1, v48);
        }
        unint64_t v41 = v47;
        unint64_t v70 = v43[2];
        unint64_t v73 = v43[3];
        unint64_t v71 = v70 + 1;
        if (v70 >= v73 >> 1)
        {
          id v72 = sub_1001CF9C4((void *)(v73 > 1), v70 + 1, 1, v43);
          os_log_type_t v43 = v72;
        }
        else
        {
          id v72 = v43;
        }
      }
      v72[2] = v71;
      id v74 = &v72[11 * v70];
      long long v75 = v252;
      *((_OWORD *)v74 + 2) = v251;
      *((_OWORD *)v74 + 3) = v75;
      long long v76 = v253[0];
      long long v77 = v253[1];
      long long v78 = v253[2];
      v74[14] = v254;
      *((_OWORD *)v74 + 5) = v77;
      *((_OWORD *)v74 + 6) = v78;
      *((_OWORD *)v74 + 4) = v76;
      if ((v247 & 1) != 0 && [v45 hasWalkingETA])
      {
        char v79 = v234 | v236;
        id v80 = [v45 walkingETA];
        if (v79)
        {
          id v220 = [v45 walkingETA];
          sub_100142D30((uint64_t)&v251);
          swift_unknownObjectRelease();
          LODWORD(v236) = 0;
          LODWORD(v234) = 0;
          int v232 = 0;
          int v231 = 0;
          LODWORD(v247) = 1;
          unint64_t v219 = (unint64_t)v80;
        }
        else
        {
          sub_100142D30((uint64_t)&v251);
          swift_unknownObjectRelease();
          LODWORD(v236) = 0;
          LODWORD(v234) = 0;
          int v232 = 0;
          int v231 = 0;
          unint64_t v81 = v219;
          if (v219 >= (unint64_t)v80) {
            unint64_t v81 = (unint64_t)v80;
          }
          unint64_t v219 = v81;
          id v82 = v220;
          if (v220 <= v80) {
            id v82 = v80;
          }
          id v220 = v82;
          LODWORD(v247) = 1;
        }
        uint64_t v13 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
        unint64_t v41 = v47;
        if (v8 == v42) {
          goto LABEL_103;
        }
        unint64_t v44 = v8;
        if (!v244) {
          break;
        }
      }
      else
      {
        sub_100142D30((uint64_t)&v251);
        swift_unknownObjectRelease();
        ++v44;
        if (v8 == v42)
        {
          int v232 = (int)v236;
          int v231 = v234;
          uint64_t v13 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
          goto LABEL_103;
        }
        if (!v244) {
          break;
        }
      }
    }
  }
  if (v44 < *(void *)(v239 + 16))
  {
    id v45 = *(void **)(v41 + 8 * v44 + 32);
    swift_unknownObjectRetain();
    int64_t v8 = v44 + 1;
    if (!__OFADD__(v44, 1)) {
      goto LABEL_44;
    }
LABEL_283:
    __break(1u);
LABEL_284:
    __break(1u);
LABEL_285:
    __break(1u);
LABEL_286:
    __break(1u);
  }
  __break(1u);
LABEL_288:
  swift_bridgeObjectRelease();
  uint64_t v196 = v213;
  v197 = v212;
LABEL_298:
  unint64_t v250 = (unint64_t)v197;
  sub_10024B874((uint64_t)v196);
  return v250;
}

uint64_t sub_10013A5C8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_10013C680(&v14, *(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for NearbyTransitDeparturesProviderState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10013AC24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitDeparturesProviderState()
{
  return &type metadata for NearbyTransitDeparturesProviderState;
}

unint64_t sub_10013AC60()
{
  unint64_t result = qword_1015CF120;
  if (!qword_1015CF120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF120);
  }
  return result;
}

uint64_t sub_10013ACB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  return _swift_task_switch(sub_10013ADD0, 0, 0);
}

uint64_t sub_10013ADD0()
{
  type metadata accessor for CollectionTransitItemRequest();
  *(void *)(v0 + 192) = CollectionTransitItemRequest.__allocating_init()();
  int v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of CollectionTransitItemRequest.fetch()
                         + async function pointer to dispatch thunk of CollectionTransitItemRequest.fetch());
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10013AE88;
  return v3();
}

uint64_t sub_10013AE88(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 20_Block_object_dispose(&STACK[0x358], 8) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10013B270;
  }
  else
  {

    *(void *)(v4 + 216) = a1;
    uint64_t v5 = sub_10013AFB8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10013AFB8()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v13 = v0[22];
  uint64_t v14 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v12 = v0[19];
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  int64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v1;
  v0[6] = sub_100143558;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10008C380;
  v0[5] = &unk_1012DA298;
  uint64_t v8 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[16] = _swiftEmptyArrayStorage;
  sub_10007FEBC((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_1001010F8((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10013B270()
{
  uint64_t v10 = v0;

  if (qword_1015CBD38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611760);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    *(void *)(v0 + 120) = sub_1000F2280(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error syncing transit lines : %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_10013B4B4(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v5)
    {
      sub_10025AF70(0, v5 & ~(v5 >> 63), 0);
      if (v5 < 0)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(a2 + 8 * i + 32);
        }
        uint64_t v8 = v7;
        uint64_t v9 = dispatch thunk of CollectionTransitItem.muid.getter();

        unint64_t v11 = _swiftEmptyArrayStorage[2];
        unint64_t v10 = _swiftEmptyArrayStorage[3];
        if (v11 >= v10 >> 1) {
          sub_10025AF70(v10 > 1, v11 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v11 + 1;
        _swiftEmptyArrayStorage[v11 + 4] = v9;
      }
    }
    uint64_t v12 = sub_100142D9C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    uint64_t v13 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_pinnedLines;
    *(void *)&v4[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_pinnedLines] = v12;
    swift_bridgeObjectRelease();
    if (*(void *)(*(void *)&v4[v13] + 16) && swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v14 = swift_bridgeObjectRetain();
      sub_1002A3C3C(v14);

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  swift_beginAccess();
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    sub_1001380D0();
  }
}

uint64_t sub_10013B6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[19] = v6;
  v5[20] = *(void *)(v6 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[22] = v7;
  v5[23] = *(void *)(v7 - 8);
  v5[24] = swift_task_alloc();
  return _swift_task_switch(sub_10013B7DC, 0, 0);
}

uint64_t sub_10013B7DC()
{
  type metadata accessor for CollectionTransitItemRequest();
  *(void *)(v0 + 200) = CollectionTransitItemRequest.__allocating_init()();
  os_log_type_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of CollectionTransitItemRequest.fetch()
                         + async function pointer to dispatch thunk of CollectionTransitItemRequest.fetch());
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 20_Block_object_dispose(&STACK[0x358], 8) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10013B894;
  return v3();
}

uint64_t sub_10013B894(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10013BC90;
  }
  else
  {

    *(void *)(v4 + 224) = a1;
    uint64_t v5 = sub_10013B9C4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10013B9C4()
{
  uint64_t v11 = v0[28];
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  uint64_t v14 = v0[23];
  uint64_t v15 = v0[22];
  uint64_t v3 = v0[19];
  uint64_t v13 = v0[20];
  uint64_t v4 = v0[18];
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v5;
  v7[3] = v11;
  void v7[4] = v4;
  v0[6] = sub_100144278;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10008C380;
  v0[5] = &unk_1012DA2E8;
  uint64_t v8 = _Block_copy(v0 + 2);
  swift_retain();
  swift_unknownObjectRetain();
  static DispatchQoS.unspecified.getter();
  v0[16] = _swiftEmptyArrayStorage;
  sub_10007FEBC((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_1001010F8((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v15);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10013BC90()
{
  uint64_t v10 = v0;

  if (qword_1015CBD38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611760);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    *(void *)(v0 + 120) = sub_1000F2280(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error unpinning transit line: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_10013BED4(uint64_t a1, unint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  unint64_t v6 = a2 >> 62;
  if (Strong)
  {
    uint64_t v7 = (char *)Strong;
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v9 = _swiftEmptyArrayStorage;
    if (v8)
    {
      unint64_t v34 = (unint64_t)_swiftEmptyArrayStorage;
      sub_10025AF70(0, v8 & ~(v8 >> 63), 0);
      if (v8 < 0)
      {
        __break(1u);
        return;
      }
      unint64_t v32 = v7;
      uint64_t v10 = 0;
      uint64_t v9 = (void *)v34;
      do
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v11 = *(id *)(a2 + 8 * v10 + 32);
        }
        uint64_t v12 = v11;
        uint64_t v13 = dispatch thunk of CollectionTransitItem.muid.getter();

        unint64_t v34 = (unint64_t)v9;
        unint64_t v15 = v9[2];
        unint64_t v14 = v9[3];
        if (v15 >= v14 >> 1)
        {
          sub_10025AF70(v14 > 1, v15 + 1, 1);
          uint64_t v9 = (void *)v34;
        }
        ++v10;
        v9[2] = v15 + 1;
        v9[v15 + 4] = v13;
      }
      while (v8 != v10);
      uint64_t v7 = v32;
      unint64_t v6 = a2 >> 62;
    }
    uint64_t v16 = sub_100142D9C((uint64_t)v9);
    swift_bridgeObjectRelease();
    uint64_t v17 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_pinnedLines;
    *(void *)&v7[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_pinnedLines] = v16;
    swift_bridgeObjectRelease();
    if (*(void *)(*(void *)&v7[v17] + 16) && swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v18 = swift_bridgeObjectRetain();
      sub_1002A3C3C(v18);

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  unint64_t v34 = (unint64_t)_swiftEmptyArrayStorage;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (!v19) {
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v19) {
      goto LABEL_31;
    }
  }
  if (v19 < 1)
  {
    __break(1u);
    swift_once();
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000F2248(v26, (uint64_t)qword_101611760);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_getErrorValue();
      uint64_t v30 = Error.localizedDescription.getter();
      sub_1000F2280(v30, v31, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Error unpinning transit line: %s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return;
  }
  for (uint64_t i = 0; i != v19; ++i)
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v21 = *(id *)(a2 + 8 * i + 32);
    }
    uint64_t v22 = v21;
    id v23 = (id)dispatch thunk of CollectionTransitItem.muid.getter();
    if (v23 == [a3 muid])
    {
      id v24 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  type metadata accessor for MapsSyncStore();
  unint64_t v25 = (void *)static MapsSyncStore.sharedStore.getter();
  if (v34 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
  }
  swift_bridgeObjectRelease();
  dispatch thunk of MapsSyncStore.delete(objects:)();

  swift_bridgeObjectRelease();
}

uint64_t sub_10013C410()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10013C448()
{
}

uint64_t sub_10013C450()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_10013C4CC(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v8);
  id v11 = (char *)&v16 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)&v16 - v10, a1, v4, v9);
  uint64_t v13 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v12)(v7, v11, v4);
  id v14 = v13;
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t sub_10013C640(uint64_t a1, uint64_t a2)
{
  return sub_1001374B4(a1, a2, v2);
}

uint64_t sub_10013C648()
{
  return sub_100144210((void (*)(void))&_swift_errorRelease, (void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_10013C674()
{
  sub_1001377B8(v0[2], v0[3], v0[4]);
}

uint64_t sub_10013C680(uint64_t *a1, uint64_t a2)
{
  os_log_type_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:_:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *os_log_type_t v3 = 0x8000000000000000;
    sub_100141A2C(a2, v9, isUniquelyReferenced_nonNull_native);
    *os_log_type_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_10013C77C(void *a1, void *a2)
{
  return sub_1000FA0D8(a1, a2, (unint64_t *)&unk_1015D4B20, (uint64_t)VGChargingNetwork_ptr, (uint64_t *)&unk_1015CF240);
}

uint64_t sub_10013C798(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *os_log_type_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100141B50(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *os_log_type_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10013C948(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  Data.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)__s1 = *(void *)v81;
    *(void *)uint64_t v81 = 0x8000000000000000;
    sub_100144284(a2, a3);
    sub_100141CEC(a2, a3, v9, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v81 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v86 = ~v8;
  unint64_t v11 = a3 >> 62;
  BOOL v12 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v84 = v12;
  uint64_t v83 = v6;
  size_t __n = BYTE6(a3);
  uint64_t v85 = v6 + 56;
  uint64_t v79 = (a2 >> 32) - (int)a2;
  uint64_t v80 = a2 >> 32;
  unint64_t v78 = a3;
  while (2)
  {
    BOOL v13 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = 0;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v16 = HIDWORD(v14) - (int)v14;
LABEL_14:
        sub_100144284(v14, v15);
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v14 + 16);
        uint64_t v17 = *(void *)(v14 + 24);
        uint64_t v16 = v17 - v18;
        if (!__OFSUB__(v17, v18)) {
          goto LABEL_14;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v16 = BYTE6(v15);
        break;
    }
    size_t v19 = __n;
    switch((int)v11)
    {
      case 1:
        size_t v19 = HIDWORD(a2) - (int)a2;
        if (v84) {
          goto LABEL_121;
        }
        goto LABEL_19;
      case 2:
        uint64_t v21 = *(void *)(a2 + 16);
        uint64_t v20 = *(void *)(a2 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        size_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_19;
        }
        goto LABEL_122;
      case 3:
        if (v16) {
          goto LABEL_7;
        }
        goto LABEL_117;
      default:
LABEL_19:
        if (v16 != v19)
        {
LABEL_7:
          sub_1001442DC(v14, v15);
          goto LABEL_8;
        }
        if (v16 >= 1)
        {
          switch(v15 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              unint64_t v27 = (char *)__DataStorage._bytes.getter();
              if (!v27) {
                goto LABEL_33;
              }
              uint64_t v28 = __DataStorage._offset.getter();
              if (__OFSUB__((int)v14, v28)) {
                goto LABEL_125;
              }
              v27 += (int)v14 - v28;
LABEL_33:
              __DataStorage._length.getter();
              uint64_t v10 = v85;
              if (v11)
              {
                if (v11 == 1)
                {
                  if (v80 < (int)a2) {
                    goto LABEL_134;
                  }
                  swift_retain();
                  uint64_t v29 = (char *)__DataStorage._bytes.getter();
                  if (v29)
                  {
                    uint64_t v30 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)a2, v30)) {
                      goto LABEL_141;
                    }
                    v29 += (int)a2 - v30;
                  }
                  uint64_t v31 = __DataStorage._length.getter();
                  size_t v32 = (a2 >> 32) - (int)a2;
                  if (v31 < v79) {
                    size_t v32 = v31;
                  }
                  if (!v27) {
                    goto LABEL_143;
                  }
                  if (!v29) {
                    goto LABEL_144;
                  }
                  int v33 = memcmp(v27, v29, v32);
                  sub_1001442DC(a2, a3);
                }
                else
                {
                  uint64_t v66 = *(void *)(a2 + 16);
                  uint64_t v65 = *(void *)(a2 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = (char *)__DataStorage._bytes.getter();
                  if (v67)
                  {
                    uint64_t v68 = __DataStorage._offset.getter();
                    if (__OFSUB__(v66, v68)) {
                      goto LABEL_140;
                    }
                    v67 += v66 - v68;
                  }
                  BOOL v22 = __OFSUB__(v65, v66);
                  int64_t v69 = v65 - v66;
                  if (v22) {
                    goto LABEL_135;
                  }
                  uint64_t v70 = __DataStorage._length.getter();
                  if (v70 >= v69) {
                    size_t v71 = v69;
                  }
                  else {
                    size_t v71 = v70;
                  }
                  if (!v27) {
                    goto LABEL_154;
                  }
                  a3 = v78;
                  uint64_t v6 = v83;
                  if (!v67) {
                    goto LABEL_155;
                  }
                  int v33 = memcmp(v27, v67, v71);
                  swift_release();
LABEL_112:
                  swift_release();
                }
                sub_1001442DC(v14, v15);
LABEL_114:
                uint64_t v10 = v85;
                if (!v33) {
                  goto LABEL_118;
                }
              }
              else
              {
                *(void *)__s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v27) {
                  goto LABEL_153;
                }
                unint64_t v47 = (uint64_t *)__s1;
                id v46 = v27;
LABEL_99:
                int v45 = memcmp(v46, v47, __n);
LABEL_100:
                sub_1001442DC(v14, v15);
                if (!v45) {
                  goto LABEL_118;
                }
              }
              break;
            case 2uLL:
              uint64_t v34 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              unint64_t v35 = (char *)__DataStorage._bytes.getter();
              if (!v35) {
                goto LABEL_47;
              }
              uint64_t v36 = __DataStorage._offset.getter();
              if (__OFSUB__(v34, v36)) {
                goto LABEL_124;
              }
              v35 += v34 - v36;
LABEL_47:
              __DataStorage._length.getter();
              uint64_t v6 = v83;
              if (!v11)
              {
                *(void *)__s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v35) {
                  goto LABEL_150;
                }
                int v33 = memcmp(v35, __s1, __n);
                swift_release();
                goto LABEL_112;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_128;
                }
                swift_retain();
                BOOL v37 = (char *)__DataStorage._bytes.getter();
                if (v37)
                {
                  uint64_t v38 = __DataStorage._offset.getter();
                  if (__OFSUB__((int)a2, v38)) {
                    goto LABEL_139;
                  }
                  v37 += (int)a2 - v38;
                }
                uint64_t v39 = __DataStorage._length.getter();
                size_t v40 = (a2 >> 32) - (int)a2;
                if (v39 < v79) {
                  size_t v40 = v39;
                }
                if (!v35) {
                  goto LABEL_145;
                }
                if (!v37) {
                  goto LABEL_146;
                }
                int v33 = memcmp(v35, v37, v40);
                sub_1001442DC(a2, a3);
                swift_release();
              }
              else
              {
                uint64_t v59 = *(void *)(a2 + 16);
                uint64_t v77 = *(void *)(a2 + 24);
                swift_retain();
                swift_retain();
                id v60 = (char *)__DataStorage._bytes.getter();
                if (v60)
                {
                  uint64_t v61 = __DataStorage._offset.getter();
                  if (__OFSUB__(v59, v61)) {
                    goto LABEL_138;
                  }
                  v60 += v59 - v61;
                }
                BOOL v22 = __OFSUB__(v77, v59);
                int64_t v62 = v77 - v59;
                if (v22) {
                  goto LABEL_133;
                }
                uint64_t v63 = __DataStorage._length.getter();
                if (v63 >= v62) {
                  size_t v64 = v62;
                }
                else {
                  size_t v64 = v63;
                }
                if (!v35) {
                  goto LABEL_151;
                }
                a3 = v78;
                if (!v60) {
                  goto LABEL_152;
                }
                int v33 = memcmp(v35, v60, v64);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              sub_1001442DC(v14, v15);
              uint64_t v6 = v83;
              goto LABEL_114;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v11) {
                goto LABEL_67;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_127;
                }
                swift_retain();
                uint64_t v41 = __DataStorage._bytes.getter();
                if (!v41) {
                  goto LABEL_147;
                }
                uint64_t v24 = v41;
                uint64_t v42 = __DataStorage._offset.getter();
                uint64_t v26 = (int)a2 - v42;
                if (__OFSUB__((int)a2, v42)) {
                  goto LABEL_132;
                }
LABEL_63:
                uint64_t v43 = __DataStorage._length.getter();
                if (v43 >= v79) {
                  size_t v44 = (a2 >> 32) - (int)a2;
                }
                else {
                  size_t v44 = v43;
                }
                int v45 = memcmp(__s1, (const void *)(v24 + v26), v44);
                a3 = v78;
                sub_1001442DC(a2, v78);
                goto LABEL_100;
              }
              uint64_t v54 = *(void *)(a2 + 16);
              uint64_t v55 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              unint64_t v50 = (char *)__DataStorage._bytes.getter();
              if (v50)
              {
                uint64_t v56 = __DataStorage._offset.getter();
                if (__OFSUB__(v54, v56)) {
                  goto LABEL_137;
                }
                v50 += v54 - v56;
              }
              BOOL v22 = __OFSUB__(v55, v54);
              int64_t v52 = v55 - v54;
              if (v22) {
                goto LABEL_130;
              }
              uint64_t v53 = __DataStorage._length.getter();
              if (!v50) {
                goto LABEL_149;
              }
LABEL_79:
              if (v53 >= v52) {
                size_t v57 = v52;
              }
              else {
                size_t v57 = v53;
              }
              int v58 = memcmp(__s1, v50, v57);
              swift_release();
              swift_release();
              sub_1001442DC(v14, v15);
              uint64_t v6 = v83;
              uint64_t v10 = v85;
              if (!v58) {
                goto LABEL_118;
              }
              break;
            default:
              *(void *)__s1 = v14;
              *(_WORD *)&__s1[8] = v15;
              __s1[10] = BYTE2(v15);
              __s1[11] = BYTE3(v15);
              __s1[12] = BYTE4(v15);
              __s1[13] = BYTE5(v15);
              if (!v11)
              {
LABEL_67:
                uint64_t v88 = a2;
                __int16 v89 = a3;
                char v90 = BYTE2(a3);
                char v91 = BYTE3(a3);
                char v92 = BYTE4(a3);
                char v93 = BYTE5(a3);
                id v46 = __s1;
                unint64_t v47 = &v88;
                goto LABEL_99;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_126;
                }
                swift_retain();
                uint64_t v23 = __DataStorage._bytes.getter();
                if (!v23)
                {
                  __DataStorage._length.getter();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  __DataStorage._length.getter();
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x10013D35CLL);
                }
                uint64_t v24 = v23;
                uint64_t v25 = __DataStorage._offset.getter();
                uint64_t v26 = (int)a2 - v25;
                if (__OFSUB__((int)a2, v25)) {
                  goto LABEL_131;
                }
                goto LABEL_63;
              }
              uint64_t v48 = *(void *)(a2 + 16);
              uint64_t v49 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              unint64_t v50 = (char *)__DataStorage._bytes.getter();
              if (v50)
              {
                uint64_t v51 = __DataStorage._offset.getter();
                if (__OFSUB__(v48, v51)) {
                  goto LABEL_136;
                }
                v50 += v48 - v51;
              }
              BOOL v22 = __OFSUB__(v49, v48);
              int64_t v52 = v49 - v48;
              if (v22) {
                goto LABEL_129;
              }
              uint64_t v53 = __DataStorage._length.getter();
              if (!v50) {
                goto LABEL_148;
              }
              goto LABEL_79;
          }
LABEL_8:
          unint64_t v9 = (v9 + 1) & v86;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_116;
          }
          continue;
        }
LABEL_117:
        sub_1001442DC(v14, v15);
LABEL_118:
        swift_bridgeObjectRelease();
        sub_1001442DC(a2, a3);
        id v74 = (uint64_t *)(*(void *)(*(void *)v81 + 48) + 16 * v9);
        uint64_t v75 = *v74;
        unint64_t v76 = v74[1];
        *a1 = *v74;
        a1[1] = v76;
        sub_100144284(v75, v76);
        return 0;
    }
  }
}

uint64_t sub_10013D38C(void *a1, void *a2)
{
  return sub_1000FA0D8(a1, a2, &qword_1015D6420, (uint64_t)MKMapItemIdentifier_ptr, &qword_1015CF2B0);
}

uint64_t sub_10013D3A8(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_10013DAE0(*(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

Swift::Int sub_10013D51C(uint64_t a1, uint64_t a2)
{
  return sub_10013D538(a1, a2, (uint64_t *)&unk_1015CF258, (unint64_t *)&unk_1015D6E30);
}

Swift::Int sub_10013D538(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_1000FF33C(a3);
    uint64_t v6 = static _SetStorage.convert(_:capacity:)();
    uint64_t v19 = v6;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_100100830(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_10013EC30(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

void *sub_10013D73C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v6 = a1 + 56;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    v32[0] = ~v7;
    if (-v7 < 64) {
      uint64_t v8 = ~(-1 << -(char)v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v5;
    int64_t v10 = (unint64_t)(63 - v7) >> 6;
    uint64_t v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          unint64_t v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v13 = v12 | (v4 << 6);
        }
        else
        {
          int64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (v14 >= v10) {
            goto LABEL_33;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v14);
          int64_t v16 = v4 + 1;
          if (!v15)
          {
            int64_t v16 = v4 + 2;
            if (v4 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v4 + 3;
              if (v4 + 3 >= v10) {
                goto LABEL_33;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v4 + 4;
                if (v4 + 4 >= v10) {
                  goto LABEL_33;
                }
                unint64_t v15 = *(void *)(v6 + 8 * v16);
                if (!v15)
                {
                  int64_t v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_33:
                    swift_bridgeObjectRetain();
                    sub_1000F84F4();
                    return (void *)v2;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      int64_t v16 = v17 + 1;
                      if (__OFADD__(v17, 1)) {
                        break;
                      }
                      if (v16 >= v10) {
                        goto LABEL_33;
                      }
                      unint64_t v15 = *(void *)(v6 + 8 * v16);
                      ++v17;
                      if (v15) {
                        goto LABEL_23;
                      }
                    }
LABEL_36:
                    __break(1u);
                  }
                  int64_t v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          unint64_t v9 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
          int64_t v4 = v16;
        }
        uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
        uint64_t v19 = static Hasher._hash(seed:_:)();
        uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v21 = v19 & ~v20;
      }
      while (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      uint64_t v22 = *(void *)(v2 + 48);
      if (*(void *)(v22 + 8 * v21) == v18) {
        break;
      }
      while (1)
      {
        unint64_t v21 = (v21 + 1) & ~v20;
        if (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        if (*(void *)(v22 + 8 * v21) == v18) {
          goto LABEL_28;
        }
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    _OWORD v33[2] = v32[0];
    v33[3] = v4;
    void v33[4] = v9;
    unint64_t v23 = (unint64_t)(63 - v20) >> 6;
    size_t v24 = 8 * v23;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      unint64_t v27 = (char *)v32 - v26;
      memcpy((char *)v32 - v26, (const void *)(v2 + 56), v24);
      uint64_t v28 = sub_10013EF50((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_1000F84F4();
      return (void *)v28;
    }
    else
    {
      uint64_t v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      uint64_t v30 = sub_10013EF50((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_1000F84F4();
      swift_slowDealloc();
      return (void *)v30;
    }
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_10013DAE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = static Hasher._hash(seed:_:)();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10013FB60();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_100141700(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10013DBEC(void *a1)
{
  return sub_10013DC08(a1, (unint64_t *)&unk_1015D4B20, (uint64_t)VGChargingNetwork_ptr, (uint64_t *)&unk_1015CF240);
}

uint64_t sub_10013DC08(void *a1, unint64_t *a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v7 = v4;
  uint64_t v9 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v9 < 0) {
      uint64_t v10 = *v4;
    }
    else {
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v11 = a1;
    char v12 = __CocoaSet.contains(_:)();

    if (v12)
    {
      uint64_t v13 = sub_10013F9B4(v10, (uint64_t)v11, a4, a2);
      swift_bridgeObjectRelease();
      return v13;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v14 = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v15 = NSObject._rawHashValue(seed:)(v14);
  uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v17 = v15 & ~v16;
  if (((*(void *)(v9 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
    goto LABEL_15;
  }
  sub_100100830(0, a2);
  id v18 = *(id *)(*(void *)(v9 + 48) + 8 * v17);
  char v19 = static NSObject.== infix(_:_:)();

  if ((v19 & 1) == 0)
  {
    uint64_t v20 = ~v16;
    do
    {
      unint64_t v17 = (v17 + 1) & v20;
      if (((*(void *)(v9 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_15;
      }
      id v21 = *(id *)(*(void *)(v9 + 48) + 8 * v17);
      char v22 = static NSObject.== infix(_:_:)();
    }
    while ((v22 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v7;
  uint64_t v26 = *v7;
  *unint64_t v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10014058C(a4);
    uint64_t v24 = v26;
  }
  uint64_t v13 = *(void *)(*(void *)(v24 + 48) + 8 * v17);
  sub_100141888(v17);
  *unint64_t v7 = v26;
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10013DDF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C(&qword_1015CF1C8);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    unint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10013E078()
{
  uint64_t v1 = *v0;
  sub_1000FF33C(&qword_1015CF1E8);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    int64_t v5 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v1 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v9 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_36;
        }
        unint64_t v16 = v5[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_36;
          }
          unint64_t v16 = v5[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_36;
            }
            unint64_t v16 = v5[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_36:
                swift_release();
                uint64_t v26 = 1 << *(unsigned char *)(v1 + 32);
                if (v26 > 63) {
                  bzero((void *)(v1 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v5 = -1 << v26;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v16 = v5[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_42;
                  }
                  if (v11 >= v8) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v5[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v1 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      uint64_t v30 = v18;
      swift_unknownObjectRetain();
      sub_1000FF33C(&qword_1015CF1D8);
      if (swift_dynamicCast())
      {
        v31[0] = v27;
        v31[1] = v28;
        uint64_t v32 = v29;
        AnyHashable.hash(into:)();
        sub_1000F351C((uint64_t)v31);
      }
      else
      {
        uint64_t v29 = 0;
        long long v27 = 0u;
        long long v28 = 0u;
        sub_1000FF2E0((uint64_t)&v27, &qword_1015CF1E0);
      }
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v3 + 48) + 8 * v12) = v18;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v3;
  return result;
}

uint64_t sub_10013E3A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C((uint64_t *)&unk_1015CF230);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }
      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9) {
          goto LABEL_33;
        }
        unint64_t v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v18 = v6[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v18 = v6[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v6[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      uint64_t v20 = *(void *)(v2 + 48) + 40 * v16;
      long long v29 = *(_OWORD *)v20;
      long long v30 = *(_OWORD *)(v20 + 16);
      uint64_t v31 = *(void *)(v20 + 32);
      uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
      *(_OWORD *)uint64_t v14 = v29;
      *(_OWORD *)(v14 + 16) = v30;
      *(void *)(v14 + 32) = v31;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10013E670()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C(&qword_1015CF210);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10013E950()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C((uint64_t *)&unk_1015CF2C0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      Data.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10013EC30(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_1000FF33C(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    long long v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_10013EECC(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_10013EF50(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  int64_t v8 = (unint64_t *)result;
  uint64_t v9 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v10 = v9 - 1;
  uint64_t v11 = a3 + 56;
  while (1)
  {
    int64_t v16 = a5[3];
    unint64_t v17 = a5[4];
    if (!v17) {
      break;
    }
    uint64_t v18 = (v17 - 1) & v17;
    unint64_t v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(*(void *)(*a5 + 48) + 8 * v19);
    a5[3] = v16;
    a5[4] = v18;
    unint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v27 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v28 = result & ~v27;
    uint64_t v12 = v28 >> 6;
    uint64_t v13 = 1 << v28;
    if (((1 << v28) & *(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      uint64_t v29 = *(void *)(a3 + 48);
      if (*(void *)(v29 + 8 * v28) == v26)
      {
LABEL_3:
        uint64_t v14 = v12;
        unint64_t v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1)) {
            goto LABEL_33;
          }
          if (!v10) {
            return (uint64_t)&_swiftEmptySetSingleton;
          }
        }
      }
      else
      {
        for (unint64_t i = v28 + 1; ; unint64_t i = v31 + 1)
        {
          unint64_t v31 = i & ~v27;
          if (((*(void *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
            break;
          }
          if (*(void *)(v29 + 8 * v31) == v26)
          {
            uint64_t v12 = v31 >> 6;
            uint64_t v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    int64_t v21 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v22 = a5[3];
    if (v20 >= v21) {
      goto LABEL_31;
    }
    uint64_t v23 = a5[1];
    unint64_t v24 = *(void *)(v23 + 8 * v20);
    if (!v24)
    {
      int64_t v22 = v16 + 1;
      if (v16 + 2 >= v21) {
        goto LABEL_31;
      }
      unint64_t v24 = *(void *)(v23 + 8 * (v16 + 2));
      if (v24)
      {
        int64_t v20 = v16 + 2;
      }
      else
      {
        int64_t v22 = v16 + 2;
        if (v16 + 3 >= v21) {
          goto LABEL_31;
        }
        unint64_t v24 = *(void *)(v23 + 8 * (v16 + 3));
        if (v24)
        {
          int64_t v20 = v16 + 3;
        }
        else
        {
          int64_t v20 = v16 + 4;
          int64_t v22 = v16 + 3;
          if (v16 + 4 >= v21) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v23 + 8 * v20);
          if (!v24)
          {
            int64_t v22 = v21 - 1;
            int64_t v25 = v16 + 5;
            while (v21 != v25)
            {
              unint64_t v24 = *(void *)(v23 + 8 * v25++);
              if (v24)
              {
                int64_t v20 = v25 - 1;
                goto LABEL_21;
              }
            }
LABEL_31:
            a5[3] = v22;
            a5[4] = 0;
            swift_retain();
            return sub_10013F50C(v8, a2, v10, a3);
          }
        }
      }
    }
LABEL_21:
    uint64_t v18 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v20 << 6);
    int64_t v16 = v20;
    goto LABEL_22;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void sub_10013F194(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v37 = a3 + 56;
  while (2)
  {
    uint64_t v34 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          int64_t v10 = v5[3];
          unint64_t v9 = v5[4];
          if (v9)
          {
            uint64_t v11 = (v9 - 1) & v9;
            unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            uint64_t v13 = *(void **)(*(void *)(*v5 + 48) + 8 * v12);
            id v14 = v13;
            goto LABEL_8;
          }
          int64_t v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          int64_t v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            uint64_t v13 = 0;
            uint64_t v11 = 0;
            goto LABEL_8;
          }
          uint64_t v29 = v5[1];
          unint64_t v30 = *(void *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            uint64_t v11 = (v30 - 1) & v30;
            unint64_t v12 = __clz(__rbit64(v30)) + (v27 << 6);
            int64_t v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              int64_t v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              uint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              int64_t v27 = v10 + 3;
              goto LABEL_22;
            }
            int64_t v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              uint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              void v5[4] = v11;
              if (!v13) {
                goto LABEL_45;
              }
              goto LABEL_12;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v27);
            if (v30) {
              goto LABEL_22;
            }
            int64_t v27 = v28 - 1;
            int64_t v32 = v10 + 5;
            while (v28 != v32)
            {
              unint64_t v30 = *(void *)(v29 + 8 * v32++);
              if (v30)
              {
                int64_t v27 = v32 - 1;
                goto LABEL_22;
              }
            }
          }
          uint64_t v13 = 0;
          uint64_t v11 = 0;
          int64_t v10 = v27;
          goto LABEL_8;
        }
        if (!__CocoaSet.Iterator.next()()
          || (sub_100100830(0, (unint64_t *)&unk_1015D6E30),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              uint64_t v13 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_45:
          swift_retain();
          sub_10013F754(a1, a2, v34, a3);
          return;
        }
LABEL_12:
        Swift::Int v15 = NSObject._rawHashValue(seed:)(*(void *)(a3 + 40));
        uint64_t v16 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v17 = v15 & ~v16;
        unint64_t v18 = v17 >> 6;
        uint64_t v19 = 1 << v17;
        if (((1 << v17) & *(void *)(v37 + 8 * (v17 >> 6))) == 0) {
          goto LABEL_3;
        }
        sub_100100830(0, (unint64_t *)&unk_1015D6E30);
        id v20 = *(id *)(*(void *)(a3 + 48) + 8 * v17);
        char v21 = static NSObject.== infix(_:_:)();

        if (v21) {
          break;
        }
        uint64_t v22 = ~v16;
        for (unint64_t i = v17 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v37 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          id v25 = *(id *)(*(void *)(a3 + 48) + 8 * v24);
          char v26 = static NSObject.== infix(_:_:)();

          if (v26)
          {

            unint64_t v18 = v24 >> 6;
            uint64_t v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        uint64_t v5 = a5;
      }

LABEL_25:
      uint64_t v5 = a5;
      unint64_t v31 = a1[v18];
      a1[v18] = v31 & ~v19;
    }
    while ((v19 & v31) == 0);
    uint64_t v8 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v34 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_10013F50C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000FF33C(&qword_1015CF1C8);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  unint64_t v9 = (unsigned char *)result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = a1[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = a1[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = a1[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << v9[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*((void *)v9 + 6) + 8 * v22) = v18;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = a1[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = a1[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10013F754(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000FF33C((uint64_t *)&unk_1015CF258);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  unint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10013F9B4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v7 = v4;
  swift_bridgeObjectRelease();
  uint64_t v8 = __CocoaSet.count.getter();
  uint64_t v9 = swift_unknownObjectRetain();
  Swift::Int v10 = sub_10013D538(v9, v8, a3, a4);
  Swift::Int v22 = v10;
  Swift::Int v11 = *(void *)(v10 + 40);
  swift_retain();
  Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
  uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v14 = v12 & ~v13;
  if ((*(void *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    sub_100100830(0, a4);
    id v15 = *(id *)(*(void *)(v10 + 48) + 8 * v14);
    char v16 = static NSObject.== infix(_:_:)();

    if (v16)
    {
LABEL_6:
      swift_release();
      uint64_t v20 = *(void *)(*(void *)(v10 + 48) + 8 * v14);
      sub_100141888(v14);
      if (static NSObject.== infix(_:_:)())
      {
        *uint64_t v7 = v22;
        return v20;
      }
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v10 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void *sub_10013FB60()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CF1C8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10013FCF8()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CF1E8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10013FEA4()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CF208);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (id)v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100140054()
{
  uint64_t v1 = v0;
  sub_1000FF33C((uint64_t *)&unk_1015CF230);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    id result = (void *)sub_10010A768(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100140224()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CF210);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    long long v19 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001403D8()
{
  uint64_t v1 = v0;
  sub_1000FF33C((uint64_t *)&unk_1015CF2C0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_100144284(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10014058C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000FF33C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}