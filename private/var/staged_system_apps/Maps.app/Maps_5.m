void sub_100587E5C(uint64_t a1, uint64_t a2, int a3)
{
  NSObject *v6;
  BOOL v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;
  CFStringRef v12;
  CFStringRef v13;
  uint64_t v14;
  long long v15;
  unsigned char v16[32];
  long long v17;
  uint64_t v18;

  v6 = sub_100015DB4();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_INFO);
  if (a3)
  {
    if (v7)
    {
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "routePlanning _star: simulation popup was dismissed.", v16, 2u);
    }
  }
  else
  {
    if (v7)
    {
      if (*(unsigned char *)a2) {
        v8 = @"YES";
      }
      else {
        v8 = @"NO";
      }
      v9 = v8;
      v10 = v9;
      v11 = *(void *)(a2 + 16);
      v12 = @"Full";
      if (v11 == 1) {
        v12 = @"Low";
      }
      if (v11 == 2) {
        v13 = @"RoutePreview";
      }
      else {
        v13 = v12;
      }
      *(_DWORD *)v16 = 138412546;
      *(void *)&v16[4] = v9;
      *(_WORD *)&v16[12] = 2112;
      *(void *)&v16[14] = v13;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "routePlanning _starting nav, simulates location: %@, guidanceType: %@", v16, 0x16u);
    }
    v6 = +[CarChromeModeCoordinator sharedInstance];
    v14 = *(void *)(a1 + 32);
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v16 = *(_OWORD *)a2;
    *(_OWORD *)&v16[16] = v15;
    v17 = *(_OWORD *)(a2 + 32);
    v18 = *(void *)(a2 + 48);
    [v6 displayNavigationForRouteCollection:v14 options:v16];
  }
}

void sub_10058810C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100588130(uint64_t a1)
{
  v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = [WeakRetained chromeViewController];
  id v3 = objc_loadWeakRetained(v1);
  [v2 setHardwareBackButtonBehavior:0 forContext:v3];
}

void sub_10058867C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1005886AC(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = [WeakRetained chromeViewController];
  unsigned __int8 v8 = [v7 isCurrentContext:WeakRetained];

  if (v8)
  {
    v9 = [WeakRetained chromeViewController];
    v10 = sub_100672F88(v5);
    [v9 captureUserAction:9020 onTarget:1007 eventValue:v10];

    v11 = sub_100015DB4();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = @"NO";
      if (a2) {
        v12 = @"YES";
      }
      v13 = v12;
      int v20 = 138412546;
      v21 = (const char *)v13;
      __int16 v22 = 2112;
      v23 = (const char *)v5;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "routePlanning handoff complete with success: %@, error: %@", (uint8_t *)&v20, 0x16u);
    }
    if (a2)
    {
      v14 = +[CarChromeModeCoordinator sharedInstance];
      [v14 displayMapBrowsing];
    }
    else
    {
      v14 = +[UIApplication sharedMapsDelegate];
      v15 = CarInterruptionUserInfoForDestinationHandoffFailure(*(void **)(a1 + 32), v5);
      [v14 interruptApplicationWithKind:3 userInfo:v15 completionHandler:0];
    }
  }
  else
  {
    v16 = sub_1005762E4();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      int v20 = 136315906;
      v21 = "-[CarRoutePlanningModeController placeCardDidSelectHandoff:]_block_invoke";
      __int16 v22 = 2080;
      v23 = "CarRoutePlanningModeController.m";
      __int16 v24 = 1024;
      int v25 = 1012;
      __int16 v26 = 2080;
      v27 = "isCurrentMode";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", (uint8_t *)&v20, 0x26u);
    }

    if (sub_100BB36BC())
    {
      v17 = sub_1005762E4();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        v18 = +[NSThread callStackSymbols];
        int v20 = 138412290;
        v21 = v18;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v20, 0xCu);
      }
    }
    v14 = sub_100015DB4();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      CFStringRef v19 = @"stopped being currentMode.";
      if (!WeakRetained) {
        CFStringRef v19 = @"deallocated";
      }
      int v20 = 138412290;
      v21 = (const char *)v19;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "routePlanning: mode %@ in the middle of destination handoff. Ignoring the handoff completion.", (uint8_t *)&v20, 0xCu);
    }
  }
}

void sub_10058991C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100589940(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [*(id *)(a1 + 32) _preciseLocationOffAdvisory];
  v54 = [*(id *)(a1 + 32) _turnByTurnNotAvailableAdvisory];
  v4 = *(void **)(a1 + 32);
  id v5 = [v4 currentRoute];
  v6 = [v4 _clickableAdvisoryDescriptionForRoute:v5];

  if (![v3 length] && !objc_msgSend(v54, "length") && !objc_msgSend(v6, "length"))
  {
    [WeakRetained _hideAdvisories];
    goto LABEL_18;
  }
  v7 = [WeakRetained advisoryLabel];
  if (!v7)
  {
    unsigned __int8 v8 = [*(id *)(a1 + 32) chromeViewController];
    v9 = [v8 viewport];

    if (v9)
    {
      v10 = [WeakRetained chromeViewController];
      v11 = [WeakRetained chromeViewController];
      v51 = [v11 viewport];

      v12 = -[CarRoutePlanningAdvisoryLabel initWithFrame:]([CarRoutePlanningAdvisoryLabel alloc], "initWithFrame:", CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);
      [(CarRoutePlanningAdvisoryLabel *)v12 setTranslatesAutoresizingMaskIntoConstraints:0];
      [(CarRoutePlanningAdvisoryLabel *)v12 setDelegate:*(void *)(a1 + 32)];
      [v51 addSubview:v12];
      [WeakRetained setAdvisoryLabel:v12];
      v13 = [(CarRoutePlanningAdvisoryLabel *)v12 heightAnchor];
      v14 = [v10 viewportLayoutGuide];
      v15 = [v14 heightAnchor];
      v16 = [v13 constraintLessThanOrEqualToAnchor:v15 multiplier:0.349999994];

      LODWORD(v17) = 1148829696;
      v49 = v16;
      [v16 setPriority:v17];
      v48 = [(CarRoutePlanningAdvisoryLabel *)v12 leadingAnchor];
      v50 = [v10 viewportLayoutGuide];
      v47 = [v50 leadingAnchor];
      v45 = [v48 constraintEqualToAnchor:v47 constant:8.0];
      v57[0] = v45;
      v44 = [v10 viewportLayoutGuide];
      v43 = [v44 trailingAnchor];
      v42 = [(CarRoutePlanningAdvisoryLabel *)v12 trailingAnchor];
      v41 = [v43 constraintGreaterThanOrEqualToAnchor:v42 constant:8.0];
      v57[1] = v41;
      v39 = [(CarRoutePlanningAdvisoryLabel *)v12 topAnchor];
      v40 = [v10 viewportLayoutGuide];
      v38 = [v40 topAnchor];
      v37 = [v39 constraintEqualToAnchor:v38 constant:8.0];
      v57[2] = v37;
      v57[3] = v16;
      v46 = v10;
      v36 = [v10 viewportLayoutGuide];
      v35 = [v36 bottomAnchor];
      v18 = [(CarRoutePlanningAdvisoryLabel *)v12 topAnchor];
      [v35 constraintGreaterThanOrEqualToAnchor:v18 constant:8.0];
      CFStringRef v19 = v52 = v6;
      v57[4] = v19;
      [v10 mapInsetsLayoutGuide];
      int v20 = v53 = WeakRetained;
      v21 = [v20 topAnchor];
      __int16 v22 = [(CarRoutePlanningAdvisoryLabel *)v12 bottomAnchor];
      v23 = [v21 constraintGreaterThanOrEqualToAnchor:v22];
      v57[5] = v23;
      __int16 v24 = +[NSArray arrayWithObjects:v57 count:6];
      +[NSLayoutConstraint activateConstraints:v24];

      id WeakRetained = v53;
      v6 = v52;

      [(CarRoutePlanningAdvisoryLabel *)v12 setAlpha:0.0];
      [(CarRoutePlanningAdvisoryLabel *)v12 layoutIfNeeded];
      [v51 addSubview:v12];
      v55[0] = _NSConcreteStackBlock;
      v55[1] = 3221225472;
      v55[2] = sub_100589F98;
      v55[3] = &unk_1012E5D08;
      v7 = v12;
      v56 = v7;
      +[UIView animateWithDuration:v55 animations:0.300000012];
    }
    else
    {
      v7 = 0;
    }
  }
  id v25 = objc_alloc_init((Class)NSMutableArray);
  __int16 v26 = v25;
  if (v3)
  {
    v27 = v3;
LABEL_12:
    [v25 addObject:v27];
    v28 = [(CarRoutePlanningAdvisoryLabel *)v7 label];
    v29 = v28;
    uint64_t v30 = 0;
    goto LABEL_13;
  }
  if (v54)
  {
    v27 = v54;
    goto LABEL_12;
  }
  v28 = [(CarRoutePlanningAdvisoryLabel *)v7 label];
  v29 = v28;
  uint64_t v30 = 1;
LABEL_13:
  [v28 setNumberOfLines:v30];

  if ([v3 length] || !objc_msgSend(v6, "length"))
  {
    [(CarRoutePlanningAdvisoryLabel *)v7 setAlwaysClickable:0];
  }
  else
  {
    [v26 addObject:v6];
    [(CarRoutePlanningAdvisoryLabel *)v7 setAlwaysClickable:1];
    v31 = [*(id *)(a1 + 32) currentRoute];
    v32 = [*(id *)(a1 + 32) carAdvisoryListCardViewController];
    [v32 setRoute:v31];
  }
  v33 = [v26 componentsJoinedByString:@", "];
  [(CarRoutePlanningAdvisoryLabel *)v7 setText:v33];

  v34 = [WeakRetained chromeViewController];
  [v34 setNeedsUpdateMapInsets];

LABEL_18:
}

id sub_100589F98(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_10058A4B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10058A4D8(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    v4 = [WeakRetained searchPinsManager];
    [v4 clearDroppedPin];

    id v5 = [v6 chromeViewController];
    [v5 setNeedsUpdateComponent:@"routeAnnotations" animated:1];

    [v6 _recenterOnRouteAnimated:a2];
    id WeakRetained = v6;
  }
}

void sub_10058A668(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10058A68C(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v4 = WeakRetained[18] + 1;
  WeakRetained[18] = v4;
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_10058AA90;
  v30[3] = &unk_1012F0300;
  objc_copyWeak(&v31, v2);
  int v32 = v4;
  id v5 = objc_retainBlock(v30);
  if ([*(id *)(a1 + 32) navigationAidedDrivingEnabled])
  {
    id v6 = 0;
    v7 = 0;
  }
  else
  {
    v7 = [*(id *)(a1 + 32) currentRoute];
    id v6 = [WeakRetained drivingRoutes];
    if (v7)
    {
      v33 = v7;
      uint64_t v8 = +[NSArray arrayWithObjects:&v33 count:1];

      id v6 = (void *)v8;
    }
  }
  if ([WeakRetained zoomToDestination])
  {
    v9 = [*(id *)(*(void *)(a1 + 32) + 40) destinationSearchResultIfAvailable];
    v10 = [v9 mapItem];
    if (v10)
    {
      v11 = [WeakRetained chromeViewController];
      v12 = [v11 mapCameraController];
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_10058ABEC;
      v28[3] = &unk_1012EAFC0;
      v29 = v5;
      [v12 frameMapItem:v10 animated:1 completion:v28];

      goto LABEL_15;
    }
  }
  if ([v6 count])
  {
    v13 = [WeakRetained chromeViewController];
    v14 = [v13 mapCameraController];
    uint64_t v15 = *(unsigned __int8 *)(a1 + 48);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_10058ABFC;
    v26[3] = &unk_1012EAFC0;
    v27 = v5;
    [v14 frameRoutes:v6 includeCompassInset:1 waypoints:1 animated:v15 completion:v26];

    v9 = v27;
  }
  else
  {
    v16 = [WeakRetained chromeViewController];
    double v17 = [v16 searchPinsManager];
    v9 = [v17 startPOIShapeIfLoaded];

    v18 = [WeakRetained chromeViewController];
    CFStringRef v19 = [v18 searchPinsManager];
    int v20 = [v19 endPOIShapesIfLoaded];

    if (v9 && [v20 count])
    {
      v21 = [WeakRetained chromeViewController];
      __int16 v22 = [v21 mapCameraController];
      uint64_t v23 = *(unsigned __int8 *)(a1 + 48);
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472;
      v24[2] = sub_10058AC0C;
      v24[3] = &unk_1012EAFC0;
      id v25 = v5;
      [v22 frameApproximateRouteFromStartPOIShape:v9 toEndPOIShapes:v20 animated:v23 completion:v24];
    }
  }
LABEL_15:

  objc_destroyWeak(&v31);
}

void sub_10058AA64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10058AA90(uint64_t a1, int a2)
{
  if (a2)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10058AB34;
    v3[3] = &unk_1012F02D8;
    objc_copyWeak(&v4, (id *)(a1 + 32));
    int v5 = *(_DWORD *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
    objc_destroyWeak(&v4);
  }
}

void sub_10058AB34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v7 = WeakRetained;
    id v3 = [WeakRetained chromeViewController];
    unsigned int v4 = [v3 isCurrentContext:v7];

    id WeakRetained = v7;
    if (v4)
    {
      if (v7[18] == *(_DWORD *)(a1 + 40))
      {
        int v5 = [v7 chromeViewController];
        id v6 = [v5 mapView];
        [v6 visibleMapRect];
        [v7 _updateZoomButtonContentAndVisibilityWithMapRect:];

        id WeakRetained = v7;
      }
    }
  }
}

uint64_t sub_10058ABEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10058ABFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10058AC0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10058AF28(id a1, id a2, unint64_t a3)
{
  return a2;
}

id sub_10058B108(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _presentInterruptionForError:a2];
}

void sub_10058B20C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) chromeViewController];
  [v1 dismissCurrentInterruptionOfKind:3];
}

id sub_10058B254(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _presentInterruptionForError:a2];
}

void sub_10058B674(uint64_t a1)
{
  uint64_t v2 = +[UIApplication sharedMapsDelegate];
  unint64_t v3 = (unint64_t)[v2 currentInterruptionKind];

  unint64_t v4 = (unint64_t)[*(id *)(a1 + 32) _interruptionKindForCurrentRoute];
  unint64_t v5 = v4;
  if (v3 > 0xB || ((1 << v3) & 0xB01) == 0)
  {
    v11 = sub_100015DB4();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      if (v5 - 1 > 0x16) {
        CFStringRef v12 = @"kMapsInterruptionNone";
      }
      else {
        CFStringRef v12 = *(&off_1012F03E8 + v5 - 1);
      }
      if (v3 - 1 > 0x16) {
        CFStringRef v14 = @"kMapsInterruptionNone";
      }
      else {
        CFStringRef v14 = *(&off_1012F04A0 + v3 - 1);
      }
      *(_DWORD *)buf = 138543618;
      unint64_t v17 = (unint64_t)v12;
      __int16 v18 = 2114;
      CFStringRef v19 = v14;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "CarRoutePlanning: _updateTurnByTurnSupport, turnByTurn interruption: %{public}@, tried to dismiss current interruption, but it is not an expected kind: %{public}@.", buf, 0x16u);
    }
  }
  else
  {
    if (v3 == v4)
    {
      v7 = sub_100015DB4();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        if (v3 - 1 > 0xA) {
          CFStringRef v8 = @"kMapsInterruptionNone";
        }
        else {
          CFStringRef v8 = *(&off_1012F0558 + v3 - 1);
        }
        *(_DWORD *)buf = 138543362;
        unint64_t v17 = (unint64_t)v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "CarRoutePlanning: _updateTurnByTurnSupport, interruption (%{public}@) did not change", buf, 0xCu);
      }
LABEL_22:

      return;
    }
    if (!v4)
    {
      v13 = sub_100015DB4();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 134217984;
        unint64_t v17 = v3;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "CarRoutePlanning: _updateTurnByTurnSupport, turnByTurn is supported, trying to dismiss interruption of kind %ld", buf, 0xCu);
      }

      v7 = +[UIApplication sharedMapsDelegate];
      [v7 dismissCurrentInterruption];
      goto LABEL_22;
    }
    if ((v4 & 0xFFFFFFFFFFFFFFFDLL) == 9)
    {
      v9 = sub_100015DB4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 134217984;
        unint64_t v17 = v5;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "CarRoutePlanning: _updateTurnByTurnSupport, turnByTurn is not supported, presenting interruption of kind: %ld.", buf, 0xCu);
      }

      v10 = +[UIApplication sharedMapsDelegate];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_10058B978;
      v15[3] = &unk_1012F03B0;
      v15[4] = *(void *)(a1 + 32);
      v15[5] = v5;
      [v10 interruptApplicationWithKind:v5 userInfo:0 completionHandler:v15];
    }
  }
}

id sub_10058B978(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) == 9 && qword_1015F38F8 != a2) {
    [*(id *)(a1 + 32) _clearSteppingRouteParameters];
  }
  unint64_t v4 = *(void **)(a1 + 32);

  return [v4 _updateElements];
}

id sub_10058C144(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateAnnotationsForLoadedRoute];
}

double sub_10058CED4(void *a1)
{
  id v1 = a1;
  id v2 = [v1 count];
  if ((unint64_t)v2 > 1)
  {
    id v3 = v2;
    unint64_t v4 = [v1 objectAtIndexedSubscript:0];
    double v5 = 0.0;
    uint64_t v6 = 1;
    while (1)
    {
      v7 = v4;
      unint64_t v4 = [v1 objectAtIndexedSubscript:v6];
      double v8 = (double)[v4 offsetM];
      double v9 = v8 - (double)[v7 offsetM];
      if (([v4 elevationCm] & 0x80000000) != 0
        || ([v7 elevationCm] & 0x80000000) != 0)
      {
        if ((int)[v4 elevationCm] <= 0 && (int)objc_msgSend(v7, "elevationCm") <= 0)
        {
          int v21 = [v4 elevationCm];
          if (v21 <= (int)[v7 elevationCm]) {
            __int16 v22 = v7;
          }
          else {
            __int16 v22 = v4;
          }
          double v23 = (double)(int)[v22 elevationCm];
          int v24 = [v4 elevationCm];
          if (v24 >= (int)[v7 elevationCm]) {
            id v25 = v7;
          }
          else {
            id v25 = v4;
          }
          double v5 = v5 - (v9 * ((double)(int)[v25 elevationCm] * 0.5) + v23 * v9);
          goto LABEL_22;
        }
        int v16 = [v4 elevationCm];
        if (v16 >= (int)[v7 elevationCm]) {
          unint64_t v17 = v7;
        }
        else {
          unint64_t v17 = v4;
        }
        double v18 = (double)(int)[v17 elevationCm];
        int v19 = [v4 elevationCm];
        if (v19 <= (int)[v7 elevationCm]) {
          int v20 = v7;
        }
        else {
          int v20 = v4;
        }
        double v15 = v9 * v18 + ((double)(int)[v20 elevationCm] - v18) * 0.5 * v9;
      }
      else
      {
        int v10 = [v4 elevationCm];
        if (v10 >= (int)[v7 elevationCm]) {
          v11 = v7;
        }
        else {
          v11 = v4;
        }
        double v12 = (double)(int)[v11 elevationCm];
        int v13 = [v4 elevationCm];
        if (v13 <= (int)[v7 elevationCm]) {
          CFStringRef v14 = v7;
        }
        else {
          CFStringRef v14 = v4;
        }
        double v15 = v9 * ((double)(int)[v14 elevationCm] * 0.5) + v12 * v9;
      }
      double v5 = v5 + v15;
LABEL_22:

      if (v3 == (id)++v6)
      {

        goto LABEL_31;
      }
    }
  }
  v27 = sub_1005762E4();
  if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
  {
    int v30 = 136315906;
    id v31 = "double _maps_integralForPoints(NSArray<GEOPoint *> *__strong _Nonnull)";
    __int16 v32 = 2080;
    v33 = "MapsElevationChartFunctions.m";
    __int16 v34 = 1024;
    int v35 = 22;
    __int16 v36 = 2080;
    v37 = "pointCount >= 2";
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "%s [%s:%d] Invalid parameter not satisfying: %s", (uint8_t *)&v30, 0x26u);
  }

  double v5 = 0.0;
  if (sub_100BB36BC())
  {
    v28 = sub_1005762E4();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      v29 = +[NSThread callStackSymbols];
      int v30 = 138412290;
      id v31 = v29;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v30, 0xCu);
    }
  }
LABEL_31:

  return v5;
}

id sub_10058D218(void *a1, unint64_t a2)
{
  id v3 = a1;
  id v4 = [v3 count];
  if ((unint64_t)v4 <= 1)
  {
    v46 = sub_1005762E4();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      v56 = "NSArray<NSArray<GEOPoint *> *> * _Nonnull _maps_bucketPointsByCount(NSArray<GEOPoint *> *__strong _Nonnull, NSUInteger)";
      __int16 v57 = 2080;
      v58 = "MapsElevationChartFunctions.m";
      __int16 v59 = 1024;
      int v60 = 60;
      __int16 v61 = 2080;
      v62 = "pointCount >= 2";
      _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_ERROR, "%s [%s:%d] Invalid parameter not satisfying: %s", buf, 0x26u);
    }

    if (sub_100BB36BC())
    {
      v47 = sub_1005762E4();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
      {
        v48 = +[NSThread callStackSymbols];
        *(_DWORD *)buf = 138412290;
        v56 = v48;
        _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
    }
    id v51 = &__NSArray0__struct;
  }
  else
  {
    unint64_t v5 = (unint64_t)v4;
    id v51 = (id)objc_opt_new();
    id v6 = v3;
    v7 = [v6 firstObject];
    unsigned int v8 = [v7 offsetM];
    double v9 = [v6 lastObject];

    unsigned int v10 = [v9 offsetM];
    if (a2)
    {
      id v49 = v3;
      unint64_t v11 = 0;
      unint64_t v12 = 0;
      double v13 = vabdd_f64((double)v8, (double)v10) / (double)a2;
      unint64_t v50 = a2;
      do
      {
        CFStringRef v14 = [v6 objectAtIndexedSubscript:v11];
        unint64_t v15 = v11 + 1;
        id v53 = v14;
        if (v11 + 1 < v5
          && ([v6 objectAtIndexedSubscript:v11 + 1], (uint64_t v16 = objc_claimAutoreleasedReturnValue()) != 0))
        {
          unint64_t v17 = (void *)v16;
          double v18 = v13 * (double)v12;
          if (vabdd_f64((double)[v14 offsetM], v18) >= 2.22044605e-16)
          {
            if (vabdd_f64((double)[v17 offsetM], v18) >= 2.22044605e-16)
            {
              unsigned int v40 = [v17 elevationCm];
              double v41 = (double)(int)(v40 - [v14 elevationCm]);
              v52 = v17;
              unsigned int v42 = [v17 offsetM];
              double v43 = v41 / (double)(v42 - [v14 offsetM]);
              double v44 = v18 - (double)[v14 offsetM];
              id v19 = (id)objc_opt_new();
              [v19 setOffsetM:v18];
              [v19 setElevationCm:[v14 elevationCm] + (int)(v44 * v43)];
            }
            else
            {
              id v19 = v17;
              unint64_t v15 = v11 + 2;
              v52 = v19;
            }
          }
          else
          {
            v52 = v17;
            id v19 = v14;
          }
        }
        else
        {
          int v20 = sub_1005762E4();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 136315650;
            v56 = "NSArray<NSArray<GEOPoint *> *> * _Nonnull _maps_bucketPointsByCount(NSArray<GEOPoint *> *__strong _Non"
                  "null, NSUInteger)";
            __int16 v57 = 2080;
            v58 = "MapsElevationChartFunctions.m";
            __int16 v59 = 1024;
            int v60 = 107;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
          }

          if (sub_100BB36BC())
          {
            int v21 = sub_1005762E4();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              __int16 v22 = +[NSThread callStackSymbols];
              *(_DWORD *)buf = 138412290;
              v56 = v22;
              _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
            }
          }
          id v19 = v14;
          v52 = 0;
        }
        unint64_t v23 = v12 + 1;
        int v24 = [v6 lastObject];
        unint64_t v54 = v23;
        if (v15 >= v5)
        {
LABEL_20:
          BOOL v29 = 0;
          unint64_t v26 = v5;
        }
        else
        {
          double v25 = v13 * (double)v23;
          unint64_t v26 = v15;
          while (1)
          {
            v27 = [v6 objectAtIndexedSubscript:v26];
            double v28 = vabdd_f64((double)[v27 offsetM], v25);
            BOOL v29 = v28 >= 2.22044605e-16;
            if (v28 < 2.22044605e-16)
            {
              id v30 = v27;
              goto LABEL_23;
            }
            if (v25 < (double)[v27 offsetM]) {
              break;
            }

            if (v5 == ++v26) {
              goto LABEL_20;
            }
          }
          id v31 = [v6 objectAtIndexedSubscript:v26 - 1];
          unsigned int v32 = [v27 elevationCm];
          double v33 = (double)(int)(v32 - [v31 elevationCm]);
          unsigned int v34 = [v27 offsetM];
          double v35 = v33 / (double)(v34 - [v31 offsetM]);
          double v36 = v25 - (double)[v31 offsetM];
          id v30 = (id)objc_opt_new();

          [v30 setOffsetM:v25];
          [v30 setElevationCm:[v31 elevationCm] + (int)(v36 * v35)];
          int v24 = v31;
LABEL_23:

          int v24 = v30;
        }
        v37 = +[NSMutableArray arrayWithObject:v19];
        unint64_t v38 = v26 - 1 - v15;
        if (v26 - 1 > v15)
        {
          v39 = [v6 subarrayWithRange:v15, v38];
          [v37 addObjectsFromArray:v39];
        }
        [v37 addObject:v24, v38];
        [v51 addObject:v37];
        if (v29) {
          unint64_t v11 = v26 - 1;
        }
        else {
          unint64_t v11 = v26;
        }

        unint64_t v12 = v54;
      }
      while (v54 != v50);
      id v3 = v49;
    }
  }

  return v51;
}

id sub_10058D874(void *a1, unint64_t a2, double a3)
{
  id v5 = a1;
  id v6 = [v5 count];
  id v7 = &__NSArray0__struct;
  if (a2 && v6)
  {
    unsigned int v8 = [v5 lastObject];
    unsigned int v9 = [v8 offsetM];
    unsigned int v10 = [v5 firstObject];
    unsigned int v11 = [v10 offsetM];

    if ([v5 count] == (id)1)
    {
      unint64_t v12 = [v5 firstObject];
      uint64_t v13 = [v5 arrayByAddingObject:v12];

      id v5 = (id)v13;
    }
    id v14 = [objc_alloc((Class)NSMutableArray) initWithCapacity:a2];
    unint64_t v15 = [v5 firstObject];
    if ((unint64_t)[v5 count] < 2)
    {
      id v19 = v5;
    }
    else
    {
      double v16 = (double)(v9 - v11) / ((double)a2 * a3);
      double v17 = v16 * a3;
      unint64_t v18 = 1;
      id v19 = v5;
      do
      {
        int v20 = v15;
        unint64_t v15 = [v19 objectAtIndexedSubscript:v18];
        while (v16 > (double)[v20 offsetM]
             && v16 <= (double)[v15 offsetM])
        {
          double v21 = v16 - (double)[v20 offsetM];
          unsigned int v22 = [v15 offsetM];
          double v23 = v21 / (double)(v22 - [v20 offsetM]);
          int v24 = objc_opt_new();
          double v25 = (double)(int)[v20 elevationCm];
          double v26 = v23 * (double)(int)[v15 elevationCm] + v25 * (1.0 - v23);
          id v27 = objc_alloc((Class)NSMeasurement);
          double v28 = +[NSUnitLength centimeters];
          id v29 = [v27 initWithDoubleValue:v28 unit:v26];
          [v24 setElevationMeasurement:v29];

          id v30 = objc_alloc((Class)NSMeasurement);
          id v31 = +[NSUnitLength meters];
          id v32 = [v30 initWithDoubleValue:v31 unit:v16];
          [v24 setOffsetMeasurement:v32];

          [v14 addObject:v24];
          double v16 = v17 + v16;
        }
        ++v18;
        id v19 = v5;
      }
      while (v18 < (unint64_t)[v5 count]);
    }
    id v7 = [v14 copy];

    id v5 = v19;
  }

  return v7;
}

unint64_t sub_10058DB6C(double a1, double a2, double a3)
{
  unint64_t v3 = vcvtmd_u64_f64(a3 / a2);
  unint64_t result = GEOConfigGetUInteger();
  if (result <= v3) {
    return v3;
  }
  return result;
}

unint64_t sub_10058DBA8(double a1, double a2, double a3)
{
  GEOConfigGetDouble();
  if (v6 >= a1)
  {
    double v15 = floor(a3 / a2) * 0.0;
  }
  else
  {
    double v7 = v6;
    GEOConfigGetDouble();
    if (v8 <= a1)
    {
      double v16 = floor(a3 / a2);
      goto LABEL_16;
    }
    double v9 = v8;
    if (GEOConfigGetBOOL())
    {
      GEOConfigGetDouble();
      double v11 = v10;
      GEOConfigGetDouble();
      if (v11 <= a1)
      {
        double v20 = (a1 - v11) / (v9 - v11);
        if (v20 > 1.0) {
          double v20 = 1.0;
        }
        double v14 = v12 + v20 * (1.0 - v12);
      }
      else
      {
        double v13 = (a1 - v7) / (v11 - v7);
        if (v13 > 1.0) {
          double v13 = 1.0;
        }
        double v14 = v12 * v13;
      }
    }
    else
    {
      GEOConfigGetDouble();
      double v18 = v17;
      GEOConfigGetDouble();
      double v14 = fmin(fmax(v18 + v19 * log(a1 / 1000.0), 0.0), 1.0);
    }
    double v15 = floor(a3 / a2) * v14;
  }
  double v16 = round(v15);
LABEL_16:
  unint64_t v21 = (unint64_t)v16;
  unint64_t result = GEOConfigGetUInteger();
  if (result <= v21) {
    return v21;
  }
  return result;
}

id sub_10058DD3C(void *a1, unint64_t a2)
{
  id v3 = a1;
  id v4 = v3;
  if (!v3)
  {
    double v8 = sub_10057670C();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v28) = 0;
      double v20 = "Can't create a route from a nil recording";
      unint64_t v21 = v8;
      uint32_t v22 = 2;
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, v20, (uint8_t *)&v28, v22);
    }
LABEL_12:
    double v23 = 0;
    goto LABEL_13;
  }
  id v5 = [v3 directionsRequests];
  if ((unint64_t)[v5 count] <= a2)
  {

LABEL_9:
    double v8 = sub_10057670C();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v28 = 134218242;
      unint64_t v29 = a2;
      __int16 v30 = 2112;
      id v31 = v4;
      double v20 = "Can't find a route with index %lu in a recording: %@";
      unint64_t v21 = v8;
      uint32_t v22 = 22;
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  double v6 = [v4 directionsResponses];
  id v7 = [v6 count];

  if ((unint64_t)v7 <= a2) {
    goto LABEL_9;
  }
  double v8 = [v4 directionsRequestsAtIndex:a2];
  double v9 = [v4 directionsResponsesAtIndex:a2];
  double v10 = [v4 waypoints];
  double v11 = sub_100099700(v10, &stru_1012F05D0);

  id v12 = objc_alloc((Class)GEORouteInitializerData);
  double v13 = [v8 routeAttributes];
  id v14 = [v12 initWithWaypoints:v11 routeAttributes:v13 directionsResponse:v9];

  LODWORD(v13) = [v4 selectedSuggestedRouteIndexInDirectionsResponse];
  double v15 = [v14 allRoutes];
  id v16 = [v15 count];

  double v17 = [v14 allRoutes];
  double v18 = v17;
  if ((unint64_t)v16 <= v13)
  {
    id v25 = [v17 count];

    double v26 = sub_10057670C();
    BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_ERROR);
    if (!v25)
    {
      if (v27)
      {
        int v28 = 138412290;
        unint64_t v29 = (unint64_t)v4;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "routeInitializerData.allRoutes is empty for a recording: %@", (uint8_t *)&v28, 0xCu);
      }

      double v23 = 0;
      goto LABEL_21;
    }
    if (v27)
    {
      int v28 = 138412290;
      unint64_t v29 = (unint64_t)v4;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "routeInitializerData.allRoutes has less routes than indexOfSelectedSuggestedRoute for a recording: %@", (uint8_t *)&v28, 0xCu);
    }

    double v18 = [v14 allRoutes];
    uint64_t v19 = [v18 firstObject];
  }
  else
  {
    uint64_t v19 = [v17 objectAtIndexedSubscript:[v4 selectedSuggestedRouteIndexInDirectionsResponse]];
  }
  double v23 = (void *)v19;

LABEL_21:
LABEL_13:

  return v23;
}

GEOComposedWaypoint *__cdecl sub_10058E074(id a1, RAPUserSearchInput *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [(RAPUserSearchInput *)v3 placeMapItemStorage];
  id v5 = [(RAPUserSearchInput *)v3 findMyHandleID];

  if (v5)
  {
    id v6 = objc_alloc((Class)GEOLocation);
    [v4 coordinate];
    id v7 = [v6 initWithGEOCoordinate:];
    id v8 = [objc_alloc((Class)GEOComposedWaypoint) initWithLocation:v7 findMyHandleID:v5];
  }
  else
  {
    id v8 = [objc_alloc((Class)GEOComposedWaypoint) initWithMapItem:v4];
  }

  return (GEOComposedWaypoint *)v8;
}

void sub_10058E8E4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) hasButtonOneAppURI])
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10058E980;
    v3[3] = &unk_1012E5D08;
    id v2 = *(void **)(a1 + 40);
    id v4 = *(id *)(a1 + 32);
    [v2 dismissAllModalViewsIfPresentAnimated:0 completion:v3];
  }
}

void sub_10058E980(uint64_t a1)
{
  id v4 = +[UIApplication sharedApplication];
  id v2 = [*(id *)(a1 + 32) buttonOneAppURI];
  id v3 = +[NSURL URLWithString:v2];
  [v4 openURL:v3 options:&__NSDictionary0__struct completionHandler:0];
}

void sub_10058EA1C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) hasButtonTwoAppURI])
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10058EAB8;
    v3[3] = &unk_1012E5D08;
    id v2 = *(void **)(a1 + 40);
    id v4 = *(id *)(a1 + 32);
    [v2 dismissAllModalViewsIfPresentAnimated:0 completion:v3];
  }
}

void sub_10058EAB8(uint64_t a1)
{
  id v4 = +[UIApplication sharedApplication];
  id v2 = [*(id *)(a1 + 32) buttonTwoAppURI];
  id v3 = +[NSURL URLWithString:v2];
  [v4 openURL:v3 options:&__NSDictionary0__struct completionHandler:0];
}

void sub_10059047C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100590498(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained panLoadFinished];
}

void sub_100590804(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_100590884;
  v1[3] = &unk_1012F05F8;
  v1[4] = *(void *)(a1 + 32);
  int v2 = *(_DWORD *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v1);
}

id sub_100590884(uint64_t a1)
{
  return [*(id *)(a1 + 32) panToTestPoint:(*(_DWORD *)(a1 + 40) + 1)];
}

void sub_100590898(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_100590918;
  v1[3] = &unk_1012F05F8;
  v1[4] = *(void *)(a1 + 32);
  int v2 = *(_DWORD *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v1);
}

id sub_100590918(uint64_t a1)
{
  return [*(id *)(a1 + 32) panToTestPoint:(*(_DWORD *)(a1 + 40) + 1)];
}

void sub_1005909BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainVKMapView];
  [v2 enableTestStatistics];
  [v2 enableTileStatistics];
  [*(id *)(a1 + 32) startedTest];
  [*(id *)(a1 + 32) panToTestPoint:1];
}

id sub_100590CE0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainVKMapView];
  unsigned int v3 = [v2 isFullyDrawn];

  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    return _[v4 onFullyDrawn:0];
  }
  else
  {
    return [v4 setupFullyDrawnNotification:"onFullyDrawn:"];
  }
}

void sub_100591600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10059161C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained circlePanLoadFinished];
}

void sub_1005916CC(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 500000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100591760;
  block[3] = &unk_1012E5D08;
  block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100591760(uint64_t a1)
{
  dispatch_time_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[160])
  {
    if ([v2 useTestNameInResults])
    {
      unsigned int v3 = [*(id *)(a1 + 32) testName];
      id v4 = +[NSString stringWithFormat:@"%@:circlePan", v3];

      [*(id *)(a1 + 32) startedSubTest:v4];
    }
    else
    {
      [*(id *)(a1 + 32) startedSubTest:@"circlePan"];
    }
  }
  else
  {
    [v2 startedTest];
  }
  id v5 = [*(id *)(a1 + 32) mainVKMapView];
  [v5 bounds];
  double MidX = CGRectGetMidX(v19);
  [v5 bounds];
  double MidY = CGRectGetMidY(v20);
  [v5 enableTestStatistics];
  [v5 enableTileStatistics];
  [v5 startPanningAtPoint:MidX, MidY];
  id v8 = [objc_alloc((Class)VKTimedAnimation) initWithDuration:3.0];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100591968;
  v17[3] = &unk_1012F0648;
  v17[4] = *(void *)(a1 + 32);
  id v9 = v5;
  id v18 = v9;
  [v8 setStepHandler:v17];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1005919D0;
  v12[3] = &unk_1012F0670;
  double v15 = MidX;
  double v16 = MidY;
  uint64_t v10 = *(void *)(a1 + 32);
  id v13 = v9;
  uint64_t v14 = v10;
  id v11 = v9;
  [v8 setCompletionHandler:v12];
  [v11 runAnimation:v8];
}

id sub_100591968(uint64_t a1, float a2)
{
  __double2 v3 = __sincos_stret(a2 * 18.8495559);
  id v4 = *(void **)(a1 + 40);
  double v5 = *(double *)(*(void *)(a1 + 32) + 200);

  return [v4 updatePanWithTranslation:v3.__sinval * v5 * 0.5, v3.__cosval * v5 * 0.5];
}

void sub_1005919D0(uint64_t a1)
{
  [*(id *)(a1 + 32) stopPanningAtPoint:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  dispatch_time_t v2 = *(unsigned char **)(a1 + 40);
  if (v2[160])
  {
    if ([v2 useTestNameInResults])
    {
      __double2 v3 = [*(id *)(a1 + 40) testName];
      id v4 = +[NSString stringWithFormat:@"%@:circlePan", v3];

      [*(id *)(a1 + 40) finishedSubTest:v4];
    }
    else
    {
      [*(id *)(a1 + 40) finishedSubTest:@"circlePan"];
    }
  }
  [*(id *)(a1 + 32) disableTestStatistics];
  double v5 = [*(id *)(a1 + 32) testStatistics];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v6 = [v5 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v19;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v19 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v18 + 1) + 8 * i);
        id v11 = [v5 objectForKey:v10];
        unsigned int v12 = [*(id *)(a1 + 40) useTestNameInResults];
        id v13 = [*(id *)(a1 + 40) results];
        if (v12)
        {
          uint64_t v14 = [*(id *)(a1 + 40) testName];
          double v15 = +[NSString stringWithFormat:@"%@:circlePan:%@", v14, v10];
          [v13 setObject:v11 forKey:v15];
        }
        else
        {
          uint64_t v14 = +[NSString stringWithFormat:@"sub:circlePan:%@", v10];
          [v13 setObject:v11 forKey:v14];
        }
      }
      id v7 = [v5 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v7);
  }
  [*(id *)(a1 + 32) resetTestStatistics];
  uint64_t v16 = *(void *)(a1 + 40);
  if (!*(unsigned char *)(v16 + 160) || !*(unsigned char *)(v16 + 161))
  {
    [(id)v16 finishedTest];
    uint64_t v16 = *(void *)(a1 + 40);
  }
  uint64_t v17 = *(void *)(v16 + 208);
  if (v17) {
    (*(void (**)(void))(v17 + 16))();
  }
}

void sub_100591EF4(void *a1)
{
  uint64_t v1 = a1[6];
  if (v1 < 1)
  {
    __double2 v3 = *(void (**)(void))(a1[5] + 16);
    v3();
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100591FB4;
    block[3] = &unk_1012EB5B8;
    dispatch_time_t v2 = (void *)a1[5];
    block[4] = a1[4];
    uint64_t v6 = v1;
    id v5 = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_100591FB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) animateCircle:*(void *)(a1 + 48) - 1 completion:*(void *)(a1 + 40)];
}

void sub_100591FC8(void *a1)
{
  uint64_t v1 = a1[6];
  if (v1 < 1)
  {
    __double2 v3 = *(void (**)(void))(a1[5] + 16);
    v3();
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100592088;
    block[3] = &unk_1012EB5B8;
    dispatch_time_t v2 = (void *)a1[5];
    block[4] = a1[4];
    uint64_t v6 = v1;
    id v5 = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_100592088(uint64_t a1)
{
  return [*(id *)(a1 + 32) animateCircle:*(void *)(a1 + 48) - 1 completion:*(void *)(a1 + 40)];
}

id sub_100592180(uint64_t a1)
{
  dispatch_time_t v2 = [*(id *)(a1 + 32) mainVKMapView];
  unsigned int v3 = [v2 isFullyDrawn];

  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    return _[v4 onFullyDrawn:0];
  }
  else
  {
    return [v4 setupFullyDrawnNotification:"onFullyDrawn:"];
  }
}

void sub_100594234(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 128));
  _Unwind_Resume(a1);
}

void sub_100594284(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _performDTMActionWithPreference:*(void *)(a1 + 40)];
}

void sub_1005942D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _didDisplayModelForPreference:*(void *)(a1 + 40)];
}

void sub_100594324(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

id sub_100594F44(void *a1)
{
  dispatch_time_t v2 = +[NSMutableDictionary dictionary];
  unsigned int v3 = +[NSNumber numberWithUnsignedLongLong:a1[1]];
  [v2 setObject:v3 forKey:@"low"];

  uint64_t v4 = +[NSNumber numberWithUnsignedLongLong:*a1];
  [v2 setObject:v4 forKey:@"high"];

  return v2;
}

uint64_t sub_100594FF0(void *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      char v17 = 0;
      unsigned int v18 = 0;
      uint64_t v19 = 0;
      while (1)
      {
        unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
        v19 |= (unint64_t)(v21 & 0x7F) << v17;
        if ((v21 & 0x80) == 0) {
          goto LABEL_40;
        }
        v17 += 7;
        BOOL v9 = v18++ >= 9;
        if (v9)
        {
          uint64_t v19 = 0;
          goto LABEL_42;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_40:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v19 = 0;
      }
LABEL_42:
      a1[1] = v19;
    }
    else if ((v6 >> 3) == 2)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_36;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          uint64_t v14 = 0;
          goto LABEL_38;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_36:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v14 = 0;
      }
LABEL_38:
      *a1 = v14;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100595270(uint64_t a1, void *a2)
{
  id v2 = a2;
  PBDataWriterWriteUint64Field();
  PBDataWriterWriteUint64Field();
}

void sub_100595F30(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerView];
  [v2 frame];
  double Height = CGRectGetHeight(v22);

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v4 = *(id *)(a1 + 40);
  id v5 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v5)
  {
    id v6 = v5;
    double v7 = Height + 30.0;
    uint64_t v8 = *(void *)v18;
    do
    {
      BOOL v9 = 0;
      do
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v4);
        }
        int v10 = *(void **)(*((void *)&v17 + 1) + 8 * (void)v9);
        if ([*(id *)(a1 + 32) chromeHidden])
        {
          CGAffineTransformMakeTranslation(&v16, 0.0, v7);
        }
        else
        {
          long long v11 = *(_OWORD *)&CGAffineTransformIdentity.c;
          *(_OWORD *)&v16.a = *(_OWORD *)&CGAffineTransformIdentity.a;
          *(_OWORD *)&v16.c = v11;
          *(_OWORD *)&v16.tx = *(_OWORD *)&CGAffineTransformIdentity.tx;
        }
        CGAffineTransform v15 = v16;
        [v10 setTransform:&v15];
        BOOL v9 = (char *)v9 + 1;
      }
      while (v6 != v9);
      id v6 = [v4 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v6);
  }

  [*(id *)(a1 + 32) setNeedsUpdateOfHomeIndicatorAutoHidden];
  char v12 = [*(id *)(a1 + 32) iosBasedChromeViewController];
  [v12 setNeedsUpdateComponent:@"statusBarStyle" animated:0];

  unsigned int v13 = [*(id *)(a1 + 32) view];
  [v13 setNeedsLayout];

  uint64_t v14 = [*(id *)(a1 + 32) view];
  [v14 layoutIfNeeded];
}

void sub_100596108(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 setUserInteractionEnabled:1];
}

id sub_100596234(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)FlyoverContainerViewController;
  return [super updateMapEdgeInsets];
}

void sub_1005966D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100596714(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained flyoverIntroTimer];
  [v1 invalidate];

  [WeakRetained setFlyoverIntroTimer:0];
  [WeakRetained hideChrome:1 animated:1];
  [WeakRetained setFlyoverIntroCompleted:1];
}

id sub_1005970EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_1005970F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_100597104(uint64_t a1)
{
  return [*(id *)(a1 + 32) setText:*(void *)(a1 + 40)];
}

void sub_1005972EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_100597310(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    long long v11 = WeakRetained;
    objc_super v2 = [WeakRetained chromeViewController];
    uint64_t v3 = [v2 view];
    id v4 = [v3 window];
    id v5 = [v4 windowScene];
    v11[53] = [v5 interfaceOrientation];

    id v6 = [v11 chromeViewController];
    double v7 = [v6 mapView];
    uint64_t v8 = [v7 _mapLayer];
    unint64_t v9 = v11[53] - 1;
    if (v9 > 3) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = qword_100F6FE18[v9];
    }
    [v8 setARInterfaceOrientation:v10];

    id WeakRetained = v11;
  }
}

void sub_100597420(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    long long v11 = WeakRetained;
    objc_super v2 = [WeakRetained chromeViewController];
    uint64_t v3 = [v2 view];
    id v4 = [v3 window];
    id v5 = [v4 windowScene];
    v11[53] = [v5 interfaceOrientation];

    id v6 = [v11 chromeViewController];
    double v7 = [v6 mapView];
    uint64_t v8 = [v7 _mapLayer];
    unint64_t v9 = v11[53] - 1;
    if (v9 > 3) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = qword_100F6FE18[v9];
    }
    [v8 setARInterfaceOrientation:v10];

    id WeakRetained = v11;
  }
}

void sub_100597834(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) flyoverBannerView];
  [v1 setAlpha:1.0];
}

id sub_100597A1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_100597A28(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) flyoverActionCoordinator];
  id v1 = [v2 appCoordinator];
  [v1 exitFlyover];
}

id sub_100598388()
{
  if (qword_10160F198 != -1) {
    dispatch_once(&qword_10160F198, &stru_1012F0850);
  }
  v0 = (void *)qword_10160F190;

  return v0;
}

void sub_100599B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,id location)
{
  objc_destroyWeak(v42);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100599BBC(uint64_t a1)
{
  id v2 = sub_100598388();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      uint64_t v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      double v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        uint64_t v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    uint64_t v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543875;
    char v12 = v8;
    __int16 v13 = 2114;
    uint64_t v14 = v9;
    __int16 v15 = 2113;
    uint64_t v16 = v10;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[%{public}@] callstack: %{public}@ %{private}@", buf, 0x20u);
  }
}

id sub_100599D58(uint64_t a1)
{
  id v2 = sub_100598388();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      uint64_t v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      double v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        uint64_t v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    uint64_t v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    uint64_t v9 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    char v12 = v8;
    __int16 v13 = 2114;
    uint64_t v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] Applying %{public}@", buf, 0x16u);
  }
  return [*(id *)(a1 + 48) setCamera:*(void *)(a1 + 56)];
}

void sub_100599EF0(uint64_t a1, int a2)
{
  id v4 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v7 = *(void *)(a1 + 56);
    id v8 = *((id *)WeakRetained + 7);
    uint64_t v9 = +[NSNumber numberWithUnsignedInteger:v7];
    v46 = [v8 objectForKeyedSubscript:v9];

    uint64_t v10 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
    [v8 removeObjectForKey:v10];

    if (a2)
    {
LABEL_3:
      id v11 = objc_loadWeakRetained(v4);
      BOOL v12 = v11 != 0;

      goto LABEL_6;
    }
  }
  else
  {
    v46 = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  BOOL v12 = 0;
LABEL_6:
  __int16 v13 = [v6 mapView];
  uint64_t v14 = v13;
  if (v13) {
    BOOL v15 = v12;
  }
  else {
    BOOL v15 = 0;
  }
  if (v15)
  {
    if ([v13 userTrackingMode] != *(id *)(a1 + 64)) {
      [v14 setUserTrackingMode:animated:];
    }
    unsigned int v16 = [v14 _isPitched];
    int v17 = *(unsigned __int8 *)(a1 + 73);
    if (v17 != v16)
    {
      v51[0] = _NSConcreteStackBlock;
      v51[1] = 3221225472;
      v51[2] = sub_10059A3E4;
      v51[3] = &unk_1012E5CE0;
      char v54 = v17;
      v52 = v6;
      id v53 = v14;
      long long v18 = objc_retainBlock(v51);
      long long v19 = v18;
      if (*(unsigned char *)(a1 + 72)) {
        ((void (*)(void *))v18[2])(v18);
      }
      else {
        +[UIView performWithoutAnimation:v18];
      }
    }
  }
  long long v20 = sub_100598388();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    int v45 = a2;
    id v21 = *(id *)(a1 + 32);
    double v44 = v6;
    if (!v21)
    {
      BOOL v27 = @"<nil>";
      goto LABEL_26;
    }
    CGRect v22 = (objc_class *)objc_opt_class();
    double v23 = NSStringFromClass(v22);
    if (objc_opt_respondsToSelector())
    {
      int v24 = [v21 performSelector:"accessibilityIdentifier"];
      id v25 = v24;
      if (v24 && ![v24 isEqualToString:v23])
      {
        double v26 = v4;
        BOOL v27 = +[NSString stringWithFormat:@"%@<%p, %@>", v23, v21, v25];

        goto LABEL_24;
      }
    }
    double v26 = v4;
    BOOL v27 = +[NSString stringWithFormat:@"%@<%p>", v23, v21];
LABEL_24:

    id v4 = v26;
LABEL_26:

    uint64_t v28 = *(void *)(a1 + 40);
    if (v15) {
      unint64_t v29 = @"YES";
    }
    else {
      unint64_t v29 = @"NO";
    }
    __int16 v30 = v29;
    if (v45) {
      id v31 = @"YES";
    }
    else {
      id v31 = @"NO";
    }
    id v32 = v31;
    id v33 = objc_loadWeakRetained(v4);
    if (v33) {
      unsigned int v34 = @"YES";
    }
    else {
      unsigned int v34 = @"NO";
    }
    double v35 = v34;
    *(_DWORD *)buf = 138544642;
    __int16 v57 = v27;
    __int16 v58 = 2114;
    uint64_t v59 = v28;
    __int16 v60 = 2114;
    __int16 v61 = v30;
    __int16 v62 = 2114;
    v63 = v32;
    __int16 v64 = 2114;
    v65 = v35;
    __int16 v66 = 2112;
    v67 = v14;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "[%{public}@] Completed applying %{public}@, did apply tracking: %{public}@, completion block finished: %{public}@, weakSelf exists: %{public}@, completionMapView: %@", buf, 0x3Eu);

    id v6 = v44;
  }

  if (v6) {
    --v6[6];
  }
  if (v15)
  {
    double v36 = [v6 delegate];
    char v37 = objc_opt_respondsToSelector();

    if (v37)
    {
      unint64_t v38 = [v6 delegate];
      [v38 mapSettings:v6 didApplyAnimated:*(unsigned __int8 *)(a1 + 72)];
    }
  }
  long long v49 = 0u;
  long long v50 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  v39 = [v46 completionHandlers];
  id v40 = [v39 countByEnumeratingWithState:&v47 objects:v55 count:16];
  if (v40)
  {
    id v41 = v40;
    uint64_t v42 = *(void *)v48;
    do
    {
      for (i = 0; i != v41; i = (char *)i + 1)
      {
        if (*(void *)v48 != v42) {
          objc_enumerationMutation(v39);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v47 + 1) + 8 * i) + 16))();
      }
      id v41 = [v39 countByEnumeratingWithState:&v47 objects:v55 count:16];
    }
    while (v41);
  }
}

id sub_10059A3E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48) && *(void *)(a1 + 32)) {
    return [*(id *)(a1 + 40) _enter3DMode];
  }
  else {
    return [*(id *)(a1 + 40) _exit3DMode];
  }
}

void sub_10059A50C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 registerDefaults:&off_1013AEC40];

  id v2 = +[NSUserDefaults standardUserDefaults];
  v4[0] = @"map.browse.trackingMode";
  v4[1] = @"map.browse.pitched";
  v5[0] = &off_1013A79A8;
  v5[1] = &__kCFBooleanFalse;
  v4[2] = @"map.browse.zoomLevel";
  v5[2] = &off_1013AF0B8;
  id v3 = +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:3];
  [v2 registerDefaults:v3];
}

void sub_10059AA78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10059AA94(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained(v2);
    id v5 = [v4 type];
    id v6 = *(id *)(a1 + 48);

    if (v5 == v6)
    {
      id v7 = objc_loadWeakRetained(v2);
      [v7 setSaveTimer:0];
      [v7 _writeToUserDefaultsWithKeys:*(void *)(a1 + 32)];
    }
  }
}

void sub_10059B728(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ChromeMapSettings");
  id v2 = (void *)qword_10160F190;
  qword_10160F190 = (uint64_t)v1;
}

id sub_10059B868()
{
  if (qword_10160F1A8 != -1) {
    dispatch_once(&qword_10160F1A8, &stru_1012F0888);
  }
  v0 = (void *)qword_10160F1A0;

  return v0;
}

void sub_10059C0EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CurrentLocationWaypointRequest");
  id v2 = (void *)qword_10160F1A0;
  qword_10160F1A0 = (uint64_t)v1;
}

void sub_10059C130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_10059D024(uint64_t a1)
{
  [*(id *)(a1 + 32) setUpdatingVenueAsync:0];
  +[NSDate timeIntervalSinceReferenceDate];
  [*(id *)(a1 + 32) setLastVenueUpdateTimestamp:];
  id v2 = *(void **)(a1 + 32);
  id v4 = [v2 delegate];
  id v3 = [v4 venueWithFocus];
  [v2 immediatelyHandleVenueWithFocusDidChange:v3];
}

void sub_10059FCC8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6 && [v5 count])
  {
    uint64_t v26 = a1;
    uint64_t v9 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v5 count]);
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    id v10 = v5;
    id v11 = [v10 countByEnumeratingWithState:&v27 objects:v33 count:16];
    if (!v11)
    {
      __int16 v13 = 0;
      goto LABEL_22;
    }
    id v12 = v11;
    __int16 v13 = 0;
    uint64_t v14 = *(void *)v28;
    while (1)
    {
      BOOL v15 = 0;
      do
      {
        if (*(void *)v28 != v14) {
          objc_enumerationMutation(v10);
        }
        unsigned int v16 = *(void **)(*((void *)&v27 + 1) + 8 * (void)v15);
        int v17 = [[SearchResult alloc] initWithMapItem:v16];
        uint64_t v18 = [v16 _displayMapRegion];
        long long v19 = (void *)v18;
        if (v13)
        {
          uint64_t v20 = GEOMapRegionUnion();

          __int16 v13 = (void *)v20;
          if (!v17) {
            goto LABEL_15;
          }
LABEL_14:
          [v9 addObject:v17];
          goto LABEL_15;
        }
        __int16 v13 = (void *)v18;
        if (v17) {
          goto LABEL_14;
        }
LABEL_15:

        BOOL v15 = (char *)v15 + 1;
      }
      while (v12 != v15);
      id v21 = [v10 countByEnumeratingWithState:&v27 objects:v33 count:16];
      id v12 = v21;
      if (!v21)
      {
LABEL_22:

        CGRect v22 = +[SearchInfo searchInfoWithResults:v9 boundingMapRegion:v13];
        double v23 = objc_alloc_init(SearchFieldItem);
        int v24 = [*(id *)(v26 + 32) brandName];
        [(SearchFieldItem *)v23 setSearchString:v24];

        uint64_t v25 = *(void *)(v26 + 40);
        if (v25) {
          (*(void (**)(uint64_t, SearchFieldItem *, void *))(v25 + 16))(v25, v23, v22);
        }

        id v6 = 0;
        goto LABEL_25;
      }
    }
  }
  id v7 = sub_1000A930C();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v32 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "BrandAction resolveBrand:%@", buf, 0xCu);
  }

  uint64_t v8 = *(void *)(a1 + 40);
  if (v8) {
    (*(void (**)(uint64_t, void, void))(v8 + 16))(v8, 0, 0);
  }
LABEL_25:
}

id sub_1005A0050(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"msgInsights:mapItems" withMetrics:&off_1013AD7E8];
}

id sub_1005A00DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"msgInsights:mapItems"];
}

id sub_1005A0160(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"msgInsights:contacts" withMetrics:&off_1013AD800];
}

id sub_1005A01EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"msgInsights:contacts"];
}

id sub_1005A0270(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"msgInsights:isTouristHere" withMetrics:&off_1013AD818];
}

id sub_1005A02FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"msgInsights:isTouristHere"];
}

id sub_1005A0380(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"msgInsights:PortraitCall" withMetrics:&off_1013AD830];
}

id sub_1005A040C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"msgInsights:PortraitCall"];
}

id sub_1005A0490(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"msgInsights:RoutineCall" withMetrics:&off_1013AD848];
}

id sub_1005A051C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"msgInsights:RoutineCall"];
}

id sub_1005A05A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"msgInsights:preload" withMetrics:&off_1013AD860];
}

id sub_1005A062C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"msgInsights:preload"];
}

id sub_1005A06D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)MapsAppTestSearch;
  return [super startedSubTest:v1];
}

id sub_1005A07A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)MapsAppTestSearch;
  return [super finishedSubTest:v1];
}

id sub_1005A089C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 32);
  v4.receiver = *(id *)(a1 + 48);
  v4.super_class = (Class)MapsAppTestSearch;
  return [super startedSubTest:v2 withMetrics:v1];
}

uint64_t sub_1005A0994(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005A0BAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1005A0BC8(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005A0C7C;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_1005A0C7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v1 = +[NSNotificationCenter defaultCenter];
    [v1 addObserver:WeakRetained selector:"didDisplayCarplayBrowseCategories" name:@"PPTTest_CarSearchCategoriesModeController_DidDisplayCategories" object:0];

    [WeakRetained startedSubTest:@"enterSearchMode"];
    dispatch_time_t v2 = [WeakRetained testCoordinator];
    [v2 pptTestEnterSearchMode];
  }
}

void sub_1005A1260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005A127C(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 4000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005A1330;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_1005A1330(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    [WeakRetained startedTest];
    [v6 startedSubTest:@"enterSearchMode"];
    [v6 startedSubTest:@"presentSearchUI"];
    dispatch_time_t v2 = +[NSNotificationCenter defaultCenter];
    [v2 addObserver:v6 selector:"searchUILayoutDone" name:@"PPTTestTrayLayoutDidUpdateNotification" object:0];

    objc_super v3 = [v6 testCoordinator];
    [v3 pptTestEnterSearchMode];

    id v4 = +[UIDevice currentDevice];
    id v5 = [v4 userInterfaceIdiom];

    id WeakRetained = v6;
    if (v5 == (id)5)
    {
      [v6 finishedSubTest:@"enterSearchMode"];
      [v6 startAutocompleteOrNearbySearchTest];
      id WeakRetained = v6;
    }
  }
}

void sub_1005A1784(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1005A17AC(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1[4] testCoordinator];
  id v5 = [v4 pptTestScrollView];

  [a1[4] startedSubTest:a1[5]];
  [a1[6] contentSize];
  uint64_t v7 = (int)v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1005A18D0;
  v8[3] = &unk_1012F08B0;
  objc_copyWeak(&v10, a1 + 7);
  id v9 = a1[5];
  [v5 _performScrollTest:0 iterations:10 delta:20 length:v7 scrollAxis:2 extraResultsBlock:0 completionBlock:v8];

  objc_destroyWeak(&v10);
}

void sub_1005A18BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1005A18D0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained finishedSubTest:*(void *)(a1 + 32)];

  id v4 = objc_loadWeakRetained(v2);
  [v4 finishedTest];
}

void sub_1005A1940(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishedSubTest:@"displayCarPlayKeyboard"];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _runTestNow];
}

id sub_1005A19A8(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

void sub_1005A1ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005A1F24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) finishedSubTest:@"nearby"];
    [*(id *)(a1 + 32) finishedTest];
    id WeakRetained = v3;
  }
}

id sub_1005A2458(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 88) removeObjectAtIndex:0];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 searchAutoCompleteTestSendQuery];
}

id sub_1005A273C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 88) removeObjectAtIndex:0];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 searchAutoCompleteTestSendQuery];
}

id sub_1005A2A6C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"displayPlacecard"];
}

id sub_1005A2A7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"fetchPlaceEnrichment"];
}

id sub_1005A2A8C(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"displayPlaceEnrichment"];
}

id sub_1005A2A9C(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"displayPlaceEnrichment"];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

id sub_1005A2AE0(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"willBeginGEOPPTTest_PlaceRequestTicket_PlaceDataRequest:" name:@"GEOPPTTest_PlaceRequestTicket_PlaceDataRequestBEGIN" object:0];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 addObserver:*(void *)(a1 + 32) selector:"didEndGEOPPTTest_PlaceRequestTicket_PlaceDataRequest:" name:@"GEOPPTTest_PlaceRequestTicket_PlaceDataRequestEND" object:0];

  id v4 = +[GEONotificationPreferenceManager sharedManager];
  [v4 setEnabled:1 forSubTestWithName:@"GEOPPTTest_PlaceRequestTicket_PlaceDataRequest"];

  id v5 = *(void **)(a1 + 32);

  return [v5 sendSearchRequest];
}

void sub_1005A3380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005A339C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishSearchTest:0];
}

void sub_1005A34E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005A3500(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained[96])
  {
    [WeakRetained finishedSubTest:@"mapViewFullyDrawn"];
    [v2 continueToNearbyScrollTests];
  }
  else
  {
    [WeakRetained finishSearchTest:0];
  }
}

id sub_1005A3644(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) containsString:@"Scroll_"];
  id v3 = *(void **)(a1 + 40);
  if (v2)
  {
    unsigned int v4 = [v3 canUpdateTrayLayout];
    id v5 = *(void **)(a1 + 40);
    if (v4)
    {
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_1005A3740;
      v8[3] = &unk_1012E5D08;
      void v8[4] = v5;
      return [v5 updateTrayLayout:2 animated:1 completion:v8];
    }
    else
    {
      return _[v5 startScrollNearbyTestCategory];
    }
  }
  else
  {
    [v3 finishedSubTest:@"nearby"];
    uint64_t v7 = *(void **)(a1 + 40);
    return _[v7 startRefreshSearchTestIfNeeded];
  }
}

id sub_1005A3740(uint64_t a1)
{
  return _[*(id *)(a1 + 32) startScrollNearbyTestCategory];
}

id sub_1005A3818(uint64_t a1)
{
  return _[*(id *)(a1 + 32) startRefreshSearchTestIfNeeded];
}

void sub_1005A3A4C(uint64_t a1)
{
  unsigned int v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"refreshSearchRequestSent:" name:@"SearchManagerSearchForStringRequestSentNotification" object:0];

  [*(id *)(a1 + 32) startedSubTest:@"refreshSearch - searchRequestSent"];
  id v3 = [*(id *)(a1 + 32) testCoordinator];
  [v3 pptTestRefreshSearch];
}

void sub_1005A3E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005A3E1C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishedSubTest:@"refreshSearch - mapViewFullyDrawn"];

  id v3 = objc_loadWeakRetained(v1);
  [v3 finishedTest];
}

id sub_1005A3F8C(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"RouteSuggestions - show edit directions UI"];
  unsigned int v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

id sub_1005A3FD0(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"RouteSuggestions - show Route Planning"];
  unsigned int v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

void sub_1005A41F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005A4214(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained searchForSearchString];
}

void sub_1005A444C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005A4470(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 object];

  if (v3)
  {
    unsigned int v4 = [v10 object];
    uint64_t v5 = [v4 searchInfo];

    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    uint64_t v8 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
    id v9 = [v8 count];

    if (!v9)
    {
      [*(id *)(a1 + 32) startedTest];
      [*(id *)(a1 + 32) failedTest];
    }
  }
}

void sub_1005A453C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
  id v3 = [v2 count];

  if (v3)
  {
    dispatch_time_t v4 = dispatch_time(0, 5000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1005A4634;
    block[3] = &unk_1012E5D08;
    void block[4] = *(void *)(a1 + 32);
    dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    [*(id *)(a1 + 32) startedTest];
    uint64_t v5 = *(void **)(a1 + 32);
    [v5 failedTest];
  }
}

id sub_1005A4634(uint64_t a1)
{
  return _[*(id *)(a1 + 32) searchResultsDidAppear];
}

id sub_1005A46EC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _scrollingTest];
}

id sub_1005A48C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

void sub_1005A49C4(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) mainVKMapView];
  unsigned int v3 = [v2 isFullyDrawn];

  if (v3)
  {
    dispatch_time_t v4 = *(void **)(a1 + 32);
    _[v4 onFullyDrawn:0];
  }
}

void sub_1005A4C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005A4C90(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 4000000000);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1005A4D58;
  v3[3] = &unk_1012E6690;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  id v4 = *(id *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v3);

  objc_destroyWeak(&v5);
}

void sub_1005A4D58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    [WeakRetained startedTest];
    [*(id *)(a1 + 32) addObserver:v4 selector:"startAutoCompleteOrSearchTest" name:UIKeyboardDidShowNotification object:0];
    unsigned int v3 = [v4 testCoordinator];
    [v3 pptTestEnterSearchMode];

    id WeakRetained = v4;
  }
}

id sub_1005A5598(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1[9] == -1) {
    return _[v1 returnToSearchResults];
  }
  else {
    return _[v1 returnToRetainedAutoComplete];
  }
}

void sub_1005A5794(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"returnToAutoComplete - suggestions received"];
  dispatch_time_t v2 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v2);
}

void sub_1005A57D8(uint64_t a1)
{
}

id sub_1005A57E0(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"returnToAutoComplete"];
  dispatch_time_t v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

id sub_1005A58E0(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"returnToSearchResults"];
  dispatch_time_t v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

id sub_1005A6F2C(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  [v3 setObject:*(void *)(a1 + 32) forKeyedSubscript:NSFontAttributeName];
  id v4 = [v3 copy];

  return v4;
}

id sub_1005A8878(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (objc_class *)objc_opt_class();
  uint64_t v6 = NSStringFromClass(v5);
  uint64_t v7 = [v3 dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:v6 forIndexPath:*(void *)(a1 + 40)];

  uint64_t v8 = [[UserProfileSectionFooterViewModel alloc] initWithContentString:v4];
  id v9 = [v4 length];

  if (v9)
  {
    BOOL v10 = 0;
  }
  else
  {
    id v11 = (char *)[*(id *)(a1 + 32) numberOfSections];
    BOOL v10 = v11 != (char *)[*(id *)(a1 + 40) section] + 1;
  }
  [(UserProfileSectionFooterViewModel *)v8 setCollapsed:v10];
  if ([*(id *)(a1 + 48) isEqual:*(void *)(a1 + 56)])
  {
    [(UserProfileSectionFooterViewModel *)v8 setContainsLink:1];
    [(UserProfileSectionFooterViewModel *)v8 setTarget:*(void *)(a1 + 64)];
    [(UserProfileSectionFooterViewModel *)v8 setAction:"privacyTextTapped"];
  }
  [v7 configureWithViewModel:v8];
  [v7 setNeedsLayout];
  [v7 layoutIfNeeded];

  return v7;
}

void sub_1005A8C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005A8C34(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1005A8D08;
    v6[3] = &unk_1012E9BD0;
    objc_copyWeak(&v7, v4);
    [WeakRetained _fetchMapItemsForReviewedPlaces:v3 completion:v6];
    objc_destroyWeak(&v7);
  }
}

void sub_1005A8CF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1005A8D08(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_storeStrong(WeakRetained + 15, a2);
    [v5 _loadContent];
  }
}

void sub_1005A9104(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 || (id v7 = [v5 count], v7 != objc_msgSend(*(id *)(a1 + 32), "count")))
  {
    uint64_t v8 = sub_100011FD4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      unsigned int v9 = [v5 count];
      unsigned int v10 = [*(id *)(a1 + 32) count];
      *(_DWORD *)buf = 67109634;
      unsigned int v15 = v9;
      __int16 v16 = 1024;
      unsigned int v17 = v10;
      __int16 v18 = 2112;
      id v19 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Only refined %d map items of %d reviewed places. Error: %@", buf, 0x18u);
    }
  }
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1005A92A4;
  v12[3] = &unk_1012F09B0;
  id v13 = *(id *)(a1 + 40);
  id v11 = sub_100099700(v5, v12);
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

UGCRefinedReviewedPlace *sub_1005A92A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 _identifier];
  id v5 = (UGCRefinedReviewedPlace *)[v4 muid];

  if (v5)
  {
    id v6 = *(void **)(a1 + 32);
    id v7 = +[NSNumber numberWithUnsignedLongLong:v5];
    uint64_t v8 = [v6 objectForKeyedSubscript:v7];

    if (v8) {
      id v5 = [[UGCRefinedReviewedPlace alloc] initWithMapItem:v3 reviewedPlace:v8];
    }
    else {
      id v5 = 0;
    }
  }

  return v5;
}

UIColor *__cdecl sub_1005AA610(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)2) {
    +[UIColor systemWhiteColor];
  }
  else {
  dispatch_time_t v2 = +[UIColor systemBlueColor];
  }

  return (UIColor *)v2;
}

void sub_1005AAD3C(uint64_t a1, void *a2, void *a3)
{
  unint64_t v9 = a2;
  unint64_t v5 = a3;
  if (v9 | v5)
  {
    id v6 = +[UIApplication sharedMapsDelegate];
    id v7 = [*(id *)(a1 + 32) storageID];
    [v6 interruptConvertToNavigableSavedRouteID:v7 routeName:*(void *)(a1 + 40) error:v9 directionsError:v5];
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(void))(v8 + 16))();
  }
}

BOOL sub_1005AADFC(id a1, ChromeContext *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1005AAE48(uint64_t a1)
{
  dispatch_time_t v2 = [*(id *)(a1 + 32) actionCoordinator];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  unint64_t v5 = objc_opt_new();
  [v5 setRouteData:*(void *)(*(void *)(a1 + 40) + 32)];
  id v6 = objc_opt_new();
  id v7 = +[SearchResult currentLocationSearchResult];
  [v6 setSearchResult:v7];

  uint64_t v8 = objc_opt_new();
  [v8 setSearchResult:v5];
  id v9 = objc_alloc_init((Class)NSMutableDictionary);
  [v9 setObject:&off_1013A79D8 forKeyedSubscript:@"DirectionsSessionInitiatorKey"];
  [v9 setObject:&off_1013A79F0 forKeyedSubscript:@"DirectionsRoutePlanningSessionSourceKey"];
  unsigned int v10 = [*(id *)(a1 + 40) historyUUID];
  [v9 setObject:v10 forKeyedSubscript:@"DirectionsRouteUUIDKey"];

  id v11 = [DirectionItem alloc];
  v15[0] = v6;
  v15[1] = v8;
  id v12 = +[NSArray arrayWithObjects:v15 count:2];
  id v13 = [(DirectionItem *)v11 initWithItems:v12 transportType:0];

  [v4 viewController:*(void *)(*(void *)(a1 + 40) + 8) doDirectionItem:v13 withUserInfo:v9];
  uint64_t v14 = *(void *)(a1 + 48);
  if (v14) {
    (*(void (**)(void))(v14 + 16))();
  }
}

id sub_1005ABC94(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 80) setAlpha:1.0];
}

void sub_1005ABFB0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_1005ABFDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v9 = WeakRetained;
    dispatch_time_t v2 = [WeakRetained chromeViewController];
    id v3 = [v2 mapView];

    uint64_t v4 = [v9 iosBasedChromeViewController];
    uint64_t v5 = [v4 acquireExploreMapHikingMapToken];
    id v6 = (void *)*((void *)v9 + 7);
    *((void *)v9 + 7) = v5;

    *((_DWORD *)v9 + 12) = [v3 _applicationState];
    [v3 _setApplicationState:1];
    [v9 _resetUserInteractionState];
    [v9 _insertRecenterButton];
    id v7 = [v9 chromeViewController];
    uint64_t v8 = sub_1000BBB44(v7);

    if (v8 == 5)
    {
      [v3 _setScaleVisibility:1];
    }
    else
    {
      [v3 setShowsScale:1];
      [v3 setShowsCompass:1];
      [v3 _compassInsets];
      [v3 _setCompassInsets:0.0];
    }

    id WeakRetained = v9;
  }
}

void sub_1005AC100(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _frameRouteAnimated:*(unsigned __int8 *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

void sub_1005AC154(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v3 = [WeakRetained _analyticsTarget];
    uint64_t v4 = [v5 _analyticsValue];
    +[GEOAPPortal captureUserAction:21 target:v3 value:v4];

    [v5 _frameRouteAnimated:*(unsigned __int8 *)(a1 + 40)];
    id WeakRetained = v5;
  }
}

void sub_1005AC3A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1005AC3D4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    dispatch_time_t v2 = [WeakRetained chromeViewController];
    uint64_t v3 = [v2 mapView];

    [v3 _setApplicationState:*((unsigned int *)v7 + 12)];
    [v7[10] removeFromSuperview];
    [v7[9] removeFromSuperview];
    uint64_t v4 = [v7 chromeViewController];
    uint64_t v5 = sub_1000BBB44(v4);

    if (v5 == 5)
    {
      if (+[MapsSettings alwaysShowScale]) {
        uint64_t v6 = 2;
      }
      else {
        uint64_t v6 = 0;
      }
      [v3 _setScaleVisibility:v6];
    }

    id WeakRetained = v7;
  }
}

void sub_1005AC4B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    dispatch_time_t v2 = (void *)WeakRetained[7];
    WeakRetained[7] = 0;
    uint64_t v3 = WeakRetained;

    id WeakRetained = v3;
  }
}

void sub_1005AC4FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    dispatch_time_t v2 = (void *)WeakRetained[7];
    WeakRetained[7] = 0;
    uint64_t v3 = WeakRetained;

    id WeakRetained = v3;
  }
}

id sub_1005ACD54(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 80) setAlpha:0.0];
}

void sub_1005AD65C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1005AD8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1005ADE10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005ADE28(uint64_t a1, void *a2)
{
}

void sub_1005ADF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005ADF54(uint64_t a1, void *a2)
{
}

id sub_1005AE37C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)MKMapItem);
  uint64_t v5 = [v3 origin];
  uint64_t v6 = [v5 mapItemStorage];
  id v7 = [v4 initWithGeoMapItem:v6 isPlaceHolderPlace:0];

  id v8 = objc_alloc((Class)MKMapItem);
  id v9 = [v3 destination];

  unsigned int v10 = [v9 mapItemStorage];
  id v11 = [v8 initWithGeoMapItem:v10 isPlaceHolderPlace:0];

  id v12 = [[RideBookingRideOptionStateObserverProxy alloc] initWithDelegate:*(void *)(a1 + 32)];
  [(RideBookingRideOptionStateObserverProxy *)v12 updateRideOptionStateForOrigin:v7 destination:v11];
  id v13 = +[Result resultWithValue:v12];

  return v13;
}

void sub_1005AE4A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  dispatch_time_t v2 = [WeakRetained rideOptionStateObserverResult];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1005AE544;
  v3[3] = &unk_1012F0B40;
  void v3[4] = WeakRetained;
  [v2 withValue:v3 orError:&stru_1012F0B60];
}

void sub_1005AE544(uint64_t a1, void *a2)
{
  dispatch_time_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 rideOptionState];
  [v2 rideOptionStateDidChange:v3];
}

void sub_1005AE700(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 RideBookingPlanningSession:*(void *)(a1 + 32) didFinishResolvingWaypointSet:*(void *)(a1 + 40)];
}

void sub_1005AEB38(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  unsigned int v15 = [WeakRetained chromeViewController];
  uint64_t v14 = [v15 mapView];
  id v4 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  uint64_t v5 = [v4 chromeViewController];
  uint64_t v6 = [v5 currentTraits];
  id v7 = +[SearchSession currentSearchSession];
  id v8 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  id v9 = [v8 appCoordinator];
  unsigned int v10 = [v9 platformController];
  id v11 = [v10 directionsDataSource];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1005AECEC;
  v17[3] = &unk_1012F0B88;
  id v12 = *(id *)(a1 + 40);
  id v18 = v3;
  id v19 = v12;
  id v13 = v3;
  +[RAPAppStateFactory createAppStateWithMapView:v14 traits:v6 place:0 searchDataSource:v7 directionsDataSource:v11 completion:v17];
}

uint64_t sub_1005AECEC(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_1005AEE4C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0);
  }
  return result;
}

void sub_1005AEEFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  unsigned int v15 = [WeakRetained chromeViewController];
  id v13 = [v15 mapView];
  id v14 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  id v4 = [v14 chromeViewController];
  uint64_t v5 = [v4 currentTraits];
  uint64_t v6 = +[SearchSession currentSearchSession];
  id v7 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  id v8 = [v7 appCoordinator];
  id v9 = [v8 platformController];
  unsigned int v10 = [v9 directionsDataSource];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1005AF0B8;
  v17[3] = &unk_1012F0B88;
  id v11 = *(id *)(a1 + 40);
  id v18 = v3;
  id v19 = v11;
  id v12 = v3;
  +[RAPAppStateFactory createAppStateWithMapView:v13 traits:v5 place:0 searchDataSource:v6 directionsDataSource:v10 shouldLoadHomeWorkShortcuts:1 completion:v17];
}

uint64_t sub_1005AF0B8(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_1005AF2C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, a2, 0);
  }
  return result;
}

void sub_1005AF4DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = *(void **)(a1 + 32);
  if (v5)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1005AF58C;
    v6[3] = &unk_1012E5F78;
    id v8 = v5;
    id v7 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
  }
}

uint64_t sub_1005AF58C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1005B0ACC(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MSPSharedTripService sharedInstance];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1005B0BA4;
  v8[3] = &unk_1012F0C28;
  uint64_t v5 = (void *)a1[5];
  uint64_t v6 = a1[4];
  uint64_t v11 = a1[6];
  void v8[4] = v6;
  id v9 = v5;
  id v10 = v3;
  id v7 = v3;
  [v4 startSharingWithContact:v7 completion:v8];
}

void sub_1005B0BA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (([v4 code] == (id)7 || objc_msgSend(v4, "code") == (id)9 || objc_msgSend(v4, "code") == (id)8)
    && ([v4 domain],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = [v5 isEqualToString:MSPSharedTripErrorDomain],
        v5,
        v6))
  {
    uint64_t v7 = *(void *)(a1 + 56);
    id v8 = sub_10000AF10();
    id v9 = v8;
    if (v7)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = *(void *)(a1 + 32);
        id v11 = [*(id *)(a1 + 40) count];
        int v17 = 138412546;
        uint64_t v18 = v10;
        __int16 v19 = 2048;
        id v20 = v11;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%@ - will retry automatic sharing with %lu contacts after delay, server does not have navigation state yet", (uint8_t *)&v17, 0x16u);
      }

      [*(id *)(a1 + 32) _scheduleAutomaticSharingRetry:*(void *)(a1 + 56) - 1];
    }
    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v15 = *(void *)(a1 + 32);
        id v16 = [*(id *)(a1 + 40) count];
        int v17 = 138412546;
        uint64_t v18 = v15;
        __int16 v19 = 2048;
        id v20 = v16;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%@ - will not retry automatic sharing with %lu contacts after delay, server does not have navigation state yet but retried too many times", (uint8_t *)&v17, 0x16u);
      }
    }
  }
  else
  {
    +[MapsSharedTripAnalyticsHelper sendSuccessAnalyticFor:*(void *)(a1 + 48)];
    id v12 = sub_10000AF10();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      id v14 = [*(id *)(a1 + 48) stringValue];
      int v17 = 138412803;
      uint64_t v18 = v13;
      __int16 v19 = 2113;
      id v20 = v14;
      __int16 v21 = 2112;
      id v22 = v4;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "%@ - automatic sharing with %{private}@ completed with error: %@", (uint8_t *)&v17, 0x20u);
    }
    [*(id *)(*(void *)(a1 + 32) + 8) removeObject:*(void *)(a1 + 48)];
  }
}

void sub_1005B1DF8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1005B1E14(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained overviewRect];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  double v9 = v8;
  double v11 = v10;

  MKZoomScaleForZoomLevelF();
  double v13 = v12;
  v38.origin.x = v5;
  v38.origin.y = v7;
  v38.size.width = v9;
  v38.size.height = v11;
  CGFloat v14 = CGRectGetWidth(v38) / v13;
  v39.origin.x = v5;
  v39.origin.y = v7;
  v39.size.width = v9;
  v39.size.height = v11;
  CGFloat v15 = CGRectGetHeight(v39) / v13;
  MKMapPoint v16 = MKMapPointForCoordinate(*(CLLocationCoordinate2D *)(*(void *)(a1 + 32) + 88));
  v36.x = v16.x - v14 * 0.5;
  v36.y = v16.y - v15 * 0.5;
  double v17 = v14 + v36.x;
  double v18 = v15 + v36.y;
  CLLocationCoordinate2D v19 = MKCoordinateForMapPoint(v36);
  v37.x = v17;
  v37.y = v18;
  CLLocationCoordinate2D v20 = MKCoordinateForMapPoint(v37);
  uint64_t v21 = *(void *)(a1 + 32);
  double v22 = *(double *)(v21 + 96);
  if (v22 < -180.0
    || v22 > 180.0
    || (double v23 = *(double *)(v21 + 88), v23 < -90.0)
    || v23 > 90.0
    || (double v24 = vabdd_f64(v19.latitude, v20.latitude), v24 > 180.0)
    || (double v25 = vabdd_f64(v19.longitude, v20.longitude), v25 > 360.0))
  {
    *(unsigned char *)(v21 + 56) = 1;
  }
  else
  {
    id v26 = objc_alloc_init((Class)MKMapSnapshotOptions);
    [v26 setRegion:v23, v22, v24, v25];
    id v27 = objc_loadWeakRetained(v2);
    long long v28 = [v27 mapView];
    [v26 setMapType:[v28 mapType]];

    [v26 setSize:v9, v11];
    long long v29 = +[UITraitCollection traitCollectionWithDisplayScale:2.0];
    [v26 setTraitCollection:v29];

    id v30 = [objc_alloc((Class)MKMapSnapshotter) initWithOptions:v26];
    uint64_t v31 = *(void *)(a1 + 32);
    id v32 = *(void **)(v31 + 72);
    *(void *)(v31 + 72) = v30;

    uint64_t v33 = *(void *)(a1 + 32);
    unsigned int v34 = *(void **)(v33 + 72);
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472;
    v35[2] = sub_1005B20C8;
    v35[3] = &unk_1012EE650;
    v35[4] = v33;
    [v34 startWithCompletionHandler:v35];
  }
}

void sub_1005B20C8(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 56) = 1;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 64), a2);
}

void *sub_1005B3760(id val)
{
  objc_initWeak(&location, val);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1005B3814;
  v3[3] = &unk_1012EDE60;
  objc_copyWeak(&v4, &location);
  uint64_t v1 = objc_retainBlock(v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);

  return v1;
}

id sub_1005B3814(uint64_t a1, void *a2, void *a3, void *a4)
{
  double v6 = (id *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  id v11 = [WeakRetained tableView:v9 cellForRowAtIndexPath:v8 itemIdentifier:v7];

  if (!v11) {
    id v11 = [objc_alloc((Class)UITableViewCell) initWithStyle:0 reuseIdentifier:0];
  }

  return v11;
}

void *sub_1005B38D0(id val)
{
  objc_initWeak(&location, val);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1005B3984;
  v3[3] = &unk_1012F0D40;
  objc_copyWeak(&v4, &location);
  uint64_t v1 = objc_retainBlock(v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);

  return v1;
}

id sub_1005B3984(uint64_t a1, void *a2, void *a3, void *a4)
{
  double v6 = (id *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  id v11 = [WeakRetained collectionView:v9 viewForSupplementaryElementOfKind:v8 atIndexPath:v7];

  return v11;
}

void sub_1005B4050(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = [a2 identifierPath];
  if ((unint64_t)[v11 length] >= *(void *)(a1 + 40))
  {
    id v7 = [v11 identifiers];
    id v8 = [v7 objectAtIndexedSubscript:*(void *)(a1 + 40)];

    if (v8
      && ([*(id *)(a1 + 32) objectForKeyedSubscript:v8],
          id v9 = objc_claimAutoreleasedReturnValue(),
          v9,
          !v9))
    {
      double v10 = +[NSNumber numberWithUnsignedInteger:a3];
      [*(id *)(a1 + 32) setObject:v10 forKeyedSubscript:v8];
    }
    else
    {
      *a4 = 1;
    }
  }
  else
  {
    *a4 = 1;
  }
}

id sub_1005B566C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v3 identifierPath];
  if ([v2 containsItem:v4]) {
    CGFloat v5 = v3;
  }
  else {
    CGFloat v5 = 0;
  }
  id v6 = v5;

  return v6;
}

id sub_1005B56D0(id a1, MapsUIDiffableDataSourceOutlineNodeSnapshot *a2, unint64_t a3)
{
  return [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a2 identifierPath];
}

id sub_1005B56D8(id a1, MapsUIDiffableDataSourceOutlineNodeSnapshot *a2, unint64_t a3)
{
  return [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a2 identifierPath];
}

void sub_1005B6008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1005B602C()
{
  if (qword_10160F1D0 != -1) {
    dispatch_once(&qword_10160F1D0, &stru_1012F0F40);
  }
  v0 = (void *)qword_10160F1C8;

  return v0;
}

void sub_1005B6080(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1005B602C();
  id v8 = v7;
  os_signpost_id_t v9 = *(void *)(a1 + 40);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)CGFloat v15 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "ResolvingCollection", "", v15, 2u);
  }

  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (!v6)
    {
      if ([v5 count])
      {
        double v13 = [v5 firstObject];
        [WeakRetained setCuratedCollection:v13];

        [WeakRetained _resolveCollectionDetails];
        id v6 = 0;
        goto LABEL_9;
      }
      CGFloat v14 = GEOErrorDomain();
      id v6 = +[NSError errorWithDomain:v14 code:-6 userInfo:0];
    }
    id v11 = objc_loadWeakRetained(WeakRetained + 3);
    double v12 = [WeakRetained curatedCollection];
    [v11 didFailToResolveCollectionWithError:v6 withFetchedCollection:v12];
  }
LABEL_9:
}

void sub_1005B6758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,char a25)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

void sub_1005B6784(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v12 = a3;
  id v6 = a4;
  id v7 = v6;
  if (v6)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    id v9 = v6;
    id WeakRetained = *(id *)(v8 + 40);
    *(void *)(v8 + 40) = v9;
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v11 = [WeakRetained placeCollectionItems];
    [v11 addObjectsFromArray:v12];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1005B682C(uint64_t a1)
{
  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    uint64_t v2 = sub_1005B602C();
    id v3 = v2;
    os_signpost_id_t v4 = *(void *)(a1 + 48);
    if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
    {
      *(_WORD *)CGFloat v14 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "ResolvingCollectionItems", "", v14, 2u);
    }
  }
  id v5 = [*(id *)(a1 + 32) placeCollectionItems];
  id v6 = [v5 count];

  id v7 = *(id **)(a1 + 32);
  if (v6)
  {
    unsigned int v8 = [v7 shouldResolveAppClips];
    id v9 = *(void **)(a1 + 32);
    if (v8) {
      [v9 _resolveAppClips];
    }
    else {
      [v9 _finishedResolvingItems];
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained(v7 + 3);
    id v11 = *(void **)(a1 + 32);
    uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    double v13 = [v11 curatedCollection];
    [WeakRetained didFailToResolveCollectionWithError:v12 withFetchedCollection:v13];
  }
}

void sub_1005B6B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005B6BB8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = [v5 firstObject];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained setMediaIntegration:v7];
  }
  else
  {
    id v7 = sub_1005B602C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v12 = 138412290;
      id v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "AMS did not return results, ignoring media integration. Error: %@", (uint8_t *)&v12, 0xCu);
    }
  }

  id v9 = sub_1005B602C();
  double v10 = v9;
  os_signpost_id_t v11 = *(void *)(a1 + 48);
  if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    LOWORD(v12) = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v11, "ResolvingMediaLink", "", (uint8_t *)&v12, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1005B6F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1005B6F58(id a1, GEOThirdPartyLink *a2)
{
  return [(GEOThirdPartyLink *)a2 adamID];
}

void sub_1005B6F60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1005B712C;
    v13[3] = &unk_1012F0ED0;
    CGFloat v14 = *(id *)(a1 + 32);
    id v7 = [v5 _maps_compactMap:v13];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained setThirdPartyLinks:v7];

    id v9 = v14;
  }
  else
  {
    id v9 = sub_1005B602C();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v16 = v6;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "AMS did not return results, ignoring third party links. Error: %@", buf, 0xCu);
    }
  }

  double v10 = sub_1005B602C();
  os_signpost_id_t v11 = v10;
  os_signpost_id_t v12 = *(void *)(a1 + 56);
  if (v12 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, v12, "ResolvingThirdPartyMediaLink", "", buf, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

CuratedCollectionResolvedThirdPartyLink *sub_1005B712C(uint64_t a1, void *a2)
{
  id v3 = a2;
  os_signpost_id_t v4 = *(void **)(a1 + 32);
  id v5 = [v3 identifier];
  id v6 = [v4 objectForKeyedSubscript:v5];

  if (v6)
  {
    id v7 = [CuratedCollectionResolvedThirdPartyLink alloc];
    unsigned int v8 = [v6 adamID];
    id v9 = [v3 shortName];
    double v10 = v9;
    if (!v9)
    {
      double v10 = [v3 displayName];
    }
    os_signpost_id_t v11 = [v3 artworkURL];
    os_signpost_id_t v12 = [v6 url];
    id v13 = [(CuratedCollectionResolvedThirdPartyLink *)v7 initWithAdamID:v8 appName:v10 appIconURL:v11 url:v12];

    if (!v9) {
  }
    }
  else
  {
    id v13 = 0;
  }

  return v13;
}

void sub_1005B7528(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  os_signpost_id_t v4 = *(void **)(a1 + 32);
  id v5 = [*(id *)(a1 + 40) placeCollectionItem];
  id v6 = [v5 itemIdentifier];
  [v4 setObject:v3 forKeyedSubscript:v6];

  id v7 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v7);
}

id sub_1005B75B8(uint64_t a1)
{
  uint64_t v2 = sub_1005B602C();
  id v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 48);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)id v9 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "ResolvingAppClips", "", v9, 2u);
  }

  id v5 = [*(id *)(a1 + 40) copy];
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 16);
  *(void *)(v6 + 16) = v5;

  return [*(id *)(a1 + 32) _finishedResolvingItems];
}

void sub_1005B7A44(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CuratedCollectionResolver");
  uint64_t v2 = (void *)qword_10160F1C8;
  qword_10160F1C8 = (uint64_t)v1;
}

id sub_1005B9BE0()
{
  if (qword_10160F1E8 != -1) {
    dispatch_once(&qword_10160F1E8, &stru_1012F0F60);
  }
  v0 = (void *)qword_10160F1E0;

  return v0;
}

void sub_1005BA57C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    uint64_t v3 = *(void *)(a1 + 40);
    os_signpost_id_t v4 = +[MKLocationManager sharedLocationManager];
    id v5 = v4;
    if (v3 == 1) {
      [v4 startLocationUpdateWithObserver:v6];
    }
    else {
      [v4 stopLocationUpdateWithObserver:v6];
    }

    id WeakRetained = v6;
  }
}

void sub_1005BA774(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFVIOSessionDistanceMonitor");
  uint64_t v2 = (void *)qword_10160F1E0;
  qword_10160F1E0 = (uint64_t)v1;
}

void sub_1005BB4B4(uint64_t a1, void *a2)
{
  if ([a2 count])
  {
    [*(id *)(*(void *)(a1 + 32) + 168) addObject:&off_1013A7A68];
    id v3 = [*(id *)(a1 + 32) collectionView];
    [v3 reloadData];
  }
}

void sub_1005BCD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location,char a33)
{
  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1005BCD90(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    id v3 = *(void **)(a1 + 32);
    os_signpost_id_t v4 = +[SectionHeaderCollectionReusableView reuseIdentifier];
    uint64_t v5 = [v3 dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:v4 forIndexPath:*(void *)(a1 + 40)];
    uint64_t v6 = *(void *)(*(void *)(a1 + 64) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    unsigned int v8 = +[SectionHeaderCollectionReusableView reuseIdentifier];
    [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setAccessibilityIdentifier:v8];

    id v9 = [*(id *)(a1 + 48) string];
    [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setTitle:v9];

    [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setShowsBottomHairline:0];
    [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setFirstNonEmptySection:*(void *)(a1 + 48) != 0];
    if (*(void *)(a1 + 48))
    {
      unint64_t v10 = *(void *)(a1 + 80) - 2;
      if (v10 <= 2)
      {
        if (*(unsigned char *)(*(void *)(a1 + 56) + *(&off_1012F1020)[v10]))
        {
          os_signpost_id_t v11 = +[NSBundle mainBundle];
          os_signpost_id_t v12 = [v11 localizedStringForKey:@"More [RAP In Review Section]" value:@"localized string not found" table:0];

          id v13 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
          v15[0] = _NSConcreteStackBlock;
          v15[1] = 3221225472;
          void v15[2] = sub_1005BCFA4;
          v15[3] = &unk_1012E69C0;
          uint64_t v14 = *(void *)(a1 + 80);
          v15[4] = WeakRetained;
          v15[5] = v14;
          [v13 setActionTitle:v12 completionHandler:v15];
        }
      }
    }
    [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setNeedsLayout];
    [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) layoutIfNeeded];
  }
}

id sub_1005BCFA4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) seeAllTappedForReportForSection:*(void *)(a1 + 40)];
}

id sub_1005BCFB0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = (objc_class *)objc_opt_class();
  uint64_t v6 = NSStringFromClass(v5);
  id v7 = [v3 dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:v6 forIndexPath:*(void *)(a1 + 40)];

  unsigned int v8 = [[UserProfileSectionFooterViewModel alloc] initWithContentString:v4];
  id v9 = [v4 length];

  if (v9)
  {
    BOOL v10 = 0;
  }
  else
  {
    os_signpost_id_t v11 = (char *)[*(id *)(a1 + 32) numberOfSections];
    BOOL v10 = v11 != (char *)[*(id *)(a1 + 40) section] + 1;
  }
  [(UserProfileSectionFooterViewModel *)v8 setCollapsed:v10];
  if (!*(void *)(a1 + 56))
  {
    [(UserProfileSectionFooterViewModel *)v8 setContainsLink:1];
    [(UserProfileSectionFooterViewModel *)v8 setTarget:*(void *)(a1 + 48)];
    [(UserProfileSectionFooterViewModel *)v8 setAction:"privacyTextTapped"];
  }
  [v7 configureWithViewModel:v8];
  [v7 setNeedsLayout];
  [v7 layoutIfNeeded];

  return v7;
}

id sub_1005BDA10(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  id v3 = [*(id *)(a1 + 32) reportID];
  id v4 = +[NSString stringWithFormat:@"'%@'", v3];
  uint64_t v5 = +[UIImage systemImageNamed:@"doc.on.doc"];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1005BDB74;
  v9[3] = &unk_1012EBC40;
  id v10 = *(id *)(a1 + 32);
  uint64_t v6 = +[UIAction actionWithTitle:v4 image:v5 identifier:0 handler:v9];
  [v2 addObject:v6];

  id v7 = +[UIMenu menuWithChildren:v2];

  return v7;
}

void sub_1005BDB74(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) reportID];
  if ([v2 length])
  {
    os_log_t v1 = +[UIPasteboard generalPasteboard];
    [v1 setString:v2];
  }
}

id sub_1005BE42C()
{
  if (qword_10160F1F8 != -1) {
    dispatch_once(&qword_10160F1F8, &stru_1012F1160);
  }
  v0 = (void *)qword_10160F1F0;

  return v0;
}

NSString *__cdecl sub_1005BE480(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  id v3 = [(GEOComposedRoute *)a2 uniqueRouteID];
  id v4 = [v3 UUIDString];

  return (NSString *)v4;
}

GEOComposedRoute *__cdecl sub_1005BE4D0(id a1, NSArray *a2, GEOComposedRoute *a3)
{
  id v4 = a2;
  uint64_t v5 = sub_1005BE858((uint64_t)v4, v4, a3);
  if (!v5)
  {
    uint64_t v6 = [(NSArray *)v4 sortedArrayUsingComparator:&stru_1012F10F0];
    uint64_t v5 = [v6 firstObject];
  }

  return (GEOComposedRoute *)v5;
}

int64_t sub_1005BE558(id a1, GEOComposedRoute *a2, GEOComposedRoute *a3)
{
  id v4 = a3;
  uint64_t v5 = +[NSNumber numberWithUnsignedInt:[(GEOComposedRoute *)a2 expectedTime]];
  id v6 = [(GEOComposedRoute *)v4 expectedTime];

  id v7 = +[NSNumber numberWithUnsignedInt:v6];
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

void *sub_1005BE5F0(void *a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1005BE6A8;
  void v5[3] = &unk_1012F1140;
  id v6 = a1;
  id v1 = v6;
  id v2 = objc_retainBlock(v5);
  id v3 = objc_retainBlock(v2);

  return v3;
}

id sub_1005BE6A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = sub_1005BE858((uint64_t)v5, v5, a3);
  if (!v6)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1005BE790;
    v9[3] = &unk_1012F1118;
    id v10 = *(id *)(a1 + 32);
    id v7 = [v5 sortedArrayUsingComparator:v9];
    id v6 = [v7 firstObject];
  }

  return v6;
}

id sub_1005BE790(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = [v5 displayETAInfoForRoute:a2];
  id v8 = [v7 displayRemainingMinutesToEndOfRoute];

  id v9 = [*(id *)(a1 + 32) displayETAInfoForRoute:v6];

  id v10 = [v9 displayRemainingMinutesToEndOfRoute];
  os_signpost_id_t v11 = +[NSNumber numberWithUnsignedInteger:v8];
  os_signpost_id_t v12 = +[NSNumber numberWithUnsignedInteger:v10];
  id v13 = [v11 compare:v12];

  return v13;
}

id sub_1005BE858(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  if (v5 && (id v6 = [v4 indexOfObject:v5], v6 != (id)0x7FFFFFFFFFFFFFFFLL))
  {
    id v7 = [v4 objectAtIndexedSubscript:((unint64_t)v6 + 1) % (unint64_t)[v4 count]];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_1005BE8F4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RouteAnnotationsResponder");
  id v2 = (void *)qword_10160F1F0;
  qword_10160F1F0 = (uint64_t)v1;
}

void sub_1005BF200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a9);
  objc_destroyWeak((id *)(v11 - 216));
  _Unwind_Resume(a1);
}

void sub_1005BF230(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _invokeSelectionWithSourceType:1];
    id WeakRetained = v2;
  }
}

void sub_1005BF278(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _invokeSelectionWithSourceType:2];
    id WeakRetained = v2;
  }
}

void sub_1005C14DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 112));
  [WeakRetained popContainee];
}

void sub_1005C1528(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 112));
  [WeakRetained pushContainee];
}

void sub_1005C1574(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 112));
  [WeakRetained popContext];
}

void sub_1005C15C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 112));
  [WeakRetained pushContext];
}

void sub_1005C160C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 112));
  [WeakRetained pushContextWithFloatingControls:0];
}

void sub_1005C165C(id a1, UIButton *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  [(UIButton *)v4 _setContinuousCornerRadius:8.0];
  [(UIButton *)v4 setClipsToBounds:1];
  id v5 = +[UIColor whiteColor];
  [(UIButton *)v4 setBackgroundColor:v5];

  id v6 = [(UIButton *)v4 titleLabel];

  [v6 setNumberOfLines:2];
}

id sub_1005C16F4(uint64_t a1)
{
  id v2 = [objc_alloc((Class)UILabel) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = +[UIColor whiteColor];
  [v2 setTextColor:v3];

  [v2 setTextAlignment:1];
  id v4 = +[UIFont boldSystemFontOfSize:17.0];
  [v2 setFont:v4];

  id v5 = [*(id *)(a1 + 32) title];
  [v2 setText:v5];

  LODWORD(v6) = 1148846080;
  [v2 setContentHuggingPriority:1 forAxis:v6];
  LODWORD(v7) = 1148846080;
  [v2 setContentCompressionResistancePriority:1 forAxis:v7];

  return v2;
}

void sub_1005C1804(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v4 = [a2 heightAnchor];
  id v3 = [v4 constraintGreaterThanOrEqualToConstant:40.0];
  [v2 addObject:v3];
}

void sub_1005C1874(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v4 = [a2 heightAnchor];
  id v3 = [v4 constraintGreaterThanOrEqualToConstant:40.0];
  [v2 addObject:v3];
}

void sub_1005C29B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005C29D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = [WeakRetained presentingViewController];
  [v1 dismissViewControllerAnimated:1 completion:0];
}

void sub_1005C2C18(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addButtonRowWithTitle:@"Refresh Experiments Config" action:&stru_1012F1230];
  id v3 = +[GEOExperimentConfiguration sharedConfiguration];
  id v4 = [v3 _debug_configurationDate];

  if (v4)
  {
    id v5 = objc_alloc_init((Class)NSDateFormatter);
    [v5 setDateStyle:1];
    [v5 setTimeStyle:2];
    double v6 = [v5 stringFromDate:v4];
    double v7 = +[NSString stringWithFormat:@"Last updated: %@", v6];
    [(MapsDebugTableSection *)v8 setFooter:v7];
  }
}

void sub_1005C2D18(id a1)
{
  id v1 = +[GEOExperimentConfiguration sharedConfiguration];
  [v1 _debug_forceUpdate];
}

void sub_1005C2D60(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) _debug_datasetId];
  id v5 = +[NSString stringWithFormat:@"Dataset Id: %@", v4];
  id v6 = [v3 addEmptySectionBannerRowWithTitle:v5];

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1005C2EC4;
  v10[3] = &unk_1012EE360;
  id v11 = *(id *)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1005C2F14;
  v8[3] = &unk_1012E78C8;
  id v9 = *(id *)(a1 + 32);
  id v7 = [v3 addTextFieldRowWithTitle:@"Bucket Id:" placeholderText:0 inputType:1 get:v10 set:v8];
}

id sub_1005C2EC4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _debug_bucketId];
  id v2 = [v1 stringValue];

  return v2;
}

void sub_1005C2F14(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v2 = *(void **)(a1 + 32);
    CFStringRef v7 = @"bucketId";
    id v3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [a2 integerValue]);
    id v8 = v3;
    id v4 = +[NSDictionary dictionaryWithObjects:&v8 forKeys:&v7 count:1];
    [v2 _debug_setBucketIdDictionaryRepresentation:v4];

    id v5 = +[GEOMapService sharedService];
    id v6 = [v5 ticketForDatasetCheckWithTraits:0];

    [v6 submitWithHandler:&stru_1012F1250 networkActivity:&stru_1012F1270];
  }
}

void sub_1005C3028(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addNavigationRowForViewControllerClass:objc_opt_class()];
}

id sub_1005C3080(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1005C3104;
  v6[3] = &unk_1012F12F0;
  void v6[4] = a2;
  int v7 = a3;
  return [v4 addSectionWithTitle:a4 content:v6];
}

id sub_1005C3104(uint64_t a1, void *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1005C31DC;
  void v5[3] = &unk_1012F12B0;
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = *(_DWORD *)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1005C323C;
  v3[3] = &unk_1012F12D0;
  void v3[4] = v6;
  int v4 = v7;
  return [a2 addTextFieldRowWithTitle:0 placeholderText:0 inputType:0 get:v5 set:v3];
}

id sub_1005C31DC(uint64_t a1)
{
  id v2 = +[GEOExperimentConfiguration sharedConfiguration];
  id v3 = [v2 _debug_customQuerySubstringForType:*(void *)(a1 + 32) dispatcherRequestType:*(unsigned int *)(a1 + 40)];

  return v3;
}

void sub_1005C323C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[GEOExperimentConfiguration sharedConfiguration];
  [v4 _debug_setCustomQuerySubstring:v3 forExperimentType:*(void *)(a1 + 32) dispatcherRequestType:*(unsigned int *)(a1 + 40)];
}

void sub_1005C339C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005C33C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1005C347C;
  void v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1005C347C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 11, *(id *)(a1 + 32));
    [v3 rebuildSections];
    id WeakRetained = v3;
  }
}

void sub_1005C3590(uint64_t a1, void *a2)
{
  id v18 = a2;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id obj = *(id *)(a1 + 32);
  id v3 = [obj countByEnumeratingWithState:&v24 objects:v29 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v17 = *(void *)v25;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v25 != v17) {
          objc_enumerationMutation(obj);
        }
        id v6 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        id v7 = [v6 name];
        id v8 = [v6 identifier];
        id v9 = +[NSString stringWithFormat:@"%@ (%@)", v7, v8];

        long long v22 = 0u;
        long long v23 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        id v10 = [v6 branches];
        id v11 = [v10 countByEnumeratingWithState:&v20 objects:v28 count:16];
        if (v11)
        {
          id v12 = v11;
          uint64_t v13 = *(void *)v21;
          while (2)
          {
            for (j = 0; j != v12; j = (char *)j + 1)
            {
              if (*(void *)v21 != v13) {
                objc_enumerationMutation(v10);
              }
              if ([*(id *)(*((void *)&v20 + 1) + 8 * (void)j) isActive])
              {

                +[NSString stringWithFormat:@"🔵 %@", v9];
                id v9 = v10 = v9;
                goto LABEL_16;
              }
            }
            id v12 = [v10 countByEnumeratingWithState:&v20 objects:v28 count:16];
            if (v12) {
              continue;
            }
            break;
          }
        }
LABEL_16:

        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_1005C3824;
        v19[3] = &unk_1012F1368;
        v19[4] = v6;
        id v15 = [v18 addNavigationRowWithTitle:v9 viewControllerContent:v19];
      }
      id v4 = [obj countByEnumeratingWithState:&v24 objects:v29 count:16];
    }
    while (v4);
  }
}

id sub_1005C3824(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1005C38A8;
  v3[3] = &unk_1012EE018;
  void v3[4] = *(void *)(a1 + 32);
  return [a2 addSectionWithTitle:@"Branches" content:v3];
}

void sub_1005C38A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id obj = [*(id *)(a1 + 32) branches];
  id v4 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v17;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        id v9 = [v8 name];
        id v10 = [v8 label];
        id v11 = +[NSString stringWithFormat:@"%@ (%@)", v9, v10];

        if ([v8 isActive])
        {
          uint64_t v12 = +[NSString stringWithFormat:@"🔵 %@", v11];

          id v11 = (void *)v12;
        }
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        void v15[2] = sub_1005C3AA4;
        v15[3] = &unk_1012F1368;
        v15[4] = v8;
        id v13 = [v3 addNavigationRowWithTitle:v11 viewControllerContent:v15];
      }
      id v5 = [obj countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v5);
  }
}

void sub_1005C3AA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1005C3C40;
  v13[3] = &unk_1012EE018;
  void v13[4] = *(void *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:0 content:v13];
  id v5 = +[GEOExperimentConfiguration sharedConfiguration];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1005C3D78;
  v11[3] = &unk_1012F1340;
  v11[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v12 = v6;
  [v5 _debug_forEachExperimentType:v11];

  id v7 = [*(id *)(a1 + 32) clientConfigValues];
  if ([v7 count])
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1005C3E78;
    v9[3] = &unk_1012EE018;
    id v10 = v7;
    id v8 = [v6 addSectionWithTitle:@"Client Keys" content:v9];
  }
}

id sub_1005C3C40(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1005C3D08;
  void v4[3] = &unk_1012E7F80;
  uint64_t v5 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1005C3D10;
  v3[3] = &unk_1012E7D28;
  void v3[4] = v5;
  return [a2 addSwitchRowWithTitle:@"Active" get:v4 set:v3];
}

id sub_1005C3D08(uint64_t a1)
{
  return [*(id *)(a1 + 32) isActive];
}

void sub_1005C3D10(uint64_t a1, int a2)
{
  id v4 = +[GEOExperimentConfiguration sharedConfiguration];
  if (a2) {
    uint64_t v5 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = v4;
  [v4 _debug_setActiveExperimentBranch:v5];
}

void sub_1005C3D78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  id v8 = [*(id *)(a1 + 32) querySubstringForType:a2 dispatcherRequestType:a3];
  if ([v8 length])
  {
    id v9 = *(void **)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1005C3E50;
    v11[3] = &unk_1012EE018;
    id v12 = v8;
    id v10 = [v9 addSectionWithTitle:v7 content:v11];
  }
}

id sub_1005C3E50(uint64_t a1, void *a2)
{
  return [a2 addEmptySectionBannerRowWithTitle:*(void *)(a1 + 32)];
}

void sub_1005C3E78(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id obj = *(id *)(a1 + 32);
  id v4 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        id v9 = [*(id *)(a1 + 32) objectForKeyedSubscript:v8];
        id v10 = +[NSString stringWithFormat:@"%@ = %@", v8, v9];

        id v11 = [v3 addEmptySectionBannerRowWithTitle:v10];
      }
      id v5 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }
}

void sub_1005C41F0(uint64_t a1, void *a2, unsigned char *a3)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v5 = [a2 values];
  id v6 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v11;
LABEL_3:
    uint64_t v9 = 0;
    while (1)
    {
      if (*(void *)v11 != v8) {
        objc_enumerationMutation(v5);
      }
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      if (*a3) {
        break;
      }
      if (v7 == (id)++v9)
      {
        id v7 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
        if (v7) {
          goto LABEL_3;
        }
        break;
      }
    }
  }
}

void sub_1005C454C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1005C4564(uint64_t a1, void *a2, uint64_t a3)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1005C45DC;
  void v4[3] = &unk_1012F13B8;
  void v4[4] = *(void *)(a1 + 32);
  v4[5] = a3;
  return [a2 enumerateValidComponentValuesOfType:7 usingBlock:v4];
}

void sub_1005C45DC(uint64_t a1, void *a2, BOOL *a3)
{
  uint64_t v5 = [a2 photoAttributionPreferences];
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v8 = *(BOOL **)(a1 + 40);
  *a3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
  *uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_1005C4744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1005C475C(uint64_t a1, void *a2, uint64_t a3)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1005C47D4;
  void v4[3] = &unk_1012F13B8;
  void v4[4] = *(void *)(a1 + 32);
  v4[5] = a3;
  return [a2 enumerateValidComponentValuesOfType:6 usingBlock:v4];
}

void sub_1005C47D4(uint64_t a1, void *a2, BOOL *a3)
{
  uint64_t v5 = [a2 thirdPartyPhotoSharingPreferences];
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v8 = *(BOOL **)(a1 + 40);
  *a3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
  *uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_1005C6EE8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) window];
  [v2 setRootViewController:0];

  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = [*(id *)(a1 + 40) lockScreenWindow];
  [v4 setRootViewController:v3];
}

void sub_1005C7270(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) lockScreenWindow];
  [v2 setRootViewController:0];

  [*(id *)(a1 + 32) setLockScreenWindow:0];
  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = [*(id *)(a1 + 40) window];
  [v4 setRootViewController:v3];
}

void sub_1005C75D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) lockScreenWindow];
  [v2 setRootViewController:v1];
}

NSUUID *__cdecl sub_1005C79A0(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (NSUUID *)[(GEOComposedRoute *)a2 uniqueRouteID];
}

GEOTransitRouteUpdateRequest *__cdecl sub_1005C79A8(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (GEOTransitRouteUpdateRequest *)[(GEOComposedRoute *)a2 transitRouteUpdateRequest];
}

void sub_1005C7B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005C7B4C(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = *(void *)(*(void *)(a1 + 32) + 8) != 0;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    id v2 = [*(id *)(a1 + 40) copy];
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 8);
    *(void *)(v3 + 8) = v2;
  }
}

void sub_1005C7CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005C7CC0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = *(void *)(*(void *)(a1 + 32) + 8) == 0;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v1 = *(void *)(a1 + 32);
    id v2 = *(void **)(v1 + 8);
    *(void *)(v1 + 8) = 0;
  }
}

void sub_1005C7D78(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 40))
  {
    id v2 = sub_1005768D4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
      int v9 = 138412290;
      uint64_t v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Pausing realtime updates in private route updater for routes: %@", (uint8_t *)&v9, 0xCu);
    }

    [*(id *)(*(void *)(a1 + 32) + 40) setActive:0];
  }
  else
  {
    id v4 = +[MNNavigationService sharedService];
    id v5 = [v4 state];

    if (v5 == (id)2)
    {
      uint64_t v6 = sub_1005768D4();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 16);
        int v9 = 138412290;
        uint64_t v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Pausing realtime updates in navd for routes: %@", (uint8_t *)&v9, 0xCu);
      }

      uint64_t v8 = +[MNNavigationService sharedService];
      [v8 pauseRealtimeUpdates];
    }
  }
}

void sub_1005C7F58(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 40))
  {
    id v2 = sub_1005768D4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
      int v9 = 138412290;
      uint64_t v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Resuming realtime updates in private route updater for routes: %@", (uint8_t *)&v9, 0xCu);
    }

    [*(id *)(*(void *)(a1 + 32) + 40) setActive:1];
  }
  else
  {
    id v4 = +[MNNavigationService sharedService];
    id v5 = [v4 state];

    if (v5 == (id)2)
    {
      uint64_t v6 = sub_1005768D4();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 16);
        int v9 = 138412290;
        uint64_t v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Resuming realtime updates in navd for routes: %@", (uint8_t *)&v9, 0xCu);
      }

      uint64_t v8 = +[MNNavigationService sharedService];
      [v8 resumeRealtimeUpdates];
    }
  }
}

void sub_1005C836C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

NSUUID *__cdecl sub_1005C838C(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (NSUUID *)[(GEOComposedRoute *)a2 uniqueRouteID];
}

void sub_1005C8394(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1005C84E0(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 40))
  {
    id v2 = sub_1005768D4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
      int v6 = 138412290;
      uint64_t v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Destroying private route updater to observe navd for routes: %@", (uint8_t *)&v6, 0xCu);
    }

    [*(id *)(*(void *)(a1 + 32) + 40) setActive:0];
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = 0;
  }
}

void sub_1005C863C(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 40))
  {
    id v2 = sub_1005768D4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
      int v9 = 138412290;
      uint64_t v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Creating private route updater for routes: %@", (uint8_t *)&v9, 0xCu);
    }

    id v4 = [objc_alloc((Class)GEOTransitRouteUpdater) initWithDelegate:*(void *)(a1 + 32) andInitialTTL:15.0];
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;

    [*(id *)(*(void *)(a1 + 32) + 40) setRequests:*(void *)(*(void *)(a1 + 32) + 24)];
    uint64_t v7 = *(void *)(a1 + 32);
    if (*(void *)(v7 + 8))
    {
      uint64_t v8 = +[MKApplicationStateMonitor sharedInstance];
      [*(id *)(*(void *)(a1 + 32) + 40) setActive:[v8 isInBackground] ^ 1];
    }
    else
    {
      [*(id *)(v7 + 40) setActive:0];
    }
  }
}

void sub_1005C8B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

id sub_1005C8BA0(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1005C8BCC(uint64_t a1)
{
}

void sub_1005C8BD4(void *a1)
{
  id v2 = [*(id *)(a1[4] + 16) copy];
  uint64_t v3 = *(void *)(a1[5] + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = objc_retainBlock(*(id *)(a1[4] + 8));
  uint64_t v6 = *(void *)(a1[6] + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1005C8FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_1005C901C(void *a1)
{
  id v2 = [*(id *)(a1[4] + 16) copy];
  uint64_t v3 = *(void *)(a1[5] + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = objc_retainBlock(*(id *)(a1[4] + 8));
  uint64_t v6 = *(void *)(a1[6] + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1005C91B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = v7;
  if (v8)
  {
    id v9 = objc_alloc_init((Class)GEORPCorrectedSearch);
    [*(id *)(a1 + 32) applyToCorrectedSearch:v9];
    [v8 setCorrectedSearchTemplate:v9];
    uint64_t v10 = *(void *)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1005C92E0;
    v11[3] = &unk_1012F14F8;
    id v12 = v8;
    id v13 = v6;
    +[RAPAuxiliaryControlsRecorder fetchCurrentlyConnectedControlsRecordingOrigin:v10 completion:v11];
  }
}

void sub_1005C92E0(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = [v5 auxiliaryControls];
  id v4 = [v3 mutableCopy];
  [*(id *)(a1 + 32) setAuxiliaryControls:v4];

  if ([v5 hasOriginatingAuxiliaryControlIndex]) {
    [*(id *)(a1 + 32) setOriginatingAuxiliaryControlIndex:[v5 originatingAuxiliaryControlIndex]];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1005C968C(id a1)
{
  uint64_t v1 = objc_alloc_init(MacPlacePhotoViewerScene);
  id v2 = (void *)qword_10160F210;
  qword_10160F210 = (uint64_t)v1;
}

id sub_1005CA8A0(void *a1)
{
  id v1 = a1;
  id v2 = [objc_alloc((Class)UIView) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = +[UIColor systemBackgroundColor];
  [v2 setBackgroundColor:v3];

  id v4 = [v1 traitCollection];
  +[UISegmentedControl _cornerRadiusForTraitCollection:v4 size:0];
  [v2 _setContinuousCornerRadius:];

  id v5 = +[UIScreen mainScreen];
  [v5 nativeScale];
  double v7 = 1.0 / v6;

  id v8 = [v2 layer];
  [v8 setBorderWidth:v7];

  id v9 = [v2 theme];
  id v10 = [v9 hairlineColor];
  id v11 = [v10 CGColor];
  id v12 = [v2 layer];
  [v12 setBorderColor:v11];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 addSubview:v1];
  long long v26 = [v1 leadingAnchor];
  long long v25 = [v2 leadingAnchor];
  long long v24 = [v26 constraintEqualToAnchor:v25 constant:9.0];
  v27[0] = v24;
  long long v23 = [v1 trailingAnchor];
  id v13 = [v2 trailingAnchor];
  long long v14 = [v23 constraintEqualToAnchor:v13 constant:-9.0];
  v27[1] = v14;
  long long v15 = [v1 topAnchor];
  long long v16 = [v2 topAnchor];
  long long v17 = [v15 constraintEqualToAnchor:v16 constant:9.0];
  v27[2] = v17;
  long long v18 = [v1 bottomAnchor];

  long long v19 = [v2 bottomAnchor];
  long long v20 = [v18 constraintEqualToAnchor:v19 constant:-9.0];
  v27[3] = v20;
  long long v21 = +[NSArray arrayWithObjects:v27 count:4];
  +[NSLayoutConstraint activateConstraints:v21];

  return v2;
}

BOOL sub_1005CC4FC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        id v12 = objc_alloc_init((Class)GEOComposedWaypoint);
        objc_storeStrong((id *)(a1 + 16), v12);
        if (!PBReaderPlaceMark() || (objc_msgSend(v12, "readFrom:", a2, 0, 0) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v13 = PBReaderReadString();
    id v12 = *(id *)(a1 + 8);
    *(void *)(a1 + 8) = v13;
LABEL_23:

    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1005CDBB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1005CDC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1005CE058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005CE070(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1005CE3E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = *(void **)(a1 + 32);
  if (v7)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1005CE4B8;
    block[3] = &unk_1012EF330;
    id v11 = v7;
    id v9 = v5;
    id v10 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_1005CE4B8(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_1005CE4D0(uint64_t a1)
{
  [*(id *)(a1 + 32) _immediatelyUpdateRecording:*(void *)(*(void *)(a1 + 32) + 24) withAuxiliaryControlsRecording:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _optimizeRecordingData];
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void **)(a1 + 48);
  char v4 = [*(id *)(a1 + 32) historyItemIdentifier];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1005CE5C0;
  v7[3] = &unk_1012F1570;
  id v5 = *(id *)(a1 + 56);
  id v8 = v2;
  id v9 = v5;
  id v6 = v2;
  [v3 saveRecording:v6 forHistoryEntryWithStorageIdentifier:v4 completion:v7];
}

uint64_t sub_1005CE5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (a2) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v3 + 16))(v3, 0, a2);
  }
  else {
    return (*(uint64_t (**)(uint64_t, void))(v3 + 16))(v3, *(void *)(a1 + 32));
  }
}

void sub_1005CF0DC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2)
  {
    if (!*(unsigned char *)(a1 + 56))
    {
LABEL_5:
      id v14 = [v2 directionsResponseID];
      char v4 = [*(id *)(*(void *)(a1 + 40) + 24) directionsResponses];
      id v5 = [v4 count];

      if (!v5) {
        goto LABEL_14;
      }
      uint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = [*(id *)(*(void *)(a1 + 40) + 24) directionsResponses];
        id v8 = [v7 objectAtIndexedSubscript:v6];

        id v9 = [v8 directionsResponseID];
        unsigned __int8 v10 = [v9 isEqual:v14];

        if (v10) {
          break;
        }
        if (v5 == (id)++v6) {
          goto LABEL_14;
        }
      }
      if (v6 != 0x7FFFFFFFFFFFFFFFLL)
      {
        [*(id *)(*(void *)(a1 + 40) + 24) setSelectedDirectionsResponseIndex:v6];
        if (*(unsigned char *)(a1 + 56))
        {
          id v12 = [*(id *)(a1 + 32) indexOfSuggestedRoute];
        }
        else
        {
          id v13 = [*(id *)(a1 + 48) indexOfObject:*(void *)(a1 + 32)];
          if (v13 == (id)0x7FFFFFFFFFFFFFFFLL) {
            id v12 = 0;
          }
          else {
            id v12 = v13;
          }
        }
        [*(id *)(*(void *)(a1 + 40) + 24) setSelectedSuggestedRouteIndexInDirectionsResponse:v12];
      }
      else
      {
LABEL_14:
        if (!*(unsigned char *)(a1 + 56))
        {
LABEL_24:

          return;
        }
        [*(id *)(*(void *)(a1 + 40) + 24) setHasSelectedDirectionsResponseIndex:0];
        [*(id *)(*(void *)(a1 + 40) + 24) setHasSelectedSuggestedRouteIndexInDirectionsResponse:0];
      }
      if (*(unsigned char *)(a1 + 56)) {
        [*(id *)(a1 + 40) _updateRideSelectionsWithComposedRoute:*(void *)(a1 + 32)];
      }
      goto LABEL_24;
    }
    uint64_t v3 = [v2 originalSuggestedRoute];

    if (v3)
    {
      id v2 = *(void **)(a1 + 32);
      goto LABEL_5;
    }
  }
  [*(id *)(*(void *)(a1 + 40) + 24) setHasSelectedDirectionsResponseIndex:0];
  id v11 = *(void **)(*(void *)(a1 + 40) + 24);

  [v11 setHasSelectedSuggestedRouteIndexInDirectionsResponse:0];
}

id sub_1005CF3DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateRideSelectionsWithComposedRoute:*(void *)(a1 + 40)];
}

id sub_1005CF73C(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = objc_opt_new();
  [v4 updateFromGEOComposedWaypoint:v3];

  id v5 = [*(id *)(a1 + 32) _userSearchInputForWaypoint:v4];

  return v5;
}

void sub_1005CF7B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  [*(id *)(*(void *)(a1 + 32) + 24) setWaypoints:v2];

  id v6 = objc_alloc_init((Class)GEORPCorrectedSearch);
  [*(id *)(a1 + 48) applyToCorrectedSearch:v6];
  [*(id *)(*(void *)(a1 + 32) + 24) setStartWaypointCorrectedSearchTemplate:v6];
  id v3 = [*(id *)(a1 + 40) firstObject];
  [*(id *)(*(void *)(a1 + 32) + 24) setStartWaypoint:v3];

  id v4 = objc_alloc_init((Class)GEORPCorrectedSearch);
  [*(id *)(a1 + 56) applyToCorrectedSearch:v4];
  [*(id *)(*(void *)(a1 + 32) + 24) setEndWaypointCorrectedSearchTemplate:v4];
  id v5 = [*(id *)(a1 + 40) lastObject];
  [*(id *)(*(void *)(a1 + 32) + 24) setEndWaypoint:v5];
}

void sub_1005CF958(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) addDirectionsRequests:*(void *)(a1 + 40)];
  id v2 = sub_10057670C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    int v4 = 134217984;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "recordNewRequest: %p", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1005CFAA8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) addDirectionsResponses:*(void *)(a1 + 40)];
  *(void *)(*(void *)(a1 + 32) + 32) = [*(id *)(*(void *)(a1 + 32) + 24) directionsResponsesCount];
  id v2 = sub_10057670C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 32);
    int v5 = 134218240;
    uint64_t v6 = v3;
    __int16 v7 = 2048;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "recordNewResponse: %p _numRecordedRoutes: %lu", (uint8_t *)&v5, 0x16u);
  }
}

void sub_1005CFC40(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  uint64_t v3 = [*(id *)(a1 + 40) geoWaypointRoute];
  [v2 addRoute:v3];

  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 32) - 1;
  int v5 = sub_10057670C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = [*(id *)(a1 + 40) uniqueRouteID];
    int v10 = 138412546;
    id v11 = v6;
    __int16 v12 = 2048;
    uint64_t v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Recorded new Route with ID: %@ routeIndex: %lu", (uint8_t *)&v10, 0x16u);
  }
  for (unint64_t i = *(void *)(a1 + 48); ; ++i)
  {
    uint64_t v8 = [*(id *)(a1 + 40) steps];
    id v9 = [v8 count];

    if (i >= (unint64_t)v9) {
      break;
    }
    [*(id *)(a1 + 32) _storeUserPathWithRouteIndex:v4 stepIndex:i];
  }
}

void sub_1005CFDF0(uint64_t a1)
{
  id v2 = objc_alloc_init(RAPDirectionsRecording);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v2;

  *(void *)(*(void *)(a1 + 32) + 32) = [*(id *)(*(void *)(a1 + 32) + 24) directionsResponsesCount];
  int v5 = sub_10057670C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 32);
    int v7 = 134217984;
    uint64_t v8 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "clearAll: num recorded routes = %lu", (uint8_t *)&v7, 0xCu);
  }
}

id sub_1005CFF3C(void *a1)
{
  return [*(id *)(a1[4] + 24) setNavigationSessionID:a1[5], a1[6]];
}

void sub_1005CFFE8(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005D0280(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) routeMatch];
  [*(id *)(a1 + 32) setLastGoodLocation:v2];
}

void *sub_1005D0438(void *result)
{
  uint64_t v1 = *(void *)(result[4] + 32);
  if (v1)
  {
    id v2 = result;
    if (result[5] <= 0x7FFFFFFFFFFFFFFEuLL)
    {
      uint64_t v3 = v1 - 1;
      uint64_t v4 = sub_10057670C();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        uint64_t v5 = v2[5];
        uint64_t v6 = v2[6];
        int v8 = 134218496;
        uint64_t v9 = v3;
        __int16 v10 = 2048;
        uint64_t v11 = v5;
        __int16 v12 = 2048;
        uint64_t v13 = v6;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Route %lu did update step: %lu, segment: %lu", (uint8_t *)&v8, 0x20u);
      }

      unint64_t v7 = 0;
      do
        id result = [(id)v2[4] _replaceUserPathWithRouteIndex:v3 stepIndex:v7++ traversal:1];
      while (v7 <= v2[5]);
    }
  }
  return result;
}

id sub_1005D05B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 32) - 1;
  uint64_t v3 = sub_10057670C();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v5 = 134217984;
    uint64_t v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Will reroute, routeIndex: %lu", (uint8_t *)&v5, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 32), "_replaceUserPathWithRouteIndex:stepIndex:traversal:", v2, objc_msgSend(*(id *)(*(void *)(a1 + 32) + 80), "stepIndex"), 2);
}

void sub_1005D1E9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1005D1EB8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) actionCoordinator];
  [v2 dismissPedestrianARTeachableMomentCardIfNecessary];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _resignTopContextInChromeViewController:*(void *)(a1 + 40)];
}

void sub_1005D26E8(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    uint64_t v4 = [v3 contactForSharingToMessages];
    id v6 = +[ShareItem shareItemWithSearchResult:v3 contact:v4 includePrintActivity:0];

    int v5 = [*(id *)(a1 + 32) actionCoordinator];
    [v5 viewController:0 doShareSheetForShareItem:v6 completion:0];

    [*(id *)(a1 + 32) _addRecentPlaceForSearchResult:v3];
  }
}

void sub_1005D27A4(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v13 = v5;
    uint64_t v14 = v4;
    uint64_t v15 = v2;
    uint64_t v16 = v3;
    unint64_t v7 = +[MKLocationManager sharedLocationManager];
    unsigned int v8 = [v7 isAuthorizedForPreciseLocation];

    if (v8)
    {
      uint64_t v9 = +[MKLocationManager sharedLocationManager];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_1005D28A8;
      v11[3] = &unk_1012F1628;
      id v12 = *(id *)(a1 + 32);
      __int16 v10 = [v9 singleLocationUpdateWithDesiredAccuracy:v11 handler:kCLLocationAccuracyBest];

      [v10 start];
    }
  }
}

void sub_1005D28A8(uint64_t a1)
{
  uint64_t v2 = +[SearchResult currentLocationSearchResult];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1005D2958;
  void v5[3] = &unk_1012F1600;
  id v3 = *(id *)(a1 + 32);
  id v6 = v2;
  id v7 = v3;
  id v4 = v2;
  [v4 tryUpdatingCurrentLocationSearchResultWithCompletion:v5];
}

uint64_t sub_1005D2958(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void, void))(*(void *)(result + 40) + 16))(*(void *)(result + 40), *(void *)(result + 32));
  }
  return result;
}

UIColor *__cdecl sub_1005D431C(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

void sub_1005D474C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005D4768(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  if ([v5 isSelected])
  {
    id v6 = +[NSBundle mainBundle];
    id v7 = [v6 localizedStringForKey:@"[Collection Filter Menu] Selected Filter Title" value:@"localized string not found" table:0];

    unsigned int v8 = [v5 filterTitle];
    uint64_t v9 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v7, v8, *(void *)(a1 + 48));

    id v10 = objc_loadWeakRetained(&location);
    uint64_t v11 = [v10 menuButton];
    [v11 setTitle:v9 forState:0];
  }
  else
  {
    uint64_t v9 = [v5 filterTitle];
  }
  id v12 = [v5 filterTitle];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1005D4988;
  v14[3] = &unk_1012F16D0;
  objc_copyWeak(v15, &location);
  v15[1] = a3;
  uint64_t v13 = +[UIAction actionWithTitle:v9 image:0 identifier:v12 handler:v14];

  [v13 setState:[v5 isSelected]];
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v13];

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
}

void sub_1005D4958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005D4988(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = +[NSIndexPath indexPathForItem:*(void *)(a1 + 40) inSection:0];
  [WeakRetained filterSelectedAtIndexPath:v2];
}

void sub_1005D5388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005D53A4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v9 = [v6 feedbackResult];
    id v10 = [v9 queryResult];

    uint64_t v11 = [v10 feedbackInfos];
    id v12 = [v11 firstObject];

    uint64_t v13 = [v12 feedbackComponents];
    uint64_t v14 = [v13 firstObject];

    uint64_t v15 = [v14 values];
    uint64_t v16 = [v15 firstObject];
    long long v17 = [v16 poiEnrichment];

    long long v18 = [v6 feedbackResult];
    long long v19 = [v18 queryResult];

    long long v20 = [v19 feedbackInfos];
    long long v21 = [v20 firstObject];

    long long v22 = [v21 feedbackId];

    if (v7)
    {
      long long v23 = sub_1005D5768();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        [v7 code];
        long long v24 = GEOStringForError();
        *(_DWORD *)buf = 138412546;
        id v40 = v7;
        __int16 v41 = 2112;
        uint64_t v42 = v24;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "Received error %@ error with reason %@", buf, 0x16u);
      }
      long long v25 = [[UGCSubmissionLookupResult alloc] initWithError:v7];
      if ((id)[(UGCSubmissionLookupResult *)v25 status] == (id)3)
      {
        long long v26 = sub_1005D5768();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
        {
          long long v27 = *(void **)(a1 + 48);
          *(_DWORD *)buf = 134217984;
          id v40 = v27;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "We received a no result error, so delete entry %llu from MapsSync", buf, 0xCu);
        }
      }
      long long v28 = *(void **)(a1 + 32);
      if (!v28) {
        goto LABEL_14;
      }
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1005D57BC;
      block[3] = &unk_1012EF330;
      long long v29 = &v38;
      id v38 = v28;
      id v30 = (id *)&v36;
      long long v25 = v25;
      MKMapPoint v36 = v25;
      id v37 = v7;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
    else
    {
      long long v25 = [[UGCSubmissionLookupResult alloc] initWithSubmissionIdentifier:v22 previousSubmission:v17];
      uint64_t v31 = *(void **)(a1 + 32);
      if (!v31)
      {
LABEL_14:

        goto LABEL_15;
      }
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      v32[2] = sub_1005D57D4;
      v32[3] = &unk_1012E5F78;
      long long v29 = &v34;
      id v34 = v31;
      id v30 = (id *)&v33;
      long long v25 = v25;
      uint64_t v33 = v25;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v32);
    }

    goto LABEL_14;
  }
LABEL_15:
}

id sub_1005D5768()
{
  if (qword_10160F228 != -1) {
    dispatch_once(&qword_10160F228, &stru_1012F1740);
  }
  v0 = (void *)qword_10160F220;

  return v0;
}

uint64_t sub_1005D57BC(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

uint64_t sub_1005D57D4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_1005D5800(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCSubmissionLookupTicket");
  uint64_t v2 = (void *)qword_10160F220;
  qword_10160F220 = (uint64_t)v1;
}

void sub_1005D5A88(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1005D5AA0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v7 = +[NSString stringWithFormat:@" %@>", a2];
  uint64_t v4 = [v3 stringByReplacingOccurrencesOfString:@">" withString:v7];
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1005D5B34(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v7 = +[NSString stringWithFormat:@" %@>", a2];
  uint64_t v4 = [v3 stringByReplacingOccurrencesOfString:@">" withString:v7];
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1005D5DC0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_1005D5DD8(uint64_t a1, void *a2)
{
  id result = [a2 isEqual:*(void *)(*(void *)(a1 + 32) + 16)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_1005D5E14(uint64_t a1, void *a2)
{
  id result = [a2 isEqual:*(void *)(*(void *)(a1 + 32) + 24)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

UIFont *__cdecl sub_1005D5FD0(id a1)
{
  uint64_t v1 = +[MKFontManager sharedManager];
  uint64_t v2 = [v1 subtitleFont];
  id v3 = +[UIFont _maps_cappedFont:v2 withMaxPoint:30.0];

  return (UIFont *)v3;
}

UIFont *__cdecl sub_1005D6050(id a1)
{
  uint64_t v1 = +[MKFontManager sharedManager];
  uint64_t v2 = [v1 largeTitleFont];
  id v3 = +[UIFont _maps_cappedFont:v2 withMaxPoint:40.0];

  return (UIFont *)v3;
}

void sub_1005D830C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(v13);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 112));
  _Unwind_Resume(a1);
}

void sub_1005D8340(uint64_t a1)
{
  uint64_t v2 = sub_1000493C0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Offline Tip Action Button Tapped in Maps Home", buf, 2u);
  }

  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v4 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));

    if (v4)
    {
      id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64));
      id v6 = [*(id *)(a1 + 40) mapRegion];
      id v7 = [*(id *)(a1 + 40) regionName];
      [v5 presentOfflineMapsSelectorFromTipWithRegion:v6 name:v7];

      [WeakRetained[4] dismissedTipWithType:[*(id *)(a1 + 40) suggestionType]];
      [WeakRetained setShowFeature:0];
      [WeakRetained _notifyObservers];
      [WeakRetained updateFeatureEligibility];
      unsigned int v8 = [*(id *)(a1 + 40) suggestionType] - 1;
      if (v8 > 2) {
        CFStringRef v9 = @"unknown";
      }
      else {
        CFStringRef v9 = *(&off_1012F1838 + (int)v8);
      }
      +[GEOAPPortal captureUserAction:371 target:8 value:v9];
    }
    else
    {
      id v10 = sub_1000493C0();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Offline Tip Action Delegate is nil", v11, 2u);
      }
    }
  }
}

void sub_1005D84F4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1000493C0();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = [*(id *)(a1 + 32) tipTitle];
      int v7 = 138412290;
      unsigned int v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Offline Tip \"%@\" Displayed in Maps Home", (uint8_t *)&v7, 0xCu);
    }
    [WeakRetained[4] displayedTipWithType:[*(id *)(a1 + 32) suggestionType]];
    unsigned int v5 = [*(id *)(a1 + 32) suggestionType] - 1;
    if (v5 > 2) {
      CFStringRef v6 = @"unknown";
    }
    else {
      CFStringRef v6 = *(&off_1012F1838 + (int)v5);
    }
    +[GEOAPPortal captureUserAction:392 target:8 value:v6];
  }
}

void sub_1005D8624(uint64_t a1)
{
  uint64_t v2 = sub_1000493C0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) tipTitle];
    int v6 = 138412290;
    int v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Offline Tip \"%@\" Dismissed in Maps Home", (uint8_t *)&v6, 0xCu);
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v5 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[4] dismissedTipWithType:[*(id *)(a1 + 32) suggestionType]];
    [v5 setShowFeature:0];
    [v5 _notifyObservers];
    [v5 updateFeatureEligibility];
  }
}

void sub_1005D872C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained setShowFeature:1];
    [v2 _notifyObservers];
    id WeakRetained = v2;
  }
}

void sub_1005DC6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_1005DC720(id a1, id a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1005DC76C(uint64_t a1, void *a2, unint64_t a3)
{
  id v14 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [*(id *)(a1 + 32) addObject:v14];
  }
  else
  {
    if ([v14 isCurrentLocation])
    {
      id v5 = [objc_alloc((Class)GEOComposedWaypoint) initWithLocation:0 isCurrentLocation:1];
      [*(id *)(a1 + 32) addObject:v5];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    }
    else
    {
      if ((unint64_t)[*(id *)(a1 + 40) count] <= a3)
      {
        id v5 = 0;
      }
      else
      {
        id v5 = [*(id *)(a1 + 40) objectAtIndex:a3];
        if ((MapsFeature_IsEnabled_MapsWally() & 1) == 0)
        {
          int v6 = [[_TtC4Maps16MapsFindMyHandle alloc] initWithIdentifier:v5];
          int v7 = [(MapsFindMyHandle *)v6 prettyName];

          if (v7)
          {
            unsigned int v8 = [(MapsFindMyHandle *)v6 prettyName];
            [v14 setName:v8];
          }
        }
      }
      CFStringRef v9 = [v14 _geoMapItemStorageForPersistence];
      if (v9)
      {
        if (v5 && MapsFeature_IsEnabled_MapsWally())
        {
          id v10 = objc_alloc((Class)GEOLocation);
          [v9 coordinate];
          id v11 = [v10 initWithGEOCoordinate:];
          id v12 = +[NSDate date];
          [v12 timeIntervalSinceReferenceDate];
          [v11 setTimestamp:];

          id v13 = [objc_alloc((Class)GEOComposedWaypoint) initWithLocation:v11 findMyHandleID:v5];
        }
        else
        {
          id v13 = [objc_alloc((Class)GEOComposedWaypoint) initWithMapItem:v9];
        }
        [*(id *)(a1 + 32) addObject:v13];
      }
    }
  }
}

void sub_1005DEFD0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "URLHandlingTask showDirectionsFrom mapItemsRefined error: %@", buf, 0xCu);
    }
    unsigned int v8 = 0;
  }
  else
  {
    if (![v5 count])
    {
      unsigned int v8 = 0;
      goto LABEL_8;
    }
    unsigned int v8 = [v5 firstObject];
    CFStringRef v9 = *(void **)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    id v12 = v8;
    int v7 = +[NSArray arrayWithObjects:&v12 count:1];
    id v11 = objc_alloc_init((Class)NSDictionary);
    [v9 URLHandler:v10 launchIntoSearchWithMapItems:v7 options:v11 context:0];
  }
LABEL_8:
  [*(id *)(a1 + 32) URLHandler:*(void *)(a1 + 40) didFinishAsynchronousHandlingWithError:v6];
}

void sub_1005E113C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005E115C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));

  if (WeakRetained)
  {
    id v6 = objc_loadWeakRetained(v1);
    id v3 = (void *)v6[1];
    v6[1] = 0;

    id v4 = [v6 updateBlock];

    if (v4)
    {
      id v5 = [v6 updateBlock];
      ((void (**)(void, void *))v5)[2](v5, v6);
    }
  }
}

void sub_1005E17BC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [*(id *)(a1 + 32) mapItem];
  unsigned __int8 v4 = [v3 isEqual:v5];

  if ((v4 & 1) == 0)
  {
    [*(id *)(a1 + 32) setMapItem:v5];
    [*(id *)(a1 + 32) markAsUpdated];
  }
}

void sub_1005E1FB8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1005E1FD0(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = [v8 query];
  [*(id *)(a1 + 32) setFirstLine:v3];

  unsigned __int8 v4 = [v8 locationDisplayString];
  if ([v4 length])
  {
    id v5 = [v8 locationDisplayString];
    [*(id *)(a1 + 32) setSecondLine:v5];
  }
  else
  {
    [*(id *)(a1 + 32) setSecondLine:0];
  }

  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  int v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = @"Search";
}

void sub_1005E20A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v14 = 0;
  +[SearchResult newStartWaypointSearchResult:0 endWaypointSearchResult:&v14 forRouteHistoryEntry:v3];
  id v4 = v14;
  [v4 updateModel:*(void *)(a1 + 32)];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = [v3 waypoints];
    id v6 = [v5 count];

    if ((unint64_t)v6 >= 3)
    {
      int v7 = [v3 waypoints];
      id v8 = (char *)[v7 count] - 2;

      CFStringRef v9 = +[NSBundle mainBundle];
      uint64_t v10 = [v9 localizedStringForKey:@"[CarPlay] Recent cell stop count" value:@"localized string not found" table:0];
      id v11 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v10, v8);

      [*(id *)(a1 + 32) setChargerNumberString:v11];
      [*(id *)(a1 + 32) setIsShowingStops:1];
    }
  }
  uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
  id v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = @"Route";
}

void sub_1005E2210(uint64_t a1, void *a2)
{
  id v6 = [a2 geoMapItem];
  id v3 = [objc_alloc((Class)MKMapItem) initWithGeoMapItem:v6 isPlaceHolderPlace:0];
  [v3 updateModel:*(void *)(a1 + 32)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = @"Place";
}

void sub_1005E22A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8);
  id v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = @"Transit Line";
}

void sub_1005E2464(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [*(id *)(a1 + 32) mapItem];
  unsigned __int8 v4 = [v3 isEqual:v5];

  if ((v4 & 1) == 0)
  {
    [*(id *)(a1 + 32) setMapItem:v5];
    [*(id *)(a1 + 32) markAsUpdated];
  }
}

void sub_1005E2690(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [*(id *)(a1 + 32) mapItem];
  unsigned __int8 v4 = [v3 isEqual:v5];

  if ((v4 & 1) == 0)
  {
    [*(id *)(a1 + 32) setMapItem:v5];
    [*(id *)(a1 + 32) markAsUpdated];
  }
}

void sub_1005E2E40(id a1)
{
  id v1 = objc_alloc_init((Class)MKDistanceFormatter);
  id v2 = (void *)qword_10160F230;
  qword_10160F230 = (uint64_t)v1;

  id v3 = (void *)qword_10160F230;

  [v3 setUnitStyle:1];
}

void sub_1005E4C48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005E4C64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _refreshRouteETAIfCalculating];
}

void sub_1005E6700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a70, 8);
  _Block_object_dispose((const void *)(v70 - 232), 8);
  _Block_object_dispose((const void *)(v70 - 200), 8);
  _Block_object_dispose((const void *)(v70 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1005E6748(uint64_t a1, void *a2)
{
  id v7 = a2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 32) handleMapItems:];
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    id v3 = [v7 firstObject];
    unsigned __int8 v4 = [[MapsAnalyticsHelper alloc] initWithMapItem:v3];
    uint64_t v5 = *(void *)(*(void *)(a1 + 64) + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), MKMapItemTypeIdentifier);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_1005E681C(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005E6900;
  block[3] = &unk_1012F1980;
  unsigned __int8 v4 = *(NSObject **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 48);
  void block[4] = *(void *)(a1 + 40);
  id v8 = v3;
  long long v11 = *(_OWORD *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 80);
  id v9 = v5;
  id v10 = *(id *)(a1 + 56);
  id v6 = v3;
  dispatch_group_notify(v4, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1005E6900(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [*(id *)(a1 + 32) handleVCards:*(void *)(a1 + 40)];
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
    {
      uint64_t v2 = [UTTypeVCard identifier];
      uint64_t v3 = *(void *)(*(void *)(a1 + 72) + 8);
      unsigned __int8 v4 = *(void **)(v3 + 40);
      *(void *)(v3 + 40) = v2;
    }
    else
    {
      if (![*(id *)(a1 + 40) count]) {
        goto LABEL_7;
      }
      unsigned __int8 v4 = +[NSBundle mainBundle];
      uint64_t v5 = [v4 localizedStringForKey:@"No address for contact" value:@"localized string not found" table:0];
      uint64_t v6 = *(void *)(*(void *)(a1 + 80) + 8);
      id v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v5;
    }
  }
LABEL_7:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  id v8 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v8);
}

void sub_1005E69EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005E6AD0;
  block[3] = &unk_1012F1980;
  unsigned __int8 v4 = *(NSObject **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 48);
  void block[4] = *(void *)(a1 + 40);
  id v8 = v3;
  long long v11 = *(_OWORD *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 80);
  id v9 = v5;
  id v10 = *(id *)(a1 + 56);
  id v6 = v3;
  dispatch_group_notify(v4, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1005E6AD0(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [*(id *)(a1 + 32) handleCalendarEvents:*(void *)(a1 + 40)];
    uint64_t v2 = *(void **)(a1 + 40);
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
    {
      id v3 = [v2 firstObject];
      unsigned __int8 v4 = v3;
      if (!v3)
      {
LABEL_8:

        goto LABEL_9;
      }
      uint64_t v5 = [v3 typeIdentifier];
      uint64_t v6 = *(void *)(a1 + 72);
    }
    else
    {
      if (![v2 count]) {
        goto LABEL_9;
      }
      unsigned __int8 v4 = +[NSBundle mainBundle];
      uint64_t v5 = [v4 localizedStringForKey:@"No address for event" value:@"localized string not found" table:0];
      uint64_t v6 = *(void *)(a1 + 80);
    }
    uint64_t v7 = *(void *)(v6 + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v5;

    goto LABEL_8;
  }
LABEL_9:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  id v9 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v9);
}

void sub_1005E6BB8(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005E6C9C;
  block[3] = &unk_1012F1980;
  unsigned __int8 v4 = *(NSObject **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 48);
  void block[4] = *(void *)(a1 + 40);
  id v8 = v3;
  long long v11 = *(_OWORD *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 80);
  id v9 = v5;
  id v10 = *(id *)(a1 + 56);
  id v6 = v3;
  dispatch_group_notify(v4, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1005E6C9C(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [*(id *)(a1 + 32) handleURLs:*(void *)(a1 + 40)];
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
    {
      uint64_t v2 = [UTTypeURL identifier];
      uint64_t v3 = *(void *)(*(void *)(a1 + 72) + 8);
      unsigned __int8 v4 = *(void **)(v3 + 40);
      *(void *)(v3 + 40) = v2;
    }
    else
    {
      if (![*(id *)(a1 + 40) count]) {
        goto LABEL_7;
      }
      unsigned __int8 v4 = +[NSBundle mainBundle];
      uint64_t v5 = [v4 localizedStringForKey:@"No address for URL" value:@"localized string not found" table:0];
      uint64_t v6 = *(void *)(*(void *)(a1 + 80) + 8);
      uint64_t v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v5;
    }
  }
LABEL_7:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  id v8 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v8);
}

void sub_1005E6D88(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  long long v7 = *(_OWORD *)(a1 + 48);
  long long v11 = *(_OWORD *)(a1 + 64);
  block[2] = sub_1005E6E58;
  block[3] = &unk_1012F19D0;
  unsigned __int8 v4 = *(NSObject **)(a1 + 32);
  void block[4] = *(void *)(a1 + 40);
  id v9 = v3;
  id v5 = (id)v7;
  long long v10 = v7;
  id v6 = v3;
  dispatch_group_notify(v4, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1005E6E58(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)
    && !*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 32) handleStrings:*(void *)(a1 + 40)];
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
    {
      uint64_t v2 = [UTTypeText identifier];
      uint64_t v3 = *(void *)(*(void *)(a1 + 72) + 8);
      unsigned __int8 v4 = *(void **)(v3 + 40);
      *(void *)(v3 + 40) = v2;
    }
  }
  id v5 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v5);
}

void sub_1005E6EF8(void *a1)
{
  if ([*(id *)(*(void *)(a1[4] + 8) + 40) length])
  {
    uint64_t v2 = +[UIApplication sharedMapsDelegate];
    uint64_t v3 = [v2 appCoordinator];
    unsigned __int8 v4 = [v3 chromeViewController];
    id v5 = [v4 interruptionManager];
    [v5 displayAlertWithTitle:*(void *)(*(void *)(a1[4] + 8) + 40) message:0 postAlertSearchType:0];
  }
  if (!*(unsigned char *)(*(void *)(a1[5] + 8) + 24))
  {
    uint64_t v6 = *(void *)(a1[6] + 8);
    long long v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = @"not handled";
  }
  id v11 = +[MKMapService sharedService];
  uint64_t v8 = a1[7];
  uint64_t v9 = *(void *)(*(void *)(a1[6] + 8) + 40);
  long long v10 = [*(id *)(*(void *)(v8 + 8) + 40) actionDetails];
  [v11 captureUserAction:17006 onTarget:0 eventValue:v9 placeActionDetails:v10];
}

void sub_1005E70C4(id a1)
{
  id v1 = +[MKMapService sharedService];
  [v1 captureUserAction:17005 onTarget:0 eventValue:0 placeActionDetails:0];
}

uint64_t sub_1005E7868(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = [v3 mapKitHandle];
  id v5 = [v4 length];

  if (v5)
  {
    uint64_t v6 = [*(id *)(a1 + 32) delegate];
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = [v3 mapKitHandle];
    uint64_t v9 = [v3 title];
    [v6 mapsDragDestinationHandler:v7 didReceiveMapKitHandle:v8 title:v9];

    uint64_t v10 = 1;
  }
  else
  {
    uint64_t v6 = [v3 value];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v10 = 0;
      goto LABEL_12;
    }
    id v11 = [v3 title];
    id v12 = [v11 length];

    if (!v12)
    {
      uint64_t v10 = 0;
      goto LABEL_13;
    }
    uint64_t v6 = [v3 value];
    double latitude = kCLLocationCoordinate2DInvalid.latitude;
    double longitude = kCLLocationCoordinate2DInvalid.longitude;
    uint64_t v15 = [v6 scheme];
    unsigned int v16 = [v15 isEqualToString:@"geo"];

    if (v16)
    {
      long long v17 = [v6 resourceSpecifier];
      long long v18 = [v17 componentsSeparatedByString:@","];
      if ((unint64_t)[v18 count] >= 2)
      {
        long long v19 = [v18 objectAtIndexedSubscript:0];
        [v19 doubleValue];
        double latitude = v20;

        long long v21 = [v18 objectAtIndexedSubscript:1];
        [v21 doubleValue];
        double longitude = v22;
      }
    }
    long long v23 = *(void **)(a1 + 32);
    uint64_t v8 = [v3 title];
    uint64_t v10 = [v23 _handleString:v8 nearCoordinate:latitude, longitude];
  }

LABEL_12:
LABEL_13:

  return v10;
}

void sub_1005E8CE8(uint64_t a1, void *a2, void *a3)
{
  unsigned __int8 v4 = *(void **)(a1 + 32);
  id v5 = a3;
  [v5 setVisible:[v4 containsIndex:[a2 unsignedIntegerValue]]];
}

void sub_1005E9164(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)MKLocationManager);
  [v2 setEffectiveBundleIdentifier:@"com.apple.Maps"];
  [v2 setDistanceFilter:100.0];
  [v2 setDesiredAccuracy:kCLLocationAccuracyHundredMeters];
  [v2 startLocationUpdateWithObserver:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned __int8 v4 = *(void **)(v3 + 56);
  *(void *)(v3 + 56) = v2;
}

void sub_1005E9C74(id a1, int a2, double a3, int a4, NSArray *a5)
{
  uint64_t v5 = *(void *)&a4;
  uint64_t v7 = *(void *)&a2;
  uint64_t v8 = a5;
  id v10 = +[NSNumber numberWithInt:v7];
  uint64_t v9 = +[NSNumber numberWithDouble:a3 * 1000.0];
  +[GEOAPPortal captureProactiveSuggestionWithListType:v5 interactedItemIndex:v10 duration:v9 proactiveItems:v8];
}

void sub_1005E9FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005E9FD4(uint64_t a1, void *a2)
{
  id v10 = a2;
  if (v10)
  {
    +[GEOPlaceActionDetails actionDetailsWithMapItem:timestamp:resultIndex:](GEOPlaceActionDetails, "actionDetailsWithMapItem:timestamp:resultIndex:", v10, [*(id *)(a1 + 32) row], CFAbsoluteTimeGetCurrent());
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    unsigned __int8 v4 = +[MKMapService sharedService];
    uint64_t v5 = *(unsigned int *)(a1 + 56);
    id v6 = [*(id *)(a1 + 40) delegate];
    if ([v6 conformsToProtocol:&OBJC_PROTOCOL___GEOLogContextDelegate]) {
      id v7 = [v6 currentUITargetForAnalytics];
    }
    else {
      id v7 = 0;
    }

    [v4 captureUserAction:v5 onTarget:v7 eventValue:*(void *)(a1 + 48) placeActionDetails:v3];
  }
  else
  {
    uint64_t v8 = *(unsigned int *)(a1 + 56);
    id v3 = [*(id *)(a1 + 40) delegate];
    if ([v3 conformsToProtocol:&OBJC_PROTOCOL___GEOLogContextDelegate]) {
      id v9 = [v3 currentUITargetForAnalytics];
    }
    else {
      id v9 = 0;
    }

    +[GEOAPPortal captureUserAction:v8 target:v9 value:*(void *)(a1 + 48)];
  }
}

uint64_t sub_1005EA140(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

uint64_t sub_1005EA15C(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 geoMapItem];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v6();
}

id sub_1005EA6B8(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1005EB144(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    objc_opt_class();
    char v5 = objc_opt_isKindOfClass() & 1;
    WeakRetained[8] = isKindOfClass & 1;
    id v6 = *(id *)(a1 + 32);
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v7 = v6;
    }
    else {
      id v7 = 0;
    }
    id v8 = v7;

    [WeakRetained setRoutePlanningSession:v8];
    id v9 = +[VGVirtualGarageService sharedService];
    id v10 = v9;
    if (isKindOfClass) {
      [v9 registerObserver:WeakRetained];
    }
    else {
      [v9 unregisterObserver:WeakRetained];
    }

    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1005EB2DC;
    v11[3] = &unk_1012F1BD0;
    objc_copyWeak(&v12, v2);
    char v13 = isKindOfClass & 1;
    char v14 = v5;
    [WeakRetained _loadGarageWithCompletion:v11];
    objc_destroyWeak(&v12);
  }
}

void sub_1005EB2C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1005EB2DC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    if (*(unsigned char *)(a1 + 40) && ([WeakRetained _checkBatteryStateWithGarage:v5], *(unsigned char *)(a1 + 40))
      || *(unsigned char *)(a1 + 41))
    {
      [v4 _syncSelectedVehicleStateWithGarage:v5];
    }
  }
}

void sub_1005EB560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_1005EB598(uint64_t a1, void *a2)
{
}

void sub_1005EB5AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = [v3 vehicles];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1005EB720;
    v11[3] = &unk_1012F1C18;
    id v12 = *(id *)(a1 + 32);
    id v6 = sub_1000AC254(v5, v11);

    id v7 = [v6 firstObject];
    if ([v7 isPureElectricVehicle])
    {
      id v8 = [v7 manufacturer];
      id v9 = [v7 model];
      [v7 batteryPercentageBasedOfCapacity];
      id v10 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
      +[GEOAPPortal captureEvRoutingVehicleDetailsWithMake:v8 model:v9 towingNotSupported:0 batteryCapacity:v10];
    }
    WeakRetained[10] = 1;
  }
}

id sub_1005EB720(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 identifier];
  id v7 = [v6 isEqualToString:*(void *)(a1 + 32)];

  if (v7) {
    *a4 = 1;
  }
  return v7;
}

void sub_1005EB860(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1005EB884(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      id v10 = sub_1000519B4();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v15 = v6;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to get virtual garage with error: %@", buf, 0xCu);
      }
    }
    else
    {
      id v9 = WeakRetained[2];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_1005EB9E8;
      v11[3] = &unk_1012E5F78;
      char v13 = *(id *)(a1 + 32);
      id v12 = v5;
      dispatch_async(v9, v11);

      id v10 = v13;
    }
  }
}

uint64_t sub_1005EB9E8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1005EBACC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _checkBatteryStateWithGarage:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_1005EBBD8(id a1, VGVehicle *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    id v4 = +[VGVirtualGarageService sharedService];
    id v3 = [(VGVehicle *)v2 identifier];

    [v4 virtualGarageGetLatestStateOfVehicleWithIdentifier:v3 syncAcrossDevices:1 withReply:&stru_1012F1CE8];
  }
}

void sub_1005EBC68(id a1, VGVehicle *a2, NSError *a3)
{
  id v4 = a3;
  id v5 = sub_1000519B4();
  id v6 = v5;
  if (!a2 || v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v4;
      id v7 = "Failed to get state of selected vehicle with error: %@";
      id v8 = v6;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      uint32_t v10 = 12;
      goto LABEL_7;
    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    LOWORD(v11) = 0;
    id v7 = "Successfully saved the state of selected vehicle.";
    id v8 = v6;
    os_log_type_t v9 = OS_LOG_TYPE_INFO;
    uint32_t v10 = 2;
LABEL_7:
    _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, (uint8_t *)&v11, v10);
  }
}

void sub_1005EBD64(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 selectedVehicle];
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_1005ED24C(uint64_t a1, int a2)
{
  if (a2)
  {
    id v2 = [*(id *)(*(void *)(a1 + 32) + 104) _mapLayer];
    [v2 setDisplayRate:0];
  }
}

id sub_1005EDFBC(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (DiagnosticLogSubmissionEnabled())
    {
      id v2 = +[NSFileManager defaultManager];
      unsigned __int8 v3 = [v2 fileExistsAtPath:@"/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/Maps/ARTraces/"];

      if ((v3 & 1) == 0)
      {
        id v4 = +[NSFileManager defaultManager];
        id v16 = 0;
        unsigned int v5 = [v4 createDirectoryAtPath:@"/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/Maps/ARTraces/" withIntermediateDirectories:1 attributes:0 error:&v16];
        id v6 = v16;

        if (!v5) {
          goto LABEL_17;
        }
      }
      id v7 = [v1 lastPathComponent];
      id v8 = [@"/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/Maps/ARTraces/" stringByAppendingPathComponent:v7];

      os_log_type_t v9 = +[NSFileManager defaultManager];
      id v15 = 0;
      unsigned __int8 v10 = [v9 copyItemAtPath:v1 toPath:v8 error:&v15];
      id v11 = v15;

      id v6 = 0;
      if ((v10 & 1) == 0) {
        id v6 = v11;
      }

      goto LABEL_9;
    }
  }
  else
  {
    id v12 = sub_1005762E4();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      long long v18 = "NSError * _Nullable CopyARTraceToCrashReporterDirectory(NSString * _Nonnull __strong)";
      __int16 v19 = 2080;
      double v20 = "PedestrianARTraceHelpers.m";
      __int16 v21 = 1024;
      int v22 = 67;
      __int16 v23 = 2080;
      long long v24 = "ARTracePath != nil";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%s [%s:%d] Invalid parameter not satisfying: %s", buf, 0x26u);
    }

    if (sub_100BB36BC())
    {
      id v8 = sub_1005762E4();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        char v13 = +[NSThread callStackSymbols];
        *(_DWORD *)buf = 138412290;
        long long v18 = v13;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
      id v6 = 0;
LABEL_9:

      goto LABEL_17;
    }
  }
  id v6 = 0;
LABEL_17:

  return v6;
}

RoutePlanningWaypointRequest *RoutePlanningWaypointRequestFromSearchFieldItem(void *a1)
{
  id v2 = a1;
  unsigned __int8 v3 = [v2 routePlanningWaypointRequest];
  id v4 = [v3 waypointRequest];

  if (v4)
  {
    unsigned int v5 = [v2 routePlanningWaypointRequest];
    goto LABEL_138;
  }
  id v6 = v2;
  id v7 = [v6 searchResult];
  if (!v7
    || ([v6 searchResult],
        id v1 = objc_claimAutoreleasedReturnValue(),
        ![v1 isDynamicCurrentLocation]))
  {
    uint64_t v8 = [v6 composedWaypoint];
    if (v8)
    {
      os_log_type_t v9 = (void *)v8;
      unsigned __int8 v10 = [v6 composedWaypoint];
      unsigned int v11 = [v10 isCurrentLocation];

      if (v7)
      {

        if (v11) {
          goto LABEL_13;
        }
      }
      else if (v11)
      {
        goto LABEL_13;
      }
    }
    else if (v7)
    {
    }
    char v13 = [v6 searchResult];
    char v14 = [v13 routeData];

    if (v14)
    {
      id v15 = sub_100576F5C();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138477827;
        uint64_t v144 = (uint64_t)v14;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Using saved route as waypoint: %{private}@", buf, 0xCu);
      }

      id v12 = [[SavedRouteWaypointRequest alloc] initWithSavedRouteData:v14];
      goto LABEL_124;
    }
    id v16 = [v6 composedWaypoint];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      long long v17 = v16;
      long long v18 = sub_100576F5C();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138477827;
        uint64_t v144 = (uint64_t)v17;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Using waypoint-to-route as waypoint: %{private}@", buf, 0xCu);
      }

      __int16 v19 = [SavedRouteWaypointRequest alloc];
      double v20 = [(MapsFindMyHandle *)v17 route];
      __int16 v21 = [(SavedRouteWaypointRequest *)v19 initWithSavedRoute:v20];
LABEL_22:
      id v12 = v21;
LABEL_123:

LABEL_124:
      goto LABEL_125;
    }
    uint64_t v22 = [v6 _maps_findMyHandle];
    if (v22)
    {
      long long v17 = (_TtC4Maps16MapsFindMyHandle *)v22;
      __int16 v23 = sub_100576F5C();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Using MapsFindMyHandle", buf, 2u);
      }

LABEL_27:
      long long v24 = [v6 searchResult];
      long long v25 = [v24 composedWaypoint];
      long long v26 = [v25 location];
      unsigned int v27 = [v26 hasTimestamp];

      if (v27)
      {
        v141 = v16;
        v140 = v17;
        id v28 = objc_alloc((Class)CLLocation);
        v139 = [v6 searchResult];
        v138 = [v139 composedWaypoint];
        v137 = [v138 location];
        v136 = [v137 latLng];
        [v136 lat];
        CLLocationDegrees v30 = v29;
        v135 = [v6 searchResult];
        uint64_t v31 = [v135 composedWaypoint];
        id v32 = [v31 location];
        uint64_t v33 = [v32 latLng];
        [v33 lng];
        CLLocationCoordinate2D v35 = CLLocationCoordinate2DMake(v30, v34);
        MKMapPoint v36 = [v6 searchResult];
        id v37 = [v36 composedWaypoint];
        id v38 = [v37 location];
        [v38 timestamp];
        CGRect v39 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
        double v20 = [v28 initWithCoordinate:v39 altitude:v35.latitude horizontalAccuracy:v35.longitude verticalAccuracy:0.0 timestamp:0.0];

        id v40 = sub_100576F5C();
        if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
        {
          [v20 coordinate];
          uint64_t v42 = v41;
          [v20 coordinate];
          *(_DWORD *)buf = 134283777;
          uint64_t v144 = v42;
          __int16 v145 = 2049;
          v146 = v43;
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_INFO, "Create CLLocation from search result coordinate {%{private}f, %{private}f}", buf, 0x16u);
        }

        long long v17 = v140;
        id v16 = v141;
        char v14 = 0;
      }
      else
      {
        double v20 = 0;
      }
      id v12 = [[_TtC4Maps27FindMyHandleWaypointRequest alloc] initWithHandle:v17 location:v20];
      long long v49 = sub_100576F5C();
      long long v50 = v49;
      if (v12)
      {
        if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          id v51 = "Using find my handle for waypoint request";
LABEL_63:
          _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_INFO, v51, buf, 2u);
          goto LABEL_64;
        }
        goto LABEL_64;
      }
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        uint64_t v144 = (uint64_t)v17;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "Failed to construct a find my handle request for handle: %@", buf, 0xCu);
      }

      goto LABEL_53;
    }
    double v44 = [v6 searchResult];

    if (v44)
    {
      int v45 = [v6 searchResult];
      unsigned int v46 = [v45 locationType];

      double v20 = sub_100576F5C();
      BOOL v47 = os_log_type_enabled(v20, OS_LOG_TYPE_INFO);
      if (v46 != 4)
      {
        if (v47)
        {
          v56 = [v6 searchResult];
          *(_DWORD *)buf = 67109120;
          LODWORD(v144) = [v56 locationType];
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Not using AutoCompletePerson handle because the locationType is wrong: %u", buf, 8u);
        }
        long long v17 = 0;
LABEL_53:

        goto LABEL_54;
      }
      if (!v47)
      {
LABEL_45:

        v52 = [v6 _maps_autoCompletePerson];
        id v53 = [v52 handle];
        char v54 = [v53 handle];

        if (v54)
        {
          v55 = sub_100576F5C();
          if (os_log_type_enabled(v55, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_INFO, "Create MapsFindMyHandle from search handle", buf, 2u);
          }

          long long v17 = [[_TtC4Maps16MapsFindMyHandle alloc] initWithSearchFindMyHandle:v54];
          if (v17) {
            goto LABEL_27;
          }
        }
        else
        {
          long long v17 = 0;
        }
LABEL_54:
        __int16 v57 = [v6 _maps_autoCompletePerson];
        __int16 v58 = [v57 contact];

        if (v58)
        {
          uint64_t v59 = [v6 searchResult];
          __int16 v60 = [v59 address];
          if (v60)
          {
            __int16 v61 = [v6 searchResult];
            uint64_t v62 = [v61 address];
          }
          else
          {
            __int16 v61 = [v6 _maps_autoCompletePerson];
            v63 = [v61 contact];
            uint64_t v62 = +[AddressBookAddress singleAddressForContact:v63];
          }
          __int16 v64 = sub_100576F5C();
          double v20 = v62;
          if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            uint64_t v144 = v62;
            _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_INFO, "Found AddressBookAddress: %@", buf, 0xCu);
          }

          v65 = [AddressBookAddressWaypointRequest alloc];
          __int16 v66 = [v6 mapItemIfGeocoded];
          id v12 = [(AddressBookAddressWaypointRequest *)v65 initWithAddress:v62 mapItem:v66];

          v67 = sub_100576F5C();
          long long v50 = v67;
          if (v12)
          {
            if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              id v51 = "Using auto complete person contact for waypoint request";
              goto LABEL_63;
            }
LABEL_64:

            goto LABEL_123;
          }
          if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
          {
            v68 = [v6 _maps_autoCompletePerson];
            *(_DWORD *)buf = 138412546;
            uint64_t v144 = (uint64_t)v68;
            __int16 v145 = 2112;
            v146 = (SavedRouteWaypointRequest *)v20;
            _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "Failed to construct an address book request for autocompletePerson: %@ address: %@", buf, 0x16u);
          }
        }
        v69 = [v6 searchResult];

        if (!v69)
        {
          v80 = [v6 address];

          if (v80)
          {
            v81 = [AddressBookAddressWaypointRequest alloc];
            v82 = [v6 address];
            id v12 = [(AddressBookAddressWaypointRequest *)v81 initWithAddress:v82];

            v83 = sub_100576F5C();
            double v20 = v83;
            if (v12)
            {
              if (os_log_type_enabled(v83, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)buf = 0;
                _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Using search field item address book address for waypoint request", buf, 2u);
              }
              goto LABEL_123;
            }
            if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR))
            {
              v89 = [v6 address];
              *(_DWORD *)buf = 138412290;
              uint64_t v144 = (uint64_t)v89;
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "Failed to construct an address book request for address: %@", buf, 0xCu);
            }
          }
          v90 = [v6 coreRecentContact];

          if (v90)
          {
            v91 = sub_100576F5C();
            if (os_log_type_enabled(v91, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v91, OS_LOG_TYPE_INFO, "Using search field item core recent contact for waypoint request", buf, 2u);
            }

            v92 = [SearchStringWaypointRequest alloc];
            double v20 = [v6 coreRecentContact];
            v93 = [v20 address];
            id v12 = [(SearchStringWaypointRequest *)v92 initWithSearchString:v93 completionItem:0];

            goto LABEL_123;
          }
          v94 = [v6 completion];

          if (v94)
          {
            v142 = v14;
            v95 = [v6 completion];
            uint64_t v96 = [v95 queryLine];

            v97 = [SearchStringWaypointRequest alloc];
            v98 = [v6 completion];
            v99 = [v98 geoCompletionItem];
            v100 = v96;
            id v12 = [(SearchStringWaypointRequest *)v97 initWithSearchString:v96 completionItem:v99];

            v101 = sub_100576F5C();
            v102 = v101;
            if (v12)
            {
              char v14 = v142;
              if (os_log_type_enabled(v101, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)buf = 0;
                _os_log_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_INFO, "Using search field item search string for waypoint request", buf, 2u);
              }

              double v20 = v100;
              goto LABEL_123;
            }
            char v14 = v142;
            if (os_log_type_enabled(v101, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412546;
              uint64_t v144 = (uint64_t)v6;
              __int16 v145 = 2112;
              v146 = (SavedRouteWaypointRequest *)v100;
              _os_log_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_ERROR, "(completion) Failed to construct a request for search field item: %@ string: %@", buf, 0x16u);
            }
          }
          v122 = [v6 composedWaypoint];

          if (v122)
          {
            v123 = sub_100576F5C();
            if (os_log_type_enabled(v123, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v123, OS_LOG_TYPE_INFO, "Using search field composed waypoint for waypoint request", buf, 2u);
            }

            v124 = [GEOComposedWaypointRequest alloc];
            double v20 = [v6 composedWaypoint];
            __int16 v21 = [(GEOComposedWaypointRequest *)v124 initWithComposedWaypoint:v20];
            goto LABEL_22;
          }
          double v20 = [v6 searchString];
          if (v20)
          {
            id v12 = [[SearchStringWaypointRequest alloc] initWithSearchString:v20 completionItem:0];
            v125 = sub_100576F5C();
            long long v50 = v125;
            if (v12)
            {
              if (!os_log_type_enabled(v125, OS_LOG_TYPE_INFO)) {
                goto LABEL_64;
              }
              *(_WORD *)buf = 0;
              id v51 = "Using search field item search string for waypoint request";
              goto LABEL_63;
            }
            if (os_log_type_enabled(v125, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412546;
              uint64_t v144 = (uint64_t)v6;
              __int16 v145 = 2112;
              v146 = (SavedRouteWaypointRequest *)v20;
              _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "(searchString) Failed to construct a request for search field item: %@ string: %@", buf, 0x16u);
            }
          }
          v126 = v14;
          v127 = v20;
          v128 = [v6 externalURLQuery];

          if (!v128) {
            goto LABEL_160;
          }
          v129 = [URLQueryWaypointRequest alloc];
          v130 = [v6 externalURLQuery];
          v131 = [v6 externalQueryName];
          id v12 = [(URLQueryWaypointRequest *)v129 initWithURLQuery:v130 title:v131];

          if (v12)
          {
            v132 = sub_100576F5C();
            if (os_log_type_enabled(v132, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v132, OS_LOG_TYPE_INFO, "Using search field item url query for waypoint request", buf, 2u);
            }
          }
          else
          {
LABEL_160:
            v133 = sub_100576F5C();
            if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR))
            {
              v134 = [v6 searchString];
              *(_DWORD *)buf = 138412290;
              uint64_t v144 = (uint64_t)v134;
              _os_log_impl((void *)&_mh_execute_header, v133, OS_LOG_TYPE_ERROR, "Failed to construct a request for search string: %@", buf, 0xCu);
            }
            +[NSException raise:NSGenericException, @"Failed to construct a WaypointRequest for %@", v6 format];
            id v12 = 0;
          }
          double v20 = v127;
          char v14 = v126;
          goto LABEL_123;
        }
        double v20 = [v6 searchResult];
        if (-[NSObject hasExplicitlyProvidedComposedWaypoint](v20, "hasExplicitlyProvidedComposedWaypoint")&& (-[NSObject composedWaypoint](v20, "composedWaypoint"), uint64_t v70 = objc_claimAutoreleasedReturnValue(), v71 = [v70 needsAdditionalNavData], v70, (v71 & 1) == 0))
        {
          v84 = sub_100576F5C();
          if (os_log_type_enabled(v84, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            v85 = "Using search result explicitly provided waypoint for waypoint request";
            v86 = v84;
            uint32_t v87 = 2;
            goto LABEL_93;
          }
        }
        else
        {
          v72 = [v20 mapItem];

          if (v72)
          {
            v73 = v17;
            v74 = [v20 mapItem];
            if (([v74 _hasCorrectedHomeWorkCoordinate] & 1) != 0
              || [v20 type] == 3
              || [v20 originalType] == 3
              || [v20 type] == 12
              || [v20 originalType] == 12)
            {
              [v20 coordinate];
              if (v76 >= -180.0 && v76 <= 180.0 && v75 >= -90.0 && v75 <= 90.0)
              {
                v77 = [CorrectedLocationMapItemWaypointRequest alloc];
                [v20 coordinate];
                id v12 = -[CorrectedLocationMapItemWaypointRequest initWithCorrectedCoordinate:mapItem:](v77, "initWithCorrectedCoordinate:mapItem:", v74);
                v78 = sub_100576F5C();
                v79 = v78;
                if (v12)
                {
                  if (os_log_type_enabled(v78, OS_LOG_TYPE_INFO))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_INFO, "Using search result corrected location map item for waypoint request", buf, 2u);
                  }
LABEL_121:

                  long long v17 = v73;
                  goto LABEL_122;
                }
                if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_ERROR, "Corrected coordinate for request was invalid, falling back to mapItem", buf, 2u);
                }
              }
            }
            v79 = [v20 address];
            if (v79)
            {
              id v12 = [[AddressBookAddressWaypointRequest alloc] initWithAddress:v79 mapItem:v74];
              v103 = sub_100576F5C();
              v104 = v103;
              if (v12)
              {
                if (os_log_type_enabled(v103, OS_LOG_TYPE_INFO))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_INFO, "Using search result address book address for waypoint request", buf, 2u);
                }

                goto LABEL_121;
              }
              if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138412290;
                uint64_t v144 = (uint64_t)v79;
                _os_log_impl((void *)&_mh_execute_header, v104, OS_LOG_TYPE_ERROR, "Failed to construct an address book request for address: %@", buf, 0xCu);
              }
            }
            v105 = sub_100576F5C();
            if (os_log_type_enabled(v105, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_INFO, "Using search result map item for waypoint request", buf, 2u);
            }

            id v12 = [[MapItemWaypointRequest alloc] initWithMapItem:v74];
            goto LABEL_121;
          }
          v84 = sub_100576F5C();
          if (os_log_type_enabled(v84, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            uint64_t v144 = (uint64_t)v20;
            v85 = "Falling back to composedWaypoint for searchResult: %@";
            v86 = v84;
            uint32_t v87 = 12;
LABEL_93:
            _os_log_impl((void *)&_mh_execute_header, v86, OS_LOG_TYPE_INFO, v85, buf, v87);
          }
        }

        v88 = [GEOComposedWaypointRequest alloc];
        v74 = [v20 composedWaypoint];
        id v12 = [(GEOComposedWaypointRequest *)v88 initWithComposedWaypoint:v74];
LABEL_122:

        goto LABEL_123;
      }
      *(_WORD *)buf = 0;
      long long v48 = "Using AutoCompletePerson handle";
    }
    else
    {
      double v20 = sub_100576F5C();
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
        goto LABEL_45;
      }
      *(_WORD *)buf = 0;
      long long v48 = "No search result; trying AutoCompletePerson handle";
    }
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, v48, buf, 2u);
    goto LABEL_45;
  }

LABEL_13:
  id v12 = objc_alloc_init(CurrentLocationWaypointRequest);
LABEL_125:

  v106 = sub_100576F5C();
  if (os_log_type_enabled(v106, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    uint64_t v144 = (uint64_t)v6;
    __int16 v145 = 2112;
    v146 = v12;
    _os_log_impl((void *)&_mh_execute_header, v106, OS_LOG_TYPE_INFO, "Converted %@\ninto %@", buf, 0x16u);
  }

  v107 = [v6 personalizedDirectionsWaypoint];
  BOOL v108 = 0;
  if (([v6 isFindMyPerson] & 1) == 0 && !v107)
  {
    v109 = [v6 waypoint];
    v110 = [v109 requestSearchString];
    id v111 = [v110 length];

    if (v111)
    {
      BOOL v108 = 1;
    }
    else
    {
      v112 = [v6 externalURLQuery];
      v113 = [v112 query];
      if (v113)
      {

        BOOL v108 = 0;
      }
      else
      {
        v114 = [v6 externalURLQuery];
        BOOL v108 = [v114 muid] != 0;
      }
    }
  }
  v115 = [v6 personalizedAddressName];
  v116 = [v107 responseSearch];
  v117 = v116;
  if (v116)
  {
    id v118 = v116;
  }
  else
  {
    id v118 = [v107 requestSearch];
  }
  v119 = v118;

  v120 = [[WaypointPlaceholder alloc] initWithName:v115 displayableMarker:v119];
  unsigned int v5 = [[RoutePlanningWaypointRequest alloc] initWithWaypointPlaceholder:v120 request:v12 preferredNameSource:v108];

LABEL_138:

  return v5;
}

void sub_1005F297C()
{
}

void sub_1005F309C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    id v7 = a4;
    id v8 = a3;
    id v9 = a2;
    id v12 = [v7 mapSelectionState];
    unsigned __int8 v10 = [v7 searchFieldItem];
    unsigned int v11 = [v7 searchInfo];

    (*(void (**)(uint64_t, id, id, id, void *, void *))(v4 + 16))(v4, v9, v8, v12, v10, v11);
  }
}

id sub_1005F3B50()
{
  if (qword_10160F260 != -1) {
    dispatch_once(&qword_10160F260, &stru_1012F1ED0);
  }
  v0 = (void *)qword_10160F258;

  return v0;
}

void sub_1005F47E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double sub_1005F4804(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, unsigned char *a6)
{
  [*(id *)(a1 + 32) endValidRouteCoordinate];
  if (GEOPolylineCoordinateIsABeforeOrEqualToB())
  {
    [*(id *)(a1 + 40) distanceBetweenRouteCoordinate:a2 andRouteCoordinate:[*(id *)(a1 + 32) endValidRouteCoordinate]];
    a4 = v11 / a3 * a4;
    *a6 = 1;
  }
  uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
  double result = a4 + *(double *)(v12 + 24);
  *(double *)(v12 + 24) = result;
  return result;
}

id sub_1005F498C(uint64_t a1, void *a2)
{
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1005F4A78;
  v9[3] = &unk_1012F1D88;
  uint64_t v4 = *(void **)(a1 + 40);
  void v9[4] = *(void *)(a1 + 32);
  id v10 = v4;
  id v11 = *(id *)(a1 + 48);
  id v5 = a2;
  id v6 = [v5 optionsWithArgumentHandler:v9];
  id v7 = [v5 stringWithOptions:v6];

  return v7;
}

id sub_1005F4A78(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _updateStringArgument:a2 route:*(void *)(a1 + 40) guidanceEvent:*(void *)(a1 + 48)];
}

id sub_1005F4B80(uint64_t a1, void *a2)
{
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472;
  char v14 = sub_1005F4D10;
  id v15 = &unk_1012F1D88;
  uint64_t v4 = *(void **)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 32);
  id v17 = v4;
  id v18 = *(id *)(a1 + 48);
  id v5 = a2;
  id v6 = [v5 optionsWithArgumentHandler:&v12];
  [v6 setShouldUpdateFormatStrings:0, v12, v13, v14, v15, v16];
  id v7 = [v5 composedStringWithOptions:v6];

  NSAttributedStringKey v19 = NSFontAttributeName;
  id v8 = +[UIFont system12];
  double v20 = v8;
  id v9 = +[NSDictionary dictionaryWithObjects:&v20 forKeys:&v19 count:1];

  id v10 = +[NSAttributedString _mapkit_attributedStringForComposedString:v7 defaultAttributes:v9];

  return v10;
}

id sub_1005F4D10(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _updateStringArgument:a2 route:*(void *)(a1 + 40) guidanceEvent:*(void *)(a1 + 48)];
}

id sub_1005F4F80(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 directions];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1005F50E0;
  v10[3] = &unk_1012F1E00;
  void v10[4] = *(void *)(a1 + 32);
  id v5 = [v4 _geo_map:v10];

  if (([v3 isPreferredLaneForManeuver] & 1) != 0
    || [v3 isLaneForManeuver])
  {
    id v6 = [v5 firstObject];
    id v7 = [v5 subarrayWithRange:1, [v5 count] - 1];
    id v8 = objc_msgSend(objc_alloc((Class)CPLane), "initWithAngles:highlightedAngle:isPreferred:", v7, v6, objc_msgSend(v3, "isPreferredLaneForManeuver"));
  }
  else
  {
    id v8 = [objc_alloc((Class)CPLane) initWithAngles:v5];
  }

  return v8;
}

id sub_1005F50E0(uint64_t a1, void *a2)
{
  [*(id *)(a1 + 32) _angleForGeoLaneDirection:[a2 direction]];
  double v3 = v2;
  id v4 = objc_alloc((Class)NSMeasurement);
  id v5 = +[NSUnitAngle degrees];
  id v6 = [v4 initWithDoubleValue:v5 unit:v3];

  return v6;
}

void sub_1005F54A8(id a1)
{
  v12[0] = NSLocaleMeasurementSystemUS;
  v10[0] = &off_1013A7C90;
  v10[1] = &off_1013A7D20;
  v11[0] = &off_1013AD950;
  v11[1] = &off_1013AD9B0;
  v10[2] = &off_1013A7CF0;
  v11[2] = &off_1013ADA10;
  id v1 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:3];
  v13[0] = v1;
  v12[1] = NSLocaleMeasurementSystemMetric;
  v8[0] = &off_1013A7C90;
  v8[1] = &off_1013A7D20;
  v9[0] = &off_1013ADA70;
  v9[1] = &off_1013ADAD0;
  v8[2] = &off_1013A7CF0;
  v9[2] = &off_1013ADB30;
  double v2 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:3];
  v12[2] = NSLocaleMeasurementSystemUK;
  v13[1] = v2;
  v6[0] = &off_1013A7C90;
  v6[1] = &off_1013A7D20;
  v7[0] = &off_1013ADB90;
  v7[1] = &off_1013ADBF0;
  v6[2] = &off_1013A7CF0;
  v7[2] = &off_1013ADC50;
  double v3 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:3];
  v13[2] = v3;
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:3];
  id v5 = (void *)qword_10160F248;
  qword_10160F248 = v4;
}

id sub_1005F5BEC(uint64_t a1, void *a2)
{
  double v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 _cpConnectorTypeForConnectorType:[v3 type]];
  id v5 = objc_alloc((Class)CPChargingStationConnector);
  id v6 = [v3 maximumVoltage];
  id v7 = [v3 maximumPower];

  id v8 = [v5 initWithType:v4 voltage:v6 power:v7];

  return v8;
}

NSNumber *__cdecl sub_1005F62F0(id a1, _CarMetadataGuidanceEventPair *a2)
{
  return [(_CarMetadataGuidanceEventPair *)a2 cpIndex];
}

void sub_1005F67A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarMetadataNavigationListener");
  double v2 = (void *)qword_10160F258;
  qword_10160F258 = (uint64_t)v1;
}

double sub_1005F7D78()
{
  v0 = +[CarDisplayController sharedInstance];
  os_log_t v1 = [v0 screenTraitCollection];
  [v1 displayScale];
  double v3 = 1.0 / v2;

  return v3;
}

uint64_t sub_1005F80B0(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

CGFloat sub_1005F854C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v16 = +[CarDisplayController sharedInstance];
  id v17 = [v16 screenTraitCollection];
  id v18 = [v17 layoutDirection];

  if (v18 == (id)1) {
    return sub_10060BD2C(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return a1;
}

NSURL *__cdecl sub_1005F9AA0(id a1, MapsRadarImageAttachment *a2, unint64_t a3)
{
  return (NSURL *)[(MapsRadarImageAttachment *)a2 temporaryFileURL];
}

NSURL *__cdecl sub_1005F9AA8(id a1, MapsRadarAttachment *a2, unint64_t a3)
{
  return [(MapsRadarAttachment *)a2 temporaryFileURL];
}

id sub_1005F9AB0(id a1, MapsRadarKeyword *a2, unint64_t a3)
{
  unint64_t v3 = [(MapsRadarKeyword *)a2 number];

  return +[NSNumber numberWithUnsignedInteger:v3];
}

OverlayContainerDimmingController *sub_1005F9AF4()
{
  v0 = +[NSMapTable strongToStrongObjectsMapTable];
  os_log_t v1 = sub_10001F724(&stru_1012F1FD0);
  [v0 setObject:v1 forKey:objc_opt_class()];
  [v0 setObject:v1 forKey:objc_opt_class()];
  [v0 setObject:v1 forKey:objc_opt_class()];
  [v0 setObject:v1 forKey:objc_opt_class()];
  [v0 setObject:v1 forKey:objc_opt_class()];
  id v2 = sub_1008A2D08();
  [v0 setObject:v2 forKey:objc_opt_class()];

  unint64_t v3 = sub_1008A2D08();
  [v0 setObject:v3 forKey:objc_opt_class()];

  id v4 = [OverlayContainerDimmingController alloc];
  id v5 = sub_10001F724(&stru_1012FF008);
  id v6 = [(OverlayContainerDimmingController *)v4 initWithDimmingBehaviour:v5 customBehaviours:v0];

  return v6;
}

unint64_t sub_1005F9C7C(id a1, OverlayContainerViewController *a2)
{
  return 1;
}

void sub_1005FAFB0(uint64_t a1)
{
  [*(id *)(a1 + 32) updateViewForCurrentState];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];
}

id sub_1005FC0EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) detach];
}

id sub_1005FC4C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 containsString:@"%[origin]"])
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = [v4 localSearchCompletion];
    id v6 = [v5 directionIntent];
    id v7 = [v6 origin];
    id v8 = [*(id *)(a1 + 32) localSearchCompletion];
    id v9 = [v8 directionIntentOrigin];
    id v10 = [v4 _titleOfResolvedItem:v7 withSearchCompletion:v9];

    if (v10)
    {
      uint64_t v11 = [v3 stringByReplacingOccurrencesOfString:@"%[origin]" withString:v10];

      id v3 = (id)v11;
    }
  }
  if ([v3 containsString:@"%[destination]"])
  {
    uint64_t v12 = *(void **)(a1 + 32);
    uint64_t v13 = [v12 localSearchCompletion];
    char v14 = [v13 directionIntent];
    id v15 = [v14 destination];
    uint64_t v16 = [*(id *)(a1 + 32) localSearchCompletion];
    id v17 = [v16 directionIntentDestination];
    id v18 = [v12 _titleOfResolvedItem:v15 withSearchCompletion:v17];

    if (v18)
    {
      uint64_t v19 = [v3 stringByReplacingOccurrencesOfString:@"%[destination]" withString:v18];

      id v3 = (id)v19;
    }
  }

  return v3;
}

void sub_1005FCCF8(id a1)
{
  id v3 = +[NSBundle mainBundle];
  uint64_t v1 = [v3 localizedStringForKey:@" · [List view details separator]" value:@"localized string not found" table:0];
  id v2 = (void *)qword_10160F270;
  qword_10160F270 = v1;
}

void sub_1005FE104(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1005FE120(uint64_t a1, void *a2)
{
  id v3 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1005FE2A4;
  void v8[3] = &unk_1012F2060;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1005FE410;
  void v6[3] = &unk_1012F2088;
  void v6[4] = *(void *)(a1 + 32);
  objc_copyWeak(&v7, (id *)(a1 + 40));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1005FE4C0;
  void v5[3] = &unk_1012E78C8;
  void v5[4] = *(void *)(a1 + 32);
  id v4 = [v3 addCheckmarkRowsGroupWithContent:v8 get:v6 set:v5];
  objc_destroyWeak(&v7);
  objc_destroyWeak(&v9);
}

void sub_1005FE288(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1005FE2A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v4);
  id v6 = [WeakRetained environmentURLs];

  id v7 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v17;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v17 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v16 + 1) + 8 * (void)v10);
        id v12 = objc_loadWeakRetained(v4);
        uint64_t v13 = [v12 environmentURLs];
        char v14 = [v13 objectForKeyedSubscript:v11];
        id v15 = [v3 addRowWithTitle:v11 value:v14];

        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v8);
  }
}

id sub_1005FE410(uint64_t a1)
{
  [*(id *)(a1 + 32) submissionURL];
  uint64_t v2 = GEOGetURL();
  id v3 = [v2 absoluteString];

  [*(id *)(a1 + 32) lookupURL];
  id v4 = GEOGetURL();
  id v5 = [v4 absoluteString];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [WeakRetained selectedEnvironmentURLWithSubmissionURL:v3 lookupURL:v5];

  return v7;
}

void sub_1005FE4C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (v3)
  {
    id v4 = [v3 stringByAppendingString:@"v1/feedback/submission.arpc"];
    id v5 = [v6 stringByAppendingString:@"v1/feedback/layout.arpc"];
    if (v4)
    {
      [*(id *)(a1 + 32) submissionURL];
      GEOURLConfigKey();
      GEOConfigSetString();
    }
    if (v5)
    {
      [*(id *)(a1 + 32) lookupURL];
      GEOURLConfigKey();
      GEOConfigSetString();
    }
  }
  else
  {
    id v4 = 0;
  }
}

void sub_1005FEF10(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10160F280;
  qword_10160F280 = (uint64_t)v1;
}

void sub_1005FF1F4(id a1)
{
  id v4 = +[GEOAPSharedStateData sharedData];
  id v1 = +[MKLocationManager sharedLocationManager];
  uint64_t v2 = [v1 currentLocation];
  id v3 = [v2 latLng];
  [v4 setCurrentMetro:v3];
}

void sub_1005FF33C(id a1)
{
  id v4 = +[GEOAPSharedStateData sharedData];
  id v1 = +[MKLocationManager sharedLocationManager];
  uint64_t v2 = [v1 currentLocation];
  id v3 = [v2 latLng];
  [v4 setCurrentMetro:v3];
}

void sub_1005FF530(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = objc_alloc((Class)GEOLatLng);
    [*(id *)(a1 + 32) coordinate];
    id v5 = [v2 initWithCoordinate:];
  }
  else
  {
    id v5 = 0;
  }
  id v3 = +[GEOAPSharedStateData sharedData];
  id v4 = [*(id *)(a1 + 32) _bestAvailableCountryCode];
  [v3 setMeCardHomeCountry:v4 andHomeLocation:v5];
}

void sub_100600760(uint64_t a1)
{
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  from = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained viewModel];
  id obj = [v2 childViewModels];

  id v3 = [obj countByEnumeratingWithState:&v22 objects:v28 count:16];
  if (v3)
  {
    uint64_t v5 = *(void *)v23;
    *(void *)&long long v4 = 138412290;
    long long v14 = v4;
    do
    {
      for (unint64_t i = 0; i != v3; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v5) {
          objc_enumerationMutation(obj);
        }
        id v7 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        id v8 = [v7 artworkURL:v14];
        BOOL v9 = v8 == 0;

        if (v9)
        {
          id v10 = sub_1006009F8();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          {
            uint64_t v11 = [v7 title];
            *(_DWORD *)buf = v14;
            unsigned int v27 = v11;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "View model for %@ had no artwork URL", buf, 0xCu);
          }
        }
        id v12 = +[MKAppImageManager sharedImageManager];
        uint64_t v13 = [v7 artworkURL];
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472;
        v18[2] = sub_100600A4C;
        v18[3] = &unk_1012F20F0;
        v18[4] = v7;
        objc_copyWeak(&v19, from);
        long long v20 = *(_OWORD *)(a1 + 40);
        uint64_t v21 = *(void *)(a1 + 56);
        [v12 loadAppImageAtURL:v13 completionHandler:v18];

        objc_destroyWeak(&v19);
      }
      id v3 = [obj countByEnumeratingWithState:&v22 objects:v28 count:16];
    }
    while (v3);
  }
}

void sub_1006009DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_1006009F8()
{
  if (qword_10160F298 != -1) {
    dispatch_once(&qword_10160F298, &stru_1012F21A8);
  }
  v0 = (void *)qword_10160F290;

  return v0;
}

void sub_100600A4C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  BOOL v9 = v8;
  if (v7 && v8)
  {
    id v10 = sub_1006009F8();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = [*(id *)(a1 + 32) title];
      id v12 = [*(id *)(a1 + 32) artworkURL];
      *(_DWORD *)buf = 138412546;
      long long v25 = v11;
      __int16 v26 = 2112;
      unsigned int v27 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to fetch app icon for %@ at url %@", buf, 0x16u);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v14 = [objc_alloc((Class)ISImageDescriptor) initWithSize:*(double *)(a1 + 48) scale:*(double *)(a1 + 56)];
    [v14 setShape:1];
    id v15 = [objc_alloc((Class)IFImage) initWithCGImage:[v7 CGImage] scale:*(double *)(a1 + 64)];
    id v16 = objc_alloc((Class)ISIcon);
    id v23 = v15;
    long long v17 = +[NSArray arrayWithObjects:&v23 count:1];
    id v18 = [v16 initWithImages:v17];

    id v19 = [v18 prepareImageForDescriptor:v14];
    long long v20 = +[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", [v19 CGImage]);
    uint64_t v21 = (void *)WeakRetained[13];
    long long v22 = [*(id *)(a1 + 32) identifier];
    [v21 setObject:v20 forKeyedSubscript:v22];
  }
}

void sub_100600E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100600E38(uint64_t a1, void *a2, void *a3, int a4)
{
  id v7 = a2;
  id v8 = a3;
  if (v8)
  {
    BOOL v9 = sub_1006009F8();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v21 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to load integration artwork: %@", buf, 0xCu);
    }
  }
  else
  {
    id v10 = (id *)(a1 + 40);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v12 = [WeakRetained viewModel];
    uint64_t v13 = *(void **)(a1 + 32);

    if (v12 == v13)
    {
      if (a4) {
        double v14 = 0.0;
      }
      else {
        double v14 = 0.300000012;
      }
      id v15 = objc_loadWeakRetained(v10);
      id v16 = [v15 artworkImageView];
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_10060103C;
      v17[3] = &unk_1012E6690;
      objc_copyWeak(&v19, v10);
      id v18 = v7;
      +[UIView transitionWithView:v16 duration:5242882 options:v17 animations:&stru_1012F2138 completion:v14];

      objc_destroyWeak(&v19);
    }
  }
}

void sub_100601020(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10060103C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained artworkImageView];
  [v2 setImage:v1];
}

void sub_10060109C(id a1, BOOL a2)
{
  id v2 = sub_1006009F8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Successfully displayed artwork.", v3, 2u);
  }
}

void sub_100602888(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1006028A4(id *a1, void *a2)
{
  id v6 = a2;
  id v3 = [a1[4] childViewModels];

  if (v3)
  {
    id WeakRetained = objc_loadWeakRetained(a1 + 6);
    if (WeakRetained)
    {
      uint64_t v5 = [a1[5] _allMenuElementsForMediaIntegration:a1[4]];
      v6[2](v6, v5);
    }
  }
  else
  {
    v6[2](v6, &__NSArray0__struct);
  }
}

void sub_100602CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100602CD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained delegate];
    [v3 mediaIntegrationCell:v4 didSelectChildLink:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

id sub_100602DE8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = [v1 viewModel];
  id v3 = [v1 _buildDeferredMenuElementForMediaIntegration:v2];

  if (v3)
  {
    id v7 = v3;
    id v4 = +[NSArray arrayWithObjects:&v7 count:1];
    uint64_t v5 = +[UIMenu menuWithChildren:v4];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void sub_1006035B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CuratedCollectionMediaIntegrationTableViewCell");
  uint64_t v2 = (void *)qword_10160F290;
  qword_10160F290 = (uint64_t)v1;
}

id sub_100603814()
{
  if (qword_10160F2A8 != -1) {
    dispatch_once(&qword_10160F2A8, &stru_1012F2218);
  }
  v0 = (void *)qword_10160F2A0;

  return v0;
}

void sub_100603FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a53, 8);
  _Block_object_dispose(&a57, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose(&a67, 8);
  _Block_object_dispose(&STACK[0x200], 8);
  _Unwind_Resume(a1);
}

void sub_100604084(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v8 = [v7 localizedStandardRangeOfString:*(void *)(a1 + 32)];
  unint64_t v10 = v9;
  if (*(unsigned char *)(a1 + 120)) {
    BOOL v11 = v8 == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11 || (!*(unsigned char *)(a1 + 120) ? (BOOL v12 = v8 == (id)0x7FFFFFFFFFFFFFFFLL) : (BOOL v12 = 1), !v12))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
    *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) += v9;
    [*(id *)(a1 + 40) addObject:v7];
    *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = a3;
    *a4 = 1;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40), *(id *)(a1 + 32));
    id v13 = [v7 length];
    if (v13) {
      *(double *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) = (double)v10 / (double)(unint64_t)v13
    }
                                                                  + *(double *)(*(void *)(*(void *)(a1 + 96) + 8)
                                                                              + 24);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_10060426C;
    v20[3] = &unk_1012F21D0;
    id v21 = v7;
    id v22 = *(id *)(a1 + 48);
    id v23 = *(id *)(a1 + 56);
    double v14 = objc_retainBlock(v20);
    id v15 = v14;
    if (*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40))
    {
      if (*(void *)(*(void *)(*(void *)(a1 + 112) + 8) + 40))
      {
LABEL_16:

        goto LABEL_17;
      }
      uint64_t v16 = ((void (*)(void *))v14[2])(v14);
      uint64_t v17 = *(void *)(a1 + 112);
    }
    else
    {
      uint64_t v16 = ((void (*)(void *))v14[2])(v14);
      uint64_t v17 = *(void *)(a1 + 104);
    }
    uint64_t v18 = *(void *)(v17 + 8);
    id v19 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v16;

    goto LABEL_16;
  }
LABEL_17:
}

_TtC4Maps22AutocompleteQueryToken *sub_10060426C(id *a1)
{
  id v2 = [a1[4] length];
  uint64_t v3 = (uint64_t)[a1[5] rangeOfString:a1[4]];
  if (qword_10160F2B8 != -1) {
    dispatch_once(&qword_10160F2B8, &stru_1012F2238);
  }
  if (v3 == 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v3 = -1;
  }
  id v4 = [(id)qword_10160F2B0 numberFromString:a1[4]];
  uint64_t v5 = -[AutocompleteQueryToken initWithMatchLength:matchPosition:isNumber:matchLocation:]([_TtC4Maps22AutocompleteQueryToken alloc], "initWithMatchLength:matchPosition:isNumber:matchLocation:", v2, v3, v4 != 0, [a1[6] indexOfObject:a1[4]]);

  return v5;
}

void sub_100604664(id a1)
{
  id v5 = objc_alloc_init((Class)NSMutableCharacterSet);
  os_log_t v1 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
  [v5 formUnionWithCharacterSet:v1];

  id v2 = +[NSCharacterSet punctuationCharacterSet];
  [v5 formUnionWithCharacterSet:v2];

  id v3 = [v5 copy];
  id v4 = (void *)qword_10160F2A0;
  qword_10160F2A0 = (uint64_t)v3;
}

void sub_100604708(id a1)
{
  id v1 = objc_alloc_init((Class)NSNumberFormatter);
  id v2 = (void *)qword_10160F2B0;
  qword_10160F2B0 = (uint64_t)v1;

  id v3 = (void *)qword_10160F2B0;

  [v3 setNumberStyle:1];
}

id sub_100606178(uint64_t a1, float a2)
{
  id v4 = objc_opt_new();
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)(*(void *)(a1 + 32) + 16) minimizedValueToTitlePadding];
  [v4 setInterLabelPadding:];
  id v5 = [*(id *)(*(void *)(a1 + 32) + 16) minimizedValueTextColor];
  id v6 = [v4 topLabel];
  [v6 setTextColor:v5];

  id v7 = [v4 topLabel];
  LODWORD(v8) = 1148829696;
  [v7 setContentCompressionResistancePriority:0 forAxis:v8];

  unint64_t v9 = [*(id *)(*(void *)(a1 + 32) + 16) minimizedTitleTextColor];
  unint64_t v10 = [v4 bottomLabel];
  [v10 setTextColor:v9];

  BOOL v11 = [v4 bottomLabel];
  *(float *)&double v12 = a2;
  [v11 setContentCompressionResistancePriority:0 forAxis:v12];

  return v4;
}

id sub_1006064BC(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateLayout];
  [*(id *)(a1 + 32) _updateContentAndReloadStackView:0];
  id v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

void sub_100606504(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) delegate];
  [v1 updatedHeight];
}

id sub_100606708(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateLayout];
}

id sub_100607954()
{
  if (qword_10160F2C8 != -1) {
    dispatch_once(&qword_10160F2C8, &stru_1012F2280);
  }
  v0 = (void *)qword_10160F2C0;

  return v0;
}

void sub_100608B20(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavTrayHeaderView");
  id v2 = (void *)qword_10160F2C0;
  qword_10160F2C0 = (uint64_t)v1;
}

id sub_10060B004()
{
  if (qword_10160F2D8 != -1) {
    dispatch_once(&qword_10160F2D8, &stru_1012F22A0);
  }
  v0 = (void *)qword_10160F2D0;

  return v0;
}

void sub_10060BCE8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ChromeMapSelection");
  id v2 = (void *)qword_10160F2D0;
  qword_10160F2D0 = (uint64_t)v1;
}

CGFloat sub_10060BD2C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double MinX = CGRectGetMinX(*(CGRect *)&a1);
  v19.origin.x = a1;
  v19.origin.y = a2;
  v19.size.width = a3;
  v19.size.height = a4;
  double Width = CGRectGetWidth(v19);
  v20.origin.x = a5;
  v20.origin.y = a6;
  v20.size.width = a7;
  v20.size.height = a8;
  return CGRectGetMaxX(v20) - MinX - Width;
}

void sub_10060D020(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10060D044(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      unint64_t v9 = sub_1000519B4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v13 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to get virtual garage with error: %@", buf, 0xCu);
      }
    }
    else
    {
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_10060D194;
      void v10[3] = &unk_1012E5D58;
      void v10[4] = WeakRetained;
      id v11 = v5;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
    }
  }
}

id sub_10060D194(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 120), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 128), *(id *)(a1 + 40));
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 _refreshSelectedVehicleDisplay];
}

void sub_10060F260(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) collectionView];
  uint64_t v2 = +[NSIndexSet indexSetWithIndex:*(void *)(a1 + 40)];
  [v3 reloadSections:v2];
}

id sub_10060F2D4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isDisplayingSingleTrip];
  if (result)
  {
    id v3 = *(void **)(a1 + 32);
    return [v3 _scrollToCellToShowAtMediumLayoutAnimated:0];
  }
  return result;
}

void sub_10060F5B4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) collectionView];
  [v2 reloadSections:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) collectionView];
  [v3 deleteSections:*(void *)(a1 + 48)];

  id v4 = [*(id *)(a1 + 32) collectionView];
  [v4 insertSections:*(void *)(a1 + 56)];
}

id sub_10060FA08(uint64_t a1)
{
  return [*(id *)(a1 + 32) suspend];
}

void sub_1006101D8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v15 = 0;
    uint64_t v16 = &v15;
    uint64_t v17 = 0x3032000000;
    uint64_t v18 = sub_100103E0C;
    CGRect v19 = sub_100104790;
    id v20 = 0;
    id v5 = [PushNotificationPrompt alloc];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10061034C;
    void v12[3] = &unk_1012ECFC0;
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(a1 + 40);
    double v14 = &v15;
    void v12[4] = v6;
    id v13 = v7;
    double v8 = [(PushNotificationPrompt *)v5 initWithReason:4 authorizationStatus:a3 completion:v12];
    unint64_t v9 = (void *)v16[5];
    v16[5] = (uint64_t)v8;

    [*(id *)(a1 + 32) _maps_topMostPresentViewController:v16[5] animated:1 completion:0];
    _Block_object_dispose(&v15, 8);
  }
  else
  {
    unint64_t v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    [v10 _promptForSimulationAndStartNavigationForRouteCollection:v11];
  }
}

void sub_100610334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10061034C(void *a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1[6] + 8) + 40) presentingViewController];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1006103FC;
  void v4[3] = &unk_1012E5D58;
  id v3 = (void *)a1[5];
  void v4[4] = a1[4];
  id v5 = v3;
  [v2 dismissViewControllerAnimated:1 completion:v4];
}

id sub_1006103FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _promptForSimulationAndStartNavigationForRouteCollection:*(void *)(a1 + 40)];
}

void sub_1006108AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006108D8(uint64_t a1, uint64_t a2, int a3)
{
  if (a3)
  {
    id WeakRetained = sub_1005768D4();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_INFO))
    {
      LOWORD(v8[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_INFO, "Navigation simulation popup was dismissed.", (uint8_t *)v8, 2u);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v6 = *(void *)(a1 + 32);
    long long v7 = *(_OWORD *)(a2 + 16);
    v8[0] = *(_OWORD *)a2;
    v8[1] = v7;
    v8[2] = *(_OWORD *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 48);
    [WeakRetained _startNavigationForRouteCollection:v6 navigationDetailsOptions:v8];
  }
}

void sub_100612168(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100612184(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = [*(id *)(a1 + 32) genericAdvisorys];
    uint64_t v6 = [v5 firstObject];

    if (v6)
    {
      long long v7 = [WeakRetained delegate];
      double v8 = [WeakRetained dataCoordinator];
      uint64_t v9 = [v8 advisoriesInfo];
      [v7 setRoutePlanningAdvisoriesInfo:v9];

      unint64_t v10 = [WeakRetained delegate];
      [v10 setRoutePlanningIncidentsSourceView:v3];

      uint64_t v11 = [WeakRetained delegate];
      [v11 presentRoutePlanningViewType:5];
    }
    else
    {
      uint64_t v11 = sub_1005768D4();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)double v12 = 0;
      }
    }
  }
}

void sub_100612F00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100612F3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = [WeakRetained delegate];
  [v1 presentRoutePlanningViewType:6];
}

void sub_100612F98(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  [v2 openURL:*(void *)(a1 + 32) options:&__NSDictionary0__struct completionHandler:0];
}

void sub_100612FFC(id a1, id a2)
{
  id v2 = +[VGVirtualGarageService sharedService];
  [v2 virtualGarageSelectVehicle:0];
}

void sub_100613048(id a1, id a2)
{
  id v2 = +[VGVirtualGarageService sharedService];
  [v2 virtualGarageSelectVehicle:0];
}

void sub_100613094(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained delegate];
  [v2 viewController:WeakRetained openTransitIncidents:*(void *)(a1 + 32) fromView:0 withUserInfo:0];
}

void sub_100613100(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = [WeakRetained _maps_mapsSceneDelegate];
  id v2 = [v1 appCoordinator];
  id v3 = [v2 baseActionCoordinator];

  [v3 viewControllerShowOfflineMaps:WeakRetained];
}

id sub_100613704()
{
  if (qword_10160F2F8 != -1) {
    dispatch_once(&qword_10160F2F8, &stru_1012F2450);
  }
  v0 = (void *)qword_10160F2F0;

  return v0;
}

void sub_100613984(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardPresentationController];
  [v1 updateHeightForCurrentLayout];
}

id *sub_1006139C8(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] setIsAnimatingHeightForMediumLayout:0];
  }
  return result;
}

void sub_10061460C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v4 = [WeakRetained shouldRefreshRoutePlanningWithCurrentGarage:*(void *)(a1 + 32) previousGarage:WeakRetained[16]];
    objc_storeStrong(v3 + 15, *(id *)(a1 + 32));
    [v3 _refreshSelectedVehicleDisplay];
    if (v4)
    {
      id v5 = sub_1005768D4();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)unint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Garage did change significantly, updating route planning", v10, 2u);
      }

      uint64_t v6 = [v3 dataCoordinator];
      long long v7 = [v6 platformController];
      double v8 = [v7 auxiliaryTasksManager];
      uint64_t v9 = [v8 auxilaryTaskForClass:objc_opt_class()];

      [v9 cancelNavigationAutoLaunchIfNeccessary];
      objc_storeStrong(v3 + 16, *(id *)(a1 + 32));
      [v3 _refreshRoutePlanning];
    }
  }
}

void sub_100615DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100615E10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateTransitionScrollPosition];
}

id sub_100617000(uint64_t a1)
{
  return [*(id *)(a1 + 32) _scrollToCellToShowAtMediumLayoutAnimated:1];
}

void sub_100618128(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showPedestrianARFeatureIntroTeachableMomentCardIfNecessary];
}

void sub_100619880(void *a1, uint64_t a2)
{
  id v2 = (void *)a1[4];
  id v3 = [[RoutePlanningDisplayHintsRefinementModel alloc] initWithDelegate:a1[5] transitPreferences:a1[6] displayHints:a1[7] refinementField:a2];
  [v2 addObject:v3];
}

void sub_100619FE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showPedestrianARFeatureIntroTeachableMomentCardIfNecessary];
}

void sub_10061A11C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showPedestrianARFeatureIntroTeachableMomentCardIfNecessary];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _showPedestrianARRaiseToEnterTeachableMomentCardIfNecessary];
}

void sub_10061B078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10061B09C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v3 = [WeakRetained _shouldShowPedestrianARTeachableMomentCard];

  unsigned int v4 = sub_1005768D4();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
  if (v3)
  {
    if (v5)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Showing feature intro teachable moment card", buf, 2u);
    }

    unsigned int v4 = objc_loadWeakRetained(v1);
    uint64_t v6 = [v4 delegate];
    [v6 showPedestrianARFeatureIntroTeachableMomentCard];
  }
  else if (v5)
  {
    *(_WORD *)long long v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "No longer eligible to show teachable moment card", v7, 2u);
  }
}

void sub_10061C0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10061C13C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v2 = [WeakRetained cardPresentationController];
    unsigned int v3 = (char *)[v2 containeeLayout];

    id WeakRetained = v5;
    if ((unint64_t)(v3 - 1) <= 1)
    {
      unsigned int v4 = [v5 cardPresentationController];
      [v4 updateHeightForCurrentLayout];

      id WeakRetained = v5;
    }
  }
}

void sub_10061C1C4(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained dataCoordinator];
    [v5 updateTiming:v6];
  }
}

void sub_10061C238(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained cardPresentationController];
    [v2 updateHeightForCurrentLayout];

    id WeakRetained = v3;
  }
}

void sub_10061D024(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 dismissRoutePlanningPlaceCardIfNeeded];

  id v3 = [*(id *)(a1 + 32) dataCoordinator];
  [v3 updateCurrentRouteDisplayedMapRect:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
}

void sub_10061E608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10061E648(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _displayRouteOptions];
}

void sub_10061F390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10061F3C8(uint64_t a1, int a2)
{
  uint64_t v2 = a2 ^ 1u;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setRouteSearchSuggestionsTableViewHidden:v2];
}

void sub_10061F418(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained cardPresentationController];
  if ((unint64_t)[v2 containeeLayout] <= 2)
  {
    id v3 = objc_loadWeakRetained(v1);
    unsigned int v4 = [v3 cardPresentationController];
    id v5 = [v4 containeeLayout];

    if ((unint64_t)v5 > 3) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained(v1);
    uint64_t v2 = [WeakRetained cardPresentationController];
    [v2 updateHeightForCurrentLayout];
  }
}

void sub_10061FE24(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningTray");
  uint64_t v2 = (void *)qword_10160F2F0;
  qword_10160F2F0 = (uint64_t)v1;
}

void sub_100620928(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id v6 = v10;
  if (v10)
  {
    int v7 = 0;
  }
  else
  {
    if (!v5) {
      goto LABEL_6;
    }
    int v7 = 1;
    id v6 = v5;
  }
  [v6 timeIntervalSinceReferenceDate];
  char v8 = *(unsigned char *)(a1 + 20);
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 20) = v8 | 6;
  *(_DWORD *)(a1 + 16) = v7;
LABEL_6:
}

void sub_10062106C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) labelViewModel];
  [v2 setString:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) distanceLabel];
  [v3 setNeedsLayout];
}

id sub_100622384()
{
  if (qword_10160F308 != -1) {
    dispatch_once(&qword_10160F308, &stru_1012F25B0);
  }
  v0 = (void *)qword_10160F300;

  return v0;
}

void sub_100622468(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (!v2[145])
  {
    id v3 = [v2 contentView];
    unsigned int v4 = [*(id *)(a1 + 32) loadingView];
    [v3 addSubview:v4];

    long long v25 = [*(id *)(a1 + 32) loadingView];
    id v23 = [v25 topAnchor];
    long long v24 = [*(id *)(a1 + 32) view];
    id v22 = [v24 topAnchor];
    id v21 = [v23 constraintEqualToAnchor:v22];
    v26[0] = v21;
    id v20 = [*(id *)(a1 + 32) loadingView];
    uint64_t v18 = [v20 leadingAnchor];
    CGRect v19 = [*(id *)(a1 + 32) contentView];
    uint64_t v17 = [v19 leadingAnchor];
    uint64_t v16 = [v18 constraintEqualToAnchor:v17];
    v26[1] = v16;
    uint64_t v15 = [*(id *)(a1 + 32) loadingView];
    id v5 = [v15 trailingAnchor];
    id v6 = [*(id *)(a1 + 32) contentView];
    int v7 = [v6 trailingAnchor];
    char v8 = [v5 constraintEqualToAnchor:v7];
    v26[2] = v8;
    uint64_t v9 = [*(id *)(a1 + 32) loadingView];
    id v10 = [v9 bottomAnchor];
    uint64_t v11 = [*(id *)(a1 + 32) contentView];
    double v12 = [v11 bottomAnchor];
    id v13 = [v10 constraintEqualToAnchor:v12];
    v26[3] = v13;
    double v14 = +[NSArray arrayWithObjects:v26 count:4];
    +[NSLayoutConstraint activateConstraints:v14];
  }
}

id sub_100622AA0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateHeaderTransition];
}

void sub_1006233BC(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = sub_10057611C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error saving curated collection to history: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100623B08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v13 - 160));
  _Unwind_Resume(a1);
}

void sub_100623BD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained addToMyGuidesMenuButtonTapped];
}

void sub_100623C10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained headerViewPublisherLogoTapped];
}

void sub_100623C50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained seeAllGuidesMenuButtonTapped];
}

void sub_100623C90(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained websiteMenuButtonTapped];
}

void sub_100623CD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reportAnIssueMenuButtonTapped];
}

id sub_100624B54(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 120) contentInset];
  id v3 = *(void **)(*(void *)(a1 + 32) + 120);

  return [v3 setContentOffset:0.0, -v2];
}

id sub_100624BA8(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) fakeHeaderView];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(a1 + 32) cardHeaderView];
  [v3 setAlpha:1.0];

  int v4 = *(void **)(*(void *)(a1 + 32) + 120);

  return [v4 setAlpha:1.0];
}

void sub_100624F60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = sub_10057611C();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error when refining mapItem prior to adding to Library: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  else
  {
    int v7 = [a2 firstObject];
    if (v7) {
      [*(id *)(a1 + 32) addPlaceToLibraryWithRefinedMapItem:v7];
    }
  }
}

void sub_100625244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100625260(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = sub_10057611C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v23 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error when refining mapItem prior to adding to user collection: %@", buf, 0xCu);
    }
  }
  int v8 = [v5 firstObject];
  if (v8) {
    BOOL v9 = v6 == 0;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9)
  {
    id v10 = [(CollectionEditSession *)[CollectionAddOrRemoveSession alloc] initWithCollection:*(void *)(a1 + 32)];
    [(CollectionEditSession *)v10 setSuppressAnalytics:1];
    [(CollectionEditSession *)v10 addSelectedObject:v8];
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_100625528;
    v19[3] = &unk_1012F0BB0;
    id v20 = *(id *)(a1 + 32);
    id v21 = *(id *)(a1 + 56);
    [(CollectionEditSession *)v10 setResultBlock:v19];
    if (*(void *)(a1 + 32))
    {
      objc_storeStrong((id *)(*(void *)(a1 + 40) + 128), v10);
      uint64_t v11 = [(CollectionEditSession *)v10 collection];
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_10062561C;
      v16[3] = &unk_1012EB690;
      objc_copyWeak(&v18, (id *)(a1 + 64));
      uint64_t v17 = v10;
      [(CollectionAddOrRemoveSession *)v17 applyToCollection:v11 completion:v16];

      objc_destroyWeak(&v18);
    }
    else
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
      uint64_t v13 = WeakRetained;
      if (WeakRetained)
      {
        double v14 = [WeakRetained delegate];
        uint64_t v15 = *(void **)(a1 + 48);
        [v15 bounds];
        [v14 viewController:v13 pickCollectionWithSession:v10 sourceView:v15];
      }
    }
  }
}

void sub_10062550C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100625528(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int v4 = sub_10057611C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = [*(id *)(a1 + 32) identifier];
      int v7 = 138412546;
      int v8 = v5;
      __int16 v9 = 2112;
      id v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error adding place to collection '%@': %@", (uint8_t *)&v7, 0x16u);
    }
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6) {
      (*(void (**)(void))(v6 + 16))();
    }
  }
}

void sub_10062561C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int v4 = sub_1000B944C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error saving collection session: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = WeakRetained;
  if (WeakRetained)
  {
    int v7 = (void *)*((void *)WeakRetained + 16);
    if (v7 == *(void **)(a1 + 32))
    {
      *((void *)WeakRetained + 16) = 0;
    }
  }
}

void sub_100625E30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_100625E6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[145] = 0;
    id v6 = WeakRetained;
    uint64_t v2 = [WeakRetained errorView];
    [v2 removeFromSuperview];

    [v6 _attachLoadingView];
    id v3 = [v6 collectionProvider];
    [v3 refresh];

    int v4 = [v6 errorView];
    [v4 setButtonTitle:0 handler:0];

    id v5 = [v6 analyticsController];
    [v5 logTryAgain];

    id WeakRetained = v6;
  }
}

void sub_100626058(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateHeaderAndTableViewValues];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];
}

void sub_10062631C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = sub_10057611C();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
    if (v5)
    {
      if (v7)
      {
        uint64_t v8 = *(void *)(a1 + 32);
        id v9 = [v5 description];
        int v12 = 138412546;
        uint64_t v13 = v8;
        __int16 v14 = 2112;
        uint64_t v15 = v9;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "AppClip request for URL: %@ failed with error: %@", (uint8_t *)&v12, 0x16u);
      }
    }
    else if (v7)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v12 = 138412290;
      uint64_t v13 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "AppClip request for URL: %@ failed", (uint8_t *)&v12, 0xCu);
    }

    uint64_t v11 = +[MKSystemController sharedInstance];
    [v11 openURL:*(void *)(a1 + 32) completionHandler:0];
  }
}

void sub_100626AF4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CuratedCollectionViewController");
  id v2 = (void *)qword_10160F300;
  qword_10160F300 = (uint64_t)v1;
}

id sub_100628884()
{
  if (qword_10160F318 != -1) {
    dispatch_once(&qword_10160F318, &stru_1012F25D0);
  }
  v0 = (void *)qword_10160F310;

  return v0;
}

void sub_100629C40(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CardFramingTransitionController");
  id v2 = (void *)qword_10160F310;
  qword_10160F310 = (uint64_t)v1;
}

void sub_10062BDC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_10062BE44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _pressedDownload];
}

void sub_10062BE84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _pressedDirections];
}

void sub_10062BEC4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _pressedEdit];
}

void sub_10062BF04(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _pressedDelete];
}

void sub_10062CA38(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if ([*(id *)(*(void *)(a1 + 32) + 104) isEqual:*(void *)(a1 + 40)]) {
    [*(id *)(a1 + 32) _setImageForSnapshot:v4];
  }
}

void sub_10062D040(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  [v5 timeIntervalSinceNow];
  double v7 = v6;
  GEOConfigGetDouble();
  if (v7 >= -v8) {
    [*(id *)(a1 + 32) setObject:v5 forKey:v9];
  }
}

id sub_10062D0D0(uint64_t a1, void *a2)
{
  id v3 = [a2 iOSBundleIdentifier];
  id v4 = [*(id *)(a1 + 32) identifier];
  id v5 = [v3 isEqualToString:v4];

  return v5;
}

id sub_10062D134(id a1, RideBookingApplication *a2, unint64_t a3)
{
  return [(RideBookingApplication *)a2 identifier];
}

void sub_10062D304(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (!WeakRetained)
  {
    GEOFindOrCreateLog();
    double v8 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v18 = "RideBookingDataCoordinator.m";
      __int16 v19 = 1026;
      LODWORD(v20[0]) = 231;
      WORD2(v20[0]) = 2082;
      *(void *)((char *)v20 + 6) = "-[RideBookingDataCoordinator addRideBookingDataCoordinatorRideOptionStateObserver:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    double v7 = v8;
    goto LABEL_18;
  }
  [WeakRetained[8] addObject:*(void *)(a1 + 32)];
  id v4 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
    id v6 = [objc_alloc((Class)NSString) initWithFormat:@"Added RideOption observer: %@", *(void *)(a1 + 32)];
    *(_DWORD *)buf = 136315394;
    id v18 = v5;
    __int16 v19 = 2112;
    v20[0] = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
  }
  if [v3[3] readyToLoadApps] && (objc_opt_respondsToSelector())
  {
    double v7 = [v3[11] copy];
    if (*((unsigned char *)v3 + 8))
    {
      double v8 = 0;
    }
    else
    {
      double v8 = [v3[9] copy];
      if (!*((unsigned char *)v3 + 8))
      {
        id v9 = [v3[10] copy];
        goto LABEL_13;
      }
    }
    id v9 = 0;
LABEL_13:
    uint64_t v10 = +[RideBookingRideOptionState stateWithRideOptionStatusMap:v7 appStoreSuggestions:v8 installedSuggestions:v9];
    uint64_t v11 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v12 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v13 = [objc_alloc((Class)NSString) initWithFormat:@"appStoreSuggestions:%@ installedSuggestions:%@", v8, v9];
      *(_DWORD *)buf = 136315394;
      id v18 = v12;
      __int16 v19 = 2112;
      v20[0] = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    __int16 v14 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      uint64_t v15 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v16 = [objc_alloc((Class)NSString) initWithFormat:@"Notifying observer %@ of ride option state change %@", *(void *)(a1 + 32), v10];
      *(_DWORD *)buf = 136315394;
      id v18 = v15;
      __int16 v19 = 2112;
      v20[0] = v16;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    [*(id *)(a1 + 32) rideOptionStateDidChange:v10];

LABEL_18:
  }
}

void sub_10062D880(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[8] removeObject:*(void *)(a1 + 32)];
    id v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v6 = [objc_alloc((Class)NSString) initWithFormat:@"Removed observer: %@", *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      int v12 = v5;
      __int16 v13 = 2112;
      v14[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    if (![v3[8] count])
    {
      double v7 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        double v8 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v9 = [objc_alloc((Class)NSString) initWithFormat:@"Stopping ride options timer because the observers count is now zero"];
        *(_DWORD *)buf = 136315394;
        int v12 = v8;
        __int16 v13 = 2112;
        v14[0] = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      [v3 _stopRefreshRideOptionsTimer];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v10 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      int v12 = "RideBookingDataCoordinator.m";
      __int16 v13 = 1026;
      LODWORD(v14[0]) = 256;
      WORD2(v14[0]) = 2082;
      *(void *)((char *)v14 + 6) = "-[RideBookingDataCoordinator removeRideBookingDataCoordinatorRideOptionStateObserve"
                                     "r:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_10062DDD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10062DE10(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v5 = objc_alloc((Class)NSString);
      [a1[4] coordinate];
      double v8 = +[NSString stringWithFormat:@"%+.8f, %+.8f", v6, v7];
      id v9 = [a1[4] addressDictionary];
      id v10 = [v5 initWithFormat:@"Origin: Coordinates = %@ \n Address = %@", v8, v9];
      *(_DWORD *)buf = 136315394;
      id v32 = v4;
      __int16 v33 = 2112;
      *(void *)CLLocationDegrees v34 = v10;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    uint64_t v11 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v12 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v13 = objc_alloc((Class)NSString);
      [a1[5] coordinate];
      id v16 = +[NSString stringWithFormat:@"%+.8f, %+.8f", v14, v15];
      uint64_t v17 = [a1[5] addressDictionary];
      id v18 = [v13 initWithFormat:@"Destination: Coordinates = %@ \n Address = %@", v16, v17];
      *(_DWORD *)buf = 136315394;
      id v32 = v12;
      __int16 v33 = 2112;
      *(void *)CLLocationDegrees v34 = v18;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    uint64_t v19 = objc_opt_new();
    id v20 = (void *)*((void *)WeakRetained + 11);
    *((void *)WeakRetained + 11) = v19;

    [WeakRetained _startRefreshRideOptionsTimer];
    *((unsigned char *)WeakRetained + 8) = 1;
    objc_storeStrong((id *)WeakRetained + 5, a1[4]);
    objc_storeStrong((id *)WeakRetained + 6, a1[5]);
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v21 = [*((id *)WeakRetained + 4) allValues];
    id v22 = [v21 countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = *(void *)v27;
      do
      {
        for (unint64_t i = 0; i != v23; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v27 != v24) {
            objc_enumerationMutation(v21);
          }
          [WeakRetained _updateRideOptionStatusMapForOrigin:a1[4] destination:a1[5] application:*(void *)(*((void *)&v26 + 1) + 8 * i)];
        }
        id v23 = [v21 countByEnumeratingWithState:&v26 objects:v30 count:16];
      }
      while (v23);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v21 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v32 = "RideBookingDataCoordinator.m";
      __int16 v33 = 1026;
      *(_DWORD *)CLLocationDegrees v34 = 298;
      *(_WORD *)&v34[4] = 2082;
      *(void *)&v34[6] = "-[RideBookingDataCoordinator updateRideOptionStateForOrigin:destination:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_10062E1D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(NSObject **)(*(void *)(a1 + 32) + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10062E2BC;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v13, (id *)(a1 + 40));
  id v11 = v6;
  id v12 = v5;
  id v8 = v5;
  id v9 = v6;
  dispatch_async(v7, block);

  objc_destroyWeak(&v13);
}

void sub_10062E2BC(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    if (a1[4])
    {
      id v3 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      {
        id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v5 = objc_alloc((Class)NSString);
        id v6 = [a1[4] localizedDescription];
        id v7 = [v5 initWithFormat:@"Received an error trying to fetch app store suggestions:, %@", v6];
        *(_DWORD *)buf = 136315394;
        id v23 = v4;
        __int16 v24 = 2112;
        v25[0] = v7;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
    }
    id v8 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v10 = [objc_alloc((Class)NSString) initWithFormat:@"App Store suggestions: %@", a1[5]];
      *(_DWORD *)buf = 136315394;
      id v23 = v9;
      __int16 v24 = 2112;
      v25[0] = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    WeakRetained[8] = 0;
    id v11 = [a1[5] notInstalledSuggestions];
    if (v11)
    {
      id v12 = [a1[5] notInstalledSuggestions];
      id v13 = [v12 mutableCopy];
      uint64_t v14 = (void *)*((void *)WeakRetained + 9);
      *((void *)WeakRetained + 9) = v13;
    }
    else
    {
      uint64_t v16 = +[NSMutableArray array];
      id v12 = (void *)*((void *)WeakRetained + 9);
      *((void *)WeakRetained + 9) = v16;
    }

    uint64_t v17 = [a1[5] installedSuggestions];
    if (v17)
    {
      id v18 = [a1[5] installedSuggestions];
      id v19 = [v18 mutableCopy];
      id v20 = (void *)*((void *)WeakRetained + 10);
      *((void *)WeakRetained + 10) = v19;
    }
    else
    {
      uint64_t v21 = +[NSMutableArray array];
      id v18 = (void *)*((void *)WeakRetained + 10);
      *((void *)WeakRetained + 10) = v21;
    }

    [WeakRetained _broadcastRideOptionStateDidChange];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v15 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v23 = "RideBookingDataCoordinator.m";
      __int16 v24 = 1026;
      LODWORD(v25[0]) = 322;
      WORD2(v25[0]) = 2082;
      *(void *)((char *)v25 + 6) = "-[RideBookingDataCoordinator updateRideOptionStateForOrigin:destination:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_10062EA88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

void sub_10062EAD4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if ([v5 rideStatusError] == (id)2)
    {
      id v8 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        id v9 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v10 = [objc_alloc((Class)NSString) initWithFormat:@"Returning from getRideStatus request. rideStatus timed out"];
        *(_DWORD *)buf = 136315394;
        CLLocationDegrees v34 = v9;
        __int16 v35 = 2112;
        v36[0] = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      uint64_t v11 = +[RideBookingRideOptionStatus statusWithApplication:*(void *)(a1 + 32) error:1];
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
      id v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

      [WeakRetained _updateRideOptionStatusMapWithApplication:*(void *)(a1 + 32) status:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
    }
    else
    {
      uint64_t v15 = [v5 application];
      [WeakRetained _updateRideStatusMapWithApplication:v15 status:v5];

      unsigned int v16 = [v5 isActiveRide];
      uint64_t v17 = GEOFindOrCreateLog();
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_INFO);
      if (v16)
      {
        if (v18)
        {
          id v19 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
          id v20 = [objc_alloc((Class)NSString) initWithFormat:@"rideOptionStatusMap updated with the latest status"];
          *(_DWORD *)buf = 136315394;
          CLLocationDegrees v34 = v19;
          __int16 v35 = 2112;
          v36[0] = v20;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
        }
        uint64_t v21 = +[RideBookingRideOptionStatus statusWithApplication:*(void *)(a1 + 32) error:2];
        uint64_t v22 = *(void *)(*(void *)(a1 + 56) + 8);
        id v23 = *(void **)(v22 + 40);
        *(void *)(v22 + 40) = v21;

        [WeakRetained _updateRideOptionStatusMapWithApplication:*(void *)(a1 + 32) status:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
      }
      else
      {
        if (v18)
        {
          __int16 v24 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
          id v25 = [objc_alloc((Class)NSString) initWithFormat:@"Sending a -[id<RideBookingApplication> getRideOptionStatusWithPickupLocation:dropOffLocation:completion:] request."];
          *(_DWORD *)buf = 136315394;
          CLLocationDegrees v34 = v24;
          __int16 v35 = 2112;
          v36[0] = v25;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
        }
        long long v26 = *(void **)(a1 + 32);
        uint64_t v27 = *(void *)(a1 + 40);
        uint64_t v28 = *(void *)(a1 + 48);
        v29[0] = _NSConcreteStackBlock;
        v29[1] = 3221225472;
        v29[2] = sub_10062EF60;
        v29[3] = &unk_1012F26E0;
        objc_copyWeak(&v32, (id *)(a1 + 64));
        uint64_t v31 = *(void *)(a1 + 56);
        id v30 = *(id *)(a1 + 32);
        [v26 getRideOptionStatusWithPickupLocation:v27 dropOffLocation:v28 completion:v29];

        objc_destroyWeak(&v32);
      }
    }
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v14 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      CLLocationDegrees v34 = "RideBookingDataCoordinator.m";
      __int16 v35 = 1026;
      LODWORD(v36[0]) = 365;
      WORD2(v36[0]) = 2082;
      *(void *)((char *)v36 + 6) = "-[RideBookingDataCoordinator _updateRideOptionStatusMapForOrigin:destination:applic"
                                     "ation:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_10062EF44(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10062EF60(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    [WeakRetained _updateRideOptionStatusMapWithApplication:*(void *)(a1 + 32) status:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  }
  else
  {
    GEOFindOrCreateLog();
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v10 = 136446722;
      uint64_t v11 = "RideBookingDataCoordinator.m";
      __int16 v12 = 1026;
      int v13 = 386;
      __int16 v14 = 2082;
      uint64_t v15 = "-[RideBookingDataCoordinator _updateRideOptionStatusMapForOrigin:destination:application:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: anotherStrongSelf went away in %{public}s", (uint8_t *)&v10, 0x1Cu);
    }
  }
}

void sub_10062F384(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (void *)*((void *)WeakRetained + 11);
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = [*(id *)(a1 + 40) identifier];
    [v4 setObject:v5 forKey:v6];

    [v3 _broadcastRideOptionStateDidChange];
  }
  else
  {
    GEOFindOrCreateLog();
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136446722;
      id v9 = "RideBookingDataCoordinator.m";
      __int16 v10 = 1026;
      int v11 = 400;
      __int16 v12 = 2082;
      int v13 = "-[RideBookingDataCoordinator _updateRideOptionStatusMapWithApplication:status:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v8, 0x1Cu);
    }
  }
}

void sub_10062F668(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    GEOConfigGetDouble();
    double v4 = v3;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10062F820;
    void v6[3] = &unk_1012E6708;
    objc_copyWeak(&v7, v1);
    [WeakRetained _startTimer:WeakRetained + 56 withInterval:1 repeats:v6 block:v4];
    objc_destroyWeak(&v7);
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v5 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v9 = "RideBookingDataCoordinator.m";
      __int16 v10 = 1026;
      int v11 = 412;
      __int16 v12 = 2082;
      int v13 = "-[RideBookingDataCoordinator _startRefreshRideOptionsTimer]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_10062F804(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10062F820(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _refreshRideOptions];
  }
  else
  {
    GEOFindOrCreateLog();
    double v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      uint64_t v5 = "RideBookingDataCoordinator.m";
      __int16 v6 = 1026;
      int v7 = 417;
      __int16 v8 = 2082;
      id v9 = "-[RideBookingDataCoordinator _startRefreshRideOptionsTimer]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: anotherStrongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_10062FAD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    double v3 = [*((id *)WeakRetained + 11) allValues];
    id v20 = [v3 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v20)
    {
      uint64_t v4 = *(void *)v22;
      do
      {
        for (unint64_t i = 0; i != v20; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v22 != v4) {
            objc_enumerationMutation(v3);
          }
          __int16 v6 = *(void **)(*((void *)&v21 + 1) + 8 * i);
          int v7 = [v6 expirationDate];

          if (v7)
          {
            __int16 v8 = objc_opt_new();
            id v9 = [v6 expirationDate];
            [v8 timeIntervalSinceDate:v9];
            double v11 = v10;

            uint64_t v12 = v2[5];
            int v13 = GEOFindOrCreateLog();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              id v19 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
              id v14 = [objc_alloc((Class)NSString) initWithFormat:@"RideOptionStatus expired: %d, hasOrigin: %d, status: %@", v11 > 0.0, v12 != 0, v6];
              *(_DWORD *)buf = 136315394;
              uint64_t v27 = v19;
              __int16 v28 = 2112;
              *(void *)long long v29 = v14;
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
            }
            if (v11 > 0.0 && v12 != 0)
            {
              uint64_t v16 = v2[5];
              uint64_t v17 = v2[6];
              BOOL v18 = [v6 application];
              [v2 _updateRideOptionStatusMapForOrigin:v16 destination:v17 application:v18];
            }
          }
        }
        id v20 = [v3 countByEnumeratingWithState:&v21 objects:v25 count:16];
      }
      while (v20);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    double v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v27 = "RideBookingDataCoordinator.m";
      __int16 v28 = 1026;
      *(_DWORD *)long long v29 = 429;
      *(_WORD *)&void v29[4] = 2082;
      *(void *)&v29[6] = "-[RideBookingDataCoordinator _refreshRideOptions]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_10062FFA8(uint64_t a1)
{
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _stopTimer:WeakRetained + 56];
  }
  else
  {
    GEOFindOrCreateLog();
    double v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      uint64_t v5 = "RideBookingDataCoordinator.m";
      __int16 v6 = 1026;
      int v7 = 453;
      __int16 v8 = 2082;
      id v9 = "-[RideBookingDataCoordinator _stopRefreshRideOptionsTimer]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_100630320(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  double v3 = WeakRetained;
  if (WeakRetained)
  {
    [*((id *)WeakRetained + 12) addObject:*(void *)(a1 + 32)];
    int v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v6 = [objc_alloc((Class)NSString) initWithFormat:@"Added RequestRide observer: %@", *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      uint64_t v12 = v5;
      __int16 v13 = 2112;
      v14[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    if (objc_opt_respondsToSelector())
    {
      int v7 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        __int16 v8 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v9 = [objc_alloc((Class)NSString) initWithFormat:@"Notifying observer %@ of request ride status change %@", *(void *)(a1 + 32), v3[21]];
        *(_DWORD *)buf = 136315394;
        uint64_t v12 = v8;
        __int16 v13 = 2112;
        v14[0] = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      [*(id *)(a1 + 32) requestRideStatusDidChange:v3[21]];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    double v10 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v12 = "RideBookingDataCoordinator.m";
      __int16 v13 = 1026;
      LODWORD(v14[0]) = 467;
      WORD2(v14[0]) = 2082;
      *(void *)((char *)v14 + 6) = "-[RideBookingDataCoordinator addRideBookingDataCoordinatorRequestRideObserver:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_10063081C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  double v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[12] removeObject:*(void *)(a1 + 32)];
    int v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v6 = [objc_alloc((Class)NSString) initWithFormat:@"Removed RequestRide observer: %@", *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      __int16 v8 = v5;
      __int16 v9 = 2112;
      v10[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    int v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      __int16 v8 = "RideBookingDataCoordinator.m";
      __int16 v9 = 1026;
      LODWORD(v10[0]) = 485;
      WORD2(v10[0]) = 2082;
      *(void *)((char *)v10 + 6) = "-[RideBookingDataCoordinator removeRideBookingDataCoordinatorRequestRideObserver:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1006310A4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  double v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _stopRefreshRideOptionsTimer];
    [v3 _resetRequestRide];
    objc_storeStrong(v3 + 13, *(id *)(a1 + 32));
    int v4 = [*(id *)(a1 + 32) paymentMethods];
    uint64_t v5 = [v4 firstObject];
    id v6 = v3[19];
    v3[19] = (id)v5;

    id v7 = v3[4];
    __int16 v8 = [*(id *)(a1 + 32) application];
    __int16 v9 = [v8 identifier];
    uint64_t v10 = [v7 objectForKeyedSubscript:v9];
    id v11 = v3[14];
    v3[14] = (id)v10;

    [v3 _updateRequestRidePickupAndDropoffLocations];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v12 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v13 = 136446722;
      id v14 = "RideBookingDataCoordinator.m";
      __int16 v15 = 1026;
      int v16 = 528;
      __int16 v17 = 2082;
      BOOL v18 = "-[RideBookingDataCoordinator startRequestRideForRideOption:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v13, 0x1Cu);
    }
  }
}

void sub_1006313E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[CLPlacemark placemarkWithGEOMapItem:*((void *)WeakRetained + 5)];
    double v3 = (void *)*((void *)WeakRetained + 15);
    *((void *)WeakRetained + 15) = v2;

    uint64_t v4 = +[CLPlacemark placemarkWithGEOMapItem:*((void *)WeakRetained + 6)];
    uint64_t v5 = (void *)*((void *)WeakRetained + 16);
    *((void *)WeakRetained + 16) = v4;

    id v6 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v8 = [objc_alloc((Class)NSString) initWithFormat:@"Updated Pickup: %@, Dropoff: %@", *((void *)WeakRetained + 5), *((void *)WeakRetained + 6)];
      *(_DWORD *)buf = 136315394;
      __int16 v15 = v7;
      __int16 v16 = 2112;
      v17[0] = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    __int16 v9 = (void *)*((void *)WeakRetained + 11);
    uint64_t v10 = [*((id *)WeakRetained + 13) application];
    id v11 = [v10 identifier];
    uint64_t v12 = [v9 objectForKey:v11];

    int v13 = [v12 expirationDate];
    [WeakRetained _startRequestRideExpireTimerWithExpirationDate:v13];

    [WeakRetained _cleanRequestLocationNames];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v12 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      __int16 v15 = "RideBookingDataCoordinator.m";
      __int16 v16 = 1026;
      LODWORD(v17[0]) = 544;
      WORD2(v17[0]) = 2082;
      *(void *)((char *)v17 + 6) = "-[RideBookingDataCoordinator _updateRequestRidePickupAndDropoffLocations]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100631800(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v6 = objc_alloc((Class)NSString);
      id v7 = [WeakRetained[14] identifier];
      id v8 = [v6 initWithFormat:@"%@ _startRequestRideExpireTimerWithExpirationDate: %@", v7, *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      __int16 v15 = v5;
      __int16 v16 = 2112;
      v17[0] = v8;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    [*(id *)(a1 + 32) timeIntervalSinceNow];
    double v10 = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100631A88;
    void v12[3] = &unk_1012E6708;
    objc_copyWeak(&v13, v2);
    [WeakRetained _startTimer:WeakRetained + 17 withInterval:0 repeats:v12 block:v10];
    objc_destroyWeak(&v13);
  }
  else
  {
    GEOFindOrCreateLog();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      __int16 v15 = "RideBookingDataCoordinator.m";
      __int16 v16 = 1026;
      LODWORD(v17[0]) = 564;
      WORD2(v17[0]) = 2082;
      *(void *)((char *)v17 + 6) = "-[RideBookingDataCoordinator _startRequestRideExpireTimerWithExpirationDate:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100631A6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100631A88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _expireRequestRideStatus];
  }
  else
  {
    GEOFindOrCreateLog();
    double v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      uint64_t v5 = "RideBookingDataCoordinator.m";
      __int16 v6 = 1026;
      int v7 = 570;
      __int16 v8 = 2082;
      double v9 = "-[RideBookingDataCoordinator _startRequestRideExpireTimerWithExpirationDate:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: anotherStrongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_100631D38(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      double v3 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v4 = objc_alloc((Class)NSString);
      uint64_t v5 = [WeakRetained[14] identifier];
      id v6 = [v4 initWithFormat:@"%@ _expireRequestRideStatus", v5];
      *(_DWORD *)buf = 136315394;
      double v9 = v3;
      __int16 v10 = 2112;
      v11[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    [WeakRetained[21] setRequestExpired:1];
    [WeakRetained _updateRequestRideStatus:WeakRetained[21]];
  }
  else
  {
    GEOFindOrCreateLog();
    int v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      double v9 = "RideBookingDataCoordinator.m";
      __int16 v10 = 1026;
      LODWORD(v11[0]) = 583;
      WORD2(v11[0]) = 2082;
      *(void *)((char *)v11 + 6) = "-[RideBookingDataCoordinator _expireRequestRideStatus]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1006320C8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      double v3 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v4 = objc_alloc((Class)NSString);
      uint64_t v5 = [WeakRetained[14] identifier];
      id v6 = [v4 initWithFormat:@"%@ _stopRequestRideExpireTimer", v5];
      *(_DWORD *)buf = 136315394;
      double v9 = v3;
      __int16 v10 = 2112;
      v11[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    [WeakRetained _stopTimer:WeakRetained + 17];
  }
  else
  {
    GEOFindOrCreateLog();
    int v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      double v9 = "RideBookingDataCoordinator.m";
      __int16 v10 = 1026;
      LODWORD(v11[0]) = 596;
      WORD2(v11[0]) = 2082;
      *(void *)((char *)v11 + 6) = "-[RideBookingDataCoordinator _stopRequestRideExpireTimer]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100632450(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    *(void *)&buf[24] = sub_100103E1C;
    id v20 = sub_100104798;
    id v21 = 0;
    v17[0] = 0;
    v17[1] = v17;
    v17[2] = 0x3032000000;
    void v17[3] = sub_100103E1C;
    void v17[4] = sub_100104798;
    id v18 = 0;
    double v3 = dispatch_group_create();
    dispatch_group_enter(v3);
    dispatch_group_enter(v3);
    uint64_t v4 = WeakRetained[5];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100632780;
    void v14[3] = &unk_1012F2730;
    __int16 v16 = buf;
    uint64_t v5 = v3;
    __int16 v15 = v5;
    [WeakRetained cleanMapItemName:v4 completion:v14];
    uint64_t v6 = WeakRetained[6];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1006327E0;
    void v11[3] = &unk_1012F2730;
    id v13 = v17;
    int v7 = v5;
    uint64_t v12 = v7;
    [WeakRetained cleanMapItemName:v6 completion:v11];
    __int16 v8 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100632840;
    block[3] = &unk_1012F14D0;
    void block[4] = WeakRetained;
    void block[5] = buf;
    block[6] = v17;
    dispatch_group_notify(v7, v8, block);

    _Block_object_dispose(v17, 8);
    _Block_object_dispose(buf, 8);
  }
  else
  {
    GEOFindOrCreateLog();
    double v9 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      *(void *)&uint8_t buf[4] = "RideBookingDataCoordinator.m";
      *(_WORD *)&buf[12] = 1026;
      *(_DWORD *)&buf[14] = 608;
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "-[RideBookingDataCoordinator _cleanRequestLocationNames]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100632754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100632780(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1006327E0(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100632840(void *a1)
{
  uint64_t v2 = +[CLPlacemark placemarkWithGEOMapItem:*(void *)(*(void *)(a1[5] + 8) + 40)];
  uint64_t v3 = a1[4];
  id v4 = *(void **)(v3 + 120);
  *(void *)(v3 + 120) = v2;
  id v5 = v2;

  uint64_t v6 = +[CLPlacemark placemarkWithGEOMapItem:*(void *)(*(void *)(a1[6] + 8) + 40)];
  uint64_t v7 = a1[4];
  __int16 v8 = *(void **)(v7 + 128);
  *(void *)(v7 + 128) = v6;
  id v9 = v6;

  __int16 v10 = (void *)a1[4];
  id v11 = [v5 location];
  [v11 coordinate];
  [v10 updateRequestRideStartingWaypointCoordinate:];
}

void sub_100632AD8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    objc_storeStrong(WeakRetained + 21, *(id *)(a1 + 32));
    uint64_t v4 = [*(id *)(a1 + 32) rideOption];
    id v5 = v3[13];
    v3[13] = (id)v4;

    if (v3[19]) {
      [v3[21] setPaymentMethod:];
    }
    [v3 _broadcastRequestRideStatusDidChange];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136446722;
      __int16 v8 = "RideBookingDataCoordinator.m";
      __int16 v9 = 1026;
      int v10 = 649;
      __int16 v11 = 2082;
      uint64_t v12 = "-[RideBookingDataCoordinator _updateRequestRideStatus:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v7, 0x1Cu);
    }
  }
}

void sub_100632DE0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v6 = objc_alloc((Class)NSString);
      int v7 = [WeakRetained[14] identifier];
      id v8 = [v6 initWithFormat:@"%@ updateRequestRideStartingWaypointCoordinate: (%f, %f)", v7, *(void *)(a1 + 40), *(void *)(a1 + 48)];
      *(_DWORD *)buf = 136315394;
      *(void *)&uint8_t buf[4] = v5;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v8;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    *(void *)&buf[24] = sub_100103E1C;
    id v21 = sub_100104798;
    id v22 = 0;
    uint64_t v9 = +[RideBookingRequestRideStatus statusWithApplication:rideOption:startingWaypointCoordinate:origin:destination:loadingRequestRideStatus:etaMinutesAtStartWaypoint:](RideBookingRequestRideStatus, "statusWithApplication:rideOption:startingWaypointCoordinate:origin:destination:loadingRequestRideStatus:etaMinutesAtStartWaypoint:", WeakRetained[14], WeakRetained[13], WeakRetained[15], WeakRetained[16], 1, 0, *(double *)(a1 + 40), *(double *)(a1 + 48));
    int v10 = *(void **)(*(void *)&buf[8] + 40);
    *(void *)(*(void *)&buf[8] + 40) = v9;

    [WeakRetained _updateRequestRideStatus:*(void *)(*(void *)&buf[8] + 40)];
    __int16 v11 = +[GEOMapService sharedService];
    uint64_t v12 = [v11 defaultTraits];

    double v13 = *(double *)(a1 + 40);
    double v14 = *(double *)(a1 + 48);
    __int16 v15 = +[GEOMapService sharedService];
    __int16 v16 = [v15 ticketForReverseGeocodeCoordinate:0 includeEntryPoints:0 shiftLocationsIfNeeded:1 preserveOriginalLocation:v12 traits:v13];

    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_10063317C;
    v18[3] = &unk_1012F2780;
    objc_copyWeak(&v19, v2);
    v18[4] = WeakRetained;
    void v18[5] = buf;
    [v16 submitWithHandler:v18 networkActivity:0];
    objc_destroyWeak(&v19);

    _Block_object_dispose(buf, 8);
  }
  else
  {
    GEOFindOrCreateLog();
    __int16 v17 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      *(void *)&uint8_t buf[4] = "RideBookingDataCoordinator.m";
      *(_WORD *)&buf[12] = 1026;
      *(_DWORD *)&buf[14] = 667;
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "-[RideBookingDataCoordinator updateRequestRideStartingWaypointCoordinate:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100633144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  objc_destroyWeak(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_10063317C(uint64_t a1, void *a2, void *a3)
{
  id v41 = a2;
  id v39 = a3;
  if (v39)
  {
    id v5 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v6 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v7 = objc_alloc((Class)NSString);
      id v8 = [v39 localizedDescription];
      id v9 = [v7 initWithFormat:@"Received an error inside the completion handler of -[MKMapServiceTicket submitWithHandler:networkActivity:]:, %@", v8];
      *(_DWORD *)buf = 136315394;
      BOOL v47 = v6;
      __int16 v48 = 2112;
      v49[0] = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
    }
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    __int16 v11 = [v41 firstObject];
    if ([v11 conformsToProtocol:&OBJC_PROTOCOL___GEOMapItem]) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    id v40 = v12;

    double v13 = +[GEOMapItemStorage mapItemStorageForGEOMapItem:v40];
    if (v13)
    {
      double v14 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        __int16 v15 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v16 = objc_alloc((Class)NSString);
        __int16 v17 = [WeakRetained[14] identifier];
        [v13 coordinate];
        id v20 = +[NSString stringWithFormat:@"%+.8f, %+.8f", v18, v19];
        id v21 = [v13 addressDictionary];
        id v22 = [v16 initWithFormat:@"%@ Sucessfully rev-geo'd pickup coordinate. Pickup Coordinates: %@, Address: %@", v17, v20, v21];
        *(_DWORD *)buf = 136315394;
        BOOL v47 = v15;
        __int16 v48 = 2112;
        v49[0] = v22;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      uint64_t v23 = +[CLPlacemark placemarkWithGEOMapItem:v13];
      id v24 = WeakRetained[15];
      WeakRetained[15] = (id)v23;

      id v25 = +[NSUUID UUID];
      id v26 = [v25 copy];
      id v27 = WeakRetained[18];
      WeakRetained[18] = v26;

      id v28 = WeakRetained[15];
      id v29 = WeakRetained[16];
      id v31 = WeakRetained[13];
      id v30 = WeakRetained[14];
      v42[0] = _NSConcreteStackBlock;
      v42[1] = 3221225472;
      v42[2] = sub_1006336C0;
      v42[3] = &unk_1012F2758;
      objc_copyWeak(&v45, (id *)(a1 + 48));
      id v32 = v25;
      uint64_t v33 = *(void *)(a1 + 40);
      id v43 = v32;
      uint64_t v44 = v33;
      [v30 getRequestRideStatusWithPickupLocation:v28 dropOffLocation:v29 rideOption:v31 completion:v42];

      objc_destroyWeak(&v45);
    }
    else
    {
      id v32 = +[RideBookingRequestRideStatus statusWithApplication:*(void *)(*(void *)(a1 + 32) + 112) error:2];
      [WeakRetained _updateRequestRideStatus:v32];
      CLLocationDegrees v34 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
      {
        __int16 v35 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v36 = objc_alloc((Class)NSString);
        id v37 = [WeakRetained[14] identifier];
        id v38 = [v36 initWithFormat:@"%@ Rev-geo of pickup coordinate failed. Returning.", v37];
        *(_DWORD *)buf = 136315394;
        BOOL v47 = v35;
        __int16 v48 = 2112;
        v49[0] = v38;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
    }
  }
  else
  {
    GEOFindOrCreateLog();
    double v13 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      BOOL v47 = "RideBookingDataCoordinator.m";
      __int16 v48 = 1026;
      LODWORD(v49[0]) = 698;
      WORD2(v49[0]) = 2082;
      *(void *)((char *)v49 + 6) = "-[RideBookingDataCoordinator updateRequestRideStartingWaypointCoordinate:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: anotherStrongSelf went away in %{public}s", buf, 0x1Cu);
    }
    id v40 = v13;
  }
}

void sub_1006336A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1006336C0(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v7)
    {
      id v9 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v11 = objc_alloc((Class)NSString);
        uint64_t v12 = [v7 localizedDescription];
        id v13 = [v11 initWithFormat:@"Received an error inside the completion block of -[RideBookingApplication getRequestRideStatusWithPickupLocation:dropOffLocation:rideOption:completion:], %@", v12];
        *(_DWORD *)buf = 136315394;
        id v21 = v10;
        __int16 v22 = 2112;
        v23[0] = v13;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
    }
    double v14 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      __int16 v15 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v16 = [objc_alloc((Class)NSString) initWithFormat:@"Got request ride status %@", v6];
      *(_DWORD *)buf = 136315394;
      id v21 = v15;
      __int16 v22 = 2112;
      v23[0] = v16;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    if ([*(id *)(a1 + 32) isEqual:WeakRetained[18]])
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      if (![*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) requestRideStatusError])
      {
        uint64_t v17 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) origin];
        uint64_t v18 = (void *)WeakRetained[15];
        WeakRetained[15] = v17;
      }
      [WeakRetained _updateRequestRideStatus:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v19 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v21 = "RideBookingDataCoordinator.m";
      __int16 v22 = 1026;
      LODWORD(v23[0]) = 723;
      WORD2(v23[0]) = 2082;
      *(void *)((char *)v23 + 6) = "-[RideBookingDataCoordinator updateRequestRideStartingWaypointCoordinate:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: yetAnotherStrongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100633B9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    objc_storeStrong((id *)WeakRetained + 19, *(id *)(a1 + 32));
    [v3 _updateRequestRideStatus:v3[21]];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      id v6 = "RideBookingDataCoordinator.m";
      __int16 v7 = 1026;
      int v8 = 749;
      __int16 v9 = 2082;
      int v10 = "-[RideBookingDataCoordinator updateRequestRidePaymentMethod:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_100633F30(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v5 = objc_alloc((Class)NSString);
      id v6 = NSStringFromSelector(*(SEL *)(a1 + 48));
      id v7 = [v5 initWithFormat:@"%@, updated passengers from %lu to %lu", v6, [WeakRetained[20] numberOfPassengers], [*(id *)(a1 + 32) numberOfPassengers]];
      *(_DWORD *)buf = 136315394;
      id v11 = v4;
      __int16 v12 = 2112;
      v13[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    id v8 = *(id *)(a1 + 32);
    __int16 v9 = WeakRetained[20];
    WeakRetained[20] = v8;
  }
  else
  {
    GEOFindOrCreateLog();
    __int16 v9 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v11 = "RideBookingDataCoordinator.m";
      __int16 v12 = 1026;
      LODWORD(v13[0]) = 762;
      WORD2(v13[0]) = 2082;
      *(void *)((char *)v13 + 6) = "-[RideBookingDataCoordinator updateRequestRidePassengers:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1006343B0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    *(void *)uint64_t v23 = 0;
    *(void *)&v23[8] = v23;
    *(void *)&v23[16] = 0x3032000000;
    *(void *)&v23[24] = sub_100103E1C;
    id v24 = sub_100104798;
    id v25 = 0;
    [WeakRetained _stopRequestRideExpireTimer];
    GEOFindOrCreateLog();
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v6 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v7 = [objc_alloc((Class)NSString) initWithFormat:@"Requested ride with ride option %@", *(void *)(*(void *)(a1 + 32) + 104)];
      *(_DWORD *)buf = 136315394;
      id v20 = v6;
      __int16 v21 = 2112;
      id v22 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    uint64_t v8 = *((void *)v4 + 15);
    uint64_t v9 = *((void *)v4 + 16);
    uint64_t v10 = *((void *)v4 + 13);
    id v11 = (void *)*((void *)v4 + 14);
    id v12 = [*((id *)v4 + 20) numberOfPassengers];
    uint64_t v13 = *((void *)v4 + 19);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    id v15[2] = sub_1006346D4;
    v15[3] = &unk_1012F27D0;
    objc_copyWeak(v18, v2);
    v18[1] = *(id *)(a1 + 56);
    uint64_t v17 = v23;
    id v16 = *(id *)(a1 + 40);
    [v11 getRideStatusWithPickupLocation:v8 dropOffLocation:v9 rideOption:v10 partySize:v12 paymentMethod:v13 completion:v15];

    objc_destroyWeak(v18);
    _Block_object_dispose(v23, 8);
  }
  else
  {
    GEOFindOrCreateLog();
    double v14 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t v23 = 136446722;
      *(void *)&v23[4] = "RideBookingDataCoordinator.m";
      *(_WORD *)&v23[12] = 1026;
      *(_DWORD *)&v23[14] = 775;
      *(_WORD *)&v23[18] = 2082;
      *(void *)&v23[20] = "-[RideBookingDataCoordinator requestRideWithCompletion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", v23, 0x1Cu);
    }
  }
}

void sub_10063469C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  objc_destroyWeak(v23);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_1006346D4(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v7)
    {
      uint64_t v9 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        id v19 = v6;
        uint64_t v10 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v11 = objc_alloc((Class)NSString);
        id v12 = NSStringFromSelector(*(SEL *)(a1 + 56));
        uint64_t v13 = [v7 localizedDescription];
        id v14 = [v11 initWithFormat:@"Received an error in %@:, %@", v12, v13];
        *(_DWORD *)buf = 136315394;
        __int16 v21 = v10;
        id v6 = v19;
        __int16 v22 = 2112;
        v23[0] = v14;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    __int16 v15 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      id v16 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v17 = [objc_alloc((Class)NSString) initWithFormat:@"Received ride status: %@", *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
      *(_DWORD *)buf = 136315394;
      __int16 v21 = v16;
      __int16 v22 = 2112;
      v23[0] = v17;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    [WeakRetained _updateRideStatusMapWithApplication:WeakRetained[14] status:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v18 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      __int16 v21 = "RideBookingDataCoordinator.m";
      __int16 v22 = 1026;
      LODWORD(v23[0]) = 785;
      WORD2(v23[0]) = 2082;
      *(void *)((char *)v23 + 6) = "-[RideBookingDataCoordinator requestRideWithCompletion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: anotherStrongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100634C54(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[22] removeObject:*(void *)(a1 + 32)];
    id v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v6 = [objc_alloc((Class)NSString) initWithFormat:@"Removed RideStatus observer: %@", *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      uint64_t v8 = v5;
      __int16 v9 = 2112;
      v10[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v8 = "RideBookingDataCoordinator.m";
      __int16 v9 = 1026;
      LODWORD(v10[0]) = 829;
      WORD2(v10[0]) = 2082;
      *(void *)((char *)v10 + 6) = "-[RideBookingDataCoordinator removeRideBookingDataCoordinatorRideStatusObserver:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100634FE4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10063509C;
  v3[3] = &unk_1012F2820;
  objc_copyWeak(v4, (id *)(a1 + 40));
  v4[1] = *(id *)(a1 + 48);
  [v2 getRideStatusWithCompletion:v3];
  objc_destroyWeak(v4);
}

void sub_100635088(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10063509C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v8 = v5;
    __int16 v9 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v11 = objc_alloc((Class)NSString);
      id v12 = NSStringFromSelector(*(SEL *)(a1 + 40));
      id v13 = [v11 initWithFormat:@"%@, Got ride status: %@", v12, v8];
      *(_DWORD *)buf = 136315394;
      id v16 = v10;
      __int16 v17 = 2112;
      v18[0] = v13;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    id v14 = [v8 application];
    [WeakRetained _updateRideStatusMapWithApplication:v14 status:v8];
  }
  else
  {
    GEOFindOrCreateLog();
    id v14 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v16 = "RideBookingDataCoordinator.m";
      __int16 v17 = 1026;
      LODWORD(v18[0]) = 865;
      WORD2(v18[0]) = 2082;
      *(void *)((char *)v18 + 6) = "-[RideBookingDataCoordinator _updateRideStatusMapForApplication:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    uint64_t v8 = v14;
  }
}

void sub_1006354B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if ([*(id *)(a1 + 32) isValidRide])
    {
      if ([*(id *)(a1 + 32) phase] == (id)4)
      {
        uint64_t v3 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
        {
          id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
          id v5 = [objc_alloc((Class)NSString) initWithFormat:@"Handling completed rides"];
          *(_DWORD *)buf = 136315394;
          id v51 = v4;
          __int16 v52 = 2112;
          v53[0] = v5;
          _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
        }
        id v6 = (void *)WeakRetained[23];
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = [*(id *)(a1 + 40) identifier];
        [v6 setObject:v7 forKey:v8];

        __int16 v9 = (void *)WeakRetained[24];
        uint64_t v10 = [*(id *)(a1 + 40) identifier];
        id v11 = [v9 objectForKey:v10];
        id v12 = [v11 mutableCopy];
        id v13 = v12;
        if (v12) {
          id v14 = v12;
        }
        else {
          id v14 = objc_opt_new();
        }
        __int16 v15 = v14;

        id v29 = [*(id *)(a1 + 32) identifier];
        id v21 = [v15 objectForKey:v29];

        if (v21)
        {
          [v21 timeIntervalSinceNow];
          double v31 = v30;
          GEOConfigGetDouble();
          if (v31 >= -v32)
          {
LABEL_24:
            uint64_t v44 = (void *)WeakRetained[24];
            id v45 = [*(id *)(a1 + 40) identifier];
            [v44 setObject:v15 forKey:v45];

            unsigned int v46 = +[NSUserDefaults standardUserDefaults];
            [v46 setObject:WeakRetained[24] forKey:@"RideBookingCompletedRideIdentifiersAndDates"];

            BOOL v47 = GEOFindOrCreateLog();
            if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
            {
              __int16 v48 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
              id v49 = [objc_alloc((Class)NSString) initWithFormat:@"Completed rides: %@", WeakRetained[24]];
              *(_DWORD *)buf = 136315394;
              id v51 = v48;
              __int16 v52 = 2112;
              v53[0] = v49;
              _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
            }
            [WeakRetained _broadcastRideStatusDidChange];
            goto LABEL_27;
          }
          uint64_t v33 = (void *)WeakRetained[23];
          CLLocationDegrees v34 = [*(id *)(a1 + 40) identifier];
          [v33 removeObjectForKey:v34];

          __int16 v35 = GEOFindOrCreateLog();
          if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
          {
            id v36 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
            id v37 = objc_alloc((Class)NSString);
            id v38 = [*(id *)(a1 + 40) identifier];
            id v39 = [v37 initWithFormat:@"Ride is too old, removing application from the status map: %@", v38];
            *(_DWORD *)buf = 136315394;
            id v51 = v36;
            __int16 v52 = 2112;
            v53[0] = v39;
LABEL_22:
            _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
          }
        }
        else
        {
          id v40 = objc_alloc_init((Class)NSDate);
          id v41 = [*(id *)(a1 + 32) identifier];
          [v15 setObject:v40 forKey:v41];

          __int16 v35 = GEOFindOrCreateLog();
          if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
          {
            uint64_t v42 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
            id v43 = objc_alloc((Class)NSString);
            id v38 = [*(id *)(a1 + 40) identifier];
            id v39 = [v43 initWithFormat:@"Saving the ride identifier %@ with a time stamp", v38];
            *(_DWORD *)buf = 136315394;
            id v51 = v42;
            __int16 v52 = 2112;
            v53[0] = v39;
            goto LABEL_22;
          }
        }

        goto LABEL_24;
      }
      __int16 v22 = (void *)WeakRetained[23];
      uint64_t v23 = *(void *)(a1 + 32);
      id v24 = [*(id *)(a1 + 40) identifier];
      [v22 setObject:v23 forKey:v24];

      [WeakRetained _broadcastRideStatusDidChange];
      __int16 v15 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        id v25 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v26 = objc_alloc((Class)NSString);
        id v27 = NSStringFromSelector(*(SEL *)(a1 + 56));
        id v28 = [v26 initWithFormat:@"Returning from %@ because status.phase != RideBookingRideStatusPhaseCompleted. status.phase is %lu", v27, [*(id *)(a1 + 32) phase]];
        *(_DWORD *)buf = 136315394;
        id v51 = v25;
        __int16 v52 = 2112;
        v53[0] = v28;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
    }
    else
    {
      id v16 = (void *)WeakRetained[23];
      __int16 v17 = [*(id *)(a1 + 40) identifier];
      [v16 removeObjectForKey:v17];

      [WeakRetained _broadcastRideStatusDidChange];
      __int16 v15 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        uint64_t v18 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
        id v19 = objc_alloc((Class)NSString);
        id v20 = NSStringFromSelector(*(SEL *)(a1 + 56));
        id v21 = [v19 initWithFormat:@"Returning from %@ because ride it's not a valid ride", v20];
        *(_DWORD *)buf = 136315394;
        id v51 = v18;
        __int16 v52 = 2112;
        v53[0] = v21;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);

LABEL_27:
      }
    }
  }
  else
  {
    GEOFindOrCreateLog();
    __int16 v15 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v51 = "RideBookingDataCoordinator.m";
      __int16 v52 = 1026;
      LODWORD(v53[0]) = 881;
      WORD2(v53[0]) = 2082;
      *(void *)((char *)v53 + 6) = "-[RideBookingDataCoordinator _updateRideStatusMapWithApplication:status:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100635DD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v5 = objc_alloc((Class)NSString);
      id v6 = NSStringFromSelector(*(SEL *)(a1 + 48));
      id v7 = [v5 initWithFormat:@"%@, %@", v6, *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      uint64_t v10 = v4;
      __int16 v11 = 2112;
      v12[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    uint64_t v8 = [*(id *)(a1 + 32) application];
    [WeakRetained _updateRideStatusMapWithApplication:v8 status:*(void *)(a1 + 32)];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v8 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v10 = "RideBookingDataCoordinator.m";
      __int16 v11 = 1026;
      LODWORD(v12[0]) = 958;
      WORD2(v12[0]) = 2082;
      *(void *)((char *)v12 + 6) = "-[RideBookingDataCoordinator rideStatusDidChange:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1006362AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v5 = [objc_alloc((Class)NSString) initWithFormat:@"Sending feedback for ride status: %@", *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      uint64_t v18 = v4;
      __int16 v19 = 2112;
      v20[0] = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    id v6 = (void *)WeakRetained[4];
    id v7 = [*(id *)(a1 + 32) application];
    uint64_t v8 = [v7 identifier];
    __int16 v9 = [v6 objectForKey:v8];

    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100636520;
    void v14[3] = &unk_1012EC6A0;
    uint64_t v16 = *(void *)(a1 + 72);
    uint64_t v12 = *(void *)(a1 + 48);
    __int16 v15 = *(id *)(a1 + 56);
    [v9 sendFeedbackForRideStatus:v10 feedbackRating:v11 feedbackTip:v12 completion:v14];
    id v13 = v15;
  }
  else
  {
    GEOFindOrCreateLog();
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v18 = "RideBookingDataCoordinator.m";
      __int16 v19 = 1026;
      LODWORD(v20[0]) = 976;
      WORD2(v20[0]) = 2082;
      *(void *)((char *)v20 + 6) = "-[RideBookingDataCoordinator sendFeedbackForRideStatus:feedbackRating:feedbackTip:c"
                                     "ompletion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    __int16 v9 = v13;
  }
}

void sub_100636520(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v6 = objc_alloc((Class)NSString);
      id v7 = NSStringFromSelector(*(SEL *)(a1 + 40));
      uint64_t v8 = [v3 localizedDescription];
      id v9 = [v6 initWithFormat:@"Received an error in %@:, %@", v7, v8];
      *(_DWORD *)buf = 136315394;
      uint64_t v11 = v5;
      __int16 v12 = 2112;
      id v13 = v9;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10063691C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v5 = [objc_alloc((Class)NSString) initWithFormat:@"Checking if ride can be cancelled for ride %@", *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      uint64_t v16 = v4;
      __int16 v17 = 2112;
      v18[0] = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    id v6 = (void *)WeakRetained[4];
    id v7 = [*(id *)(a1 + 32) application];
    uint64_t v8 = [v7 identifier];
    id v9 = [v6 objectForKey:v8];

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100636B84;
    void v12[3] = &unk_1012F2870;
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v10 = *(void *)(a1 + 32);
    id v13 = *(id *)(a1 + 40);
    [v9 checkIfCanCancelRideWithRideStatus:v10 completion:v12];
    uint64_t v11 = v13;
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v11 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v16 = "RideBookingDataCoordinator.m";
      __int16 v17 = 1026;
      LODWORD(v18[0]) = 1001;
      WORD2(v18[0]) = 2082;
      *(void *)((char *)v18 + 6) = "-[RideBookingDataCoordinator checkIfCanCancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    id v9 = v11;
  }
}

void sub_100636B84(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    uint64_t v10 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v12 = objc_alloc((Class)NSString);
      id v13 = NSStringFromSelector(*(SEL *)(a1 + 40));
      uint64_t v14 = [v9 localizedDescription];
      id v15 = [v12 initWithFormat:@"Received an error in %@:, %@", v13, v14];
      *(_DWORD *)buf = 136315394;
      __int16 v17 = v11;
      __int16 v18 = 2112;
      id v19 = v15;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100636FB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v5 = [objc_alloc((Class)NSString) initWithFormat:@"Sending a request to cancel the ride %@", *(void *)(a1 + 32)];
      *(_DWORD *)buf = 136315394;
      __int16 v18 = v4;
      __int16 v19 = 2112;
      v20[0] = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    id v6 = (void *)WeakRetained[4];
    id v7 = [*(id *)(a1 + 32) application];
    id v8 = [v7 identifier];
    id v9 = [v6 objectForKey:v8];

    uint64_t v10 = *(void *)(a1 + 32);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100637220;
    void v14[3] = &unk_1012F28B8;
    uint64_t v11 = *(id *)(a1 + 48);
    uint64_t v12 = *(void *)(a1 + 64);
    id v15 = v11;
    uint64_t v16 = v12;
    void v14[4] = *(void *)(a1 + 40);
    [v9 cancelRideWithRideStatus:v10 completion:v14];
    id v13 = v15;
  }
  else
  {
    GEOFindOrCreateLog();
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      __int16 v18 = "RideBookingDataCoordinator.m";
      __int16 v19 = 1026;
      LODWORD(v20[0]) = 1023;
      WORD2(v20[0]) = 2082;
      *(void *)((char *)v20 + 6) = "-[RideBookingDataCoordinator cancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    id v9 = v13;
  }
}

void sub_100637220(uint64_t a1, void *a2)
{
  id v3 = a2;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  if (v3)
  {
    id v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
      id v6 = objc_alloc((Class)NSString);
      id v7 = NSStringFromSelector(*(SEL *)(a1 + 48));
      id v8 = [v3 localizedDescription];
      id v9 = [v6 initWithFormat:@"Received an error in %@:, %@", v7, v8];
      *(_DWORD *)buf = 136315394;
      id v13 = v5;
      __int16 v14 = 2112;
      id v15 = v9;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
    }
  }
  else
  {
    GEOConfigGetDouble();
    dispatch_time_t v11 = dispatch_time(0, (uint64_t)(v10 * 1000000000.0));
    dispatch_after(v11, *(dispatch_queue_t *)(*(void *)(a1 + 32) + 16), &stru_1012F2890);
  }
}

void sub_1006373BC(id a1)
{
  os_log_t v1 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    uint64_t v2 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
    id v3 = [objc_alloc((Class)NSString) initWithFormat:@"Sending a MapsSuggestionsRidesharingSourceShouldRefresh notify. Triggered by a successful cancellation."];
    int v4 = 136315394;
    id v5 = v2;
    __int16 v6 = 2112;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", (uint8_t *)&v4, 0x16u);
  }
  notify_post("MapsSuggestionsRidesharingSourceShouldRefresh");
}

void sub_100637688(uint64_t a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
    id v4 = [objc_alloc((Class)NSString) initWithFormat:@"Enabling applications: %@", *(void *)(a1 + 32)];
    *(_DWORD *)buf = 136315394;
    __int16 v18 = v3;
    __int16 v19 = 2112;
    *(void *)id v20 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    __int16 v6 = *(id *)(a1 + 32);
    id v7 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v13;
      do
      {
        for (unint64_t i = 0; i != v8; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v13 != v9) {
            objc_enumerationMutation(v6);
          }
          dispatch_time_t v11 = *(void **)(*((void *)&v12 + 1) + 8 * i);
          [v11 enableForUse];
          [WeakRetained _updateRideOptionStatusMapForOrigin:WeakRetained[5] destination:WeakRetained[6] application:v11];
        }
        id v8 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v8);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    __int16 v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      __int16 v18 = "RideBookingDataCoordinator.m";
      __int16 v19 = 1026;
      *(_DWORD *)id v20 = 1054;
      *(_WORD *)&void v20[4] = 2082;
      *(void *)&v20[6] = "-[RideBookingDataCoordinator enableRideBookingApplications:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100637E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100637E48(uint64_t a1, void *a2)
{
  id v3 = [a2 firstObject];
  if ([v3 conformsToProtocol:&OBJC_PROTOCOL___GEOMapItem]) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  __int16 v6 = +[GEOMapItemStorage mapItemStorageForGEOMapItem:v5];
  if (v6) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v6);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v7 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingDataCoordinator.m");
    id v9 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Finished looking up the name after issuing a Ticket. MapItem has been cleaned.  %llu", objc_msgSend(v5, "_muid"));
    *(_DWORD *)buf = 136315394;
    dispatch_time_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
  }
}

void sub_100638D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100638DAC(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained updateIdentifier];
    if (![v5 isEqual:*(void *)(a1 + 32)])
    {
LABEL_6:

      goto LABEL_7;
    }
    __int16 v6 = [*(id *)(a1 + 40) collectionItem];

    if (v7 && v6)
    {
      id v5 = [v4 publisherLogoImageView];
      [v5 setImage:v7];
      goto LABEL_6;
    }
  }
LABEL_7:
}

void sub_100638E68(uint64_t a1, void *a2, uint64_t a3, int a4, char a5)
{
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  dispatch_time_t v11 = WeakRetained;
  if ((a5 & 1) == 0)
  {
    __int16 v22 = sub_10057611C();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      uint64_t v23 = [*(id *)(a1 + 32) collectionItem];
      id v24 = [v23 collectionTitle];
      id v25 = [v24 string];
      *(_DWORD *)buf = 138412290;
      uint64_t v33 = v25;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "Cancelled image download for collection: %@", buf, 0xCu);
    }
    goto LABEL_19;
  }
  if (!WeakRetained) {
    goto LABEL_16;
  }
  __int16 v12 = [WeakRetained updateIdentifier];
  if (([v12 isEqual:*(void *)(a1 + 40)] & 1) == 0)
  {

    goto LABEL_16;
  }
  id v13 = [*(id *)(a1 + 32) collectionItem];

  if (!v13)
  {
LABEL_16:
    id v26 = sub_10057611C();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Cell doesn't exist OR identifier mistach", buf, 2u);
    }

    goto LABEL_19;
  }
  long long v14 = sub_10057611C();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    long long v15 = [v11 collectionItem];
    uint64_t v16 = [v15 collectionTitle];
    __int16 v17 = [v16 string];
    *(_DWORD *)buf = 138412290;
    uint64_t v33 = v17;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "[⌛]Received image for : %@", buf, 0xCu);
  }
  if (v9 && !a3)
  {
    __int16 v18 = sub_10057611C();
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_INFO);
    if (a4)
    {
      double v20 = 0.0;
      if (v19)
      {
        *(_WORD *)buf = 0;
        id v21 = "Received cached image. Displaying without animation.";
LABEL_22:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, v21, buf, 2u);
      }
    }
    else
    {
      double v20 = 0.100000001;
      if (v19)
      {
        *(_WORD *)buf = 0;
        id v21 = "Received non-cached image. Displaying with animation.";
        goto LABEL_22;
      }
    }

    id v27 = [v11 collectionImageView];
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_100639204;
    v30[3] = &unk_1012E5D58;
    void v30[4] = v11;
    id v31 = v9;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_100639254;
    v28[3] = &unk_1012E6160;
    void v28[4] = v11;
    id v29 = *(id *)(a1 + 48);
    +[UIView transitionWithView:v27 duration:5242882 options:v30 animations:v28 completion:v20];
  }
LABEL_19:
}

void sub_100639204(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) collectionImageView];
  [v2 setImage:v1];
}

void sub_100639254(uint64_t a1)
{
  id v2 = sub_10057611C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    id v3 = [*(id *)(a1 + 32) collectionItem];
    id v4 = [v3 collectionTitle];
    id v5 = [v4 string];
    __int16 v6 = +[NSDate date];
    [v6 timeIntervalSinceDate:*(void *)(a1 + 40)];
    int v8 = 138412546;
    id v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[⌛]Finished showing image for : %@ in %f", (uint8_t *)&v8, 0x16u);
  }
}

uint64_t sub_10063BB94(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];
    uint64_t v6 = (uint64_t)[v5 unsignedIntegerValue];
  }
  else
  {
    uint64_t v7 = +[LSApplicationProxy applicationProxyForIdentifier:v3];
    int v8 = v7;
    if (v7 && (id v9 = *(void **)(a1 + 40)) != 0)
    {
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_10063BCDC;
      void v12[3] = &unk_1012F2980;
      id v13 = v7;
      uint64_t v6 = (uint64_t)[v9 indexOfObjectPassingTest:v12];
    }
    else
    {
      uint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
    }
    __int16 v10 = +[NSNumber numberWithUnsignedInteger:v6];
    [*(id *)(a1 + 32) setObject:v10 forKeyedSubscript:v3];
  }
  return v6;
}

id sub_10063BCDC(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [*(id *)(a1 + 32) itemID];
  id v5 = [v3 isEqual:v4];

  return v5;
}

uint64_t sub_10063BD40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [v5 application];
  int v8 = [v7 identifier];

  id v9 = [v6 application];
  __int16 v10 = [v9 identifier];

  if (v8 && v10)
  {
    uint64_t v11 = [*(id *)(a1 + 32) objectForKeyedSubscript:v8];
    uint64_t v12 = [*(id *)(a1 + 32) objectForKeyedSubscript:v10];
    id v13 = (void *)v12;
    if (v11 && v12)
    {
      uint64_t v14 = (uint64_t)[(id)v12 compare:v11];
    }
    else
    {
      if (v11) {
        uint64_t v14 = -1;
      }
      else {
        uint64_t v14 = 1;
      }
      if (!(v11 | v12))
      {
        unint64_t v15 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
        unint64_t v16 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
        if (v15 == 0x7FFFFFFFFFFFFFFFLL || v16 == 0x7FFFFFFFFFFFFFFFLL)
        {
          BOOL v17 = v15 == 0x7FFFFFFFFFFFFFFFLL;
          if (v15 == 0x7FFFFFFFFFFFFFFFLL) {
            uint64_t v14 = 1;
          }
          else {
            uint64_t v14 = -1;
          }
          if (v17 && v16 == 0x7FFFFFFFFFFFFFFFLL)
          {
            __int16 v22 = [v5 application];
            __int16 v18 = [v22 name];
            BOOL v19 = [v6 application];
            double v20 = [v19 name];
            uint64_t v14 = (uint64_t)[v18 compare:v20];
          }
        }
        else if (v15 >= v16)
        {
          uint64_t v14 = v15 > v16;
        }
        else
        {
          uint64_t v14 = -1;
        }
      }
    }
  }
  else if (v8)
  {
    uint64_t v14 = -1;
  }
  else
  {
    uint64_t v14 = v10 != 0;
  }

  return v14;
}

id sub_10063C398(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a2;
  uint64_t v7 = [v5 objectForKeyedSubscript:a3];
  int v8 = [*(id *)(a1 + 32) objectForKeyedSubscript:v6];

  id v9 = [v7 compare:v8];
  return v9;
}

void sub_10063C65C(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  id v2 = (void *)qword_10160F320;
  qword_10160F320 = v1;
}

void sub_10063C808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_10063C820(uint64_t a1)
{
  BOOL result = +[UIApplication _maps_isAnySceneForegroundForRole:UIWindowSceneSessionRoleApplication];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_10063C9B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setDesiredIdleTimerState:*(void *)(a1 + 40) forReason:*(void *)(a1 + 48)];
}

void sub_10063CC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10063CC68(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _summaryString];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10063D084(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([*(id *)(a1 + 32) _idleTimerReasonPermittedInBackground:[v3 unsignedIntegerValue]] & 1) == 0) [*(id *)(a1 + 40) removeObjectForKey:v3]; {
}
  }

void sub_10063D2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10063D2DC(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id result = [a3 unsignedIntegerValue];
  if (result == (id)2)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_10063D424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_10063D448(uint64_t a1, uint64_t a2, void *a3)
{
  id result = [a3 unsignedIntegerValue];
  if (result == (id)2)
  {
    uint64_t v5 = *(void *)(a1 + 40);
  }
  else
  {
    if (result != (id)1) {
      return result;
    }
    uint64_t v5 = *(void *)(a1 + 32);
  }
  *(unsigned char *)(*(void *)(v5 + 8) + 24) = 1;
  return result;
}

void sub_10063D8F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10063D918(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [a2 object];
  LOBYTE(v3) = [v3 _shouldIgnoreScene:v4];

  if ((v3 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _asyncUpdateForApplicationState:1];
  }
}

void sub_10063D9B0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [a2 object];
  LOBYTE(v3) = [v3 _shouldIgnoreScene:v4];

  if ((v3 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _syncUpdateForApplicationState:[UIApplication _maps_isAnySceneForegroundForRole:UIWindowSceneSessionRoleApplication]];
  }
}

id sub_10063DC10(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateForApplicationState:*(unsigned __int8 *)(a1 + 40)];
}

id sub_10063DD48(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateForApplicationState:*(unsigned __int8 *)(a1 + 40)];
}

id sub_10063E0D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateIdleTimer];
}

void sub_10063E1B0(id a1)
{
  uint64_t v1 = objc_alloc_init(MapsInternalAlertPresentationController);
  uint64_t v2 = (void *)qword_10160F330;
  qword_10160F330 = (uint64_t)v1;
}

void sub_10063ED00(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) rootViewController];
  id v3 = [v2 presentedViewController];

  if (!v3)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(void **)(*(void *)(a1 + 40) + 8);
    [v5 removeObjectForKey:v4];
  }
}

void sub_10063F870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10063F888(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v7 = [a2 waypoint];
  unsigned __int8 v8 = [v7 isValid];

  if ((v8 & 1) == 0)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_10063FA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10063FAAC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = [a2 searchResult];
  unsigned int v6 = [v5 isDynamicCurrentLocation];

  if (v6)
  {
    [*(id *)(a1 + 32) addIndex:a3];
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
}

BOOL sub_10063FB70(id a1, SearchFieldItem *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = [(SearchFieldItem *)a2 composedWaypoint];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = v5;

  unsigned __int8 v7 = [v6 isServerProvidedWaypoint];
  return v7 ^ 1;
}

id sub_1006407EC(id a1, MapsRadarImageAttachment *a2, unint64_t a3)
{
  id v3 = [(MapsRadarImageAttachment *)a2 temporaryFileURL];
  uint64_t v4 = [v3 path];

  return v4;
}

id sub_10064083C(id a1, MapsRadarAttachment *a2, unint64_t a3)
{
  id v3 = [(MapsRadarAttachment *)a2 temporaryFileURL];
  uint64_t v4 = [v3 path];

  return v4;
}

id sub_10064088C(id a1, MapsRadarKeyword *a2, unint64_t a3)
{
  unint64_t v3 = [(MapsRadarKeyword *)a2 number];

  return +[NSNumber numberWithUnsignedInteger:v3];
}

void sub_1006408D0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_10160F340;
  qword_10160F340 = (uint64_t)v1;

  unint64_t v3 = (void *)qword_10160F340;

  [v3 setDateFormat:@"yyyy.MM.dd_HH-mm-ss"];
}

void sub_1006413A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006413CC(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateSharingFooterWithIdentity:v3];
}

void sub_100641A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100641A44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

void sub_100641DFC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) view];
  id v3 = [v2 superview];
  [v3 layoutIfNeeded];

  id v4 = [*(id *)(a1 + 32) cardPresentationController];
  [v4 updateHeightForCurrentLayout];
}

void sub_100643374(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v21 = a1;
    objc_storeStrong(WeakRetained + 2, *(id *)(a1 + 32));
    id v4 = [v3[2] rideOptionStatusMap];
    uint64_t v5 = [v4 allValues];
    [v3[1] setNumberOfInstalledExtensions:[v5 count]];

    id v6 = +[RidesharingAppPreferenceManager mostRecentSelectedAppIdentifers];
    unsigned __int8 v7 = [v6 mutableCopy];

    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    unsigned __int8 v8 = [v3[2] rideOptionStatusMap];
    id v9 = [v8 allValues];

    id v10 = [v9 countByEnumeratingWithState:&v22 objects:v26 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = 0;
      uint64_t v13 = *(void *)v23;
      do
      {
        for (unint64_t i = 0; i != v11; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v23 != v13) {
            objc_enumerationMutation(v9);
          }
          unint64_t v15 = *(void **)(*((void *)&v22 + 1) + 8 * i);
          [v3 _updateAnalyticsWithRideOptionStatus:v15];
          unint64_t v16 = [v15 application];
          unsigned int v17 = [v16 enabled];

          if (v17)
          {
            ++v12;
            __int16 v18 = [v15 application];
            BOOL v19 = [v18 identifier];
            [v7 removeObject:v19];
          }
        }
        id v11 = [v9 countByEnumeratingWithState:&v22 objects:v26 count:16];
      }
      while (v11);
    }
    else
    {
      uint64_t v12 = 0;
    }

    +[RidesharingAppPreferenceManager removeRecordedAppSelectionForAppIdentifiers:v7];
    [v3[1] setNumberOfEnabledExtensions:v12];
    double v20 = objc_loadWeakRetained(v3 + 3);
    [v20 rideOptionStateDidChange:*(void *)(v21 + 32)];
  }
  else
  {
    GEOFindOrCreateLog();
    double v20 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v28 = "RideBookingRideOptionStateObserverProxy.m";
      __int16 v29 = 1026;
      int v30 = 69;
      __int16 v31 = 2082;
      double v32 = "-[RideBookingRideOptionStateObserverProxy rideOptionStateDidChange:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    unsigned __int8 v7 = v20;
  }
}

uint64_t sub_100643890(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 33);
  return result;
}

void sub_100643D4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 160));
  _Unwind_Resume(a1);
}

void sub_100643D88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _didSelectModelWithVehicle:*(void *)(a1 + 32)];
}

void sub_100643DD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _didViewModelWithVehicle:*(void *)(a1 + 32)];
}

void sub_100643E28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

void sub_100643F58(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10064404C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_100109F4C();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User dismissed preferred networks suggestion.", v3, 2u);
    }

    WeakRetained[32] = 1;
    [WeakRetained _reloadAvailability];
  }
}

void sub_1006441D8(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100644294;
  v2[3] = &unk_1012E6690;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  id v3 = *(id *)(a1 + 32);
  if (qword_10160F350 != -1) {
    dispatch_once(&qword_10160F350, v2);
  }

  objc_destroyWeak(&v4);
}

void sub_100644294(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32)) {
      goto LABEL_3;
    }
    id v4 = sub_1005762E4();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136315906;
      id v9 = "-[PreferredNetworksFeatureDiscoverySource _didViewModelWithVehicle:]_block_invoke_2";
      __int16 v10 = 2080;
      id v11 = "PreferredNetworksFeatureDiscoverySource.m";
      __int16 v12 = 1024;
      int v13 = 202;
      __int16 v14 = 2080;
      unint64_t v15 = "vehicle";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", (uint8_t *)&v8, 0x26u);
    }

    if (sub_100BB36BC())
    {
      uint64_t v5 = sub_1005762E4();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = +[NSThread callStackSymbols];
        int v8 = 138412290;
        id v9 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v8, 0xCu);
      }
    }
    if (*(void *)(a1 + 32))
    {
LABEL_3:
      id v3 = sub_100109F4C();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        LOWORD(v8) = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "User viewed preferred networks onboarding suggestion.", (uint8_t *)&v8, 2u);
      }

      [WeakRetained _markVehicleAsViewed:*(void *)(a1 + 32)];
    }
    else
    {
      unsigned __int8 v7 = sub_100109F4C();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        LOWORD(v8) = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "User selected preferred networks source, but there were no candidate vehicle.", (uint8_t *)&v8, 2u);
      }
    }
  }
}

void sub_1006445A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32)) {
      goto LABEL_3;
    }
    id v6 = sub_1005762E4();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v9 = 136315906;
      __int16 v10 = "-[PreferredNetworksFeatureDiscoverySource _didSelectModelWithVehicle:]_block_invoke";
      __int16 v11 = 2080;
      __int16 v12 = "PreferredNetworksFeatureDiscoverySource.m";
      __int16 v13 = 1024;
      int v14 = 220;
      __int16 v15 = 2080;
      unint64_t v16 = "vehicle";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", (uint8_t *)&v9, 0x26u);
    }

    if (sub_100BB36BC())
    {
      unsigned __int8 v7 = sub_1005762E4();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        int v8 = +[NSThread callStackSymbols];
        int v9 = 138412290;
        __int16 v10 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v9, 0xCu);
      }
    }
    if (*(void *)(a1 + 32))
    {
LABEL_3:
      id v3 = +[UIApplication sharedMapsDelegate];
      id v4 = [v3 appCoordinator];
      uint64_t v5 = [v4 baseActionCoordinator];

      [v5 presentPreferredNetworksOnboardingForVehicle:*(void *)(a1 + 32)];
    }
    else
    {
      uint64_t v5 = sub_100109F4C();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
      {
        LOWORD(v9) = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "User selected preferred networks source, but there were no candidate vehicle.", (uint8_t *)&v9, 2u);
      }
    }
  }
}

id sub_100644A6C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _consumeUpdatedGarage:*(void *)(a1 + 40)];
}

uint64_t sub_100644A78(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (![v3 isPureElectricVehicle]
    || ([v3 preferredChargingNetworks],
        id v4 = objc_claimAutoreleasedReturnValue(),
        id v5 = [v4 count],
        v4,
        v5))
  {
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_9;
  }
  if (([*(id *)(a1 + 32) _shouldShowForVehicle:v3] & 1) == 0)
  {
    unsigned __int8 v7 = sub_100109F4C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [v3 displayName];
      int v10 = 138412290;
      __int16 v11 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "will not offer preferred networks onboarding for %@, because it was shown many times already.", (uint8_t *)&v10, 0xCu);
    }
    goto LABEL_8;
  }
  uint64_t v6 = 1;
LABEL_9:

  return v6;
}

id sub_100646B28(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateShieldView];
}

void sub_100647784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1006477AC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  v8.size.height = a5;
  v8.size.width = a4;
  v8.origin.y = a3;
  v8.origin.x = a2;
  *(MKMapRect *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = MKMapRectUnion(*(MKMapRect *)(*(void *)(*(void *)(a1 + 40)+ 8)+ 32), v8);
  uint64_t v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

void sub_100647814(uint64_t a1, double a2, double a3, double a4, double a5)
{
  v8.size.height = a5;
  v8.size.width = a4;
  v8.origin.y = a3;
  v8.origin.x = a2;
  *(MKMapRect *)(*(void *)(*(void *)(a1 + 40) + 8) + 32) = MKMapRectUnion(*(MKMapRect *)(*(void *)(*(void *)(a1 + 40)+ 8)+ 32), v8);
  uint64_t v6 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v6);
}

uint64_t sub_10064787C(uint64_t a1)
{
  return (*(uint64_t (**)(void, double, double, double, double))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 48), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 56));
}

void sub_100647DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100647E20(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = sub_10000AF10();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    id v5 = WeakRetained;
    uint64_t v6 = (objc_class *)objc_opt_class();
    unsigned __int8 v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      MKMapRect v8 = [v5 performSelector:"accessibilityIdentifier"];
      int v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        int v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    int v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

    *(_DWORD *)buf = 138543618;
    int v30 = v10;
    __int16 v31 = 1024;
    int v32 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] User exited VLF Crowdsourcing permission card with answer: %d", buf, 0x12u);

LABEL_9:
    __int16 v11 = [WeakRetained containerViewController];
    __int16 v12 = [v11 chromeViewController];
    __int16 v13 = [v12 userLocationView];
    id v14 = [v13 vlfMode];

    __int16 v15 = sub_10000AF10();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_INFO);
    if (v14)
    {
      if (!v16)
      {
LABEL_17:

        [WeakRetained showVLF];
        goto LABEL_26;
      }
      id v17 = WeakRetained;
      __int16 v18 = (objc_class *)objc_opt_class();
      BOOL v19 = NSStringFromClass(v18);
      if (objc_opt_respondsToSelector())
      {
        double v20 = [v17 performSelector:"accessibilityIdentifier"];
        uint64_t v21 = v20;
        if (v20 && ![v20 isEqualToString:v19])
        {
          long long v22 = +[NSString stringWithFormat:@"%@<%p, %@>", v19, v17, v21];

          goto LABEL_16;
        }
      }
      long long v22 = +[NSString stringWithFormat:@"%@<%p>", v19, v17];
LABEL_16:

      *(_DWORD *)buf = 138543362;
      int v30 = v22;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "[%{public}@] VLF is still eligible to be shown; showing now",
        buf,
        0xCu);

      goto LABEL_17;
    }
    if (!v16)
    {
LABEL_25:

      goto LABEL_26;
    }
    id v23 = WeakRetained;
    long long v24 = (objc_class *)objc_opt_class();
    long long v25 = NSStringFromClass(v24);
    if (objc_opt_respondsToSelector())
    {
      id v26 = [v23 performSelector:"accessibilityIdentifier"];
      id v27 = v26;
      if (v26 && ![v26 isEqualToString:v25])
      {
        id v28 = +[NSString stringWithFormat:@"%@<%p, %@>", v25, v23, v27];

        goto LABEL_24;
      }
    }
    id v28 = +[NSString stringWithFormat:@"%@<%p>", v25, v23];
LABEL_24:

    *(_DWORD *)buf = 138543362;
    int v30 = v28;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "[%{public}@] VLF is no longer eligible to be shown", buf, 0xCu);

    goto LABEL_25;
  }
LABEL_26:
}

void sub_100649B6C(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = sub_1000B944C();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "update collection error %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100649EE0(uint64_t a1)
{
  uint64_t v1 = a1;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v3 = *(id *)(v1 + 32);
    id v4 = [v3 countByEnumeratingWithState:&v24 objects:v28 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v25;
      id v23 = WeakRetained;
      do
      {
        for (unint64_t i = 0; i != v5; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v25 != v6) {
            objc_enumerationMutation(v3);
          }
          MKMapRect v8 = *(void **)(*((void *)&v24 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v9 = v8;
            if (v9)
            {
              int v10 = v9;
              __int16 v11 = [(id)objc_opt_class() existingCollectionItemForMapItem:v9 error:*(void *)(v1 + 40)];
              if (v11)
              {
                [*(id *)(v1 + 48) addPlace:v11];
              }
              else
              {
                id v12 = [objc_alloc((Class)MSCollectionPlaceItem) initWithCollection:*(void *)(v1 + 48)];
                id v13 = v3;
                uint64_t v14 = v1;
                __int16 v15 = [v10 _geoMapItem];
                BOOL v16 = +[GEOMapItemStorage mapItemStorageForGEOMapItem:v15];
                [v12 setMapItemStorage:v16];

                id v17 = [v10 name];
                [v12 setCustomName:v17];

                uint64_t v1 = v14;
                id v3 = v13;
                [*(id *)(v1 + 56) addObject:v12];

                id WeakRetained = v23;
              }
            }
          }
        }
        id v5 = [v3 countByEnumeratingWithState:&v24 objects:v28 count:16];
      }
      while (v5);
    }

    [*(id *)(v1 + 56) addObject:*(void *)(v1 + 48)];
    __int16 v18 = +[MapsSyncStore sharedStore];
    [v18 saveWithObjects:*(void *)(v1 + 56) error:0];

    id v19 = [*(id *)(v1 + 32) count];
    [WeakRetained endModification];
    if (v19)
    {
      [WeakRetained rebuildContent];
      double v20 = [WeakRetained collectionOperation];
      [v20 touchCollection:*(void *)(v1 + 48)];

      uint64_t v21 = *(void *)(v1 + 64);
      if (v21) {
        (*(void (**)(uint64_t, void))(v21 + 16))(v21, 0);
      }
    }
    else if (*(void *)(v1 + 64))
    {
      long long v22 = +[NSError GEOErrorWithCode:0 reason:@"No object to add"];
      (*(void (**)(void))(*(void *)(v1 + 64) + 16))();
    }
  }
}

void sub_10064A688(uint64_t a1)
{
  id v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id location = v2;
    id v25 = WeakRetained;
    long long v26 = +[NSMutableArray array];
    long long v31 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    id obj = *(id *)(a1 + 32);
    id v4 = [obj countByEnumeratingWithState:&v31 objects:v37 count:16];
    if (v4)
    {
      id v5 = v4;
      id v6 = 0;
      uint64_t v7 = *(void *)v32;
      do
      {
        for (unint64_t i = 0; i != v5; unint64_t i = (char *)i + 1)
        {
          id v9 = v6;
          if (*(void *)v32 != v7) {
            objc_enumerationMutation(obj);
          }
          int v10 = *(void **)(*((void *)&v31 + 1) + 8 * i);
          [*(id *)(a1 + 40) removePlace:v10];
          __int16 v11 = +[MapsSyncStore sharedStore];
          uint64_t v36 = *(void *)(a1 + 40);
          id v12 = +[NSArray arrayWithObjects:&v36 count:1];
          id v30 = v6;
          [v11 saveWithObjects:v12 error:&v30];
          id v6 = v30;

          if (!+[LibraryUIUtilities isMyPlacesEnabled])
          {
            id v13 = [v10 fetchCollections];
            id v14 = [v13 count];

            if (!v14) {
              [v26 addObject:v10];
            }
          }
        }
        id v5 = [obj countByEnumeratingWithState:&v31 objects:v37 count:16];
      }
      while (v5);
    }
    else
    {
      id v6 = 0;
    }

    __int16 v15 = +[MapsSyncStore sharedStore];
    id v29 = v6;
    [v15 deleteWithObjects:v26 error:&v29];
    id v16 = v29;

    id v17 = +[MapsSyncStore sharedStore];
    uint64_t v35 = *(void *)(a1 + 40);
    __int16 v18 = +[NSArray arrayWithObjects:&v35 count:1];
    id v28 = v16;
    [v17 saveWithObjects:v18 error:&v28];
    id v19 = v28;

    id v20 = objc_loadWeakRetained(location);
    [v20 endModification];

    id v21 = objc_loadWeakRetained(location);
    long long v22 = [v21 collectionOperation];
    [v22 touchCollection:*(void *)(a1 + 40)];

    uint64_t v23 = *(void *)(a1 + 48);
    if (v23) {
      (*(void (**)(uint64_t, id))(v23 + 16))(v23, v19);
    }

    id WeakRetained = v25;
  }
}

uint64_t sub_10064AAEC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_10064AC40(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10064AC5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v8 = v3;
  if (v4)
  {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v3);
    id v3 = v8;
  }
  if (!v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v6 = WeakRetained;
    if (WeakRetained)
    {
      [WeakRetained setNeedsToBePersisted:0];
      [v6 setStagedImage:0];
      uint64_t v7 = (void *)v6[12];
      v6[12] = 0;
    }
    id v3 = v8;
  }
}

void sub_10064B8AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_10064B8F8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setSubscriptionInfos:v5];
    v4[120] = 1;
    [v4 _updateUpdateAllModels];
    [v4 _updateContentAnimated:0];
  }
}

void sub_10064B980(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setSuggestedRegions:v5];
    [v4 _updateContentAnimated:0];
  }
}

void sub_10064B9F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateAutoUpdateRowSubtitle];
    [v2 _updateContentAnimated:0];
    id WeakRetained = v2;
  }
}

void sub_10064BDE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10064BE1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained diffableDataSource];
    uint64_t v7 = [v6 snapshot];

    uint64_t v19 = *(void *)(a1 + 32);
    id v8 = +[NSArray arrayWithObjects:&v19 count:1];
    [v7 deleteItemsWithIdentifiers:v8];

    id v9 = [v5 diffableDataSource];
    [v9 applySnapshot:v7 animatingDifferences:1];

    int v10 = [v5 subscriptionManager];
    __int16 v11 = [*(id *)(a1 + 32) subscription];
    id v12 = [v11 identifier];
    id v13 = _NSConcreteStackBlock;
    uint64_t v14 = 3221225472;
    __int16 v15 = sub_10064BFF0;
    id v16 = &unk_1012F2E28;
    id v17 = *(id *)(a1 + 32);
    id v18 = v3;
    [v10 removeSubscriptionWithIdentifier:v12 callbackQueue:&_dispatch_main_q completionHandler:&v13];

    +[GEOAPPortal captureUserAction:target:value:](GEOAPPortal, "captureUserAction:target:value:", 383, 88, 0, v13, v14, v15, v16);
  }
}

void sub_10064BFF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_1000493C0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412546;
      uint64_t v8 = v6;
      __int16 v9 = 2112;
      id v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error removing subscriptionInfo: %@, error: %@", (uint8_t *)&v7, 0x16u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10064C0D4(uint64_t a1, void *a2)
{
  uint64_t v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained offlineDelegate];
    [v5 didSelectRenameSubscriptionInfo:*(void *)(a1 + 32) completionHandler:&stru_1012F2E70];

    +[GEOAPPortal captureUserAction:385 target:88 value:0];
    v6[2](v6, 1);
  }
}

void sub_10064C184(id a1, BOOL a2)
{
  if (a2) {
    +[GEOAPPortal captureUserAction:378 target:88 value:0];
  }
}

BOOL sub_10064CB88(id a1, OfflineMapsSuggestionModelData *a2)
{
  id v2 = a2;
  id v3 = +[MapsOfflineUIHelper sharedHelper];
  id v4 = [(OfflineMapsSuggestionModelData *)v2 mapRegion];

  GEOConfigGetDouble();
  LOBYTE(v2) = [v3 isRegionDownloaded:v4 requireFullyDownloaded:0 coverageRequirement:];

  return (char)v2;
}

void sub_10064CCF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10064CD18(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v7)
    {
      __int16 v9 = sub_1000493C0();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v7;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Error fetching last updated date: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    objc_storeStrong(WeakRetained + 16, a2);
    [WeakRetained _updateUpdateAllModels];
    [WeakRetained _updateContentAnimated:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_10064CF9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10064CFC8(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (!v6 && v7)
    {
      __int16 v9 = sub_1000493C0();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138412290;
        id v11 = v7;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Error fetching expired subscriptions: %@", (uint8_t *)&v10, 0xCu);
      }
    }
    objc_storeStrong(WeakRetained + 17, a2);
    [WeakRetained _updateContentAnimated:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_10064D52C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10064D558(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = sub_1000493C0();
    uint64_t v8 = v7;
    if (v5)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        int v11 = 138543362;
        id v12 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error fetching disk space from paired device: %{public}@", (uint8_t *)&v11, 0xCu);
      }
      goto LABEL_9;
    }
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      __int16 v9 = *(void **)(a1 + 40);
      int v11 = 134218240;
      id v12 = v9;
      __int16 v13 = 2048;
      uint64_t v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Paired device space needed (%lld), paired device space available (%lld)", (uint8_t *)&v11, 0x16u);
    }

    uint64_t v10 = *(void *)(a1 + 40) - a2;
    if (v10 >= 1)
    {
      uint64_t v8 = [WeakRetained offlineDelegate];
      [v8 showPairedDeviceDiskSpaceDialogWithRequiredDiskSpace:v10];
LABEL_9:
    }
  }
}

void sub_10064E060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak((id *)(v11 - 136));
  _Unwind_Resume(a1);
}

void sub_10064E0D0(uint64_t a1)
{
  id v2 = +[MapsOfflineUIHelper sharedHelper];
  [v2 pauseDownloadForSubscriptionInfo:*(void *)(a1 + 32)];
}

void sub_10064E128(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained offlineDelegate];
    [v3 didSelectResumeSubscriptionInfo:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

void sub_10064E18C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v2 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) row]);
    id v3 = [v2 stringValue];
    +[GEOAPPortal captureUserAction:381 target:90 value:v3];

    id v4 = [WeakRetained offlineDelegate];
    [v4 didSelectSuggestion:*(void *)(a1 + 40)];
  }
}

void sub_10064E250(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained offlineDelegate];
    [v2 didSelectDownloadNewMap];

    +[GEOAPPortal captureUserAction:381 target:86 value:0];
    id WeakRetained = v3;
  }
}

void sub_10064E85C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10064E884(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained offlineDelegate];
    [v2 didSelectExpiredMaps];

    id WeakRetained = v3;
  }
}

void sub_10064E8E0(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  id v3 = a3;
  id v5 = +[UIColor secondaryLabelColor];
  id v4 = [(UIListContentConfiguration *)v3 secondaryTextProperties];

  [v4 setColor:v5];
}

void sub_10064EAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10064EB1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained offlineDelegate];
    [v2 didSelectDownloadNewMap];

    +[GEOAPPortal captureUserAction:381 target:86 value:0];
    id WeakRetained = v3;
  }
}

void sub_10064EB90(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  id v5 = a3;
  [(UIListContentConfiguration *)v5 directionalLayoutMargins];
  double v4 = v3;
  [(UIListContentConfiguration *)v5 directionalLayoutMargins];
  -[UIListContentConfiguration setDirectionalLayoutMargins:](v5, "setDirectionalLayoutMargins:", 16.0, v4, 16.0);
}

void sub_10064ED74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10064ED9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained offlineDelegate];
    [v2 didSelectUpdateAll];

    +[GEOAPPortal captureUserAction:374 target:88 value:0];
    id WeakRetained = v3;
  }
}

void sub_10064EE10(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  __int16 v9 = a3;
  id v3 = +[UIColor secondaryLabelColor];
  double v4 = [(UIListContentConfiguration *)v9 secondaryTextProperties];
  [v4 setColor:v3];

  [(UIListContentConfiguration *)v9 setTextToSecondaryTextVerticalPadding:2.0];
  id v5 = [(UIListContentConfiguration *)v9 secondaryText];

  [(UIListContentConfiguration *)v9 directionalLayoutMargins];
  double v7 = v6;
  [(UIListContentConfiguration *)v9 directionalLayoutMargins];
  double v8 = 8.0;
  if (!v5) {
    double v8 = 16.0;
  }
  -[UIListContentConfiguration setDirectionalLayoutMargins:](v9, "setDirectionalLayoutMargins:", v8, v7, v8);
}

void sub_10064EFE8(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  __int16 v9 = a3;
  id v3 = +[UIColor secondaryLabelColor];
  double v4 = [(UIListContentConfiguration *)v9 secondaryTextProperties];
  [v4 setColor:v3];

  [(UIListContentConfiguration *)v9 setTextToSecondaryTextVerticalPadding:2.0];
  id v5 = [(UIListContentConfiguration *)v9 secondaryText];

  [(UIListContentConfiguration *)v9 directionalLayoutMargins];
  double v7 = v6;
  [(UIListContentConfiguration *)v9 directionalLayoutMargins];
  double v8 = 8.0;
  if (!v5) {
    double v8 = 16.0;
  }
  -[UIListContentConfiguration setDirectionalLayoutMargins:](v9, "setDirectionalLayoutMargins:", v8, v7, v8);
}

void sub_10064F950(id a1, UIAction *a2)
{
}

void sub_10064F964(id a1, UIAction *a2)
{
}

void sub_10064F978(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  id v3 = a3;
  double v4 = +[UIColor systemBlueColor];
  id v8 = +[ImageIconWithBackgroundConfiguration offlineIconConfigurationWithBackgroundColor:v4];

  id v5 = +[UIImageSymbolConfiguration configurationWithWeight:4];
  double v6 = +[UIImage systemImageNamed:@"arrow.down" withConfiguration:v5];

  double v7 = [v6 _maps_imageIconWithBackgroundConfiguration:v8];
  [(UIListContentConfiguration *)v3 setImage:v7];

  [(UIListContentConfiguration *)v3 setImageToTextPadding:10.0];
}

uint64_t sub_10064FC80(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return GEOConfigGetBOOL();
  }
  else {
    return 0;
  }
}

uint64_t sub_10064FCA0(uint64_t result)
{
  if (*(unsigned char *)(result + 32)) {
    return GEOConfigSetBOOL();
  }
  return result;
}

void sub_10064FCC0(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  __int16 v13 = a3;
  id v3 = +[UIColor systemGreenColor];
  double v4 = +[ImageIconWithBackgroundConfiguration offlineIconConfigurationWithBackgroundColor:v3];

  id v5 = +[UIImageSymbolConfiguration configurationWithWeight:5];
  double v6 = +[UIImage systemImageNamed:@"arrow.triangle.2.circlepath" withConfiguration:v5];

  double v7 = [v6 _maps_imageIconWithBackgroundConfiguration:v4];
  [(UIListContentConfiguration *)v13 setImage:v7];

  [(UIListContentConfiguration *)v13 setImageToTextPadding:10.0];
  id v8 = +[UIColor secondaryLabelColor];
  __int16 v9 = [(UIListContentConfiguration *)v13 secondaryTextProperties];
  [v9 setColor:v8];

  [(UIListContentConfiguration *)v13 setTextToSecondaryTextVerticalPadding:2.0];
  uint64_t v10 = [(UIListContentConfiguration *)v13 secondaryText];

  if (v10)
  {
    [(UIListContentConfiguration *)v13 directionalLayoutMargins];
    double v12 = v11;
    [(UIListContentConfiguration *)v13 directionalLayoutMargins];
    -[UIListContentConfiguration setDirectionalLayoutMargins:](v13, "setDirectionalLayoutMargins:", 10.0, v12, 10.0);
  }
}

BOOL sub_1006501B0(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_1006501C0(id a1, BOOL a2)
{
}

void sub_1006501D4(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  id v3 = a3;
  double v4 = +[UIColor systemOrangeColor];
  id v12 = +[ImageIconWithBackgroundConfiguration offlineIconConfigurationWithBackgroundColor:v4];

  id v5 = +[UIImageSymbolConfiguration configurationWithWeight:4];
  double v6 = +[UIImage systemImageNamed:@"internaldrive.fill" withConfiguration:v5];

  double v7 = [v6 _maps_imageIconWithBackgroundConfiguration:v12];
  [(UIListContentConfiguration *)v3 setImage:v7];

  [(UIListContentConfiguration *)v3 setImageToTextPadding:10.0];
  id v8 = +[UIColor secondaryLabelColor];
  __int16 v9 = [(UIListContentConfiguration *)v3 secondaryTextProperties];
  [v9 setColor:v8];

  [(UIListContentConfiguration *)v3 setTextToSecondaryTextVerticalPadding:2.0];
  [(UIListContentConfiguration *)v3 directionalLayoutMargins];
  double v11 = v10;
  [(UIListContentConfiguration *)v3 directionalLayoutMargins];
  -[UIListContentConfiguration setDirectionalLayoutMargins:](v3, "setDirectionalLayoutMargins:", 10.0, v11, 10.0);
}

void sub_100650560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_100650590(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return GEOConfigGetBOOL();
  }
  else {
    return 0;
  }
}

void sub_1006505B0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 48))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v5 = WeakRetained;
    if (WeakRetained)
    {
      double v6 = [WeakRetained offlineDelegate];
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_1006506A0;
      void v7[3] = &unk_1012E5D30;
      objc_copyWeak(&v8, (id *)(a1 + 40));
      void v7[4] = v5;
      [v6 didSetSyncToWatch:a2 completionHandler:v7];

      objc_destroyWeak(&v8);
    }
  }
}

void sub_10065068C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1006506A0(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if ((a2 & 1) == 0 && WeakRetained)
  {
    double v6 = [*(id *)(a1 + 32) diffableDataSource];
    double v7 = [v6 snapshot];

    double v10 = v5;
    id v8 = +[NSArray arrayWithObjects:&v10 count:1];
    [v7 reconfigureItemsWithIdentifiers:v8];

    __int16 v9 = [*(id *)(a1 + 32) diffableDataSource];
    [v9 applySnapshot:v7 animatingDifferences:0];
  }
}

void sub_10065078C(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  __int16 v13 = a3;
  id v3 = +[UIColor blackColor];
  double v4 = +[ImageIconWithBackgroundConfiguration offlineIconConfigurationWithBackgroundColor:v3];

  id v5 = +[UIImageSymbolConfiguration configurationWithWeight:4];
  double v6 = +[UIImage systemImageNamed:@"applewatch" withConfiguration:v5];

  double v7 = [v6 _maps_imageIconWithBackgroundConfiguration:v4];
  [(UIListContentConfiguration *)v13 setImage:v7];

  [(UIListContentConfiguration *)v13 setImageToTextPadding:10.0];
  id v8 = +[UIColor secondaryLabelColor];
  __int16 v9 = [(UIListContentConfiguration *)v13 secondaryTextProperties];
  [v9 setColor:v8];

  [(UIListContentConfiguration *)v13 setTextToSecondaryTextVerticalPadding:2.0];
  double v10 = [(UIListContentConfiguration *)v13 secondaryText];

  if (v10)
  {
    [(UIListContentConfiguration *)v13 directionalLayoutMargins];
    double v12 = v11;
    [(UIListContentConfiguration *)v13 directionalLayoutMargins];
    -[UIListContentConfiguration setDirectionalLayoutMargins:](v13, "setDirectionalLayoutMargins:", 10.0, v12, 10.0);
  }
}

uint64_t sub_100650D28(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return GEOConfigGetBOOL();
  }
  else {
    return 0;
  }
}

uint64_t sub_100650D48(uint64_t result)
{
  if (*(unsigned char *)(result + 32)) {
    return GEOConfigSetBOOL();
  }
  return result;
}

void sub_100650D68(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
  id v3 = a3;
  double v4 = +[UIColor systemGrayColor];
  id v12 = +[ImageIconWithBackgroundConfiguration offlineIconConfigurationWithBackgroundColor:v4];

  id v5 = +[UIImageSymbolConfiguration configurationWithWeight:4];
  double v6 = +[UIImage systemImageNamed:@"icloud.slash.fill" withConfiguration:v5];

  double v7 = [v6 _maps_imageIconWithBackgroundConfiguration:v12];
  [(UIListContentConfiguration *)v3 setImage:v7];

  [(UIListContentConfiguration *)v3 setImageToTextPadding:10.0];
  id v8 = +[UIColor secondaryLabelColor];
  __int16 v9 = [(UIListContentConfiguration *)v3 secondaryTextProperties];
  [v9 setColor:v8];

  [(UIListContentConfiguration *)v3 setTextToSecondaryTextVerticalPadding:2.0];
  [(UIListContentConfiguration *)v3 directionalLayoutMargins];
  double v11 = v10;
  [(UIListContentConfiguration *)v3 directionalLayoutMargins];
  -[UIListContentConfiguration setDirectionalLayoutMargins:](v3, "setDirectionalLayoutMargins:", 10.0, v11, 10.0);
}

void sub_100651904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10065192C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained onTransitionFromState:a2 toState:a3];
  }
}

id sub_100651A68(uint64_t a1)
{
  return [*(id *)(a1 + 32) resetCollectionViewLayout];
}

id sub_100651DB0()
{
  if (qword_10160F370 != -1) {
    dispatch_once(&qword_10160F370, &stru_1012F3220);
  }
  v0 = (void *)qword_10160F368;

  return v0;
}

void sub_100651F30(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 apiController];
  uint64_t v6 = [v5 isWorldwideSection:v4];

  double v7 = [CitySelectorSection alloc];
  id v8 = [*(id *)(a1 + 32) collectionView];
  [v8 frame];
  double v10 = v9;
  double v11 = [*(id *)(a1 + 32) collectionView];
  uint64_t v14 = [(CitySelectorSection *)v7 initWithSectionKind:v6 usingMaxWidth:v11 usingTraitEnvironment:v10];

  id v12 = [*(id *)(a1 + 32) apiController];
  __int16 v13 = [v12 titleForSection:v4];

  [(CitySelectorSection *)v14 setSectionTitle:v13];
  [*(id *)(a1 + 40) addObject:v14];
}

id sub_1006529F4(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) sections];
  id v5 = [v4 objectAtIndex:a2];

  uint64_t v6 = [v5 layoutForSectionUsingTraitsEnvironment:*(void *)(a1 + 32) usingWidth:*(double *)(a1 + 40)];

  return v6;
}

void sub_100652E0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v12 = WeakRetained;
    id v2 = [WeakRetained loadingView];
    if (!v2)
    {
      uint64_t v3 = [v12 apiController];
      id v4 = [v3 currentState];

      id WeakRetained = v12;
      if (v4 != (id)1) {
        goto LABEL_6;
      }
      id v5 = [LoadingModeView alloc];
      uint64_t v6 = +[NSBundle mainBundle];
      double v7 = [v6 localizedStringForKey:@"Loading ..." value:@"localized string not found" table:0];
      id v8 = [(LoadingModeView *)v5 initWithTitle:v7];
      [v12 setLoadingView:v8];

      double v9 = [v12 loadingView];
      [v9 setTranslatesAutoresizingMaskIntoConstraints:0];

      double v10 = [v12 contentView];
      double v11 = [v12 loadingView];
      [v10 addSubview:v11];

      id v2 = [v12 loadingView];
      [v12 activateConstraintsForViewPinnedBelowHeader:v2];
    }

    id WeakRetained = v12;
  }
LABEL_6:
}

void sub_100653274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100653298(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v2 = [WeakRetained dataSource];

    id WeakRetained = v4;
    if (!v2)
    {
      uint64_t v3 = [v4 apiController];
      [v3 fetchCitySelectorView:&stru_1012F3200];

      id WeakRetained = v4;
    }
  }
}

id sub_1006534A0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 160) hairLineAlpha];
}

id sub_1006534B4(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 160) setHairLineAlpha:];
}

void sub_100653748(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CitySelectorViewController");
  id v2 = (void *)qword_10160F368;
  qword_10160F368 = (uint64_t)v1;
}

id sub_100653868(uint64_t a1)
{
  switch(a1)
  {
    case 5:
      uint64_t v1 = +[GEOFeatureStyleAttributes schoolStyleAttributes];
      goto LABEL_7;
    case 3:
      uint64_t v1 = +[GEOFeatureStyleAttributes workStyleAttributes];
      goto LABEL_7;
    case 2:
      uint64_t v1 = +[GEOFeatureStyleAttributes homeStyleAttributes];
LABEL_7:
      id v2 = (void *)v1;
      goto LABEL_9;
  }
  id v2 = 0;
LABEL_9:
  uint64_t v3 = +[UIScreen mainScreen];
  [v3 scale];
  id v4 = +[MKIconManager imageForStyle:size:forScale:format:](MKIconManager, "imageForStyle:size:forScale:format:", v2, 3, 0);

  return v4;
}

void sub_100653E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100653E58(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100653F30;
  void v6[3] = &unk_1012F3268;
  id v4 = *(void **)(a1 + 48);
  id v7 = v3;
  v9[1] = v4;
  id v5 = v3;
  objc_copyWeak(v9, (id *)(a1 + 40));
  id v8 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

  objc_destroyWeak(v9);
}

void sub_100653F30(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_10065416C;
  v24[3] = &unk_1012F3240;
  void v24[4] = *(void *)(a1 + 56);
  id v3 = +[NSPredicate predicateWithBlock:v24];
  id v4 = [v2 filteredArrayUsingPredicate:v3];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v19 = a1;
    id v6 = objc_alloc_init((Class)NSMutableArray);
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    id v7 = v4;
    id v8 = [v7 countByEnumeratingWithState:&v20 objects:v25 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v21;
      do
      {
        for (unint64_t i = 0; i != v9; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v21 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void *)(*((void *)&v20 + 1) + 8 * i);
          __int16 v13 = [RAPPersonalPlaceSelectionQuestion alloc];
          uint64_t v14 = [WeakRetained report];
          __int16 v15 = [(RAPPersonalPlaceSelectionQuestion *)v13 initWithReport:v14 parentQuestion:WeakRetained shortcut:v12];

          [v6 addObject:v15];
        }
        id v9 = [v7 countByEnumeratingWithState:&v20 objects:v25 count:16];
      }
      while (v9);
    }

    id v16 = [v6 copy];
    id v17 = (void *)*((void *)WeakRetained + 7);
    *((void *)WeakRetained + 7) = v16;

    *((unsigned char *)WeakRetained + 112) = 0;
    uint64_t v18 = *(void *)(v19 + 40);
    if (v18) {
      (*(void (**)(void))(v18 + 16))();
    }
  }
}

BOOL sub_10065416C(uint64_t a1, void *a2)
{
  return [a2 type] == *(id *)(a1 + 32);
}

id sub_100656E54()
{
  if (qword_10160F388 != -1) {
    dispatch_once(&qword_10160F388, &stru_1012F33A8);
  }
  v0 = (void *)qword_10160F380;

  return v0;
}

id sub_100658078(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutBelowIfNeeded];
}

void sub_10065813C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 32);
  id v4 = a2;
  id v5 = [v3 objectForKey:v4];
  [*(id *)(a1 + 32) _requestSeparatorForStepView:v4 atIndexPath:v5];
}

TransitDirectionsStepView *__cdecl sub_100658D60(id a1, _TransitDirectionsListViewInfo *a2, unint64_t a3)
{
  return [(_TransitDirectionsListViewInfo *)a2 stepView];
}

void sub_100658D68(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 stepView];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100658EBC;
  void v11[3] = &unk_1012E5D08;
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  id v4 = v12;
  +[UIView performWithoutAnimation:v11];
  id v5 = *(void **)(*(void *)(a1 + 32) + 16);
  id v6 = [v3 indexPath];
  [v5 setObject:v4 forKey:v6];

  id v7 = *(void **)(*(void *)(a1 + 32) + 24);
  id v8 = [v4 reuseIdentifier];
  [v7 setObject:v4 forKey:v8];

  id v9 = *(void **)(*(void *)(a1 + 32) + 32);
  uint64_t v10 = [v3 indexPath];

  [v9 setObject:v10 forKey:v4];
}

id sub_100658EBC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateForParentExpansionOrCollapse];
}

GEOComposedRouteAdvisory *__cdecl sub_10065A5FC(id a1, TransitDirectionsStepView *a2)
{
  id v2 = [(TransitDirectionsStepView *)a2 transitListItem];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  if (v4)
  {
    id v5 = [v4 incidentMessage];
    id v6 = [v5 advisory];
  }
  else
  {
    id v6 = 0;
  }

  return (GEOComposedRouteAdvisory *)v6;
}

BOOL sub_10065A6A0(uint64_t a1)
{
  uint64_t v1 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t sub_10065AA90(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(*(void *)(a1 + 32) + 8);
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 arrangedSubviews];
  id v9 = [v8 indexOfObject:v7];

  uint64_t v10 = [*(id *)(*(void *)(a1 + 32) + 8) arrangedSubviews];
  id v11 = [v10 indexOfObject:v6];

  if (v9 >= v11) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = -1;
  }
  if (v9 > v11) {
    return 1;
  }
  else {
    return v12;
  }
}

void sub_10065AF7C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TransitListView");
  BOOL v2 = (void *)qword_10160F380;
  qword_10160F380 = (uint64_t)v1;
}

void sub_10065CDB8(_Unwind_Exception *a1)
{
}

void sub_10065CEAC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = objc_alloc_init(RAPWebBundleTransitSystemContext);
    id v8 = [*(id *)(a1 + 32) systemName];
    [(RAPWebBundleTransitSystemContext *)v7 setSystem:v8];

    [(RAPWebBundleTransitSystemContext *)v7 setLines:v5];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObjectsFromArray:v6];
    uint64_t v10 = v7;
    id v9 = +[NSArray arrayWithObjects:&v10 count:1];
    [*(id *)(a1 + 40) setTransitInfos:v9];

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(a1 + 40));
  }
}

RAPWebBundleHoursContext *sub_10065CFD0(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = HIDWORD(a2);
  id v5 = objc_alloc_init(RAPWebBundleHoursContext);
  [(RAPWebBundleHoursContext *)v5 setDays:*(void *)(a1 + 32)];
  id v6 = +[NSNumber numberWithUnsignedInt:v4];
  [(RAPWebBundleHoursContext *)v5 setTo:v6];

  id v7 = +[NSNumber numberWithUnsignedInt:a2];
  [(RAPWebBundleHoursContext *)v5 setFrom:v7];

  return v5;
}

void sub_10065D080(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = objc_alloc_init(RAPWebBundleTransitSystemContext);
    id v8 = [*(id *)(a1 + 32) reportedPlace];
    id v9 = [v8 mapItem];
    uint64_t v10 = [v9 name];
    [(RAPWebBundleTransitSystemContext *)v7 setSystem:v10];

    [(RAPWebBundleTransitSystemContext *)v7 setLines:v5];
    [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObjectsFromArray:v6];
    uint64_t v12 = v7;
    id v11 = +[NSArray arrayWithObjects:&v12 count:1];
    [*(id *)(a1 + 40) setTransitInfos:v11];

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), *(id *)(a1 + 40));
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_10065D1D4(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([v6 count])
  {
    [*(id *)(a1 + 32) setContainsPlaces:v6];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObjectsFromArray:v5];
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(a1 + 32));
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10065D270(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([v6 count])
  {
    [*(id *)(a1 + 32) setContainedInPlaces:v6];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObjectsFromArray:v5];
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(a1 + 32));
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10065D30C(void *a1)
{
  uint64_t v1 = a1[4];
  if (v1)
  {
    id v3 = [*(id *)(*(void *)(a1[5] + 8) + 40) context];
    (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v3, *(void *)(*(void *)(a1[6] + 8) + 40));
  }
}

void sub_10065D624(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = +[UIScreen mainScreen];
  [v4 scale];
  uint64_t v6 = v5;

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10065D720;
  _OWORD v8[3] = &unk_1012F34D8;
  uint64_t v11 = v6;
  id v9 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  [v3 enumerateObjectsUsingBlock:v8];

  uint64_t v7 = *(void *)(a1 + 48);
  if (v7) {
    (*(void (**)(uint64_t, void, void))(v7 + 16))(v7, *(void *)(a1 + 40), *(void *)(a1 + 32));
  }
}

void sub_10065D720(uint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = [v3 artwork];
  image = +[UIImage _mapkit_transitArtworkImageWithDataSource:v4 size:6 scale:*(double *)(a1 + 48)];

  uint64_t v5 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", [v3 muid]);
  uint64_t v6 = objc_alloc_init(RAPWebBundleImageContext);
  uint64_t v7 = UIImagePNGRepresentation(image);
  [(RAPWebBundleImageContext *)v6 setImage:v7];

  [(RAPWebBundleImageContext *)v6 setIdentifier:v5];
  [*(id *)(a1 + 32) addObject:v6];
  id v8 = objc_alloc_init(RAPWebBundleTransitLineContext);
  id v9 = [v3 name];

  [(RAPWebBundleTransitLineContext *)v8 setName:v9];
  [(RAPWebBundleTransitLineContext *)v8 setIdentifier:v5];
  [(RAPWebBundleTransitLineContext *)v8 setImageContext:v6];
  [*(id *)(a1 + 40) addObject:v8];
}

void sub_10065E028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10065E044(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (a3 || ![v5 count])
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    else
    {
      id v10 = _NSConcreteStackBlock;
      uint64_t v11 = 3221225472;
      uint64_t v12 = sub_10065E184;
      __int16 v13 = &unk_1012E7850;
      id v14 = *(id *)(a1 + 32);
      id v15 = *(id *)(a1 + 40);
      [v5 enumerateObjectsUsingBlock:&v10];
      uint64_t v7 = *(void *)(a1 + 48);
      if (v7)
      {
        id v8 = [*(id *)(a1 + 40) copy:v10, v11, v12, v13, v14];
        id v9 = [*(id *)(a1 + 32) copy];
        (*(void (**)(uint64_t, id, id))(v7 + 16))(v7, v8, v9);
      }
    }
  }
}

void sub_10065E184(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v17 = [objc_alloc((Class)MKMapItem) initWithGeoMapItem:v3 isPlaceHolderPlace:0];
  id v4 = [v3 _muid];

  id v5 = +[NSString stringWithFormat:@"%llu", v4];
  uint64_t v6 = objc_alloc_init(RAPWebBundleImageContext);
  uint64_t v7 = [v17 _styleAttributes];
  id v8 = +[UIScreen mainScreen];
  [v8 scale];
  +[MKIconManager imageForStyle:size:forScale:format:](MKIconManager, "imageForStyle:size:forScale:format:", v7, 3, 0);
  id v9 = (UIImage *)objc_claimAutoreleasedReturnValue();
  id v10 = UIImagePNGRepresentation(v9);
  [(RAPWebBundleImageContext *)v6 setImage:v10];

  [(RAPWebBundleImageContext *)v6 setIdentifier:v5];
  [*(id *)(a1 + 32) addObject:v6];
  uint64_t v11 = objc_alloc_init(RAPWebBundlePlaceSummaryContext);
  [(RAPWebBundlePlaceSummaryContext *)v11 setIdentifier:v5];
  uint64_t v12 = [v17 name];
  [(RAPWebBundlePlaceSummaryContext *)v11 setTitle:v12];

  __int16 v13 = [v17 _addressFormattedAsShortenedAddress];
  [(RAPWebBundlePlaceSummaryContext *)v11 setSubtitle:v13];

  id v14 = [[RAPPlaceCorrectableAddress alloc] _initWithMapItem:v17];
  id v15 = [v14 freeformAddress];
  id v16 = [v15 value];
  [(RAPWebBundlePlaceSummaryContext *)v11 setAddress:v16];

  [(RAPWebBundlePlaceSummaryContext *)v11 setImageContext:v6];
  [*(id *)(a1 + 40) addObject:v11];
}

void sub_10065E590(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10065E670;
  void v10[3] = &unk_1012F3618;
  id v11 = a4;
  id v7 = *(id *)(a1 + 32);
  id v12 = v6;
  id v13 = v7;
  uint64_t v14 = *(void *)(a1 + 40);
  id v8 = v6;
  id v9 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

void sub_10065E670(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    NSLog(@"Error fetching categories: %@", *(void *)(a1 + 32));
    BOOL v2 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    v2();
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 40);
    id v26 = 0;
    id v4 = +[NSPropertyListSerialization propertyListWithData:v3 options:0 format:0 error:&v26];
    id v5 = v26;
    id v6 = v5;
    if (v4)
    {
      id v21 = v5;
      id v7 = [v4 objectForKeyedSubscript:@"com.apple.GEO"];

      long long v20 = v7;
      id v8 = [v7 objectForKeyedSubscript:@"BusinessLocalizedCategories"];
      id v9 = [*(id *)(a1 + 56) adjustedPreferredLanguages];
      id v10 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v8 count]);
      long long v22 = 0u;
      long long v23 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v11 = v8;
      id v12 = [v11 countByEnumeratingWithState:&v22 objects:v27 count:16];
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = *(void *)v23;
        do
        {
          for (unint64_t i = 0; i != v13; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v23 != v14) {
              objc_enumerationMutation(v11);
            }
            id v16 = [*(id *)(*((void *)&v22 + 1) + 8 * i) objectForKeyedSubscript:@"titles"];
            id v17 = [*(id *)(a1 + 56) preferredTranslationInTitles:v16 givenPreferredLanguagesList:v9];
            if (v17) {
              [v10 addObject:v17];
            }
          }
          id v13 = [v11 countByEnumeratingWithState:&v22 objects:v27 count:16];
        }
        while (v13);
      }

      uint64_t v18 = *(void *)(a1 + 48);
      id v19 = [v10 copy];
      (*(void (**)(uint64_t, id))(v18 + 16))(v18, v19);

      id v6 = v21;
    }
    else
    {
      NSLog(@"Error unpacking categories plist: %@", v5);
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
}

void sub_10065EF2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _performRTTest];
}

void sub_10065F334(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 128));
  _Unwind_Resume(a1);
}

void sub_10065F390(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && !WeakRetained[104])
  {
    BOOL v2 = WeakRetained;
    [WeakRetained startedSubTest:@"transitRouteUpdate:route"];
    id WeakRetained = v2;
  }
}

void sub_10065F3EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && !WeakRetained[104])
  {
    BOOL v2 = WeakRetained;
    [WeakRetained finishedSubTest:@"transitRouteUpdate:route"];
    id WeakRetained = v2;
  }
}

void sub_10065F448(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && !WeakRetained[104])
  {
    BOOL v2 = WeakRetained;
    [WeakRetained startedSubTest:@"transitRouteUpdate:sign"];
    id WeakRetained = v2;
  }
}

void sub_10065F4A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && !*((unsigned char *)WeakRetained + 104))
  {
    uint64_t v3 = WeakRetained;
    [*((id *)WeakRetained + 12) invalidate];
    BOOL v2 = (void *)v3[12];
    v3[12] = 0;

    [v3 finishedSubTest:@"transitRouteUpdate:sign"];
    [v3 _handleSuperDoAfterSubTestForShowingSign];
    id WeakRetained = v3;
  }
}

void sub_10065F538(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleSuperDoAfterSubTestForShowingSign];
}

void sub_10065F578(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained testCoordinator];
  [v1 pptTestResumeRealtimeTransitUpdates];
}

id sub_10065F778()
{
  if (qword_10160F398 != -1) {
    dispatch_once(&qword_10160F398, &stru_1012F36D8);
  }
  v0 = (void *)qword_10160F390;

  return v0;
}

void sub_10065FEC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_10065FEE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v3 = [WeakRetained mapSelectionManager];
    [v3 selectSearchResult:*(void *)(a1 + 32) animated:1];

    id WeakRetained = v4;
  }
}

uint64_t sub_10065FF50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

uint64_t sub_10065FFA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

id sub_100660210(uint64_t a1)
{
  [*(id *)(a1 + 32) viewControllerPresentSearchEndEditingAnimated:0];
  [*(id *)(a1 + 32) viewControllerClosed:0 animated:0];
  uint64_t v2 = [*(id *)(a1 + 32) searchPinsManager];
  [v2 clearSearchPins];

  uint64_t v3 = [*(id *)(a1 + 32) searchPinsManager];
  [v3 clearDirectionsPins];

  id v4 = *(void **)(a1 + 32);

  return [v4 clearMapSelection];
}

void sub_100660C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100660C40(uint64_t a1, int a2)
{
  id v4 = sub_10065F778();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v9[0] = 67109120;
    v9[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "PlaceCard dropped pin inside of hiking region: %d.", (uint8_t *)v9, 8u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (a2)
  {
    id v7 = [WeakRetained _hikingToken];

    if (v7) {
      return;
    }
    id v6 = objc_loadWeakRetained((id *)(a1 + 40));
    id v8 = [*(id *)(a1 + 32) acquireHikingMapToken];
    [v6 _setHikingToken:v8];
  }
  else
  {
    [WeakRetained _setHikingToken:0];
  }
}

void sub_100660D58(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ActionCoordinatorPlaceCardVC");
  uint64_t v2 = (void *)qword_10160F390;
  qword_10160F390 = (uint64_t)v1;
}

void sub_100660ED8(uint64_t a1)
{
  if (+[TUCallCapabilities supportsTelephonyCalls])
  {
    id v2 = objc_alloc_init((Class)TUCallProviderManager);
    id v3 = objc_alloc((Class)TUDialRequest);
    id v4 = [v2 defaultProvider];
    id v5 = [v3 initWithProvider:v4];

    id v6 = [objc_alloc((Class)TUHandle) initWithType:2 value:*(void *)(a1 + 32)];
    [v5 setHandle:v6];
    [v5 setShowUIPrompt:0];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100661020;
    _OWORD v8[3] = &unk_1012E76E8;
    id v9 = v5;
    id v10 = *(id *)(a1 + 40);
    id v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
  }
}

void sub_100661020(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isValid];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v2)
  {
    id v6 = [*(id *)(a1 + 32) URL];
    (*(void (**)(uint64_t, uint64_t, id))(v3 + 16))(v3, 1, v6);
  }
  else
  {
    id v4 = *(void (**)(uint64_t, void, void))(v3 + 16);
    uint64_t v5 = *(void *)(a1 + 40);
    v4(v5, 0, 0);
  }
}

uint64_t sub_100661228(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a2 == 0);
  }
  return result;
}

void sub_100661F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_1006622F8(id a1)
{
  os_log_t v1 = (void *)qword_10160F3A0;
  qword_10160F3A0 = (uint64_t)&off_1013AEC68;
}

void sub_10066446C(uint64_t a1)
{
  unsigned int v2 = sub_10010A0F0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Will reset and start recording", buf, 2u);
  }

  [*(id *)(a1 + 32) _reset];
  uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 16) route];
  unsigned __int8 v4 = [v3 isEVRoute];

  if (v4)
  {
    *(unsigned char *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x238], 8) = 1;
    uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 16) route];
    [*(id *)(a1 + 32) setObservedRoute:v5];
  }
  else
  {
    id v6 = sub_10010A0F0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "We are not navigating on an EV route, will stop recording", v7, 2u);
    }

    *(unsigned char *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x238], 8) = 0;
  }
}

id sub_100664600(uint64_t a1)
{
  unsigned int v2 = sub_10010A0F0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned __int8 v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Will reset and stop recording", v4, 2u);
  }

  id result = [*(id *)(a1 + 32) _reset];
  *(unsigned char *)(*(void *)(a1 + 32) + _Block_object_dispose(&STACK[0x238], 8) = 0;
  return result;
}

id sub_100664728(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 8))
  {
    uint64_t v3 = sub_1005762E4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      unsigned __int8 v4 = +[NSString stringWithFormat:@"This class expects that bad trip state will be checked while recording is in process"];
      int v7 = 136316162;
      id v8 = "-[NavigationEVBadTripFeedbackCollector isBadTrip]_block_invoke";
      __int16 v9 = 2080;
      id v10 = "NavigationEVBadTripFeedbackCollector.m";
      __int16 v11 = 1024;
      int v12 = 167;
      __int16 v13 = 2080;
      uint64_t v14 = "_isRecording";
      __int16 v15 = 2112;
      id v16 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s) '%@'", (uint8_t *)&v7, 0x30u);
    }
    if (sub_100BB36BC())
    {
      uint64_t v5 = sub_1005762E4();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = +[NSThread callStackSymbols];
        int v7 = 138412290;
        id v8 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v7, 0xCu);
      }
    }
  }
  id result = [*(id *)(a1 + 32) _checkForBadTrip];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_100665370(uint64_t a1)
{
  unsigned int v2 = sub_10010A0F0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned __int8 v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Did reroute", v4, 2u);
  }

  return [*(id *)(a1 + 32) setObservedRoute:*(void *)(a1 + 40)];
}

void sub_100665490(uint64_t a1)
{
  unsigned int v2 = sub_10010A0F0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = [*(id *)(a1 + 32) observedRoute];
    unsigned __int8 v4 = (const char *)[v3 serverIdentifier];
    uint64_t v5 = *(const char **)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 56);
    int v35 = 134218496;
    uint64_t v36 = v4;
    __int16 v37 = 2048;
    id v38 = v5;
    __int16 v39 = 2048;
    *(void *)id v40 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Route %lu did update step: %lu, segment: %lu", (uint8_t *)&v35, 0x20u);
  }
  int v7 = *(unsigned char **)(a1 + 32);
  if (v7[8])
  {
    id v8 = [v7 observedRoute];
    unsigned int v9 = [v8 isEVRoute];

    if (v9)
    {
      unint64_t v10 = *(void *)(a1 + 48) - 1;
      __int16 v11 = [*(id *)(a1 + 40) route];
      id v12 = [v11 stepsCount];

      if (v10 < (unint64_t)v12)
      {
        __int16 v13 = [*(id *)(*(void *)(a1 + 32) + 56) lastObject];
        if (!v13)
        {
          id v28 = sub_1005762E4();
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          {
            int v35 = 136315906;
            uint64_t v36 = "-[NavigationEVBadTripFeedbackCollector navigationService:didUpdateStepIndex:segmentIndex:]_block_invoke";
            __int16 v37 = 2080;
            id v38 = "NavigationEVBadTripFeedbackCollector.m";
            __int16 v39 = 1024;
            *(_DWORD *)id v40 = 304;
            *(_WORD *)&v40[4] = 2080;
            *(void *)&v40[6] = "routeInfo";
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", (uint8_t *)&v35, 0x26u);
          }

          if (sub_100BB36BC())
          {
            id v29 = sub_1005762E4();
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
            {
              id v30 = +[NSThread callStackSymbols];
              int v35 = 138412290;
              uint64_t v36 = v30;
              _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v35, 0xCu);
            }
          }
          long long v31 = sub_10010A0F0();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
          {
            LOWORD(v35) = 0;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "routeInfo should exist by the time we get a stepIndex update.", (uint8_t *)&v35, 2u);
          }

          long long v32 = [EVBadTripRouteInfo alloc];
          long long v33 = [*(id *)(a1 + 32) observedRoute];
          long long v34 = [*(id *)(a1 + 32) currentVehicleState];
          __int16 v13 = [(EVBadTripRouteInfo *)v32 initWithRoute:v33 currentVehicleState:v34];

          [*(id *)(*(void *)(a1 + 32) + 56) addObject:v13];
        }
        uint64_t v14 = *(void **)(*(void *)(a1 + 32) + 64);
        __int16 v15 = +[NSNumber numberWithUnsignedInteger:v10];
        id v16 = [v14 objectForKeyedSubscript:v15];

        if (v16)
        {
          id v17 = [*(id *)(a1 + 40) route];
          uint64_t v18 = [v17 stepAtIndex:v10];

          id v19 = [v18 evInfo];
          long long v20 = [*(id *)(a1 + 32) currentVehicleState];
          id v21 = [v20 currentBatteryCharge];

          long long v22 = sub_10010A0F0();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            long long v23 = (const char *)[v16 remainingBatteryCharge];
            unsigned int v24 = [v19 remainingBatteryCharge];
            int v35 = 134218752;
            uint64_t v36 = (const char *)v10;
            __int16 v37 = 2048;
            id v38 = v23;
            __int16 v39 = 2048;
            *(void *)id v40 = v24;
            *(_WORD *)&v40[8] = 2048;
            *(void *)&v40[10] = v21;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "Will save state for step: %lu, expected charge: %lu, charge from last reroute: %lu, real charge: %lu", (uint8_t *)&v35, 0x2Au);
          }

          [(EVBadTripRouteInfo *)v13 setLastTraversedStep:v18];
          long long v25 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v16 remainingBatteryCharge]);
          [(EVBadTripRouteInfo *)v13 setExpectedArrivalBatteryCharge:v25];

          [(EVBadTripRouteInfo *)v13 setRealArrivalBatteryCharge:v21];
        }
        else
        {
          uint64_t v18 = sub_10010A0F0();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
          {
            id v26 = *(const char **)(a1 + 56);
            long long v27 = [*(id *)(a1 + 32) stepIDToExpectedEVInfos];
            int v35 = 134218498;
            uint64_t v36 = (const char *)v10;
            __int16 v37 = 2048;
            id v38 = v26;
            __int16 v39 = 2112;
            *(void *)id v40 = v27;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Did not find ev info for step: %lu, segment: %lu, in dictionary: %@", (uint8_t *)&v35, 0x20u);
          }
        }
      }
    }
  }
}

void sub_100666384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006663A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _didTapAutomaticSharingButton];
}

void sub_100666878(id a1)
{
  if (!qword_10160F3C0)
  {
    os_log_t v1 = objc_alloc_init(TraceManager);
    unsigned int v2 = (void *)qword_10160F3C0;
    qword_10160F3C0 = (uint64_t)v1;
  }
}

void sub_1006676D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v140 = 0u;
  long long v141 = 0u;
  long long v142 = 0u;
  long long v143 = 0u;
  id v4 = *(id *)(*(void *)(a1 + 32) + 56);
  id v5 = [v4 countByEnumeratingWithState:&v140 objects:v152 count:16];
  if (!v5)
  {
    int v7 = 0;
    goto LABEL_78;
  }
  id v6 = v5;
  int v7 = 0;
  uint64_t v8 = *(void *)v141;
  do
  {
    unsigned int v9 = 0;
    do
    {
      if (*(void *)v141 != v8) {
        objc_enumerationMutation(v4);
      }
      unint64_t v10 = *(void **)(*((void *)&v140 + 1) + 8 * (void)v9);
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v11 = v10;
        goto LABEL_20;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        if (v7)
        {
          uint64_t v12 = (uint64_t)[v10 integerValue];
          if (v12 >= 1)
          {
            uint64_t v13 = v12;
            if ([v7 isEqualToString:@"WaitContinuously"])
            {
              uint64_t v14 = [*(id *)(a1 + 32) view];
              do
              {
                --v13;
                [v14 setDebugLayoutContinuously:1];
                [*(id *)(a1 + 32) center];
                [v3 hoverAtLocation:withDuration:];
              }
              while (v13);
              goto LABEL_18;
            }
            if ([v7 isEqualToString:@"Wait"])
            {
              uint64_t v14 = [*(id *)(a1 + 32) view];
              do
              {
                --v13;
                [v14 setDebugLayoutContinuously:0];
                [*(id *)(a1 + 32) center];
                [v3 hoverAtLocation:withDuration:];
              }
              while (v13);
LABEL_18:

LABEL_19:
              id v11 = 0;
              goto LABEL_20;
            }
            if ([v7 isEqualToString:@"Tap"])
            {
              do
              {
                --v13;
                __int16 v15 = [*(id *)(a1 + 32) view];
                [v15 edgeInsets];
                float v17 = v16;
                float v19 = v18;
                float v21 = v20;
                float v23 = v22;

                [*(id *)(a1 + 32) center];
                double v25 = v24 + (float)((float)(v19 + v23) * 0.5);
                [*(id *)(a1 + 32) center];
                [v3 tap:v25, v26 - (float)((float)(v17 + v21) * 0.5)];
                [*(id *)(a1 + 32) center];
                [v3 hoverAtLocation:withDuration:];
                id v11 = 0;
              }
              while (v13);
              goto LABEL_20;
            }
            if ([v7 isEqualToString:@"TapLookAroundPreview"])
            {
              long long v27 = [*(id *)(a1 + 32) view];
              [v27 bounds];
              double v29 = v28;
              double v31 = v30;
              double v33 = v32;
              double v35 = v34;

              double v36 = v35 / v33;
              __int16 v37 = [*(id *)(a1 + 32) view];
              [v37 edgeInsets];
              float v39 = v38;
              float v41 = v40;

              if (v36 <= 2.0)
              {
                double v42 = v29 + v39 + 60.0;
                double v43 = v31 + v35;
              }
              else
              {
                double v42 = v29 + 60.0;
                double v43 = v31 + v35 - v41;
              }
              double v57 = v43 + -60.0;
              [v3 tap:v42, v43 + -60.0];
              double v53 = *(double *)(*(void *)(a1 + 32) + 64);
              char v54 = v3;
              double v55 = v42;
              double v56 = v57;
            }
            else
            {
              if (![v7 isEqualToString:@"TapLookAroundDone"])
              {
                if ([v7 isEqualToString:@"DoubleTap"])
                {
                  do
                  {
                    --v13;
                    [*(id *)(a1 + 32) center];
                    [v3 doubleTap:];
                    [*(id *)(a1 + 32) center];
                    [v3 hoverAtLocation:withDuration:];
                    id v11 = 0;
                  }
                  while (v13);
                }
                else if ([v7 isEqualToString:@"PanLeft"])
                {
                  [*(id *)(a1 + 32) center];
                  __int16 v58 = *(double **)(a1 + 32);
                  double v60 = v59 - v58[4];
                  [v58 center];
                  double v62 = v61;
                  [*(id *)(a1 + 32) center];
                  double v64 = v63;
                  [*(id *)(a1 + 32) center];
                  double v66 = v65;
                  do
                  {
                    --v13;
                    [v3 dragWithStartPoint:v60 endPoint:v62 duration:v64];
                    id v11 = 0;
                  }
                  while (v13);
                }
                else if ([v7 isEqualToString:@"PanRight"])
                {
                  [*(id *)(a1 + 32) center];
                  double v68 = v67;
                  [*(id *)(a1 + 32) center];
                  double v70 = v69;
                  [*(id *)(a1 + 32) center];
                  unsigned __int8 v71 = *(double **)(a1 + 32);
                  double v73 = v72 - v71[4];
                  [v71 center];
                  double v75 = v74;
                  do
                  {
                    --v13;
                    [v3 dragWithStartPoint:v68 endPoint:v70 duration:v73];
                    id v11 = 0;
                  }
                  while (v13);
                }
                else if ([v7 isEqualToString:@"PanUp"])
                {
                  [*(id *)(a1 + 32) center];
                  double v77 = v76;
                  [*(id *)(a1 + 32) center];
                  v78 = *(double **)(a1 + 32);
                  double v80 = v79 - v78[4];
                  [v78 center];
                  double v82 = v81;
                  [*(id *)(a1 + 32) center];
                  double v84 = v83;
                  do
                  {
                    --v13;
                    [v3 dragWithStartPoint:v77 endPoint:v80 duration:v82];
                    id v11 = 0;
                  }
                  while (v13);
                }
                else if ([v7 isEqualToString:@"PanDown"])
                {
                  [*(id *)(a1 + 32) center];
                  double v86 = v85;
                  [*(id *)(a1 + 32) center];
                  double v88 = v87;
                  [*(id *)(a1 + 32) center];
                  double v90 = v89;
                  [*(id *)(a1 + 32) center];
                  double v92 = v91 - *(double *)(*(void *)(a1 + 32) + 32);
                  do
                  {
                    --v13;
                    [v3 dragWithStartPoint:v86 endPoint:v88 duration:v90];
                    id v11 = 0;
                  }
                  while (v13);
                }
                else if ([v7 isEqualToString:@"ZoomIn"])
                {
                  [*(id *)(a1 + 32) center];
                  double v94 = v93;
                  [*(id *)(a1 + 32) center];
                  double v96 = v95 + -10.0;
                  [*(id *)(a1 + 32) center];
                  double v98 = v97;
                  [*(id *)(a1 + 32) center];
                  double v100 = v99 + 10.0;
                  do
                  {
                    --v13;
                    [v3 pinchOpenWithStartPoint:v94 endPoint:v96 duration:v98];
                    id v11 = 0;
                  }
                  while (v13);
                }
                else if ([v7 isEqualToString:@"ZoomOut"])
                {
                  [*(id *)(a1 + 32) center];
                  double v102 = v101;
                  [*(id *)(a1 + 32) center];
                  double v104 = v103 + -10.0;
                  [*(id *)(a1 + 32) center];
                  double v106 = v105;
                  [*(id *)(a1 + 32) center];
                  double v108 = v107 + 10.0;
                  do
                  {
                    --v13;
                    [v3 pinchCloseWithStartPoint:v102 endPoint:v104 duration:v106];
                    id v11 = 0;
                  }
                  while (v13);
                }
                else if ([v7 isEqualToString:@"CirclePan"])
                {
                  do
                  {
                    --v13;
                    [v3 rotate:1 withRadius:*(double *)(*(void *)(a1 + 32) + 72) rotation:*(double *)(*(void *)(a1 + 32) + 80) duration:32.0 touchCount:6.28318 *(double *)(*(void *)(a1 + 32) + 64)];
                    id v11 = 0;
                  }
                  while (v13);
                }
                else
                {
                  if (![v7 isEqualToString:@"Rotate"])
                  {
                    if ([v7 isEqualToString:@"PitchDown"])
                    {
                      [*(id *)(a1 + 32) center];
                      double v110 = v109 + -65.0;
                      [*(id *)(a1 + 32) center];
                      double v148 = v110;
                      uint64_t v149 = v111;
                      [*(id *)(a1 + 32) center];
                      double v113 = v112 + 65.0;
                      [*(id *)(a1 + 32) center];
                      double v150 = v113;
                      uint64_t v151 = v114;
                      [*(id *)(a1 + 32) center];
                      double v116 = v115 + -65.0;
                      [*(id *)(a1 + 32) center];
                      v117 = *(double **)(a1 + 32);
                      double v119 = v118 - v117[4];
                      double v144 = v116;
                      double v145 = v119;
                      [v117 center];
                      double v121 = v120 + 65.0;
                      [*(id *)(a1 + 32) center];
                      double v123 = v122 - *(double *)(*(void *)(a1 + 32) + 32);
                      double v146 = v121;
                      double v147 = v123;
                      do
                      {
                        --v13;
                        [v3 touchDownAtPoints:&v148 touchCount:2];
                        [v3 moveToPoints:&v144 touchCount:2 duration:*(double *)(*(void *)(a1 + 32) + 64)];
                        [v3 liftUpAtAllActivePoints];
                        [v3 hoverAtLocation:v144 withDuration:v145];
                      }
                      while (v13);
                    }
                    else if ([v7 isEqualToString:@"PitchUp"])
                    {
                      [*(id *)(a1 + 32) center];
                      double v125 = v124 + -65.0;
                      [*(id *)(a1 + 32) center];
                      double v148 = v125;
                      uint64_t v149 = v126;
                      [*(id *)(a1 + 32) center];
                      double v128 = v127 + 65.0;
                      [*(id *)(a1 + 32) center];
                      double v150 = v128;
                      uint64_t v151 = v129;
                      [*(id *)(a1 + 32) center];
                      double v131 = v130 + -65.0;
                      [*(id *)(a1 + 32) center];
                      v132 = *(double **)(a1 + 32);
                      double v134 = v133 + v132[4];
                      double v144 = v131;
                      double v145 = v134;
                      [v132 center];
                      double v136 = v135 + 65.0;
                      [*(id *)(a1 + 32) center];
                      double v138 = v137 + *(double *)(*(void *)(a1 + 32) + 32);
                      double v146 = v136;
                      double v147 = v138;
                      do
                      {
                        --v13;
                        [v3 touchDownAtPoints:&v148 touchCount:2];
                        [v3 moveToPoints:&v144 touchCount:2 duration:*(double *)(*(void *)(a1 + 32) + 64)];
                        [v3 liftUpAtAllActivePoints];
                        [v3 hoverAtLocation:v144 withDuration:v145];
                      }
                      while (v13);
                    }
                    goto LABEL_19;
                  }
                  do
                  {
                    --v13;
                    [v3 rotate:2 withRadius:*(double *)(*(void *)(a1 + 32) + 72) rotation:*(double *)(*(void *)(a1 + 32) + 80) duration:32.0 touchCount:6.28318 *(double *)(*(void *)(a1 + 32) + 64)];
                    id v11 = 0;
                  }
                  while (v13);
                }
LABEL_20:

                int v7 = v11;
                goto LABEL_21;
              }
              uint64_t v44 = [*(id *)(a1 + 32) view];
              [v44 bounds];
              double v46 = v45;
              double v48 = v47;
              double v50 = v49;

              double v51 = v46 + v50 + -50.0;
              double v52 = v48 + 50.0;
              [v3 tap:v51, v52];
              double v53 = *(double *)(*(void *)(a1 + 32) + 64);
              char v54 = v3;
              double v55 = v51;
              double v56 = v52;
            }
            [v54 hoverAtLocation:v55 withDuration:v56 v53];
            goto LABEL_19;
          }
        }
      }
LABEL_21:
      unsigned int v9 = (char *)v9 + 1;
    }
    while (v9 != v6);
    id v139 = [v4 countByEnumeratingWithState:&v140 objects:v152 count:16];
    id v6 = v139;
  }
  while (v139);
LABEL_78:
}

id sub_100668118(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
  }
  else
  {
    uint64_t v8 = 0;
    unsigned int v9 = &v8;
    uint64_t v10 = 0x3032000000;
    id v11 = sub_100103E5C;
    uint64_t v12 = sub_1001047B8;
    id v13 = 0;
    id v5 = [v3 subviews];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1006699C0;
    void v7[3] = &unk_1012F3788;
    void v7[4] = &v8;
    void v7[5] = a2;
    [v5 enumerateObjectsUsingBlock:v7];

    id v4 = (id)v9[5];
    _Block_object_dispose(&v8, 8);
  }

  return v4;
}

void sub_100668244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1006685D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006685EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained initialLoadComplete];
}

void sub_1006686BC(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) mainVKMapView];
  id v3 = v2;
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(void *)(v4 + 88))
  {
    if (*(unsigned char *)(v4 + 65))
    {
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_100668844;
      _OWORD v8[3] = &unk_1012E5D58;
      void v8[4] = v4;
      unsigned int v9 = v2;
      [(id)v4 enterLookAroundForTest:v8];
      id v5 = v9;
    }
    else
    {
      id v6 = [MapsRPTParameters alloc];
      int v7 = [*(id *)(a1 + 32) testName];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_10066883C;
      void v10[3] = &unk_1012E5D08;
      uint64_t v11 = *(void *)(a1 + 32);
      id v5 = [(MapsRPTParameters *)v6 initWithTestName:v7 view:v3 completionHandler:v10 testActions:*(void *)(v11 + 88) actionDuration:*(double *)(v11 + 96)];

      +[RPTTestRunner runTestWithParameters:v5];
    }
  }
}

id sub_10066883C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) rptTestCompleted];
}

void sub_100668844(uint64_t a1)
{
  unsigned int v2 = [MapsRPTParameters alloc];
  id v3 = [*(id *)(a1 + 32) testName];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100668920;
  void v6[3] = &unk_1012E5D08;
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 32);
  id v5 = [(MapsRPTParameters *)v2 initWithTestName:v3 view:v4 completionHandler:v6 testActions:*(void *)(v7 + 88) actionDuration:*(double *)(v7 + 96)];

  +[RPTTestRunner runTestWithParameters:v5];
}

id sub_100668920(uint64_t a1)
{
  return _[*(id *)(a1 + 32) rptTestCompleted];
}

id sub_100668C20(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) mainVKMapView];
  unsigned int v3 = [v2 isFullyDrawn];

  uint64_t v4 = *(void **)(a1 + 32);
  if (v3)
  {
    return _[v4 onFullyDrawn:0];
  }
  else
  {
    return [v4 setupFullyDrawnNotification:"onFullyDrawn:"];
  }
}

uint64_t sub_100668FDC(uint64_t a1)
{
  unsigned int v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Received MKLookAroundViewDidBecomeAdequatelyDrawnNotification", v4, 2u);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10066910C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100669260(uint64_t a1)
{
  unsigned int v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Received PPTLookAroundContainerViewControllerDidTransitionToFullscreenNotification", buf, 2u);
  }

  unsigned int v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100669340;
  void v5[3] = &unk_1012E6EA8;
  id v6 = *(id *)(a1 + 48);
  [v3 onLookAroundView:v4 didCompletionPostTransitionAnimation:v5];
}

uint64_t sub_100669340(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100669524(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 object];
  uint64_t v4 = [v3 lookAroundView];

  id v5 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10066960C;
  void v7[3] = &unk_1012ED778;
  void v7[4] = v5;
  id v8 = v4;
  id v9 = *(id *)(a1 + 40);
  id v10 = *(id *)(a1 + 48);
  id v6 = v4;
  [v5 onLookAroundView:v6 didBecomeAdequatelyDrawnCallback:v7];
}

void sub_10066960C(uint64_t a1)
{
  unsigned int v3 = *(void **)(a1 + 32);
  unsigned int v2 = *(void **)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  id v4[2] = sub_1006696D4;
  void v4[3] = &unk_1012ED778;
  void v4[4] = v3;
  id v5 = v2;
  id v6 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 56);
  [v3 onLookAroundView:v5 didCompletionPostTransitionAnimation:v4];
}

void sub_1006696D4(uint64_t a1)
{
  unsigned int v3 = *(void **)(a1 + 32);
  unsigned int v2 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100669794;
  void v5[3] = &unk_1012E80F0;
  void v5[4] = v3;
  id v6 = v2;
  id v7 = *(id *)(a1 + 56);
  [v3 expandLookAroundToFullscreen:1 withLookAroundView:v6 mapItem:v4 completionBlock:v5];
}

void sub_100669794(uint64_t a1)
{
  unsigned int v3 = *(void **)(a1 + 32);
  unsigned int v2 = *(void **)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  id v4[2] = sub_100669848;
  void v4[3] = &unk_1012E80F0;
  void v4[4] = v3;
  id v5 = v2;
  id v6 = *(id *)(a1 + 48);
  [v3 onLookAroundView:v5 didCompletionPostTransitionAnimation:v4];
}

void sub_100669848(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"lookAroundEnter"];
  id v3 = [*(id *)(a1 + 40) lookAroundView];
  [*(id *)(a1 + 32) setupForVKTestWithMapView:v3];
  [v3 enableTestStatistics];
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
}

void sub_1006699C0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = sub_100668118(a2, *(void *)(a1 + 40));
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)) {
    *a4 = 1;
  }
}

id sub_100669A24(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) addEvChargingPort:a2];
}

void sub_100669A30(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [a2 globalBrandID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

id sub_100669A9C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 unsignedLongLongValue];

  return [v2 addPreferredBrand:v3];
}

id sub_10066ABFC()
{
  if (qword_10160F3D8 != -1) {
    dispatch_once(&qword_10160F3D8, &stru_1012F3978);
  }
  v0 = (void *)qword_10160F3D0;

  return v0;
}

NSString *__cdecl sub_10066ADC0(id a1, TransitDirectionsListItem *a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6 = a2;
  id v7 = objc_alloc((Class)NSMutableArray);
  id v8 = [(TransitDirectionsListItem *)v6 composedRouteSteps];
  id v9 = [v7 initWithCapacity:[v8 count]];

  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v10 = [(TransitDirectionsListItem *)v6 composedRouteSteps];
  id v11 = [v10 countByEnumeratingWithState:&v29 objects:v33 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v30;
    do
    {
      for (unint64_t i = 0; i != v12; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v30 != v13) {
          objc_enumerationMutation(v10);
        }
        __int16 v15 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(*((void *)&v29 + 1) + 8 * i) stepIndex]);
        [v9 addObject:v15];
      }
      id v12 = [v10 countByEnumeratingWithState:&v29 objects:v33 count:16];
    }
    while (v12);
  }

  float v16 = [v9 componentsJoinedByString:@", "];
  float v17 = +[NSString stringWithFormat:@"[%@]", v16];

  float v18 = +[NSNumber numberWithUnsignedInteger:a4];
  float v19 = [v18 stringValue];

  if (a3)
  {
    uint64_t v20 = +[NSString stringWithFormat:@"%lu.%@", a3, v19];

    float v19 = (void *)v20;
  }
  id v21 = [(TransitDirectionsListItem *)v6 matchingRouteStepIndex];
  if (v21 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    float v22 = @"-";
  }
  else
  {
    float v23 = +[NSNumber numberWithUnsignedInteger:v21];
    float v22 = [v23 stringValue];
  }
  unint64_t v24 = [(TransitDirectionsListItem *)v6 type];
  if (v24 >= 0x12)
  {
    double v25 = +[NSString stringWithFormat:@"Unknown (%ld)", v24];
  }
  else
  {
    double v25 = off_1012F3998[v24];
  }
  double v26 = [(TransitDirectionsListItem *)v6 composedRouteSteps];
  long long v27 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@ | %@ (matchingStepIndex: %@, steps: %@, count: %lu)", v19, v25, v22, v17, [v26 count]);

  return (NSString *)v27;
}

void sub_10066B0B0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v7 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  [*(id *)(a1 + 32) addObject:v7];
  if ([v5 conformsToProtocol:&OBJC_PROTOCOL___TransitDirectionsListExpandableItem]) {
    [v5 subItemsWithForceExpand:1];
  }
  else {
  id v8 = [v5 subItems];
  }
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_10066B1F0;
  void v9[3] = &unk_1012F3868;
  id v11 = *(id *)(a1 + 40);
  uint64_t v12 = a3;
  id v10 = *(id *)(a1 + 32);
  [v8 enumerateObjectsUsingBlock:v9];
}

void sub_10066B1F0(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v2];
}

BOOL sub_10066D42C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 maneuver] == 9)
  {
    uint64_t v4 = [v3 startingStop];
    if ([v4 hasMuid])
    {
      id v5 = [v3 endingStop];
      if ([v5 hasMuid])
      {
        uint64_t v6 = [v3 startingStop];
        id v7 = [v6 muid];
        id v8 = [v3 endingStop];
        BOOL v9 = v7 != [v8 muid];
      }
      else
      {
        BOOL v9 = 0;
      }
    }
    else
    {
      BOOL v9 = 0;
    }

    id v10 = sub_10066ABFC();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "- creating block transfer step", buf, 2u);
    }

    id v11 = [*(id *)(a1 + 32) _blockTransferItemFromStep:v3 withBoardItem:*(void *)(a1 + 40)];
    [v11 setParentItem:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) _appendItem:v11 toArray:*(void *)(a1 + 48)];
    uint64_t v12 = *(void **)(a1 + 32);
    uint64_t v13 = [v11 toLineColor];
    uint64_t v14 = [v11 alternateToLineColor];
    __int16 v15 = [v12 _fareAndOperatingHoursItemForBlockTransferStep:v3 lineColor:v13 alternateLineColor:v14 parentItem:*(void *)(a1 + 40)];

    if (v15)
    {
      float v16 = sub_10066ABFC();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)float v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "- adding fare/operating hours item for block transfer", v18, 2u);
      }

      [*(id *)(a1 + 32) _appendItem:v15 toArray:*(void *)(a1 + 48)];
    }
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

id -[TransitDirectionsStepsListDataProvider _blockTransferItemFromStep:withBoardItem:](TransitDirectionsStepsListDataProvider *self, SEL a2, id a3, id a4)
{
  BOOL forGuidance = self->_forGuidance;
  id v5 = a3;
  uint64_t v6 = +[MNTransitStepInstruction instructionForStep:context:](MNTransitStepInstruction, "instructionForStep:context:", v5, +[TransitDirectionsListItem defaultInstructionContextForItemType:12 forGuidance:forGuidance]);
  id v7 = [v5 routeDetailsPrimaryArtwork];
  id v8 = [v7 firstObject];

  BOOL v9 = [[TransitDirectionsListArtworkItem alloc] initWithArtwork:v8 instructions:0];
  [(TransitDirectionsListItem *)v9 setType:12];
  [(TransitDirectionsListArtworkItem *)v9 setSelectedSize:5];
  [(TransitDirectionsListArtworkItem *)v9 setAdaptiveShieldSize:0];
  id v10 = [v6 tertiaryInstructionStrings];
  [(TransitDirectionsListItem *)v9 setMajorFormattedStrings:v10];

  id v13 = v5;
  id v11 = +[NSArray arrayWithObjects:&v13 count:1];

  [(TransitDirectionsListItem *)v9 setComposedRouteSteps:v11];

  return v9;
}

GEOComposedString *__cdecl sub_10066E770(id a1, GEOFormattedString *a2)
{
  id v2 = a2;
  id v3 = [objc_alloc((Class)GEOComposedString) initWithGeoFormattedString:v2];

  return (GEOComposedString *)v3;
}

id sub_10066F85C(id a1, GEOComposedTransitRouteStep *a2, unint64_t a3)
{
  id v3 = [(GEOComposedTransitRouteStep *)a2 routeDetailsPrimaryArtwork];
  uint64_t v4 = [v3 firstObject];

  return v4;
}

id sub_10066FA50(id a1, GEOComposedTransitRouteStep *a2, unint64_t a3)
{
  return [(GEOComposedTransitRouteStep *)a2 routeDetailsSecondaryArtwork];
}

void sub_10066FB54(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TransitListBuilder");
  id v2 = (void *)qword_10160F3D0;
  qword_10160F3D0 = (uint64_t)v1;
}

void sub_10066FDBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    double y = CGPointZero.y;
    do
    {
      BOOL v9 = 0;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        id v10 = [*(id *)(a1 + 40) _generateUIImageFromView:*(void *)(*((void *)&v11 + 1) + 8 * (void)v9) withWatermark:*(void *)(a1 + 48) size:*(double *)(a1 + 72) size:*(double *)(a1 + 80) watermark:v11];
        [v3 beginPage];
        [v10 drawAtPoint:CGPointZero.x, y];

        BOOL v9 = (char *)v9 + 1;
      }
      while (v6 != v9);
      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v6);
  }
}

id sub_10067009C(uint64_t a1)
{
  [*(id *)(a1 + 32) drawViewHierarchyInRect:1 afterScreenUpdates:0.0 0.0 *(double *)(a1 + 48) *(double *)(a1 + 56)];
  id result = *(id *)(a1 + 40);
  if (result)
  {
    double v3 = *(double *)(a1 + 48);
    double v4 = *(double *)(a1 + 56);
    return [result drawViewHierarchyInRect:1 afterScreenUpdates:0.0, 0.0, v3, v4];
  }
  return result;
}

id sub_1006704F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _start];
}

void sub_100670550(id a1)
{
  os_log_t v1 = +[NSFileManager _maps_globalCachesURL];
  id v2 = [v1 URLByAppendingPathComponent:@"ARTraces"];
  id v5 = [v2 path];

  uint64_t v3 = [v5 stringByAppendingPathComponent:@"ppt_recording.mov"];
  double v4 = (void *)qword_10160F3E0;
  qword_10160F3E0 = v3;
}

id sub_100670690(uint64_t a1)
{
  return [*(id *)(a1 + 32) _start];
}

id sub_100670924(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"showVLFUI"];
  id v2 = *(void **)(a1 + 32);

  return _[v2 _runVLF];
}

void sub_100670A00(uint64_t a1, void *a2)
{
  id v5 = [a2 object];
  unsigned int v3 = [v5 wasLastLocalizationSuccessful];
  double v4 = *(void **)(a1 + 32);
  if (v3)
  {
    [v4 finishedSubTest:@"runVLF"];
    [*(id *)(a1 + 32) _dismissVLFUI];
  }
  else
  {
    [v4 failedTestWithReason:@"VLF localization failed"];
  }
}

id sub_100670B18(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"dismissVLFUI"];
  id v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

void sub_100671A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100671A74(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _didDismiss];

  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    (*(void (**)(void))(v4 + 16))();
  }
  id v6 = +[NSNotificationCenter defaultCenter];
  id v5 = objc_loadWeakRetained(v2);
  [v6 postNotificationName:@"MacPopoverPresentationControllerDidDismissPopover" object:v5];
}

void sub_100672958(id a1)
{
  *(double *)&qword_10160F3F0 = (double)GEOConfigGetInteger();
}

void sub_1006729CC(id a1)
{
  *(double *)&qword_10160F400 = (double)GEOConfigGetInteger();
}

CFStringRef sub_100672F88(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (!v1) {
    goto LABEL_7;
  }
  unsigned int v3 = [v1 domain];
  unsigned int v4 = [v3 isEqualToString:@"com.apple.Maps.externaldevice"];

  if (!v4)
  {
    CFStringRef v8 = 0;
    goto LABEL_11;
  }
  if ([v2 code] == (id)1)
  {
    id v5 = [v2 userInfo];
    id v6 = [v5 objectForKeyedSubscript:@"__handoff_error_key"];

    if (v6 && (unint64_t v7 = (unint64_t)[v6 integerValue], v7 <= 4)) {
      CFStringRef v8 = off_1012F3CD0[v7];
    }
    else {
      CFStringRef v8 = 0;
    }
  }
  else
  {
LABEL_7:
    CFStringRef v8 = @"success";
  }
LABEL_11:

  return v8;
}

void sub_1006730B4(id a1)
{
  id v1 = (void *)qword_10160F410;
  qword_10160F410 = (uint64_t)&off_1013ADCF8;
}

id sub_1006734AC()
{
  if (qword_10160F438 != -1) {
    dispatch_once(&qword_10160F438, &stru_1012F3CB0);
  }
  v0 = (void *)qword_10160F430;

  return v0;
}

void sub_100673714(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _isCarPlaySessionActive])
  {
    id v2 = sub_1006734AC();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "CarPlay session did connect, connecting AV device", v5, 2u);
    }

    unsigned int v3 = +[MapsCarPlayExternalDeviceMonitor sharedInstance];
    unsigned int v4 = [v3 carPlayExternalDevice];
    [*(id *)(a1 + 32) setExternalDevice:v4];
  }
}

id sub_1006738E8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _isCarPlaySessionActive];
  if ((result & 1) == 0)
  {
    unsigned int v3 = sub_1006734AC();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)unsigned int v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "CarPlay session did disconnect, disconnecting AV device", v4, 2u);
    }

    return [*(id *)(a1 + 32) setExternalDevice:0];
  }
  return result;
}

void sub_100673D14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(location);
  objc_destroyWeak(&a29);
  _Unwind_Resume(a1);
}

void sub_100673D48(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [v3 object];
  id v6 = sub_1006734AC();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = v5;
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v8 = objc_opt_class();
      BOOL v9 = [v7 ID];
      id v10 = [v7 name];
      long long v11 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@<%p> (ID: %@, name: %@, transportType: %ld)", v8, v7, v9, v10, [v7 transportType]);
    }
    else
    {
      long long v11 = [v7 description];
    }

    long long v12 = [v3 name];
    long long v13 = [v3 userInfo];
    *(_DWORD *)buf = 138412802;
    id v36 = v11;
    __int16 v37 = 2112;
    float v38 = v12;
    __int16 v39 = 2112;
    float v40 = v13;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "notified of update for device: %@ (%@, userInfo: %@", buf, 0x20u);
  }
  long long v14 = [v5 ID];
  __int16 v15 = [WeakRetained[8] ID];
  unint64_t v16 = v14;
  unint64_t v17 = v15;
  if (v16 | v17
    && (float v18 = (void *)v17,
        unsigned __int8 v19 = [(id)v16 isEqual:v17],
        v18,
        (id)v16,
        v18,
        (id)v16,
        (v19 & 1) == 0))
  {
    id v21 = sub_1006734AC();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      id v22 = *(id *)(*(void *)(a1 + 32) + 64);
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v23 = objc_opt_class();
        unint64_t v24 = [v22 ID];
        double v25 = [v22 name];
        double v26 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@<%p> (ID: %@, name: %@, transportType: %ld)", v23, v22, v24, v25, [v22 transportType]);
      }
      else
      {
        double v26 = [v22 description];
      }

      id v27 = v26;
      id v28 = v5;
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v29 = objc_opt_class();
        long long v30 = [v28 ID];
        long long v31 = [v28 name];
        long long v32 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@<%p> (ID: %@, name: %@, transportType: %ld)", v29, v28, v30, v31, [v28 transportType]);
      }
      else
      {
        long long v32 = [v28 description];
      }

      *(_DWORD *)buf = 138412546;
      id v36 = v27;
      __int16 v37 = 2112;
      float v38 = v32;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "external device changed since we registered for notifications (current: %@, incoming: %@)", buf, 0x16u);
    }
    double v33 = +[MapsCarPlayExternalDeviceMonitor sharedInstance];
    double v34 = [v33 carPlayExternalDevice];
    [*(id *)(a1 + 32) setExternalDevice:v34];
  }
  else if ([WeakRetained _checkScreenOwnershipIfNeeded:0])
  {
    uint64_t v20 = sub_1006734AC();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "forced screen ownership check, state updated as a result", buf, 2u);
    }
  }
  else
  {
    [WeakRetained _updateStateForRecievedNotification:v3];
  }
}

void sub_1006741DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 object];
  if ([v4 isCarScene])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v6 = sub_1006734AC();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v7 = 138412290;
      uint64_t v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "notified a CarPlay scene will enter foreground: %@", (uint8_t *)&v7, 0xCu);
    }

    [WeakRetained _updateStateForRecievedNotification:v3];
  }
}

void sub_100674F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100674F58(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _checkScreenOwnershipIfNeeded:v3];
}

void sub_100675688(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) _isCurrentStateEqualLastPostedState];
  id v3 = sub_1006734AC();
  unsigned int v4 = v3;
  if (!v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v5 = [*(id *)(a1 + 32) lastPostedState];
      id v6 = [*(id *)(a1 + 32) currentState];
      *(_DWORD *)buf = 138412546;
      float v18 = v5;
      __int16 v19 = 2112;
      uint64_t v20 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "posting notification\n lastPostedState=%@\n currentState=%@", buf, 0x16u);
    }
    int v7 = sub_1006734AC();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = [*(id *)(a1 + 32) lastPostedState];
      if (v8)
      {
        BOOL v9 = (void *)v8;
        id v10 = [*(id *)(a1 + 32) currentState];

        if (!v10)
        {
LABEL_13:
          long long v14 = +[NSNotificationCenter defaultCenter];
          [v14 postNotificationName:@"MapsExternalDeviceUpdated" object:*(void *)(a1 + 32) userInfo:0];

          unsigned int v4 = [*(id *)(a1 + 32) currentState];
          id v15 = [v4 copy];
          [*(id *)(a1 + 32) setLastPostedState:v15];

          goto LABEL_14;
        }
        long long v11 = [*(id *)(a1 + 32) currentState];
        long long v12 = [*(id *)(a1 + 32) lastPostedState];
        id v16 = 0;
        [v11 isEqualToState:v12 changedKeys:&v16];
        int v7 = v16;

        long long v13 = sub_1006734AC();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          float v18 = v7;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "changedKeys=%@", buf, 0xCu);
        }
      }
    }

    goto LABEL_13;
  }
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "no need to post notification (no change)", buf, 2u);
  }
LABEL_14:
}

void sub_100675BA4(uint64_t a1)
{
  if (*(void *)(a1 + 32) == 2)
  {
    id v1 = +[NSNotificationCenter defaultCenter];
    [v1 postNotificationName:@"MapsExternalNavigationOwnershipUpdatedNotification" object:0 userInfo:0];
  }
}

void sub_10067632C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_100676358(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = *(void **)(a1 + 32);
  if (v6)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100676418;
    block[3] = &unk_1012ED2A0;
    id v9 = v6;
    char v10 = a2;
    id v8 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_100676418(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
}

void sub_100676430(void *a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 userInfo];
  id v5 = [v4 objectForKeyedSubscript:EAAccessoryDestinationStatusIdentifierKey];

  if (v5 && [v5 isEqualToString:a1[4]])
  {
    [*(id *)(*(void *)(a1[7] + 8) + 40) invalidate];
    id v6 = +[NSNotificationCenter defaultCenter];
    [v6 removeObserver:*(void *)(*(void *)(a1[8] + 8) + 40)];

    int v7 = [v3 userInfo];
    id v8 = [v7 objectForKeyedSubscript:EAAccessoryDestinationStatusDidSucceedKey];
    id v9 = [v8 BOOLValue];

    char v10 = sub_100015DB4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = a1[4];
      long long v12 = +[NSNumber numberWithBool:v9];
      long long v13 = [v3 userInfo];
      long long v14 = [v13 objectForKeyedSubscript:EAAccessoryDestinationStatusParametersUsedKey];
      int v16 = 138412802;
      uint64_t v17 = v11;
      __int16 v18 = 2112;
      __int16 v19 = v12;
      __int16 v20 = 2112;
      id v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Destination sharing status notification (destination:%@, status:%@, used:%@)", (uint8_t *)&v16, 0x20u);
    }
    if (v9)
    {
      id v15 = 0;
    }
    else
    {
      id v15 = [(id)objc_opt_class() _destinationHandoffErrorWithReason:3];
    }
    (*(void (**)(void))(a1[6] + 16))();
  }
}

void sub_100676654(uint64_t a1)
{
  unsigned int v2 = sub_100015DB4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    unsigned int v4 = +[NSNumber numberWithDouble:*(double *)(a1 + 64)];
    int v8 = 138412546;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Forcibly removing destination sharing notification observer, took too long (destination:%@, timeout:%@s)", (uint8_t *)&v8, 0x16u);
  }
  id v5 = +[NSNotificationCenter defaultCenter];
  [v5 removeObserver:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];

  uint64_t v6 = *(void *)(a1 + 48);
  int v7 = [(id)objc_opt_class() _destinationHandoffErrorWithReason:4];
  (*(void (**)(uint64_t, void, void *))(v6 + 16))(v6, 0, v7);
}

id sub_100676980(uint64_t a1)
{
  return _[*(id *)(a1 + 48) _presentActivityControllerForDestination:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
}

id sub_100676EFC(uint64_t a1)
{
  return [*(id *)(a1 + 64) _presentActivityControllerForDestination:*(void *)(a1 + 32) searchResult:*(void *)(a1 + 40) dictionary:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

uint64_t sub_100676F10(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_100676F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a3, a5);
  }
  return result;
}

void sub_100677284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = +[NSString stringWithFormat:@"%@:%@", a2, a3];
  [v3 addObject:v4];
}

void sub_1006772EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = a1;
  if (IOHIDEventGetType() == 3)
  {
    uint64_t IntegerValue = IOHIDEventGetIntegerValue();
    uint64_t v6 = IOHIDEventGetIntegerValue();
    uint64_t v7 = IOHIDEventGetIntegerValue();
    if (IntegerValue == 12 && v6 == 670 && !v7) {
      [v8 _handleIOHIDEvent:a4];
    }
  }
}

void sub_1006774D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"MapsExternalDeviceRepeatNavigationInstructionNotification" object:WeakRetained userInfo:0];
}

void sub_100677E44(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  id v4[2] = sub_100677EF4;
  void v4[3] = &unk_1012E5D58;
  id v5 = a2;
  id v6 = *(id *)(a1 + 32);
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

id sub_100677EF4(uint64_t a1)
{
  unsigned int v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v4 = [v3 route];
  [v2 navigationService:v3 didReroute:v4 rerouteReason:0];

  id v6 = *(void **)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  id v7 = [v5 navigationState];

  return _[v6 navigationService:v5 didChangeNavigationState:v7];
}

void sub_100678498(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarExternalDevice");
  unsigned int v2 = (void *)qword_10160F430;
  qword_10160F430 = (uint64_t)v1;
}

id sub_100678C24(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 4_Block_object_dispose(&STACK[0x238], 8) = 0;
  [*(id *)(a1 + 32) setUserIsActiveStateChangeQueued:0];
  unsigned int v2 = *(void **)(a1 + 32);

  return [v2 continueQuickRouteETAs];
}

void sub_1006795C8(uint64_t a1)
{
  unsigned int v2 = *(void **)(a1 + 32);
  if (v2)
  {
    id v3 = [v2 userInfo];
    id v4 = [v3 objectForKeyedSubscript:MKErrorGEOErrorKey];
    unsigned int v5 = [v4 intValue];

    if (v5 == -4)
    {
      id v6 = [*(id *)(a1 + 32) userInfo];
      id v7 = [v6 objectForKeyedSubscript:MKErrorGEOErrorUserInfoKey];

      id v8 = [v7 objectForKeyedSubscript:GEOErrorThrottlingTimeUntilResetKey];
      [v8 doubleValue];
      double v10 = v9;

      +[CarQuickRouteRefreshOperation engageFullThrottleForInterval:v10];
      [*(id *)(a1 + 40) _Car_queueUpdateETA];
    }
  }
  uint64_t v11 = [*(id *)(*(void *)(a1 + 48) + 8) allKeysForObject:*(void *)(a1 + 40)];
  id v16 = [v11 firstObject];

  if (v16)
  {
    long long v12 = *(void **)(a1 + 56);
    if (v12)
    {
      [v12 travelTime];
      if (v13 >= 0.0)
      {
        long long v14 = [*(id *)(a1 + 48) itemAtIndexPath:v16];
        [*(id *)(*(void *)(a1 + 48) + 16) setObject:*(void *)(a1 + 56) forKey:v14];
      }
    }
    id v15 = [*(id *)(*(void *)(a1 + 48) + 56) cellForRowAtIndexPath:v16];
    if (v15 && *(void *)(a1 + 32) | *(void *)(a1 + 56)) {
      [*(id *)(a1 + 48) _applyRouteETA:toCell:animated:];
    }
  }
}

void sub_100679CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_100679CEC(id *a1, void *a2)
{
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v5 = objc_loadWeakRetained(a1 + 6);

    if (v5)
    {
      id v6 = objc_loadWeakRetained(a1 + 5);
      id v7 = objc_loadWeakRetained(a1 + 6);
      [v7 setupWithModel:v9 cellStyle:[a1[4] cellStyle]];

      id v8 = [v6 tableView];
      [v8 reloadData];
    }
  }
}

void sub_10067A954(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) amount];
  id v5 = [v4 formattedStringIncludeSymbol:0];
  if (v5)
  {
    [v3 setPlaceholder:v5];
  }
  else
  {
    id v6 = +[NSBundle mainBundle];
    id v7 = [v6 localizedStringForKey:@"ridesharing.feedback.tip.customTip.placeholderAmount" value:@"localized string not found" table:0];
    [v3 setPlaceholder:v7];
  }
  [v3 setKeyboardType:8];
  [v3 setLeftViewMode:3];
  id v8 = objc_alloc_init((Class)UILabel);
  id v9 = objc_alloc((Class)NSAttributedString);
  uint64_t v10 = *(void *)(a1 + 40);
  NSAttributedStringKey v18 = NSForegroundColorAttributeName;
  uint64_t v11 = +[UIColor lightGrayColor];
  __int16 v19 = v11;
  long long v12 = +[NSDictionary dictionaryWithObjects:&v19 forKeys:&v18 count:1];
  id v13 = [v9 initWithString:v10 attributes:v12];
  [v8 setAttributedText:v13];

  [v8 sizeToFit];
  id v14 = objc_alloc((Class)UIView);
  [v8 frame];
  double v16 = v15 + 5.0;
  [v8 frame];
  id v17 = [v14 initWithFrame:0.0, 0.0, v16];
  [v17 addSubview:v8];
  [v3 setLeftView:v17];
}

void sub_10067AB64(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) textFields];
  id v3 = [v2 lastObject];
  id v10 = [v3 text];

  if (![v10 length])
  {
    id v4 = [*(id *)(a1 + 32) textFields];
    id v5 = [v4 lastObject];
    uint64_t v6 = [v5 placeholder];

    id v10 = (id)v6;
  }
  id v7 = [RideBookingCurrencyAmount alloc];
  id v8 = +[NSDecimalNumber decimalNumberWithString:v10];
  id v9 = [(RideBookingCurrencyAmount *)v7 initWithAmount:v8 currencyCode:*(void *)(a1 + 48)];
  [*(id *)(a1 + 40) setAmount:v9];

  [*(id *)(a1 + 56) _selectedOption:*(void *)(a1 + 40) fromOptions:*(void *)(a1 + 64)];
}

int64_t sub_10067B0C4(id a1, RideBookingCurrencyAmount *a2, RideBookingCurrencyAmount *a3)
{
  id v4 = a3;
  id v5 = [(RideBookingCurrencyAmount *)a2 amount];
  uint64_t v6 = [(RideBookingCurrencyAmount *)v4 amount];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_10067BB18(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  unsigned int v2 = (void *)qword_10160F440;
  qword_10160F440 = (uint64_t)v1;

  [(id)qword_10160F440 setTimeStyle:1];
  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F440 setLocale:v3];
}

void sub_10067BC38(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  unsigned int v2 = (void *)qword_10160F450;
  qword_10160F450 = (uint64_t)v1;

  [(id)qword_10160F450 setTimeStyle:1];
  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F450 setLocale:v3];
}

void sub_10067BD44(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  unsigned int v2 = (void *)qword_10160F460;
  qword_10160F460 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F460 setLocale:v3];
}

void sub_10067BE44(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  unsigned int v2 = (void *)qword_10160F470;
  qword_10160F470 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F470 setLocale:v3];
}

void sub_10067BF44(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  unsigned int v2 = (void *)qword_10160F480;
  qword_10160F480 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F480 setLocale:v3];
}

void sub_10067C044(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  unsigned int v2 = (void *)qword_10160F490;
  qword_10160F490 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F490 setLocale:v3];
}

void sub_10067C144(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  unsigned int v2 = (void *)qword_10160F4A0;
  qword_10160F4A0 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F4A0 setLocale:v3];
}

void sub_10067C21C(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateComponentsFormatter);
  unsigned int v2 = (void *)qword_10160F4B0;
  qword_10160F4B0 = (uint64_t)v1;

  [(id)qword_10160F4B0 setUnitsStyle:2];
  [(id)qword_10160F4B0 setAllowedUnits:112];
  [(id)qword_10160F4B0 setMaximumUnitCount:2];
  id v3 = (void *)qword_10160F4B0;

  _[v3 setCollapsesLargestUnit:1];
}

void sub_10067C2F4(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateComponentsFormatter);
  unsigned int v2 = (void *)qword_10160F4C0;
  qword_10160F4C0 = (uint64_t)v1;

  [(id)qword_10160F4C0 setUnitsStyle:3];
  [(id)qword_10160F4C0 setAllowedUnits:112];
  [(id)qword_10160F4C0 setMaximumUnitCount:2];
  id v3 = (void *)qword_10160F4C0;

  _[v3 setCollapsesLargestUnit:1];
}

void sub_10067C534(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = sub_10009E2D4();
    id v8 = v7;
    if (v5)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        int v13 = 134349314;
        id v14 = WeakRetained;
        __int16 v15 = 2112;
        id v16 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "[%{public}p] Got error when trying to determine VLF tile availability: %@", (uint8_t *)&v13, 0x16u);
      }

      [WeakRetained setAreTilesAvailable:0];
      id v9 = +[NSDate date];
      [WeakRetained setLastErrorDate:v9];
    }
    else
    {
      BOOL v10 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
      if (a2)
      {
        if (v10)
        {
          int v13 = 134349056;
          id v14 = WeakRetained;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "[%{public}p] VLF tiles are available", (uint8_t *)&v13, 0xCu);
        }

        uint64_t v11 = WeakRetained;
        uint64_t v12 = 1;
      }
      else
      {
        if (v10)
        {
          int v13 = 134349056;
          id v14 = WeakRetained;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "[%{public}p] VLF tiles are not available", (uint8_t *)&v13, 0xCu);
        }

        uint64_t v11 = WeakRetained;
        uint64_t v12 = 0;
      }
      [v11 setAreTilesAvailable:v12];
      [WeakRetained setPreviouslyCheckedCoordinate:*(double *)(a1 + 40), *(double *)(a1 + 48)];
    }
    [WeakRetained setAvailabilityCheckInFlight:0];
  }
}

void sub_10067CAFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10067CB18(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [a1[4] workerQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10067CC34;
  block[3] = &unk_1012F3F48;
  objc_copyWeak(&v15, a1 + 7);
  id v11 = a1[5];
  id v12 = v5;
  id v13 = v6;
  id v14 = a1[6];
  id v8 = v6;
  id v9 = v5;
  dispatch_async(v7, block);

  objc_destroyWeak(&v15);
}

void sub_10067CC34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  [WeakRetained _handleResponseForTicket:*(void *)(a1 + 32) mapItems:*(void *)(a1 + 40) error:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

uint64_t sub_10067CDD8(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

id sub_10067D16C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _submitTicket:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

id sub_10067D550()
{
  if (qword_10160F4E8 != -1) {
    dispatch_once(&qword_10160F4E8, &stru_1012F3F90);
  }
  v0 = (void *)qword_10160F4E0;

  return v0;
}

void sub_10067E4D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsVideoPlayerView");
  uint64_t v2 = (void *)qword_10160F4E0;
  qword_10160F4E0 = (uint64_t)v1;
}

id sub_10067F1A8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setImage:a2];
}

id sub_100680280()
{
  if (qword_10160F4F8 != -1) {
    dispatch_once(&qword_10160F4F8, &stru_1012F3FD8);
  }
  v0 = (void *)qword_10160F4F0;

  return v0;
}

void sub_100680D28(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ARSessionDebugLogger");
  uint64_t v2 = (void *)qword_10160F4F0;
  qword_10160F4F0 = (uint64_t)v1;
}

void sub_100681F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100681F30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _didStopDownload];
    id WeakRetained = v2;
  }
}

void sub_100682A2C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100682A78(id *a1)
{
  +[GEOAPPortal captureUserAction:486 target:112 value:0];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  uint64_t v2 = [WeakRetained actionDelegate];
  id v3 = objc_loadWeakRetained(a1);
  id v4 = [v3 subscriptionInfo];
  [v2 offlineMapDetailsActionSectionControllerDidSelectDownloadNowOnPairedDevice:v4];
}

void sub_100682B20(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained actionDelegate];
  id v3 = objc_loadWeakRetained(v1);
  id v4 = [v3 subscriptionInfo];
  [v2 offlineMapDetailsActionSectionControllerDidSelectRemoveFromPairedDevice:v4];
}

void sub_100682BAC(id *a1)
{
  +[GEOAPPortal captureUserAction:484 target:112 value:0];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  uint64_t v2 = [WeakRetained actionDelegate];
  id v3 = objc_loadWeakRetained(a1);
  id v4 = [v3 subscriptionInfo];
  [v2 offlineMapDetailsActionSectionControllerDidSelectAddToPairedDevice:v4];
}

id sub_100683634(uint64_t a1)
{
  uint64_t v2 = sub_10008FEAC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Thermal pressure updated", v4, 2u);
  }

  return [*(id *)(a1 + 32) setCurrentLightLevel:[*(id *)(a1 + 32) _computedLightLevel]];
}

void sub_1006850D8(id a1)
{
  os_log_t v1 = objc_alloc_init(UserProfileLinkOfflineMapsProvider);
  uint64_t v2 = (void *)qword_10160F510;
  qword_10160F510 = (uint64_t)v1;
}

id sub_1006867B8(uint64_t a1)
{
  double v2 = *(double *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) view];
  [v3 setAlpha:v2];

  double v4 = *(double *)(a1 + 56);
  double v5 = *(double *)(a1 + 64);
  double v6 = *(double *)(a1 + 72);
  double v7 = *(double *)(a1 + 80);
  id v8 = *(void **)(a1 + 40);

  return [v8 setFrame:v4, v5, v6, v7];
}

id sub_10068681C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:1.0];
  double v2 = [*(id *)(a1 + 40) contentView];
  [v2 setAlpha:1.0];

  [*(id *)(a1 + 48) removeFromSuperview];
  id v3 = *(void **)(a1 + 56);

  return [v3 completeTransition:1];
}

void sub_100687098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t sub_1006870BC(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 136) ^ 1;
  return result;
}

void sub_1006870DC(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = [v8 endWaypoint];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    double v5 = [v8 endWaypoint];
    double v6 = [v5 route];
    double v7 = [v6 persistentData];

    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v7 isAvailableForCurrentCountry] ^ 1;
  }
}

void sub_100687574(id a1, NSError *a2)
{
  double v2 = a2;
  if (v2)
  {
    id v3 = sub_1000AA148();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      double v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting recent: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1006876A8(id a1, NSError *a2)
{
  double v2 = a2;
  if (v2)
  {
    id v3 = sub_1000AA148();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      double v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting recents: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100687DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100687DCC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained clearSectionAtIndex:*(void *)(a1 + 40)];
}

void sub_1006883A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1006883C0(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  double v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained removeItemAtIndexPath:*(void *)(a1 + 32)];

  v5[2](v5, 1);
}

void sub_100688518(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100688534(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, 1);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained shareRowAtIndexPath:*(void *)(a1 + 32) completion:&stru_1012F41A8];
}

void sub_100688F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100688F88(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      id v9 = sub_1000519B4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v14 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "VehicleListVC - failed to get virtual garage with error: %@", buf, 0xCu);
      }
    }
    else
    {
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_1006890E0;
      void v10[3] = &unk_1012E5D58;
      id v11 = WeakRetained;
      id v12 = v5;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

      id v9 = v11;
    }
  }
}

id sub_1006890E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _consumeUpdatedGarage:*(void *)(a1 + 40)];
}

void sub_10068D21C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _consumeUpdatedGarage:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_10068E128(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_10068E144(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    uint64_t v2 = [WeakRetained delegate];
    [v2 unpinSelectedTransitLine];

    id WeakRetained = v3;
  }
}

void sub_10068E1A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    uint64_t v2 = [WeakRetained delegate];
    [v2 pinSelectedTransitLine];

    id WeakRetained = v3;
  }
}

void sub_10068E1FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    uint64_t v2 = [WeakRetained delegate];
    [v2 viewLineOnMap];

    id WeakRetained = v3;
  }
}

void sub_10068E258(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    uint64_t v2 = [WeakRetained delegate];
    [v2 showDirectionsToSelectedTransitStop];

    id WeakRetained = v3;
  }
}

void sub_10068E2B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    uint64_t v2 = [WeakRetained delegate];
    [v2 showLineInfo];

    id WeakRetained = v3;
  }
}

void sub_10068F62C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v3 = sub_1000AA148();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = [*(id *)(*(void *)(a1 + 32) + 288) shortcut];
      int v5 = 138412290;
      id v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to save shortcut: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_10068FFF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100690024(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _openContact];
    id WeakRetained = v2;
  }
}

void sub_100690068(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _refineAction];
    id WeakRetained = v2;
  }
}

void sub_1006900AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _removeAction];
    id WeakRetained = v2;
  }
}

void sub_100690748(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100690774(uint64_t a1, char a2)
{
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v5 = [WeakRetained sessionController];
  id v6 = objc_loadWeakRetained(v3);
  double v7 = [v6 shortcut];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100690874;
  _OWORD v8[3] = &unk_1012E6830;
  char v10 = a2;
  objc_copyWeak(&v9, v3);
  [v5 createOrUpdateMeCardWithFavorite:v7 completion:v8];

  objc_destroyWeak(&v9);
}

void sub_100690860(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100690874(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10069090C;
    block[3] = &unk_1012E6708;
    objc_copyWeak(&v2, (id *)(a1 + 32));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v2);
  }
}

void sub_10069090C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _close];
}

void sub_10069094C(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _close];
  }
}

void sub_100691B80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100691B9C(id *a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100691C5C;
  v3[3] = &unk_1012EF228;
  char v7 = a2;
  objc_copyWeak(&v6, a1 + 6);
  id v4 = a1[4];
  id v5 = a1[5];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);

  objc_destroyWeak(&v6);
}

void sub_100691C5C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (v2)
  {
    [WeakRetained _updateWithType:[*(id *)(a1 + 32) type]];
  }
  else
  {
    id v3 = [WeakRetained actionsTableView];
    [v3 deselectRowAtIndexPath:*(void *)(a1 + 40) animated:1];
  }
}

void sub_100692024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100692040(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_removeContact:fromSection:", *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "section"));
}

void sub_1006924F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100692514(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _openContact];
}

id sub_1006928E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _save];
}

void sub_1006932B0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    [*(id *)(a1 + 32) layoutProgress];
    if (v2 > 0.0) {
      sub_1008265CC();
    }
    else {
      sub_100826530();
    }
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    [*(id *)(*(void *)(a1 + 32) + 32) setOverlayColor:v5];
  }
  else
  {
    sub_10082634C();
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    [*(id *)(a1 + 32) layoutProgress];
    id v4 = [v5 colorWithAlphaComponent:v3 * 0.239999995];
    [*(id *)(*(void *)(a1 + 32) + 32) setOverlayColor:v4];
  }
}

void sub_100693588(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) delegate];
  [v2 updatedLaneGuidanceHeight:*(double *)(a1 + 40)];

  double v3 = [*(id *)(a1 + 32) laneGuidanceInfo];
  if (v3) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  id v5 = [*(id *)(a1 + 32) laneGuidanceView];
  [v5 setAlpha:v4];

  id v7 = [*(id *)(a1 + 32) view];
  id v6 = [v7 superview];
  [v6 layoutIfNeeded];
}

void sub_100693AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100693AFC(id *a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100693BDC;
  void v5[3] = &unk_1012EC980;
  objc_copyWeak(&v9, a1 + 6);
  id v6 = a1[4];
  id v7 = v3;
  id v8 = a1[5];
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v9);
}

void sub_100693BDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _updateAnalyticsWithRideStatus:*(void *)(a1 + 32) feedbackError:*(void *)(a1 + 40)];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      id v6 = "RideBookingRideStatusObserverProxy.m";
      __int16 v7 = 1026;
      int v8 = 54;
      __int16 v9 = 2082;
      char v10 = "-[RideBookingRideStatusObserverProxy sendFeedbackForRideStatus:feedbackRating:feedbackTip:completion:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_100693EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100693F0C(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100694038;
  void v14[3] = &unk_1012F4258;
  objc_copyWeak(&v20, a1 + 6);
  id v15 = a1[4];
  id v16 = v9;
  id v10 = a1[5];
  id v18 = v8;
  id v19 = v10;
  id v17 = v7;
  id v11 = v8;
  id v12 = v7;
  id v13 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

  objc_destroyWeak(&v20);
}

void sub_100694038(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _updateAnalyticsWithRideStatus:*(void *)(a1 + 32) cancelError:*(void *)(a1 + 40) handling:0];
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      id v6 = "RideBookingRideStatusObserverProxy.m";
      __int16 v7 = 1026;
      int v8 = 68;
      __int16 v9 = 2082;
      id v10 = "-[RideBookingRideStatusObserverProxy checkIfCanCancelRideWithRideStatus:completion:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_100694344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100694370(id *a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100694450;
  void v5[3] = &unk_1012EC980;
  objc_copyWeak(&v9, a1 + 6);
  id v6 = a1[4];
  id v7 = v3;
  id v8 = a1[5];
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v9);
}

void sub_100694450(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _updateAnalyticsWithRideStatus:*(void *)(a1 + 32) cancelError:*(void *)(a1 + 40) handling:1];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      id v6 = "RideBookingRideStatusObserverProxy.m";
      __int16 v7 = 1026;
      int v8 = 82;
      __int16 v9 = 2082;
      id v10 = "-[RideBookingRideStatusObserverProxy cancelRideWithRideStatus:completion:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_100694DAC(uint64_t a1)
{
  double v2 = +[MNNavigationService sharedService];
  unsigned __int8 v3 = [v2 isInNavigatingState];

  if ((v3 & 1) == 0)
  {
    id v4 = *(void **)(a1 + 32);
    [v4 setHidden:1];
  }
}

void sub_100695664(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  id v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    int v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    __int16 v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

id sub_100695840(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performPostExtendedLaunchInitialization];
}

void sub_100695A14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_100695A34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained createSubmissionManagerIfNeeded];
}

void sub_100696244(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateSecureAppAssertion];
  id v2 = [*(id *)(a1 + 32) appCoordinator];
  [v2 hideFullscreenDirectionsList];
}

void sub_10069629C(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 250000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100696344;
  block[3] = &unk_1012E6EA8;
  id v4 = *(id *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100696344(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1006964B8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  uint64_t v3 = GEOFindOrCreateLog();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      __int16 v10 = 0;
      uint64_t v5 = "Acquired navigation status bar assertion";
      uint64_t v6 = (uint8_t *)&v10;
      __int16 v7 = v4;
      os_log_type_t v8 = OS_LOG_TYPE_INFO;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v7, v8, v5, v6, 2u);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    __int16 v9 = 0;
    uint64_t v5 = "Failed acquire to navigation status bar assertion";
    uint64_t v6 = (uint8_t *)&v9;
    __int16 v7 = v4;
    os_log_type_t v8 = OS_LOG_TYPE_ERROR;
    goto LABEL_6;
  }
}

void sub_10069656C(id a1)
{
  uint64_t v1 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)BOOL v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Navigation status bar assertion invalidated", v2, 2u);
  }
}

void sub_100696820(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) idleTimerController];
  [v1 setDesiredIdleTimerState:0 forReason:1];
}

void sub_100697170(id a1, NSError *a2)
{
  BOOL v2 = a2;
  uint64_t v3 = v2;
  if (v2)
  {
    id v4 = [(NSError *)v2 code];
    uint64_t v5 = GEOFindOrCreateLog();
    uint64_t v6 = v5;
    if (v4 == (id)5)
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        LOWORD(v11) = 0;
        __int16 v7 = "Invalidated secure app assertion for Maps navigation";
        os_log_type_t v8 = v6;
        os_log_type_t v9 = OS_LOG_TYPE_INFO;
        uint32_t v10 = 2;
LABEL_7:
        _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, (uint8_t *)&v11, v10);
      }
    }
    else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v3;
      __int16 v7 = "Failed to acquire secure app assertion for Maps navigation: %@";
      os_log_type_t v8 = v6;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      uint32_t v10 = 12;
      goto LABEL_7;
    }
  }
}

void sub_1006973DC(id a1)
{
  if (!+[UIApplication _maps_isAnySceneConnectedForRole:_UIWindowSceneSessionRoleCarPlay])
  {
    id v1 = sub_100578094();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)BOOL v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Undimming the screen (Transit)", v2, 2u);
    }

    SBSUndimScreen();
  }
}

void sub_10069777C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak(v20);
  objc_destroyWeak(&a20);
  _Unwind_Resume(a1);
}

void sub_1006977CC(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = +[CarDisplayController sharedInstance];
  unsigned int v4 = [v3 isCurrentlyConnectedToAnyCarScene];

  [WeakRetained setDesiredIdleTimerState:a2 & (v4 ^ 1) forReason:2];
}

void sub_100697850(id a1)
{
  if (!+[UIApplication _maps_isAnySceneConnectedForRole:_UIWindowSceneSessionRoleCarPlay])
  {
    id v1 = sub_100578094();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)BOOL v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Undimming the screen", v2, 2u);
    }

    SBSUndimScreen();
  }
}

void sub_1006978D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateSecureAppAssertion];
}

id sub_100697F74(uint64_t a1)
{
  BOOL v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = [*(id *)(a1 + 32) name];
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Removing priority assertion %@", (uint8_t *)&v5, 0xCu);
  }
  return [*(id *)(a1 + 32) invalidate];
}

void sub_100698644(id *a1)
{
  BOOL v2 = [a1[4] userInfo];
  uint64_t v3 = [v2 objectForKeyedSubscript:MNErrorInterruptionDatesKey];

  GEOConfigGetDouble();
  double v5 = v4;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  id v6 = v3;
  id v7 = [v6 countByEnumeratingWithState:&v41 objects:v48 count:16];
  os_log_type_t v8 = v6;
  if (!v7) {
    goto LABEL_28;
  }
  id v9 = v7;
  uint64_t v10 = *(void *)v42;
  while (2)
  {
    for (unint64_t i = 0; i != v9; unint64_t i = (char *)i + 1)
    {
      if (*(void *)v42 != v10) {
        objc_enumerationMutation(v6);
      }
      [*(id *)(*((void *)&v41 + 1) + 8 * i) timeIntervalSinceNow];
      if (v5 > -v12)
      {

        os_log_type_t v8 = +[NSMutableString stringWithString:@"navd crashed while navigating:\n"];
        id v13 = objc_alloc_init((Class)NSDateFormatter);
        [v13 setDateFormat:@"YYYY-MM-dd HH:mm:ssZ"];
        long long v39 = 0u;
        long long v40 = 0u;
        long long v37 = 0u;
        long long v38 = 0u;
        id v14 = v6;
        id v15 = [v14 countByEnumeratingWithState:&v37 objects:v47 count:16];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = *(void *)v38;
          do
          {
            for (j = 0; j != v16; j = (char *)j + 1)
            {
              if (*(void *)v38 != v17) {
                objc_enumerationMutation(v14);
              }
              id v19 = [v13 stringFromDate:*(void *)(*((void *)&v37 + 1) + 8 * (void)j)];
              [v8 appendFormat:@"• %@\n", v19];
            }
            id v16 = [v14 countByEnumeratingWithState:&v37 objects:v47 count:16];
          }
          while (v16);
        }

        id v20 = objc_opt_new();
        id v21 = [a1[5] hardwareModel];
        id v22 = [a1[6] buildVersion];
        uint64_t v23 = +[NSString stringWithFormat:@"navd interruptions detected (%@/%@)", v21, v22];
        [v20 setTitle:v23];

        [v20 setDescriptionText:v8];
        [v20 setClassification:2];
        [v20 setReproducibility:5];
        unint64_t v24 = +[MapsRadarComponent mapsNavFrameworkComponent];
        [v20 setComponent:v24];

        double v25 = sub_10000AF10();
        if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_27;
        }
        id v26 = a1[5];
        if (!v26)
        {
          long long v31 = @"<nil>";
          goto LABEL_26;
        }
        id v27 = (objc_class *)objc_opt_class();
        uint64_t v28 = NSStringFromClass(v27);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v29 = [v26 performSelector:"accessibilityIdentifier"];
          long long v30 = v29;
          if (v29 && ![v29 isEqualToString:v28])
          {
            long long v31 = +[NSString stringWithFormat:@"%@<%p, %@>", v28, v26, v30];

            goto LABEL_24;
          }
        }
        long long v31 = +[NSString stringWithFormat:@"%@<%p>", v28, v26];
LABEL_24:

LABEL_26:
        *(_DWORD *)buf = 138543362;
        double v46 = v31;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "[%{public}@] Launching TTR for nav service failure", buf, 0xCu);

LABEL_27:
        long long v32 = +[MapsRadarController sharedInstance];
        double v33 = [a1[4] userInfo];
        double v34 = [v33 objectForKey:MNErrorInternalDescriptionKey];
        double v35 = [v34 lowercaseString];
        id v36 = [a1[5] chromeViewController];
        [v32 launchTTRWithRadar:v20 promptTitle:v35 fromViewController:v36];

        goto LABEL_28;
      }
    }
    id v9 = [v6 countByEnumeratingWithState:&v41 objects:v48 count:16];
    if (v9) {
      continue;
    }
    break;
  }
  os_log_type_t v8 = v6;
LABEL_28:
}

id sub_100698E7C()
{
  if (qword_10160F530 != -1) {
    dispatch_once(&qword_10160F530, &stru_1012F4440);
  }
  v0 = (void *)qword_10160F528;

  return v0;
}

void sub_100699548(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  double v5 = *(void **)(v4 + 80);
  *(void *)(v4 + 80) = 0;

  uint64_t v14 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v11 = 0u;
  +[StartNavigationDetailsBuilder defaultNavigationDetailsOptions];
  if ([*(id *)(a1 + 40) originIsWatch])
  {
    id v6 = +[CarDisplayController sharedInstance];
    unsigned __int8 v7 = [v6 isCurrentlyConnectedToAnyCarScene];

    if ((v7 & 1) == 0) {
      *((void *)&v13 + 1) = 0;
    }
  }
  os_log_type_t v8 = *(void **)(a1 + 48);
  v9[0] = v11;
  v9[1] = v12;
  _DWORD v9[2] = v13;
  uint64_t v10 = v14;
  [v8 startNavigationWithRouteCollection:v3 navigationDetailsOptions:v9];
}

void sub_100699618(id a1, NSError *a2, GEODirectionsError *a3)
{
  uint64_t v4 = a2;
  double v5 = a3;
  id v6 = sub_100698E7C();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412546;
    id v9 = v4;
    __int16 v10 = 2112;
    long long v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Failed to convert provided persistent data to navigable route: %@ %@", (uint8_t *)&v8, 0x16u);
  }

  unsigned __int8 v7 = +[IPCServer sharedServer];
  [v7 navigationStateDidChangeTo:2 reason:@"Unable to create navigable route from provided persistent data"];
}

void sub_100699710(uint64_t a1)
{
  BOOL v2 = sub_100698E7C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned __int8 v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Starting navigation with recreated navigable route", v7, 2u);
  }

  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = [RouteCollection alloc];
  uint64_t v8 = *(void *)(a1 + 32);
  double v5 = +[NSArray arrayWithObjects:&v8 count:1];
  id v6 = [(RouteCollection *)v4 initWithRoutes:v5 currentRouteIndex:0];
  (*(void (**)(uint64_t, RouteCollection *))(v3 + 16))(v3, v6);
}

id sub_100699818(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 uniqueRouteID];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_10069A104(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10069A1B0;
  void v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_10069A1B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  BOOL v2 = [*(id *)(a1 + 32) authorizationStatus] == 0;
  id v3 = *(uint64_t (**)(uint64_t, BOOL))(v1 + 16);

  return v3(v1, v2);
}

void sub_10069A2A4(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  id v4[2] = sub_10069A354;
  void v4[3] = &unk_1012E76E8;
  id v5 = a2;
  id v6 = *(id *)(a1 + 32);
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_10069A354(uint64_t a1)
{
  if ([*(id *)(a1 + 32) authorizationStatus])
  {
    +[GEOAPPortal captureUserAction:319 target:29 value:0];
    BOOL v2 = +[NSURL URLWithString:UIApplicationOpenNotificationSettingsURLString];
    id v3 = +[UIApplication sharedApplication];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_10069A57C;
    void v5[3] = &unk_1012EAFC0;
    id v6 = *(id *)(a1 + 40);
    [v3 openURL:v2 options:&__NSDictionary0__struct completionHandler:v5];
  }
  else
  {
    +[GEOAPPortal captureUserAction:320 target:29 value:0];
    id v4 = +[UNUserNotificationCenter currentNotificationCenter];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10069A4E8;
    void v7[3] = &unk_1012F3B90;
    id v8 = *(id *)(a1 + 40);
    [v4 requestAuthorizationWithOptions:14 completionHandler:v7];

    BOOL v2 = v8;
  }
}

void sub_10069A4E8(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10069A56C;
  block[3] = &unk_1012E6EA8;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_10069A56C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10069A57C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10069A994(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsAppDelegate");
  id v2 = (void *)qword_10160F528;
  qword_10160F528 = (uint64_t)v1;
}

void sub_10069C2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak((id *)(v9 - 168));
  objc_destroyWeak((id *)(v9 - 160));
  _Unwind_Resume(a1);
}

void sub_10069C300(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100576D94();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v7 = 138412546;
    uint64_t v8 = v5;
    __int16 v9 = 2112;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "User selected to pair accessory (%@) to vehicle: %@", (uint8_t *)&v7, 0x16u);
  }

  +[VehicleDisambiguator pairAccessory:*(void *)(a1 + 32) withVehicle:v3];
  id v6 = +[VGVirtualGarageService sharedService];
  [v6 virtualGarageSelectVehicle:v3];
}

NSString *__cdecl sub_10069C3FC(id a1, NSArray *a2)
{
  id v2 = a2;
  if ([(NSArray *)v2 count])
  {
    id v3 = sub_100099700(v2, &stru_1012F44E8);
    id v4 = [v3 sortedArrayUsingComparator:&stru_1012F4528];
    uint64_t v5 = [v4 componentsJoinedByString:@"_"];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return (NSString *)v5;
}

NSString *__cdecl sub_10069C498(id a1, VGVehicle *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)NSMutableString) initWithString:@"_disambiguation_"];
  uint64_t v5 = [(VGVehicle *)v3 pairedAppIdentifier];
  id v6 = (void *)v5;
  if (v5) {
    CFStringRef v7 = (const __CFString *)v5;
  }
  else {
    CFStringRef v7 = &stru_101324E70;
  }
  [v4 appendString:v7];

  uint64_t v8 = [(VGVehicle *)v3 displayName];
  __int16 v9 = (void *)v8;
  if (v8) {
    CFStringRef v10 = (const __CFString *)v8;
  }
  else {
    CFStringRef v10 = &stru_101324E70;
  }
  [v4 appendString:v10];

  uint64_t v11 = [(VGVehicle *)v3 year];
  long long v12 = (void *)v11;
  if (v11) {
    CFStringRef v13 = (const __CFString *)v11;
  }
  else {
    CFStringRef v13 = &stru_101324E70;
  }
  [v4 appendString:v13];

  uint64_t v14 = [(VGVehicle *)v3 model];
  id v15 = (void *)v14;
  if (v14) {
    CFStringRef v16 = (const __CFString *)v14;
  }
  else {
    CFStringRef v16 = &stru_101324E70;
  }
  [v4 appendString:v16];

  uint64_t v17 = [(VGVehicle *)v3 manufacturer];

  if (v17) {
    CFStringRef v18 = v17;
  }
  else {
    CFStringRef v18 = &stru_101324E70;
  }
  [v4 appendString:v18];

  id v19 = [v4 copy];

  return (NSString *)v19;
}

int64_t sub_10069C5C8(id a1, NSString *a2, NSString *a3)
{
  return [(NSString *)a2 compare:a3];
}

void sub_10069C5D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    *((unsigned char *)WeakRetained + _Block_object_dispose(&STACK[0x238], 8) = 1;
    id v6 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    CFStringRef v7 = sub_100576D94();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v8 = 138412290;
      __int16 v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Marking vehicle combination as viewed: %@", (uint8_t *)&v8, 0xCu);
    }

    sub_100CDBF90(v6);
  }
}

void sub_10069C6CC(id *a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10069C7C4;
  block[3] = &unk_1012F4658;
  objc_copyWeak(&v10, a1 + 7);
  id v8 = a1[5];
  id v6 = v3;
  id v7 = a1[4];
  id v9 = a1[6];
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v10);
}

void sub_10069C7C4(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  if (WeakRetained)
  {
    id v3 = +[NSBundle mainBundle];
    id v4 = [v3 localizedStringForKey:@"Yes (Pair) [CarPlay]" value:@"localized string not found" table:0];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10069C998;
    void v12[3] = &unk_1012E5F78;
    id v14 = a1[6];
    id v13 = a1[4];
    uint64_t v5 = +[MapsInterruptionAction actionWithTitle:v4 cancels:0 handler:v12];

    id v6 = +[CarDisplayController sharedInstance];
    id v7 = sub_100C713A0(a1[5], a1[4], v5);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    _DWORD v9[2] = sub_10069C9AC;
    _OWORD v9[3] = &unk_1012F4578;
    id v11 = a1[7];
    id v10 = a1[4];
    id v8 = [v6 presentInterruptionOfKind:19 userInfo:v7 completionHandler:v9];
  }
}

uint64_t sub_10069C998(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10069C9AC(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 1:
      id v7 = sub_100576D94();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v11 = 0;
      }

      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v12 = *(void *)(a1 + 32);
      id v9 = &v12;
      goto LABEL_12;
    case 0:
      id v10 = sub_100576D94();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v11 = 0;
      }

      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v13 = *(void *)(a1 + 32);
      id v9 = &v13;
LABEL_12:
      id v3 = +[NSArray arrayWithObjects:v9 count:1];
      (*(void (**)(uint64_t, NSObject *))(v8 + 16))(v8, v3);
      break;
    case -1:
      id v3 = sub_100576D94();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)id v11 = 0;
        id v4 = "Popup was dismissed.";
        uint64_t v5 = v3;
        os_log_type_t v6 = OS_LOG_TYPE_INFO;
LABEL_15:
        _os_log_impl((void *)&_mh_execute_header, v5, v6, v4, v11, 2u);
      }
      break;
    default:
      id v3 = sub_100576D94();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v11 = 0;
        id v4 = "Received an unsupported button index.";
        uint64_t v5 = v3;
        os_log_type_t v6 = OS_LOG_TYPE_ERROR;
        goto LABEL_15;
      }
      break;
  }
}

void sub_10069CB70(id *a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10069CC64;
  block[3] = &unk_1012F4658;
  objc_copyWeak(&v10, a1 + 7);
  id v6 = a1[4];
  id v7 = v3;
  id v8 = a1[5];
  id v9 = a1[6];
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v10);
}

void sub_10069CC64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    id v3 = +[CarDisplayController sharedInstance];
    id v4 = sub_100C71748(*(void **)(a1 + 32), *(void *)(a1 + 40));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10069CD80;
    void v6[3] = &unk_1012F4630;
    id v9 = *(id *)(a1 + 48);
    id v7 = *(id *)(a1 + 40);
    id v10 = *(id *)(a1 + 56);
    id v8 = WeakRetained;
    id v5 = [v3 presentInterruptionOfKind:20 userInfo:v4 completionHandler:v6];
  }
}

void sub_10069CD80(uint64_t a1, uint64_t a2)
{
  if (a2 == -1 || ((*(void (**)(void))(*(void *)(a1 + 48) + 16))(), a2))
  {
    id v4 = sub_100576D94();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "User chose to pick from multiple vehicles. Will show options.", buf, 2u);
    }

    id v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"[VirtualGarage] My Vehicles" value:@"localized string not found" table:0];
    id v7 = +[UIAlertController alertControllerWithTitle:v6 message:0 preferredStyle:0];

    id v27 = v7;
    [v7 setModalPresentationStyle:5];
    id v8 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", (char *)[*(id *)(a1 + 32) count] + 1);
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    uint64_t v29 = a1;
    id obj = *(id *)(a1 + 32);
    id v9 = [obj countByEnumeratingWithState:&v39 objects:v45 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v40;
      do
      {
        for (unint64_t i = 0; i != v10; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v40 != v11) {
            objc_enumerationMutation(obj);
          }
          uint64_t v13 = *(void **)(*((void *)&v39 + 1) + 8 * i);
          id v14 = [v13 displayName];
          v37[0] = _NSConcreteStackBlock;
          v37[1] = 3221225472;
          v37[2] = sub_10069D23C;
          v37[3] = &unk_1012F45C8;
          v37[4] = v13;
          id v38 = *(id *)(a1 + 56);
          id v15 = +[UIAlertAction actionWithTitle:v14 style:0 handler:v37];

          [v8 addObject:v15];
        }
        id v10 = [obj countByEnumeratingWithState:&v39 objects:v45 count:16];
      }
      while (v10);
    }

    CFStringRef v16 = +[NSBundle mainBundle];
    uint64_t v17 = [v16 localizedStringForKey:@"Dismiss [CarPlay]" value:@"localized string not found" table:0];
    CFStringRef v18 = +[UIAlertAction actionWithTitle:v17 style:1 handler:&stru_1012F45E8];

    [v8 addObject:v18];
    long long v35 = 0u;
    long long v36 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    id v19 = v8;
    id v20 = [v19 countByEnumeratingWithState:&v33 objects:v44 count:16];
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = *(void *)v34;
      do
      {
        for (j = 0; j != v21; j = (char *)j + 1)
        {
          if (*(void *)v34 != v22) {
            objc_enumerationMutation(v19);
          }
          [v27 addAction:*(void *)(*((void *)&v33 + 1) + 8 * (void)j)];
        }
        id v21 = [v19 countByEnumeratingWithState:&v33 objects:v44 count:16];
      }
      while (v21);
    }

    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_10069D35C;
    v30[3] = &unk_1012E5D58;
    id v31 = *(id *)(v29 + 40);
    unint64_t v24 = v27;
    long long v32 = v24;
    double v25 = objc_retainBlock(v30);
    id v26 = [*(id *)(v29 + 40) presentedViewController];

    if (v26) {
      [*(id *)(v29 + 40) dismissViewControllerAnimated:1 completion:v25];
    }
    else {
      ((void (*)(void *))v25[2])(v25);
    }
  }
  else
  {
    unint64_t v24 = sub_100576D94();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "User dismissed multiple vehicle disambiguation popup.", buf, 2u);
    }
  }
}

uint64_t sub_10069D23C(uint64_t a1)
{
  id v2 = sub_100576D94();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User selected to pair the CarPlay accessory with vehicle: %@", (uint8_t *)&v5, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10069D2F4(id a1, UIAlertAction *a2)
{
  id v2 = sub_100576D94();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User dismissed vehicle picker.", v3, 2u);
  }
}

void sub_10069D35C(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10069D400;
  v2[3] = &unk_1012E5D58;
  id v3 = *(id *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

id sub_10069D400(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:&stru_1012F4608];
}

void sub_10069D418(id a1)
{
  os_log_t v1 = sub_100576D94();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Presented vehicle picker to user to select a vehicle to pair with.", v2, 2u);
  }
}

void sub_10069D480(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    uint64_t v12 = [v5 vehicles];
    id v13 = [v12 count];

    if (!v13)
    {
      id v7 = sub_100576D94();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
        goto LABEL_44;
      }
      *(_WORD *)buf = 0;
      id v8 = "Garage doesn't have any vehicles to pair, aborting.";
      id v9 = v7;
      os_log_type_t v10 = OS_LOG_TYPE_INFO;
      uint32_t v11 = 2;
      goto LABEL_4;
    }
    if (+[VehicleDisambiguator isAccessory:*(void *)(a1 + 32) alreadyPairedWithVehicleInGarage:v5])
    {
      id v7 = sub_100576D94();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
        goto LABEL_44;
      }
      id v14 = [*(id *)(a1 + 32) identifier];
      *(_DWORD *)buf = 138412290;
      id v42 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "The current accessory (%@) is already paired with a vehicle in the garage.", buf, 0xCu);
LABEL_43:

      goto LABEL_44;
    }
    uint64_t v15 = *(void *)(a1 + 40);
    CFStringRef v16 = [v5 vehicles];
    id v7 = (*(void (**)(uint64_t, void *))(v15 + 16))(v15, v16);

    BOOL v17 = sub_100CDBC9C(v7);
    id v14 = sub_100576D94();
    BOOL v18 = os_log_type_enabled(v14, OS_LOG_TYPE_INFO);
    if (v17)
    {
      if (v18)
      {
        id v19 = [*(id *)(a1 + 32) identifier];
        *(_DWORD *)buf = 138412290;
        id v42 = v19;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "There are vehicles to pair, will try to find a match for accessory: %@.", buf, 0xCu);
      }
      uint64_t v20 = *(void *)(a1 + 32);
      id v21 = [v5 vehicles];
      id v14 = +[VehicleDisambiguator findPossibleMatchesForAccessory:v20 inVehicles:v21];

      if ([v14 count])
      {
        if ([v14 count] == (id)1)
        {
          uint64_t v22 = [v14 allKeys];
          uint64_t v23 = [v22 firstObject];

          unint64_t v24 = [v14 objectForKeyedSubscript:v23];
          [v24 floatValue];
          float v26 = v25;

          id v27 = sub_100576D94();
          BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_INFO);
          if (v26 == 1.0)
          {
            if (v28)
            {
              *(_DWORD *)buf = 138412290;
              id v42 = v23;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "Found a perfect match in vehicle: %@., will pair it with accessory.", buf, 0xCu);
            }

            uint64_t v29 = (uint64_t *)(a1 + 48);
          }
          else
          {
            if (v28)
            {
              id v38 = [*(id *)(a1 + 32) identifier];
              *(_DWORD *)buf = 138412546;
              id v42 = v23;
              __int16 v43 = 2112;
              long long v44 = v38;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "Disambiguator found a probable match in single vehicle: %@. Will present popup to pair with accessory: %@.", buf, 0x16u);
            }
            uint64_t v29 = (uint64_t *)(a1 + 56);
          }
          uint64_t v39 = *v29;
        }
        else
        {
          uint64_t v23 = [v14 keysSortedByValueUsingComparator:&stru_1012F46A0];
          long long v33 = sub_100576D94();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
          {
            long long v34 = v23;
            long long v35 = v34;
            if (v34)
            {
              if ([v34 count])
              {
                long long v36 = [v35 componentsJoinedByString:@", "];
                long long v37 = +[NSString stringWithFormat:@"<%p> [%@]", v35, v36];
              }
              else
              {
                long long v37 = +[NSString stringWithFormat:@"<%p> (empty)", v35];
              }
            }
            else
            {
              long long v37 = @"<nil>";
            }

            long long v40 = [*(id *)(a1 + 32) identifier];
            *(_DWORD *)buf = 138412546;
            id v42 = v37;
            __int16 v43 = 2112;
            long long v44 = v40;
            _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "Disambiguator found multiple possible vehicles to pair: %@. Will present user with options to pair with accessory: %@.", buf, 0x16u);
          }
          uint64_t v39 = *(void *)(a1 + 64);
        }
        (*(void (**)(uint64_t, NSObject *))(v39 + 16))(v39, v23);
      }
      else
      {
        uint64_t v23 = sub_100576D94();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Disambiguator didn't find any vehicles to pair with, aborting.", buf, 2u);
        }
      }
    }
    else
    {
      if (!v18) {
        goto LABEL_43;
      }
      id v30 = [v5 vehicles];
      id v31 = v30;
      if (v30)
      {
        if ([v30 count])
        {
          long long v32 = [v31 componentsJoinedByString:@", "];
          uint64_t v23 = +[NSString stringWithFormat:@"<%p> [%@]", v31, v32];
        }
        else
        {
          uint64_t v23 = +[NSString stringWithFormat:@"<%p> (empty)", v31];
        }
      }
      else
      {
        uint64_t v23 = @"<nil>";
      }

      *(_DWORD *)buf = 138412290;
      id v42 = v23;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Won't present disambiguation for vehicles: %@, because it was already presented many times.", buf, 0xCu);
    }
    goto LABEL_43;
  }
  id v7 = sub_100576D94();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    id v42 = v6;
    id v8 = "Failed to get info about vehicles in the garage, aborting. error: %@";
    id v9 = v7;
    os_log_type_t v10 = OS_LOG_TYPE_ERROR;
    uint32_t v11 = 12;
LABEL_4:
    _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, buf, v11);
  }
LABEL_44:
}

int64_t sub_10069DA94(id a1, NSNumber *a2, NSNumber *a3)
{
  return [(NSNumber *)a3 compare:a2];
}

void sub_10069E334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_10069E34C(uint64_t a1, _DWORD *a2, int *a3, void *a4, _DWORD *a5)
{
  unint64_t v10 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v11 = [*(id *)(a1 + 32) count];
  if (v10 < (unint64_t)v11)
  {
    uint64_t v12 = [*(id *)(a1 + 32) objects];
    id v13 = [v12 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];

    id v14 = [v13 searchSection];
    id v15 = [v14 sectionType];

    if (v15 == (id)2) {
      int v16 = 3;
    }
    else {
      int v16 = 2;
    }
    BOOL v17 = [v13 mapItem];
    *a2 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    *a3 = v16;
    *a4 = [v17 _muid];
    BOOL v18 = [v17 place];
    *a5 = [v18 localSearchProviderID];

    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return v10 < (unint64_t)v11;
}

uint64_t sub_10069E478(uint64_t a1, void *a2, _DWORD *a3, void *a4, unsigned int *a5, void *a6)
{
  unint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (v12 >= (unint64_t)[*(id *)(a1 + 32) count]) {
    return 0;
  }
  unint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (v13 >= (unint64_t)[*(id *)(a1 + 40) count]) {
    return 0;
  }
  id v14 = [*(id *)(a1 + 32) objects];
  id v15 = [v14 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];

  int v16 = [*(id *)(a1 + 40) objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
  BOOL v17 = [v15 mapItem];
  *a2 = [v17 _muid];

  *a3 = [v16 trailingEntityType];
  *a4 = 0;
  unsigned int v18 = [v16 hyperlinkType];
  *a5 = v18;
  if (v18)
  {
    id v19 = [v16 hyperlinkString];
  }
  else
  {
    id v19 = 0;
  }
  *a6 = v19;
  ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);

  return 1;
}

MapsAppTest *__cdecl sub_10069ECB0(id a1, NSString *a2, MapsAppTesting *a3, NSDictionary *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  if ([(NSString *)v6 hasPrefix:@"LaunchMapsWith"])
  {
    id v9 = off_1012D3CB0;
LABEL_77:
    id v12 = [objc_alloc(*v9) initWithApplication:v7 testName:v6 options:v8];
    goto LABEL_78;
  }
  if ([(NSString *)v6 isEqualToString:@"RotatingMaps"])
  {
    id v9 = off_1012D3CB8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"TimeToPresentPlaceCard"])
  {
    id v9 = off_1012D3D70;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"PresentAndDismissPlaceCard"])
  {
    id v9 = off_1012D3D68;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"RealtimeTransitPlaceCard"])
  {
    id v9 = off_1012D3E68;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"ScrollProactiveTray"])
  {
    id v9 = off_1012D3D88;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"ResizingProactiveTray"])
  {
    id v9 = off_1012D3DB8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"RotatingProactiveTray"])
  {
    id v9 = off_1012D3DD0;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"ScrollRecents"])
  {
    id v9 = off_1012D3DF0;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"ScrollDirectionsDetails"])
  {
    id v9 = off_1012D3E08;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"ResizingDirectionsPreview"])
  {
    id v9 = off_1012D3DC0;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"RotatingDirectionsPreview"])
  {
    id v9 = off_1012D3DD8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"RotatingDirectionsDetails"])
  {
    id v9 = off_1012D3DE0;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"PresentDirectionsDetails"])
  {
    id v9 = off_1012D3D80;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"ScrollPlacecard"])
  {
    id v9 = off_1012D3E00;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"ResizingPlacecard"])
  {
    id v9 = off_1012D3DB0;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"ScrollSearchResults"])
  {
    id v9 = off_1012D3DF8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"RetainedSearch"])
  {
    id v9 = off_1012D3DC8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"generateETAPin"])
  {
    id v9 = off_1012D3D18;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"generateETA"])
  {
    id v9 = off_1012D3D10;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"guidanceStepping"])
  {
    unint64_t v10 = [(NSDictionary *)v8 objectForKeyedSubscript:@"mapType"];
    unsigned int v11 = [v10 isEqualToString:@"transit"];

    id v9 = off_1012D3D30;
    if (v11) {
      id v9 = off_1012D3E48;
    }
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"guidance"])
  {
    id v9 = off_1012D3D30;
    goto LABEL_77;
  }
  if ([(NSString *)v6 rangeOfString:@"pounce"] == 0)
  {
    id v9 = off_1012D3D78;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"RAPcontrollerLaunch"])
  {
    id v9 = off_1012D3D90;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"RAPPOI"])
  {
    id v9 = off_1012D3D98;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"Venues"])
  {
    id v9 = off_1012D3E60;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"dropPin"])
  {
    id v9 = off_1012D3D08;
    goto LABEL_77;
  }
  if ([(NSString *)v6 hasPrefix:@"tapPOI"])
  {
    id v9 = off_1012D3E38;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"ScrollCollections"])
  {
    id v9 = off_1012D3CD8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"scrollCollectionNatural"])
  {
    id v9 = off_1012D3CE0;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"ScrollCuratedCollectionsList"])
  {
    id v9 = off_1012D3CF0;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"ScrollCuratedCollectionsDetail"])
  {
    id v9 = off_1012D3CE8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"ScrollCuratedCollectionsPublisher"])
  {
    id v9 = off_1012D3CF8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"guidesHomeScroll"])
  {
    id v9 = off_1012D3D38;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"citySelectorScroll"])
  {
    id v9 = off_1012D3CD0;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"ResizeWindow"])
  {
    id v9 = off_1012D3DA8;
    goto LABEL_77;
  }
  if ([(NSString *)v6 isEqualToString:@"MultitaskResizeWindow"])
  {
    id v9 = off_1012D3D50;
    goto LABEL_77;
  }
  id v12 = 0;
LABEL_78:

  return (MapsAppTest *)v12;
}

NSArray *__cdecl sub_1006A08F8(id a1, NSArray *a2)
{
  id v2 = +[MapsMenuBuilder preferencesMenuCommand];
  id v5 = v2;
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];

  return (NSArray *)v3;
}

void sub_1006A25DC(uint64_t a1)
{
  id v3 = +[UIApplication sharedMapsDelegate];
  id v2 = +[UIApplication sharedApplication];
  [v3 application:v2 runTest:*(void *)(a1 + 32) options:*(void *)(a1 + 40)];
}

BOOL sub_1006A4310(id a1, RAPUserDirectionRequest *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  id v5 = [(RAPUserDirectionRequest *)v4 recording];
  id v6 = v5;
  if (!v5)
  {
    id v9 = sub_10057670C();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v16 = 138412290;
      BOOL v17 = v4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "RAPRouteListViewController will need to skip request: %@ because it doesn't have a recording.", (uint8_t *)&v16, 0xCu);
    }
    goto LABEL_13;
  }
  id v7 = [v5 directionsRequests];
  id v8 = [v7 firstObject];
  id v9 = [v8 routeAttributes];

  unsigned int v10 = [v9 mainTransportType] - 1;
  if (v10 <= 5 && ((0x39u >> v10) & 1) != 0)
  {
    uint64_t v12 = qword_100F70298[v10];
    unint64_t v13 = sub_10057670C();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      if ((unint64_t)(v12 - 1) > 3) {
        CFStringRef v14 = @"Undefined";
      }
      else {
        CFStringRef v14 = *(&off_1012F4860 + v12 - 1);
      }
      int v16 = 138412546;
      BOOL v17 = v4;
      __int16 v18 = 2112;
      CFStringRef v19 = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "RAPRouteListViewController will skip request: %@ due to unsupported transport type: %@", (uint8_t *)&v16, 0x16u);
    }

LABEL_13:
    BOOL v11 = 0;
    goto LABEL_14;
  }
  BOOL v11 = 1;
LABEL_14:

  return v11;
}

void sub_1006A4FA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateVehicleSelectionIfNeeded];
    id WeakRetained = v2;
  }
}

void sub_1006A511C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateVehicleSelectionIfNeeded];
    id WeakRetained = v2;
  }
}

void sub_1006A5368(id a1)
{
  uint64_t v1 = +[NSURL fileURLWithPath:@"/var/mobile/Library/Caches/VisualLocalization/Traces" isDirectory:1];
  id v2 = (void *)qword_10160F540;
  qword_10160F540 = v1;
}

id sub_1006A54AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _beginTraceIfNecessary];
}

void sub_1006A5528(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(NSObject **)(v1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1006A559C;
  block[3] = &unk_1012E5D08;
  void block[4] = v1;
  dispatch_async(v2, block);
}

id sub_1006A559C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _finishOnIsolationQueue];
}

void sub_1006A5618(uint64_t a1)
{
  id v2 = +[NSDate date];
  id v3 = +[NSTimeZone localTimeZone];
  id v4 = +[NSISO8601DateFormatter stringFromDate:v2 timeZone:v3 formatOptions:371];

  id v5 = NSTemporaryDirectory();
  id v6 = +[NSURL fileURLWithPath:v5];
  uint64_t v7 = [v6 URLByAppendingPathComponent:v4];
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(v8 + 32);
  *(void *)(v8 + 32) = v7;

  unsigned int v10 = +[NSFileManager defaultManager];
  uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 32);
  id v49 = 0;
  unsigned int v12 = [v10 createDirectoryAtURL:v11 withIntermediateDirectories:1 attributes:0 error:&v49];
  id v13 = v49;

  CFStringRef v14 = sub_1006A5A70();
  id v15 = v14;
  if (!v12)
  {
    if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
LABEL_18:

      uint64_t v38 = *(void *)(a1 + 32);
      uint64_t v39 = *(void **)(v38 + 32);
      *(void *)(v38 + 32) = 0;

      uint64_t v40 = *(void *)(a1 + 32);
      long long v41 = *(void **)(v40 + 40);
      *(void *)(v40 + 40) = 0;

      uint64_t v42 = *(void *)(a1 + 32);
      __int16 v43 = *(void **)(v42 + 48);
      *(void *)(v42 + 4_Block_object_dispose(&STACK[0x238], 8) = 0;

      uint64_t v44 = *(void *)(a1 + 32);
      double v45 = *(void **)(v44 + 56);
      *(void *)(v44 + 56) = 0;

      id v23 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)buf = 138543362;
    id v51 = v13;
    long long v37 = "Failed to create trace directory: %{public}@";
LABEL_17:
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v37, buf, 0xCu);
    goto LABEL_18;
  }
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    int v16 = *(void **)(*(void *)(a1 + 32) + 32);
    *(_DWORD *)buf = 138543362;
    id v51 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Created temporary trace directory: %{public}@", buf, 0xCu);
  }

  uint64_t v17 = [*(id *)(*(void *)(a1 + 32) + 32) URLByAppendingPathComponent:@"images"];
  uint64_t v18 = *(void *)(a1 + 32);
  CFStringRef v19 = *(void **)(v18 + 40);
  *(void *)(v18 + 40) = v17;

  uint64_t v20 = +[NSFileManager defaultManager];
  uint64_t v21 = *(void *)(*(void *)(a1 + 32) + 40);
  id v48 = v13;
  unsigned __int8 v22 = [v20 createDirectoryAtURL:v21 withIntermediateDirectories:1 attributes:0 error:&v48];
  id v23 = v48;

  if ((v22 & 1) == 0)
  {
    id v15 = sub_1006A5A70();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v51 = v23;
      long long v36 = "Failed to create images directory: %{public}@";
      goto LABEL_13;
    }
LABEL_14:
    id v13 = v23;
    goto LABEL_18;
  }
  uint64_t v24 = [*(id *)(*(void *)(a1 + 32) + 32) URLByAppendingPathComponent:@"parameters"];
  uint64_t v25 = *(void *)(a1 + 32);
  float v26 = *(void **)(v25 + 48);
  *(void *)(v25 + 4_Block_object_dispose(&STACK[0x238], 8) = v24;

  id v27 = +[NSFileManager defaultManager];
  uint64_t v28 = *(void *)(*(void *)(a1 + 32) + 48);
  id v47 = v23;
  unsigned __int8 v29 = [v27 createDirectoryAtURL:v28 withIntermediateDirectories:1 attributes:0 error:&v47];
  id v13 = v47;

  if ((v29 & 1) == 0)
  {
    id v15 = sub_1006A5A70();
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      goto LABEL_18;
    }
    *(_DWORD *)buf = 138543362;
    id v51 = v13;
    long long v37 = "Failed to create parameters directory: %{public}@";
    goto LABEL_17;
  }
  uint64_t v30 = [*(id *)(*(void *)(a1 + 32) + 32) URLByAppendingPathComponent:@"results"];
  uint64_t v31 = *(void *)(a1 + 32);
  long long v32 = *(void **)(v31 + 56);
  *(void *)(v31 + 56) = v30;

  long long v33 = +[NSFileManager defaultManager];
  uint64_t v34 = *(void *)(*(void *)(a1 + 32) + 56);
  id v46 = v13;
  unsigned __int8 v35 = [v33 createDirectoryAtURL:v34 withIntermediateDirectories:1 attributes:0 error:&v46];
  id v23 = v46;

  if ((v35 & 1) == 0)
  {
    id v15 = sub_1006A5A70();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v51 = v23;
      long long v36 = "Failed to create results directory: %{public}@";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, v36, buf, 0xCu);
      goto LABEL_14;
    }
    goto LABEL_14;
  }
LABEL_19:
}

id sub_1006A5A70()
{
  if (qword_10160F550 != -1) {
    dispatch_once(&qword_10160F550, &stru_1012F48A0);
  }
  v0 = (void *)qword_10160F548;

  return v0;
}

id sub_1006A5B5C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _recordAttemptOnIsolationQueue:*(void *)(a1 + 40)];
}

void sub_1006A67C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VisualLocalizationTrace");
  id v2 = (void *)qword_10160F548;
  qword_10160F548 = (uint64_t)v1;
}

void sub_1006A69EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1006A6A08(uint64_t a1)
{
  id v2 = objc_alloc((Class)WUWeatherPlatterViewController);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained location];
  id v5 = [v2 initWithLocation:v4];

  return v5;
}

UIMenu *__cdecl sub_1006A6A84(id a1, NSArray *a2)
{
  return +[UIMenu menuWithTitle:&stru_101324E70 children:&__NSArray0__struct];
}

void sub_1006A6CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006A6D14(uint64_t a1)
{
  +[GEOAPPortal captureUserAction:15002 target:640 value:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _openWeatherPunchOutURL];
}

void sub_1006A6EF4(uint64_t a1)
{
  id WeakRetained = (uint64_t *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v3 = *(unsigned __int8 *)(a1 + 40);
    id v4 = WeakRetained;
    if (WeakRetained[13] < 1) {
      [WeakRetained _updateVisibilityAnimated:v3 != 0];
    }
    else {
      [WeakRetained _requestVisibilityUpdateAnimated:v3 != 0];
    }
    id WeakRetained = v4;
  }
}

id sub_1006A7AF4(uint64_t a1)
{
  double v1 = 1.0;
  if (*(double *)(a1 + 40) > 0.05) {
    double v1 = 0.0;
  }
  return [*(id *)(*(void *)(a1 + 32) + 160) setAlpha:v1];
}

void sub_1006A81B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1006A81F4(uint64_t a1, void *a2)
{
  id v18 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v18 && WeakRetained)
  {
    id v4 = [WeakRetained publisherLogoImageView];
    [v4 setImage:v18];

    id v5 = [WeakRetained publisherLogoImageView];
    id v6 = [v5 widthAnchor];
    uint64_t v7 = [WeakRetained publisherLogoImageView];
    uint64_t v8 = [v7 heightAnchor];
    id v9 = [WeakRetained publisherLogoImageView];
    unsigned int v10 = [v9 image];
    [v10 size];
    double v12 = v11;
    id v13 = [WeakRetained publisherLogoImageView];
    CFStringRef v14 = [v13 image];
    [v14 size];
    int v16 = [v6 constraintEqualToAnchor:v8 multiplier:v12 / v15];
    [WeakRetained setLogoWidthConstraint:v16];

    uint64_t v17 = [WeakRetained logoWidthConstraint];
    [v17 setActive:1];
  }
}

void sub_1006A8378(uint64_t a1, void *a2, uint64_t a3, int a4, char a5)
{
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (a5)
  {
    double v11 = sub_10057611C();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG);
    if (WeakRetained)
    {
      if (v12)
      {
        id v13 = [WeakRetained viewModel];
        CFStringRef v14 = [v13 collectionTitle];
        double v15 = [v14 string];
        *(_DWORD *)buf = 138412290;
        uint64_t v30 = v15;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "[⌛]Received header image for : %@", buf, 0xCu);
      }
      if (v9 && !a3)
      {
        int v16 = sub_10057611C();
        BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG);
        if (a4)
        {
          double v18 = 0.0;
          if (v17)
          {
            *(_WORD *)buf = 0;
            CFStringRef v19 = "Received cached header image. Displaying without animation.";
LABEL_18:
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, v19, buf, 2u);
          }
        }
        else
        {
          double v18 = 0.100000001;
          if (v17)
          {
            *(_WORD *)buf = 0;
            CFStringRef v19 = "Received non-cached header image. Displaying with animation.";
            goto LABEL_18;
          }
        }

        uint64_t v24 = [WeakRetained collectionImageView];
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 3221225472;
        v27[2] = sub_1006A86C4;
        v27[3] = &unk_1012E5D58;
        void v27[4] = WeakRetained;
        id v28 = v9;
        v25[0] = _NSConcreteStackBlock;
        v25[1] = 3221225472;
        v25[2] = sub_1006A8714;
        void v25[3] = &unk_1012E6160;
        v25[4] = WeakRetained;
        id v26 = *(id *)(a1 + 32);
        +[UIView transitionWithView:v24 duration:5242882 options:v27 animations:v25 completion:v18];
      }
    }
    else
    {
      if (v12)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Header doesn't exists.", buf, 2u);
      }
    }
  }
  else
  {
    uint64_t v20 = sub_10057611C();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v21 = [WeakRetained viewModel];
      unsigned __int8 v22 = [v21 collectionTitle];
      id v23 = [v22 string];
      *(_DWORD *)buf = 138412290;
      uint64_t v30 = v23;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Cancelled image download for collection: %@", buf, 0xCu);
    }
  }
}

void sub_1006A86C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) collectionImageView];
  [v2 setImage:v1];
}

void sub_1006A8714(uint64_t a1)
{
  id v2 = sub_10057611C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = [*(id *)(a1 + 32) viewModel];
    id v4 = [v3 collectionTitle];
    id v5 = [v4 string];
    id v6 = +[NSDate date];
    [v6 timeIntervalSinceDate:*(void *)(a1 + 40)];
    int v8 = 138412546;
    id v9 = v5;
    __int16 v10 = 2048;
    uint64_t v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[⌛]Finished showing header image for : %@ in %f", (uint8_t *)&v8, 0x16u);
  }
}

void sub_1006AAF84(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_1006AAF9C(uint64_t a1, void *a2)
{
  id result = [a2 BOOLValue];
  uint64_t v4 = 1;
  if (!result) {
    uint64_t v4 = 2;
  }
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v4;
  return result;
}

uint64_t sub_1006AAFDC(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return result;
}

void sub_1006AB0B0(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (([*(id *)(*(void *)(a1 + 32) + 16) containsObject:v7] & 1) == 0)
  {
    id v6 = [*(id *)(*(void *)(a1 + 32) + 24) valueForKey:v7];

    if (!v6) {
      [*(id *)(a1 + 32) _startLookupForEntry:v5];
    }
  }
}

void sub_1006AB45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006AB484(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1006AB554;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  id v6 = v3;
  id v7 = *(id *)(a1 + 32);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v8);
}

void sub_1006AB554(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _setResult:*(void *)(a1 + 32) forEntry:*(void *)(a1 + 40)];
}

void sub_1006AB5A4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = +[Result resultWithError:v9];
    (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v11);
  }
  else
  {
    if (v7) {
      id v12 = v7;
    }
    else {
      id v12 = v8;
    }
    if (v12)
    {
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_1006AB728;
      v16[3] = &unk_1012F4A20;
      uint64_t v13 = *(void *)(a1 + 32);
      id v17 = *(id *)(a1 + 40);
      +[UGCNearbyPhotosAvailibility numberOfPhotosTakenForMapItem:v13 lastVisitedDate:v12 completion:v16];

      goto LABEL_9;
    }
    uint64_t v11 = +[NSError errorWithDomain:@"HomePhotoLookupDataProviderErrorDomain" code:2 userInfo:0];
    uint64_t v14 = *(void *)(a1 + 40);
    double v15 = +[Result resultWithError:v11];
    (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v15);
  }
LABEL_9:
}

void sub_1006AB728(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  +[NSNumber numberWithInt:a2 != 0];
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  id v3 = +[Result resultWithValue:v4];
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
}

void sub_1006AC3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1006AC410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained onTransitionFromState:a2 toState:a3];
  }
}

void sub_1006AC608(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1006AC62C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained collectionView];
  [v3 setAlpha:0.0];

  id v5 = objc_loadWeakRetained(v1);
  id v4 = [v5 citySelectionView];
  [v4 setAlpha:0.0];
}

void sub_1006AC6BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained apiController];
  [v1 fetchGuidesHomeViewFilteredBy:0 onCompletion:&stru_1012F4AA8];
}

id sub_1006ACAF0()
{
  if (qword_10160F560 != -1) {
    dispatch_once(&qword_10160F560, &stru_1012F4AF0);
  }
  v0 = (void *)qword_10160F558;

  return v0;
}

id sub_1006AE230(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  id v4 = +[UIFont system28Bold];
  [v3 setObject:v4 forKeyedSubscript:NSFontAttributeName];

  id v5 = [*(id *)(a1 + 32) apiController];
  if ([v5 isCuratedGuidesHome]) {
    +[UIColor whiteColor];
  }
  else {
  id v6 = +[UIColor labelColor];
  }
  [v3 setObject:v6 forKeyedSubscript:NSForegroundColorAttributeName];

  id v7 = [v3 copy];

  return v7;
}

void sub_1006AF8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006AF904(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained collectionView];
  [v1 setAlpha:1.0];
}

void sub_1006AFB70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1006AFB98(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = [WeakRetained dataSource];
  id v9 = [v8 sectionAtIndex:a2];

  uint64_t v10 = [v9 sectionTitle];

  if (!v9 || ([v9 configuration], v35, !v36))
  {
    id v16 = objc_loadWeakRetained((id *)(a1 + 40));
    id v17 = [v16 dataSource];
    double v18 = [v17 featuredGuideViewModel];

    uint64_t v19 = *(void *)(a1 + 32);
    double v20 = *(double *)(a1 + 48);
    uint64_t v21 = [v18 collectionLongTitle];
    if (v21)
    {
      double v15 = [v9 layoutSectionForFeaturedGuideUsingTraitsEnvironment:v19 usingWidth:v21 featuredGuideTitle:v20];
    }
    else
    {
      unsigned __int8 v22 = [v18 collectionTitle];
      double v15 = [v9 layoutSectionForFeaturedGuideUsingTraitsEnvironment:v19 usingWidth:v22 featuredGuideTitle:v20];
    }
    goto LABEL_15;
  }
  [v9 configuration];

  if (v34 == 1)
  {
    BOOL v11 = v10 != 0;
    id v12 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v13 = [v12 dataSource];
    uint64_t v14 = [v13 filterViewModels];

    double v15 = [v9 layoutForFilterSectionUsingViewModels:v14 traitsEnvironment:*(void *)(a1 + 32) width:v11 shouldAddSupplementaryHeaderView:*(double *)(a1 + 48)];

    goto LABEL_15;
  }
  [v9 configuration];

  if (v32 == 4)
  {
    BOOL v23 = v10 != 0;
    id v24 = objc_loadWeakRetained(v6);
    uint64_t v25 = [v24 dataSource];
    uint64_t v26 = [v9 layoutForCollectionsListSectionUsingLayoutEnvironment:v5 shouldAddSupplementaryHeaderView:v23 objectsCount:[v25 guidesListCountAtIndex:a2]];
LABEL_13:
    double v15 = (void *)v26;

    goto LABEL_15;
  }
  [v9 configuration];

  if (v30 == 5)
  {
    BOOL v27 = v10 != 0;
    id v24 = objc_loadWeakRetained(v6);
    uint64_t v25 = [v24 dataSource];
    uint64_t v26 = [v9 layoutForPublishersListSectionUsingLayoutEnvironment:v5 shouldAddSupplementaryHeaderView:v27 objectsCount:[v25 publishersListCountAtIndex:a2]];
    goto LABEL_13;
  }
  double v15 = [v9 layoutForSectionUsingTraitsEnvironment:*(void *)(a1 + 32) usingWidth:v10 != 0 shouldAddSupplementaryHeaderView:*(double *)(a1 + 48)];
LABEL_15:

  return v15;
}

void sub_1006B0500(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v14 = WeakRetained;
    id v3 = [WeakRetained loadingView];
    if (!v3)
    {
      id v4 = [v14 apiController];
      id v5 = [v4 currentState];

      id WeakRetained = v14;
      if (v5 != (id)1) {
        goto LABEL_6;
      }
      id v6 = [LoadingModeView alloc];
      id v7 = +[NSBundle mainBundle];
      id v8 = [v7 localizedStringForKey:@"Loading ..." value:@"localized string not found" table:0];
      id v9 = [(LoadingModeView *)v6 initWithTitle:v8];
      [v14 setLoadingView:v9];

      uint64_t v10 = [v14 loadingView];
      [v10 setTranslatesAutoresizingMaskIntoConstraints:0];

      BOOL v11 = [v14 contentView];
      id v12 = [v14 loadingView];
      [v11 addSubview:v12];

      id v3 = [v14 loadingView];
      uint64_t v13 = [*(id *)(a1 + 32) titleHeaderView];
      [v14 activateConstraintsForViewPinnedBelowHeader:v3 headerView:v13];
    }
    id WeakRetained = v14;
  }
LABEL_6:
}

id sub_1006B07FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) resetCollectionViewLayout];
}

void sub_1006B0804(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) cardPresentationController];
  [v3 cardHeight];
  *(void *)(*(void *)(a1 + 32) + 136) = v2;
}

void sub_1006B0F84(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "GuidesHomeViewController");
  uint64_t v2 = (void *)qword_10160F558;
  qword_10160F558 = (uint64_t)v1;
}

void sub_1006B1A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006B1A4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _descriptionLabelDidExpand];
}

void sub_1006B21F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006B2218(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (!a3
    && ([WeakRetained model],
        id v7 = objc_claimAutoreleasedReturnValue(),
        id v8 = *(void **)(a1 + 32),
        v7,
        v7 == v8))
  {
    id v9 = [v6 authorImageView];
    [v9 setImage:v10];
  }
  else
  {
    id v9 = [v6 authorImageView];
    [v9 setHidden:1];
  }
}

id sub_1006B2620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 32)) {
    return +[UIView transitionWithView:a2 duration:5242880 options:a3 animations:0 completion:0.2];
  }
  else {
    return (id)(*(uint64_t (**)(uint64_t))(a3 + 16))(a3);
  }
}

void sub_1006B265C(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 16))
  {
    uint64_t v2 = +[UIColor whiteColor];
    id v3 = [*(id *)(a1 + 32) descriptionLabel];
    [v3 setTextColor:v2];

    id v4 = +[UIColor whiteColor];
    id v5 = [*(id *)(a1 + 32) descriptionLabel];
    [v5 setShowMoreTextColor:v4];

    +[UIColor whiteColor];
  }
  else
  {
    id v6 = +[UIColor labelColor];
    id v7 = [*(id *)(a1 + 32) descriptionLabel];
    [v7 setTextColor:v6];

    id v8 = +[UIColor labelColor];
    id v9 = [*(id *)(a1 + 32) descriptionLabel];
    [v9 setShowMoreTextColor:v8];

    +[UIColor labelColor];
  }
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  id v10 = [*(id *)(a1 + 32) descriptionLabel];
  [v10 setShowLessTextColor:v11];
}

void sub_1006B27B0(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 16)) {
    +[UIColor whiteColor];
  }
  else {
  id v3 = +[UIColor labelColor];
  }
  uint64_t v2 = [*(id *)(a1 + 32) authorLabel];
  [v2 setTextColor:v3];
}

void sub_1006B283C(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 16)) {
    +[UIColor lightTextColor];
  }
  else {
  id v3 = +[UIColor secondaryLabelColor];
  }
  uint64_t v2 = [*(id *)(a1 + 32) metadataLabel];
  [v2 setTextColor:v3];
}

SearchFieldItem *__cdecl sub_1006B2D28(id a1, NanoDirectionWaypoint *a2, unint64_t a3)
{
  id v3 = +[DirectionsWaypoint directionsWaypointWithNanoDirectionWaypoint:a2];
  id v4 = +[SearchFieldItem searchFieldItemWithObject:v3];

  return (SearchFieldItem *)v4;
}

void sub_1006B343C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_1006B3494(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v13 = a2;
  id v7 = [v13 rangeOfString:*(void *)(a1 + 32) options:129];
  unint64_t v9 = v8;
  if (*(unsigned char *)(a1 + 72)) {
    BOOL v10 = v7 == 0;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10 || (!*(unsigned char *)(a1 + 72) ? (BOOL v11 = v7 == (id)0x7FFFFFFFFFFFFFFFLL) : (BOOL v11 = 1), !v11))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) += v8;
    *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = a3;
    *a4 = 1;
    id v12 = [v13 length];
    if (v12) {
      *(double *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = (double)v9 / (double)(unint64_t)v12
    }
                                                                  + *(double *)(*(void *)(*(void *)(a1 + 64) + 8)
                                                                              + 24);
  }
}

id sub_1006B3B40()
{
  if (qword_10160F570 != -1) {
    dispatch_once(&qword_10160F570, &stru_1012F4BE8);
  }
  v0 = (void *)qword_10160F568;

  return v0;
}

void sub_1006B3B94(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v5 = a2;
  id v6 = a4;
  id v7 = sub_1006B3B40();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412546;
    id v58 = v5;
    __int16 v59 = 2112;
    id v60 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Fetched response %@ with error %@", buf, 0x16u);
  }
  unsigned __int8 v35 = v6;

  uint64_t v32 = [RAPBatchSubmissionStatusResult alloc];
  id v33 = v5;
  unint64_t v8 = [v33 feedbackResult];
  unint64_t v9 = [v8 queryResult];

  uint64_t v31 = v9;
  BOOL v10 = [v9 feedbackInfos];
  BOOL v11 = objc_opt_new();
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  id obj = v10;
  id v38 = [obj countByEnumeratingWithState:&v49 objects:buf count:16];
  if (v38)
  {
    uint64_t v37 = *(void *)v50;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v50 != v37) {
          objc_enumerationMutation(obj);
        }
        uint64_t v39 = v12;
        id v13 = *(void **)(*((void *)&v49 + 1) + 8 * v12);
        long long v45 = 0u;
        long long v46 = 0u;
        long long v47 = 0u;
        long long v48 = 0u;
        id v14 = [v13 feedbackComponents];
        id v15 = [v14 countByEnumeratingWithState:&v45 objects:v56 count:16];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = *(void *)v46;
          uint64_t v40 = *(void *)v46;
          do
          {
            for (unint64_t i = 0; i != v16; unint64_t i = (char *)i + 1)
            {
              if (*(void *)v46 != v17) {
                objc_enumerationMutation(v14);
              }
              uint64_t v19 = *(void **)(*((void *)&v45 + 1) + 8 * i);
              if ([v19 status])
              {
                double v20 = sub_1006B3B40();
                if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
                {
                  unsigned int v21 = [v19 status];
                  *(_DWORD *)char v54 = 67109120;
                  unsigned int v55 = v21;
                  _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "Error: GEOFeedbackResponse includes a feedback_component with a GEOStatusCode of %d:", v54, 8u);
                }
              }
              else
              {
                long long v43 = 0u;
                long long v44 = 0u;
                long long v41 = 0u;
                long long v42 = 0u;
                double v20 = [v19 values];
                id v22 = [v20 countByEnumeratingWithState:&v41 objects:v53 count:16];
                if (v22)
                {
                  id v23 = v22;
                  uint64_t v24 = *(void *)v42;
                  do
                  {
                    for (j = 0; j != v23; j = (char *)j + 1)
                    {
                      if (*(void *)v42 != v24) {
                        objc_enumerationMutation(v20);
                      }
                      uint64_t v26 = *(void **)(*((void *)&v41 + 1) + 8 * (void)j);
                      BOOL v27 = [v26 rapInfo];

                      if (v27)
                      {
                        id v28 = [v26 rapInfo];
                        [v11 addObject:v28];
                      }
                    }
                    id v23 = [v20 countByEnumeratingWithState:&v41 objects:v53 count:16];
                  }
                  while (v23);
                  uint64_t v17 = v40;
                }
              }
            }
            id v16 = [v14 countByEnumeratingWithState:&v45 objects:v56 count:16];
          }
          while (v16);
        }

        uint64_t v12 = v39 + 1;
      }
      while ((id)(v39 + 1) != v38);
      id v38 = [obj countByEnumeratingWithState:&v49 objects:buf count:16];
    }
    while (v38);
  }

  id v29 = [v11 copy];
  uint64_t v30 = [(RAPBatchSubmissionStatusResult *)v32 initWithRAPInfos:v29];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1006B3F90(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPBatchSubmissionStatusTicket");
  uint64_t v2 = (void *)qword_10160F568;
  qword_10160F568 = (uint64_t)v1;
}

void sub_1006B4B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006B4B30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = (id *)(a1 + 32);
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _updateButtonsForLocationUpdate];

  v6[2]();
}

void sub_1006B54DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, id *a12)
{
  objc_destroyWeak(v13);
  objc_destroyWeak(location);
  objc_destroyWeak(v12);
  objc_destroyWeak(a12);
  objc_destroyWeak((id *)(v14 - 136));
  _Unwind_Resume(a1);
}

void sub_1006B55A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained blockTrip];
    id WeakRetained = v2;
  }
}

void sub_1006B55EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained blockSender];
    id WeakRetained = v2;
  }
}

void sub_1006B5630(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _addContact];
    id WeakRetained = v2;
  }
}

void sub_1006B5674(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _addToContact];
    id WeakRetained = v2;
  }
}

void sub_1006B56B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained tapToRadarButtonTapped];
    id WeakRetained = v2;
  }
}

id sub_1006B6CB0(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setImage:a2];
  uint64_t v4 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);

  return [v3 setContentConfiguration:v4];
}

void sub_1006B7918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006B7944(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained blockSenderAction];
}

void sub_1006B86F0(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100109E50();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "AutocompleteItemManager - superclass did collect results", buf, 2u);
  }

  *((unsigned char *)a1[4] + 9_Block_object_dispose(&STACK[0x238], 8) = 0;
  if (((*((uint64_t (**)(void))a1[5] + 2))() & 1) != 0
    || ([a1[4] autocompleteContext],
        unint64_t v8 = objc_claimAutoreleasedReturnValue(),
        v8,
        !v8))
  {
    id v15 = (void (*)(void))*((void *)a1[6] + 2);
LABEL_10:
    v15();
    goto LABEL_11;
  }
  if (![v5 count])
  {
    id v15 = (void (*)(void))*((void *)a1[6] + 2);
    goto LABEL_10;
  }
  unint64_t v9 = [a1[4] filterDuplicateContactsFromServerResultUsingItems:v5];
  BOOL v10 = [a1[4] wrappedItems:v9];
  BOOL v11 = sub_100109E50();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "AutocompleteItemManager - compute client ranking score", buf, 2u);
  }

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_1006B891C;
  v16[3] = &unk_1012F4C58;
  id v12 = a1[4];
  id v20 = a1[5];
  id v21 = a1[6];
  id v13 = a1[4];
  id v17 = v10;
  id v18 = v13;
  id v19 = v5;
  id v14 = v10;
  [v12 computeClientRankingScoresForResolvedItemsIfNeeded:v14 completion:v16];

LABEL_11:
}

void sub_1006B891C(uint64_t a1)
{
  id v2 = sub_100109E50();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "AutocompleteItemManager - did compute client ranking score", buf, 2u);
  }

  if ((*(unsigned int (**)(void))(*(void *)(a1 + 56) + 16))())
  {
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  else
  {
    id v3 = [*(id *)(a1 + 32) copy];
    [*(id *)(a1 + 40) sortWrappedItems:*(void *)(a1 + 32)];
    if ([*(id *)(a1 + 40) useClientRankingScore] && objc_msgSend(v3, "count"))
    {
      uint64_t v4 = 0;
      while (1)
      {
        id v5 = [v3 objectAtIndexedSubscript:v4];
        id v6 = [*(id *)(a1 + 32) objectAtIndexedSubscript:v4];

        if (v5 != v6) {
          break;
        }
        if (++v4 >= (unint64_t)[v3 count]) {
          goto LABEL_12;
        }
      }
      *(unsigned char *)(*(void *)(a1 + 40) + 9_Block_object_dispose(&STACK[0x238], 8) = 1;
    }
LABEL_12:
    uint64_t v26 = v3;
    id v7 = [*(id *)(a1 + 40) sectionsWithWrappedItems:*(void *)(a1 + 32)];
    id v8 = [v7 mutableCopy];

    [*(id *)(a1 + 40) logSortedItemsWithSections:v8];
    uint64_t v27 = a1;
    unint64_t v9 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [*(id *)(a1 + 48) count]);
    BOOL v10 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v8 count]);
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id obj = v8;
    id v11 = [obj countByEnumeratingWithState:&v29 objects:v37 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v30;
      do
      {
        for (unint64_t i = 0; i != v12; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v30 != v13) {
            objc_enumerationMutation(obj);
          }
          id v15 = *(void **)(*((void *)&v29 + 1) + 8 * i);
          id v16 = [v15 items];
          id v17 = [v16 copy];

          id v18 = [v15 title];
          id v19 = +[AutocompleteSection sectionWithTitle:items:isQuerySuggestionsSection:](AutocompleteSection, "sectionWithTitle:items:isQuerySuggestionsSection:", v18, v17, [v15 isQuerySuggestionsSection]);
          [v10 addObject:v19];

          [v9 addObjectsFromArray:v17];
        }
        id v12 = [obj countByEnumeratingWithState:&v29 objects:v37 count:16];
      }
      while (v12);
    }

    id v20 = sub_100109E50();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      id v21 = [*(id *)(v27 + 48) count];
      id v22 = [v10 count];
      *(_DWORD *)buf = 134218240;
      id v34 = v21;
      __int16 v35 = 2048;
      id v36 = v22;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "AutocompleteItemManager - collected %lu compoundItems and %lu compoundItemGroups", buf, 0x16u);
    }

    uint64_t v23 = *(void *)(v27 + 64);
    id v24 = [v9 copy];
    id v25 = [v10 copy];
    (*(void (**)(uint64_t, id, id))(v23 + 16))(v23, v24, v25);
  }
}

BOOL sub_1006B93CC(id a1, AutocompleteMutableSection *a2, NSDictionary *a3)
{
  id v3 = [(AutocompleteMutableSection *)a2 items];
  BOOL v4 = [v3 count] != 0;

  return v4;
}

uint64_t sub_1006BAE0C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 item];
  unsigned int v8 = [v7 hidden];

  unint64_t v9 = [v6 item];
  unsigned int v10 = [v9 hidden];

  if (!v8 || v10)
  {
    if ((v8 | v10 ^ 1) == 1)
    {
      if (*(unsigned char *)(a1 + 32))
      {
        [v5 clientRankingScore];
        double v13 = v12;
        [v6 clientRankingScore];
        BOOL v15 = v13 <= v14;
        BOOL v16 = v13 < v14;
      }
      else
      {
        id v17 = [v5 priority];
        id v18 = [v6 priority];
        BOOL v15 = (uint64_t)v17 <= (uint64_t)v18;
        BOOL v16 = (uint64_t)v17 < (uint64_t)v18;
      }
      if (v15) {
        uint64_t v11 = v16;
      }
      else {
        uint64_t v11 = -1;
      }
    }
    else
    {
      uint64_t v11 = -1;
    }
  }
  else
  {
    uint64_t v11 = 1;
  }

  return v11;
}

void sub_1006BB304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1006BB31C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if ([a2 shouldInterleaveClientResults])
  {
    uint64_t v7 = +[NSNumber numberWithUnsignedInteger:a3];
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
    unint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    *a4 = 1;
  }
}

void sub_1006BB9F0(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) ruleWithClientOnlyAutocompleteType:[a2 integerValue]];
  if (v3)
  {
    BOOL v4 = v3;
    [*(id *)(a1 + 40) addObject:v3];
    id v3 = v4;
  }
}

void sub_1006BBB48(uint64_t a1, void *a2)
{
  id v3 = [*(id *)(a1 + 32) excludingRuleWithClientOnlyAutocompleteType:[a2 integerValue]];
  if (v3)
  {
    BOOL v4 = v3;
    [*(id *)(a1 + 40) addObject:v3];
    id v3 = v4;
  }
}

id sub_1006BC154(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 27)) {
    double v3 = *(double *)(v2 + 64);
  }
  else {
    double v3 = 0.0;
  }
  BOOL v4 = [(id)v2 view];
  [v4 setAlpha:v3];

  id v5 = *(void **)(a1 + 32);

  return [v5 updateCompassInsets];
}

uint64_t sub_1006BC548(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1006BC8A8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) controlsStackView];
  double v3 = [*(id *)(a1 + 32) venueFloorViewController];
  BOOL v4 = [v3 closedPlaceholderView];
  [v2 addArrangedSubview:v4];

  id v7 = [*(id *)(a1 + 32) view];
  id v5 = [*(id *)(a1 + 32) venueFloorViewController];
  id v6 = [v5 view];
  [v7 addSubview:v6];
}

void sub_1006BCA80(uint64_t a1)
{
  double v2 = *(double *)(a1 + 40);
  double v3 = [*(id *)(a1 + 32) controlsStackViewIfLoaded];
  [v3 setAlpha:v2];

  double v4 = *(double *)(a1 + 40);
  id v6 = [*(id *)(a1 + 32) localSearchViewControllerIfLoaded];
  id v5 = [v6 view];
  [v5 setAlpha:v4];
}

void sub_1006BD6F8(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(unsigned char *)(a1 + 40);
  double v2 = (double)*(unint64_t *)&a2;
  id v4 = [*(id *)(a1 + 32) localSearchViewController];
  double v3 = [v4 view];
  [v3 setAlpha:v2];
}

id sub_1006BDC80()
{
  if (qword_10160F580 != -1) {
    dispatch_once(&qword_10160F580, &stru_1012F5098);
  }
  v0 = (void *)qword_10160F578;

  return v0;
}

void sub_1006BDE10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1006BDE2C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) settingsTipView];
  [v1 setAlpha:0.0];
}

void sub_1006BDE74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _unloadSettingsTipView];
}

void sub_1006BEC54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
}

void sub_1006BEC8C(uint64_t a1)
{
  uint64_t v2 = sub_1006BDC80();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v6 = 134349056;
    id v7 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[%{public}p] Launching TTR from floating control with full archive", (uint8_t *)&v6, 0xCu);
  }
  id v4 = objc_opt_new();
  [v4 setCollectFullLogArchive:1];
  id v5 = +[MapsRadarController sharedInstance];
  [v5 launchTTRWithRadar:v4];
}

void sub_1006BED7C(uint64_t a1)
{
  uint64_t v2 = sub_1006BDC80();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v6 = 134349056;
    id v7 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[%{public}p] Launching TTR from floating control with regular archive", (uint8_t *)&v6, 0xCu);
  }
  id v4 = objc_opt_new();
  [v4 setCollectFullLogArchive:0];
  id v5 = +[MapsRadarController sharedInstance];
  [v5 launchTTRWithRadar:v4];
}

void sub_1006C0858(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(unsigned char *)(a1 + 40);
  double v2 = (double)*(unint64_t *)&a2;
  id v4 = [*(id *)(a1 + 32) localSearchViewController];
  double v3 = [v4 view];
  [v3 setAlpha:v2];
}

void sub_1006C12DC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "FloatingControlsViewController");
  double v2 = (void *)qword_10160F578;
  qword_10160F578 = (uint64_t)v1;
}

id sub_1006C141C()
{
  if (qword_10160F590 != -1) {
    dispatch_once(&qword_10160F590, &stru_1012F50B8);
  }
  v0 = (void *)qword_10160F588;

  return v0;
}

id sub_1006C1598(uint64_t a1)
{
  double v2 = *(float *)(a1 + 40);
  [*(id *)(a1 + 32) cameraPitchThreshold];
  if (v3 <= v2)
  {
    int v6 = *(void **)(a1 + 32);
    uint64_t v7 = 5;
  }
  else
  {
    double v4 = *(float *)(a1 + 40);
    [*(id *)(a1 + 32) cameraPitchThreshold];
    int v6 = *(void **)(a1 + 32);
    if (v4 <= -v5) {
      uint64_t v7 = 4;
    }
    else {
      uint64_t v7 = 2;
    }
  }

  return [v6 setCurrentState:v7];
}

void sub_1006C1640(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFScanningStateCameraPitchMonitor");
  double v2 = (void *)qword_10160F588;
  qword_10160F588 = (uint64_t)v1;
}

id sub_1006C1B8C()
{
  if (qword_10160F5C0 != -1) {
    dispatch_once(&qword_10160F5C0, &stru_1012F5118);
  }
  v0 = (void *)qword_10160F5B8;

  return v0;
}

void sub_1006C200C(id a1)
{
  os_log_t v1 = objc_alloc_init(TrafficIncidentsDateFormatter);
  double v2 = (void *)qword_10160F598;
  qword_10160F598 = (uint64_t)v1;
}

void sub_1006C2168(id a1)
{
  os_log_t v1 = objc_alloc_init(TrafficIncidentsDateFormatter);
  double v2 = (void *)qword_10160F5A8;
  qword_10160F5A8 = (uint64_t)v1;
}

void sub_1006C22F4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavTrafficIncidentViewComposer");
  double v2 = (void *)qword_10160F5B8;
  qword_10160F5B8 = (uint64_t)v1;
}

void sub_1006C3C80(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) view];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(a1 + 40) view];
  [v3 setAlpha:1.0];
}

void sub_1006C3CF0(uint64_t a1)
{
  [*(id *)(a1 + 32) completeTransition:1];
  id v2 = [*(id *)(a1 + 40) view];
  [v2 setAlpha:1.0];
}

void sub_1006C4594(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateIfNeeded];
    id WeakRetained = v2;
  }
}

id sub_1006C49AC()
{
  if (qword_10160F5D0 != -1) {
    dispatch_once(&qword_10160F5D0, &stru_1012F51F0);
  }
  v0 = (void *)qword_10160F5C8;

  return v0;
}

uint64_t sub_1006C5E34(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1006C66F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mapView];
  [v2 setCamera:*(void *)(a1 + 40) animated:1];
}

id sub_1006C7124(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 isServerProvidedWaypoint] & 1) != 0
    || (double v4 = (char *)[v3 anchorPointType], (unint64_t)(v4 - 1) >= 2)
    && (v4 != (char *)3 || ([v3 isCoordinate] & 1) != 0))
  {
    double v5 = 0;
  }
  else
  {
    int v6 = [*(id *)(a1 + 32) mapView];
    double v5 = +[POIShapeFactory composedWaypointPOIShapeWithMapView:v6 composedWaypoint:v3];
  }

  return v5;
}

id sub_1006C7280(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 isServerProvidedWaypoint])
  {
    double v4 = 0;
  }
  else
  {
    double v5 = [*(id *)(a1 + 32) mapView];
    double v4 = +[POIShapeFactory composedWaypointPOIShapeWithMapView:v5 composedWaypoint:v3];
  }

  return v4;
}

void sub_1006C8074(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapCameraController");
  id v2 = (void *)qword_10160F5C8;
  qword_10160F5C8 = (uint64_t)v1;
}

void sub_1006C89A0(id a1, UIViewControllerTransitionCoordinatorContext *a2)
{
  id v2 = sub_1000BD86C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "ControlContainer viewWillTransitionToSize animation block", v3, 2u);
  }
}

void sub_1006C8A08(uint64_t a1)
{
  id v2 = sub_1000BD86C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "ControlContainer viewWillTransitionToSize animation end", buf, 2u);
  }

  if ([*(id *)(*(void *)(a1 + 32) + 424) isRoutePlanningPresented])
  {
    id v3 = [*(id *)(a1 + 32) chromeViewController];
    [v3 setNeedsUpdateComponent:@"mapInsets" animated:0];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1006C8B80;
    block[3] = &unk_1012E5D08;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    id v4[2] = sub_1006C8B94;
    void v4[3] = &unk_1012E8160;
    long long v6 = *(_OWORD *)(a1 + 48);
    id v5 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
  }
}

id sub_1006C8B80(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 424) ensureRoutePlanningContentIsVisible];
}

id sub_1006C8B94(uint64_t a1)
{
  id result = (id)CLLocationCoordinate2DIsValid(*(CLLocationCoordinate2D *)(a1 + 40));
  if (result)
  {
    id v3 = *(void **)(a1 + 32);
    double v4 = *(double *)(a1 + 40);
    double v5 = *(double *)(a1 + 48);
    return [v3 setCenterCoordinate:0 animated:v4, v5];
  }
  return result;
}

void sub_1006C8E80(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = [WeakRetained currentViewController];

  if (v5 == v3)
  {
    id v6 = objc_loadWeakRetained(v2);
    [v6 updateContentInjection];
  }
}

void sub_1006CA6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1006CA6E0(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v4 = +[_UIBackgroundViewConfiguration defaultPlainListCellConfigurationForState:a2];
    [v4 setBackgroundColorMode:0];
    id v5 = +[UIColor clearColor];
    [v4 setBackgroundColor:v5];
  }
  else
  {
    double v4 = 0;
  }

  return v4;
}

id sub_1006CBFE8()
{
  if (qword_10160F5F0 != -1) {
    dispatch_once(&qword_10160F5F0, &stru_1012F5308);
  }
  v0 = (void *)qword_10160F5E8;

  return v0;
}

void sub_1006CCF5C(id a1, UIAction *a2)
{
  id v2 = +[PedestrianARFloatingDebugViewController sharedInstance];
  [v2 composeTTR];
}

BOOL sub_1006CD7A0(id a1, PedestrianARCustomFeatureAnnotation *a2, unint64_t a3, BOOL *a4)
{
  return [(PedestrianARCustomFeatureAnnotation *)a2 isActive];
}

uint64_t sub_1006CDE64(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 labelMarker];
  id v5 = [v4 arWalkingFeature];
  id v6 = [*(id *)(a1 + 32) arWalkingFeature];
  if ([v5 isEqual:v6])
  {
    uint64_t v7 = [v3 labelMarker];
    id v8 = [v7 featureLabelIdentifier];
    if (v8 == [*(id *)(a1 + 32) featureLabelIdentifier]
      && *(unsigned __int8 *)(a1 + 40) == [v3 isActive])
    {
      unsigned int v9 = [v3 isOccluded];
      uint64_t v10 = v9 ^ [*(id *)(a1 + 32) isOccluded] ^ 1;
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

void sub_1006CE8B4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mapView];
  uint64_t v3 = [v2 detailedDescription];
  double v4 = (void *)v3;
  if (v3) {
    CFStringRef v5 = (const __CFString *)v3;
  }
  else {
    CFStringRef v5 = &stru_101324E70;
  }
  id v6 = +[MapsRadarTextAttachment attachmentWithFileName:@"PedestrianARVKMapViewDiagnostics-debug.txt" text:v5];

  uint64_t v7 = +[MapsRadarKeyword keywordWithName:@"MAPS377" number:1281664];
  id v8 = *(void **)(a1 + 40);
  double v13 = v6;
  unsigned int v9 = +[NSArray arrayWithObjects:&v13 count:1];
  [v8 addAttachments:v9];

  uint64_t v10 = *(void **)(a1 + 40);
  double v12 = v7;
  uint64_t v11 = +[NSArray arrayWithObjects:&v12 count:1];
  [v10 addKeywords:v11];

  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1006CEB90(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARDebugMapAnnotationsTask");
  id v2 = (void *)qword_10160F5E8;
  qword_10160F5E8 = (uint64_t)v1;
}

UIColor *__cdecl sub_1006CF204(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

void sub_1006CFC08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1006CFC24(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  CFStringRef v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained subscriptionManager];
    uint64_t v7 = [v3 subscription];
    id v8 = [v7 identifier];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    _DWORD v9[2] = sub_1006CFD20;
    _OWORD v9[3] = &unk_1012E6438;
    id v10 = v3;
    [v6 removeSubscriptionWithIdentifier:v8 callbackQueue:&_dispatch_main_q completionHandler:v9];
  }
}

void sub_1006CFD20(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    CFStringRef v5 = sub_1000493C0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v6 = [*(id *)(a1 + 32) subscription];
      uint64_t v7 = [v6 identifier];
      int v8 = 138412546;
      unsigned int v9 = v7;
      __int16 v10 = 2112;
      id v11 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error removing expired subscription: %@, error: %@", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1006D0070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006D009C(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v9 = WeakRetained;
    if (a2)
    {
      CFStringRef v5 = [WeakRetained diffableDataSource];
      id v6 = [v5 snapshot];

      [v6 deleteItemsWithIdentifiers:*(void *)(a1 + 32)];
      uint64_t v7 = [v9 diffableDataSource];
      [v7 applySnapshot:v6 animatingDifferences:1];
    }
    int v8 = [v9 offlineDelegate];
    [v8 dismissExpiredViewControllerIfNecessary];

    id WeakRetained = v9;
  }
}

BOOL sub_1006D0280(void *a1)
{
  id v1 = a1;
  if (GEOSupportsOfflineMaps())
  {
    uint64_t v2 = [v1 regulatoryRegionID];
    unsigned int v3 = [v2 unsignedIntValue];
    id v4 = +[GEOResourceManifestManager modernManager];
    CFStringRef v5 = [v4 activeTileGroup];
    id v6 = [v5 offlineMetadata];
    BOOL v7 = v3 == [v6 regulatoryRegionId];
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

void sub_1006D0A10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006D0A50(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v11 = WeakRetained;
  if (WeakRetained)
  {
    double v12 = [WeakRetained subscriptionManager];
    double v13 = [*(id *)(a1 + 32) subscription];
    double v14 = [v13 identifier];
    id v15 = &_dispatch_main_q;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_1006D0BF8;
    v16[3] = &unk_1012F5378;
    id v17 = *(id *)(a1 + 32);
    objc_copyWeak(&v19, (id *)(a1 + 40));
    id v18 = v9;
    [v12 removeSubscriptionWithIdentifier:v14 callbackQueue:&_dispatch_main_q completionHandler:v16];

    +[GEOAPPortal captureUserAction:384 target:85 value:0];
    objc_destroyWeak(&v19);
  }
}

void sub_1006D0BE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1006D0BF8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = sub_1000493C0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v7 = [*(id *)(a1 + 32) subscription];
      id v8 = [v7 identifier];
      *(_DWORD *)buf = 138412546;
      id v18 = v8;
      __int16 v19 = 2112;
      id v20 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error removing expired subscription: %@, error: %@", buf, 0x16u);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  __int16 v10 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      id v11 = [WeakRetained diffableDataSource];
      double v12 = [v11 snapshot];

      uint64_t v16 = *(void *)(a1 + 32);
      double v13 = +[NSArray arrayWithObjects:&v16 count:1];
      [v12 deleteItemsWithIdentifiers:v13];

      double v14 = [v10 diffableDataSource];
      [v14 applySnapshot:v12 animatingDifferences:1];
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    id v15 = [v10 offlineDelegate];
    [v15 dismissExpiredViewControllerIfNecessary];
  }
}

void sub_1006D0DAC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _restoreSubscription:*(void *)(a1 + 32) completionHandler:v7];
    +[GEOAPPortal captureUserAction:398 target:85 value:0];
  }
}

void sub_1006D0FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006D0FCC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      id v6 = [WeakRetained diffableDataSource];
      id v7 = [v6 snapshot];

      uint64_t v12 = *(void *)(a1 + 32);
      id v8 = +[NSArray arrayWithObjects:&v12 count:1];
      [v7 deleteItemsWithIdentifiers:v8];

      id v9 = [v5 diffableDataSource];
      [v9 applySnapshot:v7 animatingDifferences:1];
    }
    uint64_t v10 = *(void *)(a1 + 40);
    if (v10) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v10, a2);
    }
    id v11 = [v5 offlineDelegate];
    [v11 dismissExpiredViewControllerIfNecessary];
  }
}

void sub_1006D1314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006D1340(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (!v5 && v6)
    {
      id v8 = sub_1000493C0();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v11 = 138412290;
        id v12 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error fetching expired subscriptions: %@", (uint8_t *)&v11, 0xCu);
      }
    }
    uint64_t v9 = [v5 _geo_map:&stru_1012F5408];
    uint64_t v10 = (void *)WeakRetained[15];
    WeakRetained[15] = v9;

    [WeakRetained _updateContentAnimated:*(unsigned __int8 *)(a1 + 40)];
  }
}

id sub_1006D1460(id a1, GEOMapDataSubscription *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = [[_OfflineMapsExpiredSubscription alloc] initWithSubscription:v2];

  return v3;
}

void sub_1006D18F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
}

void sub_1006D1924(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _restoreSubscription:*(void *)(a1 + 32) completionHandler:0];
    id WeakRetained = v3;
  }
}

void sub_1006D209C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006D20B8(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained startedTest];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1006D21E4;
    void v6[3] = &unk_1012E6730;
    objc_copyWeak(&v7, v1);
    +[PPTNotificationCenter addOnceObserverForName:@"PPTTest_SearchHome_DidSetActive" object:0 usingBlock:v6];
    id v4 = +[NSNotificationCenter defaultCenter];
    [v4 addObserver:v3 selector:"didUpdateDataFetcher:" name:@"PPTTest_SearchHome_DidUpdateDataFetcher" object:0];

    id v5 = [v3 testCoordinator];
    [v5 pptTestEnterSearchMode];

    objc_destroyWeak(&v7);
  }
}

void sub_1006D21CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1006D21E4(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = [v6 object];
    [WeakRetained setSearchHomeDataSource:v4];

    id v5 = [WeakRetained searchHomeDataSource];
    [WeakRetained setNumberOfDataFetchers:[v5 _ppt_numberOfDataFetchers]];

    [WeakRetained startedSubTest:@"searchHomeCollectData"];
  }
}

id sub_1006D23C4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) continueAfterCollectingDataFromDataFetchers];
}

void sub_1006D24E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1006D2500(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained finishedSubTest:@"guidesHomeCollectData"];
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1006D259C;
    v3[3] = &unk_1012E5D08;
    void v3[4] = v2;
    [v2 _dispatchAfterShortDelay:v3];
  }
}

id sub_1006D259C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) runScrollTest];
}

id sub_1006D25A4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) searchHomeDataSource];
  [v2 _ppt_selectExploreGuides];

  id v3 = *(void **)(a1 + 32);

  return [v3 startedSubTest:@"guidesHomeCollectData"];
}

void sub_1006D27E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006D2834(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained finishedSubTest:*(void *)(a1 + 32)];
    [v3 finishedTest];
    id WeakRetained = v3;
  }
}

uint64_t sub_1006D2940(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1006D30E4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) chromeViewController];
  [*(id *)(*(void *)(a1 + 32) + 88) setChromeViewController:v2];

  id v3 = [*(id *)(a1 + 32) _recenterButton];
  id v4 = [*(id *)(*(void *)(a1 + 32) + 88) overlayView];
  [v4 addSubview:v3];

  id v20 = [v3 widthAnchor];
  __int16 v19 = [v20 constraintEqualToConstant:60.0];
  v21[0] = v19;
  id v18 = [v3 heightAnchor];
  id v17 = [v3 widthAnchor];
  uint64_t v16 = [v18 constraintEqualToAnchor:v17];
  v21[1] = v16;
  id v15 = [v3 leadingAnchor];
  id v5 = [*(id *)(*(void *)(a1 + 32) + 88) innerLayoutGuide];
  id v6 = [v5 leadingAnchor];
  id v7 = [v15 constraintEqualToAnchor:v6];
  v21[2] = v7;
  id v8 = [*(id *)(*(void *)(a1 + 32) + 88) innerLayoutGuide];
  uint64_t v9 = [v8 bottomAnchor];
  uint64_t v10 = [v3 bottomAnchor];
  int v11 = [v9 constraintEqualToAnchor:v10];
  v21[3] = v11;
  id v12 = +[NSArray arrayWithObjects:v21 count:4];
  +[NSLayoutConstraint activateConstraints:v12];

  [*(id *)(a1 + 32) _updateRecenterButtonVisibility];
  double v13 = +[MKMapService sharedService];
  double v14 = [*(id *)(*(void *)(a1 + 32) + 96) displayedItemIndexForAnalytics];
  [v13 captureUserAction:3065 onTarget:610 eventValue:0 transitStep:v14];
}

void sub_1006D3394(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) iosBasedChromeViewController];
  [v2 updateViewMode:3 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1006D34B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 112);
  id v4 = [*(id *)(v2 + 88) overlayView];
  [v3 removeDebugViewsFromView:v4];

  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(v5 + 96);
  if (v6)
  {
    [*(id *)(v5 + 88) popLastViewControllerFromViewController:v6 animated:*(unsigned __int8 *)(a1 + 40) useDefaultContaineeLayout:1];
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = *(void **)(v7 + 96);
    *(void *)(v7 + 96) = 0;
  }
}

void sub_1006D4144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006D4164(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v11 = a2;
  id v7 = a3;
  if (*(void *)(a1 + 40) != a4)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    if (WeakRetained)
    {
      uint64_t v9 = WeakRetained;
      uint64_t v10 = (void *)*((void *)WeakRetained + 12);
      if (v10) {
        [v10 updateForClusteredLegSelectedRideIndexChange];
      }
    }
  }
}

id sub_1006D4314(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v1 = 0;
    uint64_t v2 = off_1012E65D0;
  }
  else
  {
    uint64_t v1 = *(void *)(a1 + 40);
    uint64_t v2 = off_1012E65C8;
  }
  return +[PPTNotificationCenter postNotificationIfNeededWithName:*v2 object:v1 userInfo:0];
}

void sub_1006D53F0(uint64_t a1)
{
  id v2 = +[MKMapService sharedService];
  [v2 captureUserAction:41 onTarget:46 forAdvisory:*(void *)(a1 + 32)];
}

void sub_1006D572C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006D5758(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = sub_10000AF10();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    id v5 = WeakRetained;
    uint64_t v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      uint64_t v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        uint64_t v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    uint64_t v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

    *(_DWORD *)buf = 138543618;
    long long v29 = v10;
    __int16 v30 = 1024;
    int v31 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] User exited VLF Crowdsourcing permission card with answer: %d", buf, 0x12u);

LABEL_9:
    id v11 = [WeakRetained iosBasedChromeViewController];
    id v12 = [v11 userLocationView];
    id v13 = [v12 vlfMode];

    double v14 = sub_10000AF10();
    BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_INFO);
    if (v13)
    {
      if (!v15)
      {
LABEL_17:

        [WeakRetained showVLF];
        goto LABEL_26;
      }
      id v16 = WeakRetained;
      id v17 = (objc_class *)objc_opt_class();
      id v18 = NSStringFromClass(v17);
      if (objc_opt_respondsToSelector())
      {
        __int16 v19 = [v16 performSelector:"accessibilityIdentifier"];
        id v20 = v19;
        if (v19 && ![v19 isEqualToString:v18])
        {
          id v21 = +[NSString stringWithFormat:@"%@<%p, %@>", v18, v16, v20];

          goto LABEL_16;
        }
      }
      id v21 = +[NSString stringWithFormat:@"%@<%p>", v18, v16];
LABEL_16:

      *(_DWORD *)buf = 138543362;
      long long v29 = v21;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "[%{public}@] VLF is still eligible to be shown; showing now",
        buf,
        0xCu);

      goto LABEL_17;
    }
    if (!v15)
    {
LABEL_25:

      goto LABEL_26;
    }
    id v22 = WeakRetained;
    uint64_t v23 = (objc_class *)objc_opt_class();
    id v24 = NSStringFromClass(v23);
    if (objc_opt_respondsToSelector())
    {
      id v25 = [v22 performSelector:"accessibilityIdentifier"];
      uint64_t v26 = v25;
      if (v25 && ![v25 isEqualToString:v24])
      {
        uint64_t v27 = +[NSString stringWithFormat:@"%@<%p, %@>", v24, v22, v26];

        goto LABEL_24;
      }
    }
    uint64_t v27 = +[NSString stringWithFormat:@"%@<%p>", v24, v22];
LABEL_24:

    *(_DWORD *)buf = 138543362;
    long long v29 = v27;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "[%{public}@] VLF is no longer eligible to be shown", buf, 0xCu);

    goto LABEL_25;
  }
LABEL_26:
}

void sub_1006D63CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1006D63E4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(unsigned char *)(v8 + 24))
  {
    id v13 = v7;
    uint64_t v9 = *(void **)(a1 + 32);
    id v10 = a2;
    id v11 = [v9 objectAtIndexedSubscript:a4];
    LODWORD(v9) = [v10 isEqual:v11];

    if (v9)
    {
      id v12 = [*(id *)(a1 + 40) objectAtIndexedSubscript:a4];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v13 isEqual:v12];
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
    }

    id v7 = v13;
  }
  else
  {
    *(unsigned char *)(v8 + 24) = 0;
  }
}

void sub_1006D6644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
  [v3 addObject:v4];
}

id sub_1006D70E4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) loadSubCategories];
}

id sub_1006D7B88(uint64_t a1)
{
  return _[*(id *)(a1 + 32) initCurrentListSession];
}

void sub_1006DA270(uint64_t a1, uint64_t a2)
{
  id v3 = +[ShareItem shareItemForCurrentLocationIncludingPrintActivity:0 withBackingMapItem:a2];
  [*(id *)(a1 + 32) shareItem:v3 sourceView:*(void *)(a1 + 40) completion:0];
}

void sub_1006DA2D8(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v13 = v5;
    uint64_t v14 = v4;
    uint64_t v15 = v2;
    uint64_t v16 = v3;
    id v7 = +[MKLocationManager sharedLocationManager];
    unsigned int v8 = [v7 isAuthorizedForPreciseLocation];

    if (v8)
    {
      uint64_t v9 = +[MKLocationManager sharedLocationManager];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_1006DA3DC;
      void v11[3] = &unk_1012F1628;
      id v12 = *(id *)(a1 + 32);
      id v10 = [v9 singleLocationUpdateWithDesiredAccuracy:v11 handler:kCLLocationAccuracyBest];

      [v10 start];
    }
  }
}

void sub_1006DA3DC(uint64_t a1)
{
  uint64_t v2 = +[SearchResult currentLocationSearchResult];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1006DA48C;
  void v5[3] = &unk_1012F1600;
  id v3 = *(id *)(a1 + 32);
  id v6 = v2;
  id v7 = v3;
  id v4 = v2;
  [v4 tryUpdatingCurrentLocationSearchResultWithCompletion:v5];
}

void sub_1006DA48C(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    id v3 = [*(id *)(a1 + 32) mapItem];
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
  }
}

void sub_1006DAA08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006DAA24(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v11 = a4;
  id v6 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v8 = [WeakRetained _extractLayoutFormFromResponse:v6];

  if (v8)
  {
    id v9 = v11;
  }
  else
  {
    uint64_t v10 = +[NSError errorWithDomain:@"Layout config not included" code:-1 userInfo:0];

    id v9 = (id)v10;
  }
  id v12 = v9;
  if (!v9 && *(unsigned char *)(a1 + 48)) {
    +[RAPLayoutCache setConfig:forLayoutType:](RAPLayoutCache, "setConfig:forLayoutType:", v8, [WeakRetained[3] layoutType]);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1006DAFBC(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  [v3 setObject:*(void *)(a1 + 32) forKeyedSubscript:NSFontAttributeName];
  id v4 = [v3 copy];

  return v4;
}

id sub_1006DB1C0(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  if (*(unsigned char *)(a1 + 32)) {
    +[UIFont _maps_fontWithTextStyle:UIFontTextStyleBody weight:0 compatibleWithTraitCollection:UIFontWeightSemibold];
  }
  else {
  id v4 = +[UIFont systemFontOfSize:17.0 weight:UIFontWeightSemibold];
  }
  [v3 setObject:v4 forKeyedSubscript:NSFontAttributeName];

  return v3;
}

void sub_1006DB834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *sub_1006DB858(void *result)
{
  ++*(void *)(result[4] + 48);
  if (*((unsigned char *)result + 56))
  {
    uint64_t v1 = result;
    uint64_t v2 = (void *)result[4];
    id v3 = (void *)v2[3];
    if (!v3)
    {
      [v2 _loadLookAroundContainerView];
      [(id)v1[4] _updateConstraints];
      [(id)v1[4] _applyViewPropertiesForState:v1[6]];
      id v4 = [(id)v1[4] view];
      [v4 layoutIfNeeded];

      id v3 = *(void **)(v1[4] + 24);
    }
    uint64_t v5 = v1[5];
    uint64_t v6 = *((unsigned __int8 *)v1 + 57);
    return _[v3 setMapItem:v5 isMarkedLocation:v6 wantsCloseUpView:0];
  }
  return result;
}

void sub_1006DB91C(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 32);
  if (v1 != *(unsigned __int8 *)(v2 + 32))
  {
    *(unsigned char *)(v2 + 32) = v1;
    [*(id *)(a1 + 32) _invalidateConstraints];
    [*(id *)(a1 + 32) _updateConstraints];
    [*(id *)(a1 + 32) _applyViewPropertiesForState:*(void *)(a1 + 40)];
    id v5 = [*(id *)(a1 + 32) view];
    id v4 = [v5 superview];
    [v4 layoutIfNeeded];
  }
}

void sub_1006DB9C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = *((void *)WeakRetained + 6);
    BOOL v3 = v2 == 1;
    BOOL v4 = v2 < 1;
    uint64_t v5 = v2 - 1;
    if (!v4)
    {
      *((void *)WeakRetained + 6) = v5;
      if (v3)
      {
        id v9 = (id *)WeakRetained;
        id v6 = *((id *)WeakRetained + 9);
        if ([v6 _hasLookAroundStorefront]) {
          uint64_t v7 = 3;
        }
        else {
          uint64_t v7 = 0;
        }
        [v9 _applyViewPropertiesForState:v7];
        if ([v6 _hasLookAroundStorefront])
        {
          unsigned int v8 = [v9[3] lookAroundViewIfPresent];

          [v8 moveToCloseUpView];
          id v6 = v8;
        }
        else
        {
          [v9 _unloadLookAroundContainerView];
        }

        id WeakRetained = v9;
      }
    }
  }
}

void sub_1006DD040(uint64_t a1, void *a2, void *a3)
{
  id v23 = a2;
  id v5 = a3;
  if (v5 || ![v23 count])
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    goto LABEL_21;
  }
  id v6 = [v23 firstObject];
  id v7 = [objc_alloc((Class)MKPlacemark) initWithPlacemark:v6];
  id v8 = [objc_alloc((Class)MKMapItem) initWithPlacemark:v7];
  id v9 = [v8 _addressFormattedAsTitlesForMapRect:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
  uint64_t v10 = [v9 firstObject];
  id v11 = +[UIDevice currentDevice];
  id v12 = [v11 userInterfaceIdiom];

  if (v12 != (id)5)
  {
    uint64_t v16 = *(void *)(a1 + 32);
    if (v16 && v10)
    {
      id v17 = +[NSBundle mainBundle];
      id v18 = [v17 localizedStringForKey:@" — " value:@"localized string not found" table:0];
      id v19 = +[NSString stringWithFormat:@"%@%@%@", v16, v18, v10];
    }
    else
    {
      if (v16) {
        id v20 = *(void **)(a1 + 32);
      }
      else {
        id v20 = v10;
      }
      id v19 = v20;
    }
    goto LABEL_20;
  }
  if ((unint64_t)[v9 count] >= 2
    && ([v9 objectAtIndexedSubscript:1], (uint64_t v13 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    uint64_t v14 = (void *)v13;
    uint64_t v15 = v10;
    if (v10 != (void *)v13)
    {
      if (([v10 isEqual:v13] & 1) == 0)
      {
        id v22 = +[NSBundle mainBundle];
        id v21 = [v22 localizedStringForKey:@" — " value:@"localized string not found" table:0];
        id v19 = +[NSString stringWithFormat:@"%@%@%@", v10, v21, v14];

        goto LABEL_15;
      }
      uint64_t v15 = v14;
    }
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v19 = v10;
  uint64_t v14 = v15;
LABEL_15:

LABEL_20:
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

LABEL_21:
}

void sub_1006DD58C(id a1, BOOL a2)
{
}

void sub_1006DD5A0(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"UserProfileDidOpenProfilePageNotification" object:0 userInfo:0];
}

void sub_1006DDE7C(uint64_t a1)
{
  [*(id *)(a1 + 32) setCompassEnabled:1];
  uint64_t v2 = +[MKMapService sharedService];
  [v2 captureUserAction:4 onTarget:601 eventValue:0];

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 456));
  [WeakRetained setUseBackdropFullScreen:0];

  id v4 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 456));
  id v5 = [v4 view];
  [v5 setNeedsLayout];

  id v7 = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 456));
  id v6 = [v7 view];
  [v6 layoutIfNeeded];
}

id sub_1006DE7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) closeRoutePlanningViewController:a2 withSender:a3];
}

void sub_1006DEA84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1006DEAA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained mapSelectionManager];
  uint64_t v2 = [v1 mapView];
  [v2 _deselectLabelMarkerAnimated:1];
}

void sub_1006DEBF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1006DEC0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained mapSelectionManager];
  uint64_t v2 = [v1 mapView];
  [v2 _deselectLabelMarkerAnimated:1];
}

void sub_1006DF68C(uint64_t a1, void *a2, uint64_t a3)
{
  id v12 = a2;
  if ([*(id *)(*(void *)(a1 + 32) + 424) isActive])
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      BOOL v3 = [*(id *)(a1 + 48) lineItem];
      id v7 = [v3 muid];
      if (v7 == [*(id *)(a1 + 40) muid])
      {

LABEL_11:
        id v11 = *(void **)(a1 + 48);
        if (v12)
        {
          [v11 setLineItem:v12 labelMarker:0 loading:0 preferredLayout:0];
          goto LABEL_15;
        }
        BOOL v3 = [v11 lineItem];
        [v11 setLineItem:v3 labelMarker:0 loading:0 preferredLayout:0];
        goto LABEL_14;
      }
      if (!a3)
      {
LABEL_14:

        goto LABEL_15;
      }
    }
    else if (!a3)
    {
      goto LABEL_15;
    }
    id v8 = [*(id *)(a1 + 48) lineItem];
    id v9 = [v8 muid];
    id v10 = [*(id *)(a1 + 40) muid];

    if (v6) {
    if (v9 == v10)
    }
      goto LABEL_11;
  }
LABEL_15:
}

void sub_1006E019C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) searchModeViewController];
  [v2 showSearchResults:*(void *)(a1 + 40)];
}

void sub_1006E03AC(uint64_t a1, void *a2)
{
  id v10 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [v10 userInfo];
  id v5 = [v4 objectForKeyedSubscript:@"ContainerContainee"];

  if (WeakRetained)
  {
    id v6 = [v10 object];
    id v7 = objc_loadWeakRetained(WeakRetained + 57);

    if (v6 == v7)
    {
      if (v5)
      {
        id v8 = objc_loadWeakRetained(WeakRetained + 57);
        id v9 = [v8 currentViewController];
        [WeakRetained containerViewControllerDidResignContainee:v5 toContainee:v9];
      }
    }
  }
}

void sub_1006E093C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100576BCC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_10;
    }
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543618;
    uint64_t v14 = v10;
    __int16 v15 = 2112;
    id v16 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] Launching placecard for shortcut entry: %@", buf, 0x16u);
  }
  id v11 = [*(id *)(a1 + 32) _searchResultFromMapsFavoriteItem:v3];
  id v12 = [*(id *)(a1 + 32) mapSelectionManager];
  [v12 injectAndSelectSearchResult:v11];
}

void sub_1006E0B10(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100576BCC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_10;
    }
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543618;
    id v20 = v10;
    __int16 v21 = 2112;
    id v22 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] Launching route planning for shortcut entry: %@", buf, 0x16u);
  }
  id v11 = [*(id *)(a1 + 32) _searchResultFromMapsFavoriteItem:v3];
  id v12 = objc_alloc_init(SearchFieldItem);
  uint64_t v13 = +[SearchResult currentLocationSearchResult];
  [(SearchFieldItem *)v12 setSearchResult:v13];

  uint64_t v14 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v14 setSearchResult:v11];
  __int16 v15 = [DirectionItem alloc];
  v18[0] = v12;
  v18[1] = v14;
  id v16 = +[NSArray arrayWithObjects:v18 count:2];
  id v17 = [(DirectionItem *)v15 initWithItems:v16 transportType:0];

  [*(id *)(a1 + 32) viewController:*(void *)(a1 + 40) doDirectionItem:v17 withUserInfo:*(void *)(a1 + 48)];
}

uint64_t sub_1006E0D74(uint64_t a1)
{
  LODWORD(v2) = [*(id *)(a1 + 32) _isMapItemTypeTransit];
  id v3 = sub_100576BCC();
  if (!os_log_type_enabled(v3, OS_LOG_TYPE_INFO)) {
    goto LABEL_29;
  }
  id v4 = *(id *)(a1 + 40);
  if (!v4)
  {
    id v25 = @"<nil>";
    goto LABEL_10;
  }
  id v5 = (objc_class *)objc_opt_class();
  id v6 = NSStringFromClass(v5);
  if (objc_opt_respondsToSelector())
  {
    id v7 = [v4 performSelector:"accessibilityIdentifier"];
    id v8 = v7;
    if (v7 && ![v7 isEqualToString:v6])
    {
      uint64_t v9 = +[NSString stringWithFormat:@"%@<%p, %@>", v6, v4, v8];

      goto LABEL_8;
    }
  }
  uint64_t v9 = +[NSString stringWithFormat:@"%@<%p>", v6, v4];
LABEL_8:
  id v25 = (__CFString *)v9;

LABEL_10:
  if (*(unsigned char *)(a1 + 72)) {
    id v10 = @"YES";
  }
  else {
    id v10 = @"NO";
  }
  id v11 = v10;
  if (*(unsigned char *)(a1 + 73)) {
    id v12 = @"YES";
  }
  else {
    id v12 = @"NO";
  }
  uint64_t v13 = v12;
  if (*(unsigned char *)(a1 + 74)) {
    uint64_t v14 = @"YES";
  }
  else {
    uint64_t v14 = @"NO";
  }
  __int16 v15 = v14;
  if (*(unsigned char *)(a1 + 75)) {
    id v16 = @"YES";
  }
  else {
    id v16 = @"NO";
  }
  id v17 = v16;
  if (v2) {
    id v18 = @"YES";
  }
  else {
    id v18 = @"NO";
  }
  char v19 = (char)v2;
  id v2 = v18;
  if (*(unsigned char *)(a1 + 76)) {
    id v20 = @"YES";
  }
  else {
    id v20 = @"NO";
  }
  __int16 v21 = v20;
  *(_DWORD *)buf = 138544898;
  uint64_t v27 = v25;
  __int16 v28 = 2112;
  long long v29 = v11;
  __int16 v30 = 2112;
  int v31 = v13;
  __int16 v32 = 2112;
  id v33 = v15;
  __int16 v34 = 2112;
  __int16 v35 = v17;
  __int16 v36 = 2112;
  uint64_t v37 = v2;
  __int16 v38 = 2112;
  uint64_t v39 = v21;
  _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}@] Will open entry with checks: routingAvailable: %@, alreadyThere: %@, isAuthorizedForPreciseLocation: %@, isIpad: %@, isTransit: %@, forceShowPlacecard: %@", buf, 0x48u);

  LOBYTE(v2) = v19;
LABEL_29:

  if (!*(unsigned char *)(a1 + 72)
    || *(unsigned char *)(a1 + 73)
    || !*(unsigned char *)(a1 + 74)
    || (*(unsigned char *)(a1 + 75) ? (char v24 = 1) : (char v24 = (char)v2), (v24 & 1) != 0 || *(unsigned char *)(a1 + 76)))
  {
    uint64_t v22 = a1 + 56;
  }
  else
  {
    uint64_t v22 = a1 + 64;
  }
  return (*(uint64_t (**)(void))(*(void *)v22 + 16))();
}

void sub_1006E2174(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1006E2218(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100576BCC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_10;
    }
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      uint64_t v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543618;
    __int16 v15 = v10;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] Launching placecard for shortcut entry: %@", buf, 0x16u);
  }
  id v11 = [*(id *)(a1 + 32) _searchResultFromMapsSuggestionsEntry:v3];
  id v12 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v12 setSearchResult:v11];
  uint64_t v13 = [(SearchFieldItem *)v12 searchResult];
  [v13 setHasIncompleteMetadata:1];

  [*(id *)(a1 + 32) viewController:*(void *)(a1 + 40) doSearchItem:v12 withUserInfo:*(void *)(a1 + 48)];
}

void sub_1006E2418(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100576BCC();
  if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
    goto LABEL_11;
  }
  id v5 = *(id *)(a1 + 32);
  if (!v5)
  {
    id v10 = @"<nil>";
    goto LABEL_10;
  }
  id v6 = (objc_class *)objc_opt_class();
  id v7 = NSStringFromClass(v6);
  if (objc_opt_respondsToSelector())
  {
    id v8 = [v5 performSelector:"accessibilityIdentifier"];
    uint64_t v9 = v8;
    if (v8 && ![v8 isEqualToString:v7])
    {
      id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

      goto LABEL_8;
    }
  }
  id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
  *(_DWORD *)buf = 138543618;
  uint64_t v22 = v10;
  __int16 v23 = 2112;
  id v24 = v3;
  _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] Launching route planning for shortcut entry: %@", buf, 0x16u);

LABEL_11:
  id v11 = [*(id *)(a1 + 32) _searchResultFromMapsSuggestionsEntry:v3];
  id v12 = objc_alloc_init(SearchFieldItem);
  uint64_t v13 = +[SearchResult currentLocationSearchResult];
  [(SearchFieldItem *)v12 setSearchResult:v13];

  uint64_t v14 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v14 setSearchResult:v11];
  __int16 v15 = [DirectionItem alloc];
  v20[0] = v12;
  v20[1] = v14;
  __int16 v16 = +[NSArray arrayWithObjects:v20 count:2];
  unsigned int v17 = [*(id *)(a1 + 40) transportType] - 1;
  if (v17 > 5) {
    uint64_t v18 = 1;
  }
  else {
    uint64_t v18 = qword_100F71B88[v17];
  }
  char v19 = [(DirectionItem *)v15 initWithItems:v16 transportType:v18];

  [*(id *)(a1 + 32) viewController:*(void *)(a1 + 48) doDirectionItem:v19 withUserInfo:*(void *)(a1 + 56)];
}

uint64_t sub_1006E26A0(uint64_t a1)
{
  LODWORD(v2) = [*(id *)(a1 + 32) _isMapItemTypeTransit];
  id v3 = sub_100576BCC();
  if (!os_log_type_enabled(v3, OS_LOG_TYPE_INFO)) {
    goto LABEL_29;
  }
  id v4 = *(id *)(a1 + 40);
  if (!v4)
  {
    id v25 = @"<nil>";
    goto LABEL_10;
  }
  id v5 = (objc_class *)objc_opt_class();
  id v6 = NSStringFromClass(v5);
  if (objc_opt_respondsToSelector())
  {
    id v7 = [v4 performSelector:"accessibilityIdentifier"];
    id v8 = v7;
    if (v7 && ![v7 isEqualToString:v6])
    {
      uint64_t v9 = +[NSString stringWithFormat:@"%@<%p, %@>", v6, v4, v8];

      goto LABEL_8;
    }
  }
  uint64_t v9 = +[NSString stringWithFormat:@"%@<%p>", v6, v4];
LABEL_8:
  id v25 = (__CFString *)v9;

LABEL_10:
  if (*(unsigned char *)(a1 + 72)) {
    id v10 = @"YES";
  }
  else {
    id v10 = @"NO";
  }
  id v11 = v10;
  if (*(unsigned char *)(a1 + 73)) {
    id v12 = @"YES";
  }
  else {
    id v12 = @"NO";
  }
  uint64_t v13 = v12;
  if (*(unsigned char *)(a1 + 74)) {
    uint64_t v14 = @"YES";
  }
  else {
    uint64_t v14 = @"NO";
  }
  __int16 v15 = v14;
  if (*(unsigned char *)(a1 + 75)) {
    __int16 v16 = @"YES";
  }
  else {
    __int16 v16 = @"NO";
  }
  unsigned int v17 = v16;
  if (v2) {
    uint64_t v18 = @"YES";
  }
  else {
    uint64_t v18 = @"NO";
  }
  char v19 = (char)v2;
  uint64_t v2 = v18;
  if (*(unsigned char *)(a1 + 76)) {
    id v20 = @"YES";
  }
  else {
    id v20 = @"NO";
  }
  __int16 v21 = v20;
  *(_DWORD *)buf = 138544898;
  uint64_t v27 = v25;
  __int16 v28 = 2112;
  long long v29 = v11;
  __int16 v30 = 2112;
  int v31 = v13;
  __int16 v32 = 2112;
  id v33 = v15;
  __int16 v34 = 2112;
  __int16 v35 = v17;
  __int16 v36 = 2112;
  uint64_t v37 = v2;
  __int16 v38 = 2112;
  uint64_t v39 = v21;
  _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}@] Will open entry with checks: routingUnavailable: %@, alreadyThere: %@, isAuthorizedForPreciseLocation: %@, isIpad: %@, isTransit: %@, forceShowPlacecard: %@", buf, 0x48u);

  LOBYTE(v2) = v19;
LABEL_29:

  if (*(unsigned char *)(a1 + 72)
    || *(unsigned char *)(a1 + 73)
    || !*(unsigned char *)(a1 + 74)
    || (*(unsigned char *)(a1 + 75) ? (char v24 = 1) : (char v24 = (char)v2), (v24 & 1) != 0 || *(unsigned char *)(a1 + 76)))
  {
    uint64_t v22 = a1 + 56;
  }
  else
  {
    uint64_t v22 = a1 + 64;
  }
  return (*(uint64_t (**)(void))(*(void *)v22 + 16))();
}

id *sub_1006E2970(id *result, uint64_t a2)
{
  if (a2) {
    return (id *)[result[4] viewController:result[5] selectParkedCar:a2 andPerformAction:0 selectPOIOnMap:1];
  }
  return result;
}

void sub_1006E2990(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v4 setAutocompletePerson:v3];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1006E2A7C;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  id v7 = *(id *)(a1 + 32);
  id v8 = v4;
  id v5 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v9);
}

void sub_1006E2A7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained viewController:*(void *)(a1 + 32) doSearchItem:*(void *)(a1 + 40) withUserInfo:0];
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      id v6 = "ActionCoordinator.m";
      __int16 v7 = 1026;
      int v8 = 1756;
      __int16 v9 = 2082;
      id v10 = "-[ActionCoordinator viewController:openMapsSuggestionEntry:withUserInfo:]_block_invoke_3";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_1006E2B90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 || ![v5 count])
  {
    __int16 v7 = sub_1000519B4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = v5;
      __int16 v9 = v8;
      if (v8)
      {
        if ([v8 count])
        {
          id v10 = [v9 componentsJoinedByString:@", "];
          id v11 = +[NSString stringWithFormat:@"<%p> [%@]", v9, v10];
        }
        else
        {
          id v11 = +[NSString stringWithFormat:@"<%p> (empty)", v9];
        }
      }
      else
      {
        id v11 = @"<nil>";
      }

      *(_DWORD *)buf = 138412546;
      id v16 = v6;
      __int16 v17 = 2112;
      uint64_t v18 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to get unpairedVehicles to onboard. error: %@. vehicles: %@", buf, 0x16u);
    }
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1006E2D88;
    block[3] = &unk_1012E6690;
    objc_copyWeak(&v14, (id *)(a1 + 32));
    id v13 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v14);
  }
}

void sub_1006E2D88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained presentVehicleOnboardingWithVehicles:*(void *)(a1 + 32) completion:0];
}

void sub_1006E372C(id *a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = [a1[4] _labelMarkerForCustomFeatureAnnotation:a2];
    if (v3)
    {
      id v4 = v3;
      [a1[5] setIgnoreSelectionChanges:1];
      [a1[4] _selectLabelMarker:v4 animated:1];
      [a1[5] setIgnoreSelectionChanges:0];
      [a1[6] ensureMapSelectionVisible];
      id v3 = v4;
    }
  }
}

void sub_1006E3DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006E3E10(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && *(void *)(a1 + 40) == 2)
  {
    id v3 = WeakRetained;
    [WeakRetained[8] cleanSearch];
    id WeakRetained = v3;
  }
}

BOOL sub_1006E41D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (PlaceCardItemsAreEqual(v5, v6))
  {
    BOOL v7 = 1;
  }
  else
  {
    id v8 = [*(id *)(a1 + 32) currentViewController];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      BOOL v7 = 0;
    }
    else
    {
      id v10 = [v5 mapItem];
      id v11 = v10;
      if (v10)
      {
        id v12 = v10;
      }
      else
      {
        id v13 = [v5 searchResult];
        id v12 = [v13 mapItem];
      }
      id v14 = [v6 mapItem];
      __int16 v15 = v14;
      if (v14)
      {
        id v16 = v14;
      }
      else
      {
        __int16 v17 = [v6 searchResult];
        id v16 = [v17 mapItem];
      }
      if ([v12 _hasMUID] && objc_msgSend(v16, "_hasMUID"))
      {
        id v18 = [v12 _muid];
        BOOL v7 = v18 == [v16 _muid];
      }
      else
      {
        BOOL v7 = 0;
      }
    }
  }

  return v7;
}

void sub_1006E4344(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 48);
  id v13 = v3;
  id v5 = [v3 placeCardItem];
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t, void *, void))(v4 + 16))(v4, v5, *(void *)(a1 + 32));

  if (v4)
  {
    [v13 prepareForPresentationWithExistingPlaceCardItem];
  }
  else
  {
    id v6 = +[MUPlaceEnrichmentAPIController sharedPlaceEnrichmentAPIController];
    [v13 resetState];
    [v13 setIsAdditionalStop:[*(id *)(a1 + 40) shouldAddStopInRoutePlanning]];
    [v13 setExcludedContent:[*(id *)(a1 + 40) _excludedContentForPlaceCardItem:*(void *)(a1 + 32)]];
    BOOL v7 = [v6 mapItem];
    id v8 = [v7 _identifier];
    __int16 v9 = [*(id *)(a1 + 32) mapItem];
    id v10 = [v9 _identifier];
    unsigned __int8 v11 = [v8 isEqual:v10];

    if ((v11 & 1) == 0)
    {
      id v12 = +[MUPlaceEnrichmentAPIController sharedPlaceEnrichmentAPIController];
      [v12 resetConfiguration];
    }
    [v13 setPlaceCardItem:*(void *)(a1 + 32) withHistory:*(unsigned __int8 *)(a1 + 56)];
  }
}

void sub_1006E49FC(uint64_t a1, void *a2, uint64_t a3)
{
  id v13 = a2;
  if ([*(id *)(*(void *)(a1 + 32) + 424) isActive])
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      id v3 = [*(id *)(a1 + 48) lineItem];
      id v7 = [v3 muid];
      if (v7 == [*(id *)(a1 + 40) muid])
      {

LABEL_11:
        unsigned __int8 v11 = *(void **)(a1 + 48);
        if (v13)
        {
          [*(id *)(a1 + 48) setLineItem:v13 labelMarker:*(void *)(a1 + 56) loading:0 preferredLayout:*(void *)(a1 + 64)];
        }
        else
        {
          id v12 = [v11 lineItem];
          [v11 setLineItem:v12 labelMarker:*(void *)(a1 + 56) loading:0 preferredLayout:*(void *)(a1 + 64)];
        }
        goto LABEL_15;
      }
      if (!a3)
      {

        goto LABEL_15;
      }
    }
    else if (!a3)
    {
      goto LABEL_15;
    }
    id v8 = [*(id *)(a1 + 48) lineItem];
    id v9 = [v8 muid];
    id v10 = [*(id *)(a1 + 40) muid];

    if (v6) {
    if (v9 == v10)
    }
      goto LABEL_11;
  }
LABEL_15:
}

void sub_1006E5C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006E5CBC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained viewController:*(void *)(a1 + 32) presentCollectionPickerContaineeViewController:v5];
  }
}

void sub_1006E5D24(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained(WeakRetained + 57);
    [v5 _maps_topMostPresentViewController:v6 animated:1 completion:0];
  }
}

void sub_1006E6060(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained mapSelectionManager];
    [v3 selectMapItem:*(void *)(a1 + 32) animated:1];

    id WeakRetained = v4;
  }
}

void sub_1006E634C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006E6374(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (void *)*((void *)WeakRetained + 32);
    *((void *)WeakRetained + 32) = 0;
    id v6 = WeakRetained;

    id v3 = v6;
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);
      id v3 = v6;
    }
  }
}

uint64_t sub_1006E6844(uint64_t result, int a2)
{
  if (a2)
  {
    uint64_t result = *(void *)(result + 32);
    if (result) {
      return (*(uint64_t (**)(void))(result + 16))();
    }
  }
  return result;
}

uint64_t sub_1006E69FC(uint64_t result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    [*(id *)(result + 32) displayCollections];
    uint64_t result = *(void *)(v2 + 40);
    if (result)
    {
      id v3 = *(uint64_t (**)(void))(result + 16);
      return v3();
    }
  }
  return result;
}

void sub_1006E6FF8(id a1, OfflineMapsManagementContext *a2)
{
  if (a2) {
    [(OfflineMapsManagementContext *)a2 presentExpiredMapsManagement];
  }
}

uint64_t sub_1006E7204(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1006E73C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006E73DC(uint64_t a1, void *a2)
{
  id v16 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (!v16)
    {
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6) {
        goto LABEL_10;
      }
      uint64_t v5 = *(void (**)(void))(v6 + 16);
      goto LABEL_9;
    }
    if (*(unsigned char *)(a1 + 64)) {
      goto LABEL_4;
    }
    if (*(unsigned char *)(a1 + 65))
    {
      GEOMapRectForMapRegion();
      double v8 = v7;
      double v10 = v9;
      GEOMapRectForMapRegion();
      GEOMapRectIntersection();
      double v12 = v11;
      double v14 = v13;
      if ((GEOMapRectIsNull() & 1) != 0 || (GEOConfigGetDouble(), v12 * v14 / (v8 * v10) < v15)) {
LABEL_4:
      }
        [WeakRetained viewControllerShowOfflineMaps:*(void *)(a1 + 40)];
    }
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4)
    {
      uint64_t v5 = *(void (**)(void))(v4 + 16);
LABEL_9:
      v5();
    }
  }
LABEL_10:
}

uint64_t sub_1006E77C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, 0);
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_1006E8338(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = [v3 mapView];
  id v7 = [v5 _labelMarkerForCustomFeatureAnnotation:v4];

  if (v7)
  {
    uint64_t v6 = [*(id *)(a1 + 32) mapSelectionManager];
    [v6 selectLabelMarker:v7 animated:1];
  }
}

void sub_1006E88CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1006E8914(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "removeEntryBlock", buf, 2u);
  }

  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    (*(void (**)(void))(v7 + 16))();
  }
  double v8 = sub_100018584();
  double v9 = *(void **)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1006E8A50;
  void v10[3] = &unk_1012F5938;
  char v14 = a3;
  id v11 = v9;
  id v12 = *(id *)(a1 + 48);
  uint64_t v13 = a2;
  [v8 removeEntry:v11 behavior:a2 handler:v10];
}

void sub_1006E8A50(uint64_t a1, char a2)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1006E8B08;
  void v6[3] = &unk_1012F5910;
  char v10 = *(unsigned char *)(a1 + 56);
  id v7 = *(id *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  char v11 = a2;
  uint64_t v5 = *(void *)(a1 + 48);
  id v8 = v4;
  uint64_t v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1006E8B08(uint64_t a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "removeEntryBlock handler", v5, 2u);
  }

  if (*(unsigned char *)(a1 + 56) && [*(id *)(a1 + 32) type] == (id)7)
  {
    id v3 = +[ParkedCarManager sharedManager];
    [v3 updateParkedCar];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 57), *(void *)(a1 + 48));
  }
  return result;
}

uint64_t sub_1006E8BD8(uint64_t a1, uint64_t a2)
{
  if ((*(void *)(a1 + 64) & a2) != 0)
  {
    id v5 = *(id *)(a1 + 32);
    uint64_t v6 = v5;
    switch(a2)
    {
      case 0:
        id v7 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Warning: MSg Removal String for RemovalBehaviorNone was requested!", buf, 2u);
        }

        uint64_t v2 = 0;
        goto LABEL_20;
      case 1:
        if ([v5 containsKey:@"MapsSuggestionsRemovalBehaviorStringForSnooze"])
        {
          CFStringRef v8 = @"MapsSuggestionsRemovalBehaviorStringForSnooze";
          goto LABEL_14;
        }
        uint64_t v9 = +[NSBundle mainBundle];
        char v10 = v9;
        CFStringRef v11 = @"Snooze Entry [MapsSuggestions Delete Action Sheet]";
        goto LABEL_19;
      case 2:
        if ([v5 containsKey:@"MapsSuggestionsRemovalBehaviorStringForHide"])
        {
          CFStringRef v8 = @"MapsSuggestionsRemovalBehaviorStringForHide";
          goto LABEL_14;
        }
        uint64_t v9 = +[NSBundle mainBundle];
        char v10 = v9;
        CFStringRef v11 = @"Hide Entry [MapsSuggestions Delete Action Sheet]";
        goto LABEL_19;
      case 4:
        if ([v5 containsKey:@"MapsSuggestionsRemovalBehaviorStringForForget"])
        {
          CFStringRef v8 = @"MapsSuggestionsRemovalBehaviorStringForForget";
          goto LABEL_14;
        }
        uint64_t v9 = +[NSBundle mainBundle];
        char v10 = v9;
        CFStringRef v11 = @"Forget Entry [MapsSuggestions Delete Action Sheet]";
        goto LABEL_19;
      case 8:
        if ([v5 containsKey:@"MapsSuggestionsRemovalBehaviorStringForDelete"])
        {
          CFStringRef v8 = @"MapsSuggestionsRemovalBehaviorStringForDelete";
LABEL_14:
          uint64_t v2 = [v6 stringForKey:v8];
        }
        else
        {
          uint64_t v9 = +[NSBundle mainBundle];
          char v10 = v9;
          CFStringRef v11 = @"Delete Entry [MapsSuggestions Delete Action Sheet]";
LABEL_19:
          uint64_t v2 = [v9 localizedStringForKey:v11 value:@"localized string not found" table:0];
        }
LABEL_20:

        uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8);
        uint64_t v13 = *(void **)(v12 + 40);
        *(void *)(v12 + 40) = v2;

        char v14 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
          *(_DWORD *)buf = 138412290;
          uint64_t v27 = v15;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Removal Action String: %@", buf, 0xCu);
        }

        uint64_t v16 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        if (v16)
        {
          id v20 = _NSConcreteStackBlock;
          uint64_t v21 = 3221225472;
          uint64_t v22 = sub_1006E8F50;
          __int16 v23 = &unk_1012F5988;
          __int16 v17 = *(void **)(a1 + 40);
          id v24 = *(id *)(a1 + 48);
          uint64_t v25 = a2;
          id v18 = +[UIAlertAction actionWithTitle:v16 style:2 handler:&v20];
          [v17 addAction:v18, v20, v21, v22, v23];
        }
        break;
      default:
        goto LABEL_20;
    }
  }
  return 1;
}

uint64_t sub_1006E8F50(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40), 1);
}

uint64_t sub_1006E8F68(uint64_t a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "User pressed Cancel on Delete Action Sheet", v4, 2u);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

id sub_1006E95CC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) resetState];
}

void sub_1006E9D28(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  uint64_t v6 = v5;
  if (v11)
  {
    id v7 = +[SearchFieldItem searchFieldItemWithObject:](SearchFieldItem, "searchFieldItemWithObject:");
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    [*(id *)(a1 + 32) viewController:0 doSearchItem:v7 withUserInfo:*(void *)(a1 + 40)];

    goto LABEL_7;
  }
  if (v5)
  {
    CFStringRef v8 = [SearchResult alloc];
    uint64_t v9 = [v6 mapItem];
    char v10 = [(SearchResult *)v8 initWithMapItem:v9];

    id v7 = +[SearchFieldItem searchFieldItemWithObject:v10];

    if (v7) {
      goto LABEL_6;
    }
  }
LABEL_7:
}

id *sub_1006E9E1C(id *result, uint64_t a2)
{
  if (a2) {
    return (id *)[result[4] viewController:result[5] selectParkedCar:a2 andPerformAction:0 selectPOIOnMap:1];
  }
  return result;
}

uint64_t sub_1006E9F18(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_1006EA27C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) makeAFieldFirstResponderIfNeeded];
}

void sub_1006EA540(uint64_t a1, void *a2)
{
  if (a2)
  {
    CFStringRef v5 = @"DirectionsSessionInitiatorKey";
    uint64_t v6 = &off_1013A8320;
    id v3 = a2;
    id v4 = +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];
    [*(id *)(a1 + 32) viewController:*(void *)(a1 + 40) doDirectionItem:v3 allowToPromptEditing:1 withUserInfo:v4];
  }
}

void sub_1006EA6C8(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    id v4 = +[DirectionsHistoryRecordingHelper destinationGEOMapItemToRecordWithDirectionItem:v3];
    if (v4) {
      +[HistoryEntryRecentsItem saveGeoMapItem:v4];
    }
    CFStringRef v6 = @"DirectionsSessionInitiatorKey";
    id v7 = &off_1013A8320;
    CFStringRef v5 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
    [*(id *)(*(void *)(a1 + 32) + 64) setMaintainSearchStateWhenDisappearing:1];
    [*(id *)(a1 + 32) viewController:*(void *)(a1 + 40) doDirectionItem:v3 allowToPromptEditing:1 withUserInfo:v5];
  }
}

void sub_1006EB49C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1006EB4E0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if (a3)
  {
    CFStringRef v6 = *(void **)(a1 + 32);
    uint64_t v7 = a3 - 1;
    id v8 = a2;
    id v9 = [v6 objectAtIndexedSubscript:v7];
    LOBYTE(v6) = [v8 isEquivalentAsWaypointToSearchFieldItem:];

    if ((v6 & 1) == 0)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
      *a4 = 1;
    }
  }
}

void sub_1006EB8E4(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) mutableCopy];
  [v6 setObject:&__kCFBooleanTrue forKey:@"AllowApproximateCurrentLocation"];
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = [v6 copy];
  [v2 viewController:v3 doDirectionItem:v4 allowToPromptEditing:1 withUserInfo:v5];
}

void sub_1006EB978(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) mutableCopy];
  [v6 setObject:&__kCFBooleanFalse forKey:@"AllowApproximateCurrentLocation"];
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = [v6 copy];
  [v2 viewController:v3 doDirectionItem:v4 allowToPromptEditing:1 withUserInfo:v5];
}

void sub_1006EBDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1006EBDC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 40) items];
    id v5 = [v4 mutableCopy];

    switch(*(void *)(a1 + 64))
    {
      case 0:
        goto LABEL_11;
      case 1:
        [v5 insertObject:v3 atIndex:0];
        goto LABEL_10;
      case 2:
      case 3:
        id v6 = [*(id *)(a1 + 40) items];
        id v11 = _NSConcreteStackBlock;
        uint64_t v12 = 3221225472;
        uint64_t v13 = sub_1006EBF98;
        char v14 = &unk_1012F5A50;
        id v15 = v5;
        id v16 = v3;
        [v6 enumerateObjectsUsingBlock:&v11];

        goto LABEL_10;
      case 4:
        if ([v5 count] && (unint64_t v7 = *(void *)(a1 + 72), v7 < (unint64_t)objc_msgSend(v5, "count"))) {
          [v5 replaceObjectAtIndex:*(void *)(a1 + 72) withObject:v3];
        }
        else {
          [v5 addObject:v3];
        }
        goto LABEL_10;
      default:
LABEL_10:
        uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        id v9 = *(void **)(a1 + 32);
        id v10 = [*(id *)(a1 + 40) copyWithItems:v5, v11, v12, v13, v14];
        [v9 viewController:v8 doDirectionItem:v10 allowToPromptEditing:1 withUserInfo:*(void *)(a1 + 48)];

LABEL_11:
        break;
    }
  }
  else
  {
    [*(id *)(a1 + 32) viewControllerClosed:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) animated:1];
  }
}

void sub_1006EBF98(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = [a2 searchResult];
  unsigned int v6 = [v5 isDynamicCurrentLocation];

  if (v6)
  {
    unint64_t v7 = *(void **)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    [v7 replaceObjectAtIndex:a3 withObject:v8];
  }
}

id sub_1006EC00C(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) selectFieldIndex:*(void *)(a1 + 40)];
}

void sub_1006EC22C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1006EC250(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  uint64_t v8 = [v5 userProvidedName];
  id v9 = [v8 length];
  id v10 = *(void **)(a1 + 32);
  if (v9) {
    [v10 userProvidedName];
  }
  else {
  id v13 = [v10 name];
  }

  id v11 = +[UIApplication sharedMapsDelegate];
  uint64_t v12 = [*(id *)(a1 + 32) storageID];
  [v11 interruptConvertToNavigableSavedRouteID:v12 routeName:v13 error:v7 directionsError:v6];
}

void sub_1006EC334(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v5 = [WeakRetained appCoordinator];
  [v5 enterRouteCreationWithRoute:v4 originMapItem:0 destinationMapItem:0 userInfo:*(void *)(a1 + 32) completion:0];
}

void sub_1006EC898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1006EC8BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 56) + 8);
  if (!*(unsigned char *)(v1 + 24))
  {
    *(unsigned char *)(v1 + 24) = 1;
    id v3 = [*(id *)(a1 + 32) lastLocation];
    if (v3)
    {
      id v4 = +[SearchResult currentLocationSearchResult];
      uint64_t v5 = *(void *)(a1 + 40);
      v18[0] = v4;
      v18[1] = v5;
      id v6 = +[NSArray arrayWithObjects:v18 count:2];
    }
    else
    {
      uint64_t v17 = *(void *)(a1 + 40);
      id v6 = +[NSArray arrayWithObjects:&v17 count:1];
    }

    id v7 = [*(id *)(a1 + 48) mapView];
    [v7 mapRectContainingSearchResults:v6];
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;

    id v16 = [*(id *)(a1 + 48) mapView];
    [v16 _setVisibleMapRect:0 duration:v9 completionHandler:v11, v13, v15, 2.5];
  }
}

uint64_t sub_1006ECA1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1006ECA84(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissCustomPresentationContainee];
}

void sub_1006ED240(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerViewController];
  [v2 _maps_topMostPresentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

void sub_1006ED724(id a1, NSString *a2)
{
  id v2 = a2;
  id v3 = +[UIApplication sharedApplication];
  [v3 callPhoneNumber:v2 completion:0];
}

void sub_1006ED78C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 value];
  uint64_t v5 = [v4 stringValue];

  id v6 = [v3 label];

  id v7 = +[CNLabeledValue localizedStringForLabel:v6];

  double v8 = *(void **)(a1 + 32);
  double v9 = +[NSBundle mainBundle];
  double v10 = [v9 localizedStringForKey:@"%1$@: %2$@ (Quick action menu, select phone number)", @"localized string not found", 0 value table];
  double v11 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v10, v7, v5);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  id v15[2] = sub_1006ED92C;
  v15[3] = &unk_1012E8D68;
  id v12 = *(id *)(a1 + 40);
  id v16 = v5;
  id v17 = v12;
  id v13 = v5;
  double v14 = +[UIAlertAction actionWithTitle:v11 style:0 handler:v15];
  [v8 addAction:v14];
}

uint64_t sub_1006ED92C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id sub_1006EDC80(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) viewController:*(void *)(a1 + 40) openURL:a2];
}

void sub_1006EDC90(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 value];
  uint64_t v5 = [v3 label];

  id v6 = +[CNLabeledValue localizedStringForLabel:v5];

  id v7 = *(void **)(a1 + 32);
  double v8 = +[NSBundle mainBundle];
  double v9 = [v8 localizedStringForKey:@"%1$@: %2$@ (Quick action menu, select URL)", @"localized string not found", 0 value table];
  double v10 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v9, v6, v4);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1006EDE24;
  void v13[3] = &unk_1012F45C8;
  id v14 = v4;
  id v15 = *(id *)(a1 + 40);
  id v11 = v4;
  id v12 = +[UIAlertAction actionWithTitle:v10 style:0 handler:v13];
  [v7 addAction:v12];
}

void sub_1006EDE24(uint64_t a1)
{
  id v2 = +[NSURL URLWithString:*(void *)(a1 + 32)];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1006EE3D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006EE400(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = sub_1005768D4();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    id v5 = WeakRetained;
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      double v8 = [v5 performSelector:"accessibilityIdentifier"];
      double v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        double v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    double v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

    *(_DWORD *)buf = 138543618;
    __int16 v30 = v10;
    __int16 v31 = 1024;
    int v32 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] User exited VLF Crowdsourcing permission card with answer: %d", buf, 0x12u);

LABEL_9:
    id v11 = [WeakRetained containerViewController];
    id v12 = [v11 chromeViewController];
    id v13 = [v12 userLocationView];
    id v14 = [v13 vlfMode];

    id v15 = sub_1005768D4();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_INFO);
    if (v14)
    {
      if (!v16)
      {
LABEL_17:

        [WeakRetained showVLF];
        goto LABEL_26;
      }
      id v17 = WeakRetained;
      id v18 = (objc_class *)objc_opt_class();
      char v19 = NSStringFromClass(v18);
      if (objc_opt_respondsToSelector())
      {
        id v20 = [v17 performSelector:"accessibilityIdentifier"];
        uint64_t v21 = v20;
        if (v20 && ![v20 isEqualToString:v19])
        {
          uint64_t v22 = +[NSString stringWithFormat:@"%@<%p, %@>", v19, v17, v21];

          goto LABEL_16;
        }
      }
      uint64_t v22 = +[NSString stringWithFormat:@"%@<%p>", v19, v17];
LABEL_16:

      *(_DWORD *)buf = 138543362;
      __int16 v30 = v22;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "[%{public}@] VLF is still eligible to be shown; showing now",
        buf,
        0xCu);

      goto LABEL_17;
    }
    if (!v16)
    {
LABEL_25:

      goto LABEL_26;
    }
    id v23 = WeakRetained;
    id v24 = (objc_class *)objc_opt_class();
    uint64_t v25 = NSStringFromClass(v24);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v26 = [v23 performSelector:"accessibilityIdentifier"];
      uint64_t v27 = v26;
      if (v26 && ![v26 isEqualToString:v25])
      {
        __int16 v28 = +[NSString stringWithFormat:@"%@<%p, %@>", v25, v23, v27];

        goto LABEL_24;
      }
    }
    __int16 v28 = +[NSString stringWithFormat:@"%@<%p>", v25, v23];
LABEL_24:

    *(_DWORD *)buf = 138543362;
    __int16 v30 = v28;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "[%{public}@] VLF is no longer eligible to be shown", buf, 0xCu);

    goto LABEL_25;
  }
LABEL_26:
}

void sub_1006EF744(uint64_t a1)
{
  [*(id *)(a1 + 32) viewController:0 selectSearchResult:*(void *)(a1 + 40) addToHistory:1 source:6 saveSelectionState:0];
  id v2 = [*(id *)(a1 + 32) mapSelectionManager];
  [v2 selectSearchResult:*(void *)(a1 + 40) animated:1];
}

void sub_1006EF900(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  unsigned int v16 = [*(id *)(a1 + 32) _isBuildingMultipointRoute];
  if (([v11 conformsToProtocol:&OBJC_PROTOCOL___VenueRoutePlanningCardItem] & 1) != 0
    || !v16)
  {
    [*(id *)(a1 + 32) _cleanupRoutePlanningIfNeededAnimated:1];
    id v17 = sub_1005768D4();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "closeVenueViewController, deleting selection state", buf, 2u);
    }

    uint64_t v18 = *(void *)(a1 + 32);
    char v19 = *(void **)(v18 + 8);
    *(void *)(v18 + _Block_object_dispose(&STACK[0x238], 8) = 0;
  }
  unsigned int v37 = v16;
  if (v15) {
    unsigned int v20 = [v15 singleResultMode] ^ 1;
  }
  else {
    unsigned int v20 = 0;
  }
  if (([v11 conformsToProtocol:&OBJC_PROTOCOL___VenueCategoryCardItem] & 1) != 0 || !v20) {
    [*(id *)(a1 + 32) clearSearch];
  }
  uint64_t v21 = [*(id *)(a1 + 32) containerViewController];
  unsigned int v22 = 1;
  [v21 popLastViewControllerFromViewController:*(void *)(a1 + 40) animated:1 useDefaultContaineeLayout:0];

  if (!v12) {
    unsigned int v22 = [v11 conformsToProtocol:&OBJC_PROTOCOL___VenuePlaceCardItem] ^ 1 | v20;
  }
  id v23 = +[VenueCardCoordinator searchResultForPlaceCardItem:v12];
  if ([v15 shouldInjectSearchResults])
  {
    if (v12) {
      int v24 = 1;
    }
    else {
      int v24 = v22;
    }
    if (v24 == 1)
    {
      [*(id *)(a1 + 32) searchPinsManager];
      uint64_t v25 = v36 = v13;
      [v25 allSearchResults];
      id v35 = v11;
      v27 = id v26 = v14;
      __int16 v28 = [v15 results];
      unsigned __int8 v29 = [v27 isEqualToArray:v28];

      id v14 = v26;
      id v11 = v35;

      id v13 = v36;
      if ((v29 & 1) == 0) {
        [*(id *)(a1 + 32) restoreSearchForItem:v14 withResults:v15];
      }
    }
  }
  else if (v12 && v23)
  {
    __int16 v30 = [*(id *)(a1 + 32) searchPinsManager];
    uint64_t v39 = v23;
    __int16 v31 = +[NSArray arrayWithObjects:&v39 count:1];
    [v30 setSearchPins:v31 selectedPin:0 animated:1];
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v32 = [*(id *)(a1 + 32) searchPinsManager];
    [v32 showLinkedPlacesAndPolygonForPlaceCardItem:v12];
  }
  if (v13) {
    int v33 = v20;
  }
  else {
    int v33 = 1;
  }
  if (((v33 | v37) & 1) == 0)
  {
    __int16 v34 = [*(id *)(a1 + 32) mapSelectionManager];
    [v34 restoreSelectionState:v13 animated:1];
  }
}

void sub_1006F0410(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mapCameraController];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  id v4[2] = sub_1006F04C8;
  void v4[3] = &unk_1012E6160;
  uint64_t v3 = *(void *)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 48);
  [v2 frameMapItem:v3 animated:1 completion:v4];
}

id sub_1006F04C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentPlaceCardForItem:*(void *)(a1 + 40) addToHistory:0 source:0 saveSelectionState:1];
}

id sub_1006F0A88(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) resetState];
}

void sub_1006F13BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006F1404(uint64_t a1, uint64_t a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (!a2) {
      goto LABEL_6;
    }
    unint64_t v5 = *(void *)(a1 + 48);
    if (v5 > 7) {
      goto LABEL_6;
    }
    if (((1 << v5) & 0x67) != 0)
    {
      if (a2 == 3)
      {
LABEL_6:
        id v6 = sub_10057624C();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        {
          if ((unint64_t)(a2 - 1) > 4) {
            CFStringRef v7 = @"Undefined";
          }
          else {
            CFStringRef v7 = *(&off_1012F5E68 + a2 - 1);
          }
          int v12 = 138543362;
          CFStringRef v13 = v7;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "default transport type %{public}@ isn't compatible", (uint8_t *)&v12, 0xCu);
        }

        uint64_t v8 = *(void *)(a1 + 48);
        if (v8 == 3) {
          uint64_t v9 = 3;
        }
        else {
          uint64_t v9 = 1;
        }
        if (v8 == -1) {
          a2 = 0;
        }
        else {
          a2 = v9;
        }
LABEL_29:
        [WeakRetained[51] setTransportType:a2];
        [*(id *)(a1 + 32) updateTransportType:a2];
        goto LABEL_30;
      }
    }
    else if (v5 == 3)
    {
      if (a2 != 3) {
        goto LABEL_6;
      }
    }
    else if (v5 != 7 || a2 != 1 && a2 != 4)
    {
      goto LABEL_6;
    }
    double v10 = sub_10057624C();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      if ((unint64_t)(a2 - 2) > 3) {
        CFStringRef v11 = @"Drive";
      }
      else {
        CFStringRef v11 = *(&off_1012F5E48 + a2 - 2);
      }
      int v12 = 138543362;
      CFStringRef v13 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "default transport type is %{public}@", (uint8_t *)&v12, 0xCu);
    }

    goto LABEL_29;
  }
LABEL_30:
}

void sub_1006F2134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006F2170(uint64_t a1, void *a2)
{
  id v9 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained(WeakRetained + 52);
    id v6 = [v9 userInfo];
    CFStringRef v7 = [v6 mapItem];
    [v5 enterFlyoverForMapItem:v7];

    id v8 = objc_loadWeakRetained(v4 + 57);
    [v8 updateTopBannerViewWithTopBannerItems:0];
  }
}

void sub_1006F36F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerViewController];
  uint64_t v1 = [v2 topMostPresentedViewController];
  [v1 dismissViewControllerAnimated:0 completion:0];
}

id sub_1006F41DC(uint64_t a1)
{
  [*(id *)(a1 + 32) setPauseSelectionUpdates:0];
  id v2 = *(void **)(a1 + 32);

  return _[v2 makeAFieldFirstResponderIfNeeded];
}

id sub_1006F421C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) closeRoutePlanningViewController:a2 withSender:a3];
}

void sub_1006F4670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006F469C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    sub_100CDBF90(*(void **)(a1 + 32));
    id WeakRetained = v3;
  }
}

void sub_1006F4854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1006F4874(uint64_t a1, int a2, void *a3)
{
  id v13 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (a2)
    {
      id v6 = *(void **)(a1 + 32);
      if (v6) {
        [v6 updatePlaceNote:v13];
      }
      if (WeakRetained[47]) {
        (*(void (**)(void))(*(void *)(*(void *)(a1 + 40) + 376) + 16))();
      }
      uint64_t v7 = *(void *)(a1 + 40);
      id v8 = *(void **)(v7 + 376);
      *(void *)(v7 + 376) = 0;

      id v9 = [*(id *)(a1 + 40) containerViewController];
      [v9 popLastViewControllerAnimated:1];

      +[LibraryAnalytics captureAddOrEditNoteActionForPlaceMUID:isNewNote:](_TtC4Maps16LibraryAnalytics, "captureAddOrEditNoteActionForPlaceMUID:isNewNote:", *(void *)(a1 + 64), [*(id *)(a1 + 48) length] == 0);
    }
    else
    {
      uint64_t v10 = *(void *)(a1 + 40);
      CFStringRef v11 = *(void **)(v10 + 376);
      *(void *)(v10 + 376) = 0;

      int v12 = [*(id *)(a1 + 40) containerViewController];
      [v12 popLastViewControllerAnimated:1];
    }
  }
}

uint64_t sub_1006F56A0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1006F6880(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) originalPresenterViewController];
  [v2 viewController:v3 removeDroppedPin:*(void *)(a1 + 48)];
}

void sub_1006F7A08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1006F7A3C(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = sub_1005768D4();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    id v5 = WeakRetained;
    id v6 = (objc_class *)objc_opt_class();
    uint64_t v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        uint64_t v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    uint64_t v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

    *(_DWORD *)buf = 138543618;
    uint64_t v27 = v10;
    __int16 v28 = 1024;
    int v29 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] User exited VLF Crowdsourcing permission card with answer: %d", buf, 0x12u);

LABEL_9:
    unsigned int v11 = [WeakRetained canEnterPedestrianAR];
    int v12 = sub_1005768D4();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_INFO);
    if (v11)
    {
      if (!v13)
      {
LABEL_17:

        [WeakRetained enterPedestrianAR];
        goto LABEL_26;
      }
      id v14 = WeakRetained;
      id v15 = (objc_class *)objc_opt_class();
      unsigned int v16 = NSStringFromClass(v15);
      if (objc_opt_respondsToSelector())
      {
        id v17 = [v14 performSelector:"accessibilityIdentifier"];
        uint64_t v18 = v17;
        if (v17 && ![v17 isEqualToString:v16])
        {
          char v19 = +[NSString stringWithFormat:@"%@<%p, %@>", v16, v14, v18];

          goto LABEL_16;
        }
      }
      char v19 = +[NSString stringWithFormat:@"%@<%p>", v16, v14];
LABEL_16:

      *(_DWORD *)buf = 138543362;
      uint64_t v27 = v19;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "[%{public}@] Still eligible to enter Pedestrian AR; will enter now",
        buf,
        0xCu);

      goto LABEL_17;
    }
    if (!v13)
    {
LABEL_25:

      goto LABEL_26;
    }
    id v20 = WeakRetained;
    uint64_t v21 = (objc_class *)objc_opt_class();
    unsigned int v22 = NSStringFromClass(v21);
    if (objc_opt_respondsToSelector())
    {
      id v23 = [v20 performSelector:"accessibilityIdentifier"];
      int v24 = v23;
      if (v23 && ![v23 isEqualToString:v22])
      {
        uint64_t v25 = +[NSString stringWithFormat:@"%@<%p, %@>", v22, v20, v24];

        goto LABEL_24;
      }
    }
    uint64_t v25 = +[NSString stringWithFormat:@"%@<%p>", v22, v20];
LABEL_24:

    *(_DWORD *)buf = 138543362;
    uint64_t v27 = v25;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "[%{public}@] No longer eligible to enter Pedestrian AR", buf, 0xCu);

    goto LABEL_25;
  }
LABEL_26:
}

void sub_1006F8C14(id *a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, a1[4]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1006F8D28;
  void v7[3] = &unk_1012F5CE8;
  objc_copyWeak(v13, &location);
  id v8 = a1[5];
  id v9 = v3;
  id v10 = a1[6];
  id v4 = a1[7];
  v13[1] = a1[8];
  id v5 = a1[4];
  id v11 = v4;
  id v12 = v5;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);

  objc_destroyWeak(v13);
  objc_destroyWeak(&location);
}

void sub_1006F8D28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained _filteredFeaturesFromTransitSystems:*(void *)(a1 + 32) allFeatures:*(void *)(a1 + 40)];
    id v5 = objc_alloc_init((Class)PKPaymentSetupRequest);
    [v5 setConfiguration:*(void *)(a1 + 48)];
    [v5 setPaymentSetupFeatures:v4];
    id v6 = [objc_alloc((Class)PKPaymentSetupViewController) initWithPaymentSetupRequest:v5];
    [v6 setPresentationStyle:2];
    [v6 setDelegate:*(void *)(a1 + 56)];
    uint64_t v7 = sub_100021338();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = objc_opt_class();
      id v9 = *(const char **)(a1 + 80);
      id v10 = v8;
      id v11 = NSStringFromSelector(v9);
      int v13 = 138412546;
      id v14 = v8;
      __int16 v15 = 2112;
      unsigned int v16 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%@ %@: showing Wallet DCI View Controller", (uint8_t *)&v13, 0x16u);
    }
    id v12 = [*(id *)(a1 + 64) containerViewController];
    [v12 _maps_topMostPresentViewController:v6 animated:1 completion:0];
  }
}

void sub_1006F9228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v19 - 56));
  _Unwind_Resume(a1);
}

void sub_1006F9260(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  if (WeakRetained)
  {
    id v8 = objc_loadWeakRetained(a1 + 6);
    if (v8)
    {
      if (!v5)
      {
        id v9 = sub_10057683C();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          CFStringRef v36 = v6;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Error getting single location update: %@", buf, 0xCu);
        }

        id v10 = +[MKLocationManager sharedLocationManager];
        id v5 = [v10 lastLocation];
      }
      id v27 = [objc_alloc((Class)GEORouteBuilder_PersistentData) initWithPersistentData:a1[4]];
      id v11 = [v27 buildRoute];
      id v12 = [v11 userProvidedName];
      if ([v12 length]) {
        [v11 userProvidedName];
      }
      else {
      id v26 = [v11 name];
      }

      uint64_t v13 = (uint64_t)[v11 suggestedNavigationModeForLocation:v5 context:1];
      if (!v13)
      {
        id v14 = sub_10057683C();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138543362;
          CFStringRef v36 = @"None";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Coercing navigation mode to route planning from %{public}@", buf, 0xCu);
        }

        uint64_t v13 = 4;
      }
      if ([a1[4] mapItemMuid])
      {
        __int16 v15 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", [a1[4] mapItemMuid]);
      }
      else
      {
        __int16 v15 = 0;
      }
      __int16 v28 = v6;
      if (v13 == 4)
      {
        +[GEOAPPortal captureUserAction:6003 target:137 value:v15];
        unsigned int v16 = objc_opt_new();
        [v16 setRouteData:a1[4]];
        id v17 = objc_opt_new();
        uint64_t v18 = +[SearchResult currentLocationSearchResult];
        [v17 setSearchResult:v18];

        uint64_t v19 = objc_opt_new();
        [v19 setSearchResult:v16];
        id v20 = [DirectionItem alloc];
        v34[0] = v17;
        v34[1] = v19;
        uint64_t v21 = +[NSArray arrayWithObjects:v34 count:2];
        unsigned int v22 = [(DirectionItem *)v20 initWithItems:v21 transportType:0];

        CFStringRef v32 = @"DirectionsSessionInitiatorKey";
        int v33 = &off_1013A8320;
        id v23 = +[NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
        [WeakRetained viewController:v8 doDirectionItem:v22 withUserInfo:v23];

        int v24 = v26;
      }
      else
      {
        +[GEOAPPortal captureUserAction:3001 target:137 value:v15];
        uint64_t v25 = [v8 _maps_platformController];
        v29[0] = _NSConcreteStackBlock;
        v29[1] = 3221225472;
        v29[2] = sub_1006F9688;
        v29[3] = &unk_1012E9900;
        id v30 = v11;
        int v24 = v26;
        id v31 = v26;
        [v25 pushNavigationWithRoute:v30 navigationMode:v13 shouldCheckNavSafetyAlert:1 completion:v29];

        unsigned int v16 = v30;
      }

      id v6 = v28;
    }
  }
}

void sub_1006F9688(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 | a3)
  {
    id v5 = (id)a3;
    id v6 = (id)a2;
    id v8 = +[UIApplication sharedMapsDelegate];
    uint64_t v7 = [*(id *)(a1 + 32) storageID];
    [v8 interruptConvertToNavigableSavedRouteID:v7 routeName:*(void *)(a1 + 40) error:v6 directionsError:v5];
  }
}

void sub_1006F9A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_1006F9AAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 48);
    id v9 = WeakRetained;
    id v6 = [WeakRetained iosChromeViewController];
    uint64_t v7 = [v6 mapView];
    id v8 = [v7 _mapLayer];
    [v8 setApplicationSubState:v5];

    id WeakRetained = v9;
  }
}

void sub_1006FAF1C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) runningGradientView];
  id v3 = [v2 layer];
  [v3 setOpacity:0.0];

  id v6 = [*(id *)(a1 + 32) localizingGradientView];
  id v4 = [v6 layer];
  LODWORD(v5) = 1.0;
  [v4 setOpacity:v5];
}

void sub_1006FAFB4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) runningGradientView];
  id v3 = [v2 layer];
  LODWORD(v4) = 1.0;
  [v3 setOpacity:v4];

  id v6 = [*(id *)(a1 + 32) localizingGradientView];
  double v5 = [v6 layer];
  [v5 setOpacity:0.0];
}

void sub_1006FB608(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARGradientOverlay");
  uint64_t v2 = (void *)qword_10160F608;
  qword_10160F608 = (uint64_t)v1;
}

void sub_1006FC920(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateState];
}

UIFont *__cdecl sub_1006FD678(id a1)
{
  return +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
}

UIFont *__cdecl sub_1006FD690(id a1)
{
  return +[UIFont preferredFontForTextStyle:UIFontTextStyleSubheadline];
}

UIFont *__cdecl sub_1006FD6A8(id a1)
{
  return (UIFont *)+[UIFont _preferredFontForTextStyle:UIFontTextStyleCaption2 maximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
}

UIFont *__cdecl sub_1006FD8A8(id a1)
{
  return (UIFont *)+[UIFont _preferredFontForTextStyle:UIFontTextStyleCaption2 maximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
}

id sub_1006FDDE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateMinimumMaximumHeights];
}

void sub_1006FE9D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1006FE9F4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, 1);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained shareRowAtIndexPath:*(void *)(a1 + 32) completion:&stru_1012F5F50];
}

void sub_1006FF148(uint64_t a1, void *a2)
{
  id v14 = a2;
  id v3 = [*(id *)(a1 + 32) objectAtIndexPath:];
  double v4 = v3;
  if (v3)
  {
    double v5 = [v3 mapItem];
    id v6 = [v5 _geoMapItem];
    unsigned int v7 = [v6 _hasEVCharger];

    if (v7)
    {
      id v8 = [*(id *)(a1 + 32) placeSummaryTemplateForSearchResult:v4 indexPath:v14];
      if (v8)
      {
        id v9 = [v4 mapItem];
        id v10 = [v9 _identifier];

        if (v10)
        {
          id v11 = *(void **)(*(void *)(a1 + 32) + 264);
          id v12 = [v4 mapItem];
          uint64_t v13 = [v12 _identifier];
          [v11 setObject:v8 forKeyedSubscript:v13];
        }
      }
    }
  }
}

void sub_100701268(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [*(id *)(a1 + 32) curatedGuideViewModels];
  double v4 = [v3 objectForKey:v13];

  double v5 = v13;
  if (!v4)
  {
    id v6 = [*(id *)(a1 + 32) objectAtIndexPath:v13];
    unsigned int v7 = [v6 placeCollection];

    if (v7)
    {
      id v8 = [_TtC4Maps21CuratedGuideViewModel alloc];
      id v9 = [v6 placeCollection];
      if ([*(id *)(a1 + 32) guideSummaryUsesRichLayout]) {
        uint64_t v10 = 1;
      }
      else {
        uint64_t v10 = (uint64_t)[*(id *)(a1 + 32) placeSummaryUsesRichLayout];
      }
      id v11 = [(CuratedGuideViewModel *)v8 initWithPlaceCollection:v9 useRichLayout:v10];

      [*(id *)(a1 + 32) addMetricsForGuideSummaryViewModel:v11 atIndexPath:v13];
      id v12 = [*(id *)(a1 + 32) curatedGuideViewModels];
      [v12 setObject:v11 forKey:v13];
    }
    double v5 = v13;
  }
}

void sub_100701D88(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = [*(id *)(a1 + 32) placeSummaryTemplateViewModels];
  double v4 = [v3 objectForKey:v12];

  double v5 = v12;
  if (!v4)
  {
    id v6 = [*(id *)(a1 + 32) objectAtIndexPath:v12];
    [v6 setRepresentsIntermediateStop:[*(id *)(a1 + 32) isPresentingAddStopResultsFromWaypointEditor]];
    if ([*(id *)(a1 + 32) usePlaceSummaryForSearchResult:v6])
    {
      unsigned int v7 = [*(id *)(a1 + 32) placeSummaryMetadata];
      id v8 = [*(id *)(a1 + 32) currentLocation];
      if ([*(id *)(a1 + 32) isShowingClusterResults])
      {
        id v9 = [*(id *)(a1 + 32) approxLocation];

        if (v9)
        {
          if (!v8)
          {
            id v8 = [*(id *)(a1 + 32) approxLocation];
          }
        }
      }
      uint64_t v10 = +[PlaceSummaryViewModelTemplateFactory viewModelWithSearchResult:metadata:currentLocation:searchAlongRoute:openAt:](_TtC4Maps36PlaceSummaryViewModelTemplateFactory, "viewModelWithSearchResult:metadata:currentLocation:searchAlongRoute:openAt:", v6, v7, v8, [*(id *)(a1 + 32) isPresentingSearchAlongTheRouteResults], *(void *)(*(void *)(a1 + 32) + 120));
      [*(id *)(a1 + 32) addMetricsForPlaceSummaryTemplate:v10 indexPath:v12];
      if (v10)
      {
        id v11 = [*(id *)(a1 + 32) placeSummaryTemplateViewModels];
        [v11 setObject:v10 forKey:v12];
      }
    }

    double v5 = v12;
  }
}

void sub_100702014(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) delegate];
  [v1 didCachePlaceSummaryTemplates];
}

void sub_100702254(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  double v5 = [v3 objectAtIndexPath:v4];
  id v6 = [*(id *)(a1 + 32) placeSummaryTemplateForSearchResult:v5 indexPath:v4];

  if (v6)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100702348;
    block[3] = &unk_1012E66E0;
    void block[4] = *(void *)(a1 + 32);
    id v8 = v5;
    id v9 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100702348(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) currentLocation];
  uint64_t v2 = [*(id *)(a1 + 40) mapItem];
  +[PlaceSummaryViewModelTemplateFactory updateDistanceViewModelWithCurrentLocation:mapItem:template:searchAlongTheRoute:](_TtC4Maps36PlaceSummaryViewModelTemplateFactory, "updateDistanceViewModelWithCurrentLocation:mapItem:template:searchAlongTheRoute:", v3, v2, *(void *)(a1 + 48), [*(id *)(a1 + 32) isPresentingSearchAlongTheRouteResults]);
}

void sub_10070274C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100702774(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained delegate];
  [v1 didTapOnAddAPlace];
}

void sub_100703760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10070378C(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = [v7 firstObject];

    if (v4)
    {
      double v5 = [WeakRetained delegate];
      id v6 = [v7 firstObject];
      [v5 didTapOnTappableEntry:v6];

      [WeakRetained setMapServiceTicket:0];
    }
  }
}

int64_t sub_10070506C(id a1, GEOLPRRegion *a2, GEOLPRRegion *a3)
{
  id v4 = a3;
  double v5 = [(GEOLPRRegion *)a2 displayNames];
  id v6 = [v5 firstObject];
  id v7 = [v6 stringValue];
  id v8 = [(GEOLPRRegion *)v4 displayNames];

  id v9 = [v8 firstObject];
  uint64_t v10 = [v9 stringValue];
  id v11 = [v7 compare:v10];

  return (int64_t)v11;
}

void sub_100705E40(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    dispatch_time_t v2 = dispatch_time(0, 250000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100705EF0;
    block[3] = &unk_1012E6EA8;
    id v4 = *(id *)(a1 + 32);
    dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_100705EF0(uint64_t a1)
{
  dispatch_time_t v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "openMapsCarPlayApplicationWithCompletion completionBlock", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10070604C(id a1, BSProcessHandle *a2, NSError *a3)
{
  id v3 = a3;
  id v4 = sub_1000A930C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "openMapsCarPlayApplicationSuspended error %@", (uint8_t *)&v5, 0xCu);
  }
}

id sub_100706628()
{
  if (qword_10160F630 != -1) {
    dispatch_once(&qword_10160F630, &stru_1012F6040);
  }
  v0 = (void *)qword_10160F628;

  return v0;
}

void sub_100706BF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reportStateToStateManager];
}

void sub_100706CE0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionThermalStateMonitor");
  dispatch_time_t v2 = (void *)qword_10160F628;
  qword_10160F628 = (uint64_t)v1;
}

void sub_100706F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100706F30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    id v8 = [WeakRetained _configuredCellForSubscriptionIdentifier:v5];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_1007070E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100707100(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _reloadSubscriptions];
    id WeakRetained = v2;
  }
}

void sub_100707650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007076B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = (void *)WeakRetained[1];
    id v6 = WeakRetained;
    id v4 = [*(id *)(a1 + 32) subscription];
    id v5 = [v4 identifier];
    [v3 cancelDownloadForSubscriptionIdentifier:v5];

    id WeakRetained = v6;
  }
}

void sub_100707740(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = (void *)WeakRetained[1];
    id v6 = WeakRetained;
    id v4 = [*(id *)(a1 + 32) subscription];
    id v5 = [v4 identifier];
    [v3 startDownloadForSubscriptionIdentifier:v5 mode:1];

    id WeakRetained = v6;
  }
}

void sub_1007078AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1007078C8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = WeakRetained;
  if (!a3 && WeakRetained)
  {
    id v18 = WeakRetained;
    id v8 = +[NSMutableDictionary dictionary];
    id v9 = dispatch_group_create();
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id v19 = v5;
    id obj = v5;
    id v10 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v30;
      do
      {
        id v13 = 0;
        do
        {
          if (*(void *)v30 != v12) {
            objc_enumerationMutation(obj);
          }
          id v14 = *(void **)(*((void *)&v29 + 1) + 8 * (void)v13);
          dispatch_group_enter(v9);
          __int16 v15 = *(void **)(*(void *)(a1 + 32) + 8);
          unsigned int v16 = [v14 identifier];
          v25[0] = _NSConcreteStackBlock;
          v25[1] = 3221225472;
          v25[2] = sub_100707B50;
          void v25[3] = &unk_1012F60B8;
          id v26 = v8;
          id v27 = v14;
          __int16 v28 = v9;
          [v15 fetchStateForSubscriptionWithIdentifier:v16 callbackQueue:&_dispatch_main_q completionHandler:v25];

          id v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        id v11 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
      }
      while (v11);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100707BC8;
    block[3] = &unk_1012E66E0;
    id v22 = v8;
    id v7 = v18;
    id v23 = obj;
    id v24 = v18;
    id v17 = v8;
    dispatch_group_notify(v9, (dispatch_queue_t)&_dispatch_main_q, block);

    id v5 = v19;
  }
}

void sub_100707B50(void *a1, void *a2, uint64_t a3)
{
  if (!a3)
  {
    id v4 = (void *)a1[4];
    id v5 = (void *)a1[5];
    id v6 = a2;
    id v7 = [v5 identifier];
    [v4 setObject:v6 forKeyedSubscript:v7];

    id v8 = a1[6];
    dispatch_group_leave(v8);
  }
}

void sub_100707BC8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) count];
  if (v2 == [*(id *)(a1 + 40) count])
  {
    v46[0] = _NSConcreteStackBlock;
    v46[1] = 3221225472;
    v46[2] = sub_1007080FC;
    v46[3] = &unk_1012F60E0;
    id v3 = *(void **)(a1 + 40);
    id v47 = *(id *)(a1 + 32);
    uint64_t v4 = [v3 _geo_map:v46];
    uint64_t v5 = *(void *)(a1 + 48);
    id v6 = *(void **)(v5 + 16);
    *(void *)(v5 + 16) = v4;

    id v7 = [*(id *)(a1 + 40) _geo_map:&stru_1012F6120];
    id v8 = objc_alloc_init((Class)NSDiffableDataSourceSnapshot);
    [v8 appendSectionsWithIdentifiers:&off_1013ADDB8];
    if ([v7 count]) {
      [v8 appendItemsWithIdentifiers:v7];
    }
    [*(id *)(*(void *)(a1 + 48) + 32) applySnapshot:v8 animatingDifferences:1];
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(v9 + 24);
    id v11 = *(id *)(v9 + 16);
    if (v10)
    {
      id v39 = v8;
      uint64_t v40 = v7;
      dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
      uint64_t v12 = +[NSMutableSet set];
      long long v56 = 0u;
      long long v57 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
      id v38 = v11;
      id obj = v11;
      id v44 = [obj countByEnumeratingWithState:&v56 objects:v64 count:16];
      if (v44)
      {
        uint64_t v42 = *(void *)v57;
        long long v43 = v12;
        do
        {
          for (unint64_t i = 0; i != v44; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v57 != v42) {
              objc_enumerationMutation(obj);
            }
            id v14 = *(void **)(*((void *)&v56 + 1) + 8 * i);
            __int16 v15 = [v14 state];
            long long v45 = [v14 subscription];
            unsigned int v16 = [v45 identifier];
            id v17 = v15;
            id v18 = v16;
            sub_100709104(v10, v18);
            [*(id *)(v10 + 8) setObject:v17 forKey:v18];
            long long v62 = 0u;
            long long v63 = 0u;
            long long v60 = 0u;
            long long v61 = 0u;
            v65[0] = @"loadState";
            v65[1] = @"downloadedDataSize";
            v65[2] = @"progress";
            id v19 = +[NSArray arrayWithObjects:v65 count:3];
            id v20 = [v19 countByEnumeratingWithState:&v60 objects:v65 count:16];
            if (v20)
            {
              id v21 = v20;
              uint64_t v22 = *(void *)v61;
              do
              {
                for (j = 0; j != v21; j = (char *)j + 1)
                {
                  if (*(void *)v61 != v22) {
                    objc_enumerationMutation(v19);
                  }
                  [v17 addObserver:v10 forKeyPath:*(void *)(*((void *)&v60 + 1) + 8 * (void)j) options:0 context:off_1015EA260];
                }
                id v21 = [v19 countByEnumeratingWithState:&v60 objects:v65 count:16];
              }
              while (v21);
            }

            id v24 = [v14 subscription];
            uint64_t v25 = [v24 identifier];
            uint64_t v12 = v43;
            [v43 addObject:v25];
          }
          id v44 = [obj countByEnumeratingWithState:&v56 objects:v64 count:16];
        }
        while (v44);
      }

      id v26 = +[NSMutableArray array];
      long long v52 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      long long v55 = 0u;
      id v27 = *(id *)(v10 + 8);
      id v28 = [v27 countByEnumeratingWithState:&v52 objects:v65 count:16];
      if (v28)
      {
        id v29 = v28;
        uint64_t v30 = *(void *)v53;
        do
        {
          for (k = 0; k != v29; k = (char *)k + 1)
          {
            if (*(void *)v53 != v30) {
              objc_enumerationMutation(v27);
            }
            uint64_t v32 = *(void *)(*((void *)&v52 + 1) + 8 * (void)k);
            if (([v12 containsObject:v32] & 1) == 0) {
              [v26 addObject:v32];
            }
          }
          id v29 = [v27 countByEnumeratingWithState:&v52 objects:v65 count:16];
        }
        while (v29);
      }

      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v33 = v26;
      id v34 = [v33 countByEnumeratingWithState:&v48 objects:&v60 count:16];
      id v8 = v39;
      id v7 = v40;
      if (v34)
      {
        id v35 = v34;
        uint64_t v36 = *(void *)v49;
        do
        {
          for (m = 0; m != v35; m = (char *)m + 1)
          {
            if (*(void *)v49 != v36) {
              objc_enumerationMutation(v33);
            }
            sub_100709104(v10, *(void **)(*((void *)&v48 + 1) + 8 * (void)m));
          }
          id v35 = [v33 countByEnumeratingWithState:&v48 objects:&v60 count:16];
        }
        while (v35);
      }

      id v11 = v38;
    }
  }
}

MapDataSubscriptionInfo *sub_1007080FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [MapDataSubscriptionInfo alloc];
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = [v3 identifier];
  id v7 = [v5 objectForKeyedSubscript:v6];
  id v8 = [(MapDataSubscriptionInfo *)v4 initWithSubscription:v3 state:v7];

  return v8;
}

NSString *__cdecl sub_10070819C(id a1, GEOMapDataSubscription *a2)
{
  return (NSString *)[(GEOMapDataSubscription *)a2 identifier];
}

void sub_100708DD0(uint64_t a1, void *a2, uint64_t a3)
{
  id v3 = (void *)(*(void *)(a1 + 32) + 16 * a3);
  id v4 = a2;
  [v4 lat];
  uint64_t v6 = v5;
  [v4 lng];
  uint64_t v8 = v7;

  *id v3 = v6;
  v3[1] = v8;
}

void sub_100709104(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = [*(id *)(a1 + 8) objectForKeyedSubscript:v3];
    if (v4)
    {
      long long v12 = 0u;
      long long v13 = 0u;
      long long v10 = 0u;
      long long v11 = 0u;
      v15[0] = @"loadState";
      v15[1] = @"downloadedDataSize";
      id v15[2] = @"progress";
      uint64_t v5 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v15, 3, 0);
      id v6 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v6)
      {
        id v7 = v6;
        uint64_t v8 = *(void *)v11;
        do
        {
          uint64_t v9 = 0;
          do
          {
            if (*(void *)v11 != v8) {
              objc_enumerationMutation(v5);
            }
            [v4 removeObserver:a1 forKeyPath:*(void *)(*((void *)&v10 + 1) + 8 * (void)v9) context:off_1015EA260];
            uint64_t v9 = (char *)v9 + 1;
          }
          while (v7 != v9);
          id v7 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
        }
        while (v7);
      }

      [*(id *)(a1 + 8) removeObjectForKey:v3];
    }
  }
}

void sub_100709374(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 8);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10070940C;
  void v5[3] = &unk_1012F6168;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  uint64_t v7 = v4;
  [v2 enumerateKeysAndObjectsUsingBlock:v5];
}

void sub_10070940C(uint64_t a1, void *a2, uint64_t a3)
{
  if (*(void *)(a1 + 32) == a3)
  {
    uint64_t v4 = *(void **)(*(void *)(a1 + 40) + 16);
    id v5 = a2;
    id v6 = [v4 snapshot];
    id v7 = [v6 copy];

    id v9 = v5;
    uint64_t v8 = +[NSArray arrayWithObjects:&v9 count:1];
    [v7 reconfigureItemsWithIdentifiers:v8];

    [*(id *)(*(void *)(a1 + 40) + 16) applySnapshot:v7 animatingDifferences:1];
  }
}

void sub_100709A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100709AA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v2 = [WeakRetained actionDelegate];
    id v3 = [v4 subscriptionInfo];
    [v2 offlineMapDetailsActionSectionControllerDidSelectRenameMap:v3 completionHandler:&stru_1012F6188];

    +[GEOAPPortal captureUserAction:385 target:112 value:0];
    id WeakRetained = v4;
  }
}

void sub_100709B38(id a1, BOOL a2)
{
  if (a2) {
    +[GEOAPPortal captureUserAction:378 target:112 value:0];
  }
}

void sub_100709F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100709F7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v2 = [WeakRetained actionDelegate];
    id v3 = [v4 subscriptionInfo];
    [v2 offlineMapDetailsActionSectionControllerDidSelectResizeMap:v3];

    +[GEOAPPortal captureUserAction:407 target:112 value:0];
    id WeakRetained = v4;
  }
}

void sub_10070A260(id a1)
{
  id v1 = objc_alloc_init((Class)NSByteCountFormatter);
  id v2 = (void *)qword_10160F638;
  qword_10160F638 = (uint64_t)v1;
}

void sub_10070B8BC(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableParagraphStyle);
  LODWORD(v2) = 1036831949;
  [v1 setHyphenationFactor:v2];
  [v1 setLineBreakMode:4];
  NSAttributedStringKey v5 = NSParagraphStyleAttributeName;
  id v6 = v1;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];
  id v4 = (void *)qword_10160F650;
  qword_10160F650 = v3;
}

id sub_10070BF64(uint64_t a1, void *a2)
{
  return _[a2 resolveLabelMarker:*(void *)(a1 + 32)];
}

id sub_10070C020(uint64_t a1, void *a2)
{
  return _[a2 resolveAddress:*(void *)(a1 + 32)];
}

id sub_10070C0DC(uint64_t a1, void *a2)
{
  return _[a2 resolveAddressString:*(void *)(a1 + 32)];
}

id sub_10070C198(uint64_t a1, void *a2)
{
  return [a2 resolveMapItem:*(void *)(a1 + 32)];
}

uint64_t sub_10070C30C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10070C450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10070C518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10070C80C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v7 = [a3 mapItem];
  [*(id *)(a1 + 32) setResolvedMapItem:v7];
  [*(id *)(a1 + 32) setError:v6];

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10070CC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_10070CC70(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (([*(id *)(a1 + 32) isCanceled] & 1) == 0)
  {
    if (v5
      && ([*(id *)(a1 + 40) _geoMapItemStorageForPersistence],
          id v6 = objc_claimAutoreleasedReturnValue(),
          v6,
          v6))
    {
      [*(id *)(a1 + 32) setError:0];
      id v7 = *(id *)(a1 + 40);
    }
    else
    {
      [*(id *)(a1 + 32) setError:v5];
      id v7 = [v10 firstObject];
    }
    uint64_t v8 = v7;
    if (*(void *)(a1 + 48)) {
      [v7 setName:];
    }
    if (*(void *)(a1 + 56)) {
      [v8 setUrl:];
    }
    if (*(void *)(a1 + 64)) {
      [v8 setPhoneNumber:];
    }
    [*(id *)(a1 + 32) setResolvedMapItem:v8];
    int v9 = 0;
    atomic_compare_exchange_strong_explicit((atomic_uint *volatile)(*(void *)(*(void *)(a1 + 80) + 8) + 24), (unsigned int *)&v9, 1u, memory_order_relaxed, memory_order_relaxed);
    if (!v9) {
      dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
    }
  }
}

void sub_10070CD90(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  id v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    uint64_t v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_10070CE2C(void *a1)
{
  double v2 = (void *)a1[4];
  if (v2)
  {
    [v2 cancel];
    int v3 = 0;
    atomic_compare_exchange_strong_explicit((atomic_uint *volatile)(*(void *)(a1[6] + 8) + 24), (unsigned int *)&v3, 1u, memory_order_relaxed, memory_order_relaxed);
    if (!v3)
    {
      id v4 = a1[5];
      dispatch_group_leave(v4);
    }
  }
}

void sub_10070D094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_10070D0B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (([*(id *)(a1 + 32) isCanceled] & 1) == 0)
  {
    v29[0] = 0;
    v29[1] = v29;
    v29[2] = 0x3032000000;
    v29[3] = sub_100103EAC;
    void v29[4] = sub_1001047E0;
    id v30 = 0;
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
    id v7 = +[MKMapService sharedService];
    uint64_t v8 = *(void *)(a1 + 48);
    [v5 coordinate];
    double v10 = v9;
    double v12 = v11;
    long long v13 = [*(id *)(a1 + 32) traits];
    id v14 = [v7 ticketForNearestTransitStation:v8 coordinate:v13 traits:v10, v12];

    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_10070D358;
    v26[3] = &unk_1012F6268;
    uint64_t v15 = *(void *)(a1 + 56);
    unsigned int v16 = *(void **)(a1 + 40);
    void v26[4] = *(void *)(a1 + 32);
    uint64_t v28 = v15;
    id v27 = v16;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_10070D430;
    void v25[3] = &unk_1012E83B0;
    void v25[4] = v29;
    [v14 submitWithHandler:v26 networkActivity:v25];
    uint64_t v17 = *(void **)(a1 + 32);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_10070D4CC;
    v21[3] = &unk_1012E7A60;
    id v18 = v14;
    uint64_t v19 = *(void *)(a1 + 56);
    id v22 = v18;
    uint64_t v24 = v19;
    id v23 = *(id *)(a1 + 40);
    [v17 _addCancelationHandler:v21];
    int v20 = 0;
    atomic_compare_exchange_strong_explicit((atomic_uint *volatile)(*(void *)(*(void *)(a1 + 64) + 8) + 24), (unsigned int *)&v20, 1u, memory_order_relaxed, memory_order_relaxed);
    if (!v20) {
      dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
    }

    _Block_object_dispose(v29, 8);
  }
}

void sub_10070D340(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_10070D358(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (([*(id *)(a1 + 32) isCanceled] & 1) == 0)
  {
    if (v5 || ![v8 count]) {
      [*(id *)(a1 + 32) setError:v5];
    }
    id v6 = [v8 firstObject];
    [*(id *)(a1 + 32) setResolvedMapItem:v6];

    [*(id *)(a1 + 32) setHasNearestStation:1];
    int v7 = 0;
    atomic_compare_exchange_strong_explicit((atomic_uint *volatile)(*(void *)(*(void *)(a1 + 48) + 8) + 24), (unsigned int *)&v7, 1u, memory_order_relaxed, memory_order_relaxed);
    if (!v7) {
      dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
    }
  }
}

void sub_10070D430(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  id v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    id v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_10070D4CC(uint64_t a1)
{
  [*(id *)(a1 + 32) cancel];
  int v2 = 0;
  atomic_compare_exchange_strong_explicit((atomic_uint *volatile)(*(void *)(*(void *)(a1 + 48) + 8) + 24), (unsigned int *)&v2, 1u, memory_order_relaxed, memory_order_relaxed);
  if (!v2)
  {
    uint64_t v3 = *(NSObject **)(a1 + 40);
    dispatch_group_leave(v3);
  }
}

void sub_10070D534(uint64_t a1)
{
  [*(id *)(a1 + 32) cancel];
  int v2 = 0;
  atomic_compare_exchange_strong_explicit((atomic_uint *volatile)(*(void *)(*(void *)(a1 + 48) + 8) + 24), (unsigned int *)&v2, 1u, memory_order_relaxed, memory_order_relaxed);
  if (!v2)
  {
    uint64_t v3 = *(NSObject **)(a1 + 40);
    dispatch_group_leave(v3);
  }
}

void sub_10070D638(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 setResolvedMapItem:a2];
  [*(id *)(a1 + 32) setError:v6];

  int v7 = *(NSObject **)(*(void *)(a1 + 32) + 8);

  dispatch_group_leave(v7);
}

void sub_10070D934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_10070D96C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v13 = a2;
  unsigned __int8 v6 = [*(id *)(a1 + 32) isCanceled];
  int v7 = v13;
  if ((v6 & 1) == 0)
  {
    id v8 = [v13 count];
    if (!a4 && v8 == (id)1)
    {
      uint64_t v9 = [v13 firstObject];
      uint64_t v10 = *(void *)(a1 + 32);
      double v11 = *(void **)(v10 + 72);
      *(void *)(v10 + 72) = v9;
    }
    int v12 = 0;
    atomic_compare_exchange_strong_explicit((atomic_uint *volatile)(*(void *)(*(void *)(a1 + 48) + 8) + 24), (unsigned int *)&v12, 1u, memory_order_relaxed, memory_order_relaxed);
    int v7 = v13;
    if (!v12)
    {
      dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
      int v7 = v13;
    }
  }
}

void sub_10070DA20(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  id v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    id v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_10070DABC(void *a1)
{
  [*(id *)(*(void *)(a1[5] + 8) + 40) cancel];
  int v2 = 0;
  atomic_compare_exchange_strong_explicit((atomic_uint *volatile)(*(void *)(a1[6] + 8) + 24), (unsigned int *)&v2, 1u, memory_order_relaxed, memory_order_relaxed);
  if (!v2)
  {
    uint64_t v3 = a1[4];
    dispatch_group_leave(v3);
  }
}

void sub_10070E348(id a1)
{
  uint64_t v1 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "building RouteGenius Service", v4, 2u);
  }

  int v2 = objc_alloc_init(CarRouteGeniusService);
  uint64_t v3 = (void *)qword_10160F658;
  qword_10160F658 = (uint64_t)v2;
}

void sub_10070E514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070E5CC(NSObject **a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    int v7 = v5;
    id v8 = *a1;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10070F598;
    void v10[3] = &unk_1012F64F0;
    double v11 = v7;
    id v12 = v6;
    dispatch_async(v8, v10);

    uint64_t v9 = v11;
  }
  else
  {
    uint64_t v9 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 136446978;
      id v14 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Suggestions/MapsSuggestionsQueue.hpp";
      __int16 v15 = 1024;
      int v16 = 208;
      __int16 v17 = 2082;
      id v18 = "void MSg::Queue::async(S *, void (^__strong)(S *)) const [S = CarRouteGeniusService]";
      __int16 v19 = 2082;
      int v20 = "nil == (callerSelf)";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "At %{public}s:%d, %{public}s forbids: %{public}s. Requires self", buf, 0x26u);
    }
  }
}

void sub_10070E760(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070E778(id a1, CarRouteGeniusService *a2)
{
  int v2 = a2;
  if ([(CarRouteGeniusService *)v2 isActive])
  {
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "RouteGeniusService was already active", buf, 2u);
    }
  }
  else
  {
    id v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Starting RouteGeniusService", v5, 2u);
    }

    [(CarRouteGeniusService *)v2 _isActive:1];
    [(MNRouteGeniusRemoteService *)v2->_config.remote start];
  }
}

void sub_10070E870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070E91C(id a1, CarRouteGeniusService *a2)
{
  int v2 = a2;
  if ([(CarRouteGeniusService *)v2 isActive])
  {
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Force RouteGenius reroute", v5, 2u);
    }

    [(MNRouteGeniusRemoteService *)v2->_config.remote forceReroute];
  }
  else
  {
    id v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "RouteGenius is not active", buf, 2u);
    }
  }
}

void sub_10070EA08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070EAB4(id a1, CarRouteGeniusService *a2)
{
  int v2 = a2;
  if ([(CarRouteGeniusService *)v2 isActive])
  {
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Stopping RouteGeniusService", v5, 2u);
    }

    [(CarRouteGeniusService *)v2 _isActive:0];
    [(MNRouteGeniusRemoteService *)v2->_config.remote stop];
  }
  else
  {
    id v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "RouteGeniusService was not active", buf, 2u);
    }
  }
}

void sub_10070EBAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070ED34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070EE34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070EF24(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (!WeakRetained)
  {
    GEOFindOrCreateLog();
    uint64_t v10 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      __int16 v15 = "CarRouteGeniusService.mm";
      __int16 v16 = 1026;
      int v17 = 151;
      __int16 v18 = 2082;
      __int16 v19 = "-[CarRouteGeniusService didUpdateRouteGenius:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    uint64_t v9 = v10;
    goto LABEL_9;
  }
  id v4 = WeakRetained[3];
  WeakRetained[3] = 0;

  if (*(void *)(a1 + 32))
  {
    id v5 = +[MapsSuggestionsRouteGeniusEntry entryWithData:](MapsSuggestionsRouteGeniusEntry, "entryWithData:");
    objc_storeStrong(v3 + 3, v5);
    id v6 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v7 = *(char **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      __int16 v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "received entry: %@", buf, 0xCu);
    }

    id v8 = v3[4];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10070F1EC;
    void v12[3] = &unk_1012F6410;
    uint64_t v9 = v5;
    id v13 = v9;
    [v8 callBlock:v12];
    uint64_t v10 = v13;
LABEL_9:

    goto LABEL_13;
  }
  [v3 stop];
  double v11 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "will notify about nil entry", buf, 2u);
  }

  [v3[4] callBlock:&stru_1012F6450];
LABEL_13:
}

void sub_10070F1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070F1EC(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  id v4[2] = sub_10070F29C;
  void v4[3] = &unk_1012F63E8;
  id v5 = a2;
  id v6 = *(id *)(a1 + 32);
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

id sub_10070F29C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didUpdateRouteGenius:*(void *)(a1 + 40)];
}

void sub_10070F2A8(id a1, MapsSuggestionsRouteGeniusObserver *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10070F33C;
  block[3] = &unk_1012F6478;
  id v4 = a2;
  int v2 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10070F33C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didUpdateRouteGenius:0];
}

void sub_10070F4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

id sub_10070F510(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 24);
}

void sub_10070F584(void *a1)
{
}

void sub_10070F598(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  if (v2)
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    id v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "self went away in MSg::Queue::async()", v4, 2u);
    }
  }
}

void sub_10070F644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10070F658(uint64_t a1)
{
  uint64_t v2 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1007105C4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  uint64_t v9 = [(TrafficIncidentLayout *)v6 feedbackResult];
  uint64_t v10 = [v9 layoutConfigResult];
  double v11 = [v10 forms];

  id v12 = [v11 countByEnumeratingWithState:&v34 objects:v42 count:16];
  if (v12)
  {
    id v13 = v12;
    id v30 = v8;
    id v31 = v7;
    uint64_t v32 = v6;
    id v14 = 0;
    uint64_t v15 = *(void *)v35;
    do
    {
      for (unint64_t i = 0; i != v13; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v35 != v15) {
          objc_enumerationMutation(v11);
        }
        int v17 = *(void **)(*((void *)&v34 + 1) + 8 * i);
        unsigned int v18 = [v17 formType:v30, v31, v32];
        __int16 v19 = [*(id *)(a1 + 32) feedbackRequestParameters];
        int v20 = [v19 layoutConfigParameters];
        unsigned int v21 = [v20 formType];

        if (v18 == v21)
        {
          id v22 = v17;

          id v14 = v22;
        }
      }
      id v13 = [v11 countByEnumeratingWithState:&v34 objects:v42 count:16];
    }
    while (v13);

    id v7 = v31;
    id v6 = v32;
    id v8 = v30;
    if (v14)
    {
      id v23 = [[TrafficIncidentLayout alloc] initWithLayoutFormConfig:v14 location:*(void *)(a1 + 40)];
      int v24 = *(_DWORD *)(a1 + 56);
      if (v24 == 7)
      {
        uint64_t v25 = +[TrafficIncidentLayoutStorage sharedInstance];
        [v25 saveIncidentLayout:v23];
      }
      else
      {
        if (v24 != 9)
        {
LABEL_21:
          uint64_t v28 = sub_100576E2C();
          if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            id v39 = v23;
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "LayoutItem %@", buf, 0xCu);
          }

          uint64_t v29 = *(void *)(a1 + 48);
          if (v29) {
            (*(void (**)(uint64_t, TrafficIncidentLayout *))(v29 + 16))(v29, v23);
          }

          goto LABEL_26;
        }
        uint64_t v25 = +[TrafficIncidentLayoutStorage sharedInstance];
        [v25 saveIncidentVotingLayout:v23];
      }

      goto LABEL_21;
    }
  }
  else
  {
  }
  id v26 = sub_100576E2C();
  if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412546;
    id v39 = v6;
    __int16 v40 = 2112;
    id v41 = v8;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "Error: Layout config not included in response: %@ error: %@", buf, 0x16u);
  }

  uint64_t v27 = *(void *)(a1 + 48);
  if (v27) {
    (*(void (**)(uint64_t, void))(v27 + 16))(v27, 0);
  }
LABEL_26:
}

void sub_100710A94(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100710AB8(uint64_t a1)
{
  objc_copyWeak(&to, (id *)(a1 + 48));
  int v2 = *(_DWORD *)(a1 + 56);
  switch(v2)
  {
    case 6:
      uint64_t v3 = [*(id *)(a1 + 32) cachedObjectWithType:6];
      if (v3) {
        goto LABEL_9;
      }
      objc_copyWeak(&from, &to);
      id v8 = objc_loadWeakRetained(&to);
      uint64_t v9 = [v8 locationOfInterestManager];
      uint64_t v10 = +[NSSet setWithArray:&off_1013ADE30];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_100710F9C;
      void v14[3] = &unk_1012EB188;
      id v15 = *(id *)(a1 + 40);
      objc_copyWeak(&v16, &from);
      [v9 afterInitialRetrievalOfLOIsOfTypes:v10 perform:v14];

      objc_destroyWeak(&v16);
      id v7 = v15;
      goto LABEL_13;
    case 2:
      uint64_t v3 = [*(id *)(a1 + 32) cachedObjectWithType:2];
      if (v3)
      {
LABEL_9:
        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_14:

        break;
      }
      objc_copyWeak(&from, &to);
      id v11 = objc_loadWeakRetained(&to);
      id v12 = [v11 locationOfInterestManager];
      id v13 = +[NSSet setWithArray:&off_1013ADE18];
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_100710F08;
      void v17[3] = &unk_1012EB188;
      id v18 = *(id *)(a1 + 40);
      objc_copyWeak(&v19, &from);
      [v12 afterInitialRetrievalOfLOIsOfTypes:v13 perform:v17];

      objc_destroyWeak(&v19);
      id v7 = v18;
LABEL_13:

      objc_destroyWeak(&from);
      uint64_t v3 = 0;
      goto LABEL_14;
    case 1:
      uint64_t v3 = [*(id *)(a1 + 32) cachedObjectWithType:1];
      if (v3) {
        goto LABEL_9;
      }
      objc_copyWeak(&from, &to);
      id v4 = objc_loadWeakRetained(&to);
      id v5 = [v4 locationOfInterestManager];
      id v6 = +[NSSet setWithArray:&off_1013ADE00];
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      void v20[2] = sub_100710E74;
      void v20[3] = &unk_1012EB188;
      id v21 = *(id *)(a1 + 40);
      objc_copyWeak(&v22, &from);
      [v5 afterInitialRetrievalOfLOIsOfTypes:v6 perform:v20];

      objc_destroyWeak(&v22);
      id v7 = v21;
      goto LABEL_13;
  }
  objc_destroyWeak(&to);
}

void sub_100710E24(_Unwind_Exception *a1)
{
  uint64_t v3 = v1;
  objc_destroyWeak(v3);
  objc_destroyWeak((id *)(v2 - 64));
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100710E74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained locationOfInterestManager];
  uint64_t v3 = [v2 homeLOIs];
  id v4 = [v3 firstObject];
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v4);
}

void sub_100710F08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained locationOfInterestManager];
  uint64_t v3 = [v2 workLOIs];
  id v4 = [v3 firstObject];
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v4);
}

void sub_100710F9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained locationOfInterestManager];
  uint64_t v3 = [v2 schoolLOIs];
  id v4 = [v3 firstObject];
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v4);
}

void sub_1007110D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
LABEL_6:
    v4();
    goto LABEL_7;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v4 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    goto LABEL_6;
  }
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100711200;
  void v5[3] = &unk_1012F65B8;
  id v6 = v3;
  id v7 = v6;
  id v8 = *(id *)(a1 + 32);
  [v6 _maps_hydrateGeoMapItem:v5];

LABEL_7:
}

void sub_100711200(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = [*(id *)(a1 + 32) identifier];
      *(_DWORD *)buf = 138412547;
      id v16 = v8;
      __int16 v17 = 2113;
      id v18 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed hydrating the geoMapItem for LOI w/ identifier %@. Error: %{private}@", buf, 0x16u);
    }
  }
  else if (v5)
  {
    uint64_t v9 = [[MapsLocationOfInterest alloc] initWithLocationOfInterest:*(void *)(a1 + 40) geoMapItem:v5];
    goto LABEL_8;
  }
  uint64_t v9 = 0;
LABEL_8:
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1007113AC;
  void v12[3] = &unk_1012E5F78;
  id v10 = *(id *)(a1 + 48);
  id v13 = v9;
  id v14 = v10;
  id v11 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
}

uint64_t sub_1007113AC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_100711A74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100713CCC(id a1, RAPReport *a2, RAPLookAroundDetailsEditorViewController *a3)
{
  id v4 = a3;
  BOOL v5 = [(RAPReport *)a2 canCreateSubmittableProblem];
  sendButtonItem = v4->_sendButtonItem;

  [(UIBarButtonItem *)sendButtonItem setEnabled:v5];
}

void sub_100713E68(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  if (a2)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 24);
    if (v7)
    {
      id v8 = v6;
      (*(void (**)(void))(v7 + 16))();
      id v6 = v8;
    }
  }
}

void sub_100715098(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1007150B8(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setComment:a2];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v4 = [WeakRetained commentHeaderView];
    [v4 updateRemainingCharacters];

    id WeakRetained = v5;
  }
}

void sub_100715124(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setComment:a2];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v4 = [WeakRetained commentHeaderView];
    [v4 updateRemainingCharacters];

    id WeakRetained = v5;
  }
}

id sub_1007161FC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _sendUpdates];
}

BOOL sub_100716834(uint64_t a1, uint64_t a2)
{
  return (a2 & ~*(void *)(*(void *)(a1 + 32) + 40)) == 0;
}

id sub_100716848()
{
  if (qword_10160F680 != -1) {
    dispatch_once(&qword_10160F680, &stru_1012F66E0);
  }
  v0 = (void *)qword_10160F678;

  return v0;
}

void sub_10071689C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 48);
  id v21 = a2;
  [v21 setGuidanceState:[v3 guidanceState]];
  [v21 setManeuverState:[*(id *)(*(void *)(a1 + 32) + 48) maneuverState]];
  id v4 = [*(id *)(*(void *)(a1 + 32) + 48) currentRoadNameVariants];
  id v5 = [v4 copy];
  [v21 setCurrentRoadNameVariants:v5];

  id v6 = [*(id *)(*(void *)(a1 + 32) + 48) destinationNameVariants];
  id v7 = [v6 copy];
  [v21 setDestinationNameVariants:v7];

  id v8 = [*(id *)(*(void *)(a1 + 32) + 48) estimatedTimeOfArrival];
  [v21 setEstimatedTimeOfArrival:v8];

  [*(id *)(*(void *)(a1 + 32) + 48) timeRemaining];
  [v21 setTimeRemaining:];
  [v21 setDestinationTimeZoneOffsetMinutes:[*(id *)(*(void *)(a1 + 32) + 48) destinationTimeZoneOffsetMinutes]];
  uint64_t v9 = [*(id *)(*(void *)(a1 + 32) + 48) distanceRemaining];
  [v21 setDistanceRemaining:v9];

  id v10 = [*(id *)(*(void *)(a1 + 32) + 48) distanceRemainingDisplay];
  [v21 setDistanceRemainingDisplay:v10];

  id v11 = [*(id *)(*(void *)(a1 + 32) + 48) distanceRemainingToNextManeuver];
  [v21 setDistanceRemainingToNextManeuver:v11];

  id v12 = [*(id *)(*(void *)(a1 + 32) + 48) distanceRemainingToNextManeuverDisplay];
  [v21 setDistanceRemainingToNextManeuverDisplay:v12];

  id v13 = [*(id *)(*(void *)(a1 + 32) + 48) sourceName];
  id v14 = [v13 copy];
  [v21 setSourceName:v14];

  [v21 setSourceSupportsRouteGuidance:[*(id *)(*(void *)(a1 + 32) + 48) sourceSupportsRouteGuidance]];
  [v21 setBeingShownInApp:[*(id *)(*(void *)(a1 + 32) + 48) beingShownInApp]];
  id v15 = [*(id *)(*(void *)(a1 + 32) + 48) currentManeuvers];
  id v16 = [v15 copy];
  [v21 setCurrentManeuvers:v16];

  __int16 v17 = [*(id *)(*(void *)(a1 + 32) + 48) currentManeuverIndexes];
  id v18 = [v17 copy];
  [v21 setCurrentManeuverIndexes:v18];

  [v21 setTotalManeuverCount:[*(id *)(*(void *)(a1 + 32) + 48) totalManeuverCount]];
  [v21 setLaneGuidanceShowing:[*(id *)(*(void *)(a1 + 32) + 48) laneGuidanceShowing]];
  id v19 = [*(id *)(*(void *)(a1 + 32) + 48) currentLaneGuidance];
  id v20 = [v19 copy];
  [v21 setCurrentLaneGuidance:v20];

  [v21 setCurrentLaneGuidanceIndex:[*(id *)(*(void *)(a1 + 32) + 48) currentLaneGuidanceIndex]];
  [v21 setTotalLaneGuidanceCount:[*(id *)(*(void *)(a1 + 32) + 48) totalLaneGuidanceCount]];
  [v21 setStopType:[*(id *)(*(void *)(a1 + 32) + 48) stopType]];
}

void sub_100716D44(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _setNeedsUpdateOfType:1];
    objc_storeStrong(v3 + 6, *(id *)(a1 + 32));
    id WeakRetained = v3;
  }
}

void sub_100716F78(id *a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _setNeedsUpdateOfType:6];
    objc_storeStrong(v3 + 7, a1[4]);
    objc_storeStrong(v3 + 8, a1[5]);
    id WeakRetained = v3;
  }
}

id sub_10071710C(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 8) setChargePrecondition:*(void *)(a1 + 40)];
}

void sub_1007172EC(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"MapsExternalNavigationOwnershipUpdatedNotification" object:0 userInfo:0];
}

void sub_100717970(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarMetadataConnectionManager");
  uint64_t v2 = (void *)qword_10160F678;
  qword_10160F678 = (uint64_t)v1;
}

void sub_100717DC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_100717DEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = [WeakRetained webView];
    id v4 = +[WKContentWorld pageWorld];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100717EC0;
    void v5[3] = &unk_1012F6720;
    void v5[4] = v2;
    [v3 callAsyncJavaScript:@"return rapGetData()" arguments:0 inFrame:0 inContentWorld:v4 completionHandler:v5];
  }
}

void sub_100717EC0(uint64_t a1, void *a2)
{
  id v6 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = v6;
    id v4 = [objc_alloc((Class)NSData) initWithBase64EncodedString:v3 options:0];

    id v5 = [objc_alloc((Class)GEORPFeedbackDynamicForm) initWithData:v4];
    [*(id *)(a1 + 32) _uploadForm:v5];
  }
}

void sub_100717F84(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && a2)
  {
    id v5 = WeakRetained;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id WeakRetained = v5;
  }
}

void sub_1007184BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1007184E0(id a1, id a2, id a3)
{
}

void sub_1007184F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) startAnimating];
    uint64_t v2 = [WeakRetained webView];
    [v2 resignFirstResponder];

    uint64_t v3 = [WeakRetained navigationController];
    id v4 = [v3 navigationBar];
    [v4 setUserInteractionEnabled:0];

    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = [WeakRetained navigationItem];
    id v7 = [v6 rightBarButtonItem];
    [v7 setCustomView:v5];
  }
}

void sub_1007185C0(id *a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    [a1[4] stopAnimating];
    id v6 = [WeakRetained navigationController];
    id v7 = [v6 navigationBar];
    [v7 setUserInteractionEnabled:1];

    id v8 = [WeakRetained navigationItem];
    uint64_t v9 = [v8 rightBarButtonItem];
    [v9 setCustomView:0];

    if (a3)
    {
      id v10 = sub_1009A038C();
      [WeakRetained presentViewController:v10 animated:1 completion:0];
    }
    else
    {
      if (MapsFeature_IsEnabled_RAPSydney())
      {
        id v11 = [UGCCommunityAcknowledgementViewController alloc];
        id v12 = +[RAPAcknowledgementOptions defaultOptions];
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 3221225472;
        v27[2] = sub_1007188DC;
        v27[3] = &unk_1012E5D08;
        void v27[4] = WeakRetained;
        id v13 = [(UGCCommunityAcknowledgementViewController *)v11 initWithOptions:v12 completion:v27];

        id v14 = [(UGCCommunityAcknowledgementViewController *)v13 navigationItem];
        [v14 setHidesBackButton:1];

        id v15 = [WeakRetained navigationController];
        [v15 pushViewController:v13 animated:1];

        if (sub_1000BBB44(a1[5]) == 5)
        {
          id v16 = [WeakRetained webBundleQuestion];
          __int16 v17 = (char *)[v16 questionType] - 13;

          if ((unint64_t)v17 <= 7)
          {
            id v18 = [(UGCCommunityAcknowledgementViewController *)v13 view];
            [v18 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
            double v20 = v19;

            id v21 = [WeakRetained delegate];
            [v21 updateCardHeight:v20];
          }
        }
        id v22 = [(UGCCommunityAcknowledgementViewController *)v13 transitionCoordinator];
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        v26[2] = sub_1007188E4;
        v26[3] = &unk_1012E81F8;
        void v26[4] = WeakRetained;
        [v22 animateAlongsideTransition:0 completion:v26];
      }
      else
      {
        id v23 = [WeakRetained view];
        id v13 = [v23 window];

        int v24 = +[NSBundle mainBundle];
        uint64_t v25 = [v24 localizedStringForKey:@"[RAP Web UI] Thanks for your report" value:@"localized string not found" table:0];

        +[ActionValidationController presentDefaultValidationActionWithTitle:v25 inWindow:v13];
        [WeakRetained _reportSent];
      }
      +[RAPAnalyticsManager captureRAPSendActionFromReport:WeakRetained[17]];
    }
  }
}

id sub_1007188DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reportSent];
}

void sub_1007188E4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) delegate];
  [v1 enableDismissByGesture:1];
}

void sub_100718F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100718F38(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (a3 || ![v5 count])
    {
      id v7 = sub_1000B8184();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        int v12 = 138412290;
        uint64_t v13 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "No POI to show for id: %@", (uint8_t *)&v12, 0xCu);
      }
    }
    else
    {
      uint64_t v9 = [v5 firstObject];
      id v10 = [objc_alloc((Class)MKMapItem) initWithGeoMapItem:v9 isPlaceHolderPlace:0];
      id v11 = [[RAPPlaceViewController alloc] initWithMapItem:v10];
      [WeakRetained presentAccessoryViewController:v11];
    }
  }
}

void sub_100719310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10071932C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1007193FC;
    _OWORD v8[3] = &unk_1012F6790;
    void v8[4] = *(void *)(a1 + 32);
    [v6 enumerateObjectsUsingBlock:v8];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1007193FC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v5 = [v3 image];
  id v4 = [v3 identifier];

  [v2 saveImageData:v5 withIdentifier:v4];
}

NSString *__cdecl sub_10071A3C8(id a1, MSPSharedTripContact *a2, unint64_t a3)
{
  return (NSString *)[(MSPSharedTripContact *)a2 stringValue];
}

id sub_10071A4F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startTestAndPerformScrollTest];
}

id sub_10071A5C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _selectAndScrollPublisherCollections];
}

void sub_10071A660(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) testCoordinator];
  id v3 = [v2 pptTestScrollView];

  id v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10071A70C;
  void v5[3] = &unk_1012E5D08;
  void v5[4] = v4;
  [v4 _performScrollTestOfScrollView:v3 completion:v5];
}

id sub_10071A70C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

uint64_t sub_10071A7C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10071AA14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10071AA60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
    uint64_t v2 = *(void *)(a1 + 48);
    if (v2) {
      (*(void (**)(void))(v2 + 16))();
    }
  }
}

BOOL sub_10071EBD0(id a1)
{
  +[SARAnalytics captureResumePreviousNavigation];
  id v1 = +[MNNavigationService sharedService];
  [v1 resumeOriginalDestination];

  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"NavModeControllerResumeOriginalDestinationNotification" object:0];

  return 1;
}

void sub_10071F4BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10071F4E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _becomeTopContextInChromeViewController:*(void *)(a1 + 32) animated:*(unsigned __int8 *)(a1 + 48)];
}

void sub_10071FC5C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10071FC78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _resignTopContextInChromeViewController:*(void *)(a1 + 32)];
}

uint64_t sub_100721DDC(uint64_t a1)
{
  [*(id *)(a1 + 32) _dismissTrafficIncidentMapDisplay];
  uint64_t v2 = [*(id *)(a1 + 32) containerViewController];
  [v2 updateLayoutAnimated:1];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

id sub_100722A98(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startNavigationCameraMotionAnimated:1];
}

id sub_100723FDC(void *a1, uint64_t a2, double a3)
{
  id v5 = a1;
  id v6 = [v5 artwork];
  id v7 = [v6 icon];

  id v8 = [v7 styleAttributes];
  if (!v8
    || (id v9 = [objc_alloc((Class)GEOFeatureStyleAttributes) initWithGEOStyleAttributes:v8],
        +[MKIconManager imageForStyle:v9 size:a2 forScale:0 format:a3], id v10 = objc_claimAutoreleasedReturnValue(), v9, v8, !v10))
  {
    id v10 = sub_1007240D8((unint64_t)[v5 type], a2);
  }

  return v10;
}

id sub_1007240D8(unint64_t a1, uint64_t a2)
{
  id v3 = +[MKIconManager imageForTrafficIncidentType:size:forScale:](MKIconManager, "imageForTrafficIncidentType:size:forScale:", a1, a2);
  if (!v3)
  {
    if (a1 > 0xE)
    {
      id v3 = 0;
    }
    else
    {
      id v3 = +[UIImage imageNamed:off_1012F6878[a1]];
    }
  }

  return v3;
}

id sub_100724150(void *a1, uint64_t a2, double a3)
{
  id v5 = a1;
  id v6 = [v5 artwork];
  id v7 = [v6 icon];

  id v8 = [v7 styleAttributes];
  if (!v8
    || (id v9 = [objc_alloc((Class)GEOFeatureStyleAttributes) initWithGEOStyleAttributes:v8],
        +[MKIconManager imageForStyle:v9 size:a2 forScale:0 format:a3], id v10 = objc_claimAutoreleasedReturnValue(), v9, v8, !v10))
  {
    id v10 = sub_1007240D8((unint64_t)+[VKTrafficIncidentFeature incidentTypeForGeoRouteIncident:v5], a2);
  }

  return v10;
}

id sub_100724254(void *a1, unint64_t a2, uint64_t a3, double a4)
{
  id v7 = [a1 artwork];
  id v8 = [v7 icon];

  id v9 = [v8 styleAttributes];
  if (!v9
    || (id v10 = [objc_alloc((Class)GEOFeatureStyleAttributes) initWithGEOStyleAttributes:v9], +[MKIconManager imageForStyle:size:forScale:format:](MKIconManager, "imageForStyle:size:forScale:format:", v10, a3, 0, a4), v11 = objc_claimAutoreleasedReturnValue(), v10, v9, !v11))
  {
    id v11 = sub_1007240D8(a2, a3);
  }

  return v11;
}

void sub_100724AC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100724B6C;
  void v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

void sub_100724B6C(uint64_t a1)
{
  sub_1009E12F4(*(void **)(a1 + 40));
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  (*((void (**)(id, void, void))v2 + 2))(v2, 0, *(void *)(a1 + 32));
}

void sub_100724BCC(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100724C88;
  block[3] = &unk_1012F1488;
  id v7 = a2;
  long long v5 = *(_OWORD *)(a1 + 32);
  id v3 = (id)v5;
  long long v8 = v5;
  id v4 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100724C88(uint64_t a1)
{
  if (([*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) isCancelled] & 1) == 0)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = [objc_alloc((Class)GEOComposedWaypointToRoute) initWithRoute:*(void *)(a1 + 32)];
      if ([*(id *)(a1 + 32) source] == (id)2) {
        +[GEOFeatureStyleAttributes curatedRouteStyleAttributes];
      }
      else {
      id v2 = +[GEOFeatureStyleAttributes customSavedRouteStyleAttributes];
      }
      [v4 setStyleAttributes:v2];
    }
    else
    {
      id v4 = 0;
    }
    sub_1009E12F4(*(void **)(a1 + 40));
    id v3 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue();
    ((void (**)(void, id, void))v3)[2](v3, v4, 0);
  }
}

void sub_100724E10(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Line Segment Integration" defaultsKey:@"MapsElevationGraphLineSegmentIntegralBucketingKey"];
}

void sub_1007259FC(id a1)
{
  v3[0] = UIContentSizeCategoryAccessibilityMedium;
  v3[1] = UIContentSizeCategoryAccessibilityLarge;
  v3[2] = UIContentSizeCategoryAccessibilityExtraLarge;
  v3[3] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  void v3[4] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:5];
  id v2 = (void *)qword_10160F688;
  qword_10160F688 = v1;
}

id sub_100725CF4()
{
  if (qword_10160F6A0 != -1) {
    dispatch_once(&qword_10160F6A0, &stru_1012F6980);
  }
  v0 = (void *)qword_10160F698;

  return v0;
}

id sub_100725E80(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:*(double *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:*(double *)(a1 + 40)];
  double v2 = *(double *)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 16);

  return [v3 setAlpha:v2];
}

void sub_1007265A0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSafetyView");
  double v2 = (void *)qword_10160F698;
  qword_10160F698 = (uint64_t)v1;
}

void sub_100726A60(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  double v2 = (void *)qword_10160F6A8;
  qword_10160F6A8 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F6A8 setLocale:v3];
}

void sub_100726FB8(id a1)
{
  uint64_t v1 = objc_opt_new();
  double v2 = (void *)qword_10160F6B8;
  qword_10160F6B8 = v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160F6B8 setLocale:v3];

  id v4 = (void *)qword_10160F6B8;

  [v4 setTimeStyle:1];
}

void sub_100728320(id a1)
{
  uint64_t v1 = objc_opt_new();
  double v2 = (void *)qword_10160F6C8;
  qword_10160F6C8 = v1;
}

void sub_10072835C(id a1)
{
  uint64_t v1 = objc_opt_new();
  double v2 = (void *)qword_10160F6D8;
  qword_10160F6D8 = v1;

  id v3 = (void *)qword_10160F6D8;

  [v3 setUnitStyle:3];
}

uint64_t sub_1007284FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 _containingAppIdentifer];
  LODWORD(a1) = [v4 isEqualToString:*(void *)(a1 + 32)];

  if (a1)
  {
    long long v5 = [v3 extensionPointIdentifier];
    uint64_t v6 = (uint64_t)[v5 isEqual:INIntentsUIServiceExtensionPointName];

    if (v6)
    {
      long long v13 = 0u;
      long long v14 = 0u;
      long long v11 = 0u;
      long long v12 = 0u;
      id v7 = +[_MXExtensionManager _maps_ridesharingIntentClassesForUIInteraction];
      uint64_t v6 = (uint64_t)[v7 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v6)
      {
        uint64_t v8 = *(void *)v12;
        while (2)
        {
          for (uint64_t i = 0; i != v6; ++i)
          {
            if (*(void *)v12 != v8) {
              objc_enumerationMutation(v7);
            }
            if ([v3 canSupportIntentClass:*(void *)(*((void *)&v11 + 1) + 8 * i)])
            {
              uint64_t v6 = 1;
              goto LABEL_14;
            }
          }
          uint64_t v6 = (uint64_t)[v7 countByEnumeratingWithState:&v11 objects:v15 count:16];
          if (v6) {
            continue;
          }
          break;
        }
      }
LABEL_14:
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_100728CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100728CFC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v8 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      id v9 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Shared/RidesharingConfirmedRideViewController.m");
      id v10 = [objc_alloc((Class)NSString) initWithFormat:@"Submit handler was tapped in feedback view. Rating: %@, tip: %@", v5, v6];
      *(_DWORD *)buf = 136315394;
      uint64_t v25 = v9;
      __int16 v26 = 2112;
      v27[0] = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    long long v11 = [WeakRetained[34] identifier];
    if ([v11 length])
    {
      long long v12 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 2 * (void)[v5 integerValue]);
      long long v13 = +[MKMapService sharedService];
      [v13 captureUserAction:14009 onTarget:1406 eventValue:0];

      [WeakRetained[39] sendFeedbackForRideStatus:WeakRetained[34] feedbackRating:v12 feedbackTip:v6 completion:&stru_1012F6A68];
      long long v14 = objc_loadWeakRetained(WeakRetained + 33);
      [v14 viewControllerSendFeedbackAction];
    }
    else
    {
      id v15 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        id v16 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Shared/RidesharingConfirmedRideViewController.m");
        id v17 = [objc_alloc((Class)NSString) initWithFormat:@"Trying to submit feedback, but the rideIdentifier is invalid. rideIdentifier: %@", v11];
        *(_DWORD *)buf = 136315394;
        uint64_t v25 = v16;
        __int16 v26 = 2112;
        v27[0] = v17;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      id v18 = +[NSBundle mainBundle];
      long long v12 = [v18 localizedStringForKey:@"ridesharing submit feedback error title" value:@"localized string not found" table:0];

      double v19 = +[NSBundle mainBundle];
      long long v14 = [v19 localizedStringForKey:@"ridesharing submit feedback error message" value:@"localized string not found" table:0];

      double v20 = +[UIAlertController alertControllerWithTitle:v12 message:v14 preferredStyle:1];
      id v21 = +[NSBundle mainBundle];
      id v22 = [v21 localizedStringForKey:@"ridesharing submit feedback error button ok" value:@"localized string not found" table:0];
      id v23 = +[UIAlertAction actionWithTitle:v22 style:1 handler:0];
      [v20 addAction:v23];

      [WeakRetained presentViewController:v20 animated:1 completion:0];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    long long v12 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      uint64_t v25 = "RidesharingConfirmedRideViewController.m";
      __int16 v26 = 1026;
      LODWORD(v27[0]) = 191;
      WORD2(v27[0]) = 2082;
      *(void *)((char *)v27 + 6) = "-[RidesharingConfirmedRideViewController viewDidLoad]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    long long v11 = v12;
  }
}

void sub_100729144(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _openAppTapped];
  }
  else
  {
    GEOFindOrCreateLog();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      id v5 = "RidesharingConfirmedRideViewController.m";
      __int16 v6 = 1026;
      int v7 = 222;
      __int16 v8 = 2082;
      id v9 = "-[RidesharingConfirmedRideViewController viewDidLoad]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_10072931C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = [*(id *)(a1 + 32) firstObject];
    int v4 = (void *)WeakRetained[42];
    WeakRetained[42] = v3;

    *(unsigned char *)(*(void *)(a1 + 40) + 249) = 0;
    [WeakRetained _updateFromRideStatus:WeakRetained[34]];
  }
  else
  {
    GEOFindOrCreateLog();
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 136446722;
      int v7 = "RidesharingConfirmedRideViewController.m";
      __int16 v8 = 1026;
      int v9 = 237;
      __int16 v10 = 2082;
      long long v11 = "-[RidesharingConfirmedRideViewController extensionManager:didUpdateAvailableExtensions:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v6, 0x1Cu);
    }
  }
}

void sub_100729644(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10072971C;
  block[3] = &unk_1012EF330;
  id v7 = *(id *)(a1 + 32);
  id v12 = v6;
  id v13 = v7;
  id v11 = v5;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_10072971C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_100729808(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 208) updateLayout];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];
}

void sub_100729B10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100729B34(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v11 = WeakRetained;
  if (WeakRetained)
  {
    if (v9)
    {
      [WeakRetained _cleanupWithRideStatus:*(void *)(a1 + 32)];
    }
    else
    {
      id v13 = [*(id *)(a1 + 32) application];
      long long v14 = [v13 name];
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_100729D90;
      v16[3] = &unk_1012EA2C0;
      objc_copyWeak(&v19, (id *)(a1 + 40));
      id v17 = *(id *)(a1 + 32);
      id v18 = 0;
      id v15 = [v11 _cancelConfirmationAlertControllerForApp:v14 withFee:v7 threshold:v8 continueBlock:v16];

      [v11 presentViewController:v15 animated:1 completion:0];
      objc_destroyWeak(&v19);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v12 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v21 = "RidesharingConfirmedRideViewController.m";
      __int16 v22 = 1026;
      int v23 = 301;
      __int16 v24 = 2082;
      uint64_t v25 = "-[RidesharingConfirmedRideViewController _cancelTapped:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100729D70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100729D90(id *a1, char a2)
{
  int v4 = a1 + 6;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      id v7 = [WeakRetained rideStatusObserverProxy];
      id v8 = a1[4];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_100729FA4;
      void v11[3] = &unk_1012F6B00;
      objc_copyWeak(&v14, v4);
      id v12 = a1[5];
      id v13 = a1[4];
      [v7 cancelRideWithRideStatus:v8 completion:v11];

      objc_destroyWeak(&v14);
    }
    else
    {
      __int16 v10 = [WeakRetained cancelButton];
      [v10 setSpinnerHidden:1];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      id v16 = "RidesharingConfirmedRideViewController.m";
      __int16 v17 = 1026;
      int v18 = 309;
      __int16 v19 = 2082;
      double v20 = "-[RidesharingConfirmedRideViewController _cancelTapped:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_100729F88(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100729FA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (!WeakRetained)
  {
    GEOFindOrCreateLog();
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136446722;
      id v8 = "RidesharingConfirmedRideViewController.m";
      __int16 v9 = 1026;
      int v10 = 317;
      __int16 v11 = 2082;
      id v12 = "-[RidesharingConfirmedRideViewController _cancelTapped:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf3 went away in %{public}s", (uint8_t *)&v7, 0x1Cu);
    }

    goto LABEL_8;
  }
  if (!*(void *)(a1 + 32))
  {
    id v6 = [WeakRetained coordinator];
    [v6 viewController:v5 minimizeConfirmation:0];
LABEL_8:

    goto LABEL_9;
  }
  [WeakRetained _cleanupWithRideStatus:*(void *)(a1 + 40)];
LABEL_9:
}

uint64_t sub_10072A854(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10072A868(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10072B68C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v9 = WeakRetained;
    id v3 = [WeakRetained coordinator];
    int v4 = [v3 containerViewController];
    id v5 = [v4 chromeViewController];
    id v6 = [v5 _maps_mapsSceneDelegate];
    int v7 = [v6 topMostPresentedViewController];

    id v8 = [v9 coordinator];
    [v8 viewController:v7 presentErrorAlertIfNeeded:*(void *)(a1 + 32)];

    id WeakRetained = v9;
  }
}

void sub_10072B758(uint64_t a1, void *a2, void *a3)
{
  id v12 = a2;
  id v6 = a3;
  id v7 = *(id *)(a1 + 32);
  objc_sync_enter(v7);
  id v8 = (id *)(*(void *)(a1 + 32) + 256);
  if (!*v8)
  {
    objc_storeStrong(v8, a2);
    uint64_t v9 = 22;
    +[ExtensionsViewComposer composeBannerView:*(void *)(*(void *)(a1 + 32) + 176) forRidesharingCurrentRideViewController:*(void *)(a1 + 32) rideBookingRideStatus:*(void *)(a1 + 40)];
    int v10 = *(void **)(a1 + 32);
    if (!v10[32]) {
      uint64_t v9 = 23;
    }
    [v10 _setBannerViewContainerContentView:v10[v9]];
    __int16 v11 = [*(id *)(a1 + 32) cardPresentationController];
    [v11 updateHeightForCurrentLayout];
  }
  objc_sync_exit(v7);
}

void sub_10072B84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10072B864(uint64_t a1, int a2, void *a3)
{
  id v7 = a3;
  id v6 = *(id *)(a1 + 32);
  objc_sync_enter(v6);
  if (a2)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 240), a3);
    [*(id *)(*(void *)(a1 + 32) + 288) setEnabled:1];
  }
  objc_sync_exit(v6);
}

void sub_10072B908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10072CF70(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) getRequestCountForType:a2 andApp:*(void *)(a1 + 40)];
  if (v4)
  {
    id v5 = v4;
    id v6 = GEODataRequestKindAsString();
    id v7 = [*(id *)(a1 + 48) objectForKeyedSubscript:v6];
    if (!v7)
    {
      id v7 = objc_opt_new();
      [v7 setObject:&off_1013A83F8 forKeyedSubscript:@"xmitB"];
      [v7 setObject:&off_1013A83F8 forKeyedSubscript:@"recvB"];
      id v8 = objc_opt_new();
      [v7 setObject:v8 forKeyedSubscript:@"apps"];

      [*(id *)(a1 + 48) setObject:v7 forKeyedSubscript:v6];
      [*(id *)(a1 + 56) addObject:v6];
    }
    uint64_t v9 = (char *)[*(id *)(a1 + 64) xmitBytesForType:a2];
    int v10 = (char *)[*(id *)(a1 + 64) recvBytesForType:a2];
    __int16 v11 = [v7 objectForKeyedSubscript:@"xmitB"];
    id v12 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", &v9[(void)[v11 unsignedIntegerValue]]);
    [v7 setObject:v12 forKeyedSubscript:@"xmitB"];

    id v13 = [v7 objectForKeyedSubscript:@"recvB"];
    id v14 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", &v10[(void)[v13 unsignedIntegerValue]]);
    [v7 setObject:v14 forKeyedSubscript:@"recvB"];

    id v15 = +[NSByteCountFormatter stringFromByteCount:v9 countStyle:3];
    id v16 = +[NSByteCountFormatter stringFromByteCount:v10 countStyle:3];
    __int16 v17 = [v7 objectForKeyedSubscript:@"apps"];
    v22[0] = *(void *)(a1 + 40);
    v21[0] = @"name";
    v21[1] = @"count";
    int v18 = +[NSNumber numberWithUnsignedInteger:v5];
    __int16 v19 = [v18 stringValue];
    v22[1] = v19;
    v22[2] = v15;
    v21[2] = @"xmitB";
    v21[3] = @"recvB";
    v22[3] = v16;
    double v20 = +[NSDictionary dictionaryWithObjects:v22 forKeys:v21 count:4];
    [v17 addObject:v20];
  }
}

id sub_10072DC48(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateETACalloutFromDetailsPickingProviderAndMapMoving];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 _moveMapToNewStartWaypointIfNeededAnimated:0];
}

void sub_10072DFF0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];
}

void sub_10072E404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10072E42C(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10072E4C8;
  v2[3] = &unk_1012E6690;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  void v2[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
  objc_destroyWeak(&v3);
}

void sub_10072E4C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    *((unsigned char *)WeakRetained + 452) = 1;
    [*(id *)(a1 + 32) _updateETACalloutFromDetailsPickingProviderAndMapMoving];
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      id v6 = "RidesharingContainerViewController.m";
      __int16 v7 = 1026;
      int v8 = 210;
      __int16 v9 = 2082;
      int v10 = "-[RidesharingContainerViewController requestRideStatusDidChange:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

BOOL sub_10072FF94()
{
  v0 = +[UIScreen mainScreen];
  [v0 bounds];
  BOOL v2 = v1 == 320.0;

  return v2;
}

void sub_100730080(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  BOOL v2 = (void *)qword_10160F6E8;
  qword_10160F6E8 = (uint64_t)v1;
}

id sub_100730444(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  int v5 = [v4 lastObject];
  id v6 = *(void **)(a1 + 32);

  if (v5 != v6)
  {
    id v7 = v4;
    goto LABEL_14;
  }
  int v8 = sub_100015DB4();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    id v9 = *(id *)(a1 + 32);
    if (!v9)
    {
      id v14 = @"<nil>";
      goto LABEL_12;
    }
    int v10 = (objc_class *)objc_opt_class();
    __int16 v11 = NSStringFromClass(v10);
    if (objc_opt_respondsToSelector())
    {
      id v12 = [v9 performSelector:"accessibilityIdentifier"];
      id v13 = v12;
      if (v12 && ![v12 isEqualToString:v11])
      {
        id v14 = +[NSString stringWithFormat:@"%@<%p, %@>", v11, v9, v13];

        goto LABEL_10;
      }
    }
    id v14 = +[NSString stringWithFormat:@"%@<%p>", v11, v9];
LABEL_10:

LABEL_12:
    *(_DWORD *)buf = 138412546;
    int v18 = v14;
    __int16 v19 = 2112;
    id v20 = v4;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Will pop mode (%@) And all contexts: %@", buf, 0x16u);
  }
  objc_msgSend(v4, "subarrayWithRange:", 0, (char *)objc_msgSend(v4, "count") - 1);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
LABEL_14:
  id v15 = v7;

  return v15;
}

NSArray *__cdecl sub_100730BA8(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = [(NSArray *)v4 lastObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0)
  {
    id v20 = sub_100015DB4();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
    {
      id v21 = [(NSArray *)v4 lastObject];
      __int16 v22 = (objc_class *)objc_opt_class();
      int v23 = NSStringFromClass(v22);
      int v25 = 138412290;
      __int16 v26 = v23;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Will not push CarRouteGeniusModeController, topContext=%@", (uint8_t *)&v25, 0xCu);
    }
    goto LABEL_13;
  }
  id v7 = +[CarRouteGeniusService sharedService];
  unsigned __int8 v8 = [v7 isActive];

  if ((v8 & 1) == 0)
  {
    id v20 = sub_100015DB4();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v25) = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Will not push CarRouteGeniusModeController, reason: RouteGenius Not running.", (uint8_t *)&v25, 2u);
    }
LABEL_13:

    __int16 v19 = v4;
    goto LABEL_18;
  }
  id v9 = +[CarRouteGeniusService sharedService];
  int v10 = [v9 suggestion];

  __int16 v11 = sub_100015DB4();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG);
  BOOL v13 = v12;
  if (v10)
  {

    if (v13)
    {
      id v14 = sub_100015DB4();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
      {
        int v25 = 138412290;
        __int16 v26 = v10;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Will push CarRouteGeniusModeController with suggestion:[%@]", (uint8_t *)&v25, 0xCu);
      }
    }
    id v15 = [CarRouteGeniusModeController alloc];
    id v16 = +[CarRouteGeniusService sharedService];
    __int16 v17 = [v16 suggestion];
    int v18 = [(CarRouteGeniusModeController *)v15 initWithSuggestion:v17];

    __int16 v19 = [(NSArray *)v4 arrayByAddingObject:v18];
  }
  else
  {
    if (v12)
    {
      LOWORD(v25) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Will not push CarRouteGeniusModeController, reason: predicted destination is nil.", (uint8_t *)&v25, 2u);
    }

    __int16 v19 = v4;
  }

LABEL_18:

  return v19;
}

NSArray *__cdecl sub_100730E74(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  int v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v7 = v5;
  }
  else {
    id v7 = 0;
  }
  unsigned __int8 v8 = v7;
  id v9 = [(ChromeViewController *)v8 sceneType];

  if ((unint64_t)v9 < 4)
  {
    __int16 v17 = [(NSArray *)v6 lastObject];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      __int16 v19 = +[CarRouteGeniusService sharedService];
      id v20 = [v19 suggestion];

      if (v20)
      {
        id v21 = [CarMapWidgetRouteGeniusModeController alloc];
        __int16 v22 = +[CarRouteGeniusService sharedService];
        int v23 = [v22 suggestion];
        __int16 v24 = [(CarBasicRouteGeniusModeController *)v21 initWithSuggestion:v23];

        int v25 = [(NSArray *)v6 arrayByAddingObject:v24];

        goto LABEL_14;
      }
      int v10 = sub_100577D9C();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v2_Block_object_dispose(&STACK[0x238], 8) = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Will not push CarMapWidgeRouteGeniusModeController, reason: predicted destination is nil.", (uint8_t *)&v28, 2u);
      }
    }
    else
    {
      int v10 = sub_100577D9C();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        __int16 v11 = [(NSArray *)v6 lastObject];
        __int16 v26 = (objc_class *)objc_opt_class();
        BOOL v13 = NSStringFromClass(v26);
        int v28 = 138412290;
        uint64_t v29 = v13;
        id v14 = "Will not push CarMapWidgetRouteGeniusModeController, topContext=%@";
        id v15 = v10;
        os_log_type_t v16 = OS_LOG_TYPE_DEBUG;
        goto LABEL_12;
      }
    }
  }
  else
  {
    int v10 = sub_100577D9C();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      __int16 v11 = [(NSArray *)v6 lastObject];
      BOOL v12 = (objc_class *)objc_opt_class();
      BOOL v13 = NSStringFromClass(v12);
      int v28 = 138412290;
      uint64_t v29 = v13;
      id v14 = "Will not push CarMapWidgetRouteGeniusModeController as RG is not supported for this sceneType, topContext=%@";
      id v15 = v10;
      os_log_type_t v16 = OS_LOG_TYPE_INFO;
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v15, v16, v14, (uint8_t *)&v28, 0xCu);
    }
  }

  int v25 = v6;
LABEL_14:

  return v25;
}

NSArray *__cdecl sub_10073112C(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  int v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v7 = v5;
  }
  else {
    id v7 = 0;
  }
  unsigned __int8 v8 = v7;
  id v9 = [(ChromeViewController *)v8 sceneType];

  if ((unint64_t)v9 < 4)
  {
    __int16 v17 = [(NSArray *)v6 lastObject];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      __int16 v19 = +[CarRouteGeniusService sharedService];
      id v20 = [v19 suggestion];

      if (v20)
      {
        id v21 = [CarSmallWidgetRouteGeniusModeController alloc];
        __int16 v22 = +[CarRouteGeniusService sharedService];
        int v23 = [v22 suggestion];
        __int16 v24 = [(CarSmallWidgetRouteGeniusModeController *)v21 initWithSuggestion:v23];

        int v25 = [(NSArray *)v6 arrayByAddingObject:v24];

        goto LABEL_14;
      }
      int v10 = sub_100577F64();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v2_Block_object_dispose(&STACK[0x238], 8) = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Will not push CarSmallWidgetRouteGeniusModeController, reason: predicted destination is nil.", (uint8_t *)&v28, 2u);
      }
    }
    else
    {
      int v10 = sub_100577F64();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        __int16 v11 = [(NSArray *)v6 lastObject];
        __int16 v26 = (objc_class *)objc_opt_class();
        BOOL v13 = NSStringFromClass(v26);
        int v28 = 138412290;
        uint64_t v29 = v13;
        id v14 = "Will not push CarSmallWidgetRouteGeniusModeController, topContext=%@";
        id v15 = v10;
        os_log_type_t v16 = OS_LOG_TYPE_DEBUG;
        goto LABEL_12;
      }
    }
  }
  else
  {
    int v10 = sub_100577D9C();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      __int16 v11 = [(NSArray *)v6 lastObject];
      BOOL v12 = (objc_class *)objc_opt_class();
      BOOL v13 = NSStringFromClass(v12);
      int v28 = 138412290;
      uint64_t v29 = v13;
      id v14 = "Will not push CarSmallWidgetRouteGeniusModeController as RG is not supported for this sceneType, topContext=%@";
      id v15 = v10;
      os_log_type_t v16 = OS_LOG_TYPE_INFO;
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v15, v16, v14, (uint8_t *)&v28, 0xCu);
    }
  }

  int v25 = v6;
LABEL_14:

  return v25;
}

NSArray *__cdecl sub_100731400(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = [(NSArray *)v4 _maps_lastContextOfClass:objc_opt_class()];
  if (v5)
  {
    id v6 = sub_100015DB4();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)int v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Removing RouteGenius mode", v10, 2u);
    }

    id v7 = [(NSArray *)v4 mutableCopy];
    [v7 removeObject:v5];
    unsigned __int8 v8 = (NSArray *)[v7 copy];
  }
  else
  {
    unsigned __int8 v8 = v4;
  }

  return v8;
}

NSArray *__cdecl sub_1007314E8(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = [(NSArray *)v4 _maps_lastContextOfClass:objc_opt_class()];
  if (v5)
  {
    id v6 = sub_100577D9C();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)int v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Removing RouteGenius mode", v10, 2u);
    }

    id v7 = [(NSArray *)v4 mutableCopy];
    [v7 removeObject:v5];
    unsigned __int8 v8 = (NSArray *)[v7 copy];
  }
  else
  {
    unsigned __int8 v8 = v4;
  }

  return v8;
}

NSArray *__cdecl sub_1007315D0(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = [(NSArray *)v4 _maps_lastContextOfClass:objc_opt_class()];
  if (v5)
  {
    id v6 = sub_100577F64();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)int v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Removing RouteGenius mode", v10, 2u);
    }

    id v7 = [(NSArray *)v4 mutableCopy];
    [v7 removeObject:v5];
    unsigned __int8 v8 = (NSArray *)[v7 copy];
  }
  else
  {
    unsigned __int8 v8 = v4;
  }

  return v8;
}

NSArray *__cdecl sub_1007316D4(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = [(NSArray *)v4 firstObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  id v7 = sub_100015DB4();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      __int16 v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will pop to existing CarMapBrowsingModeController", (uint8_t *)&v13, 2u);
    }

    id v9 = [(NSArray *)v4 firstObject];
    id v15 = v9;
    int v10 = &v15;
  }
  else
  {
    if (v8)
    {
      __int16 v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will replace all contexts with CarMapBrowsingModeController", (uint8_t *)&v13, 2u);
    }

    id v9 = objc_alloc_init(CarMapBrowsingModeController);
    id v14 = v9;
    int v10 = &v14;
  }
  __int16 v11 = +[NSArray arrayWithObjects:v10 count:1];

  return (NSArray *)v11;
}

NSArray *__cdecl sub_10073183C(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = [(NSArray *)v4 firstObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  id v7 = sub_100577D9C();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      __int16 v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will pop to existing CarMapWidgetMapBrowsingModeController", (uint8_t *)&v13, 2u);
    }

    id v9 = [(NSArray *)v4 firstObject];
    id v15 = v9;
    int v10 = &v15;
  }
  else
  {
    if (v8)
    {
      __int16 v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will replace all contexts with CarMapWidgetMapBrowsingModeController", (uint8_t *)&v13, 2u);
    }

    id v9 = objc_alloc_init(CarMapWidgetMapBrowsingModeController);
    id v14 = v9;
    int v10 = &v14;
  }
  __int16 v11 = +[NSArray arrayWithObjects:v10 count:1];

  return (NSArray *)v11;
}

NSArray *__cdecl sub_1007319A4(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = [(NSArray *)v4 firstObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  id v7 = sub_100577F64();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      __int16 v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will pop to existing CarSmallWidgetBrowsingModeController", (uint8_t *)&v13, 2u);
    }

    id v9 = [(NSArray *)v4 firstObject];
    id v15 = v9;
    int v10 = &v15;
  }
  else
  {
    if (v8)
    {
      __int16 v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will replace all contexts with CarSmallWidgetBrowsingModeController", (uint8_t *)&v13, 2u);
    }

    id v9 = objc_alloc_init(CarSmallWidgetBrowsingModeController);
    id v14 = v9;
    int v10 = &v14;
  }
  __int16 v11 = +[NSArray arrayWithObjects:v10 count:1];

  return (NSArray *)v11;
}

id sub_100731CE8(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  [v6 _maps_lastContextOfClass:objc_opt_class()];
  id v7 = (CarMapBrowsingModeController *)objc_claimAutoreleasedReturnValue();

  if (!v7) {
    id v7 = objc_alloc_init(CarMapBrowsingModeController);
  }
  -[CarBasicMapBrowsingModeController setVisibleMapRegion:animated:](v7, "setVisibleMapRegion:animated:", *(unsigned __int8 *)(a1 + 64), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56));
  if (a4) {
    *a4 = *(unsigned char *)(a1 + 64);
  }
  int v10 = v7;
  BOOL v8 = +[NSArray arrayWithObjects:&v10 count:1];

  return v8;
}

id sub_100731DE8(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  [v6 _maps_lastContextOfClass:[objc_opt_class()]];
  id v7 = (CarMapWidgetMapBrowsingModeController *)objc_claimAutoreleasedReturnValue();

  if (!v7) {
    id v7 = objc_alloc_init(CarMapWidgetMapBrowsingModeController);
  }
  -[CarBasicMapBrowsingModeController setVisibleMapRegion:animated:](v7, "setVisibleMapRegion:animated:", *(unsigned __int8 *)(a1 + 64), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56));
  if (a4) {
    *a4 = *(unsigned char *)(a1 + 64);
  }
  int v10 = v7;
  BOOL v8 = +[NSArray arrayWithObjects:&v10 count:1];

  return v8;
}

NSArray *__cdecl sub_100731EFC(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = sub_100015DB4();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will push CarMapPanningModeController", v9, 2u);
  }

  id v6 = objc_alloc_init(CarMapPanningModeController);
  id v7 = [(NSArray *)v4 arrayByAddingObject:v6];

  return (NSArray *)v7;
}

NSArray *__cdecl sub_100731FC8(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  int v5 = sub_100015DB4();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)BOOL v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will push CarDestinationsModeController onto existing CarMapBrowsingModeController", v12, 2u);
  }

  id v6 = [(NSArray *)v4 firstObject];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v7 = [(NSArray *)v4 firstObject];
  }
  else
  {
    uint64_t v7 = objc_opt_new();
  }
  BOOL v8 = (void *)v7;

  id v9 = objc_alloc_init(CarDestinationsModeController);
  v13[0] = v8;
  v13[1] = v9;
  int v10 = +[NSArray arrayWithObjects:v13 count:2];

  return (NSArray *)v10;
}

void sub_1007323E4(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  id v6 = v5;
  if (v11)
  {
    uint64_t v7 = +[SearchFieldItem searchFieldItemWithObject:v11];
  }
  else if (v5)
  {
    BOOL v8 = [SearchResult alloc];
    id v9 = [v6 mapItem];
    int v10 = [(SearchResult *)v8 initWithMapItem:v9];

    uint64_t v7 = +[SearchFieldItem searchFieldItemWithObject:v10];
  }
  else
  {
    uint64_t v7 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100732594(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) startSearch:a2];
}

id sub_1007328C0(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = +[CarDisplayController sharedInstance];
  if ([a1[4] isOptionsLowFuel] && !objc_msgSend(a1[4], "origin"))
  {
    id v6 = +[CarDisplayController sharedInstance];
    uint64_t v7 = [v6 mapsSuggestionsController];
    [v7 setAllowLowFuelAlert:0];
  }
  BOOL v8 = [a1[5] results];
  if ([v8 count] == (id)1 || (objc_msgSend(a1[5], "shouldPreserveResults") & 1) != 0)
  {
    BOOL v9 = 0;
  }
  else if ([a1[4] isOptionsLowFuel])
  {
    __int16 v19 = [a1[5] results];
    BOOL v9 = [v19 count] == 0;
  }
  else
  {
    BOOL v9 = 1;
  }

  if ([a1[5] shouldPreserveResults])
  {
    uint64_t v10 = [v4 _maps_lastContextOfClass:objc_opt_class()];
    if (v10)
    {
      id v11 = (void *)v10;
      BOOL v12 = sub_100015DB4();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
      {
LABEL_16:

        [v11 setSearchSession:a1[4]];
LABEL_43:
        long long v34 = 0;
        goto LABEL_82;
      }
      id v13 = v11;
      id v14 = (objc_class *)objc_opt_class();
      id v15 = NSStringFromClass(v14);
      if (objc_opt_respondsToSelector())
      {
        os_log_type_t v16 = [v13 performSelector:"accessibilityIdentifier"];
        __int16 v17 = v16;
        if (v16 && ![v16 isEqualToString:v15])
        {
          int v18 = +[NSString stringWithFormat:@"%@<%p, %@>", v15, v13, v17];

          goto LABEL_15;
        }
      }
      int v18 = +[NSString stringWithFormat:@"%@<%p>", v15, v13];
LABEL_15:

      *(_DWORD *)buf = 138412290;
      long long v57 = v18;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Will reuse existing %@ (shouldPreserveResults)", buf, 0xCu);

      goto LABEL_16;
    }
    id v20 = [v4 _maps_lastContextOfClass:objc_opt_class()];
    id v21 = sub_100015DB4();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG);
    if (v20)
    {
      if (!v22)
      {
LABEL_27:

        [v20 setSearchSession:a1[4]];
        goto LABEL_43;
      }
      id v23 = v20;
      __int16 v24 = (objc_class *)objc_opt_class();
      int v25 = NSStringFromClass(v24);
      if (objc_opt_respondsToSelector())
      {
        __int16 v26 = [v23 performSelector:"accessibilityIdentifier"];
        uint64_t v27 = v26;
        if (v26 && ![v26 isEqualToString:v25])
        {
          int v28 = +[NSString stringWithFormat:@"%@<%p, %@>", v25, v23, v27];

          goto LABEL_26;
        }
      }
      int v28 = +[NSString stringWithFormat:@"%@<%p>", v25, v23];
LABEL_26:

      *(_DWORD *)buf = 138412290;
      long long v57 = v28;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "Will reuse existing %@ (shouldPreserveResults)", buf, 0xCu);

      goto LABEL_27;
    }
    if (v22)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "Should preserve results, but no existing search mode to reuse", buf, 2u);
    }
  }
  if ([v5 isCarAppSceneHostingNavigation]
    && [a1[5] isSearchAlongRoute])
  {
    uint64_t v29 = sub_100015DB4();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
    {
      if ([a1[5] isSearchAlongRoute]) {
        id v30 = @"YES";
      }
      else {
        id v30 = @"NO";
      }
      id v31 = v30;
      if ([a1[5] shouldPreserveResults]) {
        uint64_t v32 = @"YES";
      }
      else {
        uint64_t v32 = @"NO";
      }
      id v33 = v32;
      *(_DWORD *)buf = 138412546;
      long long v57 = v31;
      __int16 v58 = 2112;
      long long v59 = v33;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "Will show results as SAR, we're currently navigating (isSearchAlongRoute:%@, shouldPreserveResults:%@)", buf, 0x16u);
    }
    [a1[6] _displaySearchAlongTheRouteForSearchSession:a1[4]];
    goto LABEL_43;
  }
  if (([v5 isCarAppSceneHostingNavigation] | v9) == 1)
  {
    long long v35 = sub_100015DB4();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG))
    {
      if ([v5 isCarAppSceneHostingNavigation]) {
        long long v36 = @"YES";
      }
      else {
        long long v36 = @"NO";
      }
      long long v37 = v36;
      if (v9) {
        id v38 = @"YES";
      }
      else {
        id v38 = @"NO";
      }
      id v39 = v38;
      *(_DWORD *)buf = 138412546;
      long long v57 = v37;
      __int16 v58 = 2112;
      long long v59 = v39;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEBUG, "Will show CarSearchResultsModeController (isHostingNavigation:%@, preferListOnly:%@)", buf, 0x16u);
    }
    [v4 _maps_lastContextOfClass:objc_opt_class()];
    id v40 = (id)objc_claimAutoreleasedReturnValue();
    id v41 = sub_100015DB4();
    BOOL v42 = os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG);
    if (v40)
    {
      if (v42)
      {
        *(_WORD *)buf = 0;
LABEL_69:
        _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "Reuse existing CarSearchResultsModeController", buf, 2u);
        goto LABEL_70;
      }
      goto LABEL_70;
    }
    if (v42)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "Create new CarSearchResultsModeController", buf, 2u);
    }
    goto LABEL_79;
  }
  long long v43 = [a1[5] results];
  id v44 = [v43 count];

  if (v44 == (id)1)
  {
    if (![a1[4] origin]
      && +[UIApplication _maps_isAnySceneForegroundForRole:UIWindowSceneSessionRoleApplication])
    {
      long long v45 = sub_100015DB4();
      if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEBUG, "Ignoring search with one result that originated on the phone. (until user gets to route routePlanning)", buf, 2u);
      }

      goto LABEL_43;
    }
    long long v53 = sub_100015DB4();
    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEBUG, "Will show CarRoutePlanningModeController, only one search result", buf, 2u);
    }

    long long v54 = CarRoutePlanningModeController;
    goto LABEL_80;
  }
  long long v46 = sub_100015DB4();
  if (os_log_type_enabled(v46, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEBUG, "Will show CarSearchResultsModeController, because there are multiple results and are not currently navigating", buf, 2u);
  }

  [v4 _maps_lastContextOfClass:objc_opt_class()];
  id v40 = (id)objc_claimAutoreleasedReturnValue();
  id v47 = [a1[4] searchInfo];
  id v48 = [v47 selectedIndex];
  long long v49 = [a1[4] currentResults];
  id v50 = [v49 count];

  if (v48 >= v50) {
    [a1[4] setSelectedResultIndex:0];
  }
  id v41 = sub_100015DB4();
  BOOL v51 = os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG);
  if (!v40)
  {
    if (v51)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "Create new CarSearchResultsModeController", buf, 2u);
    }
LABEL_79:

    long long v54 = CarSearchResultsModeController;
LABEL_80:
    id v40 = [[v54 alloc] initWithSearchSession:a1[4]];
    uint64_t v52 = [a1[6] _replaceTopmostSearchResultContexts:v4 withContext:v40];
    goto LABEL_81;
  }
  if (v51)
  {
    *(_WORD *)buf = 0;
    goto LABEL_69;
  }
LABEL_70:

  [v40 setSearchInfo:a1[5]];
  uint64_t v52 = [v4 _maps_subarrayToIndex:[v4 indexOfObject:v40]];
LABEL_81:
  long long v34 = (void *)v52;

LABEL_82:

  return v34;
}

id sub_10073323C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [v4 lastObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  uint64_t v7 = sub_100015DB4();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v15 = 138412290;
      uint64_t v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will update existing SAR mode for %@ category", (uint8_t *)&v15, 0xCu);
    }

    uint64_t v10 = [v4 lastObject];
    [(CarNavigationSearchResultsModeController *)v10 setCategory:*(void *)(a1 + 32)];
    id v11 = 0;
  }
  else
  {
    if (v8)
    {
      uint64_t v12 = *(void *)(a1 + 32);
      int v15 = 138412290;
      uint64_t v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will push SAR mode for %@ category", (uint8_t *)&v15, 0xCu);
    }

    uint64_t v10 = [[CarNavigationSearchResultsModeController alloc] initWithCategory:*(void *)(a1 + 32)];
    id v13 = [*(id *)(a1 + 40) _replaceTopmostSearchResultContexts:v4 withContext:v10];

    id v11 = [v13 copy];
    id v4 = v13;
  }

  return v11;
}

id sub_100733508(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [v4 lastObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  uint64_t v7 = sub_100015DB4();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      uint64_t v9 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) count]);
      int v15 = 138412290;
      uint64_t v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will update existing SAR mode for %@ results", (uint8_t *)&v15, 0xCu);
    }
    uint64_t v10 = [v4 lastObject];
    [(CarNavigationSearchResultsModeController *)v10 setSearchSession:*(void *)(a1 + 40)];
    id v11 = 0;
  }
  else
  {
    if (v8)
    {
      uint64_t v12 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) count]);
      int v15 = 138412290;
      uint64_t v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will push SAR mode for %@ results", (uint8_t *)&v15, 0xCu);
    }
    uint64_t v10 = [[CarNavigationSearchResultsModeController alloc] initWithSearchSession:*(void *)(a1 + 40)];
    id v13 = [*(id *)(a1 + 48) _replaceTopmostSearchResultContexts:v4 withContext:v10];

    id v11 = [v13 copy];
    id v4 = v13;
  }

  return v11;
}

id sub_100733808(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [v4 lastObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  uint64_t v7 = sub_100015DB4();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      uint64_t v9 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) count]);
      int v14 = 138412290;
      int v15 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will update existing SAR mode for %@ results", (uint8_t *)&v14, 0xCu);
    }
    uint64_t v10 = [v4 lastObject];

    [(CarNavigationSearchResultsModeController *)v10 setMapItems:*(void *)(a1 + 32) selectedItemIndex:*(void *)(a1 + 40)];
    id v11 = 0;
  }
  else
  {
    if (v8)
    {
      uint64_t v12 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) count]);
      int v14 = 138412290;
      int v15 = v12;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will push SAR mode for %@ results", (uint8_t *)&v14, 0xCu);
    }
    uint64_t v10 = [[CarNavigationSearchResultsModeController alloc] initWithMapItems:*(void *)(a1 + 32) selectedItemIndex:*(void *)(a1 + 40)];
    id v11 = [v4 arrayByAddingObject:v10];
  }

  return v11;
}

id sub_100733AE8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = +[SearchSession currentSearchSession];
  id v6 = (void *)v5;
  if (v5 && v5 != *(void *)(a1 + 32))
  {
    sub_100015DB4();
    uint64_t v7 = (CarMapBrowsingModeController *)objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(&v7->super.super, OS_LOG_TYPE_DEBUG))
    {
LABEL_31:
      id v21 = 0;
      goto LABEL_32;
    }
    id v8 = *(id *)(a1 + 32);
    if (!v8)
    {
      id v13 = @"<nil>";
LABEL_25:

      BOOL v22 = v13;
      id v23 = v6;
      __int16 v24 = (objc_class *)objc_opt_class();
      int v25 = NSStringFromClass(v24);
      if (objc_opt_respondsToSelector())
      {
        __int16 v26 = [v23 performSelector:"accessibilityIdentifier"];
        uint64_t v27 = v26;
        if (v26 && ![v26 isEqualToString:v25])
        {
          int v28 = +[NSString stringWithFormat:@"%@<%p, %@>", v25, v23, v27];

          goto LABEL_30;
        }
      }
      int v28 = +[NSString stringWithFormat:@"%@<%p>", v25, v23];
LABEL_30:

      *(_DWORD *)buf = 138412546;
      uint64_t v32 = v22;
      __int16 v33 = 2112;
      long long v34 = v28;
      _os_log_impl((void *)&_mh_execute_header, &v7->super.super, OS_LOG_TYPE_DEBUG, "Will not end displaying SearchSession, a new one has come in that we're about to display (try to end: %@, expected incoming: %@)", buf, 0x16u);

      goto LABEL_31;
    }
    uint64_t v9 = (objc_class *)objc_opt_class();
    uint64_t v10 = NSStringFromClass(v9);
    if (objc_opt_respondsToSelector())
    {
      id v11 = [v8 performSelector:"accessibilityIdentifier"];
      uint64_t v12 = v11;
      if (v11 && ![v11 isEqualToString:v10])
      {
        id v13 = +[NSString stringWithFormat:@"%@<%p, %@>", v10, v8, v12];

        goto LABEL_10;
      }
    }
    id v13 = +[NSString stringWithFormat:@"%@<%p>", v10, v8];
LABEL_10:

    goto LABEL_25;
  }
  int v14 = sub_100015DB4();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    id v15 = *(id *)(a1 + 32);
    if (!v15)
    {
      id v20 = @"<nil>";
      goto LABEL_20;
    }
    uint64_t v16 = (objc_class *)objc_opt_class();
    __int16 v17 = NSStringFromClass(v16);
    if (objc_opt_respondsToSelector())
    {
      int v18 = [v15 performSelector:"accessibilityIdentifier"];
      __int16 v19 = v18;
      if (v18 && ![v18 isEqualToString:v17])
      {
        id v20 = +[NSString stringWithFormat:@"%@<%p, %@>", v17, v15, v19];

        goto LABEL_18;
      }
    }
    id v20 = +[NSString stringWithFormat:@"%@<%p>", v17, v15];
LABEL_18:

LABEL_20:
    *(_DWORD *)buf = 138412290;
    uint64_t v32 = v20;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Will pop down to map browsing to stop displaying SearchSession %@", buf, 0xCu);
  }
  [v4 _maps_lastContextOfClass:objc_opt_class()];
  uint64_t v7 = (CarMapBrowsingModeController *)objc_claimAutoreleasedReturnValue();
  if (!v7) {
    uint64_t v7 = objc_alloc_init(CarMapBrowsingModeController);
  }
  id v30 = v7;
  id v21 = +[NSArray arrayWithObjects:&v30 count:1];
LABEL_32:

  return v21;
}

id sub_100733F88(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [v4 lastObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  sub_100015DB4();
  uint64_t v7 = (CarIncidentReportModeController *)objc_claimAutoreleasedReturnValue();
  BOOL v8 = os_log_type_enabled(&v7->super, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, &v7->super, OS_LOG_TYPE_DEBUG, "Already showing CarIncidentReportModeController", buf, 2u);
    }
    id v9 = 0;
  }
  else
  {
    if (v8)
    {
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, &v7->super, OS_LOG_TYPE_DEBUG, "Will push CarIncidentReportModeController", v12, 2u);
    }

    uint64_t v7 = objc_alloc_init(CarIncidentReportModeController);
    uint64_t v10 = [*(id *)(a1 + 32) _replaceTopmostSearchResultContexts:v4 withContext:v7];

    id v9 = [v10 copy];
    id v4 = v10;
  }

  return v9;
}

id sub_10073419C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [v4 lastObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  uint64_t v7 = sub_100015DB4();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Already showing CarIncidentReportModeController", buf, 2u);
    }

    id v9 = [v4 lastObject];
    [(CarIncidentReportModeController *)v9 setIncidentLayoutItem:*(void *)(a1 + 32) report:*(void *)(a1 + 40)];
    id v10 = 0;
  }
  else
  {
    if (v8)
    {
      *(_WORD *)id v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will push CarIncidentReportModeController", v13, 2u);
    }

    id v9 = objc_alloc_init(CarIncidentReportModeController);
    [(CarIncidentReportModeController *)v9 setIncidentLayoutItem:*(void *)(a1 + 32) report:*(void *)(a1 + 40)];
    id v11 = [*(id *)(a1 + 48) _replaceTopmostSearchResultContexts:v4 withContext:v9];

    id v10 = [v11 copy];
    id v4 = v11;
  }

  return v10;
}

void sub_10073448C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007344A4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0 || *(unsigned char *)(a1 + 40))
        {
          BOOL v8 = sub_100015DB4();
          if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
          {
LABEL_16:

            *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
            *a4 = 1;
            goto LABEL_17;
          }
          id v9 = v7;
          if (!v9)
          {
            int v14 = @"<nil>";
            goto LABEL_15;
          }
          id v10 = (objc_class *)objc_opt_class();
          id v11 = NSStringFromClass(v10);
          if (objc_opt_respondsToSelector())
          {
            uint64_t v12 = [v9 performSelector:"accessibilityIdentifier"];
            id v13 = v12;
            if (v12 && ![v12 isEqualToString:v11])
            {
              int v14 = +[NSString stringWithFormat:@"%@<%p, %@>", v11, v9, v13];

              goto LABEL_13;
            }
          }
          int v14 = +[NSString stringWithFormat:@"%@<%p>", v11, v9];
LABEL_13:

LABEL_15:
          *(_DWORD *)buf = 138412290;
          uint64_t v16 = v14;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Found top-most non-search mode %@", buf, 0xCu);

          goto LABEL_16;
        }
      }
    }
  }
LABEL_17:
}

NSArray *__cdecl sub_1007346E4(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  uint64_t v5 = sub_100015DB4();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will push CarSearchModeController.", v9, 2u);
  }

  id v6 = objc_alloc_init(CarSearchCategoriesModeController);
  id v7 = [(NSArray *)v4 arrayByAddingObject:v6];

  return (NSArray *)v7;
}

id sub_100734BF4(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  id v7 = +[NSMutableArray arrayWithArray:v6];
  BOOL v8 = [v6 lastObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v10 = sub_100015DB4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v22) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Will remove existing CarKeyboardModeController", (uint8_t *)&v22, 2u);
    }

    [v7 removeLastObject];
  }
  id v11 = sub_100015DB4();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    if (*(unsigned char *)(a1 + 48)) {
      uint64_t v12 = @"YES";
    }
    else {
      uint64_t v12 = @"NO";
    }
    id v13 = v12;
    int v22 = 138412290;
    id v23 = v13;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Will push CarKeyboardModeController (animated:%@)", (uint8_t *)&v22, 0xCu);
  }
  int v14 = [v6 lastObject];
  if (objc_opt_respondsToSelector())
  {
    id v15 = [v6 lastObject];
    id v16 = [v15 currentUsageTarget];
  }
  else
  {
    id v16 = 0;
  }

  __int16 v17 = +[CarDisplayController sharedInstance];
  int v18 = [v17 chromeViewController];
  [v18 captureUserAction:9019 onTarget:v16];

  if (a4) {
    *a4 = *(unsigned char *)(a1 + 48);
  }
  __int16 v19 = [[CarKeyboardModeController alloc] initWithRequestedInteractionModel:*(void *)(a1 + 40) resultsProvider:*(void *)(a1 + 32)];
  id v20 = [v7 arrayByAddingObject:v19];

  return v20;
}

NSArray *__cdecl sub_100734E60(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  uint64_t v5 = [(NSArray *)v4 lastObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  sub_100015DB4();
  id v7 = (CarSearchCategoriesModeController *)objc_claimAutoreleasedReturnValue();
  BOOL v8 = os_log_type_enabled(&v7->super, OS_LOG_TYPE_DEBUG);
  if (isKindOfClass)
  {
    if (v8)
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, &v7->super, OS_LOG_TYPE_DEBUG, "Will push CarSearchCategoriesModeController onto CarNavigationModeController", v11, 2u);
    }

    id v7 = objc_alloc_init(CarSearchCategoriesModeController);
    id v9 = [(NSArray *)v4 arrayByAddingObject:v7];
  }
  else
  {
    if (v8)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, &v7->super, OS_LOG_TYPE_DEBUG, "Will not push CarNavigationSearchModeController, current top mode is not CarNavigationModeController", buf, 2u);
    }
    id v9 = 0;
  }

  return (NSArray *)v9;
}

id sub_100735030(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = sub_100015DB4();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will push BlaBlaSearchResults.", v9, 2u);
  }

  id v6 = [[CarSearchResultsModeController alloc] initWithCategory:*(void *)(a1 + 32)];
  id v7 = [v4 arrayByAddingObject:v6];

  return v7;
}

NSArray *__cdecl sub_100735108(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  uint64_t v5 = sub_100015DB4();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will push CarCollectionListModeController.", v9, 2u);
  }

  id v6 = objc_alloc_init(CarCollectionListModeController);
  id v7 = [(NSArray *)v4 arrayByAddingObject:v6];

  return (NSArray *)v7;
}

id sub_100735274(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = sub_100015DB4();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will push LegacyCarSearchResultsModeController.", v9, 2u);
  }

  id v6 = [[CarSearchResultsModeController alloc] initWithCollection:*(void *)(a1 + 32)];
  id v7 = [v4 arrayByAddingObject:v6];

  return v7;
}

id sub_1007354B8(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = a1[4];
    id v6 = [v5 MKMapItem];
    if (v6)
    {
    }
    else if ([v5 type] == (id)10)
    {
      id v7 = [v5 stringForKey:@"MapsSuggestionsCarPlayEnergyQueryString"];
      BOOL v8 = objc_alloc_init(SearchFieldItem);
      [(SearchFieldItem *)v8 setSearchString:v7];
      id v9 = +[CarDisplayController sharedInstance];
      CFStringRef v28 = @"LowFuel";
      uint64_t v29 = &__kCFBooleanTrue;
      id v10 = +[NSDictionary dictionaryWithObjects:&v29 forKeys:&v28 count:1];
      id v11 = [v9 processSearchFieldItem:v8 searchInfo:0 userInfo:v10];

LABEL_11:
      __int16 v17 = 0;
      goto LABEL_19;
    }
    if ([v5 type] == (id)12)
    {
      id v7 = objc_alloc_init(SearchFieldItem);
      uint64_t v12 = [v5 stringForKey:@"MapsSuggestionsAppConnectionValueKey"];
      [(SearchFieldItem *)v7 setAddressString:v12];

      id v13 = [v5 MKMapItem];

      if (v13)
      {
        BOOL v8 = [v5 MKMapItem];
        if (!v8)
        {
LABEL_10:
          id v9 = +[CarDisplayController sharedInstance];
          id v16 = [v9 processSearchFieldItem:v7 searchInfo:0 userInfo:0];
          goto LABEL_11;
        }
      }
      else
      {
        __int16 v24 = [v5 URLForKey:@"MapsSuggestionsAppConnectionMapItemURL"];
        int v25 = [v24 absoluteString];
        id v26 = [v25 length];

        if (v26)
        {
          uint64_t v27 = +[MKMapItem mapItemsFromURL:v24 options:0];
          BOOL v8 = [v27 firstObject];
        }
        else
        {
          BOOL v8 = 0;
        }

        if (!v8) {
          goto LABEL_10;
        }
      }
      int v14 = [[SearchResult alloc] initWithMapItem:v8];
      [(SearchFieldItem *)v7 setSearchResult:v14];
      id v15 = [(SearchFieldItem *)v7 searchResult];
      [v15 setHasIncompleteMetadata:1];

      goto LABEL_10;
    }
  }
  int v18 = [[CarRoutePlanningModeController alloc] initWithDestination:a1[4] userInfo:a1[5]];
  if (v18)
  {
    __int16 v19 = [a1[5] objectForKeyedSubscript:@"isOriginalDestination"];
    id v20 = [v19 BOOLValue];

    [(CarRoutePlanningModeController *)v18 setIsOriginalDestination:v20];
    __int16 v17 = [a1[6] _replaceTopmostSearchResultContexts:v4 withContext:v18];
  }
  else
  {
    id v21 = +[SearchFieldItem searchFieldItemWithObject:a1[4]];
    if (v21)
    {
      int v22 = +[CarDisplayController sharedInstance];
      [v22 processItem:a1[4] userInfo:a1[5]];
    }
    __int16 v17 = 0;
  }

LABEL_19:

  return v17;
}

id *sub_100735854(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] _scheduleCoordinatedContextChangeWithCarBlock:result[5] dashboardMapBlock:0 smallWidgetsBlock:0];
  }
  return result;
}

id sub_100735904(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [[CarRoutePlanningModeController alloc] initWithExistingRouteLoading];
  id v6 = sub_100015DB4();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG);
  if (v5)
  {
    if (!v7)
    {
LABEL_16:

      id v20 = [*(id *)(a1 + 32) _replaceTopmostSearchResultContexts:v4 withContext:v5];
      goto LABEL_21;
    }
    id v8 = [v4 lastObject];
    if (!v8)
    {
      id v13 = @"<nil>";
      goto LABEL_15;
    }
    id v9 = (objc_class *)objc_opt_class();
    id v10 = NSStringFromClass(v9);
    if (objc_opt_respondsToSelector())
    {
      id v11 = [v8 performSelector:"accessibilityIdentifier"];
      uint64_t v12 = v11;
      if (v11 && ![v11 isEqualToString:v10])
      {
        id v13 = +[NSString stringWithFormat:@"%@<%p, %@>", v10, v8, v12];

        goto LABEL_9;
      }
    }
    id v13 = +[NSString stringWithFormat:@"%@<%p>", v10, v8];
LABEL_9:

LABEL_15:
    *(_DWORD *)buf = 138412290;
    __int16 v24 = v13;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Will push CarRoutePlanningModeController onto %@", buf, 0xCu);

    goto LABEL_16;
  }
  if (v7)
  {
    int v14 = +[CarDisplayController sharedInstance];
    id v15 = [v14 platformController];
    id v16 = [v15 sessionStack];
    __int16 v17 = v16;
    if (v16)
    {
      if ([v16 count])
      {
        int v18 = [v17 componentsJoinedByString:@", "];
        __int16 v19 = +[NSString stringWithFormat:@"<%p> [%@]", v17, v18];
      }
      else
      {
        __int16 v19 = +[NSString stringWithFormat:@"<%p> (empty)", v17];
      }
    }
    else
    {
      __int16 v19 = @"<nil>";
    }

    *(_DWORD *)buf = 138412290;
    __int16 v24 = v19;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Tried to push routePlanning for existing route, but routePlanning session is not the current session. Session stack: %@", buf, 0xCu);
  }
  id v20 = v4;
LABEL_21:
  id v21 = v20;

  return v21;
}

NSArray *__cdecl sub_100735C04(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  id v5 = [(NSArray *)v4 lastObject];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v13 = 0;
    goto LABEL_14;
  }
  id v6 = sub_100015DB4();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    id v7 = v5;
    if (!v7)
    {
      uint64_t v12 = @"<nil>";
      goto LABEL_12;
    }
    id v8 = (objc_class *)objc_opt_class();
    id v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      id v10 = [v7 performSelector:"accessibilityIdentifier"];
      id v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        uint64_t v12 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_9;
      }
    }
    uint64_t v12 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_9:

LABEL_12:
    *(_DWORD *)buf = 138412290;
    id v16 = v12;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Will pop topmost CarRoutePlanningModeController %@", buf, 0xCu);
  }
  id v13 = -[NSArray subarrayWithRange:](v4, "subarrayWithRange:", 0, (char *)[(NSArray *)v4 count] - 1);
LABEL_14:

  return (NSArray *)v13;
}

id sub_100736398(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = +[CarDisplayController sharedInstance];
  id v6 = [v5 platformController];
  id v7 = [v6 currentSession];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v8 = v7;
  }
  else {
    id v8 = 0;
  }
  id v9 = v8;

  if (v9)
  {
    id v10 = (char *)[v9 navigationType];
    id v11 = (char *)[v9 currentTransportType];
    if ([v9 isCarNavigationCompatible])
    {
      +[CarSearchCategoriesModeController prepareNearbySAR];
      uint64_t v12 = off_1012D26B8;
    }
    else
    {
      uint64_t v12 = off_1012D26A0;
    }
    [v4 _maps_lastContextOfClass:[objc_opt_class()]];
    id v23 = (id)objc_claimAutoreleasedReturnValue();
    if (!v23)
    {
      id v23 = objc_alloc_init(*v12);
      if (!v23)
      {
        char v24 = 1;
LABEL_30:
        __int16 v33 = sub_100015DB4();
        if (!os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
LABEL_49:

          [v4 _maps_subarrayToIndex:[v4 indexOfObject:v23]];
          id v22 = (id)objc_claimAutoreleasedReturnValue();
LABEL_62:

          goto LABEL_63;
        }
        id v34 = v23;
        if (v24)
        {
          long long v35 = @"<nil>";
LABEL_39:

          if ((unint64_t)(v10 - 1) > 3) {
            CFStringRef v40 = @"None";
          }
          else {
            CFStringRef v40 = *(&off_1012F7110 + (void)(v10 - 1));
          }
          if ((unint64_t)(v11 - 1) > 4) {
            CFStringRef v41 = @"Undefined";
          }
          else {
            CFStringRef v41 = *(&off_1012F7130 + (void)(v11 - 1));
          }
          if (*(unsigned char *)(a1 + 32)) {
            BOOL v42 = @"YES";
          }
          else {
            BOOL v42 = @"NO";
          }
          long long v43 = v42;
          *(_DWORD *)buf = 138413058;
          long long v56 = (const char *)v35;
          __int16 v57 = 2112;
          __int16 v58 = (const char *)v40;
          __int16 v59 = 2112;
          CFStringRef v60 = v41;
          __int16 v61 = 2112;
          long long v62 = v43;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "Will pop to existing %@ (navigationType:%@, transportType:%@, animated:%@)", buf, 0x2Au);

          goto LABEL_49;
        }
        long long v54 = v11;
        long long v36 = (objc_class *)objc_opt_class();
        long long v37 = NSStringFromClass(v36);
        if (objc_opt_respondsToSelector())
        {
          id v38 = [v34 performSelector:"accessibilityIdentifier"];
          id v39 = v38;
          if (v38 && ![v38 isEqualToString:v37])
          {
            long long v35 = +[NSString stringWithFormat:@"%@<%p, %@>", v37, v34, v39];

            goto LABEL_38;
          }
        }
        long long v35 = +[NSString stringWithFormat:@"%@<%p>", v37, v34];
LABEL_38:

        id v11 = v54;
        goto LABEL_39;
      }
    }
    if ([v4 containsObject:v23])
    {
      char v24 = 0;
      goto LABEL_30;
    }
    int v25 = sub_100015DB4();
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
LABEL_58:

      id v47 = +[NSMutableArray arrayWithCapacity:2];
      id v48 = [v4 firstObject];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (isKindOfClass)
      {
        uint64_t v50 = [v4 firstObject];
      }
      else
      {
        uint64_t v50 = objc_opt_new();
      }
      BOOL v51 = (void *)v50;
      [v47 addObject:v50];

      [v47 addObject:v23];
      id v22 = [v47 copy];

      goto LABEL_62;
    }
    long long v53 = v11;
    id v26 = v23;
    uint64_t v27 = (objc_class *)objc_opt_class();
    CFStringRef v28 = NSStringFromClass(v27);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v29 = [v26 performSelector:"accessibilityIdentifier"];
      id v30 = v29;
      if (v29 && ![v29 isEqualToString:v28])
      {
        id v31 = +[NSString stringWithFormat:@"%@<%p, %@>", v28, v26, v30];

        goto LABEL_27;
      }
    }
    id v31 = +[NSString stringWithFormat:@"%@<%p>", v28, v26];
LABEL_27:

    if ((unint64_t)(v10 - 1) > 3) {
      CFStringRef v32 = @"None";
    }
    else {
      CFStringRef v32 = *(&off_1012F7110 + (void)(v10 - 1));
    }
    if ((unint64_t)(v53 - 1) > 4) {
      CFStringRef v44 = @"Undefined";
    }
    else {
      CFStringRef v44 = *(&off_1012F7130 + (void)(v53 - 1));
    }
    if (*(unsigned char *)(a1 + 32)) {
      long long v45 = @"YES";
    }
    else {
      long long v45 = @"NO";
    }
    long long v46 = v45;
    *(_DWORD *)buf = 138413058;
    long long v56 = v31;
    __int16 v57 = 2112;
    __int16 v58 = (const char *)v32;
    __int16 v59 = 2112;
    CFStringRef v60 = v44;
    __int16 v61 = 2112;
    long long v62 = v46;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Will push %@ onto CarMapBrowsingModeController (navigationType:%@, transportType:%@, animated:%@)", buf, 0x2Au);

    goto LABEL_58;
  }
  id v13 = sub_100015DB4();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    int v14 = +[CarDisplayController sharedInstance];
    id v15 = [v14 platformController];
    id v16 = [v15 currentSession];
    __int16 v17 = (objc_class *)objc_opt_class();
    NSStringFromClass(v17);
    int v18 = (char *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    long long v56 = v18;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Coordinator tried to display navigation, but current session was of class: %@", buf, 0xCu);
  }
  __int16 v19 = sub_1005762E4();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315650;
    long long v56 = "-[CarChromeModeCoordinator _displayNavigationAnimated:]_block_invoke";
    __int16 v57 = 2080;
    __int16 v58 = "CarChromeModeCoordinator.m";
    __int16 v59 = 1024;
    LODWORD(v60) = 1074;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
  }

  if (sub_100BB36BC())
  {
    id v20 = sub_1005762E4();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      id v21 = +[NSThread callStackSymbols];
      *(_DWORD *)buf = 138412290;
      long long v56 = v21;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }
  }
  id v22 = v4;
LABEL_63:

  return v22;
}

id sub_100736AB4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = +[CarDisplayController sharedInstance];
  id v8 = [v7 platformController];
  id v9 = [v8 currentSession];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v10 = v9;
  }
  else {
    id v10 = 0;
  }
  id v11 = v10;

  if (v11)
  {
    uint64_t v12 = (char *)[v11 navigationType];
    id v13 = (char *)[v11 currentTransportType];
    if ([v11 isCarNavigationCompatible])
    {
      id v14 = v5;
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        id v15 = v14;
      }
      else {
        id v15 = 0;
      }
      id v16 = v15;

      if (!v16)
      {
        __int16 v61 = sub_1005762E4();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 136315906;
          double v69 = "-[CarChromeModeCoordinator _displayNavigationAnimated:]_block_invoke";
          __int16 v70 = 2080;
          unsigned __int8 v71 = "CarChromeModeCoordinator.m";
          __int16 v72 = 1024;
          *(_DWORD *)double v73 = 1128;
          *(_WORD *)&v73[4] = 2080;
          *(void *)&v73[6] = "carChromeViewController != nil";
          _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
        }

        if (sub_100BB36BC())
        {
          long long v62 = sub_1005762E4();
          if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
          {
            long long v63 = +[NSThread callStackSymbols];
            *(_DWORD *)buf = 138412290;
            double v69 = v63;
            _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
          }
        }
      }
      if ([v16 sceneType] == (id)7)
      {
        __int16 v17 = [v16 view];
        int v18 = [v17 window];
        id v19 = [v18 _car_hybridInstrumentClusterLayout];

        if (v19) {
          id v20 = off_1012D2698;
        }
        else {
          id v20 = off_1012D26E8;
        }
      }
      else
      {
        id v20 = off_1012D26B0;
      }
      [v6 _maps_lastContextOfClass:objc_opt_class()];
      id v27 = (id)objc_claimAutoreleasedReturnValue();
      if (v27)
      {

        goto LABEL_31;
      }
      id v27 = objc_alloc_init(*v20);

      if (v27)
      {
LABEL_31:
        if ([v6 containsObject:v27])
        {
          char v28 = 0;
LABEL_33:
          uint64_t v29 = sub_100577D9C();
          if (!os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
          {
LABEL_60:

            [v6 _maps_subarrayToIndex:[v6 indexOfObject:v27]];
            id v25 = (id)objc_claimAutoreleasedReturnValue();
LABEL_73:

            goto LABEL_74;
          }
          id v66 = v5;
          uint64_t v30 = a1;
          id v31 = v13;
          id v32 = v27;
          id v65 = v6;
          if (v28)
          {
            __int16 v33 = @"<nil>";
LABEL_50:

            if ((unint64_t)(v12 - 1) > 3) {
              CFStringRef v48 = @"None";
            }
            else {
              CFStringRef v48 = *(&off_1012F7110 + (void)(v12 - 1));
            }
            if ((unint64_t)(v31 - 1) > 4) {
              CFStringRef v49 = @"Undefined";
            }
            else {
              CFStringRef v49 = *(&off_1012F7130 + (void)(v31 - 1));
            }
            if (*(unsigned char *)(v30 + 32)) {
              uint64_t v50 = @"YES";
            }
            else {
              uint64_t v50 = @"NO";
            }
            BOOL v51 = v50;
            *(_DWORD *)buf = 138413058;
            double v69 = (const char *)v33;
            __int16 v70 = 2112;
            unsigned __int8 v71 = (const char *)v48;
            __int16 v72 = 2112;
            *(void *)double v73 = v49;
            *(_WORD *)&v73[8] = 2112;
            *(void *)&v73[10] = v51;
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "Will pop to existing %@ (navigationType:%@, transportType:%@, animated:%@)", buf, 0x2Au);

            id v6 = v65;
            id v5 = v66;
            goto LABEL_60;
          }
          CFStringRef v44 = (objc_class *)objc_opt_class();
          long long v45 = NSStringFromClass(v44);
          if (objc_opt_respondsToSelector())
          {
            long long v46 = [v32 performSelector:"accessibilityIdentifier"];
            id v47 = v46;
            if (v46 && ![v46 isEqualToString:v45])
            {
              __int16 v33 = +[NSString stringWithFormat:@"%@<%p, %@>", v45, v32, v47];

              goto LABEL_49;
            }
          }
          __int16 v33 = +[NSString stringWithFormat:@"%@<%p>", v45, v32];
LABEL_49:

          goto LABEL_50;
        }
        id v34 = sub_100577D9C();
        if (!os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
        {
LABEL_69:

          long long v55 = +[NSMutableArray arrayWithCapacity:2];
          long long v56 = [v6 firstObject];
          objc_opt_class();
          char isKindOfClass = objc_opt_isKindOfClass();

          if (isKindOfClass)
          {
            uint64_t v58 = [v6 firstObject];
          }
          else
          {
            uint64_t v58 = objc_opt_new();
          }
          __int16 v59 = (void *)v58;
          [v55 addObject:v58];

          [v55 addObject:v27];
          id v25 = [v55 copy];

          goto LABEL_73;
        }
        double v64 = v12;
        id v35 = v27;
        long long v36 = (objc_class *)objc_opt_class();
        long long v37 = NSStringFromClass(v36);
        id v67 = v5;
        if (objc_opt_respondsToSelector())
        {
          id v38 = [v35 performSelector:"accessibilityIdentifier"];
          id v39 = v38;
          if (v38 && ![v38 isEqualToString:v37])
          {
            uint64_t v40 = a1;
            CFStringRef v41 = v13;
            BOOL v42 = +[NSString stringWithFormat:@"%@<%p, %@>", v37, v35, v39];

            goto LABEL_42;
          }
        }
        uint64_t v40 = a1;
        CFStringRef v41 = v13;
        BOOL v42 = +[NSString stringWithFormat:@"%@<%p>", v37, v35];
LABEL_42:

        if ((unint64_t)(v64 - 1) > 3) {
          CFStringRef v43 = @"None";
        }
        else {
          CFStringRef v43 = *(&off_1012F7110 + (void)(v64 - 1));
        }
        if ((unint64_t)(v41 - 1) > 4) {
          CFStringRef v52 = @"Undefined";
        }
        else {
          CFStringRef v52 = *(&off_1012F7130 + (void)(v41 - 1));
        }
        if (*(unsigned char *)(v40 + 32)) {
          long long v53 = @"YES";
        }
        else {
          long long v53 = @"NO";
        }
        long long v54 = v53;
        *(_DWORD *)buf = 138413058;
        double v69 = v42;
        __int16 v70 = 2112;
        unsigned __int8 v71 = (const char *)v43;
        __int16 v72 = 2112;
        *(void *)double v73 = v52;
        *(_WORD *)&v73[8] = 2112;
        *(void *)&v73[10] = v54;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_INFO, "Will push %@ onto CarMapWidgetMapBrowsingModeController (navigationType:%@, transportType:%@, animated:%@)", buf, 0x2Au);

        id v5 = v67;
        goto LABEL_69;
      }
    }
    else
    {
      id v26 = sub_100577D9C();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Mode coordinator will not create navigation incompatible mode for the map widget, because we don't support that yet.", buf, 2u);
      }

      id v27 = 0;
    }
    char v28 = 1;
    goto LABEL_33;
  }
  id v21 = sub_100577D9C();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "Tried to display navigation mode, but currentSession was not a navigation session.", buf, 2u);
  }

  id v22 = sub_1005762E4();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315650;
    double v69 = "-[CarChromeModeCoordinator _displayNavigationAnimated:]_block_invoke";
    __int16 v70 = 2080;
    unsigned __int8 v71 = "CarChromeModeCoordinator.m";
    __int16 v72 = 1024;
    *(_DWORD *)double v73 = 1118;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
  }

  if (sub_100BB36BC())
  {
    id v23 = sub_1005762E4();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      char v24 = +[NSThread callStackSymbols];
      *(_DWORD *)buf = 138412290;
      double v69 = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }
  }
  id v25 = v6;
LABEL_74:

  return v25;
}

id sub_100737380(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = +[CarDisplayController sharedInstance];
  id v6 = [v5 platformController];
  id v7 = [v6 currentSession];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v8 = v7;
  }
  else {
    id v8 = 0;
  }
  id v9 = v8;

  if (v9)
  {
    if ([v9 isCarNavigationCompatible])
    {
      id v10 = off_1012D26E8;
      [v4 _maps_lastContextOfClass:objc_opt_class()];
      id v11 = (id)objc_claimAutoreleasedReturnValue();
      if (v11) {
        goto LABEL_19;
      }
    }
    else
    {
      id v10 = off_1012D26E0;
    }
    id v11 = objc_alloc_init(*v10);
LABEL_19:
    unsigned __int8 v22 = [v4 containsObject:v11];
    id v23 = sub_100577F64();
    BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_INFO);
    if (v22)
    {
      if (!v24)
      {
LABEL_41:

        [v4 _maps_subarrayToIndex:[v4 indexOfObject:v11]];
        id v21 = (id)objc_claimAutoreleasedReturnValue();
LABEL_51:

        goto LABEL_52;
      }
      id v25 = v11;
      if (!v25)
      {
        uint64_t v30 = @"<nil>";
        goto LABEL_37;
      }
      id v26 = (objc_class *)objc_opt_class();
      id v27 = NSStringFromClass(v26);
      if (objc_opt_respondsToSelector())
      {
        char v28 = [v25 performSelector:"accessibilityIdentifier"];
        uint64_t v29 = v28;
        if (v28 && ![v28 isEqualToString:v27])
        {
          uint64_t v30 = +[NSString stringWithFormat:@"%@<%p, %@>", v27, v25, v29];

          goto LABEL_27;
        }
      }
      uint64_t v30 = +[NSString stringWithFormat:@"%@<%p>", v27, v25];
LABEL_27:

LABEL_37:
      if (*(unsigned char *)(a1 + 32)) {
        long long v37 = @"YES";
      }
      else {
        long long v37 = @"NO";
      }
      id v38 = v37;
      *(_DWORD *)buf = 138412546;
      CFStringRef v48 = (const char *)v30;
      __int16 v49 = 2112;
      uint64_t v50 = (const char *)v38;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Will pop to existing %@ (animated:%@)", buf, 0x16u);

      goto LABEL_41;
    }
    if (!v24)
    {
LABEL_47:

      CFStringRef v41 = +[NSMutableArray arrayWithCapacity:2];
      BOOL v42 = [v4 firstObject];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (isKindOfClass)
      {
        CFStringRef v44 = [v4 firstObject];
      }
      else
      {
        CFStringRef v44 = objc_alloc_init(CarSmallWidgetBrowsingModeController);
      }
      long long v45 = v44;
      [v41 addObject:v44];

      [v41 addObject:v11];
      id v21 = [v41 copy];

      goto LABEL_51;
    }
    id v31 = v11;
    if (!v31)
    {
      long long v36 = @"<nil>";
      goto LABEL_43;
    }
    id v32 = (objc_class *)objc_opt_class();
    __int16 v33 = NSStringFromClass(v32);
    if (objc_opt_respondsToSelector())
    {
      id v34 = [v31 performSelector:"accessibilityIdentifier"];
      id v35 = v34;
      if (v34 && ![v34 isEqualToString:v33])
      {
        long long v36 = +[NSString stringWithFormat:@"%@<%p, %@>", v33, v31, v35];

        goto LABEL_35;
      }
    }
    long long v36 = +[NSString stringWithFormat:@"%@<%p>", v33, v31];
LABEL_35:

LABEL_43:
    if (*(unsigned char *)(a1 + 32)) {
      id v39 = @"YES";
    }
    else {
      id v39 = @"NO";
    }
    uint64_t v40 = v39;
    *(_DWORD *)buf = 138412546;
    CFStringRef v48 = (const char *)v36;
    __int16 v49 = 2112;
    uint64_t v50 = (const char *)v40;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Will push %@ onto CarSmallWidgetBrowsingModeController (animated:%@)", buf, 0x16u);

    goto LABEL_47;
  }
  uint64_t v12 = sub_100577F64();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
  {
    id v13 = +[CarDisplayController sharedInstance];
    id v14 = [v13 platformController];
    id v15 = [v14 currentSession];
    id v16 = (objc_class *)objc_opt_class();
    NSStringFromClass(v16);
    __int16 v17 = (char *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    CFStringRef v48 = v17;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Coordinator tried to display navigation, but current session was of class: %@", buf, 0xCu);
  }
  int v18 = sub_1005762E4();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315650;
    CFStringRef v48 = "-[CarChromeModeCoordinator _displayNavigationAnimated:]_block_invoke";
    __int16 v49 = 2080;
    uint64_t v50 = "CarChromeModeCoordinator.m";
    __int16 v51 = 1024;
    int v52 = 1176;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
  }

  if (sub_100BB36BC())
  {
    id v19 = sub_1005762E4();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      id v20 = +[NSThread callStackSymbols];
      *(_DWORD *)buf = 138412290;
      CFStringRef v48 = v20;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }
  }
  id v21 = v4;
LABEL_52:

  return v21;
}

NSArray *__cdecl sub_1007379C8(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  id v5 = [(NSArray *)v4 count];
  id v6 = +[NSPredicate predicateWithBlock:&stru_1012F6F70];
  id v7 = [(NSArray *)v4 filteredArrayUsingPredicate:v6];

  id v8 = [v7 count];
  if (![v7 count])
  {
    id v9 = sub_100015DB4();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v15) = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Didn't find CarMapBrowsingModeController in the mode stack, creating a fresh one.", (uint8_t *)&v15, 2u);
    }

    id v10 = objc_alloc_init(CarMapBrowsingModeController);
    __int16 v17 = v10;
    uint64_t v11 = +[NSArray arrayWithObjects:&v17 count:1];

    id v7 = (void *)v11;
  }
  uint64_t v12 = sub_100015DB4();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
  {
    id v13 = +[NSNumber numberWithUnsignedInteger:v5 - v8];
    int v15 = 138412290;
    id v16 = v13;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Will end navigation by removing %@ navigation-related contexts", (uint8_t *)&v15, 0xCu);
  }

  return (NSArray *)v7;
}

BOOL sub_100737B88(id a1, ChromeContext *a2, NSDictionary *a3)
{
  id v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    char v4 = 0;
  }
  else
  {
    objc_opt_class();
    char v4 = objc_opt_isKindOfClass() ^ 1;
  }

  return v4 & 1;
}

NSArray *__cdecl sub_100737C2C(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  char v4 = a3;
  id v5 = sub_100577D9C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    __int16 v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will end navigation by moving to CarMapWidgetMapBrowsingModeController.", (uint8_t *)&v13, 2u);
  }

  id v6 = [(NSArray *)v4 firstObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v8 = [(NSArray *)v4 firstObject];
    int v15 = v8;
    id v9 = &v15;
  }
  else
  {
    id v10 = sub_100577D9C();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      __int16 v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Didn't find CarMapWidgetMapBrowsingModeController in the mode stack, creating a fresh one.", (uint8_t *)&v13, 2u);
    }

    id v8 = objc_alloc_init(CarMapWidgetMapBrowsingModeController);
    id v14 = v8;
    id v9 = &v14;
  }
  uint64_t v11 = +[NSArray arrayWithObjects:v9 count:1];

  return (NSArray *)v11;
}

NSArray *__cdecl sub_100737DAC(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  char v4 = a3;
  id v5 = sub_100577F64();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    __int16 v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will end navigation by moving to CarSmallWidgetBrowsingModeController.", (uint8_t *)&v13, 2u);
  }

  id v6 = [(NSArray *)v4 firstObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v8 = [(NSArray *)v4 firstObject];
    int v15 = v8;
    id v9 = &v15;
  }
  else
  {
    id v10 = sub_100577F64();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      __int16 v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Didn't find CarSmallWidgetBrowsingModeController in the mode stack, creating a fresh one.", (uint8_t *)&v13, 2u);
    }

    id v8 = objc_alloc_init(CarSmallWidgetBrowsingModeController);
    id v14 = v8;
    id v9 = &v14;
  }
  uint64_t v11 = +[NSArray arrayWithObjects:v9 count:1];

  return (NSArray *)v11;
}

void sub_100738000(id a1, ChromeViewController *a2)
{
  id v5 = a2;
  BOOL v2 = [(ChromeViewController *)v5 topContext];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    char v4 = [(ChromeViewController *)v5 topContext];
    [v4 setCameraStyle:1 animated:1];
  }
}

void sub_100738090(id a1, ChromeViewController *a2)
{
  id v6 = a2;
  BOOL v2 = [(ChromeViewController *)v6 topContext];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  char v4 = [(ChromeViewController *)v6 topContext];
  if ((isKindOfClass & 1) == 0)
  {
    objc_opt_class();
    char v5 = objc_opt_isKindOfClass();

    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    char v4 = [(ChromeViewController *)v6 topContext];
  }
  [v4 setCameraStyle:1 animated:1];

LABEL_5:
}

void sub_10073822C(id a1, ChromeViewController *a2)
{
  char v5 = a2;
  BOOL v2 = [(ChromeViewController *)v5 topContext];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    char v4 = [(ChromeViewController *)v5 topContext];
    [v4 setCameraStyle:2 animated:1];
  }
}

void sub_1007382BC(id a1, ChromeViewController *a2)
{
  id v6 = a2;
  BOOL v2 = [(ChromeViewController *)v6 topContext];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  char v4 = [(ChromeViewController *)v6 topContext];
  if ((isKindOfClass & 1) == 0)
  {
    objc_opt_class();
    char v5 = objc_opt_isKindOfClass();

    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    char v4 = [(ChromeViewController *)v6 topContext];
  }
  [v4 setCameraStyle:2 animated:1];

LABEL_5:
}

NSArray *__cdecl sub_1007383DC(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  char v4 = a3;
  char v5 = objc_alloc_init(CarSharedTripsContext);
  id v6 = [(NSArray *)v4 arrayByAddingObject:v5];

  return (NSArray *)v6;
}

id sub_100738508(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  char v5 = [[CarSharedTripsContext alloc] initWithInitialSelectedSharedTrip:*(void *)(a1 + 32)];
  id v6 = [v4 arrayByAddingObject:v5];

  return v6;
}

NSArray *__cdecl sub_1007385DC(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  uint64_t v5 = +[CarDisplayController sharedInstance];
  id v6 = [(id)v5 platformController];
  id v7 = [v6 currentSession];

  objc_opt_class();
  LOBYTE(v5) = objc_opt_isKindOfClass();

  if ((v5 & 1) != 0 && v7)
  {
    id v8 = objc_alloc_init(CarNavigationShareTripModeController);
    id v9 = [(NSArray *)v4 arrayByAddingObject:v8];
  }
  else
  {
    id v9 = v4;
  }

  return v9;
}

void sub_1007387C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007387E0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v2 = [WeakRetained keyboardMode];
  [v1 popFromContext:v2];
}

NSArray *__cdecl sub_1007389EC(id a1, ChromeViewController *a2, NSArray *a3, BOOL *a4)
{
  id v4 = a3;
  uint64_t v5 = +[CarDisplayController sharedInstance];
  unsigned int v6 = [v5 isCurrentlyConnectedToAnyCarScene];

  if (v6)
  {
    id v7 = sub_100015DB4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v15) = 0;
      id v8 = "Currently connected, will not purge contexts.";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, v8, (uint8_t *)&v15, 2u);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
  id v9 = [(NSArray *)v4 indexOfObjectPassingTest:&stru_1012F70F0];
  if (v9 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v7 = sub_100015DB4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v15) = 0;
      id v8 = "No contexts invalid after disconnect.";
      goto LABEL_7;
    }
LABEL_8:

    id v10 = v4;
    goto LABEL_15;
  }
  if ((unint64_t)v9 <= 1) {
    uint64_t v11 = 1;
  }
  else {
    uint64_t v11 = (uint64_t)v9;
  }
  uint64_t v12 = sub_100015DB4();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
  {
    int v15 = 134218240;
    uint64_t v16 = v11;
    __int16 v17 = 2048;
    NSUInteger v18 = [(NSArray *)v4 count];
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "%lu/%lu contexts valid after disconnect.", (uint8_t *)&v15, 0x16u);
  }

  -[NSArray subarrayWithRange:](v4, "subarrayWithRange:", 0, v11);
  id v10 = (NSArray *)objc_claimAutoreleasedReturnValue();
LABEL_15:
  __int16 v13 = v10;

  return v13;
}

BOOL sub_100738BA4(id a1, CarChromeContext *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v5 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0
    && [(CarChromeContext *)v5 invalidAfterDisconnect])
  {
    BOOL v6 = 1;
    *a4 = 1;
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

void sub_10073B938(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) view];
  BOOL v2 = [v7 window];
  uint64_t v3 = [v2 rootViewController];
  if (v3)
  {
    id v4 = (void *)v3;
    unsigned int v5 = [*(id *)(a1 + 32) hasCardFinishedTransitioning];

    if (!v5) {
      return;
    }
    id v7 = [*(id *)(a1 + 32) view];
    BOOL v2 = [v7 window];
    BOOL v6 = [v2 rootViewController];
    sub_100B09D40(v6);
  }
}

void sub_10073DA1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id location)
{
  objc_destroyWeak(v40);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10073DACC(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _callDestination];

  id v5 = objc_loadWeakRetained(v1);
  uint64_t v3 = [v5 delegate];
  id v4 = objc_loadWeakRetained(v1);
  [v3 placeCardDidDismissAlert:v4];
}

void sub_10073DB54(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  [v3 placeCardDidSelectHandoff:v4];

  id v7 = objc_loadWeakRetained(v1);
  id v5 = [v7 delegate];
  id v6 = objc_loadWeakRetained(v1);
  [v5 placeCardDidDismissAlert:v6];
}

void sub_10073DC0C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v2 = [WeakRetained delegate];
  id v3 = objc_loadWeakRetained(v1);
  [v2 placeCardDidDismissAlert:v3];
}

void sub_10073DC80(uint64_t a1)
{
  BOOL v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v2);
  [v3 placeCard:v4 didPresentAlert:*(void *)(a1 + 32)];
}

void sub_10073DEC0(void *a1)
{
  id v1 = a1;
  id v2 = +[UIApplication sharedApplication];
  [v2 callPhoneNumber:v1 completion:&stru_1012F7168];
}

void sub_10073DF2C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = sub_100015DB4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    id v4 = @"NO";
    if (v2) {
      id v4 = @"YES";
    }
    id v5 = v4;
    int v6 = 138412290;
    id v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "CarPlaceCard called mapItem with success: %@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_10073ECDC(id a1)
{
  id v1 = objc_alloc_init(UGCThirdPartyPhotoSharingPreferencesManager);
  BOOL v2 = (void *)qword_10160F6F8;
  qword_10160F6F8 = (uint64_t)v1;
}

void sub_10073EE78(uint64_t a1)
{
  BOOL v2 = sub_10073F0E8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Fetching third party photo sharing preferences", (uint8_t *)buf, 2u);
  }

  id v3 = objc_alloc_init((Class)GEORPFeedbackRequestParameters);
  id v4 = objc_alloc_init((Class)GEORPFeedbackQueryParameters);
  [v3 setQueryParameters:v4];

  id v5 = [v3 queryParameters];
  [v5 addFeedbackComponentType:6];

  id v6 = objc_alloc_init((Class)GEORPFeedbackUserInfo);
  id v7 = +[GEORPUserCredentials _credentialsForPrimaryICloudAccount];
  [v6 setUserCredentials:v7];

  objc_initWeak(buf, *(id *)(a1 + 32));
  id v8 = objc_alloc((Class)GEORPFeedbackRequest);
  id v9 = +[GEOMapService sharedService];
  id v10 = [v9 defaultTraits];
  id v11 = [v8 initWithFeedbackRequestParameters:v3 userInfo:v6 traits:v10];

  uint64_t v12 = +[GEOMapService sharedService];
  __int16 v13 = +[GEOMapService sharedService];
  id v14 = [v13 defaultTraits];
  int v15 = [v12 ticketForFeedbackRequest:v11 traits:v14];

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_10073F13C;
  v16[3] = &unk_1012F71B0;
  objc_copyWeak(&v18, buf);
  id v17 = *(id *)(a1 + 40);
  [v15 submitWithHandler:v16 networkActivity:0];

  objc_destroyWeak(&v18);
  objc_destroyWeak(buf);
}

void sub_10073F0C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10073F0E8()
{
  if (qword_10160F710 != -1) {
    dispatch_once(&qword_10160F710, &stru_1012F7260);
  }
  v0 = (void *)qword_10160F708;

  return v0;
}

void sub_10073F13C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if (v7)
  {
    id v8 = sub_10073F0E8();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Preferences fetch failed with error %@", buf, 0xCu);
    }
  }
  id v9 = +[GEORPThirdPartyPhotoSharingPreference thirdPartyPhotoSharingPreferenceFromResponse:v6];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10073F2D0;
  void v13[3] = &unk_1012EC8B8;
  objc_copyWeak(&v17, (id *)(a1 + 40));
  id v14 = v9;
  id v10 = *(id *)(a1 + 32);
  id v15 = v7;
  id v16 = v10;
  id v11 = v7;
  id v12 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);

  objc_destroyWeak(&v17);
}

void sub_10073F2D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _setDefaultsKeyForPreferences:*(void *)(a1 + 32)];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_10073F3E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10073F404(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = [v3 version];

  [WeakRetained _updateThirdPartyPhotoSharingPreferences:0 versionID:v4 eraseServerSavedSetting:1 completion:&stru_1012F71F0];
}

void sub_10073F568(uint64_t a1)
{
  uint64_t v2 = sub_10073F0E8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Updating third party photo sharing preferences", (uint8_t *)buf, 2u);
  }

  id v3 = objc_alloc_init((Class)GEORPThirdPartyPhotoSharingPreference);
  id v4 = v3;
  if (!*(unsigned char *)(a1 + 56)) {
    [v3 setOptIn:*(unsigned __int8 *)(a1 + 57)];
  }
  if (*(void *)(a1 + 32)) {
    [v4 setVersion:];
  }
  id v5 = objc_alloc_init((Class)GEORPThirdPartyPhotoSharingPreferenceUpdate);
  [v5 setPreference:v4];
  id v6 = objc_alloc_init((Class)GEORPFeedbackDetails);
  [v6 setThirdPartyPhotoSharingPreferenceUpdate:v5];
  id v7 = objc_alloc_init((Class)GEORPFeedbackSubmissionParameters);
  [v7 setType:18];
  char v28 = v6;
  [v7 setDetails:v6];
  id v8 = objc_alloc_init((Class)GEORPFeedbackRequestParameters);
  [v8 setSubmissionParameters:v7];
  id v9 = objc_alloc_init((Class)GEORPFeedbackUserInfo);
  id v10 = +[GEORPUserCredentials _credentialsForPrimaryICloudAccount];
  [v9 setUserCredentials:v10];

  objc_initWeak(buf, *(id *)(a1 + 40));
  id v11 = objc_alloc((Class)GEORPFeedbackRequest);
  id v12 = +[GEOMapService sharedService];
  __int16 v13 = [v12 defaultTraits];
  id v29 = [v11 initWithFeedbackRequestParameters:v8 userInfo:v9 traits:v13];
  id v24 = v5;
  id v26 = v4;

  id v14 = +[GEOMapService sharedService];
  id v15 = +[GEOMapService sharedService];
  id v16 = [v15 defaultTraits];
  id v17 = [v14 ticketForFeedbackRequest:v29 traits:v16];

  id v18 = sub_10073F0E8();
  id v19 = [v8 submissionParameters];
  id v20 = [v19 clientSubmissionUuid];
  if ([v20 length])
  {
    id v21 = [v8 submissionParameters:v24, v26];
    [v21 clientSubmissionUuid];
  }
  else
  {
    id v21 = +[NSUUID UUID];
    [v21 UUIDString];
  unsigned __int8 v22 = };

  id v23 = &_dispatch_main_q;
  MSPUGCPerformLogDiscardForCurrentSessionWithCompletion();

  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_10073F910;
  v30[3] = &unk_1012F71B0;
  objc_copyWeak(&v32, buf);
  id v31 = *(id *)(a1 + 48);
  [v17 submitWithHandler:v30 networkActivity:0];

  objc_destroyWeak(&v32);
  objc_destroyWeak(buf);
}

void sub_10073F8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10073F910(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    id v10 = sub_10073F0E8();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v29 = v9;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Update to third party photo settings failed with error %@", buf, 0xCu);
    }
  }
  id v11 = [v7 feedbackResult];
  id v12 = [v11 submissionResult];
  __int16 v13 = [v12 thirdPartyPhotoSharingPreferenceUpdateResult];

  id v14 = [v13 preference];
  if ([v13 errorsCount])
  {
    id v15 = +[NSMutableArray array];
    if ([v13 errorsCount])
    {
      unint64_t v16 = 0;
      do
      {
        id v17 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v13 errorsAtIndex:v16]);
        [v15 addObject:v17];

        ++v16;
      }
      while (v16 < (unint64_t)[v13 errorsCount]);
    }
  }
  else
  {
    id v15 = 0;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10073FB8C;
  block[3] = &unk_1012EC7C8;
  objc_copyWeak(&v27, (id *)(a1 + 40));
  id v23 = v14;
  id v18 = *(id *)(a1 + 32);
  id v25 = v15;
  id v26 = v18;
  id v24 = v9;
  id v19 = v15;
  id v20 = v9;
  id v21 = v14;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v27);
}

void sub_10073FB8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  [WeakRetained _setDefaultsKeyForPreferences:*(void *)(a1 + 32)];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = [*(id *)(a1 + 48) copy];
  (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v4 + 16))(v4, v2, v3, v5);
}

void sub_10073FCC8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ThirdPartyPhotoSharingPreferencesManager");
  uint64_t v2 = (void *)qword_10160F708;
  qword_10160F708 = (uint64_t)v1;
}

void sub_100741EA0(uint64_t a1, void *a2, void *a3)
{
  id v54 = a2;
  id v6 = a3;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 104), a2);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 112), a3);
  if (*(void *)(*(void *)(a1 + 32) + 104))
  {
    id v7 = [v54 metadata];
    [v7 timestamp];
    double v9 = v8;

    id v10 = +[NSDate dateWithTimeIntervalSince1970:v9];
    id v11 = objc_alloc_init((Class)NSDateFormatter);
    id v12 = +[NSTimeZone systemTimeZone];
    [v11 setTimeZone:v12];

    __int16 v13 = +[NSLocale currentLocale];
    [v11 setLocale:v13];

    [v11 setDateStyle:1];
    [v11 setTimeStyle:1];
    id v14 = [v11 stringFromDate:v10];
    id v15 = objc_alloc_init((Class)UILabel);
    +[UIFont systemFontSize];
    unint64_t v16 = +[UIFont systemFontOfSize:](UIFont, "systemFontOfSize:");
    [v15 setFont:v16];

    id v17 = +[UIColor secondaryLabelColor];
    [v15 setTextColor:v17];

    id v18 = +[UIColor clearColor];
    [v15 setBackgroundColor:v18];

    [v15 setTextAlignment:1];
    id v19 = +[NSString stringWithFormat:@"Last updated %@", v14];
    [v15 setText:v19];

    [v15 sizeToFit];
    [v15 frame];
    [v15 setFrame:];
  }
  else
  {
    id v10 = objc_alloc_init((Class)UILabel);
    id v20 = +[UIFont boldSystemFontOfSize:18.0];
    [v10 setFont:v20];

    id v21 = +[UIColor infoTextOverPinStripeTextColor];
    [v10 setTextColor:v21];

    unsigned __int8 v22 = +[UIColor secondaryLabelColor];
    [v10 setShadowColor:v22];

    id v23 = +[UIColor clearColor];
    [v10 setBackgroundColor:v23];

    [v10 setTextAlignment:1];
    [v10 setText:@"No Resource Manifest"];
    [v10 sizeToFit];
    id v24 = [*(id *)(a1 + 32) tableView];
    [v24 bounds];
    double v26 = v25;
    [v10 frame];
    double v28 = (v26 - v27) * 0.5;
    [v10 frame];
    double v30 = v29;
    [v10 frame];
    [v10 setFrame:v28, 20.0, v30];

    id v11 = objc_alloc_init((Class)UILabel);
    +[UIFont systemFontSize];
    id v31 = +[UIFont systemFontOfSize:](UIFont, "systemFontOfSize:");
    [v11 setFont:v31];

    id v32 = +[UIColor secondaryLabelColor];
    [v11 setTextColor:v32];

    __int16 v33 = +[UIColor clearColor];
    [v11 setBackgroundColor:v33];

    [v11 setNumberOfLines:0];
    [v11 setTextAlignment:1];
    id v14 = +[NSString stringWithFormat:@"Error: %@", v6];
    id v34 = [v6 domain];
    id v35 = GEOErrorDomain();
    unsigned int v36 = [v34 isEqualToString:v35];

    if (v36)
    {
      [v6 code];
      long long v37 = GEOStringForError();
      uint64_t v38 = [v14 stringByAppendingFormat:@" (%@)", v37];

      id v14 = (void *)v38;
    }
    [v11 setText:v14];
    [v11 sizeToFit];
    id v39 = [*(id *)(a1 + 32) tableView];
    [v39 frame];
    [v11 textRectForBounds:0 limitedToNumberOfLines:0.0 0.0 0.0 v40 + -40.0 1.79769313e308];
    double v42 = v41;
    double v44 = v43;

    long long v45 = [*(id *)(a1 + 32) tableView];
    [v45 bounds];
    double v47 = (v46 - v42) * 0.5;
    [v10 frame];
    [v11 setFrame:CGRectMake(v47, CGRectGetMaxY(v56) + 20.0, v42, v44)];

    id v48 = objc_alloc((Class)UIView);
    __int16 v49 = [*(id *)(a1 + 32) tableView];
    [v49 frame];
    double v51 = v50;
    [v11 frame];
    id v15 = [v48 initWithFrame:0.0, 0.0, v51, CGRectGetMaxY(v57)];

    [v15 addSubview:v10];
    [v15 addSubview:v11];
  }
  int v52 = [*(id *)(a1 + 32) tableView];
  [v52 setTableHeaderView:v15];

  long long v53 = [*(id *)(a1 + 32) tableView];
  [v53 reloadData];
}

void sub_100746240(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[1] stopLocationUpdateWithObserver:WeakRetained];
    uint64_t v3 = +[NSNotificationCenter defaultCenter];
    [v3 removeObserver:v2 name:MKLocationManagerApprovalDidChangeNotification object:0];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      id v5 = "MapsSuggestionsMKLocationManagerAdapter.m";
      __int16 v6 = 1026;
      int v7 = 60;
      __int16 v8 = 2082;
      double v9 = "-[MapsSuggestionsMKLocationManagerAdapter onStopImplementation]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_1007464B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  label = dispatch_queue_get_label((dispatch_queue_t)&_dispatch_main_q);
  id v5 = dispatch_queue_get_label(0);
  if (label != v5)
  {
    BOOL v6 = !label || v5 == 0;
    if (v6 || strcmp(label, v5))
    {
      id v11 = sub_1005762E4();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        int v14 = 136316418;
        id v15 = "-[VLFSessionAppLaunchDelayMonitor _startTimer]_block_invoke";
        __int16 v16 = 2080;
        id v17 = "VLFSessionAppLaunchDelayMonitor.m";
        __int16 v18 = 1024;
        int v19 = 69;
        __int16 v20 = 2080;
        id v21 = "dispatch_get_main_queue()";
        __int16 v22 = 2080;
        id v23 = dispatch_queue_get_label((dispatch_queue_t)&_dispatch_main_q);
        __int16 v24 = 2080;
        double v25 = dispatch_queue_get_label(0);
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion on queue failed: %s/%s; actual queue: %s",
          (uint8_t *)&v14,
          0x3Au);
      }
      if (sub_100BB36BC())
      {
        id v12 = sub_1005762E4();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        {
          __int16 v13 = +[NSThread callStackSymbols];
          int v14 = 138412290;
          id v15 = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v14, 0xCu);
        }
      }
    }
  }
  int v7 = sub_100109C58();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    LOWORD(v14) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Timeout timer fired", (uint8_t *)&v14, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v9 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained isInBackground])
    {
      id v10 = sub_100109C58();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        LOWORD(v14) = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Completion called while backgrounded; not updating state",
          (uint8_t *)&v14,
          2u);
      }
    }
    else
    {
      [v9 setState:2];
    }
    [v9 setTimeoutTimer:0];
  }
}

id sub_100747288(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  int v4 = [*(id *)(a1 + 32) _displayID];
  id v5 = [v3 isEqualToString:v4];

  return v5;
}

id sub_1007472EC()
{
  if (qword_10160F730 != -1) {
    dispatch_once(&qword_10160F730, &stru_1012F7440);
  }
  v0 = (void *)qword_10160F728;

  return v0;
}

void sub_1007478C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UIScreenCarExtras");
  uint64_t v2 = (void *)qword_10160F728;
  qword_10160F728 = (uint64_t)v1;
}

void sub_100747B18(uint64_t a1)
{
  uint64_t v2 = +[MKCatalystButton catalystButton];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setTitle:@"Back" forState:0];
  [v2 setIsPrimaryButton:0];
  LODWORD(v3) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v3];
  [v2 addTarget:*(void *)(a1 + 32) action:"_pop" forControlEvents:64];
  int v4 = +[MKCatalystButton catalystButton];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setTitle:@"Not Root" forState:0];
  [v4 setTitle:@"Root" forState:4];
  [v4 setIsPrimaryButton:1];
  LODWORD(v5) = 1148846080;
  [v4 setContentCompressionResistancePriority:0 forAxis:v5];
  [v4 addTarget:*(void *)(a1 + 32) action:"_toggleWantsControl" forControlEvents:64];
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = *(void **)(v6 + 24);
  *(void *)(v6 + 24) = v4;
  id v31 = v4;

  __int16 v8 = +[MKCatalystButton catalystButton];
  [v8 setTitle:@"Pop" forState:0];
  [v8 setIsPrimaryButton:1];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v9) = 1148846080;
  [v8 setContentCompressionResistancePriority:0 forAxis:v9];
  [v8 addTarget:*(void *)(a1 + 32) action:"_popSidebarController" forControlEvents:64];
  id v10 = +[MKCatalystButton catalystButton];
  [v10 setTitle:@"Push" forState:0];
  [v10 setIsPrimaryButton:1];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v11) = 1148846080;
  [v10 setContentCompressionResistancePriority:0 forAxis:v11];
  [v10 addTarget:*(void *)(a1 + 32) action:"_pushSidebarController" forControlEvents:64];
  id v12 = objc_alloc((Class)UIStackView);
  v33[0] = v2;
  v33[1] = v31;
  double v27 = v2;
  v33[2] = v8;
  v33[3] = v10;
  __int16 v13 = +[NSArray arrayWithObjects:v33 count:4];
  id v14 = [v12 initWithArrangedSubviews:v13];

  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v14 setAxis:0];
  [v14 setDistribution:1];
  [v14 setAlignment:0];
  [v14 setSpacing:1.17549435e-38];
  LODWORD(v15) = 1148846080;
  [v14 setContentCompressionResistancePriority:0 forAxis:v15];
  [*(id *)(a1 + 40) addSubview:v14];
  uint64_t v16 = *(void *)(a1 + 32);
  id v17 = *(void **)(v16 + 16);
  *(void *)(v16 + 16) = v14;
  id v18 = v14;

  double v30 = [*(id *)(a1 + 40) centerXAnchor];
  double v29 = [v18 centerXAnchor];
  double v28 = [v30 constraintEqualToAnchor:v29];
  v32[0] = v28;
  double v26 = [*(id *)(a1 + 40) bottomAnchor];
  int v19 = [v18 bottomAnchor];
  __int16 v20 = [v26 constraintEqualToAnchor:v19 constant:60.0];
  v32[1] = v20;
  id v21 = [v2 widthAnchor];
  __int16 v22 = [v21 constraintEqualToConstant:100.0];
  v32[2] = v22;
  id v23 = [v18 heightAnchor];
  __int16 v24 = [v23 constraintEqualToConstant:32.0];
  v32[3] = v24;
  double v25 = +[NSArray arrayWithObjects:v32 count:4];
  +[NSLayoutConstraint activateConstraints:v25];
}

void sub_100747FDC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) removeFromSuperview];
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;
}

uint64_t sub_1007490B8(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 200) = 1;
  return result;
}

void sub_10074919C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = [RAPTransitLine alloc];
  id v6 = [*(id *)(a1 + 32) lineItem];
  id v5 = [(RAPTransitLine *)v4 _initWithTransitLine:v6];
  [v3 setReportedLine:v5];
}

void sub_1007499A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007499C8(uint64_t a1)
{
  uint64_t v2 = sub_100009408();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v7 = 134349056;
    id v8 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Delay timer fired; updating state now",
      (uint8_t *)&v7,
      0xCu);
  }
  int v4 = (id *)(a1 + 32);
  id v5 = objc_loadWeakRetained(v4);
  [v5 updateState];

  id v6 = objc_loadWeakRetained(v4);
  [v6 setAuthorizedDelayTimer:0];
}

void sub_10074A63C(id a1)
{
  id v1 = objc_alloc_init((Class)NSOperationQueue);
  uint64_t v2 = (void *)qword_10160F748;
  qword_10160F748 = (uint64_t)v1;

  [(id)qword_10160F748 setName:@"com.apple.Maps.ImageProcessingQueue"];
  [(id)qword_10160F748 setQualityOfService:25];
  id v3 = (void *)qword_10160F748;

  [v3 setMaxConcurrentOperationCount:4];
}

void sub_10074A778(uint64_t a1)
{
  [*(id *)(a1 + 32) _maps_composedImageScale:*(unsigned __int8 *)(a1 + 56) isRTL:*(double *)(a1 + 48)];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10074B1A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10074B1C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _handleMenuAction:*(void *)(a1 + 48) entryPoint:*(unsigned int *)(a1 + 56) sceneDelegate:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_10074BD8C(id a1)
{
  v30[0] = &off_1013A8488;
  v28[0] = &off_1013A8488;
  v26[0] = &off_1013A84A0;
  v26[1] = &off_1013A84D0;
  v27[0] = &off_1013A84B8;
  v27[1] = &off_1013A84E8;
  v26[2] = &off_1013A8500;
  v26[3] = &off_1013A8530;
  v27[2] = &off_1013A8518;
  void v27[3] = &off_1013A8548;
  double v11 = +[NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:4];
  v28[1] = &off_1013A8560;
  v29[0] = v11;
  v24[0] = &off_1013A84A0;
  v24[1] = &off_1013A84D0;
  v25[0] = &off_1013A8578;
  v25[1] = &off_1013A8590;
  v24[2] = &off_1013A8500;
  v24[3] = &off_1013A8530;
  v25[2] = &off_1013A8518;
  void v25[3] = &off_1013A8548;
  id v10 = +[NSDictionary dictionaryWithObjects:v25 forKeys:v24 count:4];
  v29[1] = v10;
  double v9 = +[NSDictionary dictionaryWithObjects:v29 forKeys:v28 count:2];
  v31[0] = v9;
  v30[1] = &off_1013A8560;
  v21[3] = &off_1013A8548;
  v22[0] = &off_1013A8488;
  v20[0] = &off_1013A84A0;
  v20[1] = &off_1013A84D0;
  v21[0] = &off_1013A84B8;
  v21[1] = &off_1013A85A8;
  void v20[2] = &off_1013A8500;
  void v20[3] = &off_1013A8530;
  v21[2] = &off_1013A85C0;
  id v8 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:4];
  v22[1] = &off_1013A8560;
  v23[0] = v8;
  v18[0] = &off_1013A84A0;
  v18[1] = &off_1013A84D0;
  v19[0] = &off_1013A8578;
  v19[1] = &off_1013A85D8;
  void v18[2] = &off_1013A8500;
  void v18[3] = &off_1013A8530;
  v19[2] = &off_1013A85C0;
  v19[3] = &off_1013A8548;
  id v1 = +[NSDictionary dictionaryWithObjects:v19 forKeys:v18 count:4];
  v23[1] = v1;
  id v2 = +[NSDictionary dictionaryWithObjects:v23 forKeys:v22 count:2];
  v31[1] = v2;
  v30[2] = &off_1013A85F0;
  void v15[3] = &off_1013A8548;
  v16[0] = &off_1013A8488;
  v14[0] = &off_1013A84A0;
  v14[1] = &off_1013A84D0;
  v15[0] = &off_1013A84B8;
  v15[1] = &off_1013A8608;
  v14[2] = &off_1013A8500;
  void v14[3] = &off_1013A8530;
  id v15[2] = &off_1013A85C0;
  id v3 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:4];
  v16[1] = &off_1013A8560;
  v17[0] = v3;
  v12[0] = &off_1013A84A0;
  v12[1] = &off_1013A84D0;
  v13[0] = &off_1013A8578;
  v13[1] = &off_1013A8620;
  v12[2] = &off_1013A8500;
  void v12[3] = &off_1013A8530;
  void v13[2] = &off_1013A85C0;
  void v13[3] = &off_1013A8548;
  int v4 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:4];
  v17[1] = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:v17 forKeys:v16 count:2];
  v31[2] = v5;
  uint64_t v6 = +[NSDictionary dictionaryWithObjects:v31 forKeys:v30 count:3];
  int v7 = (void *)qword_10160F758;
  qword_10160F758 = v6;
}

void sub_10074C26C(id a1)
{
  v21[0] = &off_1013A8638;
  v21[1] = &off_1013A8548;
  v22[0] = @"NotSet";
  v22[1] = @"km";
  v21[2] = &off_1013A8650;
  v21[3] = &off_1013A8668;
  void v22[2] = @"miles";
  v22[3] = @"m";
  void v21[4] = &off_1013A8680;
  v21[5] = &off_1013A8698;
  void v22[4] = @"yards";
  v22[5] = @"ft";
  id v1 = +[NSDictionary dictionaryWithObjects:v22 forKeys:v21 count:6];
  v19[0] = &off_1013A8638;
  v19[1] = &off_1013A8548;
  v20[0] = @"NotSet";
  v20[1] = @"Continue";
  v19[2] = &off_1013A8650;
  v19[3] = &off_1013A8668;
  void v20[2] = @"Initial";
  void v20[3] = @"Prepare";
  void v19[4] = &off_1013A8680;
  void v20[4] = @"Execute";
  id v2 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:5];
  v17[0] = &off_1013A8638;
  v17[1] = &off_1013A8548;
  v18[0] = @"NotSet";
  v18[1] = @"NotActive";
  void v17[2] = &off_1013A8650;
  void v17[3] = &off_1013A8668;
  void v18[2] = @"Active";
  void v18[3] = @"Arrived";
  void v17[4] = &off_1013A8680;
  void v17[5] = &off_1013A8698;
  void v18[4] = @"Loading";
  void v18[5] = @"Locating";
  v17[6] = &off_1013A86B0;
  v17[7] = &off_1013A86C8;
  void v18[6] = @"Rerouting";
  v18[7] = @"ProceedToRoute";
  id v3 = +[NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:8];
  v15[0] = &__kCFBooleanTrue;
  v15[1] = &__kCFBooleanFalse;
  v16[0] = @"YES";
  v16[1] = @"NO";
  int v4 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:2];
  v13[0] = &__kCFBooleanTrue;
  v13[1] = &__kCFBooleanFalse;
  v14[0] = @"YES";
  v14[1] = @"NO";
  id v5 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:2];
  v11[0] = &__kCFBooleanTrue;
  v11[1] = &__kCFBooleanFalse;
  v12[0] = @"YES";
  v12[1] = @"NO";
  uint64_t v6 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:2];
  v9[0] = @"routeGuidanceState";
  v9[1] = @"maneuverState";
  v10[0] = v3;
  v10[1] = v2;
  _DWORD v9[2] = @"distanceRemainingDisplayUnits";
  _OWORD v9[3] = @"distanceRemainingToNextManeuverDisplayUnits";
  v10[2] = v1;
  void v10[3] = v1;
  void v9[4] = @"beingShownInApp";
  void v9[5] = @"sourceSupportsRouteGuidance";
  void v10[4] = v4;
  void v10[5] = v5;
  v9[6] = @"laneGuidanceShowing";
  v10[6] = v6;
  uint64_t v7 = +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:7];
  id v8 = (void *)qword_10160F770;
  qword_10160F770 = v7;
}

void sub_10074C5C4(id a1)
{
  v3[0] = &off_1013A84A0;
  v3[1] = &off_1013A84D0;
  v4[0] = @"navigationRouteGuidanceDisplayComponentID";
  v4[1] = @"routeGuidanceState";
  v3[2] = &off_1013A8500;
  v3[3] = &off_1013A8530;
  id v4[2] = @"maneuverState";
  void v4[3] = @"currentRoadName";
  void v3[4] = &off_1013A86E0;
  void v3[5] = &off_1013A86F8;
  void v4[4] = @"destinationName";
  void v4[5] = @"estimatedTimeOfArrival";
  v3[6] = &off_1013A8710;
  v3[7] = &off_1013A8728;
  void v4[6] = @"timeRemainingToDestination";
  v4[7] = @"distanceRemaining";
  v3[8] = &off_1013A8740;
  v3[9] = &off_1013A8758;
  v4[8] = @"distanceRemainingDisplayString";
  v4[9] = @"distanceRemainingDisplayUnits";
  v3[10] = &off_1013A8770;
  v3[11] = &off_1013A8788;
  v4[10] = @"distanceRemainingToNextManeuver";
  v4[11] = @"distanceRemainingToNextManeuverDisplayString";
  v3[12] = &off_1013A87A0;
  v3[13] = &off_1013A87B8;
  v4[12] = @"distanceRemainingToNextManeuverDisplayUnits";
  v4[13] = @"routeGuidanceManeuverCurrentList";
  v3[14] = &off_1013A87D0;
  v3[15] = &off_1013A87E8;
  v4[14] = @"routeGuidanceManeuverCount";
  v4[15] = @"beingShownInApp";
  uint8_t v3[16] = &off_1013A8800;
  v3[17] = &off_1013A8818;
  uint8_t v4[16] = @"laneGuidanceCurrentIndex";
  v4[17] = @"laneGuidanceTotalCount";
  v3[18] = &off_1013A8830;
  v3[19] = &off_1013A8848;
  v4[18] = @"laneGuidanceShowing";
  v4[19] = @"sourceName";
  v3[20] = &off_1013A8860;
  v3[21] = &off_1013A8878;
  v4[20] = @"sourceSupportsRouteGuidance";
  v4[21] = @"destinationTimeZoneOffsetMinutes";
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:22];
  id v2 = (void *)qword_10160F780;
  qword_10160F780 = v1;
}

void sub_10074D040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_10074D224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

id sub_10074D238()
{
  if (qword_10160F790 != -1) {
    dispatch_once(&qword_10160F790, &stru_1012F7598);
  }
  v0 = (void *)qword_10160F788;

  return v0;
}

void sub_10074D488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_10074D4C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_10074D238();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Initializing timer fired", v3, 2u);
    }

    [WeakRetained setInitializingTimer:0];
    [WeakRetained setCurrentState:2];
    [WeakRetained _recalculateState];
  }
}

void sub_10074D8FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_10074DBC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_10074DEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_10074DFF8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFScanningStateManager");
  id v2 = (void *)qword_10160F788;
  qword_10160F788 = (uint64_t)v1;
}

void sub_10074EAA4(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v9)
  {
    objc_storeStrong((id *)(v7 + 24), a2);
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
    [WeakRetained venueCategoryContentDownloader:*(void *)(a1 + 32) didChangeMapItem:*(void *)(*(void *)(a1 + 32) + 24)];
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v7 + 16));
    [WeakRetained venueCategoryContentDownloader:*(void *)(a1 + 32) didFailToFetchMapItemWithError:v6];
  }
}

void sub_10074ECB4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    id v5 = a3;
    id v6 = [a2 firstObject];
    (*(void (**)(uint64_t, id, id))(v3 + 16))(v3, v6, v5);
  }
}

void sub_10074FF44(void *a1)
{
  if (a1)
  {
    os_log_t v1 = a1;
    CurrentContext = UIGraphicsGetCurrentContext();
    CGContextSaveGState(CurrentContext);
    v1[2](v1, CurrentContext);

    CGContextRestoreGState(CurrentContext);
  }
}

id sub_10074FFA8(uint64_t a1, CGContextRef c)
{
  long long v3 = *(_OWORD *)(a1 + 72);
  *(_OWORD *)&v5.a = *(_OWORD *)(a1 + 56);
  *(_OWORD *)&v5.c = v3;
  *(_OWORD *)&v5.tx = *(_OWORD *)(a1 + 88);
  CGContextConcatCTM(c, &v5);
  [*(id *)(a1 + 32) addClip];
  return [*(id *)(a1 + 40) drawIntersectionFill:*(void *)(a1 + 48)];
}

id sub_100750004(uint64_t a1, CGContextRef c)
{
  long long v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)&v5.a = *(_OWORD *)(a1 + 64);
  *(_OWORD *)&v5.c = v3;
  *(_OWORD *)&v5.tx = *(_OWORD *)(a1 + 96);
  CGContextConcatCTM(c, &v5);
  [*(id *)(a1 + 32) addClip];
  return [*(id *)(a1 + 40) drawIntersectionStroke:*(void *)(a1 + 48) forFill:*(void *)(a1 + 56)];
}

id sub_100750060(uint64_t a1, CGContextRef c)
{
  long long v3 = *(_OWORD *)(a1 + 72);
  *(_OWORD *)&v5.a = *(_OWORD *)(a1 + 56);
  *(_OWORD *)&v5.c = v3;
  *(_OWORD *)&v5.tx = *(_OWORD *)(a1 + 88);
  CGContextConcatCTM(c, &v5);
  return [*(id *)(a1 + 32) drawArrow:*(void *)(a1 + 40) stroke:*(void *)(a1 + 48)];
}

void sub_100751654(uint64_t a1, CGContextRef c)
{
  long long v3 = *(_OWORD *)(a1 + 72);
  *(_OWORD *)&transform.a = *(_OWORD *)(a1 + 56);
  *(_OWORD *)&transform.c = v3;
  *(_OWORD *)&transform.tx = *(_OWORD *)(a1 + 88);
  CGContextConcatCTM(c, &transform);
  id v6 = _NSConcreteStackBlock;
  uint64_t v7 = 3221225472;
  id v8 = sub_100751710;
  id v9 = &unk_1012F7670;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v10 = v4;
  uint64_t v11 = v5;
  sub_10074FF44(&v6);
  [*(id *)(a1 + 40) drawArrow:*(void *)(a1 + 48) stroke:0 v6, v7, v8, v9];
}

void sub_100751710(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 40) drawArrow:*(*((void *)&v7 + 1) + 8 * (void)v6) stroke:0 v7];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_100751A68(uint64_t a1, CGContextRef c)
{
  long long v3 = *(_OWORD *)(a1 + 72);
  *(_OWORD *)&transform.a = *(_OWORD *)(a1 + 56);
  *(_OWORD *)&transform.c = v3;
  *(_OWORD *)&transform.tx = *(_OWORD *)(a1 + 88);
  CGContextConcatCTM(c, &transform);
  id v6 = _NSConcreteStackBlock;
  uint64_t v7 = 3221225472;
  long long v8 = sub_100751B24;
  long long v9 = &unk_1012F7670;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v10 = v4;
  uint64_t v11 = v5;
  sub_10074FF44(&v6);
  [*(id *)(a1 + 40) drawArrow:v6 stroke:0 v7, v8, v9];
}

void sub_100751B24(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(a1 + 40) drawArrow:v7 stroke:0];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

CGFloat sub_100752340(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9 = a1;
  long long v10 = v9;
  if (v9 && ([v9 isEmpty] & 1) == 0)
  {
    [v10 pathBounds];
    v17.origin.x = v11;
    v17.origin.double y = v12;
    v17.size.width = v13;
    v17.size.height = v14;
    v16.origin.x = a2;
    v16.origin.double y = a3;
    v16.size.width = a4;
    v16.size.height = a5;
    *(void *)&a2 = (unint64_t)CGRectUnion(v16, v17);
  }

  return a2;
}

id sub_1007526CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setupTrayLayoutAndPerformScrollTest];
}

id sub_100752784(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performScrollTest];
}

void sub_100752990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007529D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v2 = [*(id *)(a1 + 32) testName];
    [WeakRetained finishedSubTest:v2];

    [WeakRetained finishedTest];
  }
}

id sub_100752B0C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performResizingTest];
}

id sub_100752BE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

id sub_100752CB0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performRotationTest];
}

id sub_100752D38(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

void sub_100753880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100753898(uint64_t result)
{
  return result;
}

void sub_100753A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose((const void *)(v20 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100753A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void *)(v7 + 24);
  if (v8 == *(void *)(a1 + 56))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    uint64_t v12 = [WeakRetained substringToIndex:a3];
    uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
    CGFloat v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    *a7 = 1;
  }
  else
  {
    *(void *)(v7 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v8 + 1;
  }
}

void sub_10075407C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10075409C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _setComplete:[WeakRetained _isNowComplete] allowInvokingDidChange:1];
    id WeakRetained = v2;
  }
}

void sub_10075506C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100755088(uint64_t a1, void *a2)
{
  id v13 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = objc_alloc_init(UGCUserInformationViewModel);
    uint64_t v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"[UGC] Contribution Name" value:@"localized string not found" table:0];
    uint64_t v7 = [*(id *)(a1 + 32) userName];
    uint64_t v8 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v6, v7);
    [(UGCUserInformationViewModel *)v4 setUserName:v8];

    id v9 = [*(id *)(a1 + 32) userEmail];
    [(UGCUserInformationViewModel *)v4 setUserEmail:v9];

    long long v10 = [*(id *)(a1 + 32) userIcon];
    [(UGCUserInformationViewModel *)v4 setUserIcon:v10];

    [(UGCUserInformationViewModel *)v4 setUserCurrentLocation:v13];
    CGFloat v11 = [WeakRetained _legalDisclosureString];
    [(UGCUserInformationViewModel *)v4 setLegalDisclosureString:v11];

    [WeakRetained[1] setViewModel:v4];
    uint64_t v12 = [WeakRetained delegate];
    [v12 sectionControllerDidUpdateRowItems:WeakRetained];
  }
}

id sub_10075599C()
{
  if (qword_10160F7B8 != -1) {
    dispatch_once(&qword_10160F7B8, &stru_1012F7748);
  }
  v0 = (void *)qword_10160F7B0;

  return v0;
}

void sub_100756110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10075613C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = sub_10075599C();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Failed to determine pocket state: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v8 = [WeakRetained analyticsCapturer];
    [v8 recordPocketState:a2];
  }
}

void sub_100756B64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100756B80(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10075599C();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      int v9 = 134349314;
      id v10 = WeakRetained;
      __int16 v11 = 2112;
      id v12 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "[%{public}p] Error saving ARKit recording: %@", (uint8_t *)&v9, 0x16u);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v8 = *(void **)(a1 + 32);
    int v9 = 134349314;
    id v10 = v7;
    __int16 v11 = 2112;
    id v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%{public}p] ARKit recording finished recording at file: %@", (uint8_t *)&v9, 0x16u);
  }
}

void sub_10075809C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    id v4 = [WeakRetained mode];
    id v3 = v6;
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 40);
      if (v5)
      {
        if (v5 != 1) {
          goto LABEL_8;
        }
        [v6 startLocationUpdates];
      }
      else
      {
        [v6 stopLocationUpdates];
      }
      id v3 = v6;
    }
  }
LABEL_8:
}

void sub_1007583FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (([WeakRetained hasNotifiedFirstFrame] & 1) == 0)
    {
      id v4 = +[NSNotificationCenter defaultCenter];
      [v4 postNotificationName:@"VLFSessionDidGetFirstFrameNotification" object:0];

      [v3 setNotifiedFirstFrame:1];
    }
    if ([v3 shouldObserveFrames])
    {
      if ([v3 shouldUpdateCameraFocusLensPosition])
      {
        uint64_t v5 = +[NSUserDefaults standardUserDefaults];
        [v5 floatForKey:@"PedestrianARAutoFocusDistanceKey"];
        int v7 = v6;

        uint64_t v8 = [v3 session];
        LODWORD(v9) = v7;
        [v8 updateCameraFocusLensPosition:v9];

        [v3 setShouldUpdateCameraFocusLensPosition:0];
      }
      if (*(void *)(a1 + 32))
      {
        id v10 = [v3 analyticsCapturer];
        [v10 recordGeoTrackingStatusIfNecessary:*(void *)(a1 + 32)];
      }
      [v3 _processVLDebugInfo:*(void *)(a1 + 40)];
    }
    else
    {
      __int16 v11 = sub_10075599C();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        int v12 = 134349056;
        id v13 = v3;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "[%{public}p] Got a frame but ignoring it because geo tracking has not initialized yet", (uint8_t *)&v12, 0xCu);
      }
    }
  }
}

void sub_1007588A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained registerFailureWithResult:1 error:*(void *)(a1 + 32) initializationFailureDetails:*(void *)(a1 + 40)];
}

void sub_100758BB4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained analyticsCapturer];
    [v4 recordGeoTrackingStatusIfNecessary:*(void *)(a1 + 32)];

    id v5 = [*(id *)(a1 + 32) state];
    if (v5 == (id)3)
    {
      [v3 _processVLDebugInfo:*(void *)(a1 + 40)];
      if (![v3 mode]) {
        [v3 registerSuccessWithVLFLocation:0];
      }
    }
    else if (v5 == (id)1 && ([v3 shouldObserveFrames] & 1) == 0)
    {
      int v6 = sub_10075599C();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = 134349056;
        uint64_t v8 = v3;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}p] Geo tracking is initializing; start observing frames now",
          (uint8_t *)&v7,
          0xCu);
      }

      [v3 setShouldObserveFrames:1];
    }
  }
}

void sub_1007590B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007590DC(uint64_t a1)
{
  uint64_t v2 = sub_10075599C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v6 = 134349056;
    id v7 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[%{public}p] Timeout timer fired", (uint8_t *)&v6, 0xCu);
  }
  id v4 = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = +[NSError errorWithDomain:@"com.apple.Maps.VLFSession" code:1 userInfo:0];
  [v4 registerFailureWithResult:3 error:v5 initializationFailureDetails:0];
}

void sub_100759A6C(uint64_t a1)
{
  uint64_t v2 = sub_10075599C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 48);
    int v7 = 134349312;
    uint64_t v8 = v3;
    __int16 v9 = 2050;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[%{public}p] Updated pocket state: %{public}llu", (uint8_t *)&v7, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v6 = [WeakRetained analyticsCapturer];
  [v6 recordPocketState:*(void *)(a1 + 48)];
}

void sub_100759D2C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSession");
  uint64_t v2 = (void *)qword_10160F7B0;
  qword_10160F7B0 = (uint64_t)v1;
}

void sub_10075A864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10075A87C(uint64_t a1)
{
}

void sub_10075B288(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10075B2A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained updateDataSource];
    id WeakRetained = v2;
  }
}

void sub_10075B464(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10075B478(uint64_t a1)
{
  id v2 = +[MKMapService sharedService];
  uint64_t v3 = [*(id *)(a1 + 32) delegate];
  uint64_t v4 = [v3 containerViewController];
  id v5 = [v4 chromeViewController];
  int v6 = [v5 currentTraits];
  int v7 = [v2 ticketForSearchFieldOfflinePlaceholderWithTraits:v6];

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_10075B5C4;
  _OWORD v9[3] = &unk_1012F7800;
  objc_copyWeak(&v11, (id *)(a1 + 48));
  uint64_t v8 = *(void **)(a1 + 40);
  void v9[4] = *(void *)(a1 + 32);
  id v10 = v8;
  [v7 submitWithHandler:v9 networkActivity:0];

  objc_destroyWeak(&v11);
}

void sub_10075B5B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10075B5C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  int v7 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[424] = 0;
    uint64_t v8 = sub_100109E50();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134218242;
      uint64_t v22 = a2;
      __int16 v23 = 2112;
      id v24 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Offline Search Capability received: %ld. Error: %@", buf, 0x16u);
    }

    if (!v5)
    {
      uint64_t v9 = a2 & 1;
      if (v9 != *((unsigned __int8 *)v7 + 352))
      {
        id v10 = (void *)v7[19];
        v7[19] = 0;
      }
      [v7 logOfflineBrowseMode:v9];
      *((unsigned char *)v7 + 425) = 1;
      *((unsigned char *)v7 + 352) = v9;
      id v11 = +[NSBundle mainBundle];
      int v12 = [v11 localizedStringForKey:@"Browse Offline Maps" value:@"localized string not found" table:0];

      if (*((unsigned char *)v7 + 352))
      {
        id v13 = +[NSBundle mainBundle];
        uint64_t v14 = [v13 localizedStringForKey:@"Search Offline Maps" value:@"localized string not found" table:0];

        int v12 = (void *)v14;
      }
      double v15 = +[NSLocale preferredLanguages];
      CGRect v16 = [v15 firstObject];
      CGRect v17 = +[NSString stringWithFormat:@"%@-%@", @"__internal__searchBarOfflinePlaceholder", v16];

      id v18 = +[NSUserDefaults standardUserDefaults];
      [v18 setObject:v12 forKey:v17];

      int v19 = +[NSUserDefaults standardUserDefaults];
      [v19 synchronize];
    }
    [*(id *)(a1 + 32) _setupOfflinePlaceholder];
    uint64_t v20 = *(void *)(a1 + 40);
    if (v20) {
      (*(void (**)(void))(v20 + 16))();
    }
  }
}

void sub_10075BA74(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    if (!WeakRetained[25])
    {
      uint64_t v4 = WeakRetained;
      unsigned __int8 v3 = [WeakRetained[23] isActive];
      id v2 = v4;
      if ((v3 & 1) == 0)
      {
        [v4[23] scrollContentToOriginalPosition];
        id v2 = v4;
      }
    }
  }
}

id sub_10075C598(uint64_t a1)
{
  return [*(id *)(a1 + 32) searchBarBecomeFirstResponder];
}

void sub_10075CF28(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 clearSearch];

  [*(id *)(a1 + 32) endEditing];
  [*(id *)(a1 + 32) updateContentState];
  unsigned __int8 v3 = [*(id *)(a1 + 32) cardPresentationController];
  id v4 = [v3 containerStyle];

  if (v4 == (id)1)
  {
    id v5 = [*(id *)(a1 + 32) cardPresentationController];
    [v5 wantsLayout:2];
  }
}

uint64_t sub_10075D2F8(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 307) = 0;
  return result;
}

void sub_10075D848(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10075D864(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned __int8 v3 = WeakRetained;
    [WeakRetained[23] showCollection:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_10075D990(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10075D9AC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned __int8 v3 = WeakRetained;
    [WeakRetained[23] editCollection:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

uint64_t sub_10075DB48(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10075E540(uint64_t a1)
{
  return [*(id *)(a1 + 32) restoreSearchItem:*(void *)(a1 + 40)];
}

void sub_10075EDF4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40)
    || (unsigned __int8 v2 = [*(id *)(*(void *)(a1 + 32) + 168) shouldBeVisible],
        double v3 = 0.0,
        (v2 & 1) == 0))
  {
    [*(id *)(*(void *)(a1 + 32) + 240) frame];
    double v3 = v4;
  }
  [*(id *)(*(void *)(a1 + 32) + 256) setConstant:v3];
  id v5 = [*(id *)(a1 + 32) cardPresentationController];
  [v5 updateHeightForCurrentLayout];
}

void *sub_10075EE94(void *result)
{
  uint64_t v1 = result;
  if (*((unsigned char *)result + 40))
  {
    char v2 = 1;
  }
  else
  {
    [*(id *)(result[4] + 168) willMoveToParentViewController:0];
    double v3 = [*(id *)(v1[4] + 168) view];
    [v3 removeFromSuperview];

    [*(id *)(v1[4] + 168) removeFromParentViewController];
    uint64_t result = [*(id *)(v1[4] + 240) layoutIfNeeded];
    char v2 = *((unsigned char *)v1 + 40);
  }
  *(unsigned char *)(v1[4] + 264) = v2;
  return result;
}

void sub_10075F208(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48) && *(unsigned char *)(a1 + 49)) {
    [*(id *)(*(void *)(a1 + 32) + 240) layoutIfNeeded];
  }
  char v2 = *(void **)(a1 + 32);
  double v3 = [v2 cardPresentationController];
  [v2 heightForLayout:[v3 containeeLayout]];
  double v5 = v4;

  double v6 = 0.0;
  if (!*(unsigned char *)(a1 + 49))
  {
    [*(id *)(*(void *)(a1 + 32) + 240) frame];
    double v6 = v7;
  }
  [*(id *)(*(void *)(a1 + 32) + 256) setConstant:v6];
  if (*(double *)(a1 + 40) != v5)
  {
    id v8 = [*(id *)(a1 + 32) cardPresentationController];
    [v8 updateHeightForCurrentLayout];
  }
}

void *sub_10075F314(void *result)
{
  if (*((unsigned char *)result + 40))
  {
    if (!*((unsigned char *)result + 41)) {
      return [*(id *)(result[4] + 240) layoutIfNeeded];
    }
  }
  return result;
}

void sub_100761F6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_100762020(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained(v2);
  double v4 = [WeakRetained delegate];
  [v4 viewController:WeakRetained enterFlyoverForMapItem:v3];

  [WeakRetained[15] resignFirstResponder];
}

void sub_1007620A4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  if (sub_1000BBB44(WeakRetained) == 5) {
    [WeakRetained clearRetainedSearchQuery];
  }
  double v4 = [WeakRetained delegate];
  double v5 = +[MKLookAroundEntryPoint entryPointWithMapItem:v3];

  [v4 enterLookAroundWithEntryPoint:v5 lookAroundView:0 showsFullScreen:1 originFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  [WeakRetained endEditing];
}

void sub_100762170(id a1, MKMapItem *a2)
{
  double v6 = a2;
  uint64_t v2 = [(MKMapItem *)v6 phoneNumber];
  id v3 = [v2 length];

  if (v3)
  {
    double v4 = +[UIApplication sharedApplication];
    double v5 = [(MKMapItem *)v6 phoneNumber];
    [v4 callPhoneNumber:v5 completion:0];
  }
}

void sub_100762208(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v4 = WeakRetained;
  if (WeakRetained)
  {
    double v5 = [WeakRetained delegate];
    double v6 = [v7 url];
    [v5 viewController:v4 openURL:v6];
  }
}

void sub_1007622A0(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v7 && WeakRetained)
  {
    double v4 = [[SearchResult alloc] initWithMapItem:v7];
    double v5 = [WeakRetained delegate];
    [v5 viewController:*(void *)(a1 + 32) openSearchResult:v4];

    [WeakRetained showDropDown:0];
    double v6 = [WeakRetained view];
    [v6 endEditing:1];
  }
}

void sub_10076236C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    if (sub_1000BBB44(WeakRetained) == 5)
    {
      uint64_t v2 = [[HomeDeselectionReason alloc] initWithAction:1];
      [v3[23] clearSelectionWithReason:v2];
    }
    else
    {
      [v3 searchBarBecomeFirstResponder];
    }
    id WeakRetained = v3;
  }
}

void sub_1007627C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [v3 _geoMapItem];
  id v9 = [v4 offlineDownloadRegion];

  double v5 = [v3 name];

  double v6 = +[MKUserLocation title];
  unsigned int v7 = [v5 isEqualToString:v6];

  if (v7)
  {

    double v5 = 0;
  }
  id v8 = [*(id *)(a1 + 32) delegate];
  [v8 viewController:*(void *)(a1 + 32) showOfflineMapRegionSelectorForRegion:v9 name:v5];
}

void sub_10076289C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [[SearchResult alloc] initWithMapItem:v6];
  uint64_t v4 = *(void *)(a1 + 32);
  double v5 = *(void **)(v4 + 416);
  *(void *)(v4 + 416) = v3;

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100762ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100762B00(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    double v5 = (void *)WeakRetained[41];
    if (v5)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      if (v6)
      {
        unsigned int v7 = [v8 firstObject];
        (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);

        double v5 = (void *)v4[41];
      }
      v4[41] = 0;
    }
  }
}

void sub_100762D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100762DA4(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    double v5 = (void *)WeakRetained[41];
    if (v5)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      if (v6)
      {
        unsigned int v7 = [v8 firstObject];
        (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);

        double v5 = (void *)v4[41];
      }
      v4[41] = 0;
    }
  }
}

id sub_100763E34(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateContentState];
}

uint64_t sub_100764CB4(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 426) = 0;
  return result;
}

void sub_100765064(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(a1 + 32) + 184) view];
  [v1 setAlpha:1.0];
}

void sub_100765BB8(id a1)
{
  id v1 = objc_alloc_init(UGCPhotoAttributionPreferencesManager);
  uint64_t v2 = (void *)qword_10160F7E8;
  qword_10160F7E8 = (uint64_t)v1;
}

void sub_100765D24(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) fetchedPreferences];
  id v3 = [*(id *)(a1 + 32) dateOfFetchedPreferences];
  uint64_t v4 = v3;
  if (v2 && ([v3 timeIntervalSinceNow], v5 < 86400.0))
  {
    uint64_t v6 = [*(id *)(a1 + 32) updateError];
    unsigned int v7 = sub_100765ED0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      uint64_t v14 = v2;
      __int16 v15 = 2112;
      CGRect v16 = v4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Using stored preferences: %@ fetched at: %@", buf, 0x16u);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100765F24;
    block[3] = &unk_1012EF330;
    id v12 = *(id *)(a1 + 40);
    id v10 = v2;
    id v11 = v6;
    id v8 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    [*(id *)(a1 + 32) _fetchPhotoAttributionPreferencesWithCompletion:*(void *)(a1 + 40)];
  }
}

id sub_100765ED0()
{
  if (qword_10160F800 != -1) {
    dispatch_once(&qword_10160F800, &stru_1012F7A98);
  }
  v0 = (void *)qword_10160F7F8;

  return v0;
}

uint64_t sub_100765F24(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(a1[6] + 16))(a1[6], a1[4], 0, a1[5]);
}

void sub_100766368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100766394(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32), 0);
}

void sub_1007663B0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    id v10 = WeakRetained[3];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_1007664A0;
    void v11[3] = &unk_1012ED778;
    id v12 = v6;
    id v13 = v7;
    uint64_t v14 = v9;
    id v15 = *(id *)(a1 + 32);
    dispatch_async(v10, v11);
  }
}

void sub_1007664A0(uint64_t a1)
{
  uint64_t v2 = sub_100765ED0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v12 = v3;
    __int16 v13 = 2112;
    uint64_t v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fetched response %@ with error %@", buf, 0x16u);
  }

  double v5 = +[GEORPPhotoAttributionPreferences photoAttributionPreferencesFromResponse:*(void *)(a1 + 32)];
  [*(id *)(a1 + 48) _storeFetchedPreferences:v5];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10076660C;
  block[3] = &unk_1012EF330;
  id v10 = *(id *)(a1 + 56);
  id v8 = v5;
  id v9 = *(id *)(a1 + 40);
  id v6 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_10076660C(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5], 0);
}

void sub_1007666F4(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)GEORPFeedbackRequestParameters);
  id v3 = objc_alloc_init((Class)GEORPFeedbackSubmissionParameters);
  [v2 setSubmissionParameters:v3];

  uint64_t v4 = [v2 submissionParameters];
  [v4 setType:19];

  id v5 = objc_alloc_init((Class)GEORPFeedbackDetails);
  id v6 = [v2 submissionParameters];
  [v6 setDetails:v5];

  id v7 = objc_alloc_init((Class)GEORPPhotoAttributionPreferencesUpdate);
  [v5 setPhotoAttributionPreferencesUpdate:v7];

  id v29 = objc_alloc_init((Class)GEORPPhotoAttributionPreferences);
  id v8 = [v5 photoAttributionPreferencesUpdate];
  [v8 setPreferences:v29];

  BOOL v9 = *(unsigned char *)(a1 + 56) != 0;
  id v10 = [v5 photoAttributionPreferencesUpdate];
  id v11 = [v10 preferences];
  [v11 setAttributePhotos:v9];

  uint64_t v12 = *(void *)(a1 + 32);
  __int16 v13 = [v5 photoAttributionPreferencesUpdate];
  uint64_t v14 = [v13 preferences];
  [v14 setAttributionName:v12];

  id v15 = [*(id *)(a1 + 40) fetchedPreferences];
  CGRect v16 = [v15 version];

  if (v16)
  {
    CGRect v17 = [*(id *)(a1 + 40) fetchedPreferences];
    id v18 = [v17 version];
    int v19 = [v5 photoAttributionPreferencesUpdate];
    uint64_t v20 = [v19 preferences];
    [v20 setVersion:v18];
  }
  id v21 = sub_100765ED0();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    id v38 = v2;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "Submitting photo attribution update: %@", buf, 0xCu);
  }

  id v36 = 0;
  uint64_t v22 = +[UGCCredentialsBuilder buildICloudUserCredentialsWithError:&v36];
  id v23 = v36;
  if (v23)
  {
    id v24 = sub_100765ED0();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v38 = v23;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "Failed to create iCloud user info with error %@.  Will not perform submission lookup.", buf, 0xCu);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100766B94;
    block[3] = &unk_1012E5F78;
    id v35 = *(id *)(a1 + 48);
    id v34 = v23;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    objc_initWeak((id *)buf, *(id *)(a1 + 40));
    double v25 = +[UIApplication sharedMapsDelegate];
    double v26 = [v25 submissionManager];

    double v27 = +[GEOMapService sharedService];
    double v28 = [v27 defaultTraits];
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_100766BB0;
    void v30[3] = &unk_1012F7A28;
    objc_copyWeak(&v32, (id *)buf);
    id v31 = *(id *)(a1 + 48);
    [v26 submitOrEnqueueFeedback:v2 userInfo:v22 traits:v28 debugSettings:0 uploadPolicy:0 feedbackObjectToUpdate:0 completion:v30];

    objc_destroyWeak(&v32);
    objc_destroyWeak((id *)buf);
  }
}

void sub_100766B68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

uint64_t sub_100766B94(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32), 0);
}

void sub_100766BB0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v6)
    {
      BOOL v9 = sub_100765ED0();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v21 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed Sundew call with server error %@", buf, 0xCu);
      }

      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100766D94;
      block[3] = &unk_1012E5F78;
      id v10 = &v19;
      id v19 = *(id *)(a1 + 32);
      id v18 = v6;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      id v11 = v18;
    }
    else
    {
      uint64_t v12 = WeakRetained[3];
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      void v13[2] = sub_100766DB0;
      void v13[3] = &unk_1012ED778;
      id v10 = (id *)v14;
      v14[0] = v5;
      v14[1] = v8;
      id v15 = 0;
      id v16 = *(id *)(a1 + 32);
      dispatch_async(v12, v13);

      id v11 = v15;
    }
  }
}

uint64_t sub_100766D94(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32), 0);
}

void sub_100766DB0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) feedbackResult];
  id v8 = [v2 submissionResult];

  id v3 = [v8 photoAttributionPreferencesUpdateResult];
  uint64_t v4 = [v3 preferences];

  [*(id *)(a1 + 40) _storeFetchedPreferences:v4];
  id v5 = [*(id *)(a1 + 40) _errorsInResponse:*(void *)(a1 + 32)];
  if (v5)
  {
    id v6 = 0;
    id v7 = v5;
  }
  else
  {
    id v6 = v4;
    id v7 = 0;
  }
  [*(id *)(a1 + 40) _finishWithPreferences:v6 serverError:*(void *)(a1 + 48) errorAsString:v7 callback:*(void *)(a1 + 56)];
}

uint64_t sub_100766F80(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(a1[7] + 16))(a1[7], a1[4], a1[5], a1[6]);
}

void sub_1007672F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10076730C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  if (!v2)
  {
    id v3 = [objc_alloc((Class)GEOObserverHashTable) initWithProtocol:&OBJC_PROTOCOL___UGCPhotoAttributionPreferencesObserver queue:&_dispatch_main_q];
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 16);
    *(void *)(v4 + 16) = v3;

    uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  }
  id v6 = (id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);

  objc_storeStrong(v6, v2);
}

void sub_100767504(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCPhotoAttributionPreferencesManager");
  uint64_t v2 = (void *)qword_10160F7F8;
  qword_10160F7F8 = (uint64_t)v1;
}

void sub_1007677A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1007677C4(uint64_t a1, char a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100767860;
  block[3] = &unk_1012F7AC0;
  char v4 = a2;
  void block[4] = *(void *)(a1 + 32);
  objc_copyWeak(&v3, (id *)(a1 + 40));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v3);
}

void sub_100767860(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = +[NSNotificationCenter defaultCenter];
    [v2 postNotificationName:off_1015F31C0 object:*(void *)(a1 + 32)];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _contactsAuthorizationDismissed];
}

void sub_100767F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_100767F44(id a1, NSNumber *a2, RouteLoadingTask *a3, BOOL *a4)
{
}

void sub_100768038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1007680B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1007681F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1007682AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10076859C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007685E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1005768D4();
  id v8 = v7;
  os_signpost_id_t v9 = *(void *)(a1 + 40);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "RouteLoading", "", buf, 2u);
  }

  id v10 = sub_1005768D4();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "RouteLoadingController received results", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v12 = [WeakRetained activeTasksSync];
  objc_sync_enter(v12);
  __int16 v13 = [WeakRetained activeTasks];
  uint64_t v14 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  [v13 removeObjectForKey:v14];

  objc_sync_exit(v12);
  id v15 = [WeakRetained routesResultsSync];
  objc_sync_enter(v15);
  id v16 = [WeakRetained mutableRoutesResults];
  CGRect v17 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  [v16 setObject:v5 forKeyedSubscript:v17];

  objc_sync_exit(v15);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100768870;
  block[3] = &unk_1012E5D08;
  id v18 = v5;
  id v22 = v18;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  id v19 = [WeakRetained delegate];
  [v19 routeLoadingController:WeakRetained didReceiveRoutesResult:v18 forTransportType:*(void *)(a1 + 48) advisoryInfo:v6];

  id v20 = *(id *)(a1 + 48);
  if (v20 == [WeakRetained transportTypeForRealtimeUpdates]) {
    [WeakRetained _updateTaskForRealtimeUpdates];
  }
}

void sub_100768858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100768870(uint64_t a1)
{
  uint64_t v2 = +[UIApplication sharedApplication];
  unsigned int v3 = [v2 isRunningTest];

  if (v3)
  {
    uint64_t v9 = 0;
    id v10 = &v9;
    uint64_t v11 = 0x3032000000;
    uint64_t v12 = sub_100103F0C;
    __int16 v13 = sub_100104810;
    id v14 = 0;
    char v4 = *(void **)(a1 + 32);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1007689E0;
    _OWORD v8[3] = &unk_1012EEC48;
    void v8[4] = &v9;
    [v4 withValue:v8 orError:&stru_1012F7B48];
    id v5 = +[GEONotificationPreferenceManager sharedManager];
    unsigned int v6 = [v5 isEnabledForSubTestWithName:@"GEOPPTTest_RouteManager_DirectionsRequest"];

    if (v6)
    {
      id v7 = +[NSNotificationCenter defaultCenter];
      [v7 postNotificationName:@"GEOPPTTest_RouteManager_DirectionsRequestEND" object:v10[5]];
    }
    _Block_object_dispose(&v9, 8);
  }
}

void sub_1007689C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007689E0(uint64_t a1, void *a2)
{
}

void sub_100768A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100768CB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100768CC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 count])
  {
    char v4 = [*(id *)(a1 + 32) routeLoadingTaskFactory];
    id v5 = [v4 taskForRoutes:v3];

    if (v5)
    {
      unsigned int v6 = [*(id *)(a1 + 32) activeTasksSync];
      objc_sync_enter(v6);
      [*(id *)(a1 + 32) setRouteUpdatingTask:v5];
      objc_sync_exit(v6);

      objc_initWeak(&location, *(id *)(a1 + 32));
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_100768E0C;
      void v7[3] = &unk_1012E9BD0;
      objc_copyWeak(&v8, &location);
      [v5 startWithUpdateHandler:v7];
      objc_destroyWeak(&v8);
      objc_destroyWeak(&location);
    }
  }
}

void sub_100768DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100768E0C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleResults:v3];
}

void sub_10076917C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472;
  CGRect v17 = sub_100769374;
  id v18 = &unk_1012EAE80;
  id v19 = *(id *)(a1 + 32);
  id v4 = [v3 indexOfObjectPassingTest:&v15];
  if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v5 = [v3 objectAtIndexedSubscript:v4, v15, v16, v17, v18];
    unsigned int v6 = sub_1005768D4();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG);

    if (v7)
    {
      id v8 = sub_1005768D4();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = [v5 uniqueRouteID];
        uint64_t v10 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 138412547;
        id v22 = v9;
        __int16 v23 = 2113;
        uint64_t v24 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Update came in for %@: %{private}@", buf, 0x16u);
      }
    }
    uint64_t v20 = *(void *)(a1 + 40);
    uint64_t v11 = +[NSArray arrayWithObjects:&v20 count:1];
    [v5 applyUpdatesToTransitRoute:v11];

    [*(id *)(a1 + 48) addObject:v5];
    uint64_t v12 = *(void **)(a1 + 56);
    uint64_t v13 = *(void *)(a1 + 40);
    id v14 = [v5 uniqueRouteID];
    [v12 setObject:v13 forKey:v14];
  }
}

id sub_100769374(uint64_t a1, void *a2)
{
  id v3 = [a2 uniqueRouteID];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_100769820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100769838(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  id v19 = a2;
  unsigned int v6 = [v19 place];
  BOOL v7 = [v6 address];
  id v8 = [v7 structuredAddress];

  uint64_t v9 = [v8 locality];
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  uint64_t v12 = [v19 title];
  LODWORD(v7) = [v12 isEqualToString:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];

  if (v7)
  {
    uint64_t v13 = [v19 place];
    id v14 = [v13 address];
    id v15 = [v14 structuredAddress];
    uint64_t v16 = [v15 _cellContent_subtitleWithTitle:*(void *)(a1 + 32)];
    uint64_t v17 = *(void *)(*(void *)(a1 + 40) + 8);
    id v18 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v16;
  }
  *a4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) length] != 0;
}

void sub_10076997C(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (!v7)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6) {
      (*(void (**)(uint64_t, id))(v6 + 16))(v6, v5);
    }
  }
}

id sub_100769DCC(void *a1)
{
  id v1 = a1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100769EC4;
  void v7[3] = &unk_1012F7C78;
  id v2 = [objc_alloc((Class)NSMutableString) initWithFormat:@"<%@:%p\n", objc_opt_class(), v1];
  id v8 = v2;
  id v9 = v1;
  id v3 = v1;
  [v3 enumerateObjectsUsingBlock:v7];
  [v2 appendString:@"\n>"];
  id v4 = v9;
  id v5 = v2;

  return v5;
}

id sub_100769EC4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  id v7 = *(void **)(a1 + 32);
  if (isKindOfClass) {
    [v5 shortDescription];
  }
  else {
  id v8 = [v5 description];
  }

  [v7 appendString:v8];
  id result = [*(id *)(a1 + 40) count];
  if (a3 + 1 < (unint64_t)result)
  {
    uint64_t v10 = *(void **)(a1 + 32);
    return [v10 appendString:@",\n"];
  }
  return result;
}

UIColor *__cdecl sub_10076A800(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

UIColor *__cdecl sub_10076A8D4(id a1)
{
  return (UIColor *)[(id)qword_10160F818 keyColor];
}

id sub_10076AB2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = +[UIImage imageNamed:*(void *)(a1 + 40)];
  id v4 = v3;
  if (v2) {
    [v3 _flatImageWithColor:*(void *)(a1 + 32)];
  }
  else {
  id v5 = [v3 imageWithRenderingMode:2];
  }

  if (*(unsigned char *)(a1 + 56) && *(unsigned char *)(*(void *)(a1 + 48) + 24))
  {
    id v6 = v5;
    id v7 = [v6 CGImage];
    [v6 scale];
    +[UIImage imageWithCGImage:scale:orientation:](UIImage, "imageWithCGImage:scale:orientation:", v7, 4);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v8 = v5;
  }
  id v9 = v8;

  return v9;
}

void sub_10076B484(id a1)
{
  id v5 = +[UITraitCollection _currentTraitCollection];
  id v1 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:2];
  +[UITraitCollection _setCurrentTraitCollection:v1];

  id v2 = +[UIColor systemGray5Color];
  uint64_t v3 = +[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", [v2 CGColor]);
  id v4 = (void *)qword_10160F828;
  qword_10160F828 = v3;

  +[UITraitCollection _setCurrentTraitCollection:v5];
}

void sub_10076B834(uint64_t a1)
{
  id v2 = [(id)objc_opt_class() globalThemes];
  uint64_t v3 = [*(id *)(a1 + 32) _mapsThemeStyleKey:0];
  id v4 = [v2 objectForKeyedSubscript:v3];

  id v5 = [(id)objc_opt_class() globalThemes];
  id v6 = [*(id *)(a1 + 32) _mapsThemeStyleKey:1];
  id v7 = [v5 objectForKeyedSubscript:v6];

  id v8 = [v4 objectForKeyedSubscript:@"ControlBackgroundColorKey"];
  [v7 objectForKeyedSubscript:@"ControlBackgroundColorKey"];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10076B9C4;
  void v13[3] = &unk_1012F7E40;
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  id v15 = v8;
  id v9 = v8;
  id v10 = v14;
  uint64_t v11 = +[UIColor colorWithDynamicProvider:v13];
  uint64_t v12 = (void *)qword_10160F838;
  qword_10160F838 = v11;
}

id sub_10076B9C4(uint64_t a1, void *a2)
{
  id v3 = [a2 userInterfaceStyle];
  uint64_t v4 = 40;
  if (v3 == (id)2) {
    uint64_t v4 = 32;
  }
  id v5 = *(void **)(a1 + v4);

  return v5;
}

void sub_10076BAD4(uint64_t a1)
{
  id v2 = [(id)objc_opt_class() globalThemes];
  id v3 = [*(id *)(a1 + 32) _mapsThemeStyleKey:0];
  uint64_t v4 = [v2 objectForKeyedSubscript:v3];

  id v5 = [(id)objc_opt_class() globalThemes];
  id v6 = [*(id *)(a1 + 32) _mapsThemeStyleKey:1];
  id v7 = [v5 objectForKeyedSubscript:v6];

  id v8 = [v4 objectForKeyedSubscript:@"HairLineColorKey"];
  [v7 objectForKeyedSubscript:@"HairLineColorKey"];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10076BC64;
  void v13[3] = &unk_1012F7E40;
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  id v15 = v8;
  id v9 = v8;
  id v10 = v14;
  uint64_t v11 = +[UIColor colorWithDynamicProvider:v13];
  uint64_t v12 = (void *)qword_10160F848;
  qword_10160F848 = v11;
}

id sub_10076BC64(uint64_t a1, void *a2)
{
  id v3 = [a2 userInterfaceStyle];
  uint64_t v4 = 40;
  if (v3 == (id)2) {
    uint64_t v4 = 32;
  }
  id v5 = *(void **)(a1 + v4);

  return v5;
}

uint64_t sub_10076F2B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10076F848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10076F86C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && *((unsigned char *)WeakRetained + 32))
  {
    uint64_t v4 = WeakRetained;
    id v2 = objc_loadWeakRetained(WeakRetained + 21);
    id v3 = [v4 item];
    [v3 center];
    [v2 _updatePanWithTranslation:];

    id WeakRetained = v4;
  }
}

void sub_10077195C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100771974(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 currentState];
  id v6 = [v5 mapRegion];
  GEOMapRectForMapRegion();

  [v4 coordinate];
  [v4 coordinate];

  GEOMapPointForCoordinate();
  uint64_t result = GEOMapRectContainsPoint();
  if (result) {
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return result;
}

void sub_100771B20(id a1)
{
  if (dlopen((const char *)[@"/System/Library/Frameworks/MessageUI.framework/MessageUI" fileSystemRepresentation], 4))
  {
    qword_10160F858 = (uint64_t)NSClassFromString(@"MFMailComposeViewController");
    if (!qword_10160F858) {
      NSLog(@"Could not find MFMailComposeViewController\n");
    }
  }
  else
  {
    id v1 = dlerror();
    NSLog(@"Could not load MessageUI from %@ (%s)", @"/System/Library/Frameworks/MessageUI.framework/MessageUI", v1);
  }
}

void sub_100772474(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 debugController:*(void *)(a1 + 32) choseTraceAtPath:*(void *)(*(void *)(a1 + 32) + 120) startNav:0];
}

void sub_1007724D8(uint64_t a1)
{
  id v2 = +[NSURL fileURLWithPath:*(void *)(*(void *)(a1 + 32) + 120)];
  uint64_t v12 = v2;
  id v3 = +[NSArray arrayWithObjects:&v12 count:1];
  id v4 = [objc_alloc((Class)UIActivityViewController) initWithActivityItems:v3 applicationActivities:0];
  v11[0] = UIActivityTypePostToFacebook;
  v11[1] = UIActivityTypePostToWeibo;
  void v11[2] = UIActivityTypePrint;
  void v11[3] = UIActivityTypeAssignToContact;
  void v11[4] = UIActivityTypeSaveToCameraRoll;
  void v11[5] = UIActivityTypeAddToReadingList;
  v11[6] = UIActivityTypePostToFlickr;
  v11[7] = UIActivityTypePostToVimeo;
  uint8_t v11[8] = UIActivityTypePostToTencentWeibo;
  v11[9] = UIActivityTypeOpenInIBooks;
  v11[10] = UIActivityTypeMarkupAsPDF;
  v11[11] = UIActivityTypeSharePlay;
  v11[12] = UIActivityTypeCollaborationInviteWithLink;
  v11[13] = UIActivityTypeCollaborationCopyLink;
  v11[14] = UIActivityTypeAddToHomeScreen;
  id v5 = +[NSArray arrayWithObjects:v11 count:15];
  [v4 setExcludedActivityTypes:v5];
  [v4 setTitle:*(void *)(*(void *)(a1 + 32) + 128)];
  if (objc_opt_respondsToSelector())
  {
    id v6 = [*(id *)(a1 + 32) view];
    id v7 = [v4 popoverPresentationController];
    [v7 setSourceView:v6];
  }
  id v8 = *(void **)(a1 + 32);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_10077277C;
  _OWORD v9[3] = &unk_1012E5D58;
  void v9[4] = v8;
  id v10 = *(id *)(a1 + 40);
  [v8 presentViewController:v4 animated:1 completion:v9];
}

void sub_10077277C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 deselectRowAtIndexPath:*(void *)(a1 + 40) animated:0];
}

id sub_1007727D4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _showDeleteFileSheet];
}

void sub_1007727DC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 deselectRowAtIndexPath:*(void *)(a1 + 40) animated:0];
}

id sub_100772C1C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 deselectRowAtIndexPath:*(void *)(a1 + 40) animated:1];

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = *(id *)(a1 + 48);
  id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v11 + 1) + 8 * (void)v7);
        id v9 = +[TraceManager sharedManager];
        [v9 deleteUserTraceWithPath:v8];

        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  return [*(id *)(a1 + 32) reloadTraces];
}

void sub_100772D60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 deselectRowAtIndexPath:*(void *)(a1 + 40) animated:1];
}

void sub_100772F90(id a1)
{
  if (MGGetBoolAnswer())
  {
    if (MGGetSInt32Answer() == 1)
    {
      if (MGGetBoolAnswer())
      {
        id v1 = sub_1007730F0();
        if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v4 = 0;
          id v2 = "VIO is supported on the current device";
          id v3 = (uint8_t *)&v4;
LABEL_12:
          _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, v2, v3, 2u);
        }
      }
      else
      {
        byte_1016123E0 = 1;
        id v1 = sub_1007730F0();
        if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          id v2 = "VIO is not supported because the current device does not support the DeviceSupportsMapsOpticalHeading gestalt key";
          id v3 = buf;
          goto LABEL_12;
        }
      }
    }
    else
    {
      byte_1016123E0 = 1;
      id v1 = sub_1007730F0();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v6 = 0;
        id v2 = "VIO is not supported because the current device is not an iPhone";
        id v3 = (uint8_t *)&v6;
        goto LABEL_12;
      }
    }
  }
  else
  {
    byte_1016123E0 = 1;
    id v1 = sub_1007730F0();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v7 = 0;
      id v2 = "VIO is not supported because the current device does not support ARKit";
      id v3 = (uint8_t *)&v7;
      goto LABEL_12;
    }
  }
}

id sub_1007730F0()
{
  if (qword_10160F870 != -1) {
    dispatch_once(&qword_10160F870, &stru_1012F7EC8);
  }
  v0 = (void *)qword_10160F868;

  return v0;
}

void sub_100773144(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOAvailability");
  id v2 = (void *)qword_10160F868;
  qword_10160F868 = (uint64_t)v1;
}

NSString *__cdecl sub_1007736AC(id a1, GEOSharedNavState *a2, unint64_t a3)
{
  return (NSString *)[(GEOSharedNavState *)a2 _transportTypeStringForAnalytics];
}

BOOL sub_100773AEC(id a1, MapsSuggestionsEntry *a2)
{
  id v2 = a2;
  id v3 = [(MapsSuggestionsEntry *)v2 type];
  if (!v3 || v3 == (id)6)
  {
    BOOL v5 = 0;
  }
  else if (v3 == (id)5)
  {
    __int16 v4 = [(MapsSuggestionsEntry *)v2 geoMapItem];
    BOOL v5 = v4 != 0;
  }
  else
  {
    BOOL v5 = 1;
  }

  return v5;
}

HomeOutlineSectionControllerConfiguration *sub_100773F70(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int16 v4 = [HomeOutlineSectionControllerConfiguration alloc];
  BOOL v5 = [*(id *)(a1 + 32) configuration];
  __int16 v6 = [v5 collectionView];
  __int16 v7 = *(void **)(a1 + 32);
  uint64_t v8 = [v7 configuration];
  id v9 = [v8 actionCoordinator];
  id v10 = [*(id *)(a1 + 32) configuration];
  long long v11 = [v10 homeActionDelegate];
  long long v12 = [*(id *)(a1 + 32) _storage];
  long long v13 = [(HomeOutlineSectionControllerConfiguration *)v4 initWithCollectionView:v6 sectionIdentifier:v3 delegate:v7 actionCoordinator:v9 homeActionDelegate:v11 storage:v12];

  return v13;
}

void sub_1007742B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_1007742F0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _expandItem:v3];

  return 0;
}

uint64_t sub_100774338(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _collapseItem:v3];

  return 0;
}

NSString *__cdecl sub_100774F54(id a1, id a2, unint64_t a3)
{
  id v3 = (objc_class *)objc_opt_class();

  return NSStringFromClass(v3);
}

void sub_10077522C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100775268(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _didCompleteInitialUpdate];
  }
}

void sub_10077602C(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) configuration];
  id v2 = [v3 collectionView];
  [v2 setAlpha:v1];
}

uint64_t sub_100776098(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1007760B0(uint64_t result)
{
  if (!*(unsigned char *)(result + 40))
  {
    uint64_t result = *(void *)(result + 32);
    if (result) {
      return (*(uint64_t (**)(void))(result + 16))();
    }
  }
  return result;
}

NSString *__cdecl sub_1007760D0(id a1, HomeOutlineSectionController *a2, unint64_t a3)
{
  id v3 = [(HomeOutlineSectionController *)a2 configuration];
  __int16 v4 = [v3 sectionIdentifier];

  return (NSString *)v4;
}

NSString *__cdecl sub_100776120(id a1, MapsUIDiffableDataSourceOutlineNodeSnapshot *a2, unint64_t a3)
{
  id v3 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a2 identifierPath];
  __int16 v4 = [v3 visualDescription];

  return (NSString *)v4;
}

NSString *__cdecl sub_100776170(id a1, MapsUIDiffableDataSourceOutlineNodeSnapshot *a2, unint64_t a3)
{
  id v3 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a2 identifierPath];
  __int16 v4 = [v3 visualDescription];

  return (NSString *)v4;
}

NSString *__cdecl sub_1007761C0(id a1, MapsUIDiffableDataSourceOutlineNodeSnapshot *a2, unint64_t a3)
{
  id v3 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a2 identifierPath];
  __int16 v4 = [v3 visualDescription];

  return (NSString *)v4;
}

NSString *__cdecl sub_100776210(id a1, MapsUIDiffableDataSourceOutlineNodeSnapshot *a2, unint64_t a3)
{
  id v3 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a2 identifierPath];
  __int16 v4 = [v3 visualDescription];

  return (NSString *)v4;
}

NSString *__cdecl sub_100776260(id a1, MapsUIDiffableDataSourceOutlineNodeSnapshot *a2, unint64_t a3)
{
  id v3 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a2 identifierPath];
  __int16 v4 = [v3 visualDescription];

  return (NSString *)v4;
}

NSString *__cdecl sub_1007762B0(id a1, MapsUIDiffableDataSourceOutlineNodeSnapshot *a2, unint64_t a3)
{
  id v3 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a2 identifierPath];
  __int16 v4 = [v3 visualDescription];

  return (NSString *)v4;
}

id sub_100778190(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _identifierPathForIndexPath:a2];
}

void sub_10077844C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 collectionView:*(void *)(a1 + 32) didSelectItemAtIndexPath:*(void *)(a1 + 40)];
}

id sub_100778CF0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _completeFocusAfterScrollingWithSuccess:a2];
}

void sub_100778DC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateFocusAfterScrolling];
}

void sub_100779CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100779D00(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  __int16 v6 = [a2 clientImageUuid];
  uint64_t v7 = a1[5];
  uint64_t v8 = *(void **)(a1[4] + 16);
  id v9 = [v5 rawImageData];

  unsigned int v10 = [v8 saveImageWithSubmissionIdentifier:v7 imageIdentifier:v6 imageData:v9];
  uint64_t v11 = *(void *)(a1[6] + 8);
  if (*(unsigned char *)(v11 + 24)) {
    char v12 = v10;
  }
  else {
    char v12 = 0;
  }
  *(unsigned char *)(v11 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v12;
  long long v13 = sub_100109EF8();
  long long v14 = v13;
  if (v10)
  {
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      uint64_t v15 = a1[5];
      int v20 = 138412546;
      uint64_t v21 = v15;
      __int16 v22 = 2112;
      __int16 v23 = v6;
      uint64_t v16 = "Successfully saved image at path %@/%@";
      uint64_t v17 = v14;
      os_log_type_t v18 = OS_LOG_TYPE_INFO;
LABEL_9:
      _os_log_impl((void *)&_mh_execute_header, v17, v18, v16, (uint8_t *)&v20, 0x16u);
    }
  }
  else if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    uint64_t v19 = a1[5];
    int v20 = 138412546;
    uint64_t v21 = v19;
    __int16 v22 = 2112;
    __int16 v23 = v6;
    uint64_t v16 = "Failed to save image at path %@/%@";
    uint64_t v17 = v14;
    os_log_type_t v18 = OS_LOG_TYPE_ERROR;
    goto LABEL_9;
  }
}

void sub_100779F98(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  id v4[2] = sub_10077A080;
  void v4[3] = &unk_1012F8130;
  objc_copyWeak(&v6, &location);
  id v5 = *(id *)(a1 + 40);
  [v3 getTasksWithCompletionHandler:v4];

  objc_destroyWeak(&v6);
  objc_destroyWeak(&location);
}

void sub_10077A064(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10077A080(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v15 = a1;
    id v16 = v4;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v6 = v4;
    id v7 = [v6 countByEnumeratingWithState:&v17 objects:v23 count:16];
    if (!v7) {
      goto LABEL_17;
    }
    id v8 = v7;
    uint64_t v9 = *(void *)v18;
    while (1)
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        if (objc_msgSend(v11, "state", v15, v16) == (id)3)
        {
          char v12 = [v11 taskDescription];
          uint64_t v13 = sub_1008CEFB0(v12);

          if (v13 == 2)
          {
            long long v14 = [v11 error];
            [WeakRetained _handleCorrectionsUploadTask:v11 withSessionError:v14];
          }
          else
          {
            if (v13 != 1) {
              continue;
            }
            long long v14 = [v11 error];
            [WeakRetained _handleImageUploadTask:v11 withSessionError:v14];
          }
        }
        else
        {
          long long v14 = sub_100109EF8();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = 138412290;
            __int16 v22 = v11;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Not handling task %@", buf, 0xCu);
          }
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v17 objects:v23 count:16];
      if (!v8)
      {
LABEL_17:

        a1 = v15;
        id v4 = v16;
        break;
      }
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10077A32C(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 40))
  {
    uint64_t v2 = +[NSURLSessionConfiguration backgroundSessionConfigurationWithIdentifier:@"com.apple.Maps.rap.submission"];
    [v2 set_allowsExpensiveAccess:1];
    [v2 setAllowsCellularAccess:1];
    [v2 set_requiresPowerPluggedIn:0];
    [v2 setSessionSendsLaunchEvents:1];
    uint64_t v3 = +[NSURLSession sessionWithConfiguration:v2 delegate:*(void *)(a1 + 32) delegateQueue:0];
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;
  }
  id v6 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v6();
}

void sub_10077A618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10077A63C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[3] removeImageUploadObjectsForSubmissionIdentifier:*(void *)(a1 + 32)];
    if ([v4 _saveCorrections:v5 submissionIdentifier:*(void *)(a1 + 32) addARPCHeaders:1])[v4 _dispatchCorrectionsUploadForSubmissionIdentifier:*(void *)(a1 + 32) newRetryCount:0 isPOIEnrichment:[v5 isPOIEnrichment]]; {
  }
    }
}

void sub_10077B87C(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 uploadTaskWithRequest:*(void *)(a1 + 32) fromFile:*(void *)(a1 + 40)];
  uint64_t v4 = sub_1008CF444(*(void **)(a1 + 48), *(void **)(a1 + 56), *(void **)(a1 + 64), *(void *)(a1 + 80));
  [v3 setTaskDescription:v4];

  if (*(uint64_t *)(a1 + 80) >= 1)
  {
    id v5 = +[BackgroundFeedbackUploader resubmissionDateWithRetryCount:](BackgroundFeedbackUploader, "resubmissionDateWithRetryCount:");
    [v3 setEarliestBeginDate:v5];
  }
  id v6 = sub_100109EF8();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v9 = *(void *)(a1 + 72);
    uint64_t v10 = *(void *)(a1 + 80);
    int v11 = 138413058;
    uint64_t v12 = v7;
    __int16 v13 = 2112;
    uint64_t v14 = v8;
    __int16 v15 = 2112;
    uint64_t v16 = v9;
    __int16 v17 = 2048;
    uint64_t v18 = v10;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Starting image upload with clientId %@ and imageId %@ to url %@ with retry count %ld", (uint8_t *)&v11, 0x2Au);
  }

  [v3 resume];
}

void sub_10077BBB0(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 uploadTaskWithRequest:*(void *)(a1 + 32) fromFile:*(void *)(a1 + 40)];
  uint64_t v4 = sub_1008CF55C(*(void **)(a1 + 48), *(void *)(a1 + 64));
  [v3 setTaskDescription:v4];

  if (*(uint64_t *)(a1 + 64) >= 1)
  {
    id v5 = +[BackgroundFeedbackUploader resubmissionDateWithRetryCount:](BackgroundFeedbackUploader, "resubmissionDateWithRetryCount:");
    id v6 = sub_100109EF8();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      int v10 = 138412290;
      int v11 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Creating earliest begin date %@", (uint8_t *)&v10, 0xCu);
    }

    [v3 setEarliestBeginDate:v5];
  }
  uint64_t v7 = sub_100109EF8();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = *(void **)(a1 + 48);
    uint64_t v9 = *(void *)(a1 + 56);
    int v10 = 138412546;
    int v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Starting corrections upload %@ to url %@", (uint8_t *)&v10, 0x16u);
  }

  [v3 resume];
}

id sub_10077D3B0()
{
  if (qword_10160F880 != -1) {
    dispatch_once(&qword_10160F880, &stru_1012F81F0);
  }
  v0 = (void *)qword_10160F878;

  return v0;
}

void sub_10077D6B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    unsigned int v2 = [WeakRetained isBatteryLevelTooLow];
    uint64_t v3 = [v5 stateManager];
    uint64_t v4 = v3;
    if (v2) {
      [v3 recordSessionDisableEvent:1];
    }
    else {
      [v3 resetSessionDisableEvent:1];
    }

    id WeakRetained = v5;
  }
}

void sub_10077D768(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionBatteryLevelMonitor");
  unsigned int v2 = (void *)qword_10160F878;
  qword_10160F878 = (uint64_t)v1;
}

uint64_t sub_10077F0A4(uint64_t a1)
{
  uint64_t v1 = 12;
  if ((a1 & 1) == 0) {
    uint64_t v1 = 15;
  }
  if ((a1 & 2) != 0) {
    v1 &= 0xAu;
  }
  if ((a1 & 4) != 0) {
    v1 &= 3u;
  }
  if ((a1 & 8) != 0) {
    v1 &= 0x5555555555555555uLL;
  }
  if (a1) {
    return v1;
  }
  else {
    return -1;
  }
}

void sub_10077F2C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
  if (WeakRetained)
  {
  }
  else if ([*(id *)(a1 + 40) conformsToProtocol:&OBJC_PROTOCOL___CarCardStyleProviding])
  {
    [*(id *)(a1 + 32) setStyleProvider:*(void *)(a1 + 40)];
  }
  uint64_t v3 = [*(id *)(a1 + 40) view];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = [*(id *)(a1 + 32) containerView];
  [v4 bounds];
  [v3 setFrame:];

  id v5 = [*(id *)(a1 + 32) containerView];
  [v5 addSubview:v3];

  uint64_t v21 = [v3 topAnchor];
  __int16 v22 = [*(id *)(a1 + 32) accessoryContainerView];
  long long v20 = [v22 bottomAnchor];
  long long v19 = [v21 constraintEqualToAnchor:v20];
  v23[0] = v19;
  __int16 v17 = [v3 leftAnchor];
  uint64_t v18 = [*(id *)(a1 + 32) containerView];
  uint64_t v16 = [v18 leftAnchor];
  __int16 v15 = [v17 constraintEqualToAnchor:v16];
  v23[1] = v15;
  id v6 = [v3 bottomAnchor];
  uint64_t v7 = [*(id *)(a1 + 32) containerView];
  uint64_t v8 = [v7 bottomAnchor];
  uint64_t v9 = [v6 constraintEqualToAnchor:v8];
  void v23[2] = v9;
  int v10 = [v3 rightAnchor];
  int v11 = [*(id *)(a1 + 32) containerView];
  __int16 v12 = [v11 rightAnchor];
  uint64_t v13 = [v10 constraintEqualToAnchor:v12];
  void v23[3] = v13;
  uint64_t v14 = +[NSArray arrayWithObjects:v23 count:4];
  +[NSLayoutConstraint activateConstraints:v14];
}

void sub_10077F908(_Unwind_Exception *a1)
{
  sub_10077F920(v1);
  _Unwind_Resume(a1);
}

void sub_10077F920(uint64_t a1)
{
  unsigned int v2 = *(void **)(a1 + 72);
}

void sub_10077F9EC(_Unwind_Exception *a1)
{
  sub_10077F920(v1);
  _Unwind_Resume(a1);
}

__n128 sub_10077FA04(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  long long v6 = a2[2];
  *(_OWORD *)(a1 + 44) = *(long long *)((char *)a2 + 44);
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)a1 = v4;
  objc_storeStrong((id *)(a1 + 64), *((id *)a2 + 8));
  objc_storeStrong((id *)(a1 + 72), *((id *)a2 + 9));
  __n128 result = (__n128)a2[5];
  long long v8 = a2[6];
  long long v9 = a2[7];
  *(unsigned char *)(a1 + 12_Block_object_dispose(&STACK[0x238], 8) = *((unsigned char *)a2 + 128);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

id sub_100780088(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setHighlighted:0];
}

void sub_100781B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19)
{
  if (!v19)
  {
  }
  _Unwind_Resume(exception_object);
}

void sub_100781E6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100781F30(_Unwind_Exception *a1)
{
  sub_10077F920(v1);
  _Unwind_Resume(a1);
}

UIColor *__cdecl sub_100782E84(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)2) {
    +[UIColor systemWhiteColor];
  }
  else {
  unsigned int v2 = +[UIColor systemBlueColor];
  }

  return (UIColor *)v2;
}

void sub_100783014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100783034(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _updateMenu];
    id v3 = v2[13];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void sub_1007831A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007831BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v14 = WeakRetained;
    unsigned int v2 = [WeakRetained chromeViewController];
    id v3 = [v2 mapView];

    *((_DWORD *)v14 + 30) = [v3 _applicationState];
    [v3 _setApplicationState:9];
    long long v4 = [v14 iosBasedChromeViewController];
    uint64_t v5 = [v4 acquireExploreMapHikingMapToken];
    long long v6 = (void *)*((void *)v14 + 16);
    *((void *)v14 + 16) = v5;

    if ([v3 _isPitched]) {
      [v3 _exit3DMode];
    }
    *((unsigned char *)v14 + 1++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [v3 isPitchEnabled];
    [v3 setPitchEnabled:0];
    [v3 addSubview:*((void *)v14 + 14)];
    [v14 _insertEditStackButtons];
    uint64_t v7 = [v14 composedRoute];
    [*((id *)v14 + 1) setRoute:v7];

    long long v8 = [*((id *)v14 + 5) lastObject];
    long long v9 = [v8 anchorPoints];
    id v10 = [v9 count];

    if ((unint64_t)v10 <= 1) {
      [v14 _requeryStateWithAction:0 shouldRecenterOnCompletion:0];
    }
    int v11 = [v14 chromeViewController];
    uint64_t v12 = sub_1000BBB44(v11);

    if (v12 == 5) {
      [v3 _setScaleVisibility:1];
    }
    else {
      [v14 _updateScaleAndCompass];
    }
    [v14 _updateCoachingPillWithIgnoreChromeTransitioning:1];
    uint64_t v13 = +[MKMapService sharedService];
    [v13 captureUserAction:21 onTarget:131 eventValue:0];

    id WeakRetained = v14;
  }
}

void sub_100783554(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_100783590(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    unsigned int v2 = sub_10057683C();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Will stop ripple animation (resign)", v8, 2u);
    }

    +[NSObject cancelPreviousPerformRequestsWithTarget:WeakRetained selector:"_removeRippleView" object:0];
    [WeakRetained _removeRippleView];
    uint64_t v3 = [WeakRetained chromeViewController];
    long long v4 = [v3 mapView];

    [v4 _setApplicationState:*((unsigned int *)WeakRetained + 30)];
    [v4 setPitchEnabled:*((unsigned __int8 *)WeakRetained + 124)];
    [WeakRetained[14] removeFromSuperview];
    [WeakRetained _removeEditStackButtons];
    [WeakRetained[17] dismissAnimated:1 completion:0];
    uint64_t v5 = [WeakRetained chromeViewController];
    uint64_t v6 = sub_1000BBB44(v5);

    if (v6 == 5)
    {
      if (+[MapsSettings alwaysShowScale]) {
        uint64_t v7 = 2;
      }
      else {
        uint64_t v7 = 0;
      }
      [v4 _setScaleVisibility:v7];
    }
    else
    {
      [v4 setShowsScale:1];
      [v4 setShowsCompass:1];
    }
  }
}

void sub_1007836F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    unsigned int v2 = (void *)WeakRetained[16];
    WeakRetained[16] = 0;
    uint64_t v3 = WeakRetained;

    id WeakRetained = v3;
  }
}

void sub_100783740(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    unsigned int v2 = (void *)WeakRetained[16];
    WeakRetained[16] = 0;
    uint64_t v3 = WeakRetained;

    id WeakRetained = v3;
  }
}

id sub_100784E74(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) setAlpha:1.0];
}

void sub_1007853B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007853E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1007854E4;
  block[3] = &unk_1012F8278;
  objc_copyWeak(&v14, (id *)(a1 + 40));
  id v11 = v5;
  char v15 = *(unsigned char *)(a1 + 48);
  id v7 = *(id *)(a1 + 32);
  char v16 = *(unsigned char *)(a1 + 49);
  id v12 = v7;
  id v13 = v6;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v14);
}

void sub_1007854E4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = WeakRetained[6];
    WeakRetained[6] = 0;

    id v5 = [v3[5] lastObject];
    id v6 = [v5 anchorPoints];
    id v7 = [v6 count];

    if (!v7)
    {
      id v8 = sub_10057683C();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        LOWORD(v36) = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Will stop ripple animation (map item)", (uint8_t *)&v36, 2u);
      }

      +[NSObject cancelPreviousPerformRequestsWithTarget:v3 selector:"_removeRippleView" object:0];
      id v9 = [v3[19] rippleView];
      [v9 timeUntilAnimationStop];
      double v11 = v10;

      [v3 performSelector:"_removeRippleView" withObject:0 afterDelay:v11];
    }
    id v12 = [*(id *)(a1 + 32) firstObject];
    if (v12)
    {
      if (*(unsigned char *)(a1 + 64))
      {
        [*(id *)(a1 + 40) _coordinate];
        double v14 = v13;
        double v16 = v15;
        __int16 v17 = [v12 _geoMapItem];
        uint64_t v18 = [v17 name];
        uint64_t v19 = +[GEOComposedRouteAnchorPoint anchorPointWithCoordinate:isCurrentLocation:name:](GEOComposedRouteAnchorPoint, "anchorPointWithCoordinate:isCurrentLocation:name:", 1, v18, v14, v16, 1.79769313e308);
      }
      else
      {
        if (*(unsigned char *)(a1 + 65))
        {
          [*(id *)(a1 + 40) _coordinate];
          double v30 = v29;
          double v32 = v31;
          __int16 v17 = [v12 _geoMapItem];
          +[GEOComposedRouteAnchorPoint anchorPointWithMapItem:coordinate:](GEOComposedRouteAnchorPoint, "anchorPointWithMapItem:coordinate:", v17, v30, v32, 1.79769313e308);
          id v33 = (id)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          id v34 = objc_alloc((Class)GEOComposedRouteAnchorPoint);
          __int16 v17 = [v12 _geoMapItem];
          id v33 = [v34 initWithMapItem:v17];
        }
        uint64_t v19 = v33;
      }

      [v19 setIsCurrentLocation:*(unsigned __int8 *)(a1 + 64)];
    }
    else
    {
      long long v20 = sub_10057683C();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        uint64_t v21 = *(void *)(a1 + 48);
        int v36 = 138543362;
        uint64_t v37 = v21;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "Failed to refine map item for anchor point. error: %{public}@", (uint8_t *)&v36, 0xCu);
      }

      [*(id *)(a1 + 40) _coordinate];
      uint64_t v24 = *(void **)(a1 + 40);
      if (!v24 || (double v25 = v22, v26 = v23, v23 < -180.0) || v23 > 180.0 || v22 < -90.0 || v22 > 90.0)
      {
        uint64_t v19 = [v3 _errorMessageForError:*(void *)(a1 + 48) directionsError:0 request:0 isOffline:0 shouldBackoutEdit:0];
        [v3 _presentPopupViewForMessage:v19 timeout:1 isError:0 ignoreChromeTransitioning:10.0];
LABEL_26:

        goto LABEL_27;
      }
      if (*(unsigned char *)(a1 + 64))
      {
        double v27 = [v24 _geoMapItem];
        double v28 = [v27 name];
        uint64_t v19 = +[GEOComposedRouteAnchorPoint anchorPointWithCoordinate:isCurrentLocation:name:](GEOComposedRouteAnchorPoint, "anchorPointWithCoordinate:isCurrentLocation:name:", 1, v28, v25, v26, 1.79769313e308);

LABEL_25:
        [v3 _appendAnchorPoint:v19];
        goto LABEL_26;
      }
      uint64_t v19 = +[GEOComposedRouteAnchorPoint anchorPointWithCoordinate:](GEOComposedRouteAnchorPoint, "anchorPointWithCoordinate:", v22, v23, 1.79769313e308);
      id v35 = [*(id *)(a1 + 40) _geoMapItem];
      [v19 refineWithMapItem:v35];
    }
    [v19 setIsCoordinate:*(unsigned __int8 *)(a1 + 65)];
    goto LABEL_25;
  }
LABEL_27:
}

void sub_100785A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100785A70(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if (v3)
    {
      id v6 = sub_10057683C();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 138412290;
        id v11 = v3;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Validation failed for anchor point: %@", (uint8_t *)&v10, 0xCu);
      }

      id v7 = [v5 _errorMessageForError:v3 directionsError:0 request:0 isOffline:0 shouldBackoutEdit:0];
      [v5 _presentPopupViewForMessage:v7 timeout:1 isError:0 ignoreChromeTransitioning:10.0];
    }
    else
    {
      id v8 = [WeakRetained[5] lastObject];
      id v9 = [v8 instanceByAddingAnchorPoint:*(void *)(a1 + 32)];
      [v5 _pushEditState:v9 shouldRecenterOnCompletion:0];
    }
  }
}

void sub_1007867C8(uint64_t a1, void *a2, void *a3)
{
  unint64_t v9 = a2;
  unint64_t v5 = a3;
  if (v9 | v5)
  {
    id v6 = +[UIApplication sharedMapsDelegate];
    id v7 = [*(id *)(a1 + 32) storageID];
    [v6 interruptConvertToNavigableSavedRouteID:v7 routeName:*(void *)(a1 + 40) error:v9 directionsError:v5];
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(void))(v8 + 16))();
  }
}

void sub_100786A84(uint64_t a1, void *a2, void *a3)
{
  unint64_t v9 = a2;
  unint64_t v5 = a3;
  if (v9 | v5)
  {
    id v6 = +[UIApplication sharedMapsDelegate];
    id v7 = [*(id *)(a1 + 32) storageID];
    [v6 interruptConvertToNavigableSavedRouteID:v7 routeName:*(void *)(a1 + 40) error:v9 directionsError:v5];
  }
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(void))(v8 + 16))();
  }
}

void sub_100786EC4(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) actionCoordinator];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  unint64_t v5 = objc_opt_new();
  id v6 = [*(id *)(a1 + 40) routeData];
  [v5 setRouteData:v6];

  id v7 = objc_opt_new();
  uint64_t v8 = +[SearchResult currentLocationSearchResult];
  [v7 setSearchResult:v8];

  unint64_t v9 = objc_opt_new();
  [v9 setSearchResult:v5];
  int v10 = [DirectionItem alloc];
  v17[0] = v7;
  v17[1] = v9;
  id v11 = +[NSArray arrayWithObjects:v17 count:2];
  id v12 = [(DirectionItem *)v10 initWithItems:v11 transportType:0];

  uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
  v15[0] = @"DirectionsSessionInitiatorKey";
  v15[1] = @"DirectionsRoutePlanningSessionSourceKey";
  v16[0] = &off_1013A8A28;
  v16[1] = &off_1013A8A40;
  double v14 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:2];
  [v4 viewController:v13 doDirectionItem:v12 withUserInfo:v14];
}

void sub_1007874F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 96))
  {
    unsigned int v2 = *(void **)(v1 + 112);
    _[v2 performPrimaryAction];
  }
  else
  {
    id v3 = sub_10057683C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "_anchorPointAttachedToMenu was unset after the context menu was requested", v4, 2u);
    }
  }
}

id sub_100787714(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) setAlpha:0.0];
}

void sub_1007878F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10078791C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    unsigned int v2 = [WeakRetained chromeViewController];
    id v3 = [v2 mapSelectionManager];
    [v3 clearSelection];

    [v4 _setMenuAttachedAnchorPoint:0];
    id WeakRetained = v4;
  }
}

void sub_100787994(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 100000000);
  id v3 = *(void **)(a1 + 32);

  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_100787F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100787F38(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v12 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_21;
  }
  if (v8)
  {
    uint64_t v13 = sub_10057683C();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      double v32 = [v8 anchorPoints];
      id v33 = v9;
      id v14 = v10;
      double v15 = (const char *)[v32 count];
      double v16 = [v8 anchorPoints];
      __int16 v17 = [v16 anchorPoints];
      uint64_t v18 = [v17 componentsJoinedByString:@"\n"];
      *(_DWORD *)buf = 134218242;
      id v38 = v15;
      id v10 = v14;
      __int16 v39 = 2112;
      double v40 = v18;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Received route with %lu anchor points:\n%@", buf, 0x16u);

      id v9 = v33;
    }

    [v8 updateCustomRouteStartEndCaptions];
    [v8 updateMyLocationAnchorNames];
    id v19 = v12[21];
    objc_storeStrong(v12 + 21, a2);
    long long v20 = [v12 chromeViewController];
    [v20 setNeedsUpdateComponent:@"routeAnnotations" animated:1];

    [v12[1] setRoute:v8];
    uint64_t v21 = [v12 chromeViewController];
    double v22 = [v21 mapSelectionManager];
    [v22 clearSelection];

    [v12 _insertRecenterButtonIfNeeded];
    if (!v19) {
      [v12 _showRecenterButton];
    }
    [*(id *)(a1 + 32) updateWithSuccessfulRoute:v8];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1007883C8;
    block[3] = &unk_1012E6300;
    char v36 = *(unsigned char *)(a1 + 56);
    void block[4] = v12;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    goto LABEL_21;
  }
  if (v9)
  {
    char v34 = 0;
    double v23 = [WeakRetained _errorMessageForError:v9 directionsError:v10 request:*(void *)(a1 + 40) isOffline:*(unsigned __int8 *)(a1 + 57) shouldBackoutEdit:&v34];
    [v12 _presentPopupViewForMessage:v23 timeout:1 isError:0 ignoreChromeTransitioning:10.0];
    if (v34) {
      [v12 _backoutLastState];
    }
    uint64_t v24 = [v12[19] rippleView];
    unsigned int v25 = [v24 isAnimating];

    if (v25)
    {
      double v26 = sub_10057683C();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Will stop ripple animation (route failure)", buf, 2u);
      }

      +[NSObject cancelPreviousPerformRequestsWithTarget:v12 selector:"_removeRippleView" object:0];
      double v27 = [v12[19] rippleView];
      [v27 timeUntilAnimationStop];
      double v29 = v28;

      [v12 performSelector:"_removeRippleView" withObject:0 afterDelay:v29];
    }
LABEL_20:

    goto LABEL_21;
  }
  double v30 = sub_1005762E4();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315650;
    id v38 = "-[MapsRouteCreationContext _requeryStateWithAction:shouldRecenterOnCompletion:]_block_invoke";
    __int16 v39 = 2080;
    double v40 = "MapsRouteCreationContext.m";
    __int16 v41 = 1024;
    int v42 = 1222;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
  }

  if (sub_100BB36BC())
  {
    double v23 = sub_1005762E4();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      double v31 = +[NSThread callStackSymbols];
      *(_DWORD *)buf = 138412290;
      id v38 = v31;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }
    goto LABEL_20;
  }
LABEL_21:
}

void sub_1007883C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    [*(id *)(a1 + 32) _centerOnCurrentRouteAnimated:1];
  }
  dispatch_time_t v2 = [*(id *)(*(void *)(a1 + 32) + 152) rippleView];
  unsigned int v3 = [v2 isAnimating];

  if (v3)
  {
    id v4 = sub_10057683C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Will stop ripple animation (route success)", v8, 2u);
    }

    +[NSObject cancelPreviousPerformRequestsWithTarget:*(void *)(a1 + 32) selector:"_removeRippleView" object:0];
    unint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 152) rippleView];
    [v5 timeUntilAnimationStop];
    double v7 = v6;

    [*(id *)(a1 + 32) performSelector:"_removeRippleView" withObject:0 afterDelay:v7];
  }
}

uint64_t sub_100788BC0(uint64_t result)
{
  uint64_t v1 = *(unsigned char **)(result + 32);
  if (v1) {
    unsigned char *v1 = 1;
  }
  return result;
}

void sub_100788E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100788E2C(uint64_t a1)
{
  dispatch_time_t v2 = (id *)(a1 + 40);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    if (!*(unsigned char *)(a1 + 56))
    {
      unint64_t v5 = [WeakRetained chromeViewController];
      unsigned __int8 v6 = [v5 isTransitioning];

      if (v6) {
        goto LABEL_7;
      }
    }
    double v7 = [v4 chromeViewController];
    unsigned __int8 v8 = [v7 isTopContext:v4];

    if (v8)
    {
      id v9 = [MapsPopupMessageView alloc];
      uint64_t v10 = *(void *)(a1 + 32);
      double v11 = *(double *)(a1 + 48);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      void v20[2] = sub_10078906C;
      void v20[3] = &unk_1012E6708;
      objc_copyWeak(&v21, v2);
      id v12 = [(MapsPopupMessageView *)v9 initWithMessage:v10 timeout:v20 timeoutHandler:v11];
      id v13 = v4[17];
      v4[17] = v12;

      id v14 = [v4 chromeViewController];
      uint64_t v15 = sub_1000BBB44(v14);

      id v16 = v4[17];
      __int16 v17 = [v4 chromeViewController];
      if (v15 == 1) {
        [v17 passThroughView];
      }
      else {
      uint64_t v18 = [v17 viewport];
      }
      [v16 presentFromView:v18 animated:1];

      [v4 _updateScaleAndCompass];
      if (*(unsigned char *)(a1 + 57)) {
        [v4[18] notificationOccurred:2];
      }
      objc_destroyWeak(&v21);
    }
    else
    {
LABEL_7:
      id v19 = sub_10057683C();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Ignoring popup presentation due to context dismissing", buf, 2u);
      }
    }
  }
}

void sub_100789054(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10078906C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateScaleAndCompass];
    [v2 _updateCoachingPillWithIgnoreChromeTransitioning:0];
    id WeakRetained = v2;
  }
}

void sub_10078A28C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 176));
  _Unwind_Resume(a1);
}

void sub_10078A398(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[12])
  {
    id v2 = WeakRetained;
    [WeakRetained pressedReverse];
    id WeakRetained = v2;
  }
}

void sub_10078A3E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[12])
  {
    id v2 = WeakRetained;
    [WeakRetained pressedOutAndBack];
    id WeakRetained = v2;
  }
}

void sub_10078A430(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[12])
  {
    id v2 = WeakRetained;
    [WeakRetained pressedCloseLoop];
    id WeakRetained = v2;
  }
}

void sub_10078A47C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[12])
  {
    id v2 = WeakRetained;
    [WeakRetained _deleteFirstAnchorPointMatchingAnchorPoint:];
    id WeakRetained = v2;
  }
}

void sub_10078A4C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[12])
  {
    id v2 = WeakRetained;
    [WeakRetained _deleteLastAnchorPointMatchingAnchorPoint:];
    id WeakRetained = v2;
  }
}

void sub_10078A514(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[12])
  {
    id v2 = WeakRetained;
    [WeakRetained _deleteFirstAnchorPointMatchingAnchorPoint:];
    id WeakRetained = v2;
  }
}

void sub_10078A81C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10078A838(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateScaleAndCompass];
    id WeakRetained = v2;
  }
}

void sub_10078C654(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_10160F890;
  qword_10160F890 = v1;
}

id sub_10078C884()
{
  if (qword_10160F8A8 != -1) {
    dispatch_once(&qword_10160F8A8, &stru_1012F8360);
  }
  v0 = (void *)qword_10160F8A0;

  return v0;
}

id sub_10078CA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _[*(id *)(a1 + 32) _layoutMonitor:a2 didUpdateDisplayLayout:a3 withContext:a4];
}

void sub_10078CBCC(_Unwind_Exception *exception_object)
{
}

void sub_10078CCDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10078D1F8(uint64_t a1)
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v2 = [*(id *)(a1 + 32) elements];
  id v3 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v3)
  {
    id v4 = v3;
    char v5 = 0;
    uint64_t v6 = *(void *)v14;
    uint64_t v7 = FBSDisplayLayoutElementLockScreenIdentifier;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v2);
        }
        id v9 = [*(id *)(*((void *)&v13 + 1) + 8 * i) identifier];
        unsigned __int8 v10 = [v9 isEqualToString:v7];

        v5 |= v10;
      }
      id v4 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v4);
  }
  else
  {
    char v5 = 0;
  }

  [*(id *)(a1 + 40) setLocked:v5 & 1];
  objc_msgSend(*(id *)(a1 + 40), "setIsScreenFullyOn:", objc_msgSend(*(id *)(a1 + 32), "displayBacklightLevel") == (id)100);
  [*(id *)(a1 + 40) setIsScreenOn:[*(id *)(a1 + 32) displayBacklightLevel] != 0];
  [*(id *)(a1 + 40) setIsOurAppActive:[*(id *)(a1 + 40) _isMapsActiveInLayout:*(void *)(a1 + 32)]];
  id v11 = [*(id *)(a1 + 40) _changeReasonWithNewLayout:*(void *)(a1 + 32) context:*(void *)(a1 + 48)];
  [*(id *)(a1 + 40) setChangeReason:v11];
  objc_storeStrong((id *)(*(void *)(a1 + 40) + 16), *(id *)(a1 + 32));
  return [*(id *)(a1 + 40) _notifyObserversWithReason:v11];
}

void sub_10078D444(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsScreenLayoutMonitor");
  id v2 = (void *)qword_10160F8A0;
  qword_10160F8A0 = (uint64_t)v1;
}

CFStringRef sub_10078D488(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"Unavailable";
  }
  else {
    return *(&off_1012F8380 + a1 - 1);
  }
}

id sub_10078E744()
{
  if (qword_10160F8B8 != -1) {
    dispatch_once(&qword_10160F8B8, &stru_1012F83A8);
  }
  v0 = (void *)qword_10160F8B0;

  return v0;
}

void sub_10078F534(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarRouteInfoView");
  id v2 = (void *)qword_10160F8B0;
  qword_10160F8B0 = (uint64_t)v1;
}

id sub_10078FFA8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) configureForType:0];
}

void sub_10078FFB4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) application];
  [v2 configureWithDisabledRideBookingApplication:v3 showActionButton:[*(id *)(a1 + 48) shouldShowEnableAppsCell] ^ 1];
}

void sub_1007910F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100791118(uint64_t a1, void *a2)
{
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    if (v9)
    {
      char v5 = +[UIAlertController alertControllerWithTitle:0 message:v9 preferredStyle:1];
      uint64_t v6 = +[NSBundle mainBundle];
      uint64_t v7 = [v6 localizedStringForKey:@"OK [Photo Credit alert acceptance]" value:@"localized string not found" table:0];
      unsigned __int8 v8 = +[UIAlertAction actionWithTitle:v7 style:0 handler:0];

      [v5 addAction:v8];
      [v4 _maps_topMostPresentViewController:v5 animated:1 completion:0];
    }
    else
    {
      [WeakRetained handleDismissAction:*(void *)(a1 + 32)];
    }
  }
}

id sub_10079186C(id a1, TransitClusteredVehicleInfoItem *a2, unint64_t a3)
{
  return [(TransitClusteredVehicleInfoItem *)a2 routeDetailArtworks];
}

void sub_100792CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100792D08(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained markAsShown];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _dismiss];
}

void sub_1007933EC(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  if (*(unsigned char *)(a1 + 56))
  {
    char v5 = [*(id *)(a1 + 32) lastObject];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }
  else
  {
    char isKindOfClass = 0;
  }
  [*(id *)(a1 + 32) addObject:v10];
  uint64_t v7 = *(void **)(*(void *)(a1 + 40) + 144);
  unsigned __int8 v8 = [v10 route];
  id v9 = [v7 objectForKey:v8];

  if (v9) {
    [*(id *)(a1 + 32) addObject:v9];
  }
  [v10 setFirstRoute:0];
  [v10 setLastRoute:*(void *)(a1 + 48) - 1 == a3];
  if (a3)
  {
    if (isKindOfClass) {
      [v10 setFirstRoute:1];
    }
  }
  else
  {
    [v10 setFirstRoute:1];
    if (*(unsigned char *)(a1 + 56))
    {
      [*(id *)(a1 + 32) addObject:*(void *)(*(void *)(a1 + 40) + 128)];
      [v10 setLastRoute:1];
    }
  }
}

void sub_1007936D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007936F0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    *a4 = 1;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
}

void sub_100793B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100793BB0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    *a4 = 1;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
}

void sub_100793CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100793D10(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = [v8 route];
    uint64_t v7 = *(void **)(a1 + 32);

    if (v6 == v7)
    {
      *a4 = 1;
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    }
  }
}

void sub_10079499C(uint64_t a1)
{
  [*(id *)(a1 + 32) willChangeValueForKey:@"hasExpandedSteps"];
  [*(id *)(a1 + 32) prepareOutlineSections];
  uint64_t v2 = *(void **)(a1 + 32);
  if (*(void *)(a1 + 48) == 0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = [v2 sectionIndexForOutlineSection:*(void *)(a1 + 40)];
    id v5 = [*(id *)(a1 + 32) collectionView];
    id v4 = +[NSIndexSet indexSetWithIndex:v3];
    [v5 insertSections:v4];
  }
  else
  {
    id v5 = [v2 collectionView];
    id v4 = +[NSIndexSet indexSetWithIndex:*(void *)(a1 + 48)];
    [v5 deleteSections:v4];
  }
}

id sub_100794A7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) didChangeValueForKey:@"hasExpandedSteps"];
}

void sub_100795A44(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [RoutePlanningRouteOverviewOutlineSection alloc];
  uint64_t v7 = [*(id *)(a1 + 32) collectionView];
  id v8 = [*(id *)(a1 + 32) routeCollection];
  id v9 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"Route%lu", [v8 indexOfRoute:v5]);
  id v10 = [(RoutePlanningRouteOverviewOutlineSection *)v6 initWithCollectionView:v7 sectionIdentifier:v9];

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100795BE4;
  void v14[3] = &unk_1012F8480;
  long long v15 = v10;
  id v16 = v5;
  id v11 = *(void **)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 32);
  __int16 v21 = *(_WORD *)(a1 + 64);
  id v18 = v11;
  uint64_t v20 = a3;
  id v19 = *(id *)(a1 + 48);
  id v12 = v5;
  long long v13 = v10;
  [(RoutePlanningRouteOverviewOutlineSection *)v13 performWhileSuppressingCellReloads:v14];
  [*(id *)(a1 + 56) addObject:v13];
  [*(id *)(*(void *)(a1 + 32) + 136) setObject:v13 forKey:v12];
}

void sub_100795BE4(uint64_t a1)
{
  [*(id *)(a1 + 32) setRoute:*(void *)(a1 + 40)];
  uint64_t v2 = [*(id *)(a1 + 48) routeCellDelegate];
  [*(id *)(a1 + 32) setRouteCellDelegate:v2];

  [*(id *)(a1 + 32) setShowDetailButton:*(unsigned __int8 *)(a1 + 80)];
  [*(id *)(a1 + 32) setAllowPersistentHighlight:*(unsigned __int8 *)(a1 + 81)];
  [*(id *)(a1 + 32) setCurrentRoute:*(void *)(a1 + 40) == *(void *)(a1 + 56)];
  [*(id *)(a1 + 32) setFirstRoute:*(void *)(a1 + 72) == 0];
  [*(id *)(a1 + 32) setLastRoute:*(void *)(a1 + 40) == *(void *)(a1 + 64)];
  id v3 = [*(id *)(a1 + 48) automaticSharingContacts];
  [*(id *)(a1 + 32) setAutomaticSharingContacts:v3];

  [*(id *)(a1 + 32) setExpanded:[*(id *)(a1 + 48) _hasExpandedStepsForRoute:*(void *)(a1 + 40)]];
  id v4 = [*(id *)(a1 + 48) dataCoordinator];
  [*(id *)(a1 + 32) setDataCoordinator:v4];
}

void sub_100796134(uint64_t a1)
{
  BOOL v2 = !*(unsigned char *)(a1 + 40) || *(unsigned char *)(a1 + 41) || *(unsigned char *)(a1 + 42) == 0;
  id v3 = sub_1005775E4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    if (v2) {
      id v4 = @"YES";
    }
    else {
      id v4 = @"NO";
    }
    id v5 = v4;
    if (*(unsigned char *)(a1 + 40)) {
      id v6 = @"YES";
    }
    else {
      id v6 = @"NO";
    }
    uint64_t v7 = v6;
    if (*(unsigned char *)(a1 + 41)) {
      id v8 = @"YES";
    }
    else {
      id v8 = @"NO";
    }
    id v9 = v8;
    int v10 = 138412802;
    id v11 = v5;
    __int16 v12 = 2112;
    long long v13 = v7;
    __int16 v14 = 2112;
    long long v15 = v9;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "needsReload: %@ (routeCollectionEqual: %@, featureDiscoveryNeedsReload: %@)", (uint8_t *)&v10, 0x20u);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (!v2) {
      return;
    }
  }
  else
  {
    [*(id *)(a1 + 32) _createRouteSectionsForCurrentRoutes];
    if (!v2) {
      return;
    }
  }
  [*(id *)(a1 + 32) prepareOutlineSections];
}

void sub_100796E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  objc_destroyWeak(v19);
  _Block_object_dispose(&a18, 8);
  objc_destroyWeak(v18);
  objc_destroyWeak((id *)(v20 - 72));
  _Unwind_Resume(a1);
}

void sub_100796E64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained[21];
    id v5 = WeakRetained;
    id v4 = objc_loadWeakRetained((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40));
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);

    id WeakRetained = v5;
  }
}

void sub_100797330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10079734C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _requireReload];
}

void sub_100797C48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double sub_100797C64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained isLastRoute])
  {
  }
  else
  {
    uint64_t v3 = [*(id *)(a1 + 32) traitCollection];
    id v4 = [v3 userInterfaceIdiom];

    if (v4 != (id)5)
    {
      double top = NSDirectionalEdgeInsetsZero.top;
      +[RouteOverviewCell horizontalContentInset];
      +[RouteOverviewCell horizontalBackgroundInset];
      return top;
    }
  }
  return *(double *)_UICollectionViewListSectionSeparatorInsetHidden;
}

id sub_100797EE0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _configureCell:*(void *)(a1 + 40)];
}

void sub_100798938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double sub_100798954(uint64_t a1, void *a2)
{
  BOOL v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _separatorInsetsForIndexPath:v3];
  double v6 = v5;

  return v6;
}

void sub_100798DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100798DD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained host];
    id v4 = [v3 sectionIndexForOutlineSection:v2];

    if (v4 == (id)0x7FFFFFFFFFFFFFFFLL)
    {
      double v5 = sub_1005768D4();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        double v6 = [v2 route];
        int v8 = 138412546;
        id v9 = v2;
        __int16 v10 = 2112;
        id v11 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Couldn't find index matching: %@, for route: %@", (uint8_t *)&v8, 0x16u);
      }
    }
    else
    {
      uint64_t v7 = (void *)v2[1];
      double v5 = +[NSIndexSet indexSetWithIndex:v4];
      [v7 reloadSections:v5];
    }
  }
}

id sub_1007997B8(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) waypointSubstitutedComposedStringForString:a2 waypoint:*(void *)(a1 + 40) useWaypointAddress:1];
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithComposedString:v3];
  double v5 = [v4 multiPartAttributedStringWithAttributes:*(void *)(a1 + 48)];
  double v6 = [v5 attributedString];

  return v6;
}

void sub_100799850(uint64_t a1, uint64_t a2, char *a3)
{
  [*(id *)(a1 + 32) appendAttributedString:a2];
  if ((char *)[*(id *)(a1 + 40) count] - 1 > a3)
  {
    double v5 = *(void **)(a1 + 32);
    id v6 = [objc_alloc((Class)NSAttributedString) initWithString:@"\n"];
    [v5 appendAttributedString:v6];
  }
}

void sub_10079B718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10079B754(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    BOOL v2 = [WeakRetained actionDelegate];
    [v2 parkedCarFooterActionsSectionControllerDidRemoveParkedCar:v3];

    id WeakRetained = v3;
  }
}

void sub_10079D07C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_10079D0A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _saveMapViewConfiguration];
    id WeakRetained = v2;
  }
}

void sub_10079D0EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _setupMapView];
    id WeakRetained = v2;
    *((unsigned char *)v2 + 4_Block_object_dispose(&STACK[0x238], 8) = 0;
  }
}

void sub_10079D2A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10079D2C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v2 = [WeakRetained chromeViewController];
    uint64_t v3 = [v2 overlayController];
    [v3 removeOverlay:v4[2]];

    [v4 _restoreMapView];
    id WeakRetained = v4;
  }
}

void sub_10079D340(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) postDismissalBlock];

  if (v2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) postDismissalBlock];
    v3[2]();
  }
}

void sub_10079D798(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[104])
  {
    uint64_t v3 = [v2 downloadDelegate];
    char v4 = objc_opt_respondsToSelector();

    if (v4)
    {
      id v5 = [*(id *)(a1 + 32) downloadDelegate];
      [v5 didStartDownloadFromAutocomplete];
    }
  }
}

void sub_10079E4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 200));
  _Block_object_dispose((const void *)(v10 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_10079E4F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained && v5 && !v6)
  {
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
    {
      int v8 = +[MapsOfflineUIHelper sharedHelper];
      [v8 resumeDownloadForSubscriptionWithIdentifier:v5 mode:1];
    }
    *((unsigned char *)WeakRetained + 104) = 1;
    objc_storeStrong((id *)WeakRetained + 4, *(id *)(a1 + 32));
    id v9 = (void *)*((void *)WeakRetained + 2);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10079E634;
    void v10[3] = &unk_1012E6998;
    objc_copyWeak(&v11, (id *)(a1 + 48));
    [v9 animateForDownloadWithCompletion:v10];
    objc_destroyWeak(&v11);
  }
}

void sub_10079E620(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10079E634(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained dismiss];
    id WeakRetained = v2;
  }
}

void sub_10079E678(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 72);
  id v5 = +[MapsOfflineUIHelper sharedHelper];
  id v6 = v5;
  uint64_t v7 = *(void *)(a1 + 40);
  if (v4)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 72);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10079E778;
    void v10[3] = &unk_1012F8640;
    id v9 = *(id *)(a1 + 48);
    void v10[4] = *(void *)(a1 + 32);
    id v11 = v9;
    [v6 updateRegion:v7 forSubscriptionInfo:v8 completion:v10];
  }
  else
  {
    [v5 addSubscriptionWithRegion:*(void *)(a1 + 40) name:v3 completion:*(void *)(a1 + 48)];
  }
}

void sub_10079E778(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (a2)
  {
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 72);
    id v5 = a3;
    id v8 = [v4 subscription];
    id v6 = [v8 identifier];
    (*(void (**)(uint64_t, void *, id))(v3 + 16))(v3, v6, v5);
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t, void))(v3 + 16);
    id v8 = a3;
    v7(v3, 0);
  }
}

void sub_10079E82C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[MapsOfflineUIHelper sharedHelper];
  id v5 = [v4 cellularBehaviorForDownloadOfSize:*(void *)(*(void *)(a1 + 32) + 96) forForcedDownload:0];

  if (v5 == (id)2)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
  else
  {
    if (v5 == (id)1)
    {
      id v6 = +[MapsOfflineUIHelper sharedHelper];
      uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 96);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_10079E9B0;
      void v12[3] = &unk_1012F8690;
      long long v11 = *(_OWORD *)(a1 + 40);
      id v8 = (id)v11;
      long long v14 = v11;
      id v13 = v3;
      id v9 = [v6 alertControllerForCellularDownloadConfirmationForRegionName:v13 size:v7 actionHandler:v12];

      uint64_t v10 = [*(id *)(a1 + 32) chromeViewController];
      [v10 _maps_topMostPresentViewController:v9 animated:1 completion:0];

      goto LABEL_8;
    }
    if (v5) {
      goto LABEL_8;
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_8:
}

uint64_t sub_10079E9B0(void *a1, char a2)
{
  *(unsigned char *)(*(void *)(a1[6] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return (*(uint64_t (**)(void, void))(a1[5] + 16))(a1[5], a1[4]);
}

void sub_10079E9D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (*(unsigned char *)(a1 + 56)) {
    uint64_t v7 = *(void **)(a1 + 32);
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = v7;
  if (v6)
  {
    id v9 = sub_1000493C0();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v18 = 138543362;
      id v19 = v6;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Error fetching suggested name for region: %{public}@", (uint8_t *)&v18, 0xCu);
    }
  }
  else
  {
    uint64_t v10 = [v5 firstObject];
    id v9 = [v10 name];

    id v11 = [v9 length];
    __int16 v12 = sub_1000493C0();
    id v13 = v12;
    if (v11)
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v14 = *(void *)(a1 + 40);
        int v18 = 138478083;
        id v19 = v9;
        __int16 v20 = 2113;
        uint64_t v21 = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Fetched suggested name '%{private}@' for region %{private}@", (uint8_t *)&v18, 0x16u);
      }

      id v13 = v8;
      id v8 = v9;
    }
    else if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      long long v15 = *(NSObject **)(a1 + 40);
      int v18 = 138477827;
      id v19 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Attempt to fetch suggested name for region succeeded, but no name was provided (%{private}@)", (uint8_t *)&v18, 0xCu);
    }
  }
  if (![v8 length])
  {
    id v16 = +[NSBundle mainBundle];
    uint64_t v17 = [v16 localizedStringForKey:@"Offline Map" value:@"localized string not found" table:@"Offline"];

    id v8 = v17;
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_10079EE6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_10079EEA4(uint64_t a1, void *a2, void *a3)
{
  id v14 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (WeakRetained && WeakRetained[7] == *(id *)(a1 + 48))
  {
    [WeakRetained[8] invalidate];
    id v7 = v6[8];
    v6[8] = 0;

    id v8 = v6[15];
    v6[15] = 0;

    *((unsigned char *)v6 + 49) = 1;
    if (!v14)
    {
      v6[12] = a2;
      [v6[1] setEstimatedDiskSizeLabel:a2];
      id v13 = *(id **)(a1 + 32);
      uint64_t v12 = 1;
LABEL_11:
      [v13[1] setState:v12];
      goto LABEL_12;
    }
    id v9 = [v14 domain];
    uint64_t v10 = GEOErrorDomain();
    if ([v9 isEqualToString:v10])
    {
      id v11 = [v14 code];

      if (v11 == (id)-6)
      {
        uint64_t v12 = 2;
LABEL_10:
        id v13 = v6;
        goto LABEL_11;
      }
    }
    else
    {
    }
    uint64_t v12 = 4;
    goto LABEL_10;
  }
LABEL_12:
}

void sub_10079EFC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained && WeakRetained[8] == v3 && WeakRetained[7] == *(id *)(a1 + 40))
  {
    id v6 = sub_1000493C0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = *(void *)(a1 + 48);
      int v9 = 134349056;
      uint64_t v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Calculating region size/support took longer than %{public}.1f seconds. Changing UI to 'Calculating...' state", (uint8_t *)&v9, 0xCu);
    }

    [v5[1] setState:0];
    id v8 = v5[8];
    v5[8] = 0;
  }
}

UIFont *__cdecl sub_10079FDB0(id a1)
{
  os_log_t v1 = sub_100CE0C40(&stru_101321340);
  id v2 = +[UIFont _maps_cappedFont:v1 withMaxPoint:34.0];

  return (UIFont *)v2;
}

void sub_1007A0CD4(id a1)
{
  id v1 = objc_alloc_init((Class)NSByteCountFormatter);
  id v2 = (void *)qword_10160F8D0;
  qword_10160F8D0 = (uint64_t)v1;
}

void sub_1007A0D10(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) autoUpdateDisclaimerLabel];
  uint64_t v4 = v3;
  if (v2)
  {
    [v3 setHidden:0];

    id v5 = [*(id *)(a1 + 32) autoUpdateDisclaimerLabel];
    [v5 setAlpha:1.0];

    id v6 = [*(id *)(a1 + 32) contentStackView];
    uint64_t v7 = [*(id *)(a1 + 32) sizeLabel];
    double v8 = 3.40282347e38;
  }
  else
  {
    [v3 setHidden:1];

    int v9 = [*(id *)(a1 + 32) autoUpdateDisclaimerLabel];
    [v9 setAlpha:0.0];

    id v6 = [*(id *)(a1 + 32) contentStackView];
    uint64_t v7 = [*(id *)(a1 + 32) sizeLabel];
    double v8 = 12.0;
  }
  [v6 setCustomSpacing:v7 afterView:v8];

  uint64_t v10 = [*(id *)(a1 + 32) cardPresentationController];
  [v10 updateHeightForCurrentLayout];

  id v11 = [*(id *)(a1 + 32) view];
  [v11 layoutIfNeeded];
}

void sub_1007A2F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1007A2FA8(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 geoMapItem];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1007A2FF4(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 geoMapItem];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_1007A3D20()
{
  if (qword_10160F8E8 != -1) {
    dispatch_once(&qword_10160F8E8, &stru_1012F8880);
  }
  v0 = (void *)qword_10160F8E0;

  return v0;
}

void sub_1007A4FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007A500C(uint64_t a1, void *a2)
{
  id v6 = [a2 geoMapItem];
  uint64_t v3 = +[MKMapItem _itemWithGeoMapItem:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1007A59E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1007A5A24(uint64_t a1, void *a2)
{
  id v3 = [a2 query];
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setSearchString:v3];
}

void sub_1007A5A84(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8);
  int v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = 0;
}

void sub_1007A5A98(uint64_t a1, void *a2)
{
  id v3 = [a2 geoMapItem];
  id v5 = +[MKMapItem _itemWithGeoMapItem:v3];

  uint64_t v4 = [[SearchResult alloc] initWithMapItem:v5];
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setSearchResult:v4];
}

SearchFieldItem *__cdecl sub_1007A6688(id a1, GEOComposedWaypoint *a2, unint64_t a3)
{
  return +[SearchFieldItem searchFieldItemWithObject:a2];
}

id sub_1007A6698(id a1, SearchFieldItem *a2, unint64_t a3)
{
  return [(SearchFieldItem *)a2 title];
}

id sub_1007A66A0(id a1, SearchFieldItem *a2, unint64_t a3)
{
  return [(SearchFieldItem *)a2 title];
}

void sub_1007A66A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchFieldItem");
  int v2 = (void *)qword_10160F8E0;
  qword_10160F8E0 = (uint64_t)v1;
}

void sub_1007A66EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_1007A6F18(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v4();
  }
  else
  {
    id v5 = [a2 anonymousId];
    id v6 = [*(id *)(a1 + 32) tdmUserInfo];
    [v6 setAnonymousUserId:v5];

    uint64_t v7 = +[ServerEvaluationStatusMapsSync shared];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1007A7040;
    _OWORD v8[3] = &unk_1012F88A8;
    id v9 = *(id *)(a1 + 32);
    id v10 = *(id *)(a1 + 40);
    [v7 fetchARPStatusWithCompletion:v8];
  }
}

uint64_t sub_1007A7040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [*(id *)(a1 + 32) tdmUserInfo];
  [v6 setIsBlocked:a2];

  uint64_t v7 = [*(id *)(a1 + 32) tdmUserInfo];
  [v7 setIsTrusted:a3];

  double v8 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v8();
}

void sub_1007A7604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007A7620(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained present];
}

id sub_1007A8AD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) hideSideBar:1 animated:*(unsigned __int8 *)(a1 + 40) completion:&stru_1012F88F8];
}

id sub_1007A8AF0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) prepareForExitWithCompletion:&stru_1012F8918];
}

void sub_1007A8B04(id *a1)
{
  if (objc_opt_respondsToSelector())
  {
    int v2 = [a1[4] fullscreenViewController];
    if (v2)
    {
      id v3 = v2;
      [v2 willMoveToParentViewController:0];
      id v4 = [v3 view];
      [v4 removeFromSuperview];

      [v3 removeFromParentViewController];
    }
  }
  if (objc_opt_respondsToSelector()) {
    [a1[5] fullscreenViewController];
  }
  else {
  id v5 = [a1[6] fallbackDetailViewController];
  }
  id v6 = [a1[6] detailViewController];

  if (v5 != v6)
  {
    uint64_t v7 = [a1[6] detailViewController];
    double v8 = [v7 view];
    [v8 frame];
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;
    uint64_t v17 = [v5 view];
    [v17 setFrame:v10, v12, v14, v16];

    uint64_t v18 = [v5 view];
    [v18 layoutIfNeeded];

    [a1[6] setDetailViewController:v5];
    id v19 = [a1[6] masterViewController];
    v23[0] = v19;
    __int16 v20 = [a1[6] detailViewController];
    v23[1] = v20;
    uint64_t v21 = +[NSArray arrayWithObjects:v23 count:2];
    double v22 = [a1[6] splitViewController];
    [v22 setViewControllers:v21];
  }
}

void sub_1007A8D10(uint64_t a1)
{
  int v2 = [*(id *)(*(void *)(a1 + 32) + 984) keyEnumerator];
  id v3 = [v2 allObjects];

  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v4 = v3;
  id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v10 + 1) + 8 * i);
        if ((objc_msgSend(*(id *)(a1 + 40), "containsObject:", v9, (void)v10) & 1) == 0) {
          [*(id *)(*(void *)(a1 + 32) + 984) removeObjectForKey:v9];
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v6);
  }
}

id sub_1007A9054(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) toolbarController];
  [v3 setLocationButtonEnabled:v2];

  uint64_t v4 = *(unsigned __int8 *)(a1 + 40);
  id v5 = [*(id *)(a1 + 32) toolbarController];
  [v5 setToggleSidebarButtonEnabled:v4];

  uint64_t v6 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v7 = [*(id *)(a1 + 32) toolbarController];
  [v7 setMapModeButtonEnabled:v6];

  uint64_t v8 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v9 = [*(id *)(a1 + 32) toolbarController];
  [v9 setRoutePlanningButtonEnabled:v8];

  uint64_t v10 = *(unsigned __int8 *)(a1 + 40);
  long long v11 = [*(id *)(a1 + 32) toolbarController];
  [v11 setAddSubmenusEnabled:v10];

  id v12 = [*(id *)(a1 + 32) canEnter3dMode];
  long long v13 = [*(id *)(a1 + 32) toolbarController];
  [v13 setThirdDimensionButtonEnabled:v12];

  uint64_t v14 = *(unsigned __int8 *)(a1 + 41);
  double v15 = [*(id *)(a1 + 32) toolbarController];
  [v15 setLookAroundActive:v14];

  double v16 = *(void **)(a1 + 32);

  return [v16 _updateShareButton];
}

id sub_1007A9178(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didCompleteModeTransition];
}

void sub_1007A938C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _currentContainerViewController];
  if (v2)
  {
    id v20 = v2;
    id v3 = [*(id *)(a1 + 32) mapView];
    [v3 _edgeInsets];
    double v5 = v4;
    double v7 = v6;

    if ([v20 isContaineeStackEmpty])
    {
      double top = UIEdgeInsetsZero.top;
      double left = UIEdgeInsetsZero.left;
      double bottom = UIEdgeInsetsZero.bottom;
      double right = UIEdgeInsetsZero.right;
    }
    else
    {
      id v12 = [*(id *)(a1 + 32) view];
      id v13 = [v12 effectiveUserInterfaceLayoutDirection];

      double v14 = -v5;
      double v15 = -v7;
      double bottom = 0.0;
      if (v13 == (id)1) {
        double left = v14;
      }
      else {
        double left = 0.0;
      }
      if (v13 == (id)1) {
        double right = 0.0;
      }
      else {
        double right = v15;
      }
      double top = 0.0;
    }
    double v16 = [*(id *)(a1 + 32) floatingControlsOverlay];
    uint64_t v17 = [v16 floatingControlsViewController];

    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    id v19 = v18;

    [v19 setAdditionalCompassEdgeInsets:top, left, bottom, right];
    uint64_t v2 = v20;
  }
}

void sub_1007A97AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007A97D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    uint64_t v2 = [WeakRetained topContext];
    if (objc_opt_respondsToSelector()) {
      [v2 sidebarDidUpdate];
    }

    id WeakRetained = v3;
  }
}

id sub_1007A9AE8(uint64_t a1)
{
  double v2 = 0.200000003;
  if (!*(unsigned char *)(a1 + 56)) {
    double v2 = 0.0;
  }
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1007A9BA4;
  void v6[3] = &unk_1012E8FA8;
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  void v6[4] = *(void *)(a1 + 32);
  void v6[5] = v4;
  char v7 = *(unsigned char *)(a1 + 57);
  +[UIView animateWithDuration:v6 animations:v3 completion:v2];
  return [*(id *)(a1 + 32) setNeedsUpdateComponent:@"mapInsets" animated:1];
}

void sub_1007A9BA4(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) splitViewController];
  [v2 setPreferredDisplayMode:*(void *)(a1 + 40)];

  [*(id *)(a1 + 32) _updateDividerFrame];
  uint64_t v3 = [*(id *)(a1 + 32) detailViewController];
  uint64_t v4 = [v3 view];
  [v4 layoutIfNeeded];

  double v5 = 0.0;
  if (*(unsigned char *)(a1 + 48)) {
    double v6 = 0.0;
  }
  else {
    double v6 = 1.0;
  }
  char v7 = [*(id *)(a1 + 32) dividerView];
  [v7 setAlpha:v6];

  int v8 = *(unsigned __int8 *)(a1 + 48);
  if (!*(unsigned char *)(a1 + 48))
  {
    char v7 = [*(id *)(a1 + 32) splitViewController];
    [v7 primaryColumnWidth];
    double v5 = v9;
  }
  uint64_t v10 = [*(id *)(a1 + 32) viewportSideBarWidthConstraint];
  [v10 setConstant:v5];

  if (!v8) {
  int v11 = *(unsigned __int8 *)(a1 + 48);
  }
  if (*(unsigned char *)(a1 + 48))
  {
    double v12 = 0.0;
  }
  else
  {
    id v15 = [*(id *)(a1 + 32) splitViewController];
    [v15 primaryColumnWidth];
    double v12 = v13;
  }
  double v14 = [*(id *)(a1 + 32) mapViewInsetsSideBarWidthConstraint];
  [v14 setConstant:v12];

  if (!v11)
  {
  }
}

void sub_1007AA6AC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) topContext];
  os_log_t v1 = [v2 actionCoordinator];
  [v1 viewControllerPresentSearchEditing];
}

void sub_1007AAB48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1007AAB68(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = sub_1000B944C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "error creating collection from toolbar:%@", (uint8_t *)&v8, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    double v6 = [WeakRetained appCoordinator];
    char v7 = [v6 baseActionCoordinator];
    [v7 viewController:0 editCollection:*(void *)(a1 + 32)];
  }
}

void sub_1007AC2B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1007AC2D4(uint64_t a1)
{
  id v31 = objc_alloc_init((Class)NSMutableArray);
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) contexts];
  id v3 = [v2 reverseObjectEnumerator];

  id v4 = [v3 countByEnumeratingWithState:&v37 objects:v41 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v38;
    while (2)
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v38 != v6) {
          objc_enumerationMutation(v3);
        }
        int v8 = *(void **)(*((void *)&v37 + 1) + 8 * i);
        if (objc_opt_respondsToSelector()) {
          [v8 desiredSidebarContentControllers];
        }
        else {
        id v9 = [*(id *)(*(void *)(a1 + 32) + 984) objectForKey:v8];
        }
        if ([v9 count])
        {
          uint64_t v10 = +[NSIndexSet indexSetWithIndexesInRange:](NSIndexSet, "indexSetWithIndexesInRange:", 0, [v9 count]);
          [v31 insertObjects:v9 atIndexes:v10];
        }
        if ((objc_opt_respondsToSelector() & 1) == 0)
        {

          goto LABEL_17;
        }
        unsigned __int8 v11 = [v8 wantsSidebarControl];

        if (v11) {
          goto LABEL_17;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v37 objects:v41 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_17:

  double v12 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v14 = *(id *)(a1 + 32);
  if (v14)
  {
    id v15 = (objc_class *)objc_opt_class();
    double v16 = NSStringFromClass(v15);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v17 = [v14 performSelector:"accessibilityIdentifier"];
      uint64_t v18 = v17;
      if (v17 && ![v17 isEqualToString:v16])
      {
        id v19 = +[NSString stringWithFormat:@"%@<%p, %@>", v16, v14, v18];

        goto LABEL_23;
      }
    }
    id v19 = +[NSString stringWithFormat:@"%@<%p>", v16, v14];
LABEL_23:

    goto LABEL_25;
  }
  id v19 = @"<nil>";
LABEL_25:

  id v20 = +[NSString stringWithFormat:@"%@: sidebar show/hide animation", v19];
  uint64_t v21 = [WeakRetained addCompletionWaitBlockWithReason:v20];

  id v22 = [v31 count];
  double v23 = *(void **)(a1 + 32);
  if (v22)
  {
    [*(id *)(a1 + 32) setSidebarViewControllers:v31];
    uint64_t v24 = *(void **)(a1 + 32);
    id v25 = [v24 _shouldHideSidebar];
    id v26 = objc_loadWeakRetained(v12);
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_1007AC758;
    v32[3] = &unk_1012EAFC0;
    id v33 = v21;
    id v27 = v21;
    [v24 hideSideBar:v25 animation:v26 completion:v32];

    double v28 = v33;
  }
  else
  {
    id v29 = objc_loadWeakRetained((id *)(a1 + 40));
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472;
    void v34[2] = sub_1007AC708;
    v34[3] = &unk_1012F8968;
    v34[4] = *(void *)(a1 + 32);
    id v35 = v31;
    id v36 = v21;
    id v30 = v21;
    [v23 hideSideBar:1 animation:v29 completion:v34];

    double v28 = v35;
  }
}

uint64_t sub_1007AC708(uint64_t a1)
{
  [*(id *)(a1 + 32) setSidebarViewControllers:*(void *)(a1 + 40)];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

uint64_t sub_1007AC758(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1007AD8C0(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[NSUserDefaults standardUserDefaults];
  id v3 = [v2 valueForKey:@"__internal__PlaceCardHardCodedMUID"];

  if (v3)
  {
    id v4 = [objc_alloc((Class)NSScanner) initWithString:v3];
    uint64_t v9 = 0;
    if ([v4 scanUnsignedLongLong:&v9]) {
      BOOL v5 = v9 == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
      id v6 = objc_alloc((Class)MKMapItemIdentifier);
      id v7 = [v6 initWithMUID:v9 resultProviderID:0 coordinate:MKCoordinateInvalid[0], MKCoordinateInvalid[1]];

      goto LABEL_9;
    }
  }
  id v7 = v1;
LABEL_9:

  return v7;
}

void sub_1007ADF04(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 || ![v5 count])
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v7 = *(id *)(a1 + 32);
    id v8 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v16;
      do
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v16 != v10) {
            objc_enumerationMutation(v7);
          }
          (*(void (**)(void))(*(void *)(*((void *)&v15 + 1) + 8 * i) + 16))(*(void *)(*((void *)&v15 + 1) + 8 * i));
        }
        id v9 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v9);
    }

    [*(id *)(*(void *)(a1 + 48) + 16) removeObjectForKey:*(void *)(a1 + 40) v15];
  }
  else
  {
    double v12 = [SearchResult alloc];
    double v13 = [v5 firstObject];
    id v14 = [(SearchResult *)v12 initWithMapItem:v13 searchResultType:*(unsigned int *)(a1 + 56) resultIndex:0];

    [*(id *)(a1 + 48) _cacheAndHandleSearchResult:v14 identifier:*(void *)(a1 + 40) completionHandlers:*(void *)(a1 + 32)];
  }
}

id sub_1007AE09C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _setLoading:a2 forIdentifier:*(void *)(a1 + 40)];
}

double sub_1007AE9F8(id a1)
{
  return 19.0;
}

id sub_1007AF9C8()
{
  if (qword_10160F8F8 != -1) {
    dispatch_once(&qword_10160F8F8, &stru_1012F8A18);
  }
  v0 = (void *)qword_10160F8F0;

  return v0;
}

void sub_1007B02E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007B0308(uint64_t a1, void *a2, unint64_t a3)
{
  id v10 = a2;
  if ((unint64_t)[*(id *)(a1 + 32) count] <= a3)
  {
    id v5 = 0;
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
  }
  id v6 = +[NSNull null];

  if (!v5 || v5 == v6)
  {
    id v7 = [v10 waypointPlaceholder];
    id v8 = [v7 displayableMarker];
  }
  else
  {
    id v7 = v5;
    id v8 = [[SearchResult alloc] initWithComposedWaypoint:v7];
  }
  id v9 = v8;

  if (v9)
  {
    if (a3) {
      [*(id *)(a1 + 40) addObject:v9];
    }
    else {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v9);
    }
  }
}

id sub_1007B16CC(void *a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = [a1 steps];
  id v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v10 != v3) {
          objc_enumerationMutation(v1);
        }
        id v5 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v6 = v5;
          id v7 = [v6 vehicleEntries];

          if (v7)
          {
            id v2 = [v6 vehicleEntries];

            goto LABEL_13;
          }
        }
      }
      id v2 = [v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_13:

  return v2;
}

id sub_1007B1B00(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateRouteAnnotationsController];
}

void sub_1007B1C3C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningMapController");
  id v2 = (void *)qword_10160F8F0;
  qword_10160F8F0 = (uint64_t)v1;
}

void sub_1007B1E20(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1007B1E38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) entryForHistorySearch:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1007B1E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) entryForHistoryRoute:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1007B1ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) entryForHistoryPlace:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

NanoDirectionWaypoint *__cdecl sub_1007B2A70(id a1, GEOCompanionWaypoint *a2, unint64_t a3)
{
  return (NanoDirectionWaypoint *)+[NanoDirectionWaypoint directionWaypointForCompanionWaypoint:a2];
}

GEOCompanionWaypoint *__cdecl sub_1007B2B84(id a1, NanoDirectionWaypoint *a2, unint64_t a3)
{
  return (GEOCompanionWaypoint *)[(NanoDirectionWaypoint *)a2 companionWaypoint];
}

NanoDirectionWaypoint *__cdecl sub_1007B2F24(id a1, GEOComposedWaypoint *a2, unint64_t a3)
{
  return (NanoDirectionWaypoint *)+[NanoDirectionWaypoint directionWaypointForComposedWaypoint:a2];
}

id sub_1007B4A30(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateGroupedManeuverCounts];
}

uint64_t sub_1007B4D30(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result = (uint64_t)[a2 integerValue];
  if (result >= 1)
  {
    id v6 = *(void **)(a1 + 32);
    return (uint64_t)[v6 setObject:&off_1013A8A88 atIndexedSubscript:a3];
  }
  return result;
}

uint64_t sub_1007B4D90(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result = (uint64_t)[a2 integerValue];
  if (result >= 1)
  {
    id v6 = *(void **)(a1 + 32);
    return (uint64_t)[v6 setObject:&off_1013A8A88 atIndexedSubscript:a3];
  }
  return result;
}

uint64_t sub_1007B4DF0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result = (uint64_t)[a2 integerValue];
  if (result >= 1)
  {
    id v6 = *(void **)(a1 + 32);
    return (uint64_t)[v6 setObject:&off_1013A8A88 atIndexedSubscript:a3];
  }
  return result;
}

id sub_1007B4E50(uint64_t a1, void *a2, uint64_t a3)
{
  id result = [a2 integerValue];
  if (a3 && !result)
  {
    id v6 = *(void **)(a1 + 32);
    return [v6 setObject:&off_1013A8A58 atIndexedSubscript:a3];
  }
  return result;
}

void sub_1007B5638(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 8);
  if (v4)
  {
    unint64_t v5 = *(void *)(a1 + 56);
    id v8 = v3;
    id v6 = [v4 count];
    id v3 = v8;
    if (v5 < (unint64_t)v6)
    {
      id v7 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v8 rampType]);
      [*(id *)(a1 + 40) setObject:v7 atIndexedSubscript:*(void *)(a1 + 56)];

      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      id v3 = v8;
    }
  }
}

void sub_1007B57EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007B5804(uint64_t a1, void *a2)
{
  id v11 = a2;
  if ([v11 travelDirection] != 6
    && [v11 travelDirection] != 2
    && [v11 coordinateCount] != (id)1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    do
    {
      [v11 coordinates3d];
      [v11 coordinates3d];
      GEOBearingFromCoordinateToCoordinate();
      GEOWrapAngleDegrees();
      GEOClosestCoordinateOnLineSegmentFromCoordinate();
      GEOCalculateDistance();
      double v6 = v5;
      GEOAngleDifferenceDegrees();
      double v8 = fabs(v7);
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
      if (v8 <= *(double *)(v9 + 24) && v6 <= 5.0)
      {
        *(double *)(v9 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v8;
        (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      }
      ++v4;
      v3 += 24;
    }
    while (v4 < (char *)[v11 coordinateCount] - 1);
  }
}

id sub_1007B7030()
{
  if (qword_10160F908 != -1) {
    dispatch_once(&qword_10160F908, &stru_1012F8C00);
  }
  v0 = (void *)qword_10160F900;

  return v0;
}

void sub_1007B89F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavCameraController");
  id v2 = (void *)qword_10160F900;
  qword_10160F900 = (uint64_t)v1;
}

id sub_1007B8E1C(void *a1)
{
  os_log_t v1 = [a1 subviews];
  id v2 = [v1 mutableCopy];

  if ([v2 count])
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = [v2 objectAtIndexedSubscript:v3];
      if (objc_opt_isKindOfClass()) {
        break;
      }
      double v5 = [v4 subviews];
      id v6 = [v5 count];

      if (v6)
      {
        double v7 = [v4 subviews];
        [v2 addObjectsFromArray:v7];
      }
      if (++v3 >= (unint64_t)[v2 count]) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_1007B94AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007B94C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _startTestPresentWithSearchResult:*(void *)(a1 + 32)];
}

void sub_1007B9618(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) testCoordinator];
  [v2 pptTestPresentPlaceCardForSearchResult:*(void *)(a1 + 40) animated:1];
}

id sub_1007B9670(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

void sub_1007B9884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007B98A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained startPlacecardTest];
}

void sub_1007BA05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007BA084(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishedSubTest:@"PlaceCardReposition medium to small" checkAllFinished:0];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _mediumizePlaceCard];
}

void sub_1007BA2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007BA2D4(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishedSubTest:@"PlaceCardReposition small to medium" checkAllFinished:0];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _maxiumizePlaceCard];
}

void sub_1007BA49C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007BA4C4(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishedSubTest:@"PlaceCardReposition medium to big" checkAllFinished:0];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _mediumizePlaceCardFromBig];
}

void sub_1007BAD24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007BAD40(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1007BADF4;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_1007BADF4(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained testCoordinator];
  unsigned int v4 = [v3 pptTestIsTrayType:1];

  id v5 = objc_loadWeakRetained(v1);
  id v6 = v5;
  if (v4)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1007BAF14;
    void v7[3] = &unk_1012E6708;
    objc_copyWeak(&v8, v1);
    [v6 dismissTrayWithAssertTrayType:1 completion:v7];

    objc_destroyWeak(&v8);
  }
  else
  {
    [v5 startPlacecardTest];
  }
}

void sub_1007BAF00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1007BAF14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained startPlacecardTest];
}

void sub_1007BB204(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1007BB228(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 object];

  if (v3)
  {
    unsigned int v4 = [v10 object];
    uint64_t v5 = [v4 searchInfo];

    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    double v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v8 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
    id v9 = [v8 count];

    if (!v9)
    {
      [*(id *)(a1 + 32) startedTest];
      [*(id *)(a1 + 32) failedTest];
    }
  }
}

void sub_1007BB2F4(uint64_t a1)
{
  dispatch_time_t v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
  id v3 = [v2 count];

  if (v3 != (id)1)
  {
    if (v3)
    {
      uint64_t v5 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
      uint64_t v6 = [v5 firstObject];

      dispatch_time_t v7 = dispatch_time(0, 5000000000);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      _DWORD v9[2] = sub_1007BB438;
      _OWORD v9[3] = &unk_1012E5D58;
      void v9[4] = *(void *)(a1 + 32);
      id v10 = v6;
      id v8 = v6;
      dispatch_after(v7, (dispatch_queue_t)&_dispatch_main_q, v9);
    }
    else
    {
      [*(id *)(a1 + 32) startedTest];
      unsigned int v4 = *(void **)(a1 + 32);
      [v4 failedTest];
    }
  }
}

void sub_1007BB438(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) testCoordinator];
  [v2 pptTestPresentPlaceCardForSearchResult:*(void *)(a1 + 40) animated:1];
}

void sub_1007BB490(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
  id v3 = [v2 count];

  if (v3)
  {
    dispatch_time_t v4 = dispatch_time(0, 1000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1007BB584;
    block[3] = &unk_1012E5D08;
    void block[4] = *(void *)(a1 + 32);
    dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    [*(id *)(a1 + 32) startedTest];
    uint64_t v5 = *(void **)(a1 + 32);
    [v5 failedTest];
  }
}

void sub_1007BB584(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) placecardChromeDelegate];
  [v1 placecardDidPresent];
}

void sub_1007BB5C8(uint64_t a1, void *a2)
{
  id v3 = [a2 object];
  objc_storeWeak((id *)(*(void *)(a1 + 32) + 80), v3);

  dispatch_time_t v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
  id v5 = [v4 count];

  uint64_t v6 = *(void **)(a1 + 32);
  if (v5)
  {
    id v8 = [v6 placecardChromeDelegate];
    [v8 placecardDidPresent];
  }
  else
  {
    [v6 startedTest];
    dispatch_time_t v7 = *(void **)(a1 + 32);
    [v7 failedTest];
  }
}

id sub_1007BB868(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) canUpdateTrayLayout];
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1007BB91C;
    void v5[3] = &unk_1012E5D08;
    void v5[4] = v3;
    return [v3 updateTrayLayout:2 animated:1 completion:v5];
  }
  else
  {
    return _[v3 _scrollingTest];
  }
}

id sub_1007BB91C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _scrollingTest];
}

void sub_1007BBBA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007BBBE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained finishedSubTest:*(void *)(a1 + 32)];
    [v3 finishedTest];
    id WeakRetained = v3;
  }
}

id sub_1007BBD1C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performResizingTest];
}

id sub_1007BBDF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

id sub_1007BBF38(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

id sub_1007BCE2C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) closeButtonHeightConstraint];
  [v2 setActive:0];

  id v3 = [*(id *)(a1 + 32) contentHeightCollapsedConstraint];
  [v3 setActive:1];

  [*(id *)(a1 + 32) setAlpha:0.0];
  dispatch_time_t v4 = *(void **)(a1 + 32);

  return [v4 layoutIfNeeded];
}

id sub_1007BCF74(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) contentHeightCollapsedConstraint];
  [v2 setActive:0];

  id v3 = [*(id *)(a1 + 32) closeButtonHeightConstraint];
  [v3 setActive:1];

  [*(id *)(a1 + 32) setAlpha:1.0];
  dispatch_time_t v4 = *(void **)(a1 + 32);

  return [v4 layoutIfNeeded];
}

void sub_1007C04AC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  id v5 = +[RAPImageResponseStorage baseFilePathWithSubmissionIdentifier:v3];
  uint64_t v6 = [v5 URLByAppendingPathComponent:v4];
  id v8 = +[RAPFileManager dataAtFileURL:v6];

  id v7 = +[GEORPImageUpdate newImageUpdateWithClientImageId:v4 responseData:v8];
  [*(id *)(a1 + 40) addObject:v7];
}

void sub_1007C0640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_1007C0658(uint64_t a1)
{
  BOOL result = +[RAPFileManager removeItemAtFilePath:](RAPFileManager, "removeItemAtFilePath:");
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  if (*(unsigned char *)(v3 + 24)) {
    BOOL v4 = result;
  }
  else {
    BOOL v4 = 0;
  }
  *(unsigned char *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  return result;
}

void sub_1007C11E0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1007C1200(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 artwork];
  id v12 = +[UIImage _mapkit_transitArtworkImageWithDataSource:v3 size:6 scale:*(double *)(a1 + 48)];

  BOOL v4 = *(void **)(a1 + 32);
  if (v12)
  {
    [*(id *)(a1 + 32) addObject:v12];
  }
  else
  {
    id v5 = +[NSNull null];
    [v4 addObject:v5];
  }
  double v6 = *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  [v12 size];
  double v7 = MKTransitArtworkIncidentBadgeTrailingOffset;
  if (v6 <= v8 + MKTransitArtworkIncidentBadgeTrailingOffset)
  {
    [v12 size];
    double v10 = v7 + v11;
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  }
  else
  {
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
    double v10 = *(double *)(v9 + 24);
  }
  *(double *)(v9 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v10;
}

void sub_1007C1318(uint64_t a1, void *a2, uint64_t a3)
{
  id v21 = a2;
  id v5 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
  double v6 = +[NSNull null];
  unsigned __int8 v7 = [v5 isEqual:v6];

  if (v7)
  {
    double v8 = 0;
  }
  else
  {
    uint64_t v9 = [v21 artwork];
    unsigned int v10 = [v9 hasRoutingIncidentBadge];

    double v11 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
    double v12 = *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
    if (v10)
    {
      double v13 = MKTransitIncidentIcon();
    }
    else
    {
      double v13 = 0;
    }
    id v14 = +[UIImage _compositeImageFromImage:paddedToWidth:badge:badgeOffset:](UIImage, "_compositeImageFromImage:paddedToWidth:badge:badgeOffset:", v11, v13, v12, MKTransitArtworkIncidentBadgeTrailingOffset, MKTransitArtworkIncidentBadgeBottomOffset);
    double v8 = [v14 imageWithRenderingMode:1];

    if (v10) {
  }
    }
  uint64_t v15 = [v21 name];
  long long v16 = (void *)v15;
  if (v15) {
    CFStringRef v17 = (const __CFString *)v15;
  }
  else {
    CFStringRef v17 = &stru_101324E70;
  }
  long long v18 = [*(id *)(a1 + 40) objectAtIndexedSubscript:a3];
  id v19 = +[UIAlertAction _actionWithTitle:v17 image:v8 style:0 handler:v18 shouldDismissHandler:&stru_1012F8D78];

  [v19 _setTitleTextAlignment:4];
  id v20 = +[UIColor labelColor];
  [v19 _setTitleTextColor:v20];

  [*(id *)(a1 + 48) addObject:v19];
}

BOOL sub_1007C1530(id a1)
{
  return 1;
}

void sub_1007C20A8(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 8) objectForKey:a1[5]];
  uint64_t v3 = *(void *)(a1[6] + 8);
  BOOL v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1007C21C4(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) objectForKey:*(void *)(a1 + 40)];
  if (v2) {
    [v2 removeObserver:*(void *)(a1 + 32)];
  }
  [*(id *)(a1 + 48) addObserver:*(void *)(a1 + 32)];
  [*(id *)(*(void *)(a1 + 32) + 8) setObject:*(void *)(a1 + 48) forKey:*(void *)(a1 + 40)];
}

void sub_1007C25D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  _Block_object_dispose(&a22, 8);
  objc_destroyWeak((id *)(v24 - 88));
  _Unwind_Resume(a1);
}

void sub_1007C2614(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    [v5 addTarget:WeakRetained action:"_textFieldValueDidChange:" forControlEvents:0x20000];
    [v5 setAutocapitalizationType:0];
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
  }
}

void sub_1007C26B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v5 = WeakRetained;
    BOOL v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) text];
    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);

    id WeakRetained = v5;
  }
}

void sub_1007C48E4(id a1, RAPDirectionsWhichOneQuestion *a2, RAPDirectionsCategoryQuestion *a3)
{
  unsigned __int8 v7 = a3;
  BOOL v4 = a2;
  [(RAPDirectionsCategoryQuestion *)v7 resetBadRouteSuggestionsQuestion];
  uint64_t v5 = [(RAPDirectionsWhichOneQuestion *)v4 selectedValue];

  selectedValue = v7->_selectedValue;
  v7->_selectedValue = (RAPUserDirectionRequest *)v5;

  [(RAPQuestion *)v7 _didChange];
}

void sub_1007C4FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007C4FCC(id *a1, void *a2)
{
  id v3 = a2;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id obj = a1[4];
  id v4 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v5) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        id v8 = [a1[5] objectForKeyedSubscript:v7];
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472;
        void v11[2] = sub_1007C5194;
        void v11[3] = &unk_1012F8E30;
        void v11[4] = v7;
        v12[1] = v8;
        objc_copyWeak(v12, a1 + 6);
        id v9 = [v3 addNavigationRowWithTitle:v7 action:v11];
        objc_destroyWeak(v12);
      }
      id v4 = [obj countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v4);
  }
}

void sub_1007C5178(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1007C5194(uint64_t a1)
{
  id v3 = [[GEOConfigKeysDebugController alloc] initWithName:*(void *)(a1 + 32) geoConfigDebugClass:*(void *)(a1 + 48)];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained segueToViewController:v3];
}

id sub_1007C5684()
{
  if (qword_10160F950 != -1) {
    dispatch_once(&qword_10160F950, &stru_1012F8FF8);
  }
  v0 = (void *)qword_10160F948;

  return v0;
}

void sub_1007C583C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007C5854(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  double v6 = [v9 name];
  if ([v6 localizedCaseInsensitiveContainsString:*(void *)(a1 + 32)])
  {
  }
  else
  {
    uint64_t v7 = [v9 comment];
    unsigned int v8 = [v7 localizedCaseInsensitiveContainsString:*(void *)(a1 + 32)];

    if (!v8) {
      goto LABEL_5;
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a4 = 1;
LABEL_5:
}

void sub_1007C5A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007C5A38(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1007C5B00;
  void v6[3] = &unk_1012E7EF8;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v5 = [v3 addSectionWithTitle:v4 content:v6];
  objc_destroyWeak(&v7);
}

void sub_1007C5AEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1007C5B00(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained addGEOConfigRowsInSection:v3];
}

void sub_1007C5C18(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 key];
  uint64_t v4 = [v3 debugControlOptions];
  id v5 = [v4 objectForKey:@"name"];
  double v6 = v5;
  if (v5)
  {
    id v7 = v5;
  }
  else
  {
    id v7 = [v3 name];
  }
  unsigned int v8 = v7;

  double v12 = [v3 debugControlType];
  long long v13 = v3;
  long long v14 = v8;
  id v15 = *(id *)(a1 + 40);
  id v9 = v8;
  id v10 = v3;
  id v11 = v12;
  GEOConfigGetPropertiesForKey();
}

void sub_1007C5D70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v11 = a2;
  id v9 = a5;
  if ([*(id *)(a1 + 32) isEqualToString:@"slider"])
  {
    id v10 = [*(id *)(a1 + 40) addSliderRowFor:*(void *)(a1 + 48) withName:*(void *)(a1 + 56) keyType:a4 defaultValue:v9 inSection:*(void *)(a1 + 64)];
    if (v10) {
      goto LABEL_8;
    }
  }
  else if ([*(id *)(a1 + 32) isEqualToString:@"selection"])
  {
    id v10 = [*(id *)(a1 + 40) addSelectionRowFor:*(void *)(a1 + 48) withName:*(void *)(a1 + 56) keyType:a4 defaultValue:v9 inSection:*(void *)(a1 + 64)];
    if (v10) {
      goto LABEL_8;
    }
  }
  id v10 = [*(id *)(a1 + 40) addGenericRowFor:*(void *)(a1 + 48) withName:*(void *)(a1 + 56) keyStr:v11 keyType:a4 defaultValue:v9 configOptions:a3 inSection:*(void *)(a1 + 64)];
  if (!v10)
  {
    id v10 = [*(id *)(a1 + 64) addReadOnlyRowWithTitle:*(void *)(a1 + 56) value:@"Unsupported type"];
  }
LABEL_8:
}

void sub_1007C6020(uint64_t a1, void *a2)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1007C60D8;
  void v6[3] = &unk_1012F8F48;
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  id v5 = [a2 addSectionWithTitle:v4 content:v6];
}

void sub_1007C60D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) key];
  uint64_t v6 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1007C61AC;
  _OWORD v8[3] = &unk_1012F8F20;
  id v9 = *(id *)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v7 = [v3 addCheckmarkRowsGroupForConfigKey:v4 content:v6];
}

void sub_1007C61AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v4 = [*(id *)(a1 + 32) debugControlOptionsOrderedKeys];
  id v5 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v14;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v14 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v13 + 1) + 8 * (void)v8);
        id v10 = [*(id *)(a1 + 32) debugControlOptions];
        id v11 = [v10 objectForKeyedSubscript:v9];

        double v12 = [v3 addRowWithTitle:v9 value:v11];
        if ([v11 isEqual:*(void *)(a1 + 40)]) {
          [v12 setSubtitle:@"(default)"];
        }

        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v6);
  }
}

void sub_1007C6BCC(uint64_t a1, void *a2)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1007C6C74;
  _OWORD v8[3] = &unk_1012F8F48;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  id v9 = v5;
  uint64_t v10 = v6;
  id v7 = [a2 addSectionWithTitle:v4 content:v8];
}

void sub_1007C6C74(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1007C6D0C;
  void v6[3] = &unk_1012F7C78;
  uint64_t v4 = *(void **)(a1 + 32);
  void v6[4] = *(void *)(a1 + 40);
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateObjectsUsingBlock:v6];
}

void sub_1007C6D0C(uint64_t a1, void *a2, uint64_t a3)
{
  id v9 = a2;
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = +[NSNumber numberWithUnsignedInteger:a3];
  id v7 = [v6 description];
  id v8 = [v5 addRowNamed:v7 forValue:v9 inSection:*(void *)(a1 + 40)];
}

void sub_1007C6E90(uint64_t a1, void *a2)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1007C6F38;
  _OWORD v8[3] = &unk_1012F8F48;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  id v9 = v5;
  uint64_t v10 = v6;
  id v7 = [a2 addSectionWithTitle:v4 content:v8];
}

void sub_1007C6F38(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) allObjects];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1007C6FF0;
  void v6[3] = &unk_1012F7C78;
  void v6[4] = *(void *)(a1 + 40);
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateObjectsUsingBlock:v6];
}

id sub_1007C6FF0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addRowNamed:&stru_101324E70 forValue:a2 inSection:*(void *)(a1 + 40)];
}

void sub_1007C710C(uint64_t a1, void *a2)
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1007C71B4;
  _OWORD v8[3] = &unk_1012F8F48;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  id v9 = v5;
  uint64_t v10 = v6;
  id v7 = [a2 addSectionWithTitle:v4 content:v8];
}

void sub_1007C71B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1007C724C;
  void v6[3] = &unk_1012F8F98;
  uint64_t v4 = *(void **)(a1 + 32);
  void v6[4] = *(void *)(a1 + 40);
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v6];
}

id sub_1007C724C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) addRowNamed:a2 forValue:a3 inSection:*(void *)(a1 + 40)];
}

void sub_1007C74C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = a4;
  [v5 key];
  _GEOConfigRemoveValue();
  [*(id *)(a1 + 40) performSelector:"reloadData" withObject:0 afterDelay:0.5];
  v6[2](v6, 1);
}

uint64_t sub_1007C77A0()
{
  return MapsFeature_IsEnabled();
}

uint64_t sub_1007C77AC()
{
  return MapsFeature_SetEnabled();
}

void sub_1007C7C14(id a1)
{
  uint64_t v1 = +[GEOFilePaths pathFor:39];
  double v23 = v1;
  uint64_t v2 = +[NSArray arrayWithObjects:&v23 count:1];
  id v3 = (void *)qword_10160F948;
  qword_10160F948 = v2;

  uint64_t v4 = +[NSBundle mainBundle];
  id v5 = [v4 builtInPlugInsPath];

  uint64_t v6 = +[NSFileManager defaultManager];
  id v7 = [v6 contentsOfDirectoryAtPath:v5 error:0];

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v8 = v7;
  id v9 = [v8 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v18;
    while (2)
    {
      for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v11) {
          objc_enumerationMutation(v8);
        }
        long long v13 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        if (objc_msgSend(v13, "hasSuffix:", @".bundle", (void)v17)
          && [v13 rangeOfString:@"Debug"] != (id)0x7FFFFFFFFFFFFFFFLL
          && [v13 rangeOfString:@"Config"] != (id)0x7FFFFFFFFFFFFFFFLL)
        {
          id v21 = v5;
          long long v14 = +[NSArray arrayWithObjects:&v21 count:1];
          uint64_t v15 = [v14 arrayByAddingObjectsFromArray:qword_10160F948];
          long long v16 = (void *)qword_10160F948;
          qword_10160F948 = v15;

          goto LABEL_13;
        }
      }
      id v10 = [v8 countByEnumeratingWithState:&v17 objects:v22 count:16];
      if (v10) {
        continue;
      }
      break;
    }
  }
LABEL_13:
}

void sub_1007C821C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10160F958;
  qword_10160F958 = (uint64_t)v1;
}

void sub_1007C983C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007C9854(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1007C9DB4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 40));
  [WeakRetained pushManager:*(void *)(a1 + 32) receivedFixedProblemNotification:*(void *)(a1 + 40) manifestToken:0];
}

void sub_1007CA17C(void *a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 40));
  [WeakRetained pushManager:a1[4] receivedPhotoLivenessMUID:a1[5] title:a1[6] message:a1[7] actionURL:a1[8]];
}

void sub_1007CA4D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  [*(id *)(a1 + 32) setServicesState:a2];
  if (v5)
  {
    uint64_t v6 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v13 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Services state: %@", buf, 0xCu);
    }
  }
  id v7 = +[GEORPLegacyProblemRequester sharedRequester];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1007CA644;
  void v10[3] = &unk_1012F9048;
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(a1 + 48);
  void v10[4] = *(void *)(a1 + 40);
  id v11 = v9;
  [v7 startStatusRequest:v8 finished:v10 networkActivity:0 error:&stru_1012F9068];
}

void sub_1007CA644(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Problem status response: %@", (uint8_t *)&v6, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 40));
  [WeakRetained pushManager:*(void *)(a1 + 32) receivedFixedProblemNotification:v3 manifestToken:*(void *)(a1 + 40)];
}

void sub_1007CA730(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Problem status: %@", (uint8_t *)&v4, 0xCu);
  }
}

NSUUID *__cdecl sub_1007CBDC4(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (NSUUID *)[(GEOComposedRoute *)a2 uniqueRouteID];
}

void sub_1007CC080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_1007CC218(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSDateFormatter);
  id v3 = (void *)qword_10160F968;
  qword_10160F968 = (uint64_t)v2;

  id v4 = (void *)qword_10160F968;
  id v5 = +[NSLocale autoupdatingCurrentLocale];
  [v4 setLocale:v5];

  [(id)qword_10160F968 setLocalizedDateFormatFromTemplate:@"jma"];
  [(id)qword_10160F968 setAMSymbol:&stru_101324E70];
  [(id)qword_10160F968 setPMSymbol:&stru_101324E70];
  id v6 = [*(id *)(a1 + 32) timeZone];
  [(id)qword_10160F968 setTimeZone:v6];
}

void sub_1007CC340(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateComponentsFormatter);
  id v2 = (void *)qword_10160F978;
  qword_10160F978 = (uint64_t)v1;

  [(id)qword_10160F978 setAllowedUnits:64];
  id v3 = (void *)qword_10160F978;

  [v3 setUnitsStyle:2];
}

void sub_1007CD5F0(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSDateFormatter);
  id v3 = (void *)qword_10160F988;
  qword_10160F988 = (uint64_t)v2;

  id v4 = (void *)qword_10160F988;
  id v5 = +[NSLocale autoupdatingCurrentLocale];
  [v4 setLocale:v5];

  [(id)qword_10160F988 setLocalizedDateFormatFromTemplate:@"jma"];
  [(id)qword_10160F988 setAMSymbol:&stru_101324E70];
  [(id)qword_10160F988 setPMSymbol:&stru_101324E70];
  id v6 = [*(id *)(a1 + 32) timeZone];
  [(id)qword_10160F988 setTimeZone:v6];
}

void sub_1007CE420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
}

void sub_1007CE46C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained delegate];
  [v2 selectDeparture:*(void *)(a1 + 32)];
}

id sub_1007CEAEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDimmingViewsWithAlpha:*(double *)(a1 + 40)];
}

id sub_1007CF0E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDimming];
}

void sub_1007D04B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained createAnimation];
}

id sub_1007D0BE4(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_1007D1AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007D1B2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained thumbnailGenerator];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1007D1BF0;
    void v7[3] = &unk_1012F9198;
    id v8 = v3;
    [v6 loadThumbnailIfNeededWithCompletion:v7];
  }
}

void sub_1007D1BF0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1007D1CC8;
  block[3] = &unk_1012EF330;
  id v7 = *(id *)(a1 + 32);
  id v12 = v6;
  id v13 = v7;
  id v11 = v5;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1007D1CC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  if (v1)
  {
    UIImagePNGRepresentation(*(UIImage **)(a1 + 32));
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v3, *(void *)(a1 + 40));
  }
}

id sub_1007D1D44(id a1, MKMapItem *a2, unint64_t a3)
{
  id v3 = [(MKMapItem *)a2 _cnPostalAddress];
  id v4 = [v3 copy];

  return v4;
}

void sub_1007D1D90(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = +[MKAppImageManager sharedImageManager];
    id v5 = [*(id *)(a1 + 32) url];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1007D1E60;
    void v6[3] = &unk_1012EC150;
    id v7 = v3;
    [v4 loadAppImageAtURL:v5 completionHandler:v6];
  }
}

void sub_1007D1E60(uint64_t a1, UIImage *image)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (image)
  {
    UIImagePNGRepresentation(image);
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id, void))(v2 + 16))(v2, v5, 0);
  }
  else
  {
    id v3 = *(void (**)(uint64_t))(v2 + 16);
    uint64_t v4 = *(void *)(a1 + 32);
    v3(v4);
  }
}

void sub_1007D2C64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1007D2C80(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  id v9 = sub_1007D2DA0;
  id v10 = &unk_1012F9230;
  objc_copyWeak(&v12, v1);
  id v11 = WeakRetained;
  id v3 = objc_retainBlock(&v7);
  uint64_t v4 = [WeakRetained sign:v7, v8, v9, v10];
  id v5 = [v4 step];

  id v6 = [WeakRetained cameraFramer];
  [v6 rectForStep:v5 currentStepIndex:[v5 stepIndex] handler:v3];

  objc_destroyWeak(&v12);
}

void sub_1007D2D8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1007D2DA0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  MKMapRect v19 = MKMapRectInset(*(MKMapRect *)&a2, a4 * -0.1, a5 * -0.1);
  double x = v19.origin.x;
  double y = v19.origin.y;
  double width = v19.size.width;
  double height = v19.size.height;
  id v10 = objc_alloc_init((Class)MKMapSnapshotOptions);
  [v10 setMapRect:x, y, width, height];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v10 setMapType:[WeakRetained mapType]];

  [v10 setSize:163.0, 163.0];
  id v12 = +[UITraitCollection traitCollectionWithDisplayScale:2.0];
  [v10 setTraitCollection:v12];

  id v13 = [objc_alloc((Class)MKMapSnapshotter) initWithOptions:v10];
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void **)(v14 + 80);
  *(void *)(v14 + 80) = v13;

  uint64_t v16 = *(void *)(a1 + 32);
  long long v17 = *(void **)(v16 + 80);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_1007D2F04;
  void v18[3] = &unk_1012EE650;
  void v18[4] = v16;
  [v17 startWithCompletionHandler:v18];
}

void sub_1007D2F04(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 64) = 1;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 72), a2);
}

void sub_1007D2FFC(id a1)
{
  uint64_t v1 = [MapsSuggestionsNavdMapsAppLocationManager alloc];
  id v5 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("MapsSuggestionsNavdMapsAppLocationManagerQueue", v5);
  id v3 = [(MapsSuggestionsNavdMapsAppLocationManager *)v1 initWithName:@"MapsSuggestionsNavdMapsAppLocationManager" queue:v2];
  uint64_t v4 = (void *)qword_10160F998;
  qword_10160F998 = (uint64_t)v3;
}

void sub_1007D31C8(id a1)
{
  uint64_t v1 = +[MNFilePaths navdCacheDirectoryPath];
  dispatch_queue_t v2 = (void *)qword_10160F9A8;
  qword_10160F9A8 = v1;

  unsigned __int8 v10 = 0;
  id v3 = +[NSFileManager defaultManager];
  unsigned __int8 v4 = [v3 fileExistsAtPath:qword_10160F9A8 isDirectory:&v10];
  int v5 = v10;

  if ((v4 & 1) == 0 && !v5)
  {
    id v6 = +[NSFileManager defaultManager];
    id v9 = 0;
    [v6 createDirectoryAtPath:qword_10160F9A8 withIntermediateDirectories:1 attributes:0 error:&v9];
    id v7 = v9;

    if (v7)
    {
      uint64_t v8 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543618;
        uint64_t v12 = qword_10160F9A8;
        __int16 v13 = 2114;
        id v14 = v7;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Cannot create cache dir at: %{public}@, error: %{public}@", buf, 0x16u);
      }
    }
  }
}

void sub_1007D3B60(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1007D3B7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained tableView];
  [v1 reloadData];
}

void sub_1007D4184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007D41A0(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained updateAddresses];
  }
  else
  {
    if (qword_10160F9C0 != -1) {
      dispatch_once(&qword_10160F9C0, &stru_1012F9290);
    }
    id v3 = qword_10160F9B8;
    if (os_log_type_enabled((os_log_t)qword_10160F9B8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to save shortcut %@. with refined coordinate", buf, 0xCu);
    }
  }
}

void sub_1007D4354(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "HomeWorkShortcutSelection");
  uint64_t v2 = (void *)qword_10160F9B8;
  qword_10160F9B8 = (uint64_t)v1;
}

id sub_1007D8520(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v2 = 1.0;
  }
  else {
    double v2 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 216) setAlpha:v2];
  if (*(unsigned char *)(a1 + 40)) {
    double v3 = 1.0;
  }
  else {
    double v3 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 240) setAlpha:v3];
  if (*(unsigned char *)(a1 + 40)) {
    double v4 = 0.0;
  }
  else {
    double v4 = 1.0;
  }
  int v5 = *(void **)(*(void *)(a1 + 32) + 96);

  return [v5 setAlpha:v4];
}

void sub_1007D9170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007D9194(id a1, UIImageView *a2, UIImage *a3, BOOL a4)
{
  BOOL v4 = a4;
  id v6 = a2;
  uint64_t v7 = a3;
  v11[1] = 3221225472;
  v11[0] = _NSConcreteStackBlock;
  void v11[2] = sub_1007D9288;
  void v11[3] = &unk_1012E5D58;
  if (v4) {
    double v8 = 0.300000012;
  }
  else {
    double v8 = 0.0;
  }
  uint64_t v12 = v6;
  __int16 v13 = v7;
  id v9 = v7;
  unsigned __int8 v10 = v6;
  +[UIView transitionWithView:v10 duration:5242882 options:v11 animations:0 completion:v8];
}

id sub_1007D9288(uint64_t a1)
{
  return [*(id *)(a1 + 32) setImage:*(void *)(a1 + 40)];
}

void sub_1007D9290(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && v6 && !a3) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_1007D9E50(uint64_t a1)
{
}

void sub_1007D9E58(uint64_t a1)
{
}

uint64_t sub_1007D9E60(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_1007DA080(uint64_t a1)
{
}

void sub_1007DA088(uint64_t a1)
{
}

uint64_t sub_1007DA090(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_1007DA304(uint64_t a1)
{
}

void sub_1007DA30C(uint64_t a1)
{
}

uint64_t sub_1007DA314(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_1007DA530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007DA548(void *a1)
{
  uint64_t v2 = a1[4];
  double v3 = (void *)a1[5];
  int v5 = *(void **)(v2 + 80);
  BOOL v4 = (id *)(v2 + 80);
  if (v5 != v3)
  {
    objc_storeStrong(v4, v3);
    *(unsigned char *)(*(void *)(a1[6] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
}

void sub_1007DA680(uint64_t a1)
{
}

void sub_1007DA784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007DA79C(void *a1)
{
  uint64_t v2 = a1[4];
  double v3 = (void *)a1[5];
  int v5 = *(void **)(v2 + 88);
  BOOL v4 = (id *)(v2 + 88);
  if (v5 != v3)
  {
    objc_storeStrong(v4, v3);
    *(unsigned char *)(*(void *)(a1[6] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
}

void sub_1007DA8D4(uint64_t a1)
{
}

void sub_1007DA9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1007DA9E4(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 24) containsObject:*(void *)(a1 + 40)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = (_BYTE)result;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    [*(id *)(a1 + 40) addObserver:*(void *)(a1 + 32)];
    uint64_t v3 = *(void *)(a1 + 40);
    BOOL v4 = *(void **)(*(void *)(a1 + 32) + 24);
    return [v4 addObject:v3];
  }
  return result;
}

void sub_1007DAB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1007DAB50(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 24) containsObject:*(void *)(a1 + 40)];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = (_BYTE)result;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    [*(id *)(a1 + 40) removeObserver:*(void *)(a1 + 32)];
    uint64_t v3 = *(void *)(a1 + 40);
    BOOL v4 = *(void **)(*(void *)(a1 + 32) + 24);
    return [v4 removeObject:v3];
  }
  return result;
}

void sub_1007DAC80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1007DAC98(uint64_t a1)
{
  if (*(unsigned __int8 *)(*(void *)(a1 + 32) + 78) != *(unsigned __int8 *)(a1 + 48))
  {
    uint64_t v2 = sub_1000EC2B4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v3 = *(unsigned __int8 *)(a1 + 48);
      v5[0] = 67109120;
      v5[1] = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Setting updates paused: %d", (uint8_t *)v5, 8u);
    }

    *(unsigned char *)(*(void *)(a1 + 32) + 7_Block_object_dispose(&STACK[0x238], 8) = *(unsigned char *)(a1 + 48);
    if (*(unsigned char *)(a1 + 48)) {
      BOOL v4 = 0;
    }
    else {
      BOOL v4 = *(unsigned char *)(*(void *)(a1 + 32) + 76) != 0;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  }
}

id sub_1007DAE24(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
}

void sub_1007DAF20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(v2 + 77);
  if (*(unsigned char *)(v2 + 77)) {
    id v4 = [*(id *)(v2 + 40) copy];
  }
  else {
    id v4 = &__NSArray0__struct;
  }
  id v5 = v4;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v4);
  if (v3)
  {
  }
}

void sub_1007DB098(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(v2 + 77);
  if (*(unsigned char *)(v2 + 77)) {
    id v4 = [*(id *)(v2 + 48) copy];
  }
  else {
    id v4 = &__NSArray0__struct;
  }
  id v5 = v4;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v4);
  if (v3)
  {
  }
}

void sub_1007DB1B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 77))
  {
    int v3 = *(void **)(v2 + 56);
    id v9 = [*(id *)(a1 + 40) copy];
    id v4 = objc_retainBlock(v9);
    [v3 addObject:v4];
  }
  else
  {
    id v5 = [*(id *)(v2 + 40) copy];
    id v6 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1007DB2D0;
    block[3] = &unk_1012E5F78;
    id v7 = *(id *)(a1 + 40);
    id v11 = v5;
    id v12 = v7;
    id v8 = v5;
    dispatch_async(v6, block);
  }
}

uint64_t sub_1007DB2D0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1007DB37C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 77))
  {
    int v3 = *(void **)(v2 + 64);
    id v9 = [*(id *)(a1 + 40) copy];
    id v4 = objc_retainBlock(v9);
    [v3 addObject:v4];
  }
  else
  {
    id v5 = [*(id *)(v2 + 48) copy];
    id v6 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1007DB494;
    block[3] = &unk_1012E5F78;
    id v7 = *(id *)(a1 + 40);
    id v11 = v5;
    id v12 = v7;
    id v8 = v5;
    dispatch_async(v6, block);
  }
}

uint64_t sub_1007DB494(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1007DB554(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 77);
  return result;
}

int64_t sub_1007DB568(id a1, id a2, id a3)
{
  id v4 = a2;
  id v5 = a3;
  id v6 = [v4 eventDate];
  id v7 = [v5 eventDate];
  int64_t v8 = (int64_t)[v6 compare:v7];
  if (!v8)
  {
    id v9 = [v4 priority];
    id v10 = [v5 priority];
    if (v9 > v10) {
      int64_t v8 = -1;
    }
    else {
      int64_t v8 = v9 != v10;
    }
  }

  return v8;
}

void sub_1007DC848(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MenuContaineeViewController");
  uint64_t v2 = (void *)qword_10160F9E0;
  qword_10160F9E0 = (uint64_t)v1;
}

void sub_1007DD938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007DD95C(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v4 = GEOFindOrCreateLog();
  id v5 = v4;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      id v6 = [WeakRetained uniqueName];
      id v7 = NSStringFromMapsSuggestionsCurrentBestLocation();
      *(_DWORD *)buf = 138412802;
      long long v17 = v6;
      __int16 v18 = 2112;
      *(void *)MKMapRect v19 = @"ALL";
      *(_WORD *)&v19[8] = 2112;
      *(void *)&v19[10] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{MSgDebug} UPDATING SOURCE{%@} for TYPE{%@} at LATLONG{%@}", buf, 0x20u);
    }
    int64_t v8 = (void *)WeakRetained[1];
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = WeakRetained[2];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_1007DDBD0;
    void v13[3] = &unk_1012E98B0;
    objc_copyWeak(&v15, v2);
    id v11 = *(void **)(a1 + 48);
    void v13[4] = *(void *)(a1 + 40);
    id v14 = v11;
    [v8 fetchLocationEntriesForTray:1 currentLocation:v9 queue:v10 handler:v13];

    objc_destroyWeak(&v15);
  }
  else
  {
    id v12 = v4;
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446722;
      long long v17 = "MapsSuggestionsPortraitSource.m";
      __int16 v18 = 1026;
      *(_DWORD *)MKMapRect v19 = 97;
      *(_WORD *)&void v19[4] = 2082;
      *(void *)&v19[6] = "-[MapsSuggestionsPortraitSource updateSuggestionEntriesWithHandler:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1007DDBB4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1007DDBD0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v6)
    {
      int64_t v8 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v9 = [v6 localizedDescription];
        int v19 = 138412290;
        long long v20 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Received an error inside _fetchEntries: %@", (uint8_t *)&v19, 0xCu);
      }
      uint64_t v10 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        id v11 = [*(id *)(a1 + 32) uniqueName];
        int v19 = 138412546;
        long long v20 = v11;
        __int16 v21 = 2080;
        v22[0] = "updateSuggestionEntriesWithHandler";
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v19, 0x16u);
      }
      id v12 = GEOFindOrCreateLog();
      if (os_signpost_enabled(v12))
      {
        LOWORD(v19) = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "updateSuggestionEntriesWithHandler", "", (uint8_t *)&v19, 2u);
      }
    }
    if (v5) {
      __int16 v13 = v5;
    }
    else {
      __int16 v13 = &__NSArray0__struct;
    }
    [WeakRetained addOrUpdateMySuggestionEntries:v13];
    id v14 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      id v15 = [WeakRetained uniqueName];
      int v19 = 138412546;
      long long v20 = v15;
      __int16 v21 = 2080;
      v22[0] = "updateSuggestionEntriesWithHandler";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v19, 0x16u);
    }
    uint64_t v16 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v16))
    {
      LOWORD(v19) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "updateSuggestionEntriesWithHandler", "", (uint8_t *)&v19, 2u);
    }

    uint64_t v17 = *(void *)(a1 + 40);
    if (v17) {
      (*(void (**)(void))(v17 + 16))();
    }
  }
  else
  {
    GEOFindOrCreateLog();
    __int16 v18 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      int v19 = 136446722;
      long long v20 = "MapsSuggestionsPortraitSource.m";
      __int16 v21 = 1026;
      LODWORD(v22[0]) = 104;
      WORD2(v22[0]) = 2082;
      *(void *)((char *)v22 + 6) = "-[MapsSuggestionsPortraitSource updateSuggestionEntriesWithHandler:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", (uint8_t *)&v19, 0x1Cu);
    }
  }
}

void sub_1007DE664(uint64_t a1)
{
  id v5 = +[UIFont systemFontOfSize:9.0 weight:UIFontWeightBold];
  [@"AQI" _maps_sizeWithFont:v5];
  double v3 = v2 * 5.0;
  [*(id *)(a1 + 32) _maps_sizeWithFont:v5];
  if (v4 > v3) {
    byte_10160F9F0 = 1;
  }
}

void sub_1007DEA04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1007DEC28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1007E0078(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void sub_1007E009C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = sub_100577ECC();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (a2 == 1)
  {
    if (v6)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "CarSessionController : user accepted End Navigation prompt", buf, 2u);
    }

    id v7 = +[CarDisplayController sharedInstance];
    int64_t v8 = [v7 chromeViewController];
    [v8 captureUserAction:3002 onTarget:1013];

    [WeakRetained _promptToEndNavigationAccepted:*(void *)(a1 + 32)];
  }
  else
  {
    if (v6)
    {
      *(_WORD *)id v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "CarSessionController : user discard End Navigation prompt", v12, 2u);
    }

    uint64_t v9 = +[CarDisplayController sharedInstance];
    uint64_t v10 = [v9 chromeViewController];
    [v10 captureUserAction:18 onTarget:1013];

    uint64_t v11 = *(void *)(a1 + 32);
    if (v11) {
      (*(void (**)(uint64_t, void))(v11 + 16))(v11, 0);
    }
  }
}

void sub_1007E39E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1007E3A0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    double v3 = [WeakRetained view];
  }
  else
  {
    double v3 = 0;
  }

  return v3;
}

id sub_1007E659C()
{
  if (qword_10160FA18 != -1) {
    dispatch_once(&qword_10160FA18, &stru_1012F9538);
  }
  v0 = (void *)qword_10160FA10;

  return v0;
}

void sub_1007E67D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    unsigned int v2 = [WeakRetained isLowPowerModeEnabled];
    double v3 = [v5 stateManager];
    double v4 = v3;
    if (v2) {
      [v3 recordSessionDisableEvent:0];
    }
    else {
      [v3 resetSessionDisableEvent:0];
    }

    id WeakRetained = v5;
  }
}

void sub_1007E6850(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionPowerStateMonitor");
  unsigned int v2 = (void *)qword_10160FA10;
  qword_10160FA10 = (uint64_t)v1;
}

void sub_1007E8B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007E8B94(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  id v7 = [v9 title];
  id v8 = [v7 length];

  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_1007E91D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007E91E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = a2;
  id v7 = (char *)[v6 remainingMinutes] - *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  (*(void (**)(void, id, char *, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v6, v7, a4);

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) += v7;
}

void sub_1007E9904(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = 60 * a3;
    id v5 = a2;
    id v10 = +[NSString _navigation_stringWithSeconds:v4 andAbbreviationType:1];
    id v6 = [[RouteMarkerFormatterInfo alloc] initWithRouteDescription:v10 etaComparison:0 tollCurrency:0 styleAttributes:0];
    id v7 = *(void **)(a1 + 32);
    id v8 = [v5 legIndex];

    id v9 = +[NSNumber numberWithUnsignedInteger:v8];
    [v7 setObject:v6 forKeyedSubscript:v9];
  }
}

void sub_1007E9F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007E9F9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = WeakRetained[1];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1007EA074;
    _OWORD v8[3] = &unk_1012E6690;
    objc_copyWeak(&v10, v4);
    id v9 = v3;
    dispatch_async(v7, v8);

    objc_destroyWeak(&v10);
  }
}

void sub_1007EA074(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setVirtualGarage:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_1007EA1C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    if (v3 != WeakRetained[7])
    {
      WeakRetained[7] = v3;
      uint64_t v4 = WeakRetained;
      [WeakRetained _reloadAvailability];
      id WeakRetained = v4;
    }
  }
}

uint64_t sub_1007EA2D8(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 25);
  return result;
}

void sub_1007EA3A8(uint64_t a1)
{
  unsigned int v2 = (id *)(a1 + 40);
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    int v5 = *(unsigned __int8 *)(a1 + 48);
    if (v5 != WeakRetained[25])
    {
      WeakRetained[25] = v5;
      id v6 = sub_10000A540();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      {
        if (*(unsigned char *)(*(void *)(a1 + 32) + 25)) {
          id v7 = @"YES";
        }
        else {
          id v7 = @"NO";
        }
        id v8 = v7;
        *(_DWORD *)buf = 138412290;
        id v14 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Did update availability of LPR routing to %@.", buf, 0xCu);
      }
      id v9 = *(NSObject **)(*(void *)(a1 + 32) + 16);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_1007EA52C;
      void v10[3] = &unk_1012E6830;
      objc_copyWeak(&v11, v2);
      char v12 = *(unsigned char *)(a1 + 48);
      dispatch_async(v9, v10);
      objc_destroyWeak(&v11);
    }
  }
}

void sub_1007EA52C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v4 = WeakRetained;
    id v3 = objc_loadWeakRetained(WeakRetained + 5);
    [v3 source:v4 didUpdateAvailability:*(unsigned __int8 *)(a1 + 40)];

    id WeakRetained = v4;
  }
}

void sub_1007EA878(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_1007EA8AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _didSelectModel];
}

void sub_1007EA8EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _didViewModel];
}

void sub_1007EA92C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

void sub_1007EAA34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    unsigned int v2 = sub_10000A540();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User dismissed LPR suggestion.", v3, 2u);
    }

    WeakRetained[24] = 1;
    [WeakRetained _reloadAvailability];
  }
}

void sub_1007EAB88(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1007EAC2C;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  if (qword_10160FA20 != -1) {
    dispatch_once(&qword_10160FA20, block);
  }
  objc_destroyWeak(&v2);
}

void sub_1007EAC2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_10000A540();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User viewed LPR suggestion.", v4, 2u);
    }

    ++WeakRetained[4];
    id v3 = +[NSUserDefaults standardUserDefaults];
    [v3 setInteger:WeakRetained[4] forKey:@"LPRRoutingFeatureDiscoverySourceViewedTimesKey"];

    [WeakRetained _reloadAvailability];
  }
}

void sub_1007EAD30(id a1)
{
  os_log_t v1 = sub_10000A540();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "User selected LPR suggestion.", v5, 2u);
  }

  id v2 = +[UIApplication sharedMapsDelegate];
  id v3 = [v2 appCoordinator];
  uint64_t v4 = [v3 baseActionCoordinator];

  [v4 presentLPRWithVehicle:0 scenario:0 presenter:0 completionBlock:0];
}

void sub_1007EAFC4(uint64_t a1)
{
  id WeakRetained = (unint64_t *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = +[MapsOfflineUIHelper sharedHelper];
    unsigned int v3 = [v2 isUsingOfflineMaps];

    int IsEnabled_Alberta = MapsFeature_IsEnabled_Alberta();
    id v5 = [WeakRetained transportType];
    int v6 = *((unsigned __int8 *)WeakRetained + 24);
    id v7 = [WeakRetained virtualGarage];
    if (v7) {
      BOOL v8 = [WeakRetained numberOfLPRLVehicles] == 0;
    }
    else {
      BOOL v8 = 0;
    }

    unint64_t v9 = WeakRetained[4];
    unint64_t UInteger = GEOConfigGetUInteger();
    unint64_t v11 = UInteger;
    uint64_t v12 = 0;
    if (IsEnabled_Alberta && v5 == (id)1 && !v6 && v8)
    {
      if (v9 < UInteger) {
        uint64_t v12 = v3 ^ 1;
      }
      else {
        uint64_t v12 = 0;
      }
    }
    [WeakRetained setAvailable:v12];
    __int16 v13 = sub_10000A540();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      if (v12) {
        id v14 = @"YES";
      }
      else {
        id v14 = @"NO";
      }
      id v15 = v14;
      if (IsEnabled_Alberta) {
        uint64_t v16 = @"YES";
      }
      else {
        uint64_t v16 = @"NO";
      }
      uint64_t v17 = v16;
      if (v5 == (id)1) {
        __int16 v18 = @"YES";
      }
      else {
        __int16 v18 = @"NO";
      }
      int v19 = v18;
      if (v6) {
        long long v20 = @"YES";
      }
      else {
        long long v20 = @"NO";
      }
      __int16 v21 = v20;
      if (v8) {
        id v22 = @"YES";
      }
      else {
        id v22 = @"NO";
      }
      double v23 = v22;
      if (v9 >= v11) {
        uint64_t v24 = @"NO";
      }
      else {
        uint64_t v24 = @"YES";
      }
      id v25 = v24;
      if (v3) {
        id v26 = @"YES";
      }
      else {
        id v26 = @"NO";
      }
      id v27 = v26;
      *(_DWORD *)buf = 138413826;
      id v29 = v15;
      __int16 v30 = 2112;
      id v31 = v17;
      __int16 v32 = 2112;
      id v33 = v19;
      __int16 v34 = 2112;
      id v35 = v21;
      __int16 v36 = 2112;
      long long v37 = v23;
      __int16 v38 = 2112;
      long long v39 = v25;
      __int16 v40 = 2112;
      __int16 v41 = v27;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "_reloadAvailability LPRRoutingFeatureDiscoverySource isAvailable: %@\n, featureEnabled: %@, validTransportType: %@, wasDismissed: %@, needToAddLicencePlate: %@, belowMaximumViewCount: %@, isOffline: %@", buf, 0x48u);
    }
  }
}

void sub_1007EB31C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setVirtualGarage:*(void *)(a1 + 32)];
    [v3 _reloadAvailability];
    id WeakRetained = v3;
  }
}

void sub_1007EC6D0(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_10160FA28;
  qword_10160FA28 = v1;

  [(id)qword_10160FA28 setNumberStyle:0];
  id v3 = +[NSLocale localeWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_10160FA28 setLocale:v3];
}

void sub_1007ED674(uint64_t a1, void *a2, uint64_t a3)
{
  id v12 = a2;
  id v5 = objc_alloc_init(DirectionsPlanWaypoint);
  int v6 = [*(id *)(a1 + 32) waypointAtIndex:a3];
  if (v6)
  {
    [(DirectionsPlanWaypoint *)v5 setWaypoint:v6];
  }
  else
  {
    id v7 = [v12 waypointPlaceholder];
    BOOL v8 = [v7 displayableMarker];

    unint64_t v9 = [v8 singleLineAddress];
    if ([v9 length])
    {
      [(DirectionsPlanWaypoint *)v5 setSearchString:v9];
    }
    else
    {
      id v10 = [v12 waypointPlaceholder];
      unint64_t v11 = [v10 name];
      [(DirectionsPlanWaypoint *)v5 setSearchString:v11];
    }
  }
  [*(id *)(a1 + 40) addPlanningWaypoint:v5];
}

void sub_1007F056C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerViewController];
  [v2 removeControllerFromStack:*(void *)(a1 + 40)];
}

void sub_1007F0674(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerViewController];
  [v2 removeControllerFromStack:*(void *)(a1 + 40)];
}

void sub_1007F0770(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerViewController];
  [v2 removeControllerFromStack:*(void *)(a1 + 40)];
}

id sub_1007F1220(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  unint64_t v9 = WeakRetained;
  if (WeakRetained)
  {
    id v10 = WeakRetained[4];
    if (v10)
    {
      id v11 = v10;
    }
    else
    {
      double v23 = [v9 vehicle];
      if (v23)
      {
        id v12 = [objc_alloc((Class)NSMutableArray) initWithCapacity:2];
        __int16 v13 = [v9 _titleForPreferredNetworks];
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        v26[2] = sub_1007F16B4;
        v26[3] = &unk_1012E8CD0;
        objc_copyWeak(&v27, v7);
        id v14 = +[UIAction actionWithTitle:v13 image:0 identifier:0 handler:v26];

        [v14 setAccessibilityIdentifier:@"RefinementButtonPreferredNetworks"];
        [v14 setState:*((unsigned __int8 *)v9 + 40)];
        [v12 addObject:v14];
        id v15 = [v9 _titleForAllNetworks];
        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472;
        v24[2] = sub_1007F173C;
        v24[3] = &unk_1012E8CD0;
        objc_copyWeak(&v25, v7);
        uint64_t v16 = +[UIAction actionWithTitle:v15 image:0 identifier:0 handler:v24];

        uint64_t v17 = [v9 _titleForAllNetworks];
        [v16 setTitle:v17];

        [v16 setAccessibilityIdentifier:@"RefinementButtonAllNetworks"];
        [v16 setState:*((unsigned char *)v9 + 40) == 0];
        [v12 addObject:v16];
        __int16 v18 = +[UIMenu menuWithTitle:&stru_101324E70 image:0 identifier:0 options:32 children:v12];
        objc_storeStrong(v9 + 4, v18);
        id v11 = v18;

        objc_destroyWeak(&v25);
        objc_destroyWeak(&v27);
      }
      else
      {
        int v19 = sub_1005762E4();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 136315650;
          id v29 = "-[RoutePlanningPreferredNetworksRefinementModel menuProvider]_block_invoke";
          __int16 v30 = 2080;
          id v31 = "RoutePlanningPreferredNetworksRefinementModel.m";
          __int16 v32 = 1024;
          int v33 = 125;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
        }

        if (sub_100BB36BC())
        {
          long long v20 = sub_1005762E4();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          {
            __int16 v21 = +[NSThread callStackSymbols];
            *(_DWORD *)buf = 138412290;
            id v29 = v21;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
          }
        }
        id v12 = sub_1005768D4();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "[Options] vehicle disappeared when creating menu.", buf, 2u);
        }
        id v11 = 0;
      }
    }
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

void sub_1007F1670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
}

void sub_1007F16B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_1005768D4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[Options] User tapped on Preferred Networks action", v3, 2u);
    }

    [WeakRetained setShouldUsePreferredNetworks:1];
  }
}

void sub_1007F173C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_1005768D4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[Options] User tapped on All Networks action", v3, 2u);
    }

    [WeakRetained setShouldUsePreferredNetworks:0];
  }
}

void sub_1007F18D0(id a1, id a2, RAPReportComposerBadRouteSuggestionsViewController *a3)
{
}

void sub_1007F1B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007F1B54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setNeedsTablePartsUpdateWithSender:0 scroll:0];
  [WeakRetained _instrumentSelectingRoute];
}

void sub_1007F1DBC(id a1, id a2, RAPReportComposerBadRouteSelectionSection *a3)
{
}

UITableViewCell *__cdecl sub_1007F21A4(id a1, NSString *a2)
{
  id v2 = a2;
  id v3 = [[RAPCheckmarkTableViewCell alloc] initWithStyle:0 reuseIdentifier:v2];

  return (UITableViewCell *)v3;
}

RAPSingleLineTableViewCell *sub_1007F2200(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [[RAPSingleLineTableViewCell alloc] initWithStyle:0 reuseIdentifier:v3];

  id v5 = +[NSBundle mainBundle];
  id v6 = [v5 localizedStringForKey:@"Show all routes" value:@"localized string not found" table:0];
  id v7 = [(RAPSingleLineTableViewCell *)v4 textLabel];
  [v7 setText:v6];

  [*(id *)(a1 + 32) _separatorInset];
  -[RAPSingleLineTableViewCell setSeparatorInset:](v4, "setSeparatorInset:");

  return v4;
}

UITableViewCell *__cdecl sub_1007F22D8(id a1, NSString *a2)
{
  id v2 = a2;
  id v3 = [[TransitRouteRAPTableViewCell alloc] initWithStyle:0 reuseIdentifier:v2];

  return (UITableViewCell *)v3;
}

void sub_1007F2BE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = [*(id *)(a1 + 32) locationsOfInterestWithType:*(void *)(a1 + 48)];
  id v4 = (id)v2;
  if (v2) {
    id v3 = (void *)v2;
  }
  else {
    id v3 = &__NSArray0__struct;
  }
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v3);
}

void sub_1007F2CD8(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) loisByType];
  id v3 = [v2 keyEnumerator];

  id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        BOOL v8 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v7);
        unint64_t v9 = [*(id *)(a1 + 32) invalidatedLOIsOfTypes];
        [v9 addObject:v8];

        [*(id *)(a1 + 32) retrieveLOIsOfType:[v8 integerValue]];
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }
}

id sub_1007F2EAC(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) monitoringLOIsOfType:*(void *)(a1 + 40)];
  if (result)
  {
    id v3 = [*(id *)(a1 + 32) invalidatedLOIsOfTypes];
    id v4 = +[NSNumber numberWithInteger:*(void *)(a1 + 40)];
    [v3 addObject:v4];

    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    return [v5 retrieveLOIsOfType:v6];
  }
  return result;
}

void sub_1007F2F44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained invalidateLOIs];
}

void sub_1007F3398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007F33B4(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained delegate];
  id v3 = objc_loadWeakRetained(v1);
  id v4 = [v3 childItem];
  [v2 didTapChildItemButtonForChildItem:v4];
}

uint64_t sub_1007F3530(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1007F3F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007F3F40(uint64_t a1, void *a2)
{
}

void sub_1007F407C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

BOOL sub_1007F6D38(uint64_t a1, void *a2)
{
  return [a2 photoType] != *(id *)(a1 + 32);
}

id sub_1007F6E1C(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateIfNeeded];
}

void sub_1007F7DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007F7DEC(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1007F8068(uint64_t a1)
{
  return [*(id *)(a1 + 32) _invokeChangeHandlers];
}

void sub_1007F8070(uint64_t a1)
{
  [*(id *)(a1 + 32) _invokeChangeHandlers];
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, *(void *)(a1 + 32));
  }
  if (_MKRAPIsAvailable() && !sub_100521BD0())
  {
    id v4 = *(void **)(a1 + 32);
    id v43 = 0;
    id v5 = [v4 _buildRequestParamsWithError:&v43];
    id v6 = v43;
    if (v6)
    {
      uint64_t v7 = *(void *)(a1 + 56);
      if (v7) {
        (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, *(void *)(a1 + 32), v6);
      }
    }
    else if ([v5 hasSubmissionParameters] {
           && ([v5 submissionParameters],
    }
               BOOL v8 = objc_claimAutoreleasedReturnValue(),
               unsigned __int8 v9 = [v8 hasType],
               v8,
               (v9 & 1) != 0))
    {
      long long v10 = [v5 submissionParameters];
      unsigned int v11 = [v10 type];

      if (v11 == 11)
      {
        id v12 = objc_alloc((Class)GEOLocation);
        long long v13 = [v5 submissionParameters];
        id v14 = [v13 details];
        id v15 = [v14 incidentFeedback];
        id v16 = [v15 newIncidentDetails];
        uint64_t v17 = [v16 incidentLocation];
        __int16 v18 = [v17 latLng];
        id v19 = [v12 initWithLocation:v18];

        long long v20 = [v5 submissionParameters];
        __int16 v21 = [v20 details];
        id v22 = [v21 incidentFeedback];
        id v23 = [v22 newIncidentDetails];
        id v24 = [v23 type];

        id v25 = [[TrafficIncidentReport alloc] initWithIncidentLocation:v19 type:v24 userPath:4];
        uint64_t v26 = *(void *)(*(void *)(a1 + 32) + 16);
        id v27 = [v5 submissionParameters];
        double v28 = [v27 commonCorrections];
        id v29 = [v28 comments];
        v41[0] = _NSConcreteStackBlock;
        v41[1] = 3221225472;
        v41[2] = sub_1007F849C;
        v41[3] = &unk_1012E5F78;
        id v30 = *(id *)(a1 + 56);
        v41[4] = *(void *)(a1 + 32);
        id v42 = v30;
        [(TrafficIncidentReport *)v25 submitWithAttachedImages:v26 comments:v29 completionHandler:v41];
      }
      else
      {
        objc_initWeak(&buf, *(id *)(a1 + 32));
        __int16 v32 = *(void **)(a1 + 32);
        v35[0] = _NSConcreteStackBlock;
        v35[1] = 3221225472;
        v35[2] = sub_1007F852C;
        v35[3] = &unk_1012F98D0;
        objc_copyWeak(&v39, &buf);
        id v33 = v5;
        uint64_t v34 = *(void *)(a1 + 32);
        id v36 = v33;
        uint64_t v37 = v34;
        id v38 = *(id *)(a1 + 56);
        [v32 _buildUserInfoWithRequestParams:v33 CompletionHandler:v35];

        objc_destroyWeak(&v39);
        objc_destroyWeak(&buf);
      }
    }
    else
    {
      id v31 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf) = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "Canceling problem report send because the model created a malformed report", (uint8_t *)&buf, 2u);
      }

      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
  else
  {
    id v3 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    v3();
  }
}

void sub_1007F8480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1007F849C(uint64_t a1)
{
  uint64_t v2 = sub_100109EF8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Successfully submitted RAP", v5, 2u);
  }

  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, void, void))(v3 + 16))(v3, *(void *)(a1 + 32), 0);
  }
  return [*(id *)(a1 + 32) _invokeChangeHandlers];
}

void sub_1007F852C(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1007F8610;
  block[3] = &unk_1012F3F48;
  objc_copyWeak(&v13, (id *)(a1 + 56));
  id v9 = v3;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = *(void **)(a1 + 48);
  id v10 = v4;
  uint64_t v11 = v5;
  id v12 = v6;
  id v7 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v13);
}

void sub_1007F8610(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    id v3 = sub_100109EF8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)id buf = 138412290;
      uint64_t v21 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "UserInfo for RAP Submission: %@", buf, 0xCu);
    }

    if (sub_100524198())
    {
      uint64_t v5 = [*(id *)(a1 + 40) submissionParameters];
      [WeakRetained _anonymizePhotos:v5];
    }
    if (sub_100524514())
    {
      id v6 = [*(id *)(a1 + 40) submissionParameters];
      [WeakRetained _anonymizeScreenshots:v6];
    }
    id v7 = [WeakRetained _context];
    BOOL v8 = [v7 traits];
    id v9 = [v8 copy];

    [v9 setSource:2];
    if (sub_100523E1C())
    {
      id v10 = [*(id *)(a1 + 40) submissionParameters];
      [WeakRetained _anonymizeLocations:v10 traits:v9];
    }
    uint64_t v11 = [*(id *)(a1 + 40) submissionParameters];
    [WeakRetained _anonymizeDirectionsRequestsAndResponsesIfNeeded:v11];

    id v12 = [WeakRetained _saveRAPInfoToMapsSyncWithRequestParams:*(void *)(a1 + 40)];
    id v13 = (void *)WeakRetained[4];
    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 16);
    uint64_t v16 = *(void *)(a1 + 32);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    void v18[2] = sub_1007F8868;
    void v18[3] = &unk_1012F98A8;
    id v17 = *(id *)(a1 + 56);
    void v18[4] = WeakRetained;
    id v19 = v17;
    [v13 submitOrEnqueueFeedback:v14 attachedImages:v15 userInfo:v16 traits:v9 debugSettings:0 uploadPolicy:1 feedbackObjectToUpdate:v12 completion:v18];
  }
}

void sub_1007F8868(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = GEOFindOrCreateLog();
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    *(_DWORD *)id v13 = 138412290;
    *(void *)&void v13[4] = v6;
    BOOL v8 = "Submission: %@";
    id v9 = v7;
    os_log_type_t v10 = OS_LOG_TYPE_ERROR;
    uint32_t v11 = 12;
  }
  else
  {
    id v7 = sub_100109EF8();
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
      goto LABEL_7;
    }
    *(_WORD *)id v13 = 0;
    BOOL v8 = "Successfully submitted RAP";
    id v9 = v7;
    os_log_type_t v10 = OS_LOG_TYPE_INFO;
    uint32_t v11 = 2;
  }
  _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, v13, v11);
LABEL_7:

  uint64_t v12 = *(void *)(a1 + 40);
  if (v12) {
    (*(void (**)(uint64_t, void, id))(v12 + 16))(v12, *(void *)(a1 + 32), v6);
  }
  [*(id *)(a1 + 32) _invokeChangeHandlers:*(_OWORD *)v13];
}

void sub_1007F89AC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _shouldEnableCommunityID] || *(unsigned char *)(a1 + 64))
  {
    uint64_t v2 = *(void *)(a1 + 40);
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_1007F8AB8;
      void v6[3] = &unk_1012E8D90;
      id v7 = *(id *)(a1 + 56);
      id v8 = *(id *)(a1 + 40);
      (*(void (**)(uint64_t, uint64_t, void *))(v4 + 16))(v4, v5, v6);

      return;
    }
    uint64_t v2 = *(void *)(a1 + 56);
  }
  id v3 = *(void (**)(void))(v2 + 16);

  v3();
}

uint64_t sub_1007F8AB8(uint64_t a1, char a2)
{
  if (a2)
  {
    +[GEOAPPortal captureUserAction:17090 target:0 value:0];
    id v3 = +[NSUserDefaults standardUserDefaults];
    [v3 setBool:1 forKey:@"RAPHasReceived2015PrivacyConsent"];

    uint64_t v4 = a1 + 40;
  }
  else
  {
    +[GEOAPPortal captureUserAction:17085 target:0 value:0];
    uint64_t v4 = a1 + 32;
  }
  uint64_t v5 = *(uint64_t (**)(void))(*(void *)v4 + 16);

  return v5();
}

void sub_1007F8D38(id *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_alloc_init((Class)GEORPFeedbackUserInfo);
  id v7 = objc_alloc_init((Class)GEORPTdmInfo);
  [v6 setTdmUserInfo:v7];

  id v8 = [v6 tdmUserInfo];
  [v8 setIsBlocked:a2];

  id v9 = [v6 tdmUserInfo];
  [v9 setIsTrusted:a3];

  os_log_type_t v10 = [a1[4] submissionParameters];
  if ([v10 type] != 21)
  {

    goto LABEL_5;
  }
  uint32_t v11 = [a1[5] previousFeedbackID];

  if (!v11)
  {
LABEL_5:
    uint64_t v12 = +[FeedbackCommunityIDManager shared];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    void v18[2] = sub_1007F906C;
    void v18[3] = &unk_1012F9948;
    uint64_t v14 = &v19;
    id v19 = v6;
    uint64_t v15 = &v20;
    id v20 = a1[6];
    id v17 = v6;
    [v12 fetchAuthenticationInfoForRAPReportWithReportID:0 completion:v18];
    goto LABEL_6;
  }
  uint64_t v12 = +[FeedbackCommunityIDManager shared];
  id v13 = [a1[5] previousFeedbackID];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_1007F8F58;
  v21[3] = &unk_1012F9948;
  uint64_t v14 = &v22;
  id v22 = v6;
  uint64_t v15 = &v23;
  id v23 = a1[6];
  id v16 = v6;
  [v12 fetchAuthenticationInfoForRAPReportWithReportID:v13 shouldIncreaseCount:0 completion:v21];

LABEL_6:
}

void sub_1007F8F58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_100109EF8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138412290;
      id v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "communityID fetch Error: %@", (uint8_t *)&v10, 0xCu);
    }
  }
  id v8 = [v5 anonymousId];
  id v9 = [*(id *)(a1 + 32) tdmUserInfo];
  [v9 setAnonymousUserId:v8];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1007F906C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_100109EF8();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138412290;
      id v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "communityID fetch Error: %@", (uint8_t *)&v10, 0xCu);
    }
  }
  id v8 = [v5 anonymousId];
  id v9 = [*(id *)(a1 + 32) tdmUserInfo];
  [v9 setAnonymousUserId:v8];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1007FB3F4(id a1)
{
  id v3 = +[RAPRecordMapsSync sharedInstance];
  uint64_t v1 = [[RAPRecordManager alloc] initWithSyncedCache:v3];
  uint64_t v2 = (void *)qword_10160FA68;
  qword_10160FA68 = (uint64_t)v1;
}

void sub_1007FB5AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  if (v3)
  {
    if (v4)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1007FB6CC;
      block[3] = &unk_1012E5F78;
      id v5 = &v10;
      id v10 = v4;
      id v9 = v3;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

LABEL_6:
    }
  }
  else if (v4)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1007FB6E0;
    void v6[3] = &unk_1012E6EA8;
    id v5 = &v7;
    id v7 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
    goto LABEL_6;
  }
}

uint64_t sub_1007FB6CC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1007FB6E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1007FB808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007FB820(uint64_t a1, void *a2)
{
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id obj = a2;
  id v25 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
  if (v25)
  {
    uint64_t v23 = *(void *)v34;
    uint64_t v24 = a1;
    do
    {
      uint64_t v3 = 0;
      do
      {
        if (*(void *)v34 != v23) {
          objc_enumerationMutation(obj);
        }
        uint64_t v4 = *(void **)(*((void *)&v33 + 1) + 8 * v3);
        uint64_t v27 = v3;
        uint64_t v5 = objc_opt_class();
        id v6 = [v4 contentData];
        id v7 = +[NSKeyedUnarchiver unarchivedObjectOfClass:v5 fromData:v6 error:0];

        uint64_t v8 = objc_opt_class();
        id v9 = [v4 rapResponse];
        id v29 = +[NSKeyedUnarchiver unarchivedObjectOfClass:v8 fromData:v9 error:0];

        double v28 = [RAPRecord alloc];
        uint64_t v26 = [v4 reportId];
        id v10 = [v4 type];
        id v11 = [v4 summary];
        uint64_t v12 = [v7 title];
        id v13 = [v4 createTime];
        uint64_t v14 = [v4 countryCode];
        LOWORD(v_Block_object_dispose(&STACK[0x238], 8) = +[RAPRecordReportStatus typeFromMapsSyncStatus:](RAPRecordReportStatus, "typeFromMapsSyncStatus:", [v4 status]);
        uint64_t v15 = [v4 communityID];
        id v16 = [v15 communityIdentifier];
        LOWORD(v21) = v8;
        id v17 = [(RAPRecord *)v28 initWithReportID:v26 reportType:v10 reportSummary:v11 reportTitle:v12 dateOfReportCreation:v13 countryCodeUponCreation:v14 reportStatus:v21 contentData:v7 communityIdentifier:v16 rapResponse:v29];

        a1 = v24;
        [*(id *)(*(void *)(*(void *)(v24 + 40) + 8) + 40) addObject:v17];

        uint64_t v3 = v27 + 1;
      }
      while (v25 != (id)(v27 + 1));
      id v25 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
    }
    while (v25);
  }
  __int16 v18 = *(void **)(a1 + 32);
  if (v18)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1007FBB50;
    block[3] = &unk_1012E79E8;
    id v19 = v18;
    uint64_t v20 = *(void *)(a1 + 40);
    id v31 = v19;
    uint64_t v32 = v20;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_1007FBB50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1007FBCCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007FBCE4(uint64_t a1, void *a2)
{
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id obj = a2;
  id v25 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
  if (v25)
  {
    uint64_t v23 = *(void *)v34;
    uint64_t v24 = a1;
    do
    {
      uint64_t v3 = 0;
      do
      {
        if (*(void *)v34 != v23) {
          objc_enumerationMutation(obj);
        }
        uint64_t v4 = *(void **)(*((void *)&v33 + 1) + 8 * v3);
        uint64_t v27 = v3;
        uint64_t v5 = objc_opt_class();
        id v6 = [v4 contentData];
        id v7 = +[NSKeyedUnarchiver unarchivedObjectOfClass:v5 fromData:v6 error:0];

        uint64_t v8 = objc_opt_class();
        id v9 = [v4 rapResponse];
        id v29 = +[NSKeyedUnarchiver unarchivedObjectOfClass:v8 fromData:v9 error:0];

        double v28 = [RAPRecord alloc];
        uint64_t v26 = [v4 reportId];
        id v10 = [v4 type];
        id v11 = [v4 summary];
        uint64_t v12 = [v7 title];
        id v13 = [v4 createTime];
        uint64_t v14 = [v4 countryCode];
        LOWORD(v_Block_object_dispose(&STACK[0x238], 8) = +[RAPRecordReportStatus typeFromMapsSyncStatus:](RAPRecordReportStatus, "typeFromMapsSyncStatus:", [v4 status]);
        uint64_t v15 = [v4 communityID];
        id v16 = [v15 communityIdentifier];
        LOWORD(v21) = v8;
        id v17 = [(RAPRecord *)v28 initWithReportID:v26 reportType:v10 reportSummary:v11 reportTitle:v12 dateOfReportCreation:v13 countryCodeUponCreation:v14 reportStatus:v21 contentData:v7 communityIdentifier:v16 rapResponse:v29];

        a1 = v24;
        [*(id *)(*(void *)(*(void *)(v24 + 40) + 8) + 40) addObject:v17];

        uint64_t v3 = v27 + 1;
      }
      while (v25 != (id)(v27 + 1));
      id v25 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
    }
    while (v25);
  }
  __int16 v18 = *(void **)(a1 + 32);
  if (v18)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1007FC014;
    block[3] = &unk_1012E79E8;
    id v19 = v18;
    uint64_t v20 = *(void *)(a1 + 40);
    id v31 = v19;
    uint64_t v32 = v20;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_1007FC014(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1007FC19C(void *a1)
{
  id v2 = objc_alloc_init((Class)MSRAPRecordRequest);
  uint64_t v49 = a1[4];
  uint64_t v3 = +[NSArray arrayWithObjects:&v49 count:1];
  uint64_t v4 = +[MapsSyncQueryPredicate queryPredicateWithFormat:@"reportId == %@" argumentArray:v3];

  id v29 = (void *)v4;
  uint64_t v45 = 0;
  id v30 = v2;
  id v28 = [objc_alloc((Class)_TtC8MapsSync20MapsSyncQueryOptions) initWithPredicate:v4 sortDescriptors:0 range:0];
  uint64_t v5 = [v2 fetchSyncWithOptions:error:];
  id v6 = 0;
  if (v6)
  {
    id v7 = sub_100576FF4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)id buf = 138412290;
      id v48 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to fetch matching synced RAP records with error %@", buf, 0xCu);
    }
  }
  uint64_t v27 = v6;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id obj = v5;
  id v34 = [obj countByEnumeratingWithState:&v41 objects:v46 count:16];
  if (v34)
  {
    uint64_t v32 = *(void *)v42;
    long long v33 = a1;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v42 != v32) {
          objc_enumerationMutation(obj);
        }
        id v9 = *(void **)(*((void *)&v41 + 1) + 8 * (void)v8);
        uint64_t v10 = objc_opt_class();
        id v11 = [v9 contentData];
        uint64_t v12 = +[NSKeyedUnarchiver unarchivedObjectOfClass:v10 fromData:v11 error:0];

        uint64_t v13 = objc_opt_class();
        uint64_t v14 = [v9 rapResponse];
        long long v36 = +[NSKeyedUnarchiver unarchivedObjectOfClass:v13 fromData:v14 error:0];

        long long v35 = [RAPRecord alloc];
        uint64_t v15 = [v9 reportId];
        id v16 = [v9 type];
        id v17 = [v9 summary];
        __int16 v18 = v12;
        uint64_t v37 = v12;
        id v19 = [v12 title];
        uint64_t v20 = [v9 createTime];
        uint64_t v21 = [v9 countryCode];
        LOWORD(v26) = +[RAPRecordReportStatus typeFromMapsSyncStatus:](RAPRecordReportStatus, "typeFromMapsSyncStatus:", [v9 status]);
        id v22 = [(RAPRecord *)v35 initWithReportID:v15 reportType:v16 reportSummary:v17 reportTitle:v19 dateOfReportCreation:v20 countryCodeUponCreation:v21 reportStatus:v26 contentData:v18 communityIdentifier:0 rapResponse:v36];

        -[RAPRecord setClientRevision:](v22, "setClientRevision:", [v9 clientRevision]);
        a1 = v33;
        [*(id *)(*(void *)(v33[6] + 8) + 40) addObject:v22];

        uint64_t v8 = (char *)v8 + 1;
      }
      while (v34 != v8);
      id v34 = [obj countByEnumeratingWithState:&v41 objects:v46 count:16];
    }
    while (v34);
  }

  uint64_t v23 = (void *)a1[5];
  if (v23)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1007FC5E0;
    block[3] = &unk_1012E79E8;
    id v24 = v23;
    uint64_t v25 = a1[6];
    id v39 = v24;
    uint64_t v40 = v25;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_1007FC5E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1007FC6F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    if (v4)
    {
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      _DWORD v5[2] = sub_1007FC7A4;
      void v5[3] = &unk_1012E5F78;
      id v7 = v4;
      id v6 = v3;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
    }
  }
}

uint64_t sub_1007FC7A4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1007FC860(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  if (v3)
  {
    if (v4)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1007FC980;
      block[3] = &unk_1012E5F78;
      uint64_t v5 = &v10;
      id v10 = v4;
      id v9 = v3;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

LABEL_6:
    }
  }
  else if (v4)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1007FC994;
    void v6[3] = &unk_1012E6EA8;
    uint64_t v5 = &v7;
    id v7 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
    goto LABEL_6;
  }
}

uint64_t sub_1007FC980(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1007FC994(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1007FCABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1007FCAD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v20;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v20 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v19 + 1) + 8 * (void)v7);
        id v9 = [TrafficIncidentReport alloc];
        id v10 = [v8 type];
        id v11 = [v8 countryCode];
        uint64_t v12 = [(TrafficIncidentReport *)v9 initWithType:v10 countryCodeUponCreation:v11];

        [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v12];
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }
    while (v5);
  }
  uint64_t v13 = *(void **)(a1 + 32);
  if (v13)
  {
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    void v16[2] = sub_1007FCC98;
    v16[3] = &unk_1012E79E8;
    id v14 = v13;
    uint64_t v15 = *(void *)(a1 + 40);
    id v17 = v14;
    uint64_t v18 = v15;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v16);
  }
}

void sub_1007FCC98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1007FCD58(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_100011FD4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error adding traffic incident report to MapsSync cache: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1007FD4EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007FD508(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && a2)
  {
    id v5 = WeakRetained;
    [WeakRetained _presentAddPhotosControllerWithSourceType:*(void *)(a1 + 40)];
    id WeakRetained = v5;
  }
}

void sub_1007FDCC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 80);
  *(void *)(v1 + 80) = 0;
}

void sub_1007FDE8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1007FDEC4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _photoCarouselControllerRequestsPhotoCreditEditor];
    id WeakRetained = v2;
  }
}

void sub_1007FDF08(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    [WeakRetained _requestAddingNewPhotoWithSourceType:a2];
    id WeakRetained = v4;
  }
}

void sub_1007FE458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007FE474(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    _DWORD v5[2] = sub_1007FE50C;
    void v5[3] = &unk_1012E6300;
    char v6 = a2;
    void v5[4] = WeakRetained;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
  }
}

id *sub_1007FE50C(id *result)
{
  if (*((unsigned char *)result + 40)) {
    return (id *)[result[4] _removeAddPhotosRowItemIfNeeded];
  }
  return result;
}

MapsAppTest *__cdecl sub_1007FE8B8(id a1, NSString *a2, MapsAppTesting *a3, NSDictionary *a4)
{
  char v6 = a2;
  id v7 = a3;
  uint64_t v8 = a4;
  id v9 = v8;
  if (!v8
    || ([(NSDictionary *)v8 valueForKey:@"testType"],
        (id v10 = (NSString *)objc_claimAutoreleasedReturnValue()) == 0))
  {
    id v10 = v6;
  }
  if ([(NSString *)v6 rangeOfString:@"rpt"])
  {
    if ([(NSString *)v10 rangeOfString:@"pan"]
      && [(NSString *)v10 rangeOfString:@"zoom"])
    {
      if ([(NSString *)v10 rangeOfString:@"circle"])
      {
        if ([(NSString *)v10 rangeOfString:@"jump"])
        {
          if ([(NSString *)v10 rangeOfString:@"step"])
          {
            if ([(NSString *)v10 rangeOfString:@"static"])
            {
              id v11 = 0;
              goto LABEL_15;
            }
            uint64_t v12 = off_1012D3E20;
          }
          else
          {
            uint64_t v12 = off_1012D3E28;
          }
        }
        else
        {
          uint64_t v12 = off_1012D3D40;
        }
      }
      else
      {
        uint64_t v12 = off_1012D3CC8;
      }
    }
    else
    {
      uint64_t v12 = off_1012D3D58;
    }
  }
  else
  {
    uint64_t v12 = off_1012D3DA0;
  }
  id v11 = [objc_alloc(*v12) initWithApplication:v7 testName:v6 options:v9];
LABEL_15:

  return (MapsAppTest *)v11;
}

void sub_1007FF148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1007FF188(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setViewMode:v1];

  id v4 = objc_loadWeakRetained(v2);
  [v4 setupMenuActions];
}

uint64_t sub_10080055C(int a1)
{
  if ((a1 - 1) > 0x57) {
    return 0;
  }
  else {
    return qword_100F722A0[a1 - 1];
  }
}

id sub_100803108(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

id sub_1008032B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

BOOL sub_10080423C(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  NSClassFromString(@"_UIDebugColorBoundsView");
  char isKindOfClass = objc_opt_isKindOfClass();

  return (isKindOfClass & 1) == 0;
}

void sub_100804D80(uint64_t a1)
{
  id v2 = sub_100577B3C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(__CFString **)(a1 + 32);
    id v4 = [(__CFString *)v3 primaryManeuver];
    id v5 = [*(id *)(a1 + 32) primaryManeuver];
    char v6 = [v5 guidance];
    id v7 = [v6 signID];
    *(_DWORD *)id buf = 134218498;
    long long v142 = v3;
    __int16 v143 = 2112;
    double v144 = v4;
    __int16 v145 = 2112;
    double v146 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%p: prepare section of transition from primary sign %@ (%@)", buf, 0x20u);
  }
  uint64_t v8 = [*(id *)(a1 + 32) laneGuidanceInfo];
  unsigned int v9 = [v8 isForMidStep];

  if (v9)
  {
    id v10 = [*(id *)(a1 + 32) laneGuidanceInfoID];
    id v11 = [*(id *)(a1 + 32) laneGuidanceInfo];
    uint64_t v12 = [v11 laneInfoId];
    unsigned int v13 = +[MNComparison isValue:v10 equalTo:v12];

    if (v13)
    {
      id v14 = [*(id *)(a1 + 32) primaryManeuver];
      uint64_t v15 = [*(id *)(a1 + 32) laneGuidanceInfo];
      [v14 updateLaneGuidance:v15];
    }
  }
  uint64_t v16 = [*(id *)(a1 + 32) junctionViewController];
  if (v16)
  {
    id v17 = (void *)v16;
    uint64_t v18 = [*(id *)(a1 + 32) junctionViewInfoID];
    long long v19 = [*(id *)(a1 + 32) junctionViewInfo];
    long long v20 = [v19 junctionViewId];
    unsigned __int8 v21 = +[MNComparison isValue:v18 equalTo:v20];

    if ((v21 & 1) == 0)
    {
      long long v22 = [*(id *)(a1 + 32) junctionViewInfo];

      if (v22)
      {
        uint64_t v23 = [*(id *)(a1 + 32) junctionViewInfo];
        id v24 = [v23 junctionViewId];
        [*(id *)(a1 + 32) setJunctionViewInfoID:v24];

        uint64_t v25 = [*(id *)(a1 + 32) junctionViewInfo];
        uint64_t v26 = [*(id *)(a1 + 32) junctionViewController];
        [v26 setJunctionViewInfo:v25];

        uint64_t v27 = *(void **)(a1 + 40);
      }
      else
      {
        uint64_t v27 = *(void **)(a1 + 48);
      }
      id v28 = [*(id *)(a1 + 32) junctionViewConstraints];
      [v27 addObjectsFromArray:v28];
    }
  }
  id v29 = [*(id *)(a1 + 32) primaryGuidance];
  id v30 = [*(id *)(a1 + 32) primaryManeuver];
  id v31 = [v30 guidance];

  if (!v29) {
    goto LABEL_18;
  }
  if (!v31) {
    goto LABEL_18;
  }
  if (v29 == v31) {
    goto LABEL_18;
  }
  uint64_t v32 = [v29 signID];
  long long v33 = [v31 signID];
  unint64_t v34 = v32;
  unint64_t v35 = v33;
  if (!(v34 | v35)
    || (long long v36 = (void *)v35,
        unsigned __int8 v37 = [(id)v34 isEqual:v35],
        v36,
        (id)v34,
        v36,
        (id)v34,
        (v37 & 1) != 0))
  {
    int v38 = 1;
  }
  else
  {
LABEL_18:
    id v39 = [*(id *)(a1 + 32) laneGuidanceInfoID];
    uint64_t v40 = [*(id *)(a1 + 32) laneGuidanceInfo];
    long long v41 = [v40 laneInfoId];
    if (+[MNComparison isValue:v39 equalTo:v41])
    {
      long long v42 = [*(id *)(a1 + 32) primaryGuidanceSignID];
      [*(id *)(a1 + 32) primaryGuidance];
      long long v43 = v138 = v29;
      [v43 signID];
      unsigned int v44 = v9;
      v46 = uint64_t v45 = v31;
      unsigned __int8 v47 = +[MNComparison isValue:v42 equalTo:v46];

      id v31 = v45;
      unsigned int v9 = v44;

      id v29 = v138;
      if (v47)
      {
        if (!v44) {
          goto LABEL_51;
        }
LABEL_21:
        id v48 = [*(id *)(a1 + 32) junctionViewInfo];
        if (v48)
        {
LABEL_79:

          goto LABEL_80;
        }
        uint64_t v49 = [*(id *)(a1 + 32) secondaryGuidanceSignID];
        id v48 = [*(id *)(a1 + 32) primaryGuidance];
        double v50 = [(CarManeuverView *)v48 signID];
        unsigned __int8 v51 = +[MNComparison isValue:v49 equalTo:v50];

        if (v51) {
          goto LABEL_80;
        }
        int v52 = [CarManeuverView alloc];
        long long v53 = [*(id *)(a1 + 32) primaryGuidance];
        id v48 = [-CarManeuverView initWithGuidance:variant:destination:layoutType:sizeDataSource:](v52, "initWithGuidance:variant:destination:layoutType:sizeDataSource:", v53, 2, [*(id *)(a1 + 32) destination], [*(id *)(a1 + 32) layoutType], *(void *)(a1 + 32));

        id v54 = sub_100577B3C();
        if (!os_log_type_enabled(v54, OS_LOG_TYPE_INFO)) {
          goto LABEL_69;
        }
        id v55 = *(id *)(a1 + 32);
        if (!v55)
        {
          CFStringRef v60 = @"<nil>";
          goto LABEL_68;
        }
        CGRect v56 = (objc_class *)objc_opt_class();
        CGRect v57 = NSStringFromClass(v56);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v58 = [v55 performSelector:"accessibilityIdentifier"];
          __int16 v59 = v58;
          if (v58 && ![v58 isEqualToString:v57])
          {
            CFStringRef v60 = +[NSString stringWithFormat:@"%@<%p, %@>", v57, v55, v59];

            goto LABEL_30;
          }
        }
        CFStringRef v60 = +[NSString stringWithFormat:@"%@<%p>", v57, v55];
LABEL_30:

LABEL_68:
        *(_DWORD *)id buf = 138543362;
        long long v142 = v60;
        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_INFO, "[%{public}@] Reloading maneuver for midStep change (incoming)", buf, 0xCu);

LABEL_69:
        double v112 = +[NavigationFeedbackCollector sharedFeedbackCollector];
        [(CarManeuverView *)v48 setAnalyticsDelegate:v112];

        double v113 = [*(id *)(a1 + 32) secondaryManeuverConstraints];

        if (v113)
        {
          uint64_t v114 = *(void **)(a1 + 48);
          double v115 = [*(id *)(a1 + 32) secondaryManeuverConstraints];
          [v114 addObjectsFromArray:v115];
        }
        [*(id *)(a1 + 32) _replaceSecondaryViewManeuver:v48 initialConstraints:*(void *)(a1 + 56) finalConstraints:*(void *)(a1 + 40)];
        double v116 = [*(id *)(a1 + 32) primaryGuidance];
        goto LABEL_78;
      }
    }
    else
    {
    }
    int v38 = 0;
  }
  __int16 v61 = [CarManeuverView alloc];
  long long v62 = [*(id *)(a1 + 32) primaryGuidance];
  long long v63 = -[CarManeuverView initWithGuidance:variant:destination:layoutType:sizeDataSource:](v61, "initWithGuidance:variant:destination:layoutType:sizeDataSource:", v62, [*(id *)(a1 + 32) _primaryManeuverViewVariant], [*(id *)(a1 + 32) destination], [*(id *)(a1 + 32) layoutType], [*(id *)(a1 + 32) sizeDataSource]);

  double v64 = +[NavigationFeedbackCollector sharedFeedbackCollector];
  [(CarManeuverView *)v63 setAnalyticsDelegate:v64];

  id v65 = [*(id *)(a1 + 32) laneGuidanceInfo];

  if (v65)
  {
    id v66 = [*(id *)(a1 + 32) laneGuidanceInfo];
    [(CarManeuverView *)v63 showLaneGuidance:v66];
  }
  id v67 = sub_100577B3C();
  if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
  {
    id v68 = *(id *)(a1 + 32);
    double v137 = v31;
    id v139 = v29;
    int v135 = v38;
    unsigned int v136 = v9;
    if (!v68)
    {
      double v73 = @"<nil>";
      goto LABEL_44;
    }
    double v69 = (objc_class *)objc_opt_class();
    __int16 v70 = NSStringFromClass(v69);
    if (objc_opt_respondsToSelector())
    {
      unsigned __int8 v71 = [v68 performSelector:"accessibilityIdentifier"];
      __int16 v72 = v71;
      if (v71 && ![v71 isEqualToString:v70])
      {
        double v73 = +[NSString stringWithFormat:@"%@<%p, %@>", v70, v68, v72];

        goto LABEL_42;
      }
    }
    double v73 = +[NSString stringWithFormat:@"%@<%p>", v70, v68];
LABEL_42:

LABEL_44:
    double v74 = *(void **)(a1 + 32);
    double v75 = v73;
    double v76 = [v74 primaryManeuver];
    double v77 = [v76 guidance];
    v78 = [v77 signID];
    double v79 = [*(id *)(a1 + 32) laneGuidanceInfo];

    double v80 = [v79 laneInfoId];
    *(_DWORD *)id buf = 138544130;
    long long v142 = v73;
    __int16 v143 = 2114;
    double v144 = v78;
    __int16 v145 = 2114;
    double v146 = v80;
    __int16 v147 = 1024;
    int v148 = v135;
    _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_INFO, "[%{public}@] Reloading maneuver for primary(%{public}@)/lane(%{public}@) ID change(s), theyAreTheSameIDButDifferentPointers: %d", buf, 0x26u);

    id v31 = v137;
    id v29 = v139;
    unsigned int v9 = v136;
  }

  double v81 = [*(id *)(a1 + 32) primaryManeuverConstraints];

  if (v81)
  {
    double v82 = *(void **)(a1 + 48);
    double v83 = [*(id *)(a1 + 32) primaryManeuverConstraints];
    [v82 addObjectsFromArray:v83];
  }
  double v84 = [*(id *)(a1 + 32) window];
  if (v84)
  {
    double v85 = [*(id *)(a1 + 32) primaryManeuver];
    BOOL v86 = v85 != 0;
  }
  else
  {
    BOOL v86 = 0;
  }

  [*(id *)(a1 + 32) _replacePrimaryViewManeuver:v63 initialConstraints:*(void *)(a1 + 56) finalConstraints:*(void *)(a1 + 40) slide:v86];
  [*(id *)(a1 + 32) setNextPrimaryManeuver:v63];
  double v87 = [*(id *)(a1 + 32) primaryGuidance];
  double v88 = [v87 signID];
  [*(id *)(a1 + 32) setPrimaryGuidanceSignID:v88];

  double v89 = [*(id *)(a1 + 32) laneGuidanceInfo];
  double v90 = [v89 laneInfoId];
  [*(id *)(a1 + 32) setLaneGuidanceInfoID:v90];

  double v91 = [*(id *)(a1 + 32) junctionViewInfo];
  double v92 = [v91 junctionViewId];
  [*(id *)(a1 + 32) setJunctionViewInfoID:v92];

  if (v9) {
    goto LABEL_21;
  }
LABEL_51:
  id v48 = [*(id *)(a1 + 32) secondaryGuidanceSignID];
  double v93 = [*(id *)(a1 + 32) secondaryGuidance];
  double v94 = [v93 signID];
  if ((+[MNComparison isValue:v48 equalTo:v94] & 1) == 0)
  {

    goto LABEL_55;
  }
  double v95 = [*(id *)(a1 + 32) junctionViewInfoID];
  double v96 = [*(id *)(a1 + 32) junctionViewInfo];
  double v97 = [v96 junctionViewId];
  unsigned __int8 v98 = +[MNComparison isValue:v95 equalTo:v97];

  if ((v98 & 1) == 0)
  {
LABEL_55:
    uint64_t v99 = [*(id *)(a1 + 32) secondaryGuidance];
    if (!v99
      || (double v100 = (void *)v99,
          [*(id *)(a1 + 32) junctionViewInfo],
          double v101 = objc_claimAutoreleasedReturnValue(),
          v101,
          v100,
          v101))
    {
      id v48 = 0;
LABEL_75:
      v117 = [*(id *)(a1 + 32) secondaryManeuverConstraints];

      if (v117)
      {
        double v118 = *(void **)(a1 + 48);
        double v119 = [*(id *)(a1 + 32) secondaryManeuverConstraints];
        [v118 addObjectsFromArray:v119];
      }
      [*(id *)(a1 + 32) _replaceSecondaryViewManeuver:v48 initialConstraints:*(void *)(a1 + 56) finalConstraints:*(void *)(a1 + 40)];
      double v116 = [*(id *)(a1 + 32) secondaryGuidance];
LABEL_78:
      double v120 = v116;
      double v121 = [v116 signID];
      [*(id *)(a1 + 32) setSecondaryGuidanceSignID:v121];

      [*(id *)(a1 + 32) setNextSecondaryManeuver:v48];
      goto LABEL_79;
    }
    double v102 = [CarManeuverView alloc];
    double v103 = [*(id *)(a1 + 32) secondaryGuidance];
    id v48 = -[CarManeuverView initWithGuidance:variant:destination:layoutType:sizeDataSource:](v102, "initWithGuidance:variant:destination:layoutType:sizeDataSource:", v103, 2, [*(id *)(a1 + 32) destination], objc_msgSend(*(id *)(a1 + 32), "layoutType"), *(void *)(a1 + 32));

    double v104 = +[NavigationFeedbackCollector sharedFeedbackCollector];
    [(CarManeuverView *)v48 setAnalyticsDelegate:v104];

    double v105 = sub_100577B3C();
    if (!os_log_type_enabled(v105, OS_LOG_TYPE_INFO))
    {
LABEL_74:

      goto LABEL_75;
    }
    id v106 = *(id *)(a1 + 32);
    if (!v106)
    {
      uint64_t v111 = @"<nil>";
      goto LABEL_73;
    }
    double v107 = (objc_class *)objc_opt_class();
    double v108 = NSStringFromClass(v107);
    if (objc_opt_respondsToSelector())
    {
      double v109 = [v106 performSelector:"accessibilityIdentifier"];
      double v110 = v109;
      if (v109 && ![v109 isEqualToString:v108])
      {
        uint64_t v111 = +[NSString stringWithFormat:@"%@<%p, %@>", v108, v106, v110];

        goto LABEL_65;
      }
    }
    uint64_t v111 = +[NSString stringWithFormat:@"%@<%p>", v108, v106];
LABEL_65:

LABEL_73:
    *(_DWORD *)id buf = 138543362;
    long long v142 = v111;
    _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_INFO, "[%{public}@] Reloading maneuver for midStep change (outgoing)", buf, 0xCu);

    goto LABEL_74;
  }
LABEL_80:
  if ([*(id *)(a1 + 32) layoutType] == (id)1)
  {
    double v122 = [*(id *)(a1 + 32) secondaryManeuverView];
    double v123 = [*(id *)(a1 + 32) primaryManeuverView];
    [v122 alignSubviewsTo:v123];
  }
  double v124 = [*(id *)(a1 + 32) secondaryManeuver];
  if (v124)
  {
    id v48 = [*(id *)(a1 + 32) junctionViewInfo];
    BOOL v125 = v48 != 0;
  }
  else
  {
    BOOL v125 = 0;
  }
  uint64_t v126 = [*(id *)(a1 + 32) primaryManeuver];
  [v126 setSecondarySignVisible:v125];

  if (v124) {
  double v127 = [*(id *)(a1 + 32) junctionViewInfo];
  }
  if (v127
    || ([*(id *)(a1 + 32) secondaryManeuverView],
        (id v48 = (CarManeuverView *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    double v128 = [*(id *)(a1 + 32) primaryViewOnlyConstraints];
    uint64_t v129 = [v128 firstObject];
    unsigned int v130 = [v129 isActive];

    if (v127)
    {

      if (v130)
      {
LABEL_91:
        double v131 = [*(id *)(a1 + 32) primaryViewOnlyConstraints];
        +[NSLayoutConstraint deactivateConstraints:v131];
        goto LABEL_97;
      }
    }
    else
    {

      if (v130) {
        goto LABEL_91;
      }
    }
  }
  double v131 = [*(id *)(a1 + 32) junctionViewInfo];
  if (!v131)
  {
    double v131 = [*(id *)(a1 + 32) secondaryManeuverView];
    if (!v131)
    {
      v132 = [*(id *)(a1 + 32) primaryViewOnlyConstraints];
      double v133 = [v132 firstObject];
      unsigned __int8 v134 = [v133 isActive];

      if (v134) {
        goto LABEL_98;
      }
      double v131 = [*(id *)(a1 + 32) primaryViewOnlyConstraints];
      +[NSLayoutConstraint activateConstraints:v131];
    }
  }
LABEL_97:

LABEL_98:
  if ([*(id *)(a1 + 56) count])
  {
    +[NSLayoutConstraint activateConstraints:*(void *)(a1 + 56)];
    v140[0] = _NSConcreteStackBlock;
    v140[1] = 3221225472;
    v140[2] = sub_100805D18;
    v140[3] = &unk_1012E5D08;
    v140[4] = *(void *)(a1 + 32);
    +[UIView performWithoutAnimation:v140];
  }
}

id sub_100805D18(uint64_t a1)
{
  [*(id *)(a1 + 32) setNeedsLayout];
  id v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

id sub_100805D54(uint64_t a1)
{
  id v2 = sub_100577B3C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 primaryManeuver];
    uint64_t v12 = [*(id *)(a1 + 32) primaryManeuver];
    id v5 = [v12 guidance];
    char v6 = [v5 signID];
    id v7 = [*(id *)(a1 + 32) nextPrimaryManeuver];
    uint64_t v8 = [*(id *)(a1 + 32) nextPrimaryManeuver];
    unsigned int v9 = [v8 guidance];
    id v10 = [v9 signID];
    *(_DWORD *)id buf = 134219010;
    id v14 = v3;
    __int16 v15 = 2112;
    uint64_t v16 = v4;
    __int16 v17 = 2112;
    uint64_t v18 = v6;
    __int16 v19 = 2112;
    long long v20 = v7;
    __int16 v21 = 2112;
    long long v22 = v10;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%p: animate section of transition from primary sign %@ (%@) to %@ (%@)", buf, 0x34u);
  }
  +[NSLayoutConstraint deactivateConstraints:*(void *)(a1 + 40)];
  +[NSLayoutConstraint deactivateConstraints:*(void *)(a1 + 48)];
  return +[NSLayoutConstraint activateConstraints:*(void *)(a1 + 56)];
}

id sub_100805EFC(uint64_t a1)
{
  uint64_t v3 = sub_100577B3C();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = [v4 primaryManeuver];
    id v31 = [*(id *)(a1 + 32) primaryManeuver];
    char v6 = [v31 guidance];
    id v7 = [v6 signID];
    uint64_t v8 = [*(id *)(a1 + 32) nextPrimaryManeuver];
    unsigned int v9 = [*(id *)(a1 + 32) nextPrimaryManeuver];
    id v10 = [v9 guidance];
    uint64_t v1 = [v10 signID];
    *(_DWORD *)id buf = 134219010;
    long long v33 = (const char *)v4;
    __int16 v34 = 2112;
    unint64_t v35 = v5;
    __int16 v36 = 2112;
    unsigned __int8 v37 = v7;
    __int16 v38 = 2112;
    id v39 = v8;
    __int16 v40 = 2112;
    long long v41 = v1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%p: Completing transition from primary sign %@ (%@) to %@ (%@)", buf, 0x34u);
  }
  id v11 = [*(id *)(a1 + 32) nextPrimaryManeuver];

  if (v11)
  {
    uint64_t v12 = [*(id *)(a1 + 32) primaryManeuver];
    uint64_t v1 = [*(id *)(a1 + 32) nextPrimaryManeuver];

    if (v12 == v1)
    {
      unsigned int v13 = sub_1005762E4();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)id buf = 136315650;
        long long v33 = "-[CarNavigationGuidanceSign updateWithGroupAnimation:]_block_invoke";
        __int16 v34 = 2080;
        unint64_t v35 = "CarNavigationGuidanceSign.m";
        __int16 v36 = 1024;
        LODWORD(v37) = 840;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
      }

      if (sub_100BB36BC())
      {
        id v14 = sub_1005762E4();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          uint64_t v1 = +[NSThread callStackSymbols];
          *(_DWORD *)id buf = 138412290;
          long long v33 = (const char *)v1;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
        }
      }
      __int16 v15 = sub_100577B3C();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
      {
        uint64_t v16 = *(const char **)(a1 + 32);
        *(_DWORD *)id buf = 134217984;
        long long v33 = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "%p: It shouldn't be possible to switch between the same instance of the nav sign", buf, 0xCu);
      }
    }
  }
  uint64_t v17 = [*(id *)(a1 + 32) nextPrimaryManeuver];
  if (!v17) {
    goto LABEL_17;
  }
  uint64_t v18 = (void *)v17;
  uint64_t v1 = [*(id *)(a1 + 32) nextPrimaryManeuver];
  __int16 v19 = [*(id *)(a1 + 32) primaryManeuver];

  if (v1 == v19)
  {
LABEL_17:
    int v22 = 0;
  }
  else
  {
    long long v20 = [*(id *)(a1 + 32) primaryManeuver];
    [v20 removeFromSuperview];

    __int16 v21 = [*(id *)(a1 + 32) nextPrimaryManeuver];
    [*(id *)(a1 + 32) setPrimaryManeuver:v21];

    int v22 = 1;
  }
  uint64_t v23 = [*(id *)(a1 + 32) nextSecondaryManeuver];
  if (v23)
  {
    uint64_t v1 = [*(id *)(a1 + 32) nextSecondaryManeuver];
    id v24 = [*(id *)(a1 + 32) secondaryManeuver];
    if (v1 != v24)
    {

      goto LABEL_27;
    }
  }
  uint64_t v25 = [*(id *)(a1 + 32) secondaryGuidanceSignID];
  if (v25)
  {

    if (!v23) {
      goto LABEL_29;
    }

    goto LABEL_28;
  }
  uint64_t v26 = [*(id *)(a1 + 32) secondaryManeuver];

  if (v23)
  {
  }
  if (v26)
  {
LABEL_27:
    uint64_t v27 = [*(id *)(a1 + 32) secondaryManeuver];
    [v27 removeFromSuperview];

    uint64_t v23 = [*(id *)(a1 + 32) nextSecondaryManeuver];
    [*(id *)(a1 + 32) setSecondaryManeuver:v23];
    int v22 = 1;
LABEL_28:
  }
LABEL_29:
  id v28 = [*(id *)(a1 + 32) junctionViewInfo];
  id v29 = [*(id *)(a1 + 32) junctionView];
  [v29 setHidden:v28 == 0];

  [*(id *)(a1 + 32) setNextPrimaryManeuver:0];
  id result = [*(id *)(a1 + 32) setNextSecondaryManeuver:0];
  if (v22)
  {
    [*(id *)(a1 + 32) setNeedsLayout];
    return [*(id *)(a1 + 32) layoutIfNeeded];
  }
  return result;
}

id sub_100808450()
{
  if (qword_10160FAA0 != -1) {
    dispatch_once(&qword_10160FAA0, &stru_1012F9BA8);
  }
  v0 = (void *)qword_10160FA98;

  return v0;
}

void sub_100808C2C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionSunsetSunriseMonitor");
  id v2 = (void *)qword_10160FA98;
  qword_10160FA98 = (uint64_t)v1;
}

void sub_10080A3DC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained;
    [WeakRetained[7] stopAnimating];
    [v3[1] replaceCurrentItemWithPlayerItem:*(void *)(a1 + 32) preserveCurrentTimestamp:0];
    id WeakRetained = v3;
  }
}

void sub_10080A684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10080A6AC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v7 || ![v6 length])
    {
      unsigned int v9 = sub_100021338();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        id v10 = [v6 length];
        id v11 = [v7 localizedDescription];
        int v14 = 134218242;
        id v15 = v10;
        __int16 v16 = 2112;
        uint64_t v17 = v11;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Data Length: %lu. Error download asset data: %@", (uint8_t *)&v14, 0x16u);
      }
      id v12 = [objc_alloc((Class)NSDataAsset) initWithName:*(void *)(a1 + 32)];
      unsigned int v13 = [v12 data];
      [WeakRetained _showMovieWithData:v13];
    }
    else
    {
      [WeakRetained _showMovieWithData:v6];
    }
  }
}

void sub_10080A8F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10080A914(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  unsigned int v9 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v8)
    {
      id v11 = sub_100021338();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        id v12 = [v8 localizedDescription];
        *(_DWORD *)id buf = 138412290;
        uint64_t v18 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
LABEL_10:

      [WeakRetained[7] stopAnimating];
      goto LABEL_11;
    }
    if (!v7 || ([v7 size], v13 <= 0.0))
    {
      id v11 = sub_100021338();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Image is nil or has no height", buf, 2u);
      }
      goto LABEL_10;
    }
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_10080AAFC;
    void v14[3] = &unk_1012E6690;
    objc_copyWeak(&v16, v9);
    id v15 = v7;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

    objc_destroyWeak(&v16);
  }
LABEL_11:
}

void sub_10080AAFC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[3] setImage:*(void *)(a1 + 32)];
    [*(id *)(a1 + 32) size];
    double v5 = v4;
    [*(id *)(a1 + 32) size];
    double v7 = v5 / v6;
    id v8 = [v3[3] heightAnchor];
    unsigned int v9 = [v3[3] widthAnchor];
    id v10 = [v8 constraintEqualToAnchor:v9 multiplier:1.0 / v7];
    id v12 = v10;
    id v11 = +[NSArray arrayWithObjects:&v12 count:1];
    +[NSLayoutConstraint activateConstraints:v11];

    [v3[7] stopAnimating];
  }
}

void sub_10080B0A8(uint64_t a1, void *a2)
{
  id v5 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  uint64_t v3 = *(void **)(a1 + 32);
  double v4 = [*(id *)(a1 + 40) updateIdentifier];
  LODWORD(v3) = [v3 isEqual:v4];

  if (v3) {
    [*(id *)(a1 + 40) setImage:v5];
  }
}

void sub_10080B134(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[NSThread isMainThread])
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    id v4[2] = sub_10080B208;
    void v4[3] = &unk_1012E5F78;
    id v6 = *(id *)(a1 + 32);
    id v5 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
  }
}

uint64_t sub_10080B208(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

double sub_10080BD68(uint64_t a1, void *a2)
{
  if ([a2 row] == (id)(*(void *)(a1 + 32) - 1)) {
    return _UICollectionViewListSectionSeparatorInsetHidden[0];
  }
  else {
    return _UICollectionViewListLayoutSectionAutomaticDimension;
  }
}

void sub_10080BF34(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [*(id *)(a1 + 32) uniqueIdentifier];
  unsigned int v5 = [v4 isEqualToString:*(void *)(a1 + 40)];

  if (v5)
  {
    if (+[NSThread isMainThread])
    {
      [*(id *)(a1 + 32) setThumbnailImage:v3];
    }
    else
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_10080C02C;
      void v6[3] = &unk_1012E5D58;
      id v7 = *(id *)(a1 + 32);
      id v8 = v3;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
    }
  }
}

id sub_10080C02C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setThumbnailImage:*(void *)(a1 + 40)];
}

void sub_10080CB28(id a1)
{
  id v1 = objc_alloc_init((Class)NSNumberFormatter);
  id v2 = (void *)qword_10160FAA8;
  qword_10160FAA8 = (uint64_t)v1;

  [(id)qword_10160FAA8 setNumberStyle:0];
  id v3 = +[NSLocale localeWithLocaleIdentifier:@"en_US"];
  [(id)qword_10160FAA8 setLocale:v3];
}

id sub_10080D3B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyObserversItemsDidChange];
}

void sub_10080DDC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10080DDE0(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (([v4 hasEnteredLookAround] & 1) == 0 && *(void *)(a1 + 32)) {
    [v4 enterLookAroundWithEntryPoint:];
  }
  [v4 setDelegate:WeakRetained];
}

id sub_10080E528(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dataCoordinator];
  [v2 setNeedsMapViewSynchronization];

  *(unsigned char *)(*(void *)(a1 + 32) + 505) = 1;
  id v3 = *(void **)(a1 + 32);

  return [v3 _updateLayoutWithCurrentValue];
}

__n128 sub_10080E588(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dataCoordinator];
  [v2 resume];

  [*(id *)(a1 + 32) _updatePIPLayout];
  __n128 result = (__n128)CGSizeZero;
  *(CGSize *)(*(void *)(a1 + 32) + 52_Block_object_dispose(&STACK[0x238], 8) = CGSizeZero;
  *(unsigned char *)(*(void *)(a1 + 32) + 505) = 0;
  return result;
}

id sub_10080E700(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dataCoordinator];
  [v2 setNeedsMapViewSynchronization];

  *(unsigned char *)(*(void *)(a1 + 32) + 505) = 1;
  id v3 = *(void **)(a1 + 32);

  return [v3 _updateLayoutWithCurrentValue];
}

id sub_10080E760(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dataCoordinator];
  [v2 resume];

  id result = [*(id *)(a1 + 32) _updatePIPLayout];
  *(unsigned char *)(*(void *)(a1 + 32) + 505) = 0;
  return result;
}

id sub_100810090(id *a1)
{
  id v2 = (char *)a1[4];
  id v3 = (void *)*((void *)v2 + 54);
  if (v3)
  {
    id v4 = [v3 window];

    if (v4)
    {
      unsigned int v5 = [a1[5] window];
      [*((id *)a1[4] + 54) bounds];
      [v5 convertRect:*((void *)a1[4] + 54) fromView:];
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;

      v29.origin.double x = v7;
      v29.origin.double y = v9;
      v29.size.double width = v11;
      v29.size.double height = v13;
      double v14 = 1.0;
      if (!CGRectEqualToRect(v29, *(CGRect *)((char *)a1[4] + 600)))
      {
        id v15 = (CGFloat *)((char *)a1[4] + 600);
        CGFloat *v15 = v7;
        v15[1] = v9;
        void v15[2] = v11;
        void v15[3] = v13;
      }
    }
    else
    {
      __int16 v19 = (char *)a1[4];
      long long v20 = (CGPoint *)(v19 + 600);
      if ([v19 isDisplayingLookAroundPIP])
      {
        CGPoint v21 = *(CGPoint *)((char *)a1[4] + 584);
        *long long v20 = *(CGPoint *)((char *)a1[4] + 568);
        v20[1] = v21;
      }
      else
      {
        CGSize size = CGRectZero.size;
        *long long v20 = CGRectZero.origin;
        v20[1] = (CGPoint)size;
      }
      double v14 = 0.0;
    }
  }
  else
  {
    double v14 = 0.0;
    if (!CGRectEqualToRect(*(CGRect *)(v2 + 568), *(CGRect *)(v2 + 600)))
    {
      id v16 = (char *)a1[4];
      uint64_t v17 = (CGPoint *)(v16 + 600);
      if ([v16 isDisplayingLookAroundPIP]) {
        uint64_t v18 = (const CGRect *)((char *)a1[4] + 568);
      }
      else {
        uint64_t v18 = &CGRectZero;
      }
      CGSize v23 = v18->size;
      CGPoint *v17 = v18->origin;
      v17[1] = (CGPoint)v23;
    }
  }
  [a1[4] _sanitizedOriginFrame];
  [a1[6] setFrame:];
  [a1[6] setAlpha:v14];
  [a1[7] setAlpha:0.0];
  id v24 = [a1[4] puckViewController];
  uint64_t v25 = [v24 view];
  [v25 setAlpha:0.0];

  [a1[8] setLayoutStyle:6];
  id v26 = a1[6];

  return [v26 layoutIfNeeded];
}

id sub_10081029C(uint64_t a1)
{
  [*(id *)(a1 + 32) lookAroundContainerViewControllerDidAnimateFromModeTransition:*(void *)(a1 + 40)];
  id result = [*(id *)(a1 + 48) completeTransition:1];
  *(unsigned char *)(*(void *)(a1 + 40) + 510) = 0;
  return result;
}

uint64_t sub_1008102E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1008102F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100810768(uint64_t a1)
{
  [*(id *)(a1 + 32) setLayoutStyle:*(void *)(a1 + 64)];
  [*(id *)(a1 + 40) setFrame:*(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96)];
  [*(id *)(a1 + 40) setAlpha:1.0];
  [*(id *)(a1 + 48) setAlpha:1.0];
  [*(id *)(a1 + 56) setBadgeHidden:*(unsigned __int8 *)(a1 + 104)];
  id v2 = *(void **)(a1 + 40);

  return [v2 layoutIfNeeded];
}

void sub_1008107DC(uint64_t a1)
{
  [*(id *)(a1 + 32) completeTransition:1];
  *(unsigned char *)(*(void *)(a1 + 40) + 510) = 0;
  id v2 = [*(id *)(a1 + 40) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 40) view];
  [v3 layoutIfNeeded];

  [*(id *)(a1 + 40) _showPuckAnimated];
  uint64_t v4 = *(void *)(a1 + 40);
  if (*(unsigned char *)(v4 + 507))
  {
    unsigned int v5 = [(id)v4 chromeViewController];
    uint64_t v6 = [v5 acquireChromeDeactivationTokenForReason:@"full-screen Look Around"];
    uint64_t v7 = *(void *)(a1 + 40);
    double v8 = *(void **)(v7 + 496);
    *(void *)(v7 + 496) = v6;
  }
  else
  {
    unsigned int v5 = *(void **)(v4 + 496);
    *(void *)(v4 + 496) = 0;
  }

  uint64_t v9 = *(void *)(a1 + 40);
  BOOL v10 = *(unsigned char *)(v9 + 507) == 0;
  id v11 = [*(id *)(v9 + 456) cardPresentationController];
  [v11 setHidden:v10];
}

uint64_t sub_100810904(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100810914(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1008109BC(uint64_t a1)
{
  [*(id *)(a1 + 32) updateMapEdgeInsets];
  id v3 = [*(id *)(a1 + 32) puckViewController];
  id v2 = [v3 view];
  [v2 setAlpha:1.0];
}

void sub_100810BF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100810C0C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 48);
  id v3 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v5 = WeakRetained;
  if (v2)
  {
    [WeakRetained _setupForFullScreen];
    uint64_t v6 = 7;
  }
  else
  {
    [WeakRetained _setupForPIP];
    uint64_t v6 = 6;
  }
  uint64_t v27 = (void *)v6;

  id v7 = *(id *)(*(void *)(a1 + 32) + 560);
  [v7 setCompassHidden:1];
  uint64_t v8 = *(unsigned __int8 *)(a1 + 48);
  id v9 = objc_loadWeakRetained(v3);
  BOOL v10 = [v9 pipViewController];
  id v11 = [v10 lookAroundContainerView];
  [v11 setBadgeHidden:v8];

  id v12 = objc_loadWeakRetained(v3);
  CGFloat v13 = [v12 pipViewController];
  id v26 = [v13 cardView];

  id v14 = objc_loadWeakRetained(v3);
  id v15 = [v14 currentViewController];

  id v16 = objc_loadWeakRetained(v3);
  id v17 = [v16 originalLayoutForViewController:v15];

  objc_opt_class();
  char v18 = objc_opt_isKindOfClass() & 1;
  unint64_t v19 = (unint64_t)[*(id *)(a1 + 32) containerStyle];
  LOBYTE(v9) = (v19 > 7) | (0x5Cu >> v19) & 1;
  id v20 = objc_loadWeakRetained(v3);
  CGPoint v21 = [v20 view];
  [v21 setNeedsLayout];

  +[CATransaction begin];
  +[CATransaction setAnimationDuration:0.25];
  int v22 = +[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
  +[CATransaction setAnimationTimingFunction:v22];

  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_100810F50;
  v33[3] = &unk_1012F9CC0;
  objc_copyWeak(v35, v3);
  char v36 = v18;
  char v37 = (char)v9;
  v35[1] = v17;
  id v23 = v26;
  id v34 = v23;
  v35[2] = v27;
  char v38 = *(unsigned char *)(a1 + 48);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  void v28[2] = sub_100811000;
  v28[3] = &unk_1012F9CE8;
  objc_copyWeak(&v31, v3);
  char v32 = *(unsigned char *)(a1 + 48);
  id v24 = v7;
  uint64_t v25 = *(void *)(a1 + 32);
  id v29 = v24;
  uint64_t v30 = v25;
  +[UIView animateWithDuration:v33 animations:v28 completion:0.25];
  +[CATransaction commit];

  objc_destroyWeak(&v31);
  objc_destroyWeak(v35);
}

void sub_100810F30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  _Unwind_Resume(a1);
}

void sub_100810F50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned int v5 = WeakRetained;
    if (*(unsigned char *)(a1 + 64) && *(unsigned char *)(a1 + 65)) {
      [WeakRetained setLayoutIfSupported:*(void *)(a1 + 48) animated:1];
    }
    [*(id *)(a1 + 32) setLayoutStyle:*(void *)(a1 + 56)];
    id v3 = [v5 view];
    [v3 layoutIfNeeded];

    id WeakRetained = v5;
    if (!*(unsigned char *)(a1 + 66))
    {
      uint64_t v4 = (void *)v5[62];
      v5[62] = 0;

      id WeakRetained = v5;
    }
  }
}

void sub_100811000(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v8 = WeakRetained;
    if (*(unsigned char *)(a1 + 56))
    {
      id v3 = [WeakRetained chromeViewController];
      uint64_t v4 = [v3 acquireChromeDeactivationTokenForReason:@"full-screen Look Around"];
      unsigned int v5 = (void *)v8[62];
      v8[62] = v4;

      BOOL v6 = *(unsigned char *)(a1 + 56) != 0;
    }
    else
    {
      BOOL v6 = 0;
    }
    [v8 _showTTRButton:v6];
    id v7 = [v8 _maps_mapsSceneDelegate];
    [v7 refreshTitle];

    [*(id *)(a1 + 32) setCompassHidden:[v8 isDisplayingLookAroundPIP] animated:1];
    +[PPTNotificationCenter postNotificationIfNeededWithName:@"PPTLookAroundContainerViewControllerDidTransitionToFullscreen" object:*(void *)(a1 + 40) userInfo:0];
    id WeakRetained = v8;
  }
}

id sub_1008114B8(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) currentViewController];
  [v2 heightForLayout:1];
  double v4 = v3;

  unsigned int v5 = *(void **)(a1 + 32);

  return [v5 contentHeightUpdatedWithValue:v4];
}

id sub_100811518(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateMapEdgeInsets];
}

id sub_100812550(void *a1)
{
  return [*(id *)(a1[4] + 552) viewControllerGoPreviousState:a1[5] withSender:a1[6]];
}

void sub_100812AF0(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) selectedLabelMarker];
  double v3 = *(void **)(a1 + 40);

  if (v2 == v3)
  {
    uint64_t v4 = *(void *)(a1 + 56);
    unsigned int v5 = *(void **)(*(void *)(a1 + 48) + 552);
    uint64_t v6 = *(void *)(a1 + 32);
    [v5 viewControllerGoPreviousState:v4 withSender:v6];
  }
}

void sub_100816458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_100816480(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    unsigned int v5 = [v3 photo];
    uint64_t v6 = v5;
    if (v5)
    {
      id v7 = *(void **)(a1 + 32);
      uint64_t v8 = [v5 photo];
      id v9 = [v6 identifier];
      [v7 saveImage:v8 withIdentifier:v9];

      v21[0] = @"id";
      BOOL v10 = [v6 identifier];
      v21[1] = @"url";
      v22[0] = v10;
      id v11 = [v6 identifier];
      v22[1] = v11;
      id v12 = +[NSDictionary dictionaryWithObjects:v22 forKeys:v21 count:2];

      uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      if (v13)
      {
        id v20 = v12;
        id v14 = +[NSArray arrayWithObjects:&v20 count:1];
        (*(void (**)(uint64_t, void *, void))(v13 + 16))(v13, v14, 0);

        uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8);
        id v16 = *(void **)(v15 + 40);
        *(void *)(v15 + 40) = 0;
      }
      id v17 = [WeakRetained webBundleQuestion];
      char v18 = [v17 geotaggedPhotoCommentQuestion];
      unint64_t v19 = [v3 photo];
      [v18 addPhoto:v19];
    }
  }
}

id sub_1008175C0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:*(double *)(a1 + 40)];
}

void sub_10081807C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008180B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    int v2 = [WeakRetained actionDelegate];
    id v3 = [v4 subscriptionInfo];
    [v2 offlineMapDetailsActionSectionControllerDidSelectDeleteMap:v3];

    +[GEOAPPortal captureUserAction:408 target:112 value:0];
    id WeakRetained = v4;
  }
}

void sub_100818254(id a1)
{
  uint64_t v1 = objc_opt_new();
  int v2 = (void *)qword_10160FAB8;
  qword_10160FAB8 = v1;
}

void sub_100819544(uint64_t a1)
{
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v1 = +[NSURLSession sharedSession];
  int v2 = +[NSURL URLWithString:@"https://internalcheck.apple.com"];
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472;
  uint64_t v6 = sub_100819668;
  id v7 = &unk_1012EAB30;
  objc_copyWeak(&v8, &location);
  id v3 = [v1 dataTaskWithURL:v2 completionHandler:&v4];

  [v3 resume:v4, v5, v6, v7];
  objc_destroyWeak(&v8);

  objc_destroyWeak(&location);
}

void sub_10081963C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100819668(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v12 = a2;
  id v7 = a3;
  id v8 = a4;
  if (!v8 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && [v7 statusCode] == (id)200)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    BOOL v10 = WeakRetained;
    id v11 = &__kCFBooleanTrue;
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    BOOL v10 = WeakRetained;
    id v11 = &__kCFBooleanFalse;
  }
  [WeakRetained setIsConnectedToInternalAppleNetwork:v11];
}

void sub_100819738(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  int v2 = (void *)qword_10160FAD0;
  qword_10160FAD0 = (uint64_t)v1;

  [(id)qword_10160FAD0 setDateFormat:@"yyyy-MM-dd HH:mm:ss.SSSSSSZZZ"];
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_10160FAD0 setLocale:v3];
}

int64_t sub_1008197C4(id a1, VLFSessionMonitor *a2, VLFSessionMonitor *a3)
{
  id v3 = a3;
  id v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint64_t v6 = (objc_class *)objc_opt_class();

  id v7 = NSStringFromClass(v6);
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

void sub_100819930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10081994C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateDebugText];

  id v3 = objc_loadWeakRetained(v1);
  [v3 startDebugInfoRefreshTimer];
}

void sub_100819B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100819B5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained vlfSessionTask];
  [v1 showVLFUI];
}

void sub_10081ACE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10081AD10(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = [v7 selectedLabelMarker];

    if (v4)
    {
      [WeakRetained _instrumentSelectingLabel];
      uint64_t v5 = [v7 selectedLabelMarker];
      id v6 = WeakRetained[9];
      WeakRetained[9] = (id)v5;

      [WeakRetained _updateLabelPickerDoneBarItem];
    }
    else
    {
      [WeakRetained[8] setEnabled:0];
    }
  }
}

BOOL sub_10081EC60(id a1, CarFocusableButton *a2, unint64_t a3, BOOL *a4)
{
  return [(CarFocusableButton *)a2 canBecomeFocused];
}

id sub_100822E74(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 56);
  return [v1 setConfiguration:&v3];
}

id *sub_100822EB0(id *result)
{
  if (*((unsigned char *)result + 40))
  {
    if (!*((unsigned char *)result + 41)) {
      return (id *)[result[4] reload];
    }
  }
  return result;
}

id sub_100822ECC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40) && !*(unsigned char *)(a1 + 41))
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100822F70;
    v3[3] = &unk_1012E5D08;
    void v3[4] = *(void *)(a1 + 32);
    +[UIView performWithoutAnimation:v3];
  }
  return [*(id *)(a1 + 32) setHidden:*(unsigned __int8 *)(a1 + 41) animated:*(unsigned __int8 *)(a1 + 42)];
}

id sub_100822F70(uint64_t a1)
{
  return [*(id *)(a1 + 32) reload];
}

id *sub_100822F78(id *result)
{
  if (*((unsigned char *)result + 40)) {
    return (id *)[result[4] reload];
  }
  return result;
}

void sub_100824710(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) setAlpha:*(double *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 32) host];
  [v2 setCollisionConstraintsEnabled:*(unsigned char *)(a1 + 48) == 0 forOverlay:*(void *)(a1 + 32)];
}

id sub_10082526C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) layoutIfNeeded];
}

id sub_100825278(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) superview];
  [v2 invalidateIntrinsicContentSize];

  long long v3 = *(void **)(*(void *)(a1 + 40) + 32);

  return [v3 layoutIfNeeded];
}

BOOL sub_100825678(id a1, CarMapControlsAutohidingContainerView *a2, unint64_t a3, BOOL *a4)
{
  [(CarMapControlsAutohidingContainerView *)a2 alpha];
  return v4 > 0.0;
}

BOOL sub_10082569C(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
  double v4 = a2;
  if ([(UIView *)v4 isUserInteractionEnabled]) {
    unsigned int v5 = ![(UIView *)v4 isHidden];
  }
  else {
    LOBYTE(v5) = 0;
  }

  return v5;
}

int64_t sub_100825B2C(id a1, UIView *a2, UIView *a3)
{
  double v4 = a3;
  [(UIView *)a2 frame];
  unsigned int v5 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  [(UIView *)v4 frame];
  double v7 = v6;

  id v8 = +[NSNumber numberWithDouble:v7];
  id v9 = [v5 compare:v8];

  return (int64_t)v9;
}

id sub_100825C90(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setupTrayLayoutAndPerformScrollTest];
}

id sub_100825D48(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _expandCollectionsList];
}

id sub_100825DE0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _openFirstCollection];
}

id sub_100825E8C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _expandCollection];
}

id sub_100825F78(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100825FE8;
  v3[3] = &unk_1012E5D08;
  void v3[4] = v1;
  return [v1 _dispatchAfterShortDelay:v3];
}

id sub_100825FE8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _dismissCollection];
}

id sub_100825FF0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _dismissCollection];
}

void sub_100826090(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) testCoordinator];
  long long v3 = [v2 pptTestScrollView];

  double v4 = *(void **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10082613C;
  void v5[3] = &unk_1012E5D08;
  void v5[4] = v4;
  [v4 _performScrollTestOfScrollView:v3 completion:v5];
}

id sub_10082613C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

uint64_t sub_1008261F4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

BOOL sub_1008262C8(unint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = v3;
  BOOL v5 = 0;
  if (a1 <= 7 && ((1 << a1) & 0xE3) != 0) {
    BOOL v5 = [v3 horizontalSizeClass] == (id)1 && [v4 verticalSizeClass] == (id)1;
  }

  return v5;
}

id sub_10082634C()
{
  if (qword_10160FAE8 != -1) {
    dispatch_once(&qword_10160FAE8, &stru_1012F9FA0);
  }
  v0 = (void *)qword_10160FAF0;

  return v0;
}

void sub_1008263A0(id a1)
{
  uint64_t v1 = +[UIColor colorWithRed:0.4627451 green:0.4627451 blue:0.501960814 alpha:1.0];
  id v2 = (void *)qword_10160FAF0;
  qword_10160FAF0 = v1;
}

id sub_1008263F8()
{
  if (qword_10160FAF8 != -1) {
    dispatch_once(&qword_10160FAF8, &stru_1012F9FC0);
  }
  v0 = (void *)qword_10160FB00;

  return v0;
}

void sub_10082644C(id a1)
{
  uint64_t v1 = +[UIColor _maps_colorFromHexString:@"1C1C1EFF"];
  id v2 = (void *)qword_10160FB00;
  qword_10160FB00 = v1;
}

id sub_100826494()
{
  if (qword_10160FB08 != -1) {
    dispatch_once(&qword_10160FB08, &stru_1012F9FE0);
  }
  v0 = (void *)qword_10160FB10;

  return v0;
}

void sub_1008264E8(id a1)
{
  uint64_t v1 = +[UIColor _maps_colorFromHexString:@"48484AFF"];
  id v2 = (void *)qword_10160FB10;
  qword_10160FB10 = v1;
}

id sub_100826530()
{
  if (qword_10160FB18 != -1) {
    dispatch_once(&qword_10160FB18, &stru_1012FA000);
  }
  v0 = (void *)qword_10160FB20;

  return v0;
}

void sub_100826584(id a1)
{
  uint64_t v1 = +[UIColor _maps_colorFromHexString:@"0A0A0BFF"];
  id v2 = (void *)qword_10160FB20;
  qword_10160FB20 = v1;
}

id sub_1008265CC()
{
  if (qword_10160FB28 != -1) {
    dispatch_once(&qword_10160FB28, &stru_1012FA020);
  }
  v0 = (void *)qword_10160FB30;

  return v0;
}

void sub_100826620(id a1)
{
  uint64_t v1 = +[UIColor _maps_colorFromHexString:@"1D1D20FF"];
  id v2 = (void *)qword_10160FB30;
  qword_10160FB30 = v1;
}

void sub_100826C18(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) activityAction];
  id v2 = [*(id *)(a1 + 40) userActivity];
  v3[2](v3, v2);
}

void sub_100826D74(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) cancelAction];
  v1[2]();
}

void sub_100827774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1008277AC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  double v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1008277F8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) mutableCopy];
  uint64_t v3 = *(void *)(a1 + 32);
  double v4 = *(void **)(v3 + 24);
  *(void *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v2;
}

id sub_1008278D8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) addObject:*(void *)(a1 + 40)];
}

id sub_100827B14(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) addObject:*(void *)(a1 + 40)];
}

void sub_100827CC0(id a1)
{
  uint64_t v1 = objc_alloc_init(UGCReviewedPlaceMapsSync);
  id v2 = (void *)qword_10160FB58;
  qword_10160FB58 = (uint64_t)v1;
}

id sub_100827EB4(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 24) reviewedPlaceObjectsDidChange];
}

void sub_1008280F0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) copy];
  double v4 = [v2 _fetchMSReviewedPlaceWithMuids:v3 error:0];

  BOOL v5 = sub_100577844();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (v4)
  {
    if (v6)
    {
      *(_DWORD *)id buf = 138412546;
      id v28 = v4;
      __int16 v29 = 2048;
      id v30 = [v4 muid];
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "We fetched a synced reviewed place - %@ muid %llu ", buf, 0x16u);
    }

    id v7 = [v4 hasUserReviewed];
    id v8 = sub_100577844();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_INFO);
    if (v7)
    {
      if (v9)
      {
        *(_WORD *)id buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "The user has reviewed this place", buf, 2u);
      }

      BOOL v10 = -[UGCReviewedPlace initWithMUID:originallySavedMUID:]([UGCReviewedPlace alloc], "initWithMUID:originallySavedMUID:", *(void *)(a1 + 56), [v4 muid]);
      -[UGCReviewedPlace setVersion:](v10, "setVersion:", (int)[v4 version]);
      id v8 = [v4 communityID];
      id v11 = [v8 communityIdentifier];
      id v12 = [v11 copy];
      [(UGCReviewedPlace *)v10 setCommunityIdentifier:v12];
    }
    else
    {
      if (v9)
      {
        *(_WORD *)id buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "The user has not reviewed this place", buf, 2u);
      }
      BOOL v10 = 0;
    }

    id v14 = [v4 muid];
    id v15 = *(id *)(a1 + 56);
    id v16 = sub_100577844();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_INFO);
    if (v14 == v15)
    {
      if (v17)
      {
        *(_WORD *)id buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "No need to replace MUIDs", buf, 2u);
      }

      uint64_t v18 = *(void *)(a1 + 48);
      if (v18) {
        (*(void (**)(uint64_t, id, UGCReviewedPlace *))(v18 + 16))(v18, v7, v10);
      }
    }
    else
    {
      if (v17)
      {
        unint64_t v19 = *(void **)(a1 + 56);
        *(_DWORD *)id buf = 134218240;
        id v28 = v14;
        __int16 v29 = 2048;
        id v30 = v19;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Current MUID %llu has expired, need to replace with %llu", buf, 0x16u);
      }

      [v4 setMuid:*(void *)(a1 + 56)];
      id v20 = +[MapsSyncStore sharedStore];
      id v26 = v4;
      CGPoint v21 = +[NSArray arrayWithObjects:&v26 count:1];
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      void v22[2] = sub_1008284F8;
      void v22[3] = &unk_1012ECCE0;
      id v24 = *(id *)(a1 + 48);
      char v25 = (char)v7;
      id v23 = v10;
      [v20 saveWithObjects:v21 completionHandler:v22];
    }
  }
  else
  {
    if (v6)
    {
      *(_DWORD *)id buf = 134218242;
      id v28 = [0 muid];
      __int16 v29 = 2112;
      id v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "We did not fetch a synced reviewed place for muid %llu, error: %@", buf, 0x16u);
    }

    uint64_t v13 = *(void *)(a1 + 48);
    if (v13) {
      (*(void (**)(uint64_t, void, void))(v13 + 16))(v13, 0, 0);
    }
  }
}

void sub_1008284F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100577844();
  BOOL v5 = v4;
  if (v3)
  {
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    int v11 = 138412290;
    id v12 = v3;
    BOOL v6 = "Failed to update MUID on synced reviewed place with error %@";
    id v7 = v5;
    os_log_type_t v8 = OS_LOG_TYPE_ERROR;
    uint32_t v9 = 12;
  }
  else
  {
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_7;
    }
    LOWORD(v11) = 0;
    BOOL v6 = "Successfully updated MUID on synced reviewed place";
    id v7 = v5;
    os_log_type_t v8 = OS_LOG_TYPE_INFO;
    uint32_t v9 = 2;
  }
  _os_log_impl((void *)&_mh_execute_header, v7, v8, v6, (uint8_t *)&v11, v9);
LABEL_7:

  uint64_t v10 = *(void *)(a1 + 40);
  if (v10) {
    (*(void (**)(uint64_t, void, void))(v10 + 16))(v10, *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
  }
}

void sub_100828894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1008288AC(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  BOOL v6 = v5;
  if (v5) {
    NSLog(@"%@", v5);
  }
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObjectsFromArray:v8];
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  }
}

void sub_100828A3C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithUnsignedLongLong:*(void *)(a1 + 48)];
  int v22 = v3;
  double v4 = +[NSArray arrayWithObjects:&v22 count:1];
  id v5 = [v2 _fetchMSReviewedPlaceWithMuids:v4 error:0];

  if (!v5)
  {
    uint64_t v7 = sub_100577844();
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
      goto LABEL_11;
    }
    *(_DWORD *)id buf = 138412546;
    unint64_t v19 = 0;
    __int16 v20 = 2048;
    id v21 = [0 muid];
    int v11 = "We fetched and want to delete synced reviewed place %@ with muid %llu";
    id v12 = v7;
    uint32_t v13 = 22;
    goto LABEL_10;
  }
  unsigned __int8 v6 = [v5 hasUserReviewed];
  uint64_t v7 = sub_100577844();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
  if (v6)
  {
    if (v8)
    {
      *(_DWORD *)id buf = 138412546;
      unint64_t v19 = v5;
      __int16 v20 = 2048;
      id v21 = [v5 muid];
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "We fetched and want to delete synced reviewed place %@ with muid %llu", buf, 0x16u);
    }

    [v5 setHasUserReviewed:0];
    uint32_t v9 = +[MapsSyncStore sharedStore];
    BOOL v17 = v5;
    uint64_t v10 = +[NSArray arrayWithObjects:&v17 count:1];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    void v15[2] = sub_100828CD0;
    void v15[3] = &unk_1012E76C0;
    id v16 = *(id *)(a1 + 40);
    [v9 saveWithObjects:v10 completionHandler:v15];

    goto LABEL_13;
  }
  if (v8)
  {
    *(_WORD *)id buf = 0;
    int v11 = "We fetched and want to delete synced reviewed place but it not reviewed";
    id v12 = v7;
    uint32_t v13 = 2;
LABEL_10:
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, v11, buf, v13);
  }
LABEL_11:

  uint64_t v14 = *(void *)(a1 + 40);
  if (v14) {
    (*(void (**)(uint64_t, void))(v14 + 16))(v14, 0);
  }
LABEL_13:
}

void sub_100828CD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100577844();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to delete synced reviewed place with error %@", (uint8_t *)&v9, 0xCu);
    }

    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      uint64_t v7 = *(void (**)(void))(v6 + 16);
LABEL_10:
      v7();
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Successfully deleted synced reviewed place", (uint8_t *)&v9, 2u);
    }

    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      uint64_t v7 = *(void (**)(void))(v8 + 16);
      goto LABEL_10;
    }
  }
}

void sub_100828EDC(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    objc_initWeak(&location, *(id *)(a1 + 40));
    id v2 = *(void **)(*(void *)(a1 + 40) + 8);
    id v3 = [*(id *)(a1 + 48) communityIdentifier];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100829028;
    void v7[3] = &unk_1012FA0D0;
    objc_copyWeak(&v10, &location);
    id v9 = *(id *)(a1 + 56);
    id v8 = *(id *)(a1 + 48);
    [v2 fetchCommunityIDWithIdentifier:v3 completion:v7];

    objc_destroyWeak(&v10);
    objc_destroyWeak(&location);
  }
  else
  {
    double v4 = *(void **)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 56);
    [v4 _buildMapsSyncReviewedPlace:v5 communityID:0 completion:v6];
  }
}

void sub_100829004(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100829028(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v6)
    {
      id v8 = sub_100577844();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138412290;
        id v13 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to save synced reviewed place with error %@", (uint8_t *)&v12, 0xCu);
      }

      uint64_t v9 = *(void *)(a1 + 40);
      if (v9) {
        (*(void (**)(uint64_t, id))(v9 + 16))(v9, v6);
      }
    }
    else
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = [v5 firstObject];
      [WeakRetained _buildMapsSyncReviewedPlace:v10 communityID:v11 completion:*(void *)(a1 + 40)];
    }
  }
}

void sub_10082955C(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100577844();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to save synced reviewed place with error %@", (uint8_t *)&v9, 0xCu);
    }

    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      uint64_t v7 = *(void (**)(void))(v6 + 16);
LABEL_10:
      v7();
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Successfully updated synced reviewed place", (uint8_t *)&v9, 2u);
    }

    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      uint64_t v7 = *(void (**)(void))(v8 + 16);
      goto LABEL_10;
    }
  }
}

void sub_100829744(id a1)
{
  id v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.maps.ugc.ReviewedPlaceMapsSync", v3);
  uint64_t v2 = (void *)qword_10160FB68;
  qword_10160FB68 = (uint64_t)v1;
}

uint64_t sub_1008297A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100829908(id a1, NSArray *a2, NSError *a3)
{
  id v3 = a2;
  id v4 = +[MapsSyncStore sharedStore];
  [v4 deleteWithObjects:v3 completionHandler:&stru_1012FA130];
}

void sub_100829974(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_100577844();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v2;
      id v5 = "Failed to delete synced reviewed places, error %@";
      uint64_t v6 = v4;
      os_log_type_t v7 = OS_LOG_TYPE_ERROR;
      uint32_t v8 = 12;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, v7, v5, (uint8_t *)&v9, v8);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    LOWORD(v9) = 0;
    id v5 = "Successfuly deleted synced reviewed places";
    uint64_t v6 = v4;
    os_log_type_t v7 = OS_LOG_TYPE_INFO;
    uint32_t v8 = 2;
    goto LABEL_6;
  }
}

void sub_10082A228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

id sub_10082A298(uint64_t a1)
{
  dispatch_queue_t v1 = 0;
  if (a1 > 31)
  {
    if (a1 > 127)
    {
      if (a1 == 128)
      {
        uint64_t v2 = +[NSBundle mainBundle];
        id v3 = v2;
        CFStringRef v4 = @"EV_Routing_Connector_Mennekes";
      }
      else
      {
        if (a1 != 256) {
          goto LABEL_19;
        }
        uint64_t v2 = +[NSBundle mainBundle];
        id v3 = v2;
        CFStringRef v4 = @"EV_Routing_Connector_NACS_AC";
      }
    }
    else if (a1 == 32)
    {
      uint64_t v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"EV_Routing_Connector_GBT_DC";
    }
    else
    {
      if (a1 != 64) {
        goto LABEL_19;
      }
      uint64_t v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"EV_Routing_Connector_Tesla";
    }
  }
  else
  {
    switch(a1)
    {
      case 1:
        uint64_t v2 = +[NSBundle mainBundle];
        id v3 = v2;
        CFStringRef v4 = @"EV_Routing_Connector_J1772";
        break;
      case 2:
        uint64_t v2 = +[NSBundle mainBundle];
        id v3 = v2;
        CFStringRef v4 = @"EV_Routing_Connector_CCS1";
        break;
      case 3:
      case 5:
      case 6:
      case 7:
        goto LABEL_19;
      case 4:
        uint64_t v2 = +[NSBundle mainBundle];
        id v3 = v2;
        CFStringRef v4 = @"EV_Routing_Connector_CCS2";
        break;
      case 8:
        uint64_t v2 = +[NSBundle mainBundle];
        id v3 = v2;
        CFStringRef v4 = @"EV_Routing_Connector_CHAdeMO";
        break;
      default:
        if (a1 != 16) {
          goto LABEL_19;
        }
        uint64_t v2 = +[NSBundle mainBundle];
        id v3 = v2;
        CFStringRef v4 = @"EV_Routing_Connector_GBT_AC";
        break;
    }
  }
  dispatch_queue_t v1 = [v2 localizedStringForKey:v4 value:@"localized string not found" table:0];

LABEL_19:

  return v1;
}

void sub_10082BE24(uint64_t a1, void *a2, id a3)
{
  id v5 = a2;
  if ([v5 paymentMethodType] == 2) {
    ++*(void *)(*(void *)(a1 + 32) + 96);
  }
  if ([v5 paymentMethodType] == 4) {
    ++*(void *)(*(void *)(a1 + 32) + 104);
  }
  if ([v5 paymentMethodType] == 1) {
    ++*(void *)(*(void *)(a1 + 32) + 88);
  }
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id obj = *(id *)(*(void *)(a1 + 32) + 16);
  id v6 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v20 = *(void *)v26;
    do
    {
      uint32_t v8 = 0;
      do
      {
        if (*(void *)v26 != v20) {
          objc_enumerationMutation(obj);
        }
        int v9 = *(void **)(*((void *)&v25 + 1) + 8 * (void)v8);
        long long v21 = 0u;
        long long v22 = 0u;
        long long v23 = 0u;
        long long v24 = 0u;
        id v10 = [v9 paymentMethodIndices];
        id v11 = [v10 countByEnumeratingWithState:&v21 objects:v29 count:16];
        if (v11)
        {
          id v12 = v11;
          uint64_t v13 = *(void *)v22;
          do
          {
            uint64_t v14 = 0;
            do
            {
              if (*(void *)v22 != v13) {
                objc_enumerationMutation(v10);
              }
              if ([*(id *)(*((void *)&v21 + 1) + 8 * (void)v14) unsignedIntegerValue] == a3) {
                [*(id *)(*(void *)(a1 + 32) + 72) setObject:v9 forKeyedSubscript:v5];
              }
              uint64_t v14 = (char *)v14 + 1;
            }
            while (v12 != v14);
            id v12 = [v10 countByEnumeratingWithState:&v21 objects:v29 count:16];
          }
          while (v12);
        }

        uint32_t v8 = (char *)v8 + 1;
      }
      while (v8 != v7);
      id v7 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
    }
    while (v7);
  }

  id v15 = *(void **)(*(void *)(a1 + 32) + 80);
  id v16 = [v5 identifier];
  [v15 setObject:v5 forKeyedSubscript:v16];

  BOOL v17 = *(void **)(*(void *)(a1 + 32) + 32);
  uint64_t v18 = [v5 identifier];
  [v17 addObject:v18];
}

void sub_10082D1F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if ([a3 purpose] == 2)
  {
    id v6 = sub_100021338();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = [v5 identifier];
      int v12 = 138412290;
      uint64_t v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Skipping %@. This is an interoperable suggestion.", (uint8_t *)&v12, 0xCu);
    }
  }
  else
  {
    if ([v5 paymentMethodType] != 3
      && [v5 paymentMethodType] != 1
      && [v5 paymentMethodType] != 4)
    {
      id v10 = *(void **)(a1 + 32);
      id v11 = [v5 identifier];
      [v10 addObject:v11];

      goto LABEL_10;
    }
    id v6 = sub_100021338();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint32_t v8 = [v5 identifier];
      [v5 paymentMethodType];
      int v9 = GEOTransitPaymentMethodTypeAsString();
      int v12 = 138412546;
      uint64_t v13 = v8;
      __int16 v14 = 2112;
      id v15 = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Skipping non-CL payment method %@. It is %@.", (uint8_t *)&v12, 0x16u);
    }
  }

LABEL_10:
}

void sub_10082D790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10082D7B8(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v10 = a3;
  id v7 = [a2 identifier];
  if ([v7 isEqualToString:*(void *)(a1 + 32)])
  {
    unsigned int v8 = [v10 purpose];

    int v9 = v10;
    if (v8 != 2)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *a4 = 1;
    }
  }
  else
  {

    int v9 = v10;
  }
}

void sub_10082E5AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10082EB00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10082ECE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10082EDB4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10160FB78;
  qword_10160FB78 = (uint64_t)v1;
}

id sub_10082FFF0()
{
  if (qword_10160FB90 != -1) {
    dispatch_once(&qword_10160FB90, &stru_1012FA1C8);
  }
  v0 = (void *)qword_10160FB88;

  return v0;
}

void sub_100830430(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

void sub_100830460(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _markAsShown];
    id WeakRetained = v2;
  }
}

void sub_1008304A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _dismissTip];
    id WeakRetained = v2;
  }
}

void sub_1008304E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained setShowFeature:1];
    [v2 _notifyObservers];
    id WeakRetained = v2;
  }
}

void sub_1008306AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "OfflineMapsDownloadFeatureTipSource");
  id v2 = (void *)qword_10160FB88;
  qword_10160FB88 = (uint64_t)v1;
}

uint64_t sub_100831B04(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = (DirectionsPlanTransitPreferences *)objc_alloc_init((Class)GEOStorageRouteRequestStorage);
        objc_storeStrong((id *)(a1 + 104), v13);
        if (PBReaderPlaceMark()
          && -[DirectionsPlanTransitPreferences readFrom:](v13, "readFrom:", a2, 0, 0))
        {
          goto LABEL_136;
        }
        goto LABEL_212;
      case 2u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = 88;
        goto LABEL_141;
      case 3u:
        uint64_t v20 = PBReaderReadString();
        uint64_t v21 = 56;
        goto LABEL_141;
      case 4u:
        *(_DWORD *)(a1 + 148) |= 8u;
        unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v23 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v23 = 0;
        }
        uint64_t v102 = 32;
        goto LABEL_209;
      case 5u:
        *(_DWORD *)(a1 + 148) |= 1u;
        unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v23 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v23 = 0;
        }
        uint64_t v102 = 8;
        goto LABEL_209;
      case 6u:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 148) |= 2u;
        while (2)
        {
          uint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v29 = v28 + 1;
          if (v28 == -1 || v29 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              BOOL v10 = v26++ >= 9;
              if (v10)
              {
                uint64_t v27 = 0;
                goto LABEL_151;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v27 = 0;
        }
LABEL_151:
        uint64_t v100 = 16;
        goto LABEL_156;
      case 7u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v27 = 0;
        *(_DWORD *)(a1 + 148) |= 4u;
        while (2)
        {
          uint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34;
            v27 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v10 = v32++ >= 9;
              if (v10)
              {
                uint64_t v27 = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v27 = 0;
        }
LABEL_155:
        uint64_t v100 = 24;
LABEL_156:
        *(void *)(a1 + v100) = v27;
        goto LABEL_210;
      case 8u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 148) |= 0x20u;
        while (2)
        {
          uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v10 = v37++ >= 9;
              if (v10)
              {
                LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
        }
LABEL_160:
        uint64_t v101 = 64;
        goto LABEL_189;
      case 9u:
        uint64_t v13 = objc_alloc_init(DirectionsPlanTransitPreferences);
        objc_storeStrong((id *)(a1 + 128), v13);
        if (!PBReaderPlaceMark() || !sub_100A24844((uint64_t)v13, a2)) {
          goto LABEL_212;
        }
        goto LABEL_136;
      case 0xAu:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 148) |= 0x200u;
        while (2)
        {
          uint64_t v44 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v44);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45;
            v38 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v10 = v43++ >= 9;
              if (v10)
              {
                LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
        }
LABEL_164:
        uint64_t v101 = 116;
        goto LABEL_189;
      case 0xBu:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 148) |= 0x40u;
        while (2)
        {
          uint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50;
            v38 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              BOOL v10 = v48++ >= 9;
              if (v10)
              {
                LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
        }
LABEL_168:
        uint64_t v101 = 68;
        goto LABEL_189;
      case 0xCu:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 148) |= 0x80u;
        while (2)
        {
          uint64_t v54 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v54);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v55;
            v38 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              BOOL v10 = v53++ >= 9;
              if (v10)
              {
                LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
        }
LABEL_172:
        uint64_t v101 = 80;
        goto LABEL_189;
      case 0xDu:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 148) |= 0x100u;
        while (2)
        {
          uint64_t v59 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v59);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v60;
            v38 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              BOOL v10 = v58++ >= 9;
              if (v10)
              {
                LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
        }
LABEL_176:
        uint64_t v101 = 112;
        goto LABEL_189;
      case 0xEu:
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 148) |= 0x400u;
        while (2)
        {
          uint64_t v64 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v64);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v65;
            v38 |= (unint64_t)(v66 & 0x7F) << v62;
            if (v66 < 0)
            {
              v62 += 7;
              BOOL v10 = v63++ >= 9;
              if (v10)
              {
                LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
        }
LABEL_180:
        uint64_t v101 = 120;
        goto LABEL_189;
      case 0xFu:
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 148) |= 0x800u;
        while (2)
        {
          uint64_t v69 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v69);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v70;
            v38 |= (unint64_t)(v71 & 0x7F) << v67;
            if (v71 < 0)
            {
              v67 += 7;
              BOOL v10 = v68++ >= 9;
              if (v10)
              {
                LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
        }
LABEL_184:
        uint64_t v101 = 136;
        goto LABEL_189;
      case 0x10u:
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 148) |= 0x1000u;
        while (2)
        {
          uint64_t v74 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v74);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v75;
            v38 |= (unint64_t)(v76 & 0x7F) << v72;
            if (v76 < 0)
            {
              v72 += 7;
              BOOL v10 = v73++ >= 9;
              if (v10)
              {
                LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 0;
        }
LABEL_188:
        uint64_t v101 = 140;
LABEL_189:
        *(_DWORD *)(a1 + v101) = v38;
        goto LABEL_210;
      case 0x11u:
        *(_DWORD *)(a1 + 148) |= 0x10u;
        unint64_t v77 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v23 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v77);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v77 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v23 = 0;
        }
        uint64_t v102 = 40;
LABEL_209:
        *(void *)(a1 + v102) = v23;
        goto LABEL_210;
      case 0x12u:
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        *(_DWORD *)(a1 + 148) |= 0x10000u;
        while (2)
        {
          uint64_t v81 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v81);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v82;
            v80 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v10 = v79++ >= 9;
              if (v10)
              {
                uint64_t v80 = 0;
                goto LABEL_193;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v80 = 0;
        }
LABEL_193:
        BOOL v98 = v80 != 0;
        uint64_t v99 = 147;
        goto LABEL_202;
      case 0x13u:
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v86 = 0;
        *(_DWORD *)(a1 + 148) |= 0x4000u;
        while (2)
        {
          uint64_t v87 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v87);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v88;
            v86 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              BOOL v10 = v85++ >= 9;
              if (v10)
              {
                uint64_t v86 = 0;
                goto LABEL_197;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v86 = 0;
        }
LABEL_197:
        BOOL v98 = v86 != 0;
        uint64_t v99 = 145;
        goto LABEL_202;
      case 0x14u:
        char v90 = 0;
        unsigned int v91 = 0;
        uint64_t v92 = 0;
        *(_DWORD *)(a1 + 148) |= 0x2000u;
        while (2)
        {
          uint64_t v93 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v94 = v93 + 1;
          if (v93 == -1 || v94 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v93);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v94;
            v92 |= (unint64_t)(v95 & 0x7F) << v90;
            if (v95 < 0)
            {
              v90 += 7;
              BOOL v10 = v91++ >= 9;
              if (v10)
              {
                uint64_t v92 = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v92 = 0;
        }
LABEL_201:
        BOOL v98 = v92 != 0;
        uint64_t v99 = 144;
        goto LABEL_202;
      case 0x15u:
        uint64_t v13 = objc_alloc_init(DirectionsPlanWaypoint);
        [(id)a1 addPlanningWaypoint:v13];
        if (PBReaderPlaceMark() && sub_1005CC4FC((uint64_t)v13, a2))
        {
LABEL_136:
          PBReaderRecallMark();
LABEL_137:

LABEL_210:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_212:

        return 0;
      case 0x16u:
        PBReaderReadString();
        uint64_t v13 = (DirectionsPlanTransitPreferences *)objc_claimAutoreleasedReturnValue();
        if (v13) {
          [(id)a1 addHandlesForSharingETA:v13];
        }
        goto LABEL_137;
      case 0x17u:
        uint64_t v20 = PBReaderReadData();
        uint64_t v21 = 48;
LABEL_141:
        double v96 = *(void **)(a1 + v21);
        *(void *)(a1 + v21) = v20;

        goto LABEL_210;
      default:
        if ((v6 >> 3) == 404)
        {
          char v14 = 0;
          unsigned int v15 = 0;
          uint64_t v16 = 0;
          *(_DWORD *)(a1 + 148) |= 0x8000u;
          while (1)
          {
            uint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v18 = v17 + 1;
            if (v17 == -1 || v18 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18;
            v16 |= (unint64_t)(v19 & 0x7F) << v14;
            if ((v19 & 0x80) == 0) {
              goto LABEL_145;
            }
            v14 += 7;
            BOOL v10 = v15++ >= 9;
            if (v10)
            {
              uint64_t v16 = 0;
              goto LABEL_147;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_145:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v16 = 0;
          }
LABEL_147:
          BOOL v98 = v16 != 0;
          uint64_t v99 = 146;
LABEL_202:
          *(unsigned char *)(a1 + v99) = v98;
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        goto LABEL_210;
    }
  }
}

void sub_100834A84(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 8))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100834B28;
    block[3] = &unk_1012E5D08;
    void block[4] = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_100834B28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 8) + 16))();
}

void sub_100834EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100834EF8(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  char v4 = [WeakRetained actionCoordinator];
  [v4 viewControllerGoPreviousState:v3 withSender:0];
}

void sub_100835384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008353A4(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  char v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained sidebarContentInjector];

    if (v5 == v6)
    {
      [v6 removeContentFromMapView];
      [v6 addContentToMapView];
    }
  }
}

void sub_1008359BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1008359DC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained _analyticsTargetForTransportType:a2];

  return v4;
}

id sub_1008373C0(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) _analyticsTarget];

  return [v1 presentReportAProblemForRouteFromEntryPoint:v2];
}

void sub_1008396B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1008396D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_10083991C;
  void v17[3] = &unk_1012E8290;
  objc_copyWeak(&v18, (id *)(a1 + 48));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_10083996C;
  void v15[3] = &unk_1012E6998;
  objc_copyWeak(&v16, (id *)(a1 + 48));
  id v5 = [v3 addSwitchRowWithTitle:v4 get:v17 set:v15];
  [v5 setConfigureCollectionViewCellBlock:&stru_1012FA290];
  uint64_t v6 = *(void *)(a1 + 40);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100839B50;
  void v13[3] = &unk_1012E8290;
  objc_copyWeak(&v14, (id *)(a1 + 48));
  unint64_t v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472;
  BOOL v10 = sub_100839BA0;
  int v11 = &unk_1012E6998;
  objc_copyWeak(&v12, (id *)(a1 + 48));
  uint64_t v7 = [v3 addSwitchRowWithTitle:v6 get:v13 set:&v8];
  [v7 setConfigureCollectionViewCellBlock:&stru_1012FA2B0 v8, v9, v10, v11];

  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);

  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
}

void sub_1008398E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_10083991C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained drivePreferences];
  id v3 = [v2 avoidTolls];

  return v3;
}

void sub_10083996C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B522C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v20[0] = 67109120;
    v20[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Setting 'Avoid Tolls' to %d", (uint8_t *)v20, 8u);
  }

  id v5 = [DrivePreferences alloc];
  uint64_t v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v6);
  unint64_t v8 = [WeakRetained drivePreferences];
  id v9 = [v8 avoidHighways];
  id v10 = objc_loadWeakRetained(v6);
  int v11 = [v10 drivePreferences];
  id v12 = [v11 ignoreLiveTraffic];
  uint64_t v13 = +[NSUserDefaults standardUserDefaults];
  id v14 = [(DrivePreferences *)v5 initWithAvoidTolls:a2 avoidHighways:v9 ignoreLiveTraffic:v12 defaults:v13];
  id v15 = objc_loadWeakRetained(v6);
  [v15 setDrivePreferences:v14];

  id v16 = objc_loadWeakRetained(v6);
  [v16 _updateHasUnsavedChanges];

  if (a2) {
    uint64_t v17 = 5017;
  }
  else {
    uint64_t v17 = 5018;
  }
  id v18 = +[MKMapService sharedService];
  id v19 = objc_loadWeakRetained(v6);
  [v18 captureUserAction:v17 onTarget:[v19 analyticsTarget] eventValue:0];
}

void sub_100839B48(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
}

id sub_100839B50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained drivePreferences];
  id v3 = [v2 avoidHighways];

  return v3;
}

void sub_100839BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B522C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v20[0] = 67109120;
    v20[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Setting 'Avoid Highways' to %d", (uint8_t *)v20, 8u);
  }

  id v5 = [DrivePreferences alloc];
  uint64_t v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v6);
  unint64_t v8 = [WeakRetained drivePreferences];
  id v9 = [v8 avoidTolls];
  id v10 = objc_loadWeakRetained(v6);
  int v11 = [v10 drivePreferences];
  id v12 = [v11 ignoreLiveTraffic];
  uint64_t v13 = +[NSUserDefaults standardUserDefaults];
  id v14 = [(DrivePreferences *)v5 initWithAvoidTolls:v9 avoidHighways:a2 ignoreLiveTraffic:v12 defaults:v13];
  id v15 = objc_loadWeakRetained(v6);
  [v15 setDrivePreferences:v14];

  id v16 = objc_loadWeakRetained(v6);
  [v16 _updateHasUnsavedChanges];

  if (a2) {
    uint64_t v17 = 5019;
  }
  else {
    uint64_t v17 = 5020;
  }
  id v18 = +[MKMapService sharedService];
  id v19 = objc_loadWeakRetained(v6);
  [v18 captureUserAction:v17 onTarget:[v19 analyticsTarget] eventValue:0];
}

void sub_100839D7C(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
}

void sub_100839F24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100839F50(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (sub_100CD3150())
  {
    uint64_t v4 = *(void *)(a1 + 32);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_10083A298;
    v24[3] = &unk_1012E8290;
    objc_copyWeak(&v25, (id *)(a1 + 56));
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    void v22[2] = sub_10083A2E8;
    void v22[3] = &unk_1012E6998;
    objc_copyWeak(&v23, (id *)(a1 + 56));
    id v5 = [v3 addSwitchRowWithTitle:v4 get:v24 set:v22];
    [v5 setConfigureCollectionViewCellBlock:&stru_1012FA2F8];

    objc_destroyWeak(&v23);
    objc_destroyWeak(&v25);
  }
  if (sub_100CD3150())
  {
    uint64_t v6 = *(void *)(a1 + 40);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    _DWORD v20[2] = sub_10083A464;
    void v20[3] = &unk_1012E8290;
    objc_copyWeak(&v21, (id *)(a1 + 56));
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    void v18[2] = sub_10083A4B4;
    void v18[3] = &unk_1012E6998;
    objc_copyWeak(&v19, (id *)(a1 + 56));
    uint64_t v7 = [v3 addSwitchRowWithTitle:v6 get:v20 set:v18];
    [v7 setConfigureCollectionViewCellBlock:&stru_1012FA318];

    objc_destroyWeak(&v19);
    objc_destroyWeak(&v21);
  }
  if (sub_100CD31B0())
  {
    uint64_t v8 = *(void *)(a1 + 48);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    void v16[2] = sub_10083A630;
    v16[3] = &unk_1012E8290;
    id v9 = (id *)(a1 + 56);
    objc_copyWeak(&v17, v9);
    int v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472;
    uint64_t v13 = sub_10083A680;
    id v14 = &unk_1012E6998;
    objc_copyWeak(&v15, v9);
    id v10 = [v3 addSwitchRowWithTitle:v8 get:v16 set:&v11];
    [v10 setConfigureCollectionViewCellBlock:&stru_1012FA338 v11, v12, v13, v14];

    objc_destroyWeak(&v15);
    objc_destroyWeak(&v17);
  }
}

void sub_10083A268(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_10083A298(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained walkPreferences];
  id v3 = [v2 avoidHills];

  return v3;
}

void sub_10083A2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [WalkPreferences alloc];
  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v5);
  uint64_t v7 = [WeakRetained walkPreferences];
  id v8 = [v7 avoidBusyRoads];
  id v9 = objc_loadWeakRetained(v5);
  id v10 = [v9 walkPreferences];
  id v11 = [v10 avoidStairs];
  uint64_t v12 = +[NSUserDefaults standardUserDefaults];
  uint64_t v13 = [(WalkPreferences *)v4 initWithAvoidHills:a2 avoidBusyRoads:v8 avoidStairs:v11 defaults:v12];
  id v14 = objc_loadWeakRetained(v5);
  [v14 setWalkPreferences:v13];

  id v15 = objc_loadWeakRetained(v5);
  [v15 _updateHasUnsavedChanges];

  if (a2) {
    uint64_t v16 = 5035;
  }
  else {
    uint64_t v16 = 5036;
  }
  id v18 = +[MKMapService sharedService];
  id v17 = objc_loadWeakRetained(v5);
  [v18 captureUserAction:v16 onTarget:[v17 analyticsTarget] eventValue:@"WALKING"];
}

void sub_10083A45C(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
}

id sub_10083A464(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained walkPreferences];
  id v3 = [v2 avoidBusyRoads];

  return v3;
}

void sub_10083A4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [WalkPreferences alloc];
  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v5);
  uint64_t v7 = [WeakRetained walkPreferences];
  id v8 = [v7 avoidHills];
  id v9 = objc_loadWeakRetained(v5);
  id v10 = [v9 walkPreferences];
  id v11 = [v10 avoidStairs];
  uint64_t v12 = +[NSUserDefaults standardUserDefaults];
  uint64_t v13 = [(WalkPreferences *)v4 initWithAvoidHills:v8 avoidBusyRoads:a2 avoidStairs:v11 defaults:v12];
  id v14 = objc_loadWeakRetained(v5);
  [v14 setWalkPreferences:v13];

  id v15 = objc_loadWeakRetained(v5);
  [v15 _updateHasUnsavedChanges];

  if (a2) {
    uint64_t v16 = 5033;
  }
  else {
    uint64_t v16 = 5034;
  }
  id v18 = +[MKMapService sharedService];
  id v17 = objc_loadWeakRetained(v5);
  [v18 captureUserAction:v16 onTarget:[v17 analyticsTarget] eventValue:@"WALKING"];
}

void sub_10083A628(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
}

id sub_10083A630(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained walkPreferences];
  id v3 = [v2 avoidStairs];

  return v3;
}

void sub_10083A680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [WalkPreferences alloc];
  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v5);
  uint64_t v7 = [WeakRetained walkPreferences];
  id v8 = [v7 avoidHills];
  id v9 = objc_loadWeakRetained(v5);
  id v10 = [v9 walkPreferences];
  id v11 = [v10 avoidBusyRoads];
  uint64_t v12 = +[NSUserDefaults standardUserDefaults];
  uint64_t v13 = [(WalkPreferences *)v4 initWithAvoidHills:v8 avoidBusyRoads:v11 avoidStairs:a2 defaults:v12];
  id v14 = objc_loadWeakRetained(v5);
  [v14 setWalkPreferences:v13];

  id v15 = objc_loadWeakRetained(v5);
  [v15 _updateHasUnsavedChanges];

  if (a2) {
    uint64_t v16 = 5037;
  }
  else {
    uint64_t v16 = 5038;
  }
  id v18 = +[MKMapService sharedService];
  id v17 = objc_loadWeakRetained(v5);
  [v18 captureUserAction:v16 onTarget:[v17 analyticsTarget] eventValue:@"WALKING"];
}

void sub_10083A7F4(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
}

void sub_10083A948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_10083A978(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) titleForFooterInSection:*(void *)(a1 + 48)];
  [v3 setFooter:v4];

  if (!*(void *)(a1 + 56))
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    id v12[2] = sub_10083AB34;
    void v12[3] = &unk_1012EE2C0;
    uint64_t v14 = *(void *)(a1 + 64);
    id v5 = *(id *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 48);
    id v13 = v5;
    uint64_t v15 = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10083ACA8;
    void v10[3] = &unk_1012EE2E8;
    objc_copyWeak(&v11, (id *)(a1 + 40));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10083AE68;
    _OWORD v8[3] = &unk_1012EE310;
    objc_copyWeak(&v9, (id *)(a1 + 40));
    id v7 = [v3 addCheckmarkRowsGroupWithContent:v12 get:v10 set:v8];
    objc_destroyWeak(&v9);
    objc_destroyWeak(&v11);
  }
}

void sub_10083AB18(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  _Unwind_Resume(a1);
}

void sub_10083AB34(void *a1, void *a2)
{
  id v3 = a2;
  [v3 setAllowMultipleSelection:1];
  [v3 setMinimumSelectionCount:1];
  if ((uint64_t)a1[5] >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      id v5 = (void *)a1[4];
      uint64_t v6 = +[NSIndexPath indexPathForRow:v4 inSection:a1[6]];
      id v7 = [v5 _modeForIndexPath:v6];

      id v8 = sub_100BA6F44((uint64_t)v7);
      id v9 = +[NSNumber numberWithUnsignedInteger:v7];
      id v10 = [v3 addRowWithTitle:v8 value:v9];

      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      void v11[2] = sub_10083AC9C;
      void v11[3] = &unk_1012FA380;
      void v11[4] = v7;
      [v10 setConfigureCollectionViewCellBlock:v11];

      ++v4;
    }
    while (v4 < a1[5]);
  }
}

id sub_10083AC9C(uint64_t a1, void *a2)
{
  return [a2 _maps_annotateViewForTransitPreferenceMode:*(void *)(a1 + 32)];
}

id sub_10083ACA8(uint64_t a1)
{
  if (qword_10160FBC0 != -1) {
    dispatch_once(&qword_10160FBC0, &stru_1012FA408);
  }
  id v2 = (id)qword_10160FBB8;
  id v16 = [v2 mutableCopy];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v18;
    id v7 = (id *)(a1 + 32);
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        id v10 = [v9 integerValue];
        id WeakRetained = objc_loadWeakRetained(v7);
        uint64_t v12 = [WeakRetained transitDataSource];
        id v13 = [v12 preferences];
        LODWORD(v10) = [v13 isModeDisabled:v10];

        if (v10) {
          [v16 removeObject:v9];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v5);
  }

  id v14 = [v16 copy];

  return v14;
}

void sub_10083AE68(id *a1, void *a2)
{
  id v3 = [a2 integerValue];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained transitDataSource];
  uint64_t v6 = [v5 preferences];
  [v6 toggleModeEnabled:v3];

  id v7 = objc_loadWeakRetained(a1);
  [v7 _updateHasUnsavedChanges];
}

void sub_10083B138(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10083B168(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_10083B1A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_10083B3EC;
  void v17[3] = &unk_1012E8290;
  objc_copyWeak(&v18, (id *)(a1 + 48));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_10083B43C;
  void v15[3] = &unk_1012E6998;
  objc_copyWeak(&v16, (id *)(a1 + 48));
  id v5 = [v3 addSwitchRowWithTitle:v4 get:v17 set:v15];
  [v5 setConfigureCollectionViewCellBlock:&stru_1012FA3C8];
  uint64_t v6 = *(void *)(a1 + 40);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10083B5B8;
  void v13[3] = &unk_1012E8290;
  objc_copyWeak(&v14, (id *)(a1 + 48));
  id v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472;
  id v10 = sub_10083B608;
  id v11 = &unk_1012E6998;
  objc_copyWeak(&v12, (id *)(a1 + 48));
  id v7 = [v3 addSwitchRowWithTitle:v6 get:v13 set:&v8];
  [v7 setConfigureCollectionViewCellBlock:&stru_1012FA3E8 v8, v9, v10, v11];

  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);

  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
}

void sub_10083B3B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_10083B3EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained cyclePreferences];
  id v3 = [v2 avoidHills];

  return v3;
}

void sub_10083B43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [CyclePreferences alloc];
  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v5);
  id v7 = [WeakRetained cyclePreferences];
  id v8 = [v7 avoidBusyRoads];
  id v9 = objc_loadWeakRetained(v5);
  id v10 = [v9 cyclePreferences];
  id v11 = [v10 ebike];
  id v12 = +[NSUserDefaults standardUserDefaults];
  id v13 = [(CyclePreferences *)v4 initWithAvoidHills:a2 avoidBusyRoads:v8 ebike:v11 defaults:v12];
  id v14 = objc_loadWeakRetained(v5);
  [v14 setCyclePreferences:v13];

  id v15 = objc_loadWeakRetained(v5);
  [v15 _updateHasUnsavedChanges];

  if (a2) {
    uint64_t v16 = 5035;
  }
  else {
    uint64_t v16 = 5036;
  }
  id v18 = +[MKMapService sharedService];
  id v17 = objc_loadWeakRetained(v5);
  [v18 captureUserAction:v16 onTarget:[v17 analyticsTarget] eventValue:@"BICYCLE"];
}

void sub_10083B5B0(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
}

id sub_10083B5B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained cyclePreferences];
  id v3 = [v2 avoidBusyRoads];

  return v3;
}

void sub_10083B608(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [CyclePreferences alloc];
  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v5);
  id v7 = [WeakRetained cyclePreferences];
  id v8 = [v7 avoidHills];
  id v9 = objc_loadWeakRetained(v5);
  id v10 = [v9 cyclePreferences];
  id v11 = [v10 ebike];
  id v12 = +[NSUserDefaults standardUserDefaults];
  id v13 = [(CyclePreferences *)v4 initWithAvoidHills:v8 avoidBusyRoads:a2 ebike:v11 defaults:v12];
  id v14 = objc_loadWeakRetained(v5);
  [v14 setCyclePreferences:v13];

  id v15 = objc_loadWeakRetained(v5);
  [v15 _updateHasUnsavedChanges];

  if (a2) {
    uint64_t v16 = 5033;
  }
  else {
    uint64_t v16 = 5034;
  }
  id v18 = +[MKMapService sharedService];
  id v17 = objc_loadWeakRetained(v5);
  [v18 captureUserAction:v16 onTarget:[v17 analyticsTarget] eventValue:@"BICYCLE"];
}

void sub_10083B77C(id a1, UICollectionViewCell *a2, UIListContentConfiguration *a3)
{
}

void sub_10083C430(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10083C460(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_10083C4A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"E-Bike" value:@"localized string not found" table:0];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10083C664;
  void v14[3] = &unk_1012E8290;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  id v11 = sub_10083C6B4;
  id v12 = &unk_1012E6998;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v6 = [v3 addSwitchRowWithTitle:v5 get:v14 set:&v9];

  id v7 = +[NSBundle mainBundle];
  id v8 = [v7 localizedStringForKey:@"[Route Planning, Cycling] E-bike toggle footer", @"localized string not found", 0 value table];
  [v3 setFooter:v8];

  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
}

void sub_10083C644(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_10083C664(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained cyclePreferences];
  id v3 = [v2 ebike];

  return v3;
}

void sub_10083C6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = [CyclePreferences alloc];
  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v5);
  id v7 = [WeakRetained cyclePreferences];
  id v8 = [v7 avoidHills];
  id v9 = objc_loadWeakRetained(v5);
  uint64_t v10 = [v9 cyclePreferences];
  id v11 = [v10 avoidBusyRoads];
  id v12 = +[NSUserDefaults standardUserDefaults];
  id v13 = [(CyclePreferences *)v4 initWithAvoidHills:v8 avoidBusyRoads:v11 ebike:a2 defaults:v12];
  id v14 = objc_loadWeakRetained(v5);
  [v14 setCyclePreferences:v13];

  id v15 = objc_loadWeakRetained(v5);
  [v15 _updateHasUnsavedChanges];

  if (a2) {
    uint64_t v16 = 2173;
  }
  else {
    uint64_t v16 = 2185;
  }
  id v18 = +[MKMapService sharedService];
  id v17 = objc_loadWeakRetained(v5);
  [v18 captureUserAction:v16 onTarget:[v17 analyticsTarget] eventValue:@"BICYCLE"];
}

void sub_10083CBF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10083CCB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10083CE2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10083DC2C(uint64_t a1)
{
  id v26 = [(id)objc_opt_class() _topFilterLayerBackgroundColor];
  id v2 = kCAFilterPlusD;
  id v3 = kCAFilterColorBurnBlendMode;
  [*(id *)(*(void *)(a1 + 32) + 16) setHidden:0];
  switch((unint64_t)[*(id *)(a1 + 32) appearance])
  {
    case 0uLL:
      double v4 = 0.396078438;
      double v5 = 0.800000012;
      goto LABEL_6;
    case 1uLL:
      id v6 = kCAFilterPlusL;

      uint64_t v7 = +[UIColor colorWithWhite:1.0 alpha:0.0599999987];

      id v8 = kCAFilterOverlayBlendMode;
      id v9 = +[UIColor colorWithWhite:1.0 alpha:0.25];
      id v26 = (id)v7;
      id v2 = v6;
      id v3 = v8;
      break;
    case 2uLL:
      double v4 = 0.396078438;
      double v5 = 0.400000006;
      goto LABEL_6;
    case 3uLL:
      double v4 = 0.156862751;
      double v5 = 1.0;
LABEL_6:
      id v9 = +[UIColor colorWithRed:v4 green:v4 blue:v4 alpha:v5];
      break;
    case 4uLL:
      id v10 = kCAFilterOverlayBlendMode;

      id v9 = +[UIColor colorWithRed:0.0392156877 green:0.0392156877 blue:0.470588237 alpha:0.0500000007];
      goto LABEL_13;
    case 5uLL:
      [*(id *)(*(void *)(a1 + 32) + 16) setHidden:1];
      id v11 = [*(id *)(a1 + 32) traitCollection];
      id v12 = [v11 userInterfaceStyle];

      id v10 = kCAFilterOverlayBlendMode;
      if (v12 == (id)2)
      {
        uint64_t v13 = +[UIColor colorWithWhite:0.0 alpha:0.0500000007];

        +[UIColor clearColor];
      }
      else
      {
        uint64_t v13 = +[UIColor colorWithRed:0.0 green:0.0274509806 blue:0.0980392173 alpha:0.0500000007];

        +[UIColor colorWithRed:0.0 green:0.0274509806 blue:0.0980392173 alpha:0.720000029];
      id v9 = };
      id v26 = (id)v13;
LABEL_13:
      id v3 = v10;
      break;
    default:
      id v9 = 0;
      break;
  }
  id v14 = [*(id *)(*(void *)(a1 + 32) + 16) layer];
  [v14 setCompositingFilter:v3];

  id v15 = [*(id *)(*(void *)(a1 + 32) + 8) layer];
  [v15 setCompositingFilter:v2];

  id v16 = [*(id *)(a1 + 32) roundedCornersStyle];
  id v17 = *(id **)(a1 + 32);
  if (v16 == (id)2)
  {
    [v17 setClipsToBounds:0];
    id v18 = +[UIColor clearColor];
    [*(id *)(*(void *)(a1 + 32) + 16) setBackgroundColor:v18];

    long long v19 = [*(id *)(a1 + 32) _roundedCornersResizableImageWithColor:v9];
    [*(id *)(*(void *)(a1 + 32) + 16) setImage:v19];

    [*(id *)(*(void *)(a1 + 32) + 8) setBackgroundColor:0];
    long long v20 = [*(id *)(a1 + 32) _roundedCornersResizableImageWithColor:v26];
    [*(id *)(*(void *)(a1 + 32) + 8) setImage:v20];
  }
  else
  {
    [v17[2] setImage:0];
    [*(id *)(*(void *)(a1 + 32) + 16) setBackgroundColor:v9];
    [*(id *)(*(void *)(a1 + 32) + 8) setImage:0];
    [*(id *)(*(void *)(a1 + 32) + 8) setBackgroundColor:v26];
    id v21 = [*(id *)(a1 + 32) roundedCornersStyle];
    unint64_t v22 = [*(id *)(a1 + 32) layer];
    id v23 = v22;
    if (v21 == (id)1)
    {
      [v22 setCornerRadius:5.0];

      unint64_t v24 = *(void **)(a1 + 32);
      uint64_t v25 = 1;
    }
    else
    {
      [v22 setCornerRadius:0.0];

      unint64_t v24 = *(void **)(a1 + 32);
      uint64_t v25 = 0;
    }
    [v24 setClipsToBounds:v25];
  }
}

void sub_10083E3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10083E3EC(uint64_t a1, void *a2)
{
}

BOOL sub_10083E400(uint64_t a1, uint64_t a2)
{
  id v2 = [*(id *)(a1 + 32) resolvedGEOPlaceCollectionForMapsSyncHistoryCuratedCollection:a2];
  BOOL v3 = v2 == 0;

  return v3;
}

id sub_10083E43C(id a1, MSHistoryCuratedCollection *a2, unint64_t a3)
{
  return [(MSHistoryCuratedCollection *)a2 mapItemIdentifier];
}

void sub_10083E444(uint64_t a1, void *a2, void *a3)
{
  double v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _mergeCollections:v6 error:v5];
}

uint64_t sub_10083ED40(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
        goto LABEL_36;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 56;
        goto LABEL_36;
      case 3u:
        id v15 = objc_alloc_init((Class)GEOMapItemStorage);
        uint64_t v16 = 40;
        goto LABEL_25;
      case 4u:
        id v15 = objc_alloc_init((Class)GEOStorageCompletion);
        uint64_t v16 = 8;
        goto LABEL_25;
      case 5u:
        id v15 = objc_alloc_init((Class)GEOLatLng);
        uint64_t v16 = 16;
LABEL_25:
        objc_storeStrong((id *)(a1 + v16), v15);
        if PBReaderPlaceMark() && (objc_msgSend(v15, "readFrom:", a2, 0, 0))
        {
          PBReaderRecallMark();

LABEL_41:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 6u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v19 |= (unint64_t)(v21 & 0x7F) << v17;
            if (v21 < 0)
            {
              v17 += 7;
              BOOL v9 = v18++ >= 9;
              if (v9)
              {
                LODWORD(v19) = 0;
                goto LABEL_40;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_40:
        *(_DWORD *)(a1 + 32) = v19;
        goto LABEL_41;
      case 7u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 24;
LABEL_36:
        unint64_t v22 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_41;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_41;
    }
  }
}

void sub_1008403F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if (![a3 unsignedIntegerValue]) {
    [*(id *)(a1 + 32) removeObject:v5];
  }
}

void sub_1008413B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1008413DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    char v4 = WeakRetained;
    unsigned int v3 = [WeakRetained active];
    uint64_t v2 = v4;
    if (v3)
    {
      [v4 _setNeedsSnapshotUpdateAnimated:1];
      uint64_t v2 = v4;
    }
  }
}

id sub_100841584(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = [v1 cell];
  }
  else
  {
    id v2 = v1;
  }
  unsigned int v3 = v2;

  return v3;
}

void sub_100841A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100841A4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (uint64_t)[v3 type];
  uint64_t v5 = 1;
  if (v4 <= 5)
  {
    if (v4)
    {
      if (v4 == 5)
      {
        unint64_t v6 = [v3 geoMapItem];
        uint64_t v5 = v6 != 0;
      }
      goto LABEL_9;
    }
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  if (v4 == 6) {
    goto LABEL_8;
  }
  if (v4 == 20)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v5 = (uint64_t)[WeakRetained _shouldShowEntryOfTypeVehicleSetup:v3];
  }
LABEL_9:

  return v5;
}

void sub_1008424E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10084250C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = WeakRetained;
    unsigned int v3 = [WeakRetained active];
    id v2 = v4;
    if (v3)
    {
      [v4 _setNeedsSnapshotUpdateAnimated:1];
      id v2 = v4;
    }
  }
}

void sub_1008427D4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) filteredRecents:*(void *)(a1 + 40) excludingDuplicatesOfEntries:&__NSArray0__struct];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008428B8;
  block[3] = &unk_1012E96B8;
  objc_copyWeak(&v7, (id *)(a1 + 56));
  id v5 = v2;
  id v6 = *(id *)(a1 + 48);
  id v3 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v7);
}

void sub_1008428B8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 33, *(id *)(a1 + 32));
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    id WeakRetained = v3;
  }
}

id sub_100843210(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (*(void *)(a1 + 40) <= a3) {
    return 0;
  }
  else {
    return [*(id *)(a1 + 32) _shouldDisplayObject:a2];
  }
}

BOOL sub_1008436C4(uint64_t a1, void *a2)
{
  return [a2 type] == *(id *)(a1 + 32);
}

NSString *__cdecl sub_100843E8C(id a1, id a2, unint64_t a3)
{
  id v3 = (objc_class *)objc_opt_class();

  return NSStringFromClass(v3);
}

void sub_100844468(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 setAlpha:v1];
}

NSString *__cdecl sub_1008444BC(id a1, MapsUIDiffableDataSourceIdentifiable *a2, unint64_t a3)
{
  return (NSString *)sub_1000A4B98(a2);
}

NSString *__cdecl sub_1008444C4(id a1, MapsUIDiffableDataSourceIdentifiable *a2, unint64_t a3)
{
  return (NSString *)sub_1000A4B98(a2);
}

NSString *__cdecl sub_1008444CC(id a1, MapsUIDiffableDataSourceIdentifiable *a2, unint64_t a3)
{
  return (NSString *)sub_1000A4B98(a2);
}

void sub_10084569C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1008456B4(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)a1[4];
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 3221225472;
  unsigned int v18 = sub_100845878;
  uint64_t v19 = &unk_1012FA848;
  id v5 = v3;
  id v20 = v5;
  id v6 = sub_1000990A8(v4, &v16);
  unsigned int v7 = [v5 hasOrthogonalLayout:v16, v17, v18, v19];
  char v8 = (void *)a1[5];
  if (v7)
  {
    id v22 = v5;
    BOOL v9 = +[NSArray arrayWithObjects:&v22 count:1];
    if (!v6)
    {
      uint64_t v12 = [v8 _maps_appendIdentifiersForSection:v5 items:v9 reloadingChangesFromPreviousItems:0];
      goto LABEL_6;
    }
    id v21 = v5;
    uint64_t v10 = +[NSArray arrayWithObjects:&v21 count:1];
  }
  else
  {
    BOOL v9 = [v5 contents];
    uint64_t v10 = [v6 contents];
  }
  id v11 = (void *)v10;
  uint64_t v12 = [v8 _maps_appendIdentifiersForSection:v5 items:v9 reloadingChangesFromPreviousItems:v10];

LABEL_6:
  uint64_t v13 = [*(id *)(*(void *)(a1[6] + 8) + 40) differenceUnionWithDifference:v12];
  uint64_t v14 = *(void *)(a1[6] + 8);
  id v15 = *(void **)(v14 + 40);
  *(void *)(v14 + 40) = v13;
}

BOOL sub_100845878(uint64_t a1, void *a2)
{
  id v3 = [a2 type];
  return v3 == [*(id *)(a1 + 32) type];
}

void sub_1008458B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 208);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100845A40;
  void v13[3] = &unk_1012FA848;
  id v5 = v3;
  id v14 = v5;
  id v6 = sub_1000990A8(v4, v13);
  if (!v6)
  {
    unsigned int v7 = [MapsUIDiffableDataSourceSnapshotDifference alloc];
    if ([v5 hasOrthogonalLayout])
    {
      id v15 = v5;
      +[NSArray arrayWithObjects:&v15 count:1];
    }
    else
    {
      [v5 contents];
    char v8 = };
    BOOL v9 = [(MapsUIDiffableDataSourceSnapshotDifference *)v7 initWithReloadedItems:&__NSArray0__struct insertedItems:&__NSArray0__struct deletedItems:v8];

    uint64_t v10 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) differenceUnionWithDifference:v9];
    uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;
  }
}

BOOL sub_100845A40(uint64_t a1, void *a2)
{
  id v3 = [a2 type];
  return v3 == [*(id *)(a1 + 32) type];
}

void sub_1008463E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_10084645C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  unsigned int v7 = sub_1000A4B98(a2);
  unsigned int v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

  if (v8)
  {
    uint64_t v9 = +[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", a3, [*(id *)(a1 + 40) section]);
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    *a4 = 1;
  }
}

void sub_1008464F8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dequeueReusableCellWithIdentifier:*(void *)(a1 + 40) forIndexPath:*(void *)(a1 + 48)];
  id v3 = (objc_class *)objc_opt_class();
  sub_100846648(v2, v3);
  objc_claimAutoreleasedReturnValue();
  uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v2;

  sub_100841584(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40));
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  [v11 setDelegate:*(void *)(a1 + 56)];
  [v11 setSuggestionsDataProvider:*(void *)(*(void *)(a1 + 56) + 128)];
  id v6 = [*(id *)(a1 + 56) tableView];
  unsigned int v7 = [v6 traitCollection];
  +[ShortcutsRowTableViewCell cellHeightWithTraitCollection:v7];
  double v9 = v8;

  uint64_t v10 = [*(id *)(a1 + 56) tableView];
  [v10 bounds];
  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setBounds:0.0, 0.0, CGRectGetWidth(v13), v9];

  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) layoutIfNeeded];
}

id sub_100846648(void *a1, objc_class *a2)
{
  id v3 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    id v5 = [v4 cell];
    char isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) == 0)
    {
      id v7 = [a2 alloc];
      id v8 = [v4 style];
      double v9 = [v4 reuseIdentifier];
      id v10 = [v7 initWithStyle:v8 reuseIdentifier:v9];

      [v4 setCell:v10];
    }
  }

  return v3;
}

void sub_10084672C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dequeueReusableCellWithIdentifier:*(void *)(a1 + 40) forIndexPath:*(void *)(a1 + 48)];
  id v3 = (objc_class *)objc_opt_class();
  sub_100846648(v2, v3);
  objc_claimAutoreleasedReturnValue();
  uint64_t v4 = *(void *)(*(void *)(a1 + 64) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v2;

  sub_100841584(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40));
  id v16 = (id)objc_claimAutoreleasedReturnValue();
  id v6 = -[HomeCuratedCollectionsTableViewCellModel initWithResultDataProvider:delegate:]([HomeCuratedCollectionsTableViewCellModel alloc], "initWithResultDataProvider:delegate:", *(void *)(*(void *)(a1 + 56) + 152));
  [v16 setCellModel:v6];

  id v7 = [*(id *)(a1 + 56) tableView];
  id v8 = [v7 traitCollection];
  double v9 = [v16 cellModel];
  id v10 = [v9 exploreGuides];
  id v11 = [v16 cellModel];
  uint64_t v12 = [v11 curatedCollections];
  +[HomeCuratedCollectionsTableViewCell cellHeightWithTraitCollection:includeExploreGuidesHeight:collectionCount:](HomeCuratedCollectionsTableViewCell, "cellHeightWithTraitCollection:includeExploreGuidesHeight:collectionCount:", v8, v10 != 0, [v12 count] == (id)1);
  double v14 = v13;

  id v15 = [*(id *)(a1 + 56) tableView];
  [v15 bounds];
  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setBounds:0.0, 0.0, CGRectGetWidth(v18), v14];

  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) layoutIfNeeded];
}

void sub_100847014(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100847034(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _sectionHeaderButtonTappedWithHomeSection:*(void *)(a1 + 32)];
}

id sub_100847084(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [v2 tableView];
  [v2 tableView:v3 heightForHeaderInSection:*(void *)(a1 + 48)];
  double v5 = v4;

  id v6 = [*(id *)(a1 + 32) tableView];
  [v6 bounds];
  [*(id *)(a1 + 40) setBounds:0.0, 0.0, CGRectGetWidth(v10), v5];

  id v7 = *(void **)(a1 + 40);

  return [v7 layoutIfNeeded];
}

id sub_100847448(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) tableView];
  [v3 bounds];
  [v2 systemLayoutSizeFittingSize:CGRectGetWidth(v10) UILayoutFittingCompressedSize.height];
  double v5 = v4;

  id v6 = [*(id *)(a1 + 40) tableView];
  [v6 bounds];
  [*(id *)(a1 + 32) setBounds:0.0, 0.0, CGRectGetWidth(v11), v5];

  id v7 = *(void **)(a1 + 32);

  return [v7 layoutIfNeeded];
}

void sub_100847794(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1008477B0(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained deleteRowAtIndexPath:*(void *)(a1 + 32) completion:v4];
}

void sub_100847900(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10084791C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, 1);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained shareRowAtIndexPath:*(void *)(a1 + 32) completion:&stru_1012FA8E0];
}

void sub_100847A70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100847A8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100847B44;
  void v7[3] = &unk_1012E6EA8;
  id v8 = v3;
  id v6 = v3;
  [WeakRetained editLocationAtIndexPath:v5 completion:v7];
}

uint64_t sub_100847B44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100847DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100847DF0(uint64_t a1)
{
  uint64_t v2 = [HomeDeletion alloc];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = objc_alloc_init(IdentifierPath);
  id v7 = [(HomeDeletion *)v2 initWithObject:v3 indexPath:v4 identifierPath:v5 contextualActionCompletionHandler:*(void *)(a1 + 48)];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _beginDeletion:v7];
}

uint64_t sub_100847E98(uint64_t a1, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1008480E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008480FC(uint64_t a1)
{
  uint64_t v2 = [HomeDeletion alloc];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = objc_alloc_init(IdentifierPath);
  id v7 = [(HomeDeletion *)v2 initWithObject:v3 indexPath:v4 identifierPath:v5 contextualActionCompletionHandler:*(void *)(a1 + 48)];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _beginDeletion:v7];
}

uint64_t sub_1008481A4(uint64_t a1, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100848644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100848660(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  CGRect v10 = v9;
  if (v7 && !v9 && [v8 count])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    uint64_t v12 = WeakRetained;
    if (WeakRetained)
    {
      double v13 = [WeakRetained shareDelegate];
      double v14 = [v12 tableView];
      id v15 = [v14 cellForRowAtIndexPath:*(void *)(a1 + 40)];
      [v13 shareCuratedCollection:v7 withRefinedMapItems:v8 sourceView:v15 completion:*(void *)(a1 + 48)];
    }
  }
  else
  {
    id v16 = sub_10057611C();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      uint64_t v17 = [*(id *)(a1 + 32) identifier];
      CGRect v18 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v8 count]);
      int v20 = 138412802;
      id v21 = v17;
      __int16 v22 = 2112;
      id v23 = v18;
      __int16 v24 = 2112;
      uint64_t v25 = v10;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Cannot share collection with Id:%@ collectionCount:%@ error:%@", (uint8_t *)&v20, 0x20u);
    }
    uint64_t v19 = *(void *)(a1 + 48);
    if (v19) {
      (*(void (**)(void))(v19 + 16))();
    }
  }
}

void sub_100848984(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v7 = v3;
  if (v3)
  {
    uint64_t v5 = [v4 parkedCarActionDelegate];
    [v5 editLocationForParkedCar:v7];
  }
  else
  {
    uint64_t v5 = [v4 tableView];
    [v5 reloadData];
  }

  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(void))(v6 + 16))();
  }
}

void sub_100849114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a9);
  objc_destroyWeak((id *)(v10 - 160));
  _Unwind_Resume(a1);
}

void sub_100849160(uint64_t a1)
{
  uint64_t v2 = sub_1000AA148();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "HCP beginAsyncDelete: %@", (uint8_t *)&v6, 0xCu);
  }

  [*(id *)(a1 + 40) markAsTentativelyDeleted];
  uint64_t v4 = [*(id *)(a1 + 40) contextualActionCompletionHandler];
  v4[2](v4, 1);

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _setNeedsSnapshotUpdateAnimated:1];
}

void sub_10084924C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  int v6 = sub_1000AA148();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    CFStringRef v8 = @"NO";
    int v10 = 138412802;
    if (a2) {
      CFStringRef v8 = @"YES";
    }
    uint64_t v11 = v7;
    __int16 v12 = 2112;
    CFStringRef v13 = v8;
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "HCP endAsyncDelete: %@, success = %@, error = %@", (uint8_t *)&v10, 0x20u);
  }

  if ((a2 & 1) == 0 && ([*(id *)(a1 + 40) completed] & 1) == 0)
  {
    [*(id *)(a1 + 40) markAsCompletedWithSuccess:0 error:v5];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _setNeedsSnapshotUpdateAnimated:1];
  }
}

uint64_t sub_100849370(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100849380(uint64_t a1, int a2, uint64_t a3)
{
  int v6 = sub_1000AA148();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = *(void **)(a1 + 32);
    *(_DWORD *)id buf = 138412290;
    __int16 v14 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "HCP removeMapsSuggestionsEntry finished %@", buf, 0xCu);
  }

  CFStringRef v8 = NSStringFromMapsSuggestionsRemovalBehavior();
  [*(id *)(a1 + 32) type];
  id v9 = NSStringFromMapsSuggestionsEntryType();
  int v10 = +[NSString stringWithFormat:@"MSg,%@,%@", v8, v9];

  uint64_t v11 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)id buf = 138412546;
    __int16 v14 = v10;
    __int16 v15 = 1024;
    int v16 = a2;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "User deleted %@; didRemove:%d", buf, 0x12u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _captureSuggestionDeleteActionWithEntry:*(void *)(a1 + 32) behaviour:a3];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_100849538(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, BOOL, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2 == 0, a2);
}

uint64_t sub_100849554(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, BOOL, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2 == 0, a2);
}

void sub_100849570(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_1000AA148();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting recent: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

NSArray *__cdecl sub_10084B154(id a1, GEOTransitStepBadge *a2, unint64_t a3)
{
  return (NSArray *)[(GEOTransitStepBadge *)a2 _maps_artworkCluster];
}

int64_t sub_10084B6B4(id a1, VGChargingNetwork *a2, VGChargingNetwork *a3)
{
  int v4 = a3;
  id v5 = [(VGChargingNetwork *)a2 name];
  int v6 = [(VGChargingNetwork *)v4 name];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

VehicleLabelCell *__cdecl sub_10084BA60(id a1, VGChargingNetwork *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = [(VGChargingNetwork *)v3 name];

  if (v4)
  {
    id v5 = objc_opt_new();
    int v6 = [(VGChargingNetwork *)v3 name];
    [v5 setAccessibilityIdentifier:v6];

    id v7 = [(VGChargingNetwork *)v3 name];
    CFStringRef v8 = [v5 label];
    [v8 setText:v7];

    [v5 setAccessoryType:0];
  }
  else
  {
    id v9 = sub_1000519B4();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      __int16 v12 = v3;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to create a cell for network: %@", (uint8_t *)&v11, 0xCu);
    }

    id v5 = 0;
  }

  return (VehicleLabelCell *)v5;
}

BOOL sub_10084DB10(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 globalBrandID];
  id v7 = [*(id *)(a1 + 32) globalBrandID];
  if (v6 == v7) {
    *a4 = 1;
  }
  return v6 == v7;
}

id sub_10084DBDC(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 72) count];
  if (result)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    id v3 = *(id *)(*(void *)(a1 + 32) + 72);
    id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v9;
      do
      {
        id v7 = 0;
        do
        {
          if (*(void *)v9 != v6) {
            objc_enumerationMutation(v3);
          }
          [*(id *)(a1 + 32) _captureAnalyticsForRemovedNetwork:*(void *)(*((void *)&v8 + 1) + 8 * (void)v8) v8];
          id v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
      }
      while (v5);
    }

    return [*(id *)(*(void *)(a1 + 32) + 72) removeAllObjects];
  }
  return result;
}

void sub_10084EF70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, id *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
}

void sub_10084F00C(uint64_t a1, double a2, double a3)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v6 = WeakRetained;
    [WeakRetained[3] setCenterCoordinate:a2, a3];
    [v6 _didChangeCenterCoordinate:v6[3] fromEditLocationMapView:a2, a3];
    [v6[3] updateAnnotationTitleWithCenterCoordinate:a2, a3];
    [v6[9] dismissViewControllerAnimated:1 completion:0];
    id WeakRetained = v6;
  }
}

void sub_10084F0C4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained[9] dismissViewControllerAnimated:1 completion:0];
    id WeakRetained = v2;
  }
}

id sub_100850150(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _doAppleConnectAuthentication];
  *(unsigned char *)(*(void *)(a1 + 32) + 4_Block_object_dispose(&STACK[0x238], 8) = 1;
  return result;
}

id sub_10085022C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) setHidden:*(unsigned __int8 *)(a1 + 48)];
  [*(id *)(*(void *)(a1 + 32) + 24) setEnabled:*(unsigned char *)(a1 + 48) == 0];
  uint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = *(void *)(v2 + 40) == 1 || *(unsigned char *)(a1 + 48) == 0;
  [*(id *)(v2 + 32) setEnabled:v3];
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = *(void **)(*(void *)(a1 + 32) + 16);

  return [v5 setText:v4];
}

id sub_100850354(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:&stru_1012FABD8];
}

void *sub_1008504A0(void *result)
{
  uint64_t v1 = result[4];
  if (!*(void *)(v1 + 40))
  {
    uint64_t v2 = result;
    [*(id *)(v1 + 16) setText:@"Apple Connect Authentication taking unexpectedly long, Cancel?"];
    *(void *)(v2[4] + 40) = 1;
    BOOL v3 = *(void **)(v2[4] + 32);
    return [v3 setEnabled:1];
  }
  return result;
}

void sub_100850C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100850C34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained _didTapContent:WeakRetained[12]];
    id WeakRetained = v2;
  }
}

void sub_100851CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100851CC8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained[12] becomeFirstResponder];
    id WeakRetained = v2;
  }
}

void sub_100852DF4(id a1)
{
  id v3 = +[NSCharacterSet decimalDigitCharacterSet];
  uint64_t v1 = [v3 invertedSet];
  uint64_t v2 = (void *)qword_10160FBE8;
  qword_10160FBE8 = v1;
}

void sub_100853158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100853174(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showDatePicker];
}

void sub_100853BFC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) datePicker];
  [v1 _fieldDidChangeValue:v2];
}

void sub_10085487C(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 128) isCancelled]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = (uint64_t)[*(id *)(*(void *)(a1 + 32) + 128) isFinished];
  }
  [*(id *)(*(void *)(a1 + 32) + 128) fractionCompleted];
  double v4 = v3;
  id v6 = [*(id *)(a1 + 32) _progressView];
  [*(id *)(a1 + 32) _setProgressViewHidden:v2];
  if ((v2 & 1) == 0)
  {
    float v5 = v4;
    [v6 setProgress:1 animated:0 completion:v5];
  }
}

void sub_100854A44(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100854A60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = (id)*((void *)WeakRetained + 16);
    id v6 = (id *)WeakRetained;
    if (!v3 || (id v4 = objc_loadWeakRetained((id *)WeakRetained + 12), v4, v3 == v4))
    {
      float v5 = +[NSProgress progressWithTotalUnitCount:1];
      objc_storeWeak(v6 + 12, v5);
      [v6 setObservingProgress:v5];
    }
    else
    {
      float v5 = 0;
    }
    [v5 becomeCurrentWithPendingUnitCount:1];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    [v5 resignCurrent];

    id WeakRetained = v6;
  }
}

void sub_100855230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10085524C(uint64_t a1, void *a2)
{
  id v14 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    float v5 = [WeakRetained cellContentConfiguration];
    id v6 = [v4 title];
    [v5 setText:v6];

    id v7 = [v4[12] selectedElements];
    long long v8 = [v7 firstObject];
    long long v9 = [v8 title];
    [v5 setSecondaryText:v9];

    long long v10 = [v4 configureBlock];
    ((void (**)(void, id, void *))v10)[2](v10, v14, v5);

    [v14 setContentConfiguration:v5];
    long long v11 = [v14 contentView];
    [v11 setAccessibilityIdentifier:@"TextLabel"];

    __int16 v12 = [v4 title];
    CFStringRef v13 = [v14 contentView];
    [v13 setAccessibilityLabel:v12];
  }
}

void sub_100855520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10085553C(uint64_t a1, void *a2)
{
  id v14 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    float v5 = [WeakRetained cellContentConfiguration];
    id v6 = [v4 title];
    [v5 setText:v6];

    id v7 = [v4[12] selectedElements];
    long long v8 = [v7 firstObject];
    long long v9 = [v8 title];
    [v5 setSecondaryText:v9];

    long long v10 = [v4 configureCollectionViewCellBlock];
    ((void (**)(void, id, void *))v10)[2](v10, v14, v5);

    [v14 setContentConfiguration:v5];
    long long v11 = [v14 contentView];
    [v11 setAccessibilityIdentifier:@"TextLabel"];

    __int16 v12 = [v4 title];
    CFStringRef v13 = [v14 contentView];
    [v13 setAccessibilityLabel:v12];
  }
}

void sub_1008559AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1008559E8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  float v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_storeStrong(WeakRetained + 12, a2);
    [*(id *)(a1 + 32) setNeedsUpdateConfiguration];
  }
}

double -[TransitDirectionsBlockTransferStepView _blockTransferImageOffsetFromPrimaryLabelBaseline](TransitDirectionsBlockTransferStepView *self, SEL a2)
{
  uint64_t v2 = [(_MKUILabel *)self->_primaryLabel font];
  [v2 capHeight];
  double v4 = v3 * 0.5;

  return v4;
}

id sub_100859D4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) valueForKey:*(void *)(a1 + 40)];
}

id sub_100859D58(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setValue:a2 forKey:*(void *)(a1 + 40)];
}

void sub_10085A7F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

id sub_10085A814(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = [WeakRetained valueForKeyInAllMapLayers:*(void *)(a1 + 32)];
  id v4 = [v3 BOOLValue];

  return v4;
}

void sub_10085A86C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = +[NSNumber numberWithBool:a2];
  [WeakRetained setValue:v4 forKeyInAllMapLayers:*(void *)(a1 + 32)];
}

void sub_10085AA2C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_10085AA48()
{
  return MapsFeature_IsEnabled();
}

void sub_10085AA54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = +[NSNumber numberWithBool:MapsFeature_SetEnabled()];
  uint64_t v3 = NSStringFromSelector(*(SEL *)(a1 + 56));
  [WeakRetained setValue:v2 forKeyInAllMapLayers:v3];
}

void sub_10085AC64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

id sub_10085AC80(uint64_t a1)
{
  uint64_t v2 = +[VKDebugSettings sharedSettings];
  uint64_t v3 = [v2 valueForKey:*(void *)(a1 + 32)];
  id v4 = [v3 BOOLValue];

  return v4;
}

void sub_10085ACE0(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  float v5 = +[NSNumber numberWithBool:a2];
  [v4 setValue:v5 forKey:*(void *)(a1 + 32)];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _setAllMapLayersNeedLayout];
}

void sub_10085AF68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

BOOL sub_10085AF84(id a1)
{
  uint64_t v1 = +[MIController sharedController];
  unsigned __int8 v2 = [v1 isActive];

  return v2;
}

void sub_10085AFC4(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v4 = [WeakRetained delegate];
    id v8 = [v4 allVisibleMapViewsForDebugController:*(void *)(a1 + 32)];

    float v5 = +[MIController sharedController];
    id v6 = [v8 objectAtIndexedSubscript:0];
    id v7 = [v6 _mapLayer];
    [v5 activateController:v7];
  }
  else
  {
    id v8 = +[MIController sharedController];
    [v8 deactivateController];
  }
}

void sub_10085B18C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10085B1B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v102[0] = _NSConcreteStackBlock;
  v102[1] = 3221225472;
  v102[2] = sub_10085BF9C;
  v102[3] = &unk_1012FAE80;
  objc_copyWeak(v104, (id *)(a1 + 40));
  id v103 = *(id *)(a1 + 32);
  id v4 = [v3 addNavigationRowWithTitle:@"Console" viewControllerContent:v102];
  v100[0] = _NSConcreteStackBlock;
  v100[1] = 3221225472;
  v100[2] = sub_10085C2DC;
  v100[3] = &unk_1012F1368;
  id v101 = *(id *)(a1 + 32);
  id v5 = [v3 addNavigationRowWithTitle:@"Tiles" viewControllerContent:v100];
  v98[0] = _NSConcreteStackBlock;
  v98[1] = 3221225472;
  v98[2] = sub_10085C8B8;
  v98[3] = &unk_1012FB070;
  objc_copyWeak(&v99, (id *)(a1 + 40));
  id v6 = [v3 addNavigationRowWithTitle:@"Renderer" viewControllerContent:v98];
  v96[0] = _NSConcreteStackBlock;
  v96[1] = 3221225472;
  v96[2] = sub_10085D484;
  v96[3] = &unk_1012FB070;
  objc_copyWeak(&v97, (id *)(a1 + 40));
  id v7 = [v3 addNavigationRowWithTitle:@"Camera" viewControllerContent:v96];
  id v8 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v9 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v10 = [v3 addNavigationRowWithTitle:@"Animation" viewControllerContent:&stru_1012FB438];
  v94[0] = _NSConcreteStackBlock;
  v94[1] = 3221225472;
  v94[2] = sub_10085ED84;
  v94[3] = &unk_1012FB070;
  objc_copyWeak(&v95, (id *)(a1 + 40));
  id v11 = [v3 addNavigationRowWithTitle:@"Map Types" viewControllerContent:v94];
  v92[0] = _NSConcreteStackBlock;
  v92[1] = 3221225472;
  v92[2] = sub_10085FC94;
  v92[3] = &unk_1012FB070;
  objc_copyWeak(&v93, (id *)(a1 + 40));
  id v12 = [v3 addNavigationRowWithTitle:@"Styles" viewControllerContent:v92];
  id v13 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  v90[0] = _NSConcreteStackBlock;
  v90[1] = 3221225472;
  v90[2] = sub_1008603A8;
  v90[3] = &unk_1012FB070;
  objc_copyWeak(&v91, (id *)(a1 + 40));
  id v14 = [v3 addNavigationRowWithTitle:@"Performance" viewControllerContent:v90];
  v88[0] = _NSConcreteStackBlock;
  v88[1] = 3221225472;
  v88[2] = sub_100860560;
  v88[3] = &unk_1012E6708;
  char v47 = &v89;
  objc_copyWeak(&v89, (id *)(a1 + 40));
  id v15 = [v3 addButtonRowWithTitle:@"Share View as URL" action:v88];
  v86[0] = _NSConcreteStackBlock;
  v86[1] = 3221225472;
  v86[2] = sub_10086075C;
  v86[3] = &unk_1012FB070;
  char v46 = &v87;
  objc_copyWeak(&v87, (id *)(a1 + 40));
  id v16 = [v3 addNavigationRowWithTitle:@"Debug Display Settings" viewControllerContent:v86];
  v84[0] = _NSConcreteStackBlock;
  v84[1] = 3221225472;
  v84[2] = sub_100860EA4;
  v84[3] = &unk_1012FB070;
  unint64_t v45 = &v85;
  objc_copyWeak(&v85, (id *)(a1 + 40));
  id v17 = [v3 addNavigationRowWithTitle:@"Logics" viewControllerContent:v84];
  v81[0] = _NSConcreteStackBlock;
  v81[1] = 3221225472;
  v81[2] = sub_100861274;
  v81[3] = &unk_1012FAE80;
  uint64_t v44 = &v83;
  objc_copyWeak(&v83, (id *)(a1 + 40));
  id v82 = *(id *)(a1 + 32);
  id v18 = [v3 addNavigationRowWithTitle:@"Labels" viewControllerContent:v81];
  v79[0] = _NSConcreteStackBlock;
  v79[1] = 3221225472;
  v79[2] = sub_1008646B8;
  v79[3] = &unk_1012FB070;
  unsigned int v43 = &v80;
  objc_copyWeak(&v80, (id *)(a1 + 40));
  id v19 = [v3 addNavigationRowWithTitle:@"Transit" viewControllerContent:v79];
  v77[0] = _NSConcreteStackBlock;
  v77[1] = 3221225472;
  v77[2] = sub_100864918;
  v77[3] = &unk_1012FB070;
  char v42 = &v78;
  objc_copyWeak(&v78, (id *)(a1 + 40));
  id v20 = [v3 addNavigationRowWithTitle:@"AR Walking" viewControllerContent:v77];
  v74[0] = _NSConcreteStackBlock;
  v74[1] = 3221225472;
  v74[2] = sub_100867FD0;
  v74[3] = &unk_1012FAE80;
  char v41 = &v76;
  objc_copyWeak(&v76, (id *)(a1 + 40));
  id v75 = *(id *)(a1 + 32);
  id v21 = [v3 addNavigationRowWithTitle:@"Navigation" viewControllerContent:v74];
  v72[0] = _NSConcreteStackBlock;
  v72[1] = 3221225472;
  v72[2] = sub_1008695C8;
  v72[3] = &unk_1012FB070;
  unint64_t v40 = &v73;
  objc_copyWeak(&v73, (id *)(a1 + 40));
  id v22 = [v3 addNavigationRowWithTitle:@"Traffic" viewControllerContent:v72];
  v69[0] = _NSConcreteStackBlock;
  v69[1] = 3221225472;
  v69[2] = sub_100869854;
  v69[3] = &unk_1012FAE80;
  uint64_t v39 = &v71;
  objc_copyWeak(&v71, (id *)(a1 + 40));
  id v70 = *(id *)(a1 + 32);
  id v23 = [v3 addNavigationRowWithTitle:@"Buildings" viewControllerContent:v69];
  v66[0] = _NSConcreteStackBlock;
  v66[1] = 3221225472;
  v66[2] = sub_100869D24;
  v66[3] = &unk_1012FAE80;
  uint64_t v38 = &v68;
  objc_copyWeak(&v68, (id *)(a1 + 40));
  id v67 = *(id *)(a1 + 32);
  id v24 = [v3 addNavigationRowWithTitle:@"Altitude" viewControllerContent:v66];
  v64[0] = _NSConcreteStackBlock;
  v64[1] = 3221225472;
  v64[2] = sub_10086A5F0;
  v64[3] = &unk_1012FB070;
  id location = &v65;
  objc_copyWeak(&v65, (id *)(a1 + 40));
  id v25 = [v3 addNavigationRowWithTitle:@"Map Inspector" viewControllerContent:v64];
  v62[0] = _NSConcreteStackBlock;
  v62[1] = 3221225472;
  v62[2] = sub_10086A7E4;
  v62[3] = &unk_1012FB070;
  objc_copyWeak(&v63, (id *)(a1 + 40));
  id v26 = [v3 addNavigationRowWithTitle:@"Flyover Tours" viewControllerContent:v62];
  v60[0] = _NSConcreteStackBlock;
  v60[1] = 3221225472;
  v60[2] = sub_10086AFB0;
  v60[3] = &unk_1012FB070;
  objc_copyWeak(&v61, (id *)(a1 + 40));
  id v27 = [v3 addNavigationRowWithTitle:@"Flyover AR" viewControllerContent:v60];
  v58[0] = _NSConcreteStackBlock;
  v58[1] = 3221225472;
  v58[2] = sub_10086B378;
  v58[3] = &unk_1012FB070;
  objc_copyWeak(&v59, (id *)(a1 + 40));
  id v28 = [v3 addNavigationRowWithTitle:@"Lighting" viewControllerContent:v58];
  v56[0] = _NSConcreteStackBlock;
  v56[1] = 3221225472;
  v56[2] = sub_10086DD4C;
  v56[3] = &unk_1012FB070;
  objc_copyWeak(&v57, (id *)(a1 + 40));
  id v29 = [v3 addNavigationRowWithTitle:@"Flyover Unification" viewControllerContent:v56];
  id v30 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  char v31 = +[GEOResourceManifestManager modernManager];
  unsigned int v32 = [v31 isMuninEnabled];

  if (v32)
  {
    v53[0] = _NSConcreteStackBlock;
    v53[1] = 3221225472;
    v53[2] = sub_10086F17C;
    void v53[3] = &unk_1012FAE80;
    objc_copyWeak(&v55, (id *)(a1 + 40));
    id v54 = *(id *)(a1 + 32);
    id v33 = [v3 addNavigationRowWithTitle:@"Munin" viewControllerContent:v53];

    objc_destroyWeak(&v55);
  }
  if (+[VKMapView _elevatedGroundIsAvailable])
  {
    v50[0] = _NSConcreteStackBlock;
    v50[1] = 3221225472;
    v50[2] = sub_100871664;
    v50[3] = &unk_1012FAE80;
    objc_copyWeak(&v52, (id *)(a1 + 40));
    id v51 = *(id *)(a1 + 32);
    id v34 = [v3 addNavigationRowWithTitle:@"DaVinci" viewControllerContent:v50];

    objc_destroyWeak(&v52);
  }
  if (MapsFeature_IsEnabled_HikingiOS())
  {
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 3221225472;
    v48[2] = sub_100877858;
    v48[3] = &unk_1012FB070;
    objc_copyWeak(&v49, (id *)(a1 + 40));
    id v35 = [v3 addNavigationRowWithTitle:@"Hiking iOS" viewControllerContent:v48];
    objc_destroyWeak(&v49);
  }
  objc_destroyWeak(&v57);
  objc_destroyWeak(&v59);
  objc_destroyWeak(&v61);
  objc_destroyWeak(&v63);
  objc_destroyWeak(locationa);

  objc_destroyWeak(v38);
  objc_destroyWeak(v39);
  objc_destroyWeak(v40);

  objc_destroyWeak(v41);
  objc_destroyWeak(v42);
  objc_destroyWeak(v43);

  objc_destroyWeak(v44);
  objc_destroyWeak(v45);
  objc_destroyWeak(v46);
  objc_destroyWeak(v47);
  objc_destroyWeak(&v91);
  objc_destroyWeak(&v93);
  objc_destroyWeak(&v95);
  objc_destroyWeak(&v97);
  objc_destroyWeak(&v99);

  objc_destroyWeak(v104);
}

void sub_10085BE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12, id *a13, id *a14, id *a15, id *a16, id *a17, id *a18, id *a19, id *a20,id *a21,id *a22,id *a23,id *a24,id *a25)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a11);
  objc_destroyWeak(a12);
  objc_destroyWeak(a13);
  objc_destroyWeak(a14);
  objc_destroyWeak(a15);
  objc_destroyWeak(a16);
  objc_destroyWeak(a17);
  objc_destroyWeak(a18);
  objc_destroyWeak(a19);
  objc_destroyWeak(a20);
  objc_destroyWeak(a21);
  objc_destroyWeak(a22);
  objc_destroyWeak(a23);
  objc_destroyWeak(a24);
  objc_destroyWeak(a25);
  _Unwind_Resume(a1);
}

void sub_10085BF9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10085C078;
  void v5[3] = &unk_1012EE3E8;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Console" content:v5];

  objc_destroyWeak(&v7);
}

void sub_10085C064(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085C078(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Console Enabled" get:&stru_1012FAE10 set:&stru_1012FAE30];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Draw Performance HUD" forVectorKitDebugKey:@"drawPerformanceHUD"];

  id v7 = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = [v7 addAllMapsSwitchRowToSection:v3 title:@"Expanded Performance HUD" forVectorKitDebugKey:@"expandedPerformanceHUD"];

  unsigned int v9 = [*(id *)(a1 + 32) numPerformanceGroups];
  if (v9)
  {
    unsigned int v10 = v9;
    uint64_t v11 = 0;
    do
    {
      id v12 = [*(id *)(a1 + 32) nameForPerformanceGroup:v11];
      if (v12)
      {
        id v13 = +[NSString stringWithFormat:@"Show Performance Group %@", v12];
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472;
        void v18[2] = sub_10085C2B4;
        void v18[3] = &unk_1012FAE58;
        id v19 = *(id *)(a1 + 32);
        int v20 = v11;
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        void v15[2] = sub_10085C2C4;
        void v15[3] = &unk_1012F0620;
        id v16 = *(id *)(a1 + 32);
        int v17 = v11;
        id v14 = [v3 addSwitchRowWithTitle:v13 get:v18 set:v15];
      }
      uint64_t v11 = (v11 + 1);
    }
    while (v10 != v11);
  }
}

BOOL sub_10085C290(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10085C2A0(id a1, BOOL a2)
{
}

id sub_10085C2B4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) isPerformanceGroupShown:*(unsigned int *)(a1 + 40)];
}

id sub_10085C2C4(uint64_t a1, int a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(unsigned int *)(a1 + 40);
  if (a2) {
    return _[v3 showPerformanceGroup:v4];
  }
  else {
    return _[v3 hidePerformanceGroup:v4];
  }
}

void sub_10085C2DC(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  id v4[2] = sub_10085C378;
  void v4[3] = &unk_1012EE018;
  id v5 = *(id *)(a1 + 32);
  id v3 = [a2 addSectionWithTitle:@"Tiles" content:v4];
}

void sub_10085C378(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v5 = +[NSString stringWithFormat:@"Use Test Tile Loader"];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  void v23[2] = sub_10085C6C4;
  void v23[3] = &unk_1012E7F80;
  id v24 = *(id *)(a1 + 32);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  void v21[2] = sub_10085C6CC;
  v21[3] = &unk_1012E7D28;
  id v22 = *(id *)(a1 + 32);
  id v6 = [v3 addSwitchRowWithTitle:v5 get:v23 set:v21];

  id v7 = [v3 addButtonRowWithTitle:@"Update Resource Manifest" action:&stru_1012FAEA0];
  id v8 = [v3 addButtonRowWithTitle:@"Flush Tile Cache" action:&stru_1012FAEC0];
  id v9 = [v3 addButtonRowWithTitle:@"Force Dev Resources Update" action:&stru_1012FAEE0];
  id v10 = [v3 addButtonRowWithTitle:@"Delete All Dev Resources" action:&stru_1012FAF00];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_10085C818;
  v19[3] = &unk_1012E7F80;
  id v20 = *(id *)(a1 + 32);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_10085C820;
  void v17[3] = &unk_1012E7D28;
  id v18 = *(id *)(a1 + 32);
  id v11 = [v3 addSwitchRowWithTitle:@"Constantly Change Tile Group" get:v19 set:v17];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_10085C82C;
  void v15[3] = &unk_1012EE360;
  id v16 = *(id *)(a1 + 32);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10085C87C;
  void v13[3] = &unk_1012E78C8;
  id v14 = *(id *)(a1 + 32);
  id v12 = [v3 addTextFieldRowWithTitle:@"Tile Group Change Interval" placeholderText:@"(seconds)" inputType:1 get:v15 set:v13];
}

id sub_10085C6C4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) shouldUseTestTileLoader];
}

void sub_10085C6CC(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setShouldUseTestTileLoader:a2];
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

void sub_10085C730(id a1)
{
  id v1 = +[GEOResourceManifestManager modernManager];
  [v1 updateManifest:0];
}

void sub_10085C77C(id a1)
{
}

void sub_10085C788(id a1)
{
  id v1 = +[GEOResourceManifestManager modernManager];
  [v1 devResourcesFolderDidChange];
}

void sub_10085C7D0(id a1)
{
  id v1 = +[GEOResourceManifestManager modernManager];
  [v1 removeDevResources];
}

id sub_10085C818(uint64_t a1)
{
  return _[*(id *)(a1 + 32) constantlyChangeTileGroup];
}

id sub_10085C820(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) setConstantlyChangeTileGroup:a2];
}

NSString *sub_10085C82C(uint64_t a1)
{
  [*(id *)(a1 + 32) constantlyChangeTileGroupInterval];
  *(float *)&double v1 = v1;
  return +[NSString stringWithFormat:@"%f", *(float *)&v1];
}

id sub_10085C87C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  [a2 doubleValue];

  return [v2 setConstantlyChangeTileGroupInterval:];
}

void sub_10085C8B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10085C980;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Renderer" content:v5];
  objc_destroyWeak(&v6);
}

void sub_10085C96C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085C980(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Use Metal Renderer (Requires restart)" get:&stru_1012FAF20 set:&stru_1012FAF40];
  LODWORD(v5) = 0.5;
  LODWORD(v6) = 2.0;
  id v7 = [v3 addSliderRowWithTitle:@"Ribbon Antialiasing" subtitleStringFormat:@"Antialias:  %1.2f" min:&stru_1012FAF60 max:&stru_1012FAF80 get:v5 set:v6];
  id v8 = [v3 addSwitchRowWithTitle:@"Enable mipmaps" get:&stru_1012FAFA0 set:&stru_1012FAFC0];
  LODWORD(v9) = 1098960077;
  LODWORD(v10) = 1.0;
  id v11 = [v3 addSliderRowWithTitle:@"Texture anisotropy" subtitleStringFormat:@"Anisotropy:  %1.f" min:&stru_1012FAFE0 max:&stru_1012FB000 get:v10 set:v9];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_10085CF4C;
  v26[3] = &unk_1012E6708;
  id v12 = (id *)(a1 + 32);
  objc_copyWeak(&v27, v12);
  id v13 = [v3 addButtonRowWithTitle:@"Capture Frame" action:v26];
  id WeakRetained = objc_loadWeakRetained(v12);
  id v15 = [WeakRetained delegate];
  id v16 = objc_loadWeakRetained(v12);
  int v17 = [v15 allVisibleMapViewsForDebugController:v16];
  id v18 = [v17 firstObject];
  id v19 = [v18 _mapLayer];
  unsigned int v20 = [v19 supportsGPUFrameCaptureToDestination];

  if (v20)
  {
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_10085D3FC;
    v24[3] = &unk_1012E8290;
    objc_copyWeak(&v25, v12);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    void v22[2] = sub_10085D434;
    void v22[3] = &unk_1012E6998;
    objc_copyWeak(&v23, v12);
    id v21 = [v3 addSwitchRowWithTitle:@"Capture Frame to File" get:v24 set:v22];
    objc_destroyWeak(&v23);
    objc_destroyWeak(&v25);
  }
  objc_destroyWeak(&v27);
}

void sub_10085CC54(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_10085CC84(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 useMetalRenderer];

  return v2;
}

void sub_10085CCC4(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setUseMetalRenderer:v2];
}

float sub_10085CD1C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 ribbonCrispness];
  float v3 = v2;

  return v3;
}

void sub_10085CD64(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setRibbonCrispness:v3];
}

BOOL sub_10085CDBC(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableMipMaps];

  return v2;
}

void sub_10085CDFC(id a1, BOOL a2)
{
  BOOL v2 = a2;
  double v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableMipMaps:v2];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

float sub_10085CE80(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  float v2 = (float)[v1 anisotropy];

  return v2;
}

void sub_10085CEC8(id a1, float a2)
{
  LODWORD(v2) = vcvtms_u32_f32(a2);
  double v3 = +[VKDebugSettings sharedSettings];
  [v3 setAnisotropy:v2];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

void sub_10085CF4C(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  double v5 = [v3 allVisibleMapViewsForDebugController:v4];
  double v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];

  id v8 = +[VKDebugSettings sharedSettings];
  [v8 setDebugCaptureNextGPUFrame:1];

  if ([v7 supportsGPUFrameCaptureToDestination]
    && (id v9 = objc_loadWeakRetained(v1),
        unsigned int v10 = [v9 shouldCaptureFrameToFile],
        v9,
        v10))
  {
    uint64_t v11 = +[NSDate date];
    id v12 = +[NSCalendar currentCalendar];
    id v30 = (void *)v11;
    id v13 = [v12 components:252 fromDate:v11];

    id v14 = [@"~/Library/Maps/FrameCaptures" stringByExpandingTildeInPath];
    id v15 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@/Maps-%ld-%02ld-%02ld.%02ld-%02ld-%02ld.gputrace", v14, [v13 year], objc_msgSend(v13, "month"), objc_msgSend(v13, "day"), objc_msgSend(v13, "hour"), objc_msgSend(v13, "minute"), objc_msgSend(v13, "second"));
    id v16 = +[NSFileManager defaultManager];
    id v35 = 0;
    LODWORD(v11) = [v16 createDirectoryAtPath:v14 withIntermediateDirectories:1 attributes:0 error:&v35];
    id v17 = v35;

    if (v11)
    {
      id v18 = +[NSURL fileURLWithPath:v15];
      id v19 = [v18 path];
      unsigned int v20 = +[VKDebugSettings sharedSettings];
      [v20 setDebugGPUFrameCaptureURL:v19];

      id v21 = +[NSURL fileURLWithPath:v14];
      id v34 = v17;
      [v21 setResourceValue:&__kCFBooleanTrue forKey:NSURLIsExcludedFromBackupKey error:&v34];
      id v22 = v34;

      id v23 = [v18 path];
      id v24 = +[NSString stringWithFormat:@"Frame will be captured to '%@'", v23];

      id v17 = v22;
    }
    else
    {
      id v18 = 0;
      id v24 = @"Press OK to perform programatic capture (Must have debugger attached)";
    }
  }
  else
  {
    id v18 = 0;
    id v24 = @"Press OK to perform programatic capture (Must have debugger attached)";
  }
  id v25 = +[UIAlertController alertControllerWithTitle:@"Capture Frame" message:v24 preferredStyle:1];
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_10085D39C;
  void v31[3] = &unk_1012FB028;
  id v26 = v7;
  id v32 = v26;
  objc_copyWeak(&v33, v1);
  id v27 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:v31];
  id v28 = +[UIAlertAction actionWithTitle:@"Cancel" style:0 handler:&stru_1012FB048];
  [v25 addAction:v27];
  [v25 addAction:v28];
  id v29 = objc_loadWeakRetained(v1);
  [v29 presentViewController:v25 animated:1 completion:0];

  objc_destroyWeak(&v33);
}

void sub_10085D384(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085D39C(uint64_t a1)
{
  [*(id *)(a1 + 32) forceLayout];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained dismissViewControllerAnimated:1 completion:0];
}

id sub_10085D3FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained shouldCaptureFrameToFile];

  return v2;
}

void sub_10085D434(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setShouldCaptureFrameToFile:a2];
}

void sub_10085D484(uint64_t a1, void *a2)
{
  id v3 = a2;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_10085D6EC;
  void v15[3] = &unk_1012E7EF8;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Standard Camera" content:v15];
  id v5 = [v3 addSectionWithTitle:@"Smart Camera Debug Console" content:&stru_1012FB1B8];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10085DF58;
  void v13[3] = &unk_1012E7EF8;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  id v6 = [v3 addSectionWithTitle:@"Camera Mode" content:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10085E39C;
  void v11[3] = &unk_1012E7EF8;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v7 = [v3 addSectionWithTitle:@"Navigation Destination" content:v11];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_10085E7C0;
  _OWORD v9[3] = &unk_1012E7EF8;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  id v8 = [v3 addSectionWithTitle:@"WGS84 Debug Control" content:v9];
  objc_destroyWeak(&v10);
  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);
  objc_destroyWeak(&v16);
}

void sub_10085D6A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085D6EC(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Freeze Camera Loading" get:&stru_1012FB090 set:&stru_1012FB0B0];
  id v5 = [v3 addSwitchRowWithTitle:@"Relax Tilt Limits" get:&stru_1012FB0D0 set:&stru_1012FB0F0];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10085DA58;
  void v14[3] = &unk_1012FB138;
  a1 += 4;
  objc_copyWeak(&v15, a1);
  LODWORD(v6) = 1.0;
  LODWORD(v7) = 20.0;
  id v8 = [v3 addSliderRowWithTitle:@"Far Clip Plane Factor" subtitleStringFormat:@"%.1f" min:&stru_1012FB110 max:v14 get:v6 set:v7];
  id v9 = [v3 addSwitchRowWithTitle:@"Enable Depth of Field" get:&stru_1012FB158 set:&stru_1012FB178];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  id v12[2] = sub_10085DBB0;
  void v12[3] = &unk_1012FB138;
  objc_copyWeak(&v13, a1);
  LODWORD(v10) = 1.0;
  id v11 = [v3 addSliderRowWithTitle:@"Depth of Field Strength" subtitleStringFormat:@"%.2f" min:&stru_1012FB198 max:v12 get:0.0 set:v10];
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
}

void sub_10085D8B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_10085D8E0(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 shouldFreezeLayoutCamera];

  return v2;
}

void sub_10085D920(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setShouldFreezeLayoutCamera:v2];
}

BOOL sub_10085D978(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 relaxTiltLimits];

  return v2;
}

void sub_10085D9B8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setRelaxTiltLimits:v2];
}

float sub_10085DA10(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 farClipPlaneFactor];
  float v3 = v2;

  return v3;
}

void sub_10085DA58(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setFarClipPlaneFactor:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

BOOL sub_10085DAD0(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableDOF];

  return v2;
}

void sub_10085DB10(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableDOF:v2];
}

float sub_10085DB68(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 dofStrength];
  float v3 = v2;

  return v3;
}

void sub_10085DBB0(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDofStrength:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

void sub_10085DC28(id a1, MapsDebugTableSection *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Force Complex Intersection" get:&stru_1012FB1D8 set:&stru_1012FB1F8];
  id v3 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enable Force Windshield Mode Button" get:&stru_1012FB218 set:&stru_1012FB238];
  id v4 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enable" get:&stru_1012FB258 set:&stru_1012FB278];
  id v5 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Show Overlay" get:&stru_1012FB298 set:&stru_1012FB2B8];
  id v6 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Show Properties" get:&stru_1012FB2D8 set:&stru_1012FB2F8];
  id v7 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Show Attributes" get:&stru_1012FB318 set:&stru_1012FB338];
  id v8 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Show Legend" get:&stru_1012FB358 set:&stru_1012FB378];
}

BOOL sub_10085DD74(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 navCameraForceComplexIntersection];

  return v2;
}

void sub_10085DDB4(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setNavCameraForceComplexIntersection:v2];
}

BOOL sub_10085DE0C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableWindshieldOverrideButton];

  return v2;
}

void sub_10085DE4C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableWindshieldOverrideButton:v2];
}

BOOL sub_10085DEA4(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10085DEB4(id a1, BOOL a2)
{
}

BOOL sub_10085DEC8(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10085DED8(id a1, BOOL a2)
{
}

BOOL sub_10085DEEC(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10085DEFC(id a1, BOOL a2)
{
}

BOOL sub_10085DF10(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10085DF20(id a1, BOOL a2)
{
}

BOOL sub_10085DF34(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10085DF44(id a1, BOOL a2)
{
}

void sub_10085DF58(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10085E140;
  void v7[3] = &unk_1012EE2E8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10085E228;
  void v5[3] = &unk_1012EE310;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FB3B8 get:v7 set:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&v8);
}

void sub_10085E070(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085E08C(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Default" value:&off_1013A8E00];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Overview" value:&off_1013A8E18];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"LegOverview" value:&off_1013A8E30];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Drive" value:&off_1013A8E48];
}

id sub_10085E140(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];
  id v8 = [v7 sceneConfiguration];

  id v9 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v8 navCameraMode]);

  return v9;
}

void sub_10085E228(id *a1, void *a2)
{
  id v3 = a2;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = [*(id *)(*((void *)&v14 + 1) + 8 * (void)v11) _mapLayer];
        id v13 = [v12 sceneConfiguration];

        [v13 setNavCameraMode:[v3 integerValue]];
        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v9);
  }
}

void sub_10085E39C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10085E564;
  void v7[3] = &unk_1012EE2E8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10085E64C;
  void v5[3] = &unk_1012EE310;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FB3D8 get:v7 set:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&v8);
}

void sub_10085E4B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085E4D0(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Unknown" value:&off_1013A8E00];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Confirmed" value:&off_1013A8E18];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Unconfirmed" value:&off_1013A8E48];
}

id sub_10085E564(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];
  id v8 = [v7 sceneConfiguration];

  id v9 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v8 navigationDestination]);

  return v9;
}

void sub_10085E64C(id *a1, void *a2)
{
  id v3 = a2;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = [*(id *)(*((void *)&v14 + 1) + 8 * (void)v11) _mapLayer];
        id v13 = [v12 sceneConfiguration];

        [v13 setNavigationDestination:[v3 integerValue]];
        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v9);
  }
}

void sub_10085E7C0(id *a1, void *a2)
{
  id v3 = a2;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10085E98C;
  void v11[3] = &unk_1012FB138;
  a1 += 4;
  objc_copyWeak(&v12, a1);
  LODWORD(v4) = 1.0;
  id v5 = [v3 addSliderRowWithTitle:@"Sky Offset Adjustment" subtitleStringFormat:@"%1.6f " min:&stru_1012FB3F8 max:v11 get:0.0 set:v4];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_10085EAB8;
  _OWORD v9[3] = &unk_1012FB138;
  objc_copyWeak(&v10, a1);
  LODWORD(v6) = -1035468800;
  LODWORD(v7) = 1148829696;
  id v8 = [v3 addSliderRowWithTitle:@"Grid Z Adjustment" subtitleStringFormat:@"%3.6f " min:&stru_1012FB418 max:v9 get:v6 set:v7];
  objc_destroyWeak(&v10);
  objc_destroyWeak(&v12);
}

void sub_10085E920(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

float sub_10085E944(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 skyOffsetAdjustment];
  float v3 = v2;

  return v3;
}

void sub_10085E98C(id *a1, float a2)
{
  double v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setSkyOffsetAdjustment:v5];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  double v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];
}

float sub_10085EA70(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 gridZAdjustment];
  float v3 = v2;

  return v3;
}

void sub_10085EAB8(id *a1, float a2)
{
  double v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setGridZAdjustment:v5];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  double v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];
}

void sub_10085EB9C(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Speed" content:&stru_1012FB458];
}

void sub_10085EBD0(id a1, MapsDebugTableSection *a2)
{
  double v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Slow Animation" get:&stru_1012FB478 set:&stru_1012FB498];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Slow Transitions" get:&stru_1012FB4B8 set:&stru_1012FB4D8];
}

BOOL sub_10085EC54(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 slowAnimations];

  return v2;
}

void sub_10085EC94(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setSlowAnimations:v2];
}

BOOL sub_10085ECEC(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 slowTransitions];

  return v2;
}

void sub_10085ED2C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setSlowTransitions:v2];
}

void sub_10085ED84(uint64_t a1, void *a2)
{
  id v3 = a2;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10085EF50;
  void v11[3] = &unk_1012E7EF8;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Map Types" content:v11];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_10085F460;
  _OWORD v9[3] = &unk_1012E7EF8;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  id v5 = [v3 addSectionWithTitle:@"Map Modes" content:v9];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10085F88C;
  void v7[3] = &unk_1012E7EF8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  id v6 = [v3 addSectionWithTitle:@"Current Emphasis" content:v7];
  objc_destroyWeak(&v8);
  objc_destroyWeak(&v10);
  objc_destroyWeak(&v12);
}

void sub_10085EF1C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085EF50(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10085F224;
  void v7[3] = &unk_1012EE2E8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10085F2F8;
  void v5[3] = &unk_1012EE310;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FB4F8 get:v7 set:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&v8);
}

void sub_10085F068(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085F084(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  long long v14 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Grid" value:&off_1013A8E60];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Vector" value:&off_1013A8E78];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Satellite" value:&off_1013A8E90];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Hybrid" value:&off_1013A8EA8];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Globe" value:&off_1013A8EC0];
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Globe Hybrid" value:&off_1013A8ED8];
  id v8 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Standard Grid" value:&off_1013A8E60];
  id v9 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Satellite Grid" value:&off_1013A8EF0];
  id v10 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Navigation" value:&off_1013A8F08];
  id v11 = +[GEOResourceManifestManager modernManager];
  unsigned int v12 = [v11 isMuninEnabled];

  if (v12) {
    id v13 = [(MapsDebugCheckmarkRowsGroup *)v14 addRowWithTitle:@"Munin" value:&off_1013A8F20];
  }
}

id sub_10085F224(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];
  id v8 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v7 mapType]);

  return v8;
}

void sub_10085F2F8(id *a1, void *a2)
{
  id v3 = a2;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v16;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v16 != v10) {
          objc_enumerationMutation(v7);
        }
        unsigned int v12 = *(void **)(*((void *)&v15 + 1) + 8 * (void)v11);
        id v13 = [v3 integerValue];
        long long v14 = [v12 _mapLayer];
        [v14 setMapType:v13];

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v9);
  }
}

void sub_10085F460(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10085F654;
  void v7[3] = &unk_1012EE2E8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10085F728;
  void v5[3] = &unk_1012EE310;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FB518 get:v7 set:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&v8);
}

void sub_10085F578(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085F594(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Standard" value:&off_1013A8E78];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Navigation" value:&off_1013A8E90];
  id v4 = +[GEOResourceManifestManager modernManager];
  unsigned int v5 = [v4 isMuninEnabled];

  if (v5) {
    id v6 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Munin PIP" value:&off_1013A8EC0];
  }
}

id sub_10085F654(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  unsigned int v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];
  id v8 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v7 currentMapMode]);

  return v8;
}

void sub_10085F728(id *a1, void *a2)
{
  id v3 = a2;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  unsigned int v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        unsigned int v12 = [*(id *)(*((void *)&v13 + 1) + 8 * (void)v11) _mapLayer];
        [v12 setDesiredMapMode:[v3 integerValue]];

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }
}

void sub_10085F88C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10085FA54;
  void v7[3] = &unk_1012EE2E8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10085FB28;
  void v5[3] = &unk_1012EE310;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FB538 get:v7 set:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&v8);
}

void sub_10085F9A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085F9C0(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  unsigned int v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Muted" value:&off_1013A8F38];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Standard" value:&off_1013A8F50];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Explore" value:&off_1013A8F68];
}

id sub_10085FA54(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  unsigned int v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];
  id v8 = +[NSNumber numberWithUnsignedChar:](NSNumber, "numberWithUnsignedChar:", [v7 emphasis]);

  return v8;
}

void sub_10085FB28(id *a1, void *a2)
{
  id v3 = a2;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  unsigned int v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v16;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v16 != v10) {
          objc_enumerationMutation(v7);
        }
        unsigned int v12 = *(void **)(*((void *)&v15 + 1) + 8 * (void)v11);
        unsigned __int8 v13 = [v3 integerValue];
        long long v14 = [v12 _mapLayer];
        [v14 setEmphasis:v13 animated:0];

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v9);
  }
}

void sub_10085FC94(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10085FD5C;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Styles" content:v5];
  objc_destroyWeak(&v6);
}

void sub_10085FD48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085FD5C(id *a1, void *a2)
{
  id v3 = a2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_10085FEDC;
  _OWORD v9[3] = &unk_1012E6708;
  a1 += 4;
  objc_copyWeak(&v10, a1);
  id v4 = [v3 addButtonRowWithTitle:@"Perform Day/Night Cycle" action:v9];
  id v5 = [v3 addReadOnlyRowWithTitle:@"DO NOT USE these options for testing" value:@"They do not completely configure the style"];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1008602F4;
  void v7[3] = &unk_1012FB5C8;
  objc_copyWeak(&v8, a1);
  id v6 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FB580 get:&stru_1012FB5A0 set:v7];
  objc_destroyWeak(&v8);
  objc_destroyWeak(&v10);
}

void sub_10085FEB4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10085FEDC(uint64_t a1)
{
  uint64_t v18 = 0;
  id v19 = &v18;
  uint64_t v20 = 0x2810000000;
  id v21 = &unk_1011B93F2;
  int v22 = 0;
  __int16 v23 = 0;
  uint64_t v12 = 0;
  unsigned __int8 v13 = &v12;
  uint64_t v14 = 0x2810000000;
  long long v15 = &unk_1011B93F2;
  int v16 = 1;
  double v1 = (id *)(a1 + 32);
  __int16 v17 = 0;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned __int8 v3 = [WeakRetained mapDisplayStyleInAllLayers];

  if (!v3)
  {
    id v4 = v19;
    __int16 v5 = *((_WORD *)v19 + 18);
    int v6 = *((_DWORD *)v19 + 8);
    id v7 = v13;
    __int16 v8 = *((_WORD *)v13 + 18);
    *((_DWORD *)v19 + _Block_object_dispose(&STACK[0x238], 8) = *((_DWORD *)v13 + 8);
    *((_WORD *)v4 + 1_Block_object_dispose(&STACK[0x238], 8) = v8;
    *((_DWORD *)v7 + _Block_object_dispose(&STACK[0x238], 8) = v6;
    *((_WORD *)v7 + 1_Block_object_dispose(&STACK[0x238], 8) = v5;
  }
  dispatch_time_t v9 = dispatch_time(0, 1500000000);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10086006C;
  void v10[3] = &unk_1012FB560;
  objc_copyWeak(v11, v1);
  void v10[4] = &v18;
  void v10[5] = &v12;
  dispatch_after(v9, (dispatch_queue_t)&_dispatch_main_q, v10);
  objc_destroyWeak(v11);
  _Block_object_dispose(&v12, 8);
  _Block_object_dispose(&v18, 8);
}

void sub_100860048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 72), 8);
  _Unwind_Resume(a1);
}

void sub_10086006C(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setMapDisplayStyleForAllLayers:*(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 32) | ((unint64_t)*(unsigned __int16 *)(*(void *)(*(void *)(a1 + 32) + 8) + 36) << 32)];

  dispatch_time_t v4 = dispatch_time(0, 5000000000);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100860158;
  void v5[3] = &unk_1012F84F8;
  objc_copyWeak(&v6, v2);
  void v5[4] = *(void *)(a1 + 40);
  dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, v5);
  objc_destroyWeak(&v6);
}

void sub_100860158(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setMapDisplayStyleForAllLayers:*(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 32) | ((unint64_t)*(unsigned __int16 *)(*(void *)(*(void *)(a1 + 32) + 8) + 36) << 32)];
}

void sub_1008601B8(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"None" value:&off_1013A8E00];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Day" value:&off_1013A8E18];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Night" value:&off_1013A8E48];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Transit" value:&off_1013A8E30];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"TransitRoute" value:&off_1013A8F80];
}

id sub_10086028C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  id v2 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v1 mapDisplayStyleOverride]);

  return v2;
}

void sub_1008602F4(uint64_t a1, void *a2)
{
  uint64_t v3 = (int)[a2 intValue];
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setMapDisplayStyleOverride:v3];

  id v5 = +[VKDebugSettings sharedSettings];
  id v6 = (unsigned int *)[v5 displayStyleOverride];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (v6) {
    [WeakRetained enableMapDisplayStyleOverrideForAllLayers:*v6 | ((unint64_t)*((unsigned __int16 *)v6 + 2) << 32)];
  }
  else {
    [WeakRetained disableMapDisplayStyleOverrideForAllLayers];
  }
}

void sub_1008603A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100860494;
  void v6[3] = &unk_1012E7EF8;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Performance" content:v6];
  id v5 = [v3 addSectionWithTitle:@"Performance Test" content:&stru_1012FB5E8];
  objc_destroyWeak(&v7);
}

void sub_10086047C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100860494(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v5 title:@"Layout Continuously" key:@"debugLayoutContinuously"];
}

void sub_100860508(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addNavigationRowForViewControllerClass:objc_opt_class()];
}

void sub_100860560(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v23 = [v5 firstObject];

  id v6 = [v23 _mapLayer];
  id v7 = [v23 camera];
  [v6 centerCoordinate];
  double v9 = v8;
  [v6 centerCoordinate];
  double v11 = v10;
  [v7 altitude];
  double v13 = v12;
  [v6 pitch];
  double v15 = v14;
  [v6 yaw];
  __int16 v17 = +[GEOMapURLBuilder URLForCameraAt:altitude:rotation:tilt:roll:](GEOMapURLBuilder, "URLForCameraAt:altitude:rotation:tilt:roll:", v9, v11, v13, v15, v16, 0.0);
  uint64_t v18 = [v17 absoluteString];
  id v19 = +[UIPasteboard generalPasteboard];
  [v19 setString:v18];

  uint64_t v20 = +[UIAlertController alertControllerWithTitle:@"Alert" message:@"View encoded URL copied to clipboard" preferredStyle:1];
  id v21 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:&stru_1012FB608];
  [v20 addAction:v21];
  id v22 = objc_loadWeakRetained(v1);
  [v22 presentViewController:v20 animated:1 completion:0];
}

void sub_10086075C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:@"Features Controller" content:&stru_1012FB628];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100860948;
  void v13[3] = &unk_1012E7EF8;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  id v5 = [v3 addSectionWithTitle:@"Paint" content:v13];
  double v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472;
  double v10 = sub_100860C90;
  double v11 = &unk_1012E7EF8;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v6 = [v3 addSectionWithTitle:@"UTL" content:&v8];
  id v7 = [v3 addSectionWithTitle:@"Floating debug view" content:&stru_1012FB648 v8, v9, v10, v11];
  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);
}

void sub_1008608C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1008608F0(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addNavigationRowForViewControllerClass:objc_opt_class()];
}

void sub_100860948(id *a1, void *a2)
{
  id v35 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v35 title:@"Road Tile Boundaries" forVectorKitDebugKey:@"paintRoadBoundaries"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v35 title:@"POI Tiles" forVectorKitDebugKey:@"paintPoiTiles"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v35 title:@"Point Tiles" forVectorKitDebugKey:@"paintPointTiles"];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v35 title:@"Road Tiles" forVectorKitDebugKey:@"paintRoadTiles"];

  id v11 = objc_loadWeakRetained(a1);
  id v12 = [v11 addAllMapsSwitchRowToSection:v35 title:@"Polygon Tiles" forVectorKitDebugKey:@"paintPolygonTiles"];

  id v13 = objc_loadWeakRetained(a1);
  id v14 = [v13 addAllMapsSwitchRowToSection:v35 title:@"Topographic Tiles" forVectorKitDebugKey:@"paintTopographicTiles"];

  id v15 = objc_loadWeakRetained(a1);
  id v16 = [v15 addAllMapsSwitchRowToSection:v35 title:@"Landcover Tiles" forVectorKitDebugKey:@"paintLandcoverTiles"];

  id v17 = objc_loadWeakRetained(a1);
  id v18 = [v17 addAllMapsSwitchRowToSection:v35 title:@"Venues Tiles" forVectorKitDebugKey:@"paintVenues"];

  id v19 = objc_loadWeakRetained(a1);
  id v20 = [v19 addAllMapsSwitchRowToSection:v35 title:@"Vertices" forVectorKitDebugKey:@"paintVertices"];

  id v21 = objc_loadWeakRetained(a1);
  id v22 = [v21 addAllMapsSwitchRowToSection:v35 title:@"Junctions" forVectorKitDebugKey:@"paintJunctions"];

  id v23 = objc_loadWeakRetained(a1);
  id v24 = [v23 addAllMapsSwitchRowToSection:v35 title:@"Coastlines" forVectorKitDebugKey:@"paintCoastlines"];

  id v25 = objc_loadWeakRetained(a1);
  id v26 = [v25 addAllMapsSwitchRowToSection:v35 title:@"Buildings" forVectorKitDebugKey:@"paintBuildings"];

  id v27 = objc_loadWeakRetained(a1);
  id v28 = [v27 addAllMapsSwitchRowToSection:v35 title:@"Transit" forVectorKitDebugKey:@"drawDebugTransit"];

  id v29 = objc_loadWeakRetained(a1);
  id v30 = [v29 addAllMapsSwitchRowToSection:v35 title:@"Paint Map Tiles" forVectorKitDebugKey:@"paintMapTiles"];

  id v31 = objc_loadWeakRetained(a1);
  id v32 = [v31 addAllMapsSwitchRowToSection:v35 title:@"Paint Selected Map Tiles" forVectorKitDebugKey:@"paintSelectedMapTiles"];

  id v33 = objc_loadWeakRetained(a1);
  id v34 = [v33 addAllMapsSwitchRowToSection:v35 title:@"Download Reason" forVectorKitDebugKey:@"paintLoadReason"];
}

void sub_100860C90(id *a1, void *a2)
{
  id v13 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v13 title:@"KeysInView" forVectorKitDebugKey:@"paintKeysInView"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v13 title:@"S2KeysInView" forVectorKitDebugKey:@"paintS2KeysInView"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v13 title:@"RoadTileData" forVectorKitDebugKey:@"paintRoadTileData"];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v13 title:@"PolygonLayerData" forVectorKitDebugKey:@"paintPolygonLayerData"];

  id v11 = objc_loadWeakRetained(a1);
  id v12 = [v11 addAllMapsSwitchRowToSection:v13 title:@"StandardLabelMapData" forVectorKitDebugKey:@"paintStandardLabelMapData"];
}

void sub_100860DC8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Show floating debug view" get:&stru_1012FB668 set:&stru_1012FB688];
}

BOOL sub_100860E04(id a1)
{
  double v1 = +[VectorKitFloatingDebugViewController sharedInstance];
  unsigned __int8 v2 = [v1 isAttached];

  return v2;
}

void sub_100860E44(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VectorKitFloatingDebugViewController sharedInstance];
  id v4 = v3;
  if (v2) {
    [v3 attach];
  }
  else {
    [v3 detach];
  }
}

void sub_100860EA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100860F6C;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Console" content:v5];
  objc_destroyWeak(&v6);
}

void sub_100860F58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100860F6C(id *a1, void *a2)
{
  id v3 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];
  id v8 = [v7 firstObject];
  id v9 = [v8 _mapLayer];

  [v9 activeLogics];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v10 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v21 != v12) {
          objc_enumerationMutation(obj);
        }
        id v14 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        id v15 = [v14 name];
        void v18[4] = v14;
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_1008611B4;
        v19[3] = &unk_1012E7F80;
        void v19[4] = v14;
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472;
        void v18[2] = sub_100861208;
        void v18[3] = &unk_1012E7D28;
        id v16 = [v3 addSwitchRowWithTitle:v15 get:v19 set:v18];
      }
      id v11 = [obj countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v11);
  }
}

id sub_1008611B4(uint64_t a1)
{
  BOOL v2 = +[VKDebugSettings sharedSettings];
  id v3 = [v2 isLogicConsoleEnabled:[*(id *)(a1 + 32) identifier]];

  return v3;
}

void sub_100861208(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setLogicConsole:[*(id *)(a1 + 32) identifier] enabled:a2];
}

void sub_100861274(uint64_t a1, void *a2)
{
  id v3 = a2;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_1008615B4;
  void v20[3] = &unk_1012EE3E8;
  objc_copyWeak(&v22, (id *)(a1 + 40));
  id v21 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Label Highlighting" content:v20];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_100861C04;
  void v18[3] = &unk_1012E7EF8;
  objc_copyWeak(&v19, (id *)(a1 + 40));
  id v5 = [v3 addSectionWithTitle:@"Labels" content:v18];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_100862044;
  v16[3] = &unk_1012E7EF8;
  objc_copyWeak(&v17, (id *)(a1 + 40));
  id v6 = [v3 addSectionWithTitle:@"Labels - Display" content:v16];
  id v7 = [v3 addSectionWithTitle:@"Nav Labels" content:&stru_1012FB7A8];
  id v8 = [v3 addSectionWithTitle:@"Traffic Feature Nav Labels" content:&stru_1012FB988];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100863464;
  void v13[3] = &unk_1012EE3E8;
  objc_copyWeak(&v15, (id *)(a1 + 40));
  id v14 = *(id *)(a1 + 32);
  id v9 = [v3 addSectionWithTitle:@"Texture Atlas" content:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_1008637D0;
  void v11[3] = &unk_1012E7EF8;
  objc_copyWeak(&v12, (id *)(a1 + 40));
  id v10 = [v3 addSectionWithTitle:@"Label Animations" content:v11];
  objc_destroyWeak(&v12);

  objc_destroyWeak(&v15);
  objc_destroyWeak(&v17);
  objc_destroyWeak(&v19);

  objc_destroyWeak(&v22);
}

void sub_10086155C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v5);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1008615B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MIController sharedController];
  unsigned int v5 = [v4 isActive];

  if (v5)
  {
    [v3 setFooter:@"Label Highlighting is being controlled by MapInspector. Please use an external tool to control this value or disable MapInspector (MapDisplay -> MapInspector -> Activate Map Inspector)"];
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v7 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Label Highlighting" forVectorKitDebugKey:@"labelHighlighting"];

    id v8 = objc_loadWeakRetained((id *)(a1 + 40));
    id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Lock Highlighting" forVectorKitDebugKey:@"lockLabelHighlighting"];

    id v10 = objc_loadWeakRetained((id *)(a1 + 40));
    id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Show Client Style Attrs" forVectorKitDebugKey:@"showClientStyleAttributes"];

    id v12 = objc_loadWeakRetained((id *)(a1 + 40));
    id v13 = [v12 addAllMapsSwitchRowToSection:v3 title:@"Show Flex Zones" forVectorKitDebugKey:@"showFlexZoneRanges"];

    id v14 = objc_loadWeakRetained((id *)(a1 + 40));
    id v15 = [v14 addAllMapsSwitchRowToSection:v3 title:@"Show Label Counts" forVectorKitDebugKey:@"paintLabelCounts"];

    id v16 = objc_loadWeakRetained((id *)(a1 + 40));
    id v17 = [v16 addAllMapsSwitchRowToSection:v3 title:@"Show GRL Debug Info" forVectorKitDebugKey:@"showGRLDebugInfo"];

    id v18 = objc_loadWeakRetained((id *)(a1 + 40));
    id v19 = [v18 addAllMapsSwitchRowToSection:v3 title:@"Disable Overlay Text Console" forVectorKitDebugKey:@"disableOverlayTextConsole"];

    id v20 = objc_loadWeakRetained((id *)(a1 + 40));
    id v21 = [v20 addAllMapsSwitchRowToSection:v3 title:@"Highlight Transit Features Only" forVectorKitDebugKey:@"labelHighlightingTransitFeaturesOnly"];

    id v22 = objc_loadWeakRetained((id *)(a1 + 40));
    id v23 = [v22 addAllMapsSwitchRowToSection:v3 title:@"Verbose Logging" forVectorKitDebugKey:@"labelHighlightingVerboseLoggingEnabled"];

    id v24 = objc_loadWeakRetained((id *)(a1 + 40));
    id v25 = [v24 addAllMapsSwitchRowToSection:v3 title:@"Paint Road Features" forVectorKitDebugKey:@"paintLabelRoadFeatures"];

    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_100861A68;
    v39[3] = &unk_1012EE360;
    id v40 = *(id *)(a1 + 32);
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    v37[2] = sub_100861AB4;
    v37[3] = &unk_1012E78C8;
    id v38 = *(id *)(a1 + 32);
    id v26 = [v3 addTextFieldRowWithTitle:@"Selected Labeler Output" placeholderText:@"Index" inputType:1 get:v39 set:v37];
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472;
    v35[2] = sub_100861AF4;
    id v35[3] = &unk_1012EE360;
    id v36 = *(id *)(a1 + 32);
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_100861B3C;
    v33[3] = &unk_1012E78C8;
    id v34 = *(id *)(a1 + 32);
    id v27 = [v3 addTextFieldRowWithTitle:@"Overlay Horizontal Offset" placeholderText:@"Offset" inputType:1 get:v35 set:v33];
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472;
    v31[2] = sub_100861B7C;
    void v31[3] = &unk_1012EE360;
    id v32 = *(id *)(a1 + 32);
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    void v29[2] = sub_100861BC4;
    v29[3] = &unk_1012E78C8;
    id v30 = *(id *)(a1 + 32);
    id v28 = [v3 addTextFieldRowWithTitle:@"Overlay Vertical Offset" placeholderText:@"Offset" inputType:1 get:v31 set:v29];
  }
}

NSString *sub_100861A68(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) labelerOutputIndex]);
}

id sub_100861AB4(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  uint64_t v3 = [a2 intValue];

  return _[v2 setLabelerOutputIndex:v3];
}

NSString *sub_100861AF4(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) debugOverlayOffsetX]);
}

id sub_100861B3C(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = [a2 intValue];

  return _[v2 setDebugOverlayOffsetX:v3];
}

NSString *sub_100861B7C(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) debugOverlayOffsetY]);
}

id sub_100861BC4(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = [a2 intValue];

  return _[v2 setDebugOverlayOffsetY:v3];
}

void sub_100861C04(uint64_t a1, void *a2)
{
  BOOL v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Disable Occlusion" forVectorKitDebugKey:@"labelOcclusionDisabled"];

  id v6 = objc_loadWeakRetained(v2);
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Disable Facing Cull" forVectorKitDebugKey:@"labelFacingCullDisabled"];

  id v8 = objc_loadWeakRetained(v2);
  id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Disable Deduping" forVectorKitDebugKey:@"labelDedupingDisabled"];

  id v10 = objc_loadWeakRetained(v2);
  id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Disable Collision" forVectorKitDebugKey:@"labelCollisionDisabled"];

  id v12 = objc_loadWeakRetained(v2);
  id v13 = [v12 addAllMapsSwitchRowToSection:v3 title:@"Collide Continuously" forVectorKitDebugKey:@"labelCollideContinuously"];

  id v14 = objc_loadWeakRetained(v2);
  id v15 = [v14 addAllMapsSwitchRowToSection:v3 title:@"Paint Collision Lines" forVectorKitDebugKey:@"paintLabelCollisionLines"];

  id v16 = objc_loadWeakRetained(v2);
  id v17 = [v16 addAllMapsSwitchRowToSection:v3 title:@"Transit-Line Collision" forVectorKitDebugKey:@"labelTransitLineCollisionEnabled"];

  id v18 = objc_loadWeakRetained(v2);
  id v39 = [v18 addAllMapsSwitchRowToSection:v3 title:@"Flip Alternate Positions" forVectorKitDebugKey:@"labelFlipAlternatePositionsEnable"];

  [v39 setSubtitle:@"Needs Cache Flush"];
  id v19 = objc_loadWeakRetained(v2);
  id v20 = [v19 addAllMapsSwitchRowToSection:v3 title:@"Label-Tile Decode" forVectorKitDebugKey:@"labelTileDecodeEnabled"];

  [v20 setSubtitle:@"Needs Cache Flush"];
  id v21 = objc_loadWeakRetained(v2);
  id v22 = [v21 addAllMapsSwitchRowToSection:v3 title:@"Allow Default Style" forVectorKitDebugKey:@"labelAllowDefaultStyle"];

  [v22 setSubtitle:@"Needs Cache Flush"];
  id v23 = objc_loadWeakRetained(v2);
  id v24 = [v23 addAllMapsSwitchRowToSection:v3 title:@"Use Default Style" forVectorKitDebugKey:@"labelUseDefaultStyle"];

  [v24 setSubtitle:@"Needs Cache Flush"];
  id v25 = objc_loadWeakRetained(v2);
  id v26 = [v25 addAllMapsSwitchRowToSection:v3 title:@"Allow Default Icon" forVectorKitDebugKey:@"labelAllowDefaultIcon"];

  [v26 setSubtitle:@"Needs Cache Flush"];
  id v27 = objc_loadWeakRetained(v2);
  id v28 = [v27 addAllMapsSwitchRowToSection:v3 title:@"Update MapTiles During Continuous Layout" forVectorKitDebugKey:@"labelUpdateMapTilesContinuously"];

  id v29 = objc_loadWeakRetained(v2);
  id v30 = [v29 addAllMapsSwitchRowToSection:v3 title:@"Background Layout Disabled" forVectorKitDebugKey:@"disableBackgroundLabelLayout"];

  id v31 = objc_loadWeakRetained(v2);
  id v32 = [v31 addAllMapsSwitchRowToSection:v3 title:@"Auto Road Text Offsetting" forVectorKitDebugKey:@"labelAutoOffsetRoadText"];

  id v33 = objc_loadWeakRetained(v2);
  id v34 = [v33 addAllMapsSwitchRowToSection:v3 title:@"Disable Client Style Overrides" forVectorKitDebugKey:@"labelStyleOverridesDisabled"];

  [v34 setSubtitle:@"Needs Maps Restart"];
  id v35 = objc_loadWeakRetained(v2);
  id v36 = [v35 addAllMapsSwitchRowToSection:v3 title:@"Debug Hover Layers" forVectorKitDebugKey:@"labelDebugHoverLayers"];

  id v37 = objc_loadWeakRetained(v2);
  id v38 = [v37 addAllMapsSwitchRowToSection:v3 title:@"Disable POI Updates" forVectorKitDebugKey:@"labelPOIUpdatesDisabled"];

  [v38 setSubtitle:@"Needs Cache Flush"];
}

void sub_100862044(id *a1, void *a2)
{
  id v3 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Hide Line Features" forVectorKitDebugKey:@"labelHideLineFeatures"];

  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Hide Point Features" forVectorKitDebugKey:@"labelHidePointFeatures"];

  id v8 = objc_loadWeakRetained(a1);
  id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Hide Physical Features" forVectorKitDebugKey:@"labelHidePhysicalFeatures"];

  id v10 = objc_loadWeakRetained(a1);
  id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Hide Directional Arrows" forVectorKitDebugKey:@"hideDirectionalArrows"];

  id v12 = objc_loadWeakRetained(a1);
  id v13 = [v12 addAllMapsSwitchRowToSection:v3 title:@"Allow Textless POIs" forVectorKitDebugKey:@"textlessPOIsEnabled"];

  [v13 setSubtitle:@"Needs cache flush"];
  LODWORD(v14) = 14.0;
  LODWORD(v15) = 25.0;
  id v16 = [v3 addSliderRowWithTitle:@"Textless POIs Min Zoom (Flush cache after changing)" subtitleStringFormat:@"Min Zoom: %1.2f" min:&stru_1012FB6A8 max:&stru_1012FB6C8 get:v14 set:v15];
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472;
  v35[2] = sub_1008625EC;
  id v35[3] = &unk_1012E6998;
  objc_copyWeak(&v36, a1);
  id v17 = [v3 addSwitchRowWithTitle:@"Enable SDF Glyphs" get:&stru_1012FB6E8 set:v35];
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_100862708;
  v33[3] = &unk_1012E6998;
  objc_copyWeak(&v34, a1);
  id v18 = [v3 addSwitchRowWithTitle:@"Enable SDF Glyph Super Sampling" get:&stru_1012FB708 set:v33];
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_100862824;
  void v31[3] = &unk_1012E6998;
  objc_copyWeak(&v32, a1);
  id v19 = [v3 addSwitchRowWithTitle:@"Override SDF Glyph Super Sample Kernel Size" get:&stru_1012FB728 set:v31];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  void v29[2] = sub_100862940;
  v29[3] = &unk_1012E6998;
  objc_copyWeak(&v30, a1);
  id v20 = [v3 addSwitchRowWithTitle:@"Override SDF Glyph Upscaling" get:&stru_1012FB748 set:v29];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_100862A64;
  void v27[3] = &unk_1012FB138;
  objc_copyWeak(&v28, a1);
  LODWORD(v21) = 1.0;
  LODWORD(v22) = 8.0;
  id v23 = [v3 addSliderRowWithTitle:@"SDF Glyph Shader Upscale Factor" subtitleStringFormat:@"%1.2f" min:&stru_1012FB768 max:v27 get:v21 set:v22];
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_100862B88;
  void v25[3] = &unk_1012E6998;
  objc_copyWeak(&v26, a1);
  id v24 = [v3 addSwitchRowWithTitle:@"Enable RTEVChargerInfo" get:&stru_1012FB788 set:v25];
  objc_destroyWeak(&v26);
  objc_destroyWeak(&v28);
  objc_destroyWeak(&v30);
  objc_destroyWeak(&v32);
  objc_destroyWeak(&v34);
  objc_destroyWeak(&v36);
}

void sub_1008624A8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100862504()
{
}

float sub_10086250C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 textlessPOIsMinZoom];
  float v3 = v2;

  return v3;
}

void sub_100862554(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setTextlessPOIsMinZoom:v3];
}

BOOL sub_1008625AC(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 shouldUseSDFGlyphs];

  return v2;
}

void sub_1008625EC(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setShouldUseSDFGlyphs:a2];

  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(v5);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];
}

BOOL sub_1008626C8(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 shouldUseSDFSuperSampling];

  return v2;
}

void sub_100862708(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setShouldUseSDFSuperSampling:a2];

  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(v5);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];
}

BOOL sub_1008627E4(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 shouldOverrideSuperSampleKernelSize];

  return v2;
}

void sub_100862824(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setShouldOverrideSuperSampleKernelSize:a2];

  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(v5);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];
}

BOOL sub_100862900(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 shouldOverrideUpscaleFactor];

  return v2;
}

void sub_100862940(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setShouldOverrideUpscaleFactor:a2];

  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(v5);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];
}

float sub_100862A1C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 sdfGlyphShaderUpscaleFactor];
  float v3 = v2;

  return v3;
}

void sub_100862A64(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 sdfGlyphShaderUpscaleFactor];
  unsigned int v6 = v5;

  if (v6 != a2)
  {
    id v7 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v9 = [WeakRetained delegate];
    id v10 = objc_loadWeakRetained(v7);
    id v11 = [v9 allVisibleMapViewsForDebugController:v10];
    id v12 = [v11 firstObject];
    id v13 = [v12 _mapLayer];
    [v13 setNeedsLayout];
  }
  id v15 = +[VKDebugSettings sharedSettings];
  *(float *)&double v14 = a2;
  [v15 setSdfGlyphShaderUpscaleFactor:v14];
}

BOOL sub_100862B78(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100862B88(id *a1, uint64_t a2)
{
  GEOConfigSetSyncBOOL();
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  float v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v18;
    if (a2) {
      id v11 = &off_1013AE070;
    }
    else {
      id v11 = 0;
    }
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(v7);
        }
        id v13 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        double v14 = [v13 _mapLayer];
        [v14 setShowsLiveEVData:a2];

        id v15 = [v13 _mapLayer];
        [v15 setSupportedEVConnectorTypes:v11];

        id v16 = [v13 _mapLayer];
        [v16 setNeedsLayout];
      }
      id v9 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v9);
  }
}

void sub_100862D3C(id a1, MapsDebugTableSection *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Show Nav State" get:&stru_1012FB7C8 set:&stru_1012FB7E8];
  id v3 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Show RouteLine Labeling State" get:&stru_1012FB808 set:&stru_1012FB828];
  id v4 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Show Roadsign Labeling Overlay" get:&stru_1012FB848 set:&stru_1012FB868];
  id v5 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Show Route POI Text Avoidance Line" get:&stru_1012FB888 set:&stru_1012FB8A8];
  id v6 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enable RoadSign Orientation Debugging" get:&stru_1012FB8C8 set:&stru_1012FB8E8];
  id v7 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Disable RoadSign Limit" get:&stru_1012FB908 set:&stru_1012FB928];
  id v8 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Enable Roadsign Artwork Debugging" get:&stru_1012FB948 set:&stru_1012FB968];
}

BOOL sub_100862E88(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 showLabelsNavState];

  return v2;
}

void sub_100862EC8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setShowLabelsNavState:v2];
}

BOOL sub_100862F20(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableRouteLineLabelingDebugging];

  return v2;
}

void sub_100862F60(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableRouteLineLabelingDebugging:v2];
}

BOOL sub_100862FB8(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 showNavLabelOverlay];

  return v2;
}

void sub_100862FF8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setShowNavLabelOverlay:v2];
}

BOOL sub_100863050(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 showNavLabelRouteAvoidanceOverlay];

  return v2;
}

void sub_100863090(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setShowNavLabelRouteAvoidanceOverlay:v2];
}

BOOL sub_1008630E8(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableNavRoadSignOrientationDebugging];

  return v2;
}

void sub_100863128(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableNavRoadSignOrientationDebugging:v2];
}

BOOL sub_100863180(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 disableRoadSignLimit];

  return v2;
}

void sub_1008631C0(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setDisableRoadSignLimit:v2];
}

BOOL sub_100863218(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableRoadSignArtworkDebugging];

  return v2;
}

void sub_100863258(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableRoadSignArtworkDebugging:v2];
}

void sub_1008632B0(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enable Overlay" get:&stru_1012FB9A8 set:&stru_1012FB9C8];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Disable Route Annotation Limit" get:&stru_1012FB9E8 set:&stru_1012FBA08];
}

BOOL sub_100863334(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableTrafficFeatureLabelDebugging];

  return v2;
}

void sub_100863374(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableTrafficFeatureLabelDebugging:v2];
}

BOOL sub_1008633CC(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 disableRouteAnnotationLimit];

  return v2;
}

void sub_10086340C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setDisableRouteAnnotationLimit:v2];
}

void sub_100863464(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Disable Texture Atlas for Icons" forVectorKitDebugKey:@"disableIconTextureAtlas"];

  [v5 setSubtitle:@"Needs Maps Restart"];
  id v6 = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Texture Atlas Debug Display" forVectorKitDebugKey:@"displayTextureAtlas"];

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_1008636B8;
  v16[3] = &unk_1012EE360;
  id v17 = *(id *)(a1 + 32);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100863704;
  void v14[3] = &unk_1012E78C8;
  id v15 = *(id *)(a1 + 32);
  id v8 = [v3 addTextFieldRowWithTitle:@"Selected Atlas" placeholderText:@"Index" inputType:1 get:v16 set:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  id v12[2] = sub_100863744;
  void v12[3] = &unk_1012EE360;
  id v13 = *(id *)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100863790;
  void v10[3] = &unk_1012E78C8;
  id v11 = *(id *)(a1 + 32);
  id v9 = [v3 addTextFieldRowWithTitle:@"Displayed Page Index" placeholderText:@"Index" inputType:1 get:v12 set:v10];
}

NSString *sub_1008636B8(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) textureAtlasIndex]);
}

id sub_100863704(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  uint64_t v3 = [a2 intValue];

  return _[v2 setTextureAtlasIndex:v3];
}

NSString *sub_100863744(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) textureAtlasPageIndex]);
}

id sub_100863790(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  uint64_t v3 = (unsigned __int16)[a2 intValue];

  return _[v2 setTextureAtlasPageIndex:v3];
}

void sub_1008637D0(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v6 title:@"Enable Ring Animation" forVectorKitDebugKey:@"labelRingAnimationEnabled"];

  id v5 = [v6 addNavigationRowWithTitle:@"Label Animation Tuning" viewControllerContent:&stru_1012FBA28];
}

void sub_100863864(id a1, MapsDebugValuesViewController *a2)
{
  BOOL v2 = a2;
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Settings" content:&stru_1012FBA48];
  id v4 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Element" content:&stru_1012FBAE8];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  void v21[2] = sub_1008643A0;
  v21[3] = &unk_1012FBC50;
  double v22 = &stru_1012FBB88;
  id v5 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Hide - Alpha" content:v21];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100864424;
  v19[3] = &unk_1012FBC50;
  long long v20 = &stru_1012FBB88;
  id v6 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Hide - Scale" content:v19];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_1008644A8;
  void v17[3] = &unk_1012FBC50;
  long long v18 = &stru_1012FBB88;
  id v7 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Hide - Translate" content:v17];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_10086452C;
  void v15[3] = &unk_1012FBC50;
  id v16 = &stru_1012FBB88;
  id v8 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Show - Alpha" content:v15];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_1008645B0;
  void v13[3] = &unk_1012FBC50;
  double v14 = &stru_1012FBB88;
  id v9 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Show - Scale" content:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100864634;
  void v11[3] = &unk_1012FBC50;
  id v12 = &stru_1012FBB88;
  id v10 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Show - Translate" content:v11];
}

void sub_100863B20(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enable" get:&stru_1012FBA68 set:&stru_1012FBA88];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Modify Foward Animation" get:&stru_1012FBAA8 set:&stru_1012FBAC8];
}

BOOL sub_100863BA4(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableLabelAnimationTuning];

  return v2;
}

void sub_100863BE4(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableLabelAnimationTuning:v2];
}

BOOL sub_100863C3C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 tuneForwardLabelAnimation];

  return v2;
}

void sub_100863C7C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setTuneForwardLabelAnimation:v2];
}

void sub_100863CD4(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addCheckmarkRowsGroupWithContent:&stru_1012FBB08 get:&stru_1012FBB28 set:&stru_1012FBB48];
}

void sub_100863D10(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Icon" value:&off_1013A8E78];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Text" value:&off_1013A8E90];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Annotation" value:&off_1013A8EA8];
}

id sub_100863DA4(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  id v2 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v1 labelAnimationTuningElement]);

  return v2;
}

void sub_100863E0C(id a1, id a2)
{
  id v2 = [a2 unsignedIntegerValue];
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setLabelAnimationTuningElement:v2];
}

void sub_100863E6C(id a1, MapsDebugTableSection *a2, VKDebugLabelAnimationItemParameters *a3)
{
  id v4 = a2;
  void v19[4] = a3;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_10086413C;
  void v20[3] = &unk_1012FBBA8;
  void v20[4] = a3;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100864148;
  v19[3] = &unk_1012FBBC8;
  LODWORD(v5) = -3.0;
  LODWORD(v6) = 3.0;
  id v7 = [(MapsDebugTableSection *)v4 addSliderRowWithTitle:@"Start Delay" subtitleStringFormat:@"%1.2f" min:v20 max:v19 get:v5 set:v6];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_100864154;
  void v18[3] = &unk_1012FBBA8;
  void v18[4] = a3;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_100864160;
  void v17[3] = &unk_1012FBBC8;
  void v17[4] = a3;
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 3.0;
  id v9 = [(MapsDebugTableSection *)v4 addSliderRowWithTitle:@"Delay" subtitleStringFormat:@"%1.2f" min:v18 max:v17 get:0.0 set:v8];
  void v15[4] = a3;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_10086416C;
  v16[3] = &unk_1012FBBA8;
  void v16[4] = a3;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_100864178;
  void v15[3] = &unk_1012FBBC8;
  LODWORD(v10) = 3.0;
  id v11 = [(MapsDebugTableSection *)v4 addSliderRowWithTitle:@"Duration" subtitleStringFormat:@"%1.2f" min:v16 max:v15 get:0.0 set:v10];
  void v13[4] = a3;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100864358;
  void v14[3] = &unk_1012FBC08;
  void v14[4] = a3;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100864370;
  void v13[3] = &unk_1012FBC28;
  id v12 = [(MapsDebugTableSection *)v4 addCheckmarkRowsGroupWithContent:&stru_1012FBBE8 get:v14 set:v13];
}

float sub_10086413C(uint64_t a1)
{
  return **(float **)(a1 + 32);
}

uint64_t sub_100864148(uint64_t result, float a2)
{
  **(float **)(result + 32) = a2;
  return result;
}

float sub_100864154(uint64_t a1)
{
  return *(float *)(*(void *)(a1 + 32) + 4);
}

uint64_t sub_100864160(uint64_t result, float a2)
{
  *(float *)(*(void *)(result + 32) + 4) = a2;
  return result;
}

float sub_10086416C(uint64_t a1)
{
  return *(float *)(*(void *)(a1 + 32) + 8);
}

uint64_t sub_100864178(uint64_t result, float a2)
{
  *(float *)(*(void *)(result + 32) + _Block_object_dispose(&STACK[0x238], 8) = a2;
  return result;
}

void sub_100864184(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v15 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"None" value:&off_1013A8E78];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"Zero" value:&off_1013A8E90];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"One" value:&off_1013A8EA8];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"Linear" value:&off_1013A8EC0];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"QuadIn" value:&off_1013A8ED8];
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"QuadOut" value:&off_1013A8F08];
  id v8 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"QuadInOut" value:&off_1013A8E60];
  id v9 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"CubicIn" value:&off_1013A8EF0];
  id v10 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"CubicOut" value:&off_1013A8FB0];
  id v11 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"CubicInOut" value:&off_1013A8FC8];
  id v12 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"BounceOut" value:&off_1013A8FE0];
  id v13 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"BackIn" value:&off_1013A8F20];
  id v14 = [(MapsDebugCheckmarkRowsGroup *)v15 addRowWithTitle:@"BackOut" value:&off_1013A8FF8];
}

NSNumber *sub_100864358(uint64_t a1)
{
  return +[NSNumber numberWithUnsignedInteger:*(void *)(*(void *)(a1 + 32) + 16)];
}

id sub_100864370(uint64_t a1, void *a2)
{
  id result = [a2 unsignedIntegerValue];
  *(void *)(*(void *)(a1 + 32) + 16) = result;
  return result;
}

void sub_1008643A0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = +[VKDebugSettings sharedSettings];
  (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, v3, [v4 hideLabelAnimationParams]);
}

void sub_100864424(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = +[VKDebugSettings sharedSettings];
  (*(void (**)(uint64_t, id, char *))(v2 + 16))(v2, v3, (char *)[v4 hideLabelAnimationParams] + 24);
}

void sub_1008644A8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = +[VKDebugSettings sharedSettings];
  (*(void (**)(uint64_t, id, char *))(v2 + 16))(v2, v3, (char *)[v4 hideLabelAnimationParams] + 48);
}

void sub_10086452C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = +[VKDebugSettings sharedSettings];
  (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, v3, [v4 showLabelAnimationParams]);
}

void sub_1008645B0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = +[VKDebugSettings sharedSettings];
  (*(void (**)(uint64_t, id, char *))(v2 + 16))(v2, v3, (char *)[v4 showLabelAnimationParams] + 24);
}

void sub_100864634(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = +[VKDebugSettings sharedSettings];
  (*(void (**)(uint64_t, id, char *))(v2 + 16))(v2, v3, (char *)[v4 showLabelAnimationParams] + 48);
}

void sub_1008646B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100864780;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Transit" content:v5];
  objc_destroyWeak(&v6);
}

void sub_10086476C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100864780(id *a1, void *a2)
{
  id v17 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v17 title:@"Transit Highlighting" forVectorKitDebugKey:@"transitHighlighting"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v17 title:@"Show Transit Counts" forVectorKitDebugKey:@"paintTransitCounts"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v17 title:@"Disable Transit Line Drawing" forVectorKitDebugKey:@"disableTransitLineDrawing"];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v17 title:@"Disable Transit Line Merging" forVectorKitDebugKey:@"disableTransitLineMerging"];

  id v11 = objc_loadWeakRetained(a1);
  id v12 = [v11 addAllMapsSwitchRowToSection:v17 title:@"  Disable Transit Line Group Merging" forVectorKitDebugKey:@"disableTransitLineGroupMerging"];

  id v13 = objc_loadWeakRetained(a1);
  id v14 = [v13 addAllMapsSwitchRowToSection:v17 title:@"Dump Transit Tile Contents" forVectorKitDebugKey:@"dumpTransitTileContents"];

  id v15 = objc_loadWeakRetained(a1);
  id v16 = [v15 addAllMapsSwitchRowToSection:v17 title:@"Disable Intra-Link Line Crossings" forVectorKitDebugKey:@"disableIntraLinkTransitLineCrossings"];
}

void sub_100864918(uint64_t a1, void *a2)
{
  id v3 = a2;
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  void v28[2] = sub_100864D04;
  v28[3] = &unk_1012E7EF8;
  objc_copyWeak(&v29, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Labeling" content:v28];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100865040;
  v26[3] = &unk_1012E7EF8;
  objc_copyWeak(&v27, (id *)(a1 + 32));
  id v5 = [v3 addSectionWithTitle:@"Scenes" content:v26];
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_100865430;
  v24[3] = &unk_1012E7EF8;
  objc_copyWeak(&v25, (id *)(a1 + 32));
  id v6 = [v3 addSectionWithTitle:@"Modes" content:v24];
  id v7 = [v3 addSectionWithTitle:@"ForceLayoutType" content:&stru_1012FBCD0];
  id v8 = [v3 addSectionWithTitle:@"DebugScene" content:&stru_1012FBD50];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100866088;
  void v22[3] = &unk_1012E7EF8;
  objc_copyWeak(&v23, (id *)(a1 + 32));
  id v9 = [v3 addSectionWithTitle:@"AR" content:v22];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_1008661F0;
  void v20[3] = &unk_1012E7EF8;
  objc_copyWeak(&v21, (id *)(a1 + 32));
  id v10 = [v3 addSectionWithTitle:@"Avoidance" content:v20];
  id v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472;
  id v17 = sub_100866298;
  long long v18 = &unk_1012E7EF8;
  objc_copyWeak(&v19, (id *)(a1 + 32));
  id v11 = [v3 addSectionWithTitle:@"Camera" content:&v15];
  id v12 = [v3 addSectionWithTitle:@"Label Styling" content:&stru_1012FBF30 v15, v16, v17, v18];
  id v13 = [v3 addSectionWithTitle:@"Debug Animation Settings" content:&stru_1012FC150];
  id v14 = [v3 addSectionWithTitle:@"Debug Minimap" content:&stru_1012FC4B0];
  objc_destroyWeak(&v19);
  objc_destroyWeak(&v21);
  objc_destroyWeak(&v23);
  objc_destroyWeak(&v25);
  objc_destroyWeak(&v27);
  objc_destroyWeak(&v29);
}

void sub_100864C98(_Unwind_Exception *a1)
{
  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100864D04(id *a1, void *a2)
{
  id v3 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Show debug labeling state" forVectorKitDebugKey:@"arLabelingStateOverlay"];

  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Show debug miniMap" forVectorKitDebugKey:@"arDebugMiniMap"];

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_100864F0C;
  void v15[3] = &unk_1012E6998;
  objc_copyWeak(&v16, a1);
  id v8 = [v3 addSwitchRowWithTitle:@"Force Occluded Styling (delayed)" get:&stru_1012FBC70 set:v15];
  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v3 title:@"Force labels view oriented" forVectorKitDebugKey:@"arForceLabelsViewOriented"];

  id v11 = objc_loadWeakRetained(a1);
  id v12 = [v11 addAllMapsSwitchRowToSection:v3 title:@"Always show one Continue" forVectorKitDebugKey:@"arAlwaysShowOneContinueLabel"];

  id v13 = objc_loadWeakRetained(a1);
  id v14 = [v13 addAllMapsSwitchRowToSection:v3 title:@"Enable Environment Map (requires AR session restart)" forVectorKitDebugKey:@"arEnableEnvironmentMap"];

  objc_destroyWeak(&v16);
}

void sub_100864EB4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100864ECC(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 arForceOccludedStyling];

  return v2;
}

void sub_100864F0C(uint64_t a1, char a2)
{
  dispatch_time_t v4 = dispatch_time(0, 2000000000);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100864FC8;
  void v5[3] = &unk_1012E6830;
  char v7 = a2;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, v5);
  objc_destroyWeak(&v6);
}

void sub_100864FC8(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setArForceOccludedStyling:v2];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

void sub_100865040(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100865208;
  void v7[3] = &unk_1012EE2E8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1008652D8;
  void v5[3] = &unk_1012EE310;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FBC90 get:v7 set:v5];
  objc_destroyWeak(&v6);
  objc_destroyWeak(&v8);
}

void sub_100865158(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100865174(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"AppProvided" value:&off_1013A8E78];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"DebugRoute" value:&off_1013A8E90];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"DebugCustom" value:&off_1013A8EA8];
}

id sub_100865208(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  char v7 = [v6 _mapLayer];

  id v8 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v7 arSceneType]);

  return v8;
}

void sub_1008652D8(id *a1, void *a2)
{
  id v3 = [a2 integerValue];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  char v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = [*(id *)(*((void *)&v13 + 1) + 8 * (void)v11) _mapLayer];
        [v12 setARSceneType:v3];

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }
}

void sub_100865430(uint64_t a1, void *a2)
{
  id v3 = a2;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_1008656E8;
  void v17[3] = &unk_1012EE2E8;
  objc_copyWeak(&v18, (id *)(a1 + 32));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_1008657B8;
  void v15[3] = &unk_1012EE310;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  id v4 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FBCB0 get:v17 set:v15];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  uint64_t v10 = [v9 _mapLayer];

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_100865910;
  void v13[3] = &unk_1012E5D08;
  id v11 = v10;
  id v14 = v11;
  id v12 = [v3 addButtonRowWithTitle:@"Toggle AR (Debug)" action:v13];

  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
}

void sub_100865634(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100865654(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"GeoTracking" value:&off_1013A8E78];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"DebugRouteLocked" value:&off_1013A8E90];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"DebugVIO" value:&off_1013A8EA8];
}

id sub_1008656E8(uint64_t a1)
{
  double v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];

  id v8 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v7 arMode]);

  return v8;
}

void sub_1008657B8(id *a1, void *a2)
{
  id v3 = [a2 integerValue];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = [*(id *)(*((void *)&v13 + 1) + 8 * (void)v11) _mapLayer];
        [v12 setARMode:v3];

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }
}

id sub_100865910(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) mapType];
  if (v2 == 9) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = 9;
  }
  uint64_t v4 = 4 * (v2 != 9);
  [*(id *)(a1 + 32) setMapType:v3];
  id v5 = *(void **)(a1 + 32);

  return [v5 setDesiredMapMode:v4];
}

void sub_10086596C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addCheckmarkRowsGroupWithContent:&stru_1012FBCF0 get:&stru_1012FBD10 set:&stru_1012FBD30];
}

void sub_1008659A8(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"FaceAligned" value:&off_1013A8E78];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"FacePerpendicular" value:&off_1013A8E90];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"None" value:&off_1013A8EA8];
}

id sub_100865A3C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  id v2 = +[NSNumber numberWithUnsignedChar:](NSNumber, "numberWithUnsignedChar:", [v1 arDebugSceneForcedLayoutType]);

  return v2;
}

void sub_100865AA4(id a1, id a2)
{
  unsigned __int8 v2 = [a2 unsignedIntegerValue];
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setArDebugSceneForcedLayoutType:v2];
}

void sub_100865B04(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addCheckmarkRowsGroupWithContent:&stru_1012FBD70 get:&stru_1012FBD90 set:&stru_1012FBDB0];
  LODWORD(v3) = 1135869952;
  id v4 = [(MapsDebugTableSection *)v8 addSliderRowWithTitle:@"Feature Heading" subtitleStringFormat:@"%1.0f degrees" min:&stru_1012FBDD0 max:&stru_1012FBDF0 get:0.0 set:v3];
  id v5 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Feature Distance" placeholderText:@"meters" inputType:2 get:&stru_1012FBE30 set:&stru_1012FBE50];
  id v6 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Feature Text" placeholderText:@"meters" inputType:0 get:&stru_1012FBE70 set:&stru_1012FBE90];
  id v7 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"poi-type" placeholderText:@"209" inputType:1 get:&stru_1012FBEB0 set:&stru_1012FBED0];
}

void sub_100865C40(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Maneuver" value:&off_1013A8E78];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Arrival" value:&off_1013A8E90];
}

id sub_100865CB4(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  id v2 = +[NSNumber numberWithUnsignedChar:](NSNumber, "numberWithUnsignedChar:", [v1 arDebugSceneFeatureType]);

  return v2;
}

void sub_100865D1C(id a1, id a2)
{
  unsigned __int8 v2 = [a2 unsignedIntegerValue];
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setArDebugSceneFeatureType:v2];
}

float sub_100865D7C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugSceneFeatureHeading];
  float v3 = v2;

  return v3;
}

void sub_100865DC4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugSceneFeatureHeading:v3];
}

NSString *__cdecl sub_100865E1C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugSceneFeatureDistance];
  double v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100865E98(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v5 = +[VKDebugSettings sharedSettings];
  LODWORD(v4) = v3;
  [v5 setArDebugSceneFeatureDistance:v4];
}

NSString *__cdecl sub_100865EF8(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  int v2 = [v1 arDebugSceneFeatureText];

  return (NSString *)v2;
}

void sub_100865F4C(id a1, NSString *a2)
{
  int v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setArDebugSceneFeatureText:v2];
}

NSString *__cdecl sub_100865FB0(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  int v2 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [v1 arDebugScenePoiType]);

  return (NSString *)v2;
}

void sub_100866028(id a1, NSString *a2)
{
  NSInteger v2 = [(NSString *)a2 integerValue];
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setArDebugScenePoiType:v2];
}

void sub_100866088(id *a1, void *a2)
{
  id v15 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v15 title:@"Enable AR Camera Feed" forVectorKitDebugKey:@"arEnableCameraFeed"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v15 title:@"Enable routeline debug meshes" forVectorKitDebugKey:@"arEnableRouteLineDebugMeshes"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v15 title:@"Lock in localizing" forVectorKitDebugKey:@"arDebugLockLocalizingState"];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v15 title:@"Show Mesh Feature Bounds" forVectorKitDebugKey:@"arDebugDrawMeshFeatureBounds"];

  id v11 = objc_loadWeakRetained(a1);
  id v12 = [v11 addAllMapsSwitchRowToSection:v15 title:@"Show Label Feature Bounds" forVectorKitDebugKey:@"arDebugDrawLabelFeatureBounds"];

  id v13 = objc_loadWeakRetained(a1);
  id v14 = [v13 addAllMapsSwitchRowToSection:v15 title:@"Enable Arrival Animation" forVectorKitDebugKey:@"arIsArrivalAnimationEnabled"];
}

void sub_1008661F0(id *a1, void *a2)
{
  id v7 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v7 title:@"Show AR avoidance objects" forVectorKitDebugKey:@"arRenderAvoidanceObjects"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v7 title:@"Show AR avoidance intersection" forVectorKitDebugKey:@"arRenderAvoidanceObjectsIntersection"];
}

void sub_100866298(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v8 title:@"Debug Overlay" forVectorKitDebugKey:@"enableARCameraDebugOverlay"];

  LODWORD(v5) = -1035468800;
  LODWORD(v6) = 1112014848;
  id v7 = [v8 addSliderRowWithTitle:@"Camera View Elevation Offset" subtitleStringFormat:@"%1.2f meters" min:&stru_1012FBEF0 max:&stru_1012FBF10 get:v5 set:v6];
}

float sub_10086634C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arCameraElevationOffset];
  float v3 = v2;

  return v3;
}

void sub_100866394(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArCameraElevationOffset:v3];
}

void sub_1008663EC(id a1, MapsDebugTableSection *a2)
{
  id v19 = a2;
  LODWORD(v2) = 1125515264;
  id v3 = [(MapsDebugTableSection *)v19 addSliderRowWithTitle:@"Min Clip Distance" subtitleStringFormat:@"%1.2f meters" min:&stru_1012FBF50 max:&stru_1012FBF70 get:0.0 set:v2];
  LODWORD(v4) = 1125515264;
  id v5 = [(MapsDebugTableSection *)v19 addSliderRowWithTitle:@"Max Clip Distance" subtitleStringFormat:@"%1.2f meters" min:&stru_1012FBF90 max:&stru_1012FBFB0 get:0.0 set:v4];
  LODWORD(v6) = 25.0;
  id v7 = [(MapsDebugTableSection *)v19 addSliderRowWithTitle:@"Feature Elevation Offset" subtitleStringFormat:@"%1.1f meters" min:&stru_1012FBFD0 max:&stru_1012FBFF0 get:0.0 set:v6];
  id v8 = [(MapsDebugTableSection *)v19 addTextFieldRowWithTitle:@"Feature Elevation Offset" placeholderText:@"meters" inputType:2 get:&stru_1012FC010 set:&stru_1012FC030];
  LODWORD(v9) = 1036831949;
  LODWORD(v10) = 8.0;
  id v11 = [(MapsDebugTableSection *)v19 addSliderRowWithTitle:@"Base Scaling Factor" subtitleStringFormat:@"%1.2f" min:&stru_1012FC050 max:&stru_1012FC070 get:v9 set:v10];
  LODWORD(v12) = 0.5;
  LODWORD(v13) = 4.0;
  id v14 = [(MapsDebugTableSection *)v19 addSliderRowWithTitle:@"POI Scale" subtitleStringFormat:@"%1.2f" min:&stru_1012FC090 max:&stru_1012FC0B0 get:v12 set:v13];
  LODWORD(v15) = 1.0;
  id v16 = [(MapsDebugTableSection *)v19 addSliderRowWithTitle:@"POI Env Intensity" subtitleStringFormat:@"%1.2f" min:&stru_1012FC0D0 max:&stru_1012FC0F0 get:0.0 set:v15];
  LODWORD(v17) = 1.0;
  id v18 = [(MapsDebugTableSection *)v19 addSliderRowWithTitle:@"POI Light Intensity" subtitleStringFormat:@"%1.2f" min:&stru_1012FC110 max:&stru_1012FC130 get:0.0 set:v17];
}

float sub_1008665F0(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100866618(id a1, float a2)
{
}

float sub_10086662C(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100866654(id a1, float a2)
{
}

float sub_100866668(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arManeuverDebugElevationOffset];
  float v3 = v2;

  return v3;
}

void sub_1008666B0(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArManeuverDebugElevationOffset:v3];
}

NSString *__cdecl sub_100866708(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arManeuverDebugElevationOffset];
  double v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100866784(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v5 = +[VKDebugSettings sharedSettings];
  LODWORD(v4) = v3;
  [v5 setArManeuverDebugElevationOffset:v4];
}

float sub_1008667E4(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugStylingBaseScalingFactor];
  float v3 = v2;

  return v3;
}

void sub_10086682C(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugStylingBaseScalingFactor:v3];
}

float sub_100866884(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugStylingPOIIconScaleFactor];
  float v3 = v2;

  return v3;
}

void sub_1008668CC(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugStylingPOIIconScaleFactor:v3];
}

float sub_100866924(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugStylingPOIEnvMapIntensity];
  float v3 = v2;

  return v3;
}

void sub_10086696C(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugStylingPOIEnvMapIntensity:v3];
}

float sub_1008669C4(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugStylingPOILightIntensity];
  float v3 = v2;

  return v3;
}

void sub_100866A0C(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugStylingPOILightIntensity:v3];
}

void sub_100866A64(id a1, MapsDebugTableSection *a2)
{
  double v15 = a2;
  id v2 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Jump] - Offset" placeholderText:@"2" inputType:2 get:&stru_1012FC170 set:&stru_1012FC190];
  id v3 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Jump] - Duration" placeholderText:@"1.25" inputType:2 get:&stru_1012FC1B0 set:&stru_1012FC1D0];
  id v4 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Jump] - Start" placeholderText:@"0" inputType:2 get:&stru_1012FC1F0 set:&stru_1012FC210];
  id v5 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Fall] - Offset" placeholderText:@"0" inputType:2 get:&stru_1012FC230 set:&stru_1012FC250];
  id v6 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Fall] - Duration" placeholderText:@"1" inputType:2 get:&stru_1012FC270 set:&stru_1012FC290];
  id v7 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Fall] - Start" placeholderText:@"1.25" inputType:2 get:&stru_1012FC2B0 set:&stru_1012FC2D0];
  id v8 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Rotate] - Offset" placeholderText:@"2" inputType:2 get:&stru_1012FC2F0 set:&stru_1012FC310];
  id v9 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Rotate] - Duration" placeholderText:@"2" inputType:2 get:&stru_1012FC330 set:&stru_1012FC350];
  id v10 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Rotate] - Start" placeholderText:@"0.15" inputType:2 get:&stru_1012FC370 set:&stru_1012FC390];
  id v11 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Pulse] - Offset" placeholderText:@"0.8" inputType:2 get:&stru_1012FC3B0 set:&stru_1012FC3D0];
  id v12 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Pulse] - Duration" placeholderText:@"0.5" inputType:2 get:&stru_1012FC3F0 set:&stru_1012FC410];
  id v13 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Pulse] - Start" placeholderText:@"2" inputType:2 get:&stru_1012FC430 set:&stru_1012FC450];
  id v14 = [(MapsDebugTableSection *)v15 addTextFieldRowWithTitle:@"[Pulse] - Repeats" placeholderText:@"4" inputType:2 get:&stru_1012FC470 set:&stru_1012FC490];
}

NSString *__cdecl sub_100866D44(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arJumpOffset];
  id v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100866DC0(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArJumpOffset:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arJumpOffset];
  [v7 setFloat:@"VKARAnimationPOIJumpOffset" forKey:];
}

NSString *__cdecl sub_100866E68(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arJumpDuration];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100866EE4(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArJumpDuration:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arJumpDuration];
  [v7 setFloat:@"VKARAnimationPOIJumpDuration" forKey:];
}

NSString *__cdecl sub_100866F8C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arJumpStart];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100867008(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArJumpStart:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arJumpStart];
  [v7 setFloat:@"VKARAnimationPOIJumpStart" forKey:];
}

NSString *__cdecl sub_1008670B0(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arFallOffset];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_10086712C(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArFallOffset:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arFallOffset];
  [v7 setFloat:@"VKARAnimationPOIFallOffset" forKey:];
}

NSString *__cdecl sub_1008671D4(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arFallDuration];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100867250(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArFallDuration:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arFallDuration];
  [v7 setFloat:@"VKARAnimationPOIFallDuration" forKey:];
}

NSString *__cdecl sub_1008672F8(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arFallStart];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100867374(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArFallStart:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arFallStart];
  [v7 setFloat:@"VKARAnimationPOIFallStart" forKey:];
}

NSString *__cdecl sub_10086741C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arRotateOffset];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100867498(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArRotateOffset:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arRotateOffset];
  [v7 setFloat:@"VKARAnimationPOIRotateOffset" forKey:];
}

NSString *__cdecl sub_100867540(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arRotateDuration];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_1008675BC(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArRotateDuration:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arRotateDuration];
  [v7 setFloat:@"VKARAnimationPOIRotateDuration" forKey:];
}

NSString *__cdecl sub_100867664(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arRotateStart];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_1008676E0(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArRotateStart:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arRotateStart];
  [v7 setFloat:@"VKARAnimationPOIRotateStart" forKey:];
}

NSString *__cdecl sub_100867788(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arPulseOffset];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100867804(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArPulseOffset:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arPulseOffset];
  [v7 setFloat:@"VKARAnimationPOIPulseOffset" forKey:];
}

NSString *__cdecl sub_1008678AC(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arPulseDuration];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100867928(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArPulseDuration:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arPulseDuration];
  [v7 setFloat:@"VKARAnimationPOIPulseDuration" forKey:];
}

NSString *__cdecl sub_1008679D0(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arPulseStart];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100867A4C(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArPulseStart:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arPulseStart];
  [v7 setFloat:@"VKARAnimationPOIPulseStart" forKey:@"VKARAnimationPOIPulseStart"];
}

NSString *__cdecl sub_100867AF4(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arPulseNumberOfRepeats];
  int v3 = +[NSString stringWithFormat:@"%f", v2];

  return (NSString *)v3;
}

void sub_100867B70(id a1, NSString *a2)
{
  [(NSString *)a2 floatValue];
  int v3 = v2;
  id v4 = +[VKDebugSettings sharedSettings];
  LODWORD(v5) = v3;
  [v4 setArPulseNumberOfRepeats:v5];

  id v7 = +[NSUserDefaults standardUserDefaults];
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 arPulseNumberOfRepeats];
  [v7 setFloat:@"VKARAnimationPOIPulseRepeats" forKey:];
}

void sub_100867C18(id a1, MapsDebugTableSection *a2)
{
  id v13 = a2;
  LODWORD(v2) = 1112014848;
  LODWORD(v3) = 1140457472;
  id v4 = [(MapsDebugTableSection *)v13 addSliderRowWithTitle:@"Map Rect Size" subtitleStringFormat:@"%1.1f meters" min:&stru_1012FC4D0 max:&stru_1012FC4F0 get:v2 set:v3];
  LODWORD(v5) = 1.0;
  LODWORD(v6) = 1036831949;
  id v7 = [(MapsDebugTableSection *)v13 addSliderRowWithTitle:@"Screen Rect Size" subtitleStringFormat:@"%0.2f percent" min:&stru_1012FC510 max:&stru_1012FC530 get:v6 set:v5];
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 1063675494;
  id v9 = [(MapsDebugTableSection *)v13 addSliderRowWithTitle:@"Screen Rect xOffset" subtitleStringFormat:@"%0.2f percent" min:&stru_1012FC550 max:&stru_1012FC570 get:0.0 set:v8];
  LODWORD(v10) = 1036831949;
  LODWORD(v11) = 1063675494;
  id v12 = [(MapsDebugTableSection *)v13 addSliderRowWithTitle:@"Screen Rect yOffset" subtitleStringFormat:@"%0.2f percent" min:&stru_1012FC590 max:&stru_1012FC5B0 get:v10 set:v11];
}

float sub_100867D50(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugMiniMapMapRectSize];
  float v3 = v2;

  return v3;
}

void sub_100867D98(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugMiniMapMapRectSize:v3];
}

float sub_100867DF0(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugMiniMapScreenRectSize];
  float v3 = v2;

  return v3;
}

void sub_100867E38(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugMiniMapScreenRectSize:v3];
}

float sub_100867E90(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugMiniMapScreenRectXOffset];
  float v3 = v2;

  return v3;
}

void sub_100867ED8(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugMiniMapScreenRectXOffset:v3];
}

float sub_100867F30(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  [v1 arDebugMiniMapScreenRectYOffset];
  float v3 = v2;

  return v3;
}

void sub_100867F78(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDebugMiniMapScreenRectYOffset:v3];
}

void sub_100867FD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:@"Frame Rate" content:&stru_1012FC5D0];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_100868538;
  void v27[3] = &unk_1012E7EF8;
  objc_copyWeak(&v28, (id *)(a1 + 40));
  id v5 = [v3 addSectionWithTitle:@"Puck" content:v27];
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1008685E0;
  v24[3] = &unk_1012EE3E8;
  objc_copyWeak(&v26, (id *)(a1 + 40));
  id v25 = *(id *)(a1 + 32);
  id v6 = [v3 addSectionWithTitle:@"Route" content:v24];
  if (+[VKMapView _elevatedGroundIsEnabled])
  {
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    void v21[2] = sub_100868960;
    v21[3] = &unk_1012EE3E8;
    objc_copyWeak(&v23, (id *)(a1 + 40));
    id v22 = *(id *)(a1 + 32);
    id v7 = [v3 addSectionWithTitle:@"DaVinci Route" content:v21];

    objc_destroyWeak(&v23);
  }
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100868DC8;
  v19[3] = &unk_1012EE018;
  id v20 = *(id *)(a1 + 32);
  id v8 = [v3 addSectionWithTitle:@"Route Debug Points" content:v19];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_100868E94;
  void v17[3] = &unk_1012E7EF8;
  objc_copyWeak(&v18, (id *)(a1 + 40));
  id v9 = [v3 addSectionWithTitle:@"ETA Labels" content:v17];
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472;
  id v14 = sub_1008690A4;
  double v15 = &unk_1012EE018;
  id v16 = *(id *)(a1 + 32);
  id v10 = [v3 addSectionWithTitle:@"ETA Label Debug Score" content:&v12];
  id v11 = [v3 addSectionWithTitle:@"ETA Label Orientation Filter" content:&stru_1012FC720 v12, v13, v14, v15];

  objc_destroyWeak(&v18);
  objc_destroyWeak(&v26);
  objc_destroyWeak(&v28);
}

void sub_10086832C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086836C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addCheckmarkRowsGroupWithContent:&stru_1012FC5F0 get:&stru_1012FC610 set:&stru_1012FC630];
}

void sub_1008683A8(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Default" value:&off_1013A8E00];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Native" value:&off_1013A8E18];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"30 fps" value:&off_1013A8E48];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"60 fps" value:&off_1013A8E30];
}

id sub_10086845C(id a1)
{
  double v1 = +[VKDebugSettings sharedSettings];
  id v2 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v1 navDisplayRate]);

  return v2;
}

void sub_1008684C4(id a1, id a2)
{
  id v2 = a2;
  id v4 = +[VKDebugSettings sharedSettings];
  id v3 = [v2 integerValue];

  [v4 setNavDisplayRate:v3];
}

void sub_100868538(id *a1, void *a2)
{
  id v7 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v7 title:@"Enable 3D Puck" forVectorKitDebugKey:@"enable3DPuck"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v7 title:@"Snap Puck to Routeline" forVectorKitDebugKey:@"enablePuckRouteLineSnapping"];
}

void sub_1008685E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Disable Route Line Matching" forVectorKitDebugKey:@"dontMatchRouteLine"];

  id v7 = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = [v7 addAllMapsSwitchRowToSection:v3 title:@"Highlight Route Line Snapping Status" forVectorKitDebugKey:@"highlightRouteLineSnappingStatus"];

  id v9 = objc_loadWeakRetained((id *)(a1 + 40));
  id v10 = [v9 addAllMapsSwitchRowToSection:v3 title:@"Disable Route Snapping Verification" forVectorKitDebugKey:@"dontVerifyRouteToTransitSnapping"];

  id v11 = objc_loadWeakRetained((id *)(a1 + 40));
  id v12 = [v11 addAllMapsSwitchRowToSection:v3 title:@"Show Maneuver Points" forVectorKitDebugKey:@"showManeuverPoints"];

  id v13 = objc_loadWeakRetained((id *)(a1 + 40));
  id v14 = [v13 addAllMapsSwitchRowToSection:v3 title:@"Dump Route Responses & Paths" forVectorKitDebugKey:@"dumpRouteAndPath"];

  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  void v29[2] = sub_1008688F4;
  v29[3] = &unk_1012FB138;
  objc_copyWeak(&v30, (id *)(a1 + 40));
  LODWORD(v15) = 3.0;
  LODWORD(v16) = 18.0;
  LODWORD(v17) = 12.0;
  id v18 = [v3 addSliderRowWithTitle:@"Route Arrow Min Zoom" subtitleStringFormat:@"zoom: %1.1f" min:@"RouteArrowMinZoom" max:v29 defaultsKey:v15 sliderValueIfUnset:v16 changeHandler:v17];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_100868934;
  void v27[3] = &unk_1012FC658;
  id v28 = *(id *)(a1 + 32);
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_100868954;
  void v25[3] = &unk_1012FC680;
  id v26 = *(id *)(a1 + 32);
  LODWORD(v19) = 3.0;
  id v20 = [v3 addSliderRowWithTitle:@"Additional Continuous Multi-Section Overlap" subtitleStringFormat:@"scale:  %1.1f" min:v27 max:v25 get:0.0 set:v19];
  id v21 = objc_loadWeakRetained((id *)(a1 + 40));
  id v22 = [v21 addAllMapsSwitchRowToSection:v3 title:@"Disable Continuous Mulit-Section Routes" forVectorKitDebugKey:@"disableContinuousMultiSectionRoutes"];

  id v23 = objc_loadWeakRetained(v4);
  id v24 = [v23 addAllMapsSwitchRowToSection:v3 title:@"Highlight Underground Route Geometry" forVectorKitDebugKey:@"highlightUndergroundRouteGeometry"];

  objc_destroyWeak(&v30);
}

void sub_1008688DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1008688F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

float sub_100868934(uint64_t a1)
{
  return (float)[*(id *)(a1 + 32) continuousMultiSectionRouteAdditionalOverlap];
}

id sub_100868954(uint64_t a1, float a2)
{
  return _[*(id *)(a1 + 32) setContinuousMultiSectionRouteAdditionalOverlap:a2];
}

void sub_100868960(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Show Routeline Animation" forVectorKitDebugKey:@"showRoutelineAnimation"];

  id v6 = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Enable DaVinci Style Route" forVectorKitDebugKey:@"enableDaVinciStyleRoute"];

  id v8 = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Enable Dynamic Route Width" forVectorKitDebugKey:@"enableDynamicRouteWidth"];

  id v10 = objc_loadWeakRetained((id *)(a1 + 40));
  id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Show Route Static Width" forVectorKitDebugKey:@"showStaticRouteWidth"];

  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472;
  void v34[2] = sub_100868D88;
  v34[3] = &unk_1012FC658;
  id v35 = *(id *)(a1 + 32);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_100868D90;
  v32[3] = &unk_1012FC680;
  id v33 = *(id *)(a1 + 32);
  LODWORD(v12) = 1128792064;
  id v13 = [v3 addSliderRowWithTitle:@"DaVinci Route Traffic Transition Distance (in meters)" subtitleStringFormat:@"scale:  %1.1f" min:v34 max:v32 get:0.0 set:v12];
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_100868D98;
  void v30[3] = &unk_1012FC658;
  id v31 = *(id *)(a1 + 32);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  void v28[2] = sub_100868DA0;
  v28[3] = &unk_1012FC680;
  id v29 = *(id *)(a1 + 32);
  LODWORD(v14) = 10.0;
  id v15 = [v3 addSliderRowWithTitle:@"DaVinci Route Width Start Transition Distance (in meters)" subtitleStringFormat:@"scale:  %1.1f" min:v30 max:v28 get:0.0 set:v14];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100868DA8;
  v26[3] = &unk_1012FC658;
  id v27 = *(id *)(a1 + 32);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_100868DB0;
  v24[3] = &unk_1012FC680;
  id v25 = *(id *)(a1 + 32);
  LODWORD(v16) = 10.0;
  id v17 = [v3 addSliderRowWithTitle:@"DaVinci Route Width End Transition Distance (in meters)" subtitleStringFormat:@"scale:  %1.1f" min:v26 max:v24 get:0.0 set:v16];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100868DB8;
  void v22[3] = &unk_1012FC658;
  id v23 = *(id *)(a1 + 32);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_100868DC0;
  void v20[3] = &unk_1012FC680;
  id v21 = *(id *)(a1 + 32);
  LODWORD(v1_Block_object_dispose(&STACK[0x238], 8) = 5.0;
  id v19 = [v3 addSliderRowWithTitle:@"DaVinci Route Windshield Animation Time (in seconds)" subtitleStringFormat:@"second:  %1.1f" min:v22 max:v20 get:0.0 set:v18];
}

id sub_100868D88(uint64_t a1)
{
  return _[*(id *)(a1 + 32) routeTrafficTransitionDistance];
}

id sub_100868D90(uint64_t a1)
{
  return [*(id *)(a1 + 32) setRouteTrafficTransitionDistance:];
}

id sub_100868D98(uint64_t a1)
{
  return _[*(id *)(a1 + 32) routeWidthStartTransitionDistance];
}

id sub_100868DA0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setRouteWidthStartTransitionDistance:];
}

id sub_100868DA8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) routeWidthEndTransitionDistance];
}

id sub_100868DB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setRouteWidthEndTransitionDistance:];
}

id sub_100868DB8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) routeWindshieldAnimationTime];
}

id sub_100868DC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setRouteWindshieldAnimationTime:];
}

id sub_100868DC8(uint64_t a1, void *a2)
{
  return [a2 addCheckmarkRowsGroupWithContent:&stru_1012FC6A0 object:*(void *)(a1 + 32) key:@"routeDebugPoints"];
}

void sub_100868E00(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Hidden" value:&off_1013A8E00];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Continuous Multi-Section" value:&off_1013A8E18];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Elevation" value:&off_1013A8E48];
}

void sub_100868E94(id *a1, void *a2)
{
  id v15 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v15 title:@"Enable Debugging" forVectorKitDebugKey:@"enableEtaLabelDebugging"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v15 title:@"Enable Searched Label Rects" forVectorKitDebugKey:@"enableEtaLabelRectDebugging"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v15 title:@"Enable Share Section Debugging" forVectorKitDebugKey:@"enableRouteShareSectionDebugging"];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v15 title:@"Enable Route Intersection Testing" forVectorKitDebugKey:@"enableRouteIntersectionTesting"];

  id v11 = objc_loadWeakRetained(a1);
  id v12 = [v11 addAllMapsSwitchRowToSection:v15 title:@"avoid Screen Edges" forVectorKitDebugKey:@"etaLabelsAvoidScreenEdges"];

  id v13 = [v15 addButtonRowWithTitle:@"force placement" action:&stru_1012FC6C0];
  id v14 = [v15 addButtonRowWithTitle:@"trace debug log" action:&stru_1012FC6E0];
}

void sub_10086900C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 setForceEtaLabelPlacement:1];
}

void sub_100869058(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 setTraceEtaDebugLog:1];
}

id sub_1008690A4(uint64_t a1, void *a2)
{
  return [a2 addCheckmarkRowsGroupWithContent:&stru_1012FC700 object:*(void *)(a1 + 32) key:@"etaLabelDebugScore"];
}

void sub_1008690DC(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"None" value:&off_1013A8E00];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Other Label Overlap" value:&off_1013A8E18];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Route Overlap" value:&off_1013A8E48];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Other Route Nearest Distance" value:&off_1013A8E30];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Artistic Balancing" value:&off_1013A8F80];
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Clipped Area" value:&off_1013A9010];
  id v8 = [(MapsDebugCheckmarkRowsGroup *)v9 addRowWithTitle:@"Avoidance Area Overlap" value:&off_1013A9028];
}

void sub_1008691F0(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Up Left" get:&stru_1012FC740 set:&stru_1012FC760];
  id v3 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Up Right" get:&stru_1012FC780 set:&stru_1012FC7A0];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Down Left" get:&stru_1012FC7C0 set:&stru_1012FC7E0];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Down Right" get:&stru_1012FC800 set:&stru_1012FC820];
}

BOOL sub_1008692C4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  BOOL v2 = [v1 etaLabelDebugOrientationMask] & 1;

  return v2;
}

void sub_100869304(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v5 = +[VKDebugSettings sharedSettings];
  uint64_t v3 = [v5 etaLabelDebugOrientationMask] & 0xFFFFFFFE | v2;
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setEtaLabelDebugOrientationMask:v3];
}

BOOL sub_10086937C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned int v2 = ([v1 etaLabelDebugOrientationMask] >> 1) & 1;

  return v2;
}

void sub_1008693BC(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v7 = +[VKDebugSettings sharedSettings];
  unint64_t v3 = (unint64_t)[v7 etaLabelDebugOrientationMask] & 0xFFFFFFFD;
  if (v2) {
    int v4 = 2;
  }
  else {
    int v4 = 0;
  }
  uint64_t v5 = v3 | v4;
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 setEtaLabelDebugOrientationMask:v5];
}

BOOL sub_100869440(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned int v2 = ([v1 etaLabelDebugOrientationMask] >> 2) & 1;

  return v2;
}

void sub_100869480(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v7 = +[VKDebugSettings sharedSettings];
  unint64_t v3 = (unint64_t)[v7 etaLabelDebugOrientationMask] & 0xFFFFFFFB;
  if (v2) {
    int v4 = 4;
  }
  else {
    int v4 = 0;
  }
  uint64_t v5 = v3 | v4;
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 setEtaLabelDebugOrientationMask:v5];
}

BOOL sub_100869504(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned int v2 = ([v1 etaLabelDebugOrientationMask] >> 3) & 1;

  return v2;
}

void sub_100869544(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v7 = +[VKDebugSettings sharedSettings];
  unint64_t v3 = (unint64_t)[v7 etaLabelDebugOrientationMask] & 0xFFFFFFF7;
  if (v2) {
    int v4 = 8;
  }
  else {
    int v4 = 0;
  }
  uint64_t v5 = v3 | v4;
  id v6 = +[VKDebugSettings sharedSettings];
  [v6 setEtaLabelDebugOrientationMask:v5];
}

void sub_1008695C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100869690;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Traffic" content:v5];
  objc_destroyWeak(&v6);
}

void sub_10086967C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100869690(id *a1, void *a2)
{
  id v10 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v10 title:@"Load Fast Traffic" forVectorKitDebugKey:@"loadGreenTraffic"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v10 title:@"Show Traffic Offset" forVectorKitDebugKey:@"showTrafficOffset"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v10 title:@"Static Feed" forVectorKitDebugKey:@"useStaticTrafficFeed"];

  id v9 = [v10 addSwitchRowWithTitle:@"Show Traffic Casing" get:&stru_1012FC840 set:&stru_1012FC860];
}

BOOL sub_100869790(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 showTrafficCasing];

  return v2;
}

void sub_1008697D0(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:VKShouldFlushTileCachesNotification object:0];

  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setShowTrafficCasing:v2];
}

void sub_100869854(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100869930;
  void v5[3] = &unk_1012EE3E8;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Buildings" content:v5];

  objc_destroyWeak(&v7);
}

void sub_10086991C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100869930(uint64_t a1, void *a2)
{
  id v3 = a2;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100869B1C;
  void v11[3] = &unk_1012E6998;
  objc_copyWeak(&v12, (id *)(a1 + 40));
  id v4 = [v3 addSwitchRowWithTitle:@"Disable Compressed Buildings" get:&stru_1012FC880 set:v11];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_100869CBC;
  _OWORD v9[3] = &unk_1012FC658;
  id v10 = *(id *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100869CC4;
  void v7[3] = &unk_1012FC680;
  id v8 = *(id *)(a1 + 32);
  LODWORD(v5) = 3.0;
  id v6 = [v3 addSliderRowWithTitle:@"Building Rounding Radius" subtitleStringFormat:@"%1.1f" min:v9 max:v7 get:0.0 set:v5];

  objc_destroyWeak(&v12);
}

void sub_100869AC4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100869ADC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 compressedBuildingsDisabled];

  return v2;
}

void sub_100869B1C(id *a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setCompressedBuildingsDisabled:a2];

  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];

  id v9 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v17;
    uint64_t v12 = a2 ^ 1;
    do
    {
      id v13 = 0;
      do
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        id v14 = [*(id *)(*((void *)&v16 + 1) + 8 * (void)v13) _mapLayer];
        [v14 setCompressedBuildingsEnabled:v12];

        id v13 = (char *)v13 + 1;
      }
      while (v10 != v13);
      id v10 = [v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  id v15 = +[NSNotificationCenter defaultCenter];
  [v15 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

id sub_100869CBC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) daVinciBuildingRoundingRadius];
}

void sub_100869CC4(uint64_t a1)
{
  [*(id *)(a1 + 32) setDaVinciBuildingRoundingRadius:];
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

void sub_100869D24(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = _NSConcreteStackBlock;
  uint64_t v7 = 3221225472;
  id v8 = sub_100869E24;
  id v9 = &unk_1012EE3E8;
  objc_copyWeak(&v11, (id *)(a1 + 40));
  id v10 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Altitude" content:&v6];
  id v5 = [v3 addSectionWithTitle:@"Hybrid Unavailability Simulation" content:&stru_1012FC8A0];

  objc_destroyWeak(&v11);
}

void sub_100869E0C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100869E24(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Pause Loading" forVectorKitDebugKey:@"altitudePauseLoading"];

  id v6 = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Freeze View Node" forVectorKitDebugKey:@"altitudeFreezeViewNode"];

  id v8 = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Enable JPEG texture paging" forVectorKitDebugKey:@"altitudeTexturePaging"];

  id v10 = objc_loadWeakRetained((id *)(a1 + 40));
  id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Show Tile Bounds" forVectorKitDebugKey:@"altitudeShowTileBounds"];

  id v12 = objc_loadWeakRetained((id *)(a1 + 40));
  id v13 = [v12 addAllMapsSwitchRowToSection:v3 title:@"Mipmap Satellite Textures" forVectorKitDebugKey:@"altitudeMipmapSatellite"];

  id v14 = objc_loadWeakRetained((id *)(a1 + 40));
  id v15 = [v14 addAllMapsSwitchRowToSection:v3 title:@"Mipmap Flyover Textures" forVectorKitDebugKey:@"altitudeMipmapFlyover"];

  id v16 = objc_loadWeakRetained((id *)(a1 + 40));
  id v17 = [v16 addAllMapsSwitchRowToSection:v3 title:@"Mipmap ObjectTree Textures" forVectorKitDebugKey:@"altitudeMipmapObjectTree"];

  id v18 = objc_loadWeakRetained((id *)(a1 + 40));
  id v19 = [v18 addAllMapsSwitchRowToSection:v3 title:@"Show Night Light" forVectorKitDebugKey:@"altitudeShowNightLight"];

  id v20 = objc_loadWeakRetained((id *)(a1 + 40));
  id v21 = [v20 addAllMapsSwitchRowToSection:v3 title:@"Print Rendered Tile Stats" forVectorKitDebugKey:@"altitudePrintRenderedTilesStat"];

  id v22 = objc_loadWeakRetained((id *)(a1 + 40));
  id v23 = [v22 addAllMapsSwitchRowToSection:v3 title:@"Disable C3M texture loading" forVectorKitDebugKey:@"altitudeDisableC3mTextureLoading"];

  id v24 = objc_loadWeakRetained((id *)(a1 + 40));
  id v25 = [v24 addAllMapsSwitchRowToSection:v3 title:@"Show trigger bounds" forVectorKitDebugKey:@"altitudeShowTriggerBounds"];

  v58[0] = _NSConcreteStackBlock;
  v58[1] = 3221225472;
  v58[2] = sub_10086A498;
  v58[3] = &unk_1012FC658;
  id v59 = *(id *)(a1 + 32);
  v56[0] = _NSConcreteStackBlock;
  v56[1] = 3221225472;
  v56[2] = sub_10086A4A0;
  v56[3] = &unk_1012FC680;
  id v57 = *(id *)(a1 + 32);
  LODWORD(v26) = 1036831949;
  LODWORD(v27) = 3.0;
  id v28 = [v3 addSliderRowWithTitle:@"LOD Scale" subtitleStringFormat:@"scale:  %1.1f" min:v58 max:v56 get:v26 set:v27];
  v54[0] = _NSConcreteStackBlock;
  v54[1] = 3221225472;
  v54[2] = sub_10086A4A8;
  v54[3] = &unk_1012FC658;
  id v55 = *(id *)(a1 + 32);
  v52[0] = _NSConcreteStackBlock;
  v52[1] = 3221225472;
  v52[2] = sub_10086A4B0;
  v52[3] = &unk_1012FC680;
  id v53 = *(id *)(a1 + 32);
  LODWORD(v29) = 1.0;
  id v30 = [v3 addSliderRowWithTitle:@"Tile quality threshold" subtitleStringFormat:@"scale:  %1.1f" min:v54 max:v52 get:0.0 set:v29];
  v50[0] = _NSConcreteStackBlock;
  v50[1] = 3221225472;
  v50[2] = sub_10086A4B8;
  v50[3] = &unk_1012FC658;
  id v51 = *(id *)(a1 + 32);
  v48[0] = _NSConcreteStackBlock;
  v48[1] = 3221225472;
  v48[2] = sub_10086A4C0;
  v48[3] = &unk_1012FC680;
  id v49 = *(id *)(a1 + 32);
  LODWORD(v31) = 2.0;
  id v32 = [v3 addSliderRowWithTitle:@"Hide mesh time" subtitleStringFormat:@"time:  %1.1f" min:v50 max:v48 get:0.0 set:v31];
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_10086A4C8;
  v46[3] = &unk_1012FC658;
  id v47 = *(id *)(a1 + 32);
  v44[0] = _NSConcreteStackBlock;
  v44[1] = 3221225472;
  v44[2] = sub_10086A4D0;
  v44[3] = &unk_1012FC680;
  id v45 = *(id *)(a1 + 32);
  LODWORD(v33) = 20.0;
  id v34 = [v3 addSliderRowWithTitle:@"Fade speed" subtitleStringFormat:@"time:  %1.1f" min:v46 max:v44 get:0.0 set:v33];
  id v35 = objc_loadWeakRetained((id *)(a1 + 40));
  id v36 = [v35 addAllMapsSwitchRowToSection:v3 title:@"Enable tour speedup" forVectorKitDebugKey:@"altitudeTourSpeedup"];

  v42[0] = _NSConcreteStackBlock;
  v42[1] = 3221225472;
  v42[2] = sub_10086A4D8;
  v42[3] = &unk_1012FC658;
  id v43 = *(id *)(a1 + 32);
  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472;
  v40[2] = sub_10086A4E0;
  v40[3] = &unk_1012FC680;
  id v41 = *(id *)(a1 + 32);
  LODWORD(v37) = -5.0;
  LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 10.0;
  id v39 = [v3 addSliderRowWithTitle:@"Flyover tour speedup" subtitleStringFormat:@"factor:  %1.1f" min:v42 max:v40 get:v37 set:v38];
}

id sub_10086A498(uint64_t a1)
{
  return _[*(id *)(a1 + 32) altitudeLodScale];
}

id sub_10086A4A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAltitudeLodScale:];
}

id sub_10086A4A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) altitudeTileQualityThreshold];
}

id sub_10086A4B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAltitudeTileQualityThreshold:];
}

id sub_10086A4B8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) altitudeHideMeshTime];
}

id sub_10086A4C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAltitudeHideMeshTime:];
}

id sub_10086A4C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) altitudeFadeSpeed];
}

id sub_10086A4D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAltitudeFadeSpeed:];
}

id sub_10086A4D8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) altitudeTourSpeedupFactor];
}

id sub_10086A4E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAltitudeTourSpeedupFactor:];
}

void sub_10086A4E8(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = GeoServicesConfig_HybridUnavailableSimulationType[0];
  uint64_t v3 = GeoServicesConfig_HybridUnavailableSimulationType[1];
  id v5 = a2;
  id v4 = -[MapsDebugTableSection addCheckmarkRowsGroupForConfigKey:content:](v5, "addCheckmarkRowsGroupForConfigKey:content:", v2, v3, &stru_1012FC8C0);
  [(MapsDebugTableSection *)v5 setFooter:@"Restart Maps after changing this setting."];
}

void sub_10086A560(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"N/A" value:0];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Unavailable in China" value:&off_1013A8E90];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Unavailable outside of China" value:&off_1013A8EA8];
}

void sub_10086A5F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10086A6B8;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Map Inspector" content:v5];
  objc_destroyWeak(&v6);
}

void sub_10086A6A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086A6B8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _activateMapInspector:v5];

  id v4 = [v5 addSwitchRowWithTitle:@"Set Map Inspector to Activate on Launch" get:&stru_1012FC8E0 set:&stru_1012FC900];
}

BOOL sub_10086A73C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"ActivateMapInspectorOnLaunch"];

  return v2;
}

void sub_10086A784(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"ActivateMapInspectorOnLaunch"];
}

void sub_10086A7E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10086A8AC;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Run Flyover Tour" content:v5];
  objc_destroyWeak(&v6);
}

void sub_10086A898(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086A8AC(uint64_t a1, void *a2)
{
  id v34 = a2;
  id v32 = +[GEOAltitudeManifest sharedManager];
  id location = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained delegate];
  id v5 = objc_loadWeakRetained(location);
  id v6 = [v4 allVisibleMapViewsForDebugController:v5];
  double v33 = [v6 firstObject];

  id obj = [v32 availableRegions];
  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id v30 = [obj countByEnumeratingWithState:&v46 objects:v50 count:16];
  if (v30)
  {
    uint64_t v29 = *(void *)v47;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v47 != v29)
        {
          uint64_t v8 = v7;
          objc_enumerationMutation(obj);
          uint64_t v7 = v8;
        }
        uint64_t v31 = v7;
        id v9 = *(void **)(*((void *)&v46 + 1) + 8 * v7);
        id v10 = [v32 nameForRegion:[v9 unsignedIntValue]];
        if (v10)
        {
          id v11 = [v32 tourIdsForRegion:[v9 unsignedIntValue]];
          id v12 = [v32 tripIdsForRegion:[v9 unsignedIntValue]];
          if ([v11 count])
          {
            unint64_t v13 = 0;
            unsigned int v14 = 1;
            do
            {
              id v15 = [v11 objectAtIndexedSubscript:v13];
              id v16 = [v12 objectAtIndexedSubscript:v13];
              id v17 = +[NSString stringWithFormat:@"%@ (region: %@) [%@]", v10, v9, v16];
              v43[0] = _NSConcreteStackBlock;
              v43[1] = 3221225472;
              v43[2] = sub_10086AD78;
              v43[3] = &unk_1012E5D58;
              id v44 = v33;
              id v45 = v15;
              id v18 = v15;
              id v19 = [v34 addButtonRowWithTitle:v17 action:v43];

              unint64_t v13 = v14++;
            }
            while ((unint64_t)[v11 count] > v13);
          }
        }
        uint64_t v7 = v31 + 1;
      }
      while ((id)(v31 + 1) != v30);
      id v30 = [obj countByEnumeratingWithState:&v46 objects:v50 count:16];
    }
    while (v30);
  }
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472;
  v39[2] = sub_10086ADBC;
  v39[3] = &unk_1012FA980;
  id v20 = obj;
  id v40 = v20;
  id v21 = v32;
  id v41 = v21;
  objc_copyWeak(&v42, location);
  id v22 = [v34 addButtonRowWithTitle:@"Run all tours" action:v39];
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472;
  v37[2] = sub_10086AFA0;
  v37[3] = &unk_1012E5D08;
  id v23 = v33;
  id v38 = v23;
  id v24 = [v34 addButtonRowWithTitle:@"Pause Tour" action:v37];
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472;
  v35[2] = sub_10086AFA8;
  id v35[3] = &unk_1012E5D08;
  id v25 = v23;
  id v36 = v25;
  id v26 = [v34 addButtonRowWithTitle:@"Resume Tour" action:v35];

  objc_destroyWeak(&v42);
}

void sub_10086AD58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_10086AD78(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) unsignedLongLongValue];

  return [v1 _startFlyoverTourAnimation:v2 duration:0 completion:0.0];
}

void sub_10086ADBC(id *a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v3 = a1[4];
  id v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        id v9 = [a1[5] nameForRegion:[v8 unsignedIntValue]];
        if (v9)
        {
          id v10 = [a1[5] tourIdsForRegion:[v8 unsignedIntValue]];
          [v2 addObjectsFromArray:v10];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v5);
  }

  id v11 = objc_alloc_init((Class)NSMutableArray);
  while (objc_msgSend(v2, "count", (void)v15))
  {
    uint64_t v12 = arc4random_uniform((uint32_t)[v2 count]);
    unint64_t v13 = [v2 objectAtIndexedSubscript:v12];
    [v11 addObject:v13];

    [v2 removeObjectAtIndex:v12];
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  [WeakRetained runNextTourIndex:0 withTours:v11];
}

id sub_10086AFA0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pauseFlyoverAnimation];
}

id sub_10086AFA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _resumeFlyoverAnimation];
}

void sub_10086AFB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10086B078;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"AR" content:v5];
  objc_destroyWeak(&v6);
}

void sub_10086B064(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086B078(id *a1, void *a2)
{
  id v18 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v18 title:@"Debug Console" forVectorKitDebugKey:@"enableARDebugConsole"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v18 title:@"Render At Native Rate" forVectorKitDebugKey:@"arRenderAtNativeRate"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v18 title:@"Omni Tile Loader" forVectorKitDebugKey:@"enableAROmniTileLoader"];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v18 title:@"Enable Overrides" forVectorKitDebugKey:@"arOverrideDefaults"];

  id v11 = +[VKDebugSettings sharedSettings];
  uint64_t v12 = [v11 valueForKey:@"arOverrideDefaults"];
  unsigned int v13 = [v12 BOOLValue];

  if (v13)
  {
    LODWORD(v14) = -3.0;
    id v15 = [v18 addSliderRowWithTitle:@"Virtual Plane Height" subtitleStringFormat:@"%1.2f meters" min:&stru_1012FC920 max:&stru_1012FC940 get:v14 set:0.0];
    LODWORD(v16) = 1140457472;
    id v17 = [v18 addSliderRowWithTitle:@"Default Altitude" subtitleStringFormat:@"%1.2f meters" min:&stru_1012FC960 max:&stru_1012FC980 get:0.0 set:v16];
  }
}

float sub_10086B238(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 arVirtualPlaneHeight];
  float v3 = v2;

  return v3;
}

void sub_10086B280(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArVirtualPlaneHeight:v3];
}

float sub_10086B2D8(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 arDefaultHeight];
  float v3 = v2;

  return v3;
}

void sub_10086B320(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setArDefaultHeight:v3];
}

void sub_10086B378(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10086B440;
  void v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Lighting" content:v5];
  objc_destroyWeak(&v6);
}

void sub_10086B42C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086B440(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(v4);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];

  v44[0] = _NSConcreteStackBlock;
  v44[1] = 3221225472;
  v44[2] = sub_10086B968;
  v44[3] = &unk_1012FAE80;
  objc_copyWeak(&v46, v4);
  id v11 = v10;
  id v45 = v11;
  id v12 = [v3 addNavigationRowWithTitle:@"Ambient Light Config" viewControllerContent:v44];
  v41[0] = _NSConcreteStackBlock;
  v41[1] = 3221225472;
  v41[2] = sub_10086BEF4;
  v41[3] = &unk_1012FAE80;
  objc_copyWeak(&v43, v4);
  id v13 = v11;
  id v42 = v13;
  id v14 = [v3 addNavigationRowWithTitle:@"Primary Light Config" viewControllerContent:v41];
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 3221225472;
  v38[2] = sub_10086C6D0;
  v38[3] = &unk_1012FAE80;
  objc_copyWeak(&v40, v4);
  id v15 = v13;
  id v39 = v15;
  id v16 = [v3 addNavigationRowWithTitle:@"Secondary Light Config" viewControllerContent:v38];
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472;
  v35[2] = sub_10086CEAC;
  id v35[3] = &unk_1012FAE80;
  objc_copyWeak(&v37, v4);
  id v17 = v15;
  id v36 = v17;
  id v18 = [v3 addNavigationRowWithTitle:@"Tertiary Light Config" viewControllerContent:v35];
  id v19 = objc_loadWeakRetained(v4);
  id v20 = [v19 addAllMapsSwitchRowToSection:v3 title:@"Enable Ambient Light" forVectorKitDebugKey:@"lightingEnableAmbient"];

  id v21 = objc_loadWeakRetained(v4);
  id v22 = [v21 addAllMapsSwitchRowToSection:v3 title:@"Enable Light 1" forVectorKitDebugKey:@"lightingEnableLight1"];

  id v23 = objc_loadWeakRetained(v4);
  id v24 = [v23 addAllMapsSwitchRowToSection:v3 title:@"Enable Light 2" forVectorKitDebugKey:@"lightingEnableLight2"];

  id v25 = objc_loadWeakRetained(v4);
  id v26 = [v25 addAllMapsSwitchRowToSection:v3 title:@"Enable Light 3" forVectorKitDebugKey:@"lightingEnableLight3"];

  id v27 = [v3 addEmptySectionBannerRowWithTitle:&stru_101324E70];
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_10086D6E8;
  v33[3] = &unk_1012E6998;
  objc_copyWeak(&v34, v4);
  id v28 = [v3 addSwitchRowWithTitle:@"Accelerate Time" get:&stru_1012FCBE0 set:v33];
  id v29 = [v3 addTextFieldRowWithTitle:@"Fixed Hour" placeholderText:@"(Blank for no fixed time)" inputType:0 get:&stru_1012FCC00 set:&stru_1012FCC20];
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_10086DCAC;
  void v31[3] = &unk_1012E6998;
  objc_copyWeak(&v32, v4);
  id v30 = [v3 addSwitchRowWithTitle:@"Fixed Hour Local to Camera Target" get:&stru_1012FCC40 set:v31];
  objc_destroyWeak(&v32);
  objc_destroyWeak(&v34);

  objc_destroyWeak(&v37);
  objc_destroyWeak(&v40);

  objc_destroyWeak(&v43);
  objc_destroyWeak(&v46);
}

void sub_10086B8FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086B968(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10086BA44;
  void v5[3] = &unk_1012EE3E8;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Ambient light Config" content:v5];

  objc_destroyWeak(&v7);
}

void sub_10086BA30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086BA44(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Override" forVectorKitDebugKey:@"lightingOverrideAmbient"];

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_10086BC84;
  v16[3] = &unk_1012FC680;
  id v17 = *(id *)(a1 + 32);
  LODWORD(v6) = 1.0;
  id v7 = [v3 addSliderRowWithTitle:@"Red" subtitleStringFormat:@"Red Component:  %1.2f" min:&stru_1012FC9A0 max:v16 get:0.0 set:v6];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10086BD6C;
  void v14[3] = &unk_1012FC680;
  id v15 = *(id *)(a1 + 32);
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 1.0;
  id v9 = [v3 addSliderRowWithTitle:@"Green" subtitleStringFormat:@"Green Component:  %1.2f" min:&stru_1012FC9C0 max:v14 get:0.0 set:v8];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  id v12[2] = sub_10086BE54;
  void v12[3] = &unk_1012FC680;
  id v13 = *(id *)(a1 + 32);
  LODWORD(v10) = 1.0;
  id v11 = [v3 addSliderRowWithTitle:@"Blue" subtitleStringFormat:@"Blue Component:  %1.2f" min:&stru_1012FC9E0 max:v12 get:0.0 set:v10];
}

float sub_10086BC3C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideAmbient];
  float v3 = v2;

  return v3;
}

id sub_10086BC84(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideAmbient];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  *(float *)&double v12 = a2;
  LODWORD(v13) = v6;
  LODWORD(v14) = v8;
  LODWORD(v15) = v10;
  [v11 setOverrideAmbient:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086BD24(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideAmbient];
  float v3 = v2;

  return v3;
}

id sub_10086BD6C(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideAmbient];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  LODWORD(v12) = v6;
  *(float *)&double v13 = a2;
  LODWORD(v14) = v8;
  LODWORD(v15) = v10;
  [v11 setOverrideAmbient:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086BE0C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideAmbient];
  float v3 = v2;

  return v3;
}

id sub_10086BE54(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideAmbient];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  LODWORD(v12) = v6;
  LODWORD(v13) = v8;
  *(float *)&double v14 = a2;
  LODWORD(v15) = v10;
  [v11 setOverrideAmbient:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

void sub_10086BEF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10086BFD0;
  void v5[3] = &unk_1012EE3E8;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Primary Light Config" content:v5];

  objc_destroyWeak(&v7);
}

void sub_10086BFBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086BFD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Override" forVectorKitDebugKey:@"lightingOverrideLight1"];

  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_10086C310;
  v24[3] = &unk_1012FC680;
  id v25 = *(id *)(a1 + 32);
  LODWORD(v6) = 1.0;
  id v7 = [v3 addSliderRowWithTitle:@"Red" subtitleStringFormat:@"Red Component:  %1.2f" min:&stru_1012FCA00 max:v24 get:0.0 set:v6];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10086C3F8;
  void v22[3] = &unk_1012FC680;
  id v23 = *(id *)(a1 + 32);
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 1.0;
  id v9 = [v3 addSliderRowWithTitle:@"Green" subtitleStringFormat:@"Green Component:  %1.2f" min:&stru_1012FCA20 max:v22 get:0.0 set:v8];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_10086C4E0;
  void v20[3] = &unk_1012FC680;
  id v21 = *(id *)(a1 + 32);
  LODWORD(v10) = 1.0;
  id v11 = [v3 addSliderRowWithTitle:@"Blue" subtitleStringFormat:@"Blue Component:  %1.2f" min:&stru_1012FCA40 max:v20 get:0.0 set:v10];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10086C5C8;
  void v18[3] = &unk_1012FC680;
  id v19 = *(id *)(a1 + 32);
  LODWORD(v12) = 1135869952;
  id v13 = [v3 addSliderRowWithTitle:@"Azimuth" subtitleStringFormat:@"Azimuth Degrees:  %1.2f" min:&stru_1012FCA60 max:v18 get:0.0 set:v12];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_10086C670;
  v16[3] = &unk_1012FC680;
  id v17 = *(id *)(a1 + 32);
  LODWORD(v14) = 1135869952;
  id v15 = [v3 addSliderRowWithTitle:@"Altitude" subtitleStringFormat:@"Altitude Degrees:  %1.2f" min:&stru_1012FCA80 max:v16 get:0.0 set:v14];
}

float sub_10086C2C8(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight1];
  float v3 = v2;

  return v3;
}

id sub_10086C310(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight1];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  *(float *)&double v12 = a2;
  LODWORD(v13) = v6;
  LODWORD(v14) = v8;
  LODWORD(v15) = v10;
  [v11 setOverrideLight1:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086C3B0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight1];
  float v3 = v2;

  return v3;
}

id sub_10086C3F8(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight1];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  LODWORD(v12) = v6;
  *(float *)&double v13 = a2;
  LODWORD(v14) = v8;
  LODWORD(v15) = v10;
  [v11 setOverrideLight1:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086C498(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight1];
  float v3 = v2;

  return v3;
}

id sub_10086C4E0(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight1];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  LODWORD(v12) = v6;
  LODWORD(v13) = v8;
  *(float *)&double v14 = a2;
  LODWORD(v15) = v10;
  [v11 setOverrideLight1:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086C580(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight1Azimuth];
  float v3 = v2;

  return v3;
}

id sub_10086C5C8(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setOverrideLight1Azimuth:v5];

  int v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

float sub_10086C628(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight1Altitude];
  float v3 = v2;

  return v3;
}

id sub_10086C670(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setOverrideLight1Altitude:v5];

  int v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

void sub_10086C6D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10086C7AC;
  void v5[3] = &unk_1012EE3E8;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Secondary Light Config" content:v5];

  objc_destroyWeak(&v7);
}

void sub_10086C798(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086C7AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Override" forVectorKitDebugKey:@"lightingOverrideLight2"];

  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_10086CAEC;
  v24[3] = &unk_1012FC680;
  id v25 = *(id *)(a1 + 32);
  LODWORD(v6) = 1.0;
  id v7 = [v3 addSliderRowWithTitle:@"Red" subtitleStringFormat:@"Red Component:  %1.2f" min:&stru_1012FCAA0 max:v24 get:0.0 set:v6];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10086CBD4;
  void v22[3] = &unk_1012FC680;
  id v23 = *(id *)(a1 + 32);
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 1.0;
  id v9 = [v3 addSliderRowWithTitle:@"Green" subtitleStringFormat:@"Green Component:  %1.2f" min:&stru_1012FCAC0 max:v22 get:0.0 set:v8];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_10086CCBC;
  void v20[3] = &unk_1012FC680;
  id v21 = *(id *)(a1 + 32);
  LODWORD(v10) = 1.0;
  id v11 = [v3 addSliderRowWithTitle:@"Blue" subtitleStringFormat:@"Blue Component:  %1.2f" min:&stru_1012FCAE0 max:v20 get:0.0 set:v10];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10086CDA4;
  void v18[3] = &unk_1012FC680;
  id v19 = *(id *)(a1 + 32);
  LODWORD(v12) = 1135869952;
  id v13 = [v3 addSliderRowWithTitle:@"Azimuth" subtitleStringFormat:@"Azimuth Degrees:  %1.2f" min:&stru_1012FCB00 max:v18 get:0.0 set:v12];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_10086CE4C;
  v16[3] = &unk_1012FC680;
  id v17 = *(id *)(a1 + 32);
  LODWORD(v14) = 1135869952;
  id v15 = [v3 addSliderRowWithTitle:@"Altitude" subtitleStringFormat:@"Altitude Degrees:  %1.2f" min:&stru_1012FCB20 max:v16 get:0.0 set:v14];
}

float sub_10086CAA4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight2];
  float v3 = v2;

  return v3;
}

id sub_10086CAEC(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight2];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  *(float *)&double v12 = a2;
  LODWORD(v13) = v6;
  LODWORD(v14) = v8;
  LODWORD(v15) = v10;
  [v11 setOverrideLight2:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086CB8C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight2];
  float v3 = v2;

  return v3;
}

id sub_10086CBD4(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight2];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  LODWORD(v12) = v6;
  *(float *)&double v13 = a2;
  LODWORD(v14) = v8;
  LODWORD(v15) = v10;
  [v11 setOverrideLight2:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086CC74(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight2];
  float v3 = v2;

  return v3;
}

id sub_10086CCBC(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight2];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  LODWORD(v12) = v6;
  LODWORD(v13) = v8;
  *(float *)&double v14 = a2;
  LODWORD(v15) = v10;
  [v11 setOverrideLight2:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086CD5C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight2Azimuth];
  float v3 = v2;

  return v3;
}

id sub_10086CDA4(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setOverrideLight2Azimuth:v5];

  int v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

float sub_10086CE04(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight2Altitude];
  float v3 = v2;

  return v3;
}

id sub_10086CE4C(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setOverrideLight2Altitude:v5];

  int v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

void sub_10086CEAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10086CF88;
  void v5[3] = &unk_1012EE3E8;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Tertiary Light Config" content:v5];

  objc_destroyWeak(&v7);
}

void sub_10086CF74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086CF88(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Override" forVectorKitDebugKey:@"lightingOverrideLight3"];

  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_10086D2C8;
  v24[3] = &unk_1012FC680;
  id v25 = *(id *)(a1 + 32);
  LODWORD(v6) = 1.0;
  id v7 = [v3 addSliderRowWithTitle:@"Red" subtitleStringFormat:@"Red Component:  %1.2f" min:&stru_1012FCB40 max:v24 get:0.0 set:v6];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10086D3B0;
  void v22[3] = &unk_1012FC680;
  id v23 = *(id *)(a1 + 32);
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 1.0;
  id v9 = [v3 addSliderRowWithTitle:@"Green" subtitleStringFormat:@"Green Component:  %1.2f" min:&stru_1012FCB60 max:v22 get:0.0 set:v8];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_10086D498;
  void v20[3] = &unk_1012FC680;
  id v21 = *(id *)(a1 + 32);
  LODWORD(v10) = 1.0;
  id v11 = [v3 addSliderRowWithTitle:@"Blue" subtitleStringFormat:@"Blue Component:  %1.2f" min:&stru_1012FCB80 max:v20 get:0.0 set:v10];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10086D580;
  void v18[3] = &unk_1012FC680;
  id v19 = *(id *)(a1 + 32);
  LODWORD(v12) = 1135869952;
  id v13 = [v3 addSliderRowWithTitle:@"Azimuth" subtitleStringFormat:@"Azimuth Degrees:  %1.2f" min:&stru_1012FCBA0 max:v18 get:0.0 set:v12];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_10086D628;
  v16[3] = &unk_1012FC680;
  id v17 = *(id *)(a1 + 32);
  LODWORD(v14) = 1135869952;
  id v15 = [v3 addSliderRowWithTitle:@"Altitude" subtitleStringFormat:@"Altitude Degrees:  %1.2f" min:&stru_1012FCBC0 max:v16 get:0.0 set:v14];
}

float sub_10086D280(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight3];
  float v3 = v2;

  return v3;
}

id sub_10086D2C8(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight3];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  *(float *)&double v12 = a2;
  LODWORD(v13) = v6;
  LODWORD(v14) = v8;
  LODWORD(v15) = v10;
  [v11 setOverrideLight3:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086D368(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight3];
  float v3 = v2;

  return v3;
}

id sub_10086D3B0(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight3];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  LODWORD(v12) = v6;
  *(float *)&double v13 = a2;
  LODWORD(v14) = v8;
  LODWORD(v15) = v10;
  [v11 setOverrideLight3:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086D450(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight3];
  float v3 = v2;

  return v3;
}

id sub_10086D498(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 overrideLight3];
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;

  id v11 = +[VKDebugSettings sharedSettings];
  LODWORD(v12) = v6;
  LODWORD(v13) = v8;
  *(float *)&double v14 = a2;
  LODWORD(v15) = v10;
  [v11 setOverrideLight3:v12, v13, v14, v15];

  id v16 = *(void **)(a1 + 32);

  return [v16 setNeedsLayout];
}

float sub_10086D538(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight3Azimuth];
  float v3 = v2;

  return v3;
}

id sub_10086D580(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setOverrideLight3Azimuth:v5];

  int v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

float sub_10086D5E0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 overrideLight3Altitude];
  float v3 = v2;

  return v3;
}

id sub_10086D628(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setOverrideLight3Altitude:v5];

  int v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

BOOL sub_10086D688(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  float v2 = [v1 valueForKey:@"lightingAccelerateTime"];
  unsigned __int8 v3 = [v2 BOOLValue];

  return v3;
}

void sub_10086D6E8(id *a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  double v5 = +[NSNumber numberWithBool:a2];
  [v4 setValue:v5 forKey:@"lightingAccelerateTime"];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  int v7 = +[NSNumber numberWithBool:a2];
  [WeakRetained setValue:v7 forKeyInAllMapLayers:@"debugLayoutContinuously"];

  id v8 = objc_loadWeakRetained(a1);
  [v8 _setAllMapLayersNeedLayout];
}

NSString *__cdecl sub_10086D7D0(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  if ([v1 BOOLForKey:@"__LightingStopTime"])
  {
    float v2 = +[NSUserDefaults standardUserDefaults];
    id v3 = [v2 integerForKey:@"__LightingStopTimeHour"];
    id v4 = +[NSUserDefaults standardUserDefaults];
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%u:%u", v3, [v4 integerForKey:@"__LightingStopTimeMinute"]);
    double v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    double v5 = &stru_101324E70;
  }

  return (NSString *)v5;
}

void sub_10086D8B4(id a1, NSString *a2)
{
  id v27 = a2;
  if (![(NSString *)v27 length])
  {
    id v4 = +[NSUserDefaults standardUserDefaults];
    [v4 setBool:0 forKey:@"__LightingStopTime"];
    goto LABEL_34;
  }
  id v4 = [(NSString *)v27 componentsSeparatedByString:@":"];
  if ([v4 count] == (id)1)
  {
    double v5 = [v4 objectAtIndexedSubscript:0];
    unsigned int v6 = [v5 intValue];
    if ((v6 & 0x80000000) != 0
      || ([v4 objectAtIndexedSubscript:0],
          float v2 = objc_claimAutoreleasedReturnValue(),
          (int)[v2 intValue] <= 24))
    {
      double v12 = [v4 objectAtIndexedSubscript:0];
      if (([v12 intValue] & 0x80000000) != 0)
      {
        uint64_t v7 = 0;
      }
      else
      {
        double v13 = [v4 objectAtIndexedSubscript:0];
        uint64_t v7 = [v13 intValue];
      }
      if ((v6 & 0x80000000) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v7 = 24;
    }

LABEL_17:
    double v14 = +[NSUserDefaults standardUserDefaults];
    [v14 setBool:1 forKey:@"__LightingStopTime"];

    double v15 = +[NSUserDefaults standardUserDefaults];
    [v15 setInteger:v7 forKey:@"__LightingStopTimeHour"];

    id v16 = +[NSUserDefaults standardUserDefaults];
    id v11 = v16;
    uint64_t v17 = 0;
LABEL_32:
    [v16 setInteger:v17 forKey:@"__LightingStopTimeMinute"];
    goto LABEL_33;
  }
  if ((unint64_t)[v4 count] >= 2)
  {
    id v8 = [v4 objectAtIndexedSubscript:0];
    uint64_t v9 = (uint64_t)[v8 intValue];
    if ((v9 & 0x80000000) != 0
      || ([v4 objectAtIndexedSubscript:0],
          id v3 = objc_claimAutoreleasedReturnValue(),
          (int)[v3 intValue] <= 24))
    {
      id v18 = [v4 objectAtIndexedSubscript:0];
      if (([v18 intValue] & 0x80000000) != 0)
      {
        uint64_t v10 = 0;
      }
      else
      {
        id v19 = [v4 objectAtIndexedSubscript:0];
        uint64_t v10 = [v19 intValue];
      }
      if ((v9 & 0x80000000) != 0)
      {
LABEL_23:

        id v20 = [v4 objectAtIndexedSubscript:1];
        unsigned int v21 = [v20 intValue];
        if ((v21 & 0x80000000) != 0
          || ([v4 objectAtIndexedSubscript:1],
              uint64_t v9 = objc_claimAutoreleasedReturnValue(),
              (int)[(id)v9 intValue] <= 60))
        {
          id v23 = [v4 objectAtIndexedSubscript:1];
          if (([v23 intValue] & 0x80000000) != 0)
          {
            uint64_t v22 = 0;
          }
          else
          {
            id v24 = [v4 objectAtIndexedSubscript:1];
            uint64_t v22 = [v24 intValue];
          }
          if ((v21 & 0x80000000) != 0) {
            goto LABEL_31;
          }
        }
        else
        {
          uint64_t v22 = 60;
        }

LABEL_31:
        id v25 = +[NSUserDefaults standardUserDefaults];
        [v25 setBool:1 forKey:@"__LightingStopTime"];

        id v26 = +[NSUserDefaults standardUserDefaults];
        [v26 setInteger:v10 forKey:@"__LightingStopTimeHour"];

        id v16 = +[NSUserDefaults standardUserDefaults];
        id v11 = v16;
        uint64_t v17 = v22;
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v10 = 24;
    }

    goto LABEL_23;
  }
  id v11 = +[NSUserDefaults standardUserDefaults];
  [v11 setBool:0 forKey:@"__LightingStopTime"];
LABEL_33:

LABEL_34:
}

BOOL sub_10086DC4C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  float v2 = [v1 valueForKey:@"lightingCameraLocalTime"];
  unsigned __int8 v3 = [v2 BOOLValue];

  return v3;
}

void sub_10086DCAC(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  double v5 = +[NSNumber numberWithBool:a2];
  [v4 setValue:v5 forKey:@"lightingCameraLocalTime"];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

void sub_10086DD4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:@"Flyover Unification Overrides" content:&stru_1012FCC60];
  id v5 = [v3 addSectionWithTitle:@"Elevation Logic" content:&stru_1012FCCC0];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10086E120;
  void v14[3] = &unk_1012E7EF8;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v6 = [v3 addSectionWithTitle:@"Tours" content:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  id v12[2] = sub_10086E97C;
  void v12[3] = &unk_1012E7EF8;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v7 = [v3 addSectionWithTitle:@"Octiles" content:v12];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10086EC7C;
  void v10[3] = &unk_1012E7EF8;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v8 = [v3 addSectionWithTitle:@"Flyover Grid" content:v10];
  id v9 = [v3 addSectionWithTitle:@"Flyover Debug" content:&stru_1012FCF60];
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
}

void sub_10086DF40(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086DF78(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Force Flyover Unification" get:&stru_1012FCC80 set:&stru_1012FCCA0];
}

BOOL sub_10086DFB4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 forceFlyoverUnificationMode];

  return v2;
}

void sub_10086DFF4(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setForceFlyoverUnificationMode:v2];
}

void sub_10086E04C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Correct Bumpiness" get:&stru_1012FCCE0 set:&stru_1012FCD00];
}

BOOL sub_10086E088(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 correctBumpiness];

  return v2;
}

void sub_10086E0C8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setCorrectBumpiness:v2];
}

void sub_10086E120(uint64_t a1, void *a2)
{
  id v3 = a2;
  LODWORD(v4) = 5.0;
  id v5 = [v3 addSliderRowWithTitle:@"Animation Speed" subtitleStringFormat:@"delta time: %1.2f" min:&stru_1012FCD20 max:&stru_1012FCD40 get:0.0 set:v4];
  id v6 = [v3 addSwitchRowWithTitle:@"Apply elevation correction" get:&stru_1012FCD60 set:&stru_1012FCD80];
  id v7 = [v3 addEmptySectionBannerRowWithTitle:@"Interesting View"];
  id v8 = [v3 addSwitchRowWithTitle:@"View Slows Tours" get:&stru_1012FCDA0 set:&stru_1012FCDC0];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10086E654;
  void v22[3] = &unk_1012FB138;
  objc_copyWeak(&v23, (id *)(a1 + 32));
  LODWORD(v9) = 2.0;
  id v10 = [v3 addSliderRowWithTitle:@"Slowdown Speed" subtitleStringFormat:@"interesting view slow tours by: %1.2fx" min:&stru_1012FCDE0 max:v22 get:0.0 set:v9];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_10086E714;
  void v20[3] = &unk_1012FB138;
  objc_copyWeak(&v21, (id *)(a1 + 32));
  LODWORD(v11) = 2.0;
  id v12 = [v3 addSliderRowWithTitle:@"Recovery Speed" subtitleStringFormat:@"regular views recover speed by: %1.2fx" min:&stru_1012FCE00 max:v20 get:0.0 set:v11];
  id v13 = [v3 addEmptySectionBannerRowWithTitle:@"Preload"];
  id v14 = [v3 addSwitchRowWithTitle:@"Preload Slows Tours" get:&stru_1012FCE20 set:&stru_1012FCE40];
  id v15 = [v3 addSwitchRowWithTitle:@"Show Preload Position" get:&stru_1012FCE60 set:&stru_1012FCE80];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10086E904;
  void v18[3] = &unk_1012FB138;
  objc_copyWeak(&v19, (id *)(a1 + 32));
  LODWORD(v16) = 2.0;
  id v17 = [v3 addSliderRowWithTitle:@"Preload Head Time" subtitleStringFormat:@"%1.2f seconds" min:&stru_1012FCEA0 max:v18 get:0.0 set:v16];
  objc_destroyWeak(&v19);
  objc_destroyWeak(&v21);
  objc_destroyWeak(&v23);
}

void sub_10086E404(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

float sub_10086E43C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 toursAnimationSpeed];
  float v3 = v2;

  return v3;
}

void sub_10086E484(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setToursAnimationSpeed:v3];
}

BOOL sub_10086E4DC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 toursCorrectElevation];

  return v2;
}

void sub_10086E51C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setToursCorrectElevation:v2];
}

BOOL sub_10086E574(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 toursModulateSpeed];

  return v2;
}

void sub_10086E5B4(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setToursModulateSpeed:v2];
}

float sub_10086E60C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 toursInterestingViewSpeed];
  float v3 = v2;

  return v3;
}

void sub_10086E654(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setToursInterestingViewSpeed:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

float sub_10086E6CC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 toursViewRecoverySpeed];
  float v3 = v2;

  return v3;
}

void sub_10086E714(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setToursViewRecoverySpeed:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

BOOL sub_10086E78C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 toursPreloadSlowsSpeed];

  return v2;
}

void sub_10086E7CC(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setToursPreloadSlowsSpeed:v2];
}

BOOL sub_10086E824(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 tourUsePreloadPosition];

  return v2;
}

void sub_10086E864(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setTourUsePreloadPosition:v2];
}

float sub_10086E8BC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 toursPreloadHeadTime];
  float v3 = v2;

  return v3;
}

void sub_10086E904(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setToursPreloadHeadTime:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

void sub_10086E97C(id *a1, void *a2)
{
  id v3 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10086EB44;
  void v10[3] = &unk_1012FB138;
  a1 += 4;
  objc_copyWeak(&v11, a1);
  LODWORD(v4) = 2.0;
  id v5 = [v3 addSliderRowWithTitle:@"Octile LOD constant" subtitleStringFormat:@"%1.3f" min:&stru_1012FCEC0 max:v10 get:0.0 set:v4];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10086EC04;
  _OWORD v8[3] = &unk_1012FB138;
  objc_copyWeak(&v9, a1);
  LODWORD(v6) = 1120403456;
  id v7 = [v3 addSliderRowWithTitle:@"Octile LOD max refinement distance" subtitleStringFormat:@"%1.3f" min:&stru_1012FCEE0 max:v8 get:0.0 set:v6];
  objc_destroyWeak(&v9);
  objc_destroyWeak(&v11);
}

void sub_10086EAD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

float sub_10086EAFC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 flyoverOctileLODConstant];
  float v3 = v2;

  return v3;
}

void sub_10086EB44(uint64_t a1, float a2)
{
  double v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setFlyoverOctileLODConstant:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

float sub_10086EBBC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 flyoverOctileLODMaxRefineDistance];
  float v3 = v2;

  return v3;
}

void sub_10086EC04(uint64_t a1, float a2)
{
  double v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setFlyoverOctileLODMaxRefineDistance:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

void sub_10086EC7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10086EEB8;
  void v13[3] = &unk_1012E6998;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Force Skip Tile Rendering" get:&stru_1012FCF00 set:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_10086EF78;
  void v11[3] = &unk_1012FB138;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  LODWORD(v5) = -1.0;
  LODWORD(v6) = 1.0;
  id v7 = [v3 addSliderRowWithTitle:@"Grid NDC Bias" subtitleStringFormat:@"%1.2f" min:&stru_1012FCF20 max:v11 get:v5 set:v6];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_10086F030;
  _OWORD v9[3] = &unk_1012E6998;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  id v8 = [v3 addSwitchRowWithTitle:@"Drape Grid" get:&stru_1012FCF40 set:v9];
  objc_destroyWeak(&v10);
  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);
}

void sub_10086EE44(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_10086EE78(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 flyoverSkipTileRendering];

  return v2;
}

void sub_10086EEB8(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setFlyoverSkipTileRendering:a2];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

float sub_10086EF30(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 flyoverGridNDCBias];
  float v3 = v2;

  return v3;
}

void sub_10086EF78(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setFlyoverGridNDCBias:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

BOOL sub_10086EFF0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 flyoverDrapeGrid];

  return v2;
}

void sub_10086F030(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setFlyoverDrapeGrid:a2];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

void sub_10086F0A8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Draw Flyover Tile" get:&stru_1012FCF80 set:&stru_1012FCFA0];
}

BOOL sub_10086F0E4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 paintFlyoverTiles];

  return v2;
}

void sub_10086F124(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setPaintFlyoverTiles:v2];
}

void sub_10086F17C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_10086F4BC;
  void v20[3] = &unk_1012EE3E8;
  objc_copyWeak(&v22, (id *)(a1 + 40));
  id v21 = *(id *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Munin" content:v20];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_100870278;
  void v18[3] = &unk_1012EE018;
  id v19 = *(id *)(a1 + 32);
  id v5 = [v3 addSectionWithTitle:@"Munin FOV" content:v18];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_10087098C;
  v16[3] = &unk_1012E7EF8;
  objc_copyWeak(&v17, (id *)(a1 + 40));
  id v6 = [v3 addSectionWithTitle:@"Tap replay" content:v16];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100871270;
  void v14[3] = &unk_1012EE018;
  id v15 = *(id *)(a1 + 32);
  id v7 = [v3 addSectionWithTitle:@"Availability override" content:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  id v12[2] = sub_10087133C;
  void v12[3] = &unk_1012E7EF8;
  objc_copyWeak(&v13, (id *)(a1 + 40));
  id v8 = [v3 addSectionWithTitle:@"Bump Animation Parameters" content:v12];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10087144C;
  void v10[3] = &unk_1012E7EF8;
  objc_copyWeak(&v11, (id *)(a1 + 40));
  id v9 = [v3 addSectionWithTitle:@"Road Labels" content:v10];
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&v22);
}

void sub_10086F470(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10086F4BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Ignore places metadata" forVectorKitDebugKey:@"muninIgnorePlacesMetadata"];

  id v6 = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Munin Debug Layer" forVectorKitDebugKey:@"muninDebugLayer"];

  id v8 = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Graph Connections" forVectorKitDebugKey:@"muninGraphConnections"];

  id v10 = objc_loadWeakRetained((id *)(a1 + 40));
  id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Transition info" forVectorKitDebugKey:@"muninShowRigTransitionInfo"];

  id v12 = objc_loadWeakRetained((id *)(a1 + 40));
  id v13 = [v12 addAllMapsSwitchRowToSection:v3 title:@"LOD info" forVectorKitDebugKey:@"muninShowLODInfo"];

  id v14 = [v3 addSwitchRowWithTitle:@"Parallax override" get:&stru_1012FCFC0 set:&stru_1012FCFE0];
  LODWORD(v15) = -2.5;
  LODWORD(v16) = 2.5;
  id v17 = [v3 addSliderRowWithTitle:@"Parallax backward offset" subtitleStringFormat:@"Distance: %1.2f" min:&stru_1012FD000 max:&stru_1012FD020 get:v15 set:v16];
  LODWORD(v1_Block_object_dispose(&STACK[0x238], 8) = 10.0;
  LODWORD(v19) = 30.0;
  id v20 = [v3 addSliderRowWithTitle:@"Parallax spring speed" subtitleStringFormat:@"Force: %1.2f" min:&stru_1012FD040 max:&stru_1012FD060 get:v18 set:v19];
  LODWORD(v21) = 0.25;
  LODWORD(v22) = 1.0;
  id v23 = [v3 addSliderRowWithTitle:@"Parallax spring damper" subtitleStringFormat:@"Damping: %1.2f" min:&stru_1012FD080 max:&stru_1012FD0A0 get:v21 set:v22];
  LODWORD(v++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 2.0;
  id v25 = [v3 addSliderRowWithTitle:@"Parallax spring scale" subtitleStringFormat:@"Scale: %1.2f" min:&stru_1012FD0C0 max:&stru_1012FD0E0 get:0.0 set:v24];
  v58[0] = _NSConcreteStackBlock;
  v58[1] = 3221225472;
  v58[2] = sub_10086FEFC;
  v58[3] = &unk_1012E7F80;
  id v59 = *(id *)(a1 + 32);
  v56[0] = _NSConcreteStackBlock;
  v56[1] = 3221225472;
  v56[2] = sub_10086FF04;
  v56[3] = &unk_1012E7D28;
  id v57 = *(id *)(a1 + 32);
  id v26 = [v3 addSwitchRowWithTitle:@"Slow motion transitions" get:v58 set:v56];
  LODWORD(v27) = 4.0;
  id v28 = [v3 addSliderRowWithTitle:@"Min resolution (transition)" subtitleStringFormat:@"Scale: %1.2f" min:&stru_1012FD100 max:&stru_1012FD120 get:0.0 set:v27];
  LODWORD(v29) = 4.0;
  id v30 = [v3 addSliderRowWithTitle:@"Max resolution (transition)" subtitleStringFormat:@"Scale: %1.2f" min:&stru_1012FD140 max:&stru_1012FD160 get:0.0 set:v29];
  v54[0] = _NSConcreteStackBlock;
  v54[1] = 3221225472;
  v54[2] = sub_100870050;
  v54[3] = &unk_1012EE360;
  id v55 = *(id *)(a1 + 32);
  v52[0] = _NSConcreteStackBlock;
  v52[1] = 3221225472;
  v52[2] = sub_100870098;
  v52[3] = &unk_1012E78C8;
  id v53 = *(id *)(a1 + 32);
  id v31 = [v3 addTextFieldRowWithTitle:@"Intermediate point step" placeholderText:@"1" inputType:1 get:v54 set:v52];
  v50[0] = _NSConcreteStackBlock;
  v50[1] = 3221225472;
  v50[2] = sub_1008700D8;
  v50[3] = &unk_1012E7F80;
  id v51 = *(id *)(a1 + 32);
  v48[0] = _NSConcreteStackBlock;
  v48[1] = 3221225472;
  v48[2] = sub_1008700E0;
  v48[3] = &unk_1012E7D28;
  id v49 = *(id *)(a1 + 32);
  id v32 = [v3 addSwitchRowWithTitle:@"LOD override" get:v50 set:v48];
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_1008700EC;
  v46[3] = &unk_1012EE360;
  id v47 = *(id *)(a1 + 32);
  v44[0] = _NSConcreteStackBlock;
  v44[1] = 3221225472;
  v44[2] = sub_100870138;
  v44[3] = &unk_1012E78C8;
  id v45 = *(id *)(a1 + 32);
  id v33 = [v3 addTextFieldRowWithTitle:@"LOD override value" placeholderText:@"2" inputType:1 get:v46 set:v44];
  v42[0] = _NSConcreteStackBlock;
  v42[1] = 3221225472;
  v42[2] = sub_1008701A8;
  v42[3] = &unk_1012E7F80;
  id v43 = *(id *)(a1 + 32);
  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472;
  v40[2] = sub_1008701B0;
  v40[3] = &unk_1012E7D28;
  id v41 = *(id *)(a1 + 32);
  id v34 = [v3 addSwitchRowWithTitle:@"Intermediate LOD override" get:v42 set:v40];
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 3221225472;
  v38[2] = sub_1008701BC;
  v38[3] = &unk_1012EE360;
  id v39 = *(id *)(a1 + 32);
  v36[0] = _NSConcreteStackBlock;
  v36[1] = 3221225472;
  v36[2] = sub_100870208;
  void v36[3] = &unk_1012E78C8;
  id v37 = *(id *)(a1 + 32);
  id v35 = [v3 addTextFieldRowWithTitle:@"Intermediate LOD override value" placeholderText:@"4" inputType:1 get:v38 set:v36];
}

BOOL sub_10086FBE4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 muninOverrideParallax];

  return v2;
}

void sub_10086FC24(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setMuninOverrideParallax:v2];
}

float sub_10086FC7C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 muninCameraPanOffset];
  float v3 = v2;

  return v3;
}

void sub_10086FCC4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMuninCameraPanOffset:v3];
}

float sub_10086FD1C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 muninParallaxSpring];
  float v3 = v2;

  return v3;
}

void sub_10086FD64(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMuninParallaxSpring:v3];
}

float sub_10086FDBC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 muninParallaxDamper];
  float v3 = v2;

  return v3;
}

void sub_10086FE04(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMuninParallaxDamper:v3];
}

float sub_10086FE5C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 muninParallaxScale];
  float v3 = v2;

  return v3;
}

void sub_10086FEA4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMuninParallaxScale:v3];
}

id sub_10086FEFC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) muninSlowMotion];
}

id sub_10086FF04(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) setMuninSlowMotion:a2];
}

float sub_10086FF10(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 muninTransitionMinResolution];
  float v3 = v2;

  return v3;
}

void sub_10086FF58(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMuninTransitionMinResolution:v3];
}

float sub_10086FFB0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 muninTransitionMaxResolution];
  float v3 = v2;

  return v3;
}

void sub_10086FFF8(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMuninTransitionMaxResolution:v3];
}

NSString *sub_100870050(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) muninIntermediatePointStep]);
}

id sub_100870098(uint64_t a1, void *a2)
{
  uint64_t v3 = (int)[a2 intValue];
  id v4 = *(void **)(a1 + 32);

  return _[v4 setMuninIntermediatePointStep:v3];
}

id sub_1008700D8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) overrideLod];
}

id sub_1008700E0(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) setOverrideLod:a2];
}

NSString *sub_1008700EC(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) lodOverride]);
}

void sub_100870138(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ((int)[v4 intValue] <= 7) {
    unsigned __int8 v3 = [v4 intValue];
  }
  else {
    unsigned __int8 v3 = 7;
  }
  [*(id *)(a1 + 32) setLodOverride:v3];
}

id sub_1008701A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) overrideIntermediateLod];
}

id sub_1008701B0(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) setOverrideIntermediateLod:a2];
}

NSString *sub_1008701BC(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) intermediateLodOverride]);
}

void sub_100870208(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ((int)[v4 intValue] <= 7) {
    unsigned __int8 v3 = [v4 intValue];
  }
  else {
    unsigned __int8 v3 = 7;
  }
  [*(id *)(a1 + 32) setIntermediateLodOverride:v3];
}

void sub_100870278(uint64_t a1, void *a2)
{
  id v3 = a2;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  void v29[2] = sub_100870518;
  v29[3] = &unk_1012E7F80;
  id v30 = *(id *)(a1 + 32);
  double v24 = _NSConcreteStackBlock;
  uint64_t v25 = 3221225472;
  id v26 = sub_100870520;
  double v27 = &unk_1012E7D28;
  id v28 = *(id *)(a1 + 32);
  id v4 = [v3 addSwitchRowWithTitle:@"FOV override" get:v29 set:&v24];
  LODWORD(v5) = 1112014848;
  LODWORD(v6) = 1124859904;
  id v7 = [v3 addSliderRowWithTitle:@"Default FOV (portrait)" subtitleStringFormat:@"Degrees: %1.2f" min:&stru_1012FD180 max:&stru_1012FD1A0 get:v5 set:v6];
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 1116471296;
  LODWORD(v9) = 1124859904;
  id v10 = [v3 addSliderRowWithTitle:@"Max FOV (portrait)" subtitleStringFormat:@"Degrees: %1.2f" min:&stru_1012FD1C0 max:&stru_1012FD1E0 get:v8 set:v9];
  LODWORD(v11) = 1112014848;
  LODWORD(v12) = 1124859904;
  id v13 = [v3 addSliderRowWithTitle:@"Default FOV (landscape)" subtitleStringFormat:@"Degrees: %1.2f" min:&stru_1012FD200 max:&stru_1012FD220 get:v11 set:v12];
  LODWORD(v14) = 1116471296;
  LODWORD(v15) = 1124859904;
  id v16 = [v3 addSliderRowWithTitle:@"Max FOV (landscape)" subtitleStringFormat:@"Degrees: %1.2f" min:&stru_1012FD240 max:&stru_1012FD260 get:v14 set:v15];
  LODWORD(v17) = 1.0;
  LODWORD(v1_Block_object_dispose(&STACK[0x238], 8) = 30.0;
  id v19 = [v3 addSliderRowWithTitle:@"Min FOV (all)" subtitleStringFormat:@"Degrees: %1.2f" min:&stru_1012FD280 max:&stru_1012FD2A0 get:v17 set:v18];
  LODWORD(v20) = 1109393408;
  id v21 = [v3 addSliderRowWithTitle:@"Min FOV rubber zoom" subtitleStringFormat:@"Degrees: %1.2f" min:&stru_1012FD2C0 max:&stru_1012FD2E0 get:0.0 set:v20];
  LODWORD(v22) = 1109393408;
  id v23 = [v3 addSliderRowWithTitle:@"Max FOV rubber zoom" subtitleStringFormat:@"Degrees: %1.2f" min:&stru_1012FD300 max:&stru_1012FD320 get:0.0 set:v22];
}

id sub_100870518(uint64_t a1)
{
  return _[*(id *)(a1 + 32) muninOverrideFov];
}

id sub_100870520(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) setMuninOverrideFov:a2];
}

float sub_10087052C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 defaultFovPortrait];
  float v3 = v2;

  return v3;
}

void sub_100870574(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDefaultFovPortrait:v3];
}

float sub_1008705CC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 maxFovPortrait];
  float v3 = v2;

  return v3;
}

void sub_100870614(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMaxFovPortrait:v3];
}

float sub_10087066C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 defaultFovLandscape];
  float v3 = v2;

  return v3;
}

void sub_1008706B4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDefaultFovLandscape:v3];
}

float sub_10087070C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 maxFovLandscape];
  float v3 = v2;

  return v3;
}

void sub_100870754(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMaxFovLandscape:v3];
}

float sub_1008707AC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 minFov];
  float v3 = v2;

  return v3;
}

void sub_1008707F4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMinFov:v3];
}

float sub_10087084C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 minFovSpring];
  float v3 = v2;

  return v3;
}

void sub_100870894(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMinFovSpring:v3];
}

float sub_1008708EC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 maxFovSpring];
  float v3 = v2;

  return v3;
}

void sub_100870934(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMaxFovSpring:v3];
}

void sub_10087098C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100870B58;
  void v11[3] = &unk_1012E6708;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Replay tap" action:v11];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  _DWORD v9[2] = sub_100870E40;
  _OWORD v9[3] = &unk_1012E6708;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  id v5 = [v3 addButtonRowWithTitle:@"Copy last tap" action:v9];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100870F9C;
  void v7[3] = &unk_1012E6708;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  id v6 = [v3 addButtonRowWithTitle:@"Paste tap" action:v7];
  objc_destroyWeak(&v8);
  objc_destroyWeak(&v10);
  objc_destroyWeak(&v12);
}

void sub_100870B24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100870B58(uint64_t a1)
{
  float v2 = +[UIAlertController alertControllerWithTitle:@"Replay Tap" message:@"Setup Munin view to replay tap. Enter Munin, tap once to move into position and then again to replay tap." preferredStyle:1];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100870CC0;
  void v7[3] = &unk_1012E8EB8;
  id v3 = (id *)(a1 + 32);
  objc_copyWeak(&v8, (id *)(a1 + 32));
  id v4 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:v7];
  id v5 = +[UIAlertAction actionWithTitle:@"Cancel" style:0 handler:&stru_1012FD340];
  [v2 addAction:v4];
  [v2 addAction:v5];
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained presentViewController:v2 animated:1 completion:0];

  objc_destroyWeak(&v8);
}

void sub_100870CA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100870CC0(uint64_t a1)
{
  float v2 = +[VKDebugSettings sharedSettings];
  [v2 setMuninReplayLastTap:1];

  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained dismissViewControllerAnimated:1 completion:0];

  id v5 = +[VKDebugSettings sharedSettings];
  id v6 = v5;
  if (v5) {
    [v5 muninTapState];
  }

  id v7 = +[VKDebugSettings sharedSettings];
  id v8 = v7;
  if (v7) {
    [v7 muninTapState];
  }

  id v9 = objc_loadWeakRetained(v3);
  id v10 = [v9 delegate];
  id v11 = objc_loadWeakRetained(v3);
  id v12 = [v10 allVisibleMapViewsForDebugController:v11];
  id v13 = [v12 firstObject];

  [v13 frame];
  MKCoordinateRegionMakeWithZoomLevel();
  MKMapRectForCoordinateRegion();
  [v13 setVisibleMapRect:];
}

void sub_100870E40(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  float v2 = +[VKDebugSettings sharedSettings];
  id v3 = v2;
  if (v2)
  {
    [v2 muninTapState];
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }

  id v4 = [objc_alloc((Class)NSString) initWithFormat:@"{\"tap_state\": {\"x\": %f, \"y\": %f, \"latitude\": %f, \"longitude\": %f, \"yaw\": %f, \"pitch\": %f } }", *(float *)&v9, *((float *)&v9 + 1), *((void *)&v9 + 1), (void)v10, *((float *)&v10 + 2), *((float *)&v10 + 3)];
  id v5 = +[UIPasteboard generalPasteboard];
  [v5 setString:v4];

  id v6 = +[UIAlertController alertControllerWithTitle:@"Alert" message:@"Tap copied to clipboard" preferredStyle:1];
  id v7 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:&stru_1012FD360];
  [v6 addAction:v7];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained presentViewController:v6 animated:1 completion:0];
}

void sub_100870F9C(uint64_t a1)
{
  float v2 = +[UIPasteboard generalPasteboard];
  id v3 = [v2 string];

  if (!v3)
  {
    id v6 = 0;
    goto LABEL_14;
  }
  id v4 = [v3 dataUsingEncoding:4];
  id v37 = 0;
  id v5 = +[NSJSONSerialization JSONObjectWithData:v4 options:1 error:&v37];
  id v6 = v37;

  if (!v5)
  {
LABEL_14:
    CFStringRef v14 = @"Unable to parse tap state from clipboard.";
    goto LABEL_15;
  }
  uint64_t v31 = a1;
  id v7 = [v5 valueForKeyPath:@"tap_state.x"];
  id v8 = [v5 valueForKeyPath:@"tap_state.y"];
  long long v9 = [v5 valueForKeyPath:@"tap_state.latitude"];
  long long v10 = [v5 valueForKeyPath:@"tap_state.longitude"];
  id v11 = [v5 valueForKeyPath:@"tap_state.yaw"];
  uint64_t v12 = [v5 valueForKeyPath:@"tap_state.pitch"];
  id v13 = (void *)v12;
  CFStringRef v14 = @"Unable to parse tap state from clipboard.";
  if (v7)
  {
    if (v8)
    {
      if (v9)
      {
        if (v10)
        {
          if (v11)
          {
            if (v12)
            {
              [v7 floatValue];
              int v16 = v15;
              [v8 floatValue];
              int v18 = v17;
              [v9 doubleValue];
              double v20 = v19;
              [v10 doubleValue];
              double v22 = v21;
              [v11 floatValue];
              int v24 = v23;
              [v13 floatValue];
              if (v20 != 0.0 && v22 != 0.0)
              {
                int v26 = v25;
                double v27 = +[VKDebugSettings sharedSettings];
                v32[0] = v16;
                v32[1] = v18;
                double v33 = v20;
                double v34 = v22;
                int v35 = v24;
                int v36 = v26;
                [v27 setMuninTapState:v32];

                CFStringRef v14 = @"Tap pasted from clipboard. Use 'Replay tap' to play.";
              }
            }
          }
        }
      }
    }
  }

  a1 = v31;
LABEL_15:
  id v28 = +[UIAlertController alertControllerWithTitle:@"Alert" message:v14 preferredStyle:1];
  double v29 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:&stru_1012FD380];
  [v28 addAction:v29];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained presentViewController:v28 animated:1 completion:0];
}

id sub_100871270(uint64_t a1, void *a2)
{
  return [a2 addCheckmarkRowsGroupWithContent:&stru_1012FD3A0 object:*(void *)(a1 + 32) key:@"muninAvailabilityOverride"];
}

void sub_1008712A8(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Default" value:&off_1013A8E00];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Always" value:&off_1013A8E48];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Never" value:&off_1013A8E18];
}

void sub_10087133C(id *a1, void *a2)
{
  id v8 = a2;
  id v3 = [v8 addButtonRowWithTitle:@"Force Bump Next Tap" action:&stru_1012FD3C0];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v8 title:@"Force All Bump" forVectorKitDebugKey:@"forceBumpAll"];

  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v6 addAllMapsSwitchRowToSection:v8 title:@"Slow Motion Bump" forVectorKitDebugKey:@"slowMotionBump"];
}

void sub_100871400(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 setForceBumpNextTap:1];
}

void sub_10087144C(id *a1, void *a2)
{
  id v16 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v16 title:@"Enable RoadNetwork Minimap" forVectorKitDebugKey:@"enableMuninRoadNetworkMiniMap"];

  id v5 = objc_loadWeakRetained(a1);
  id v6 = [v5 addAllMapsSwitchRowToSection:v16 title:@"Show Roadwidths on Minimap" forVectorKitDebugKey:@"enableMuninMiniMapRoadWidths"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v16 title:@"Color ComposedEdges on Minimap" forVectorKitDebugKey:@"enableMuninMiniMapComposedEdgeRoadColoring"];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v16 title:@"Show Collection Points on Minimap" forVectorKitDebugKey:@"enableMuninMiniMapCollectionPoints"];

  id v11 = objc_loadWeakRetained(a1);
  id v12 = [v11 addAllMapsSwitchRowToSection:v16 title:@"Show Road Z Data on Minimap" forVectorKitDebugKey:@"enableMuninMiniMapRoadZData"];

  LODWORD(v13) = 1120403456;
  LODWORD(v14) = 1148846080;
  id v15 = [v16 addSliderRowWithTitle:@"RoadNetwork MiniMap Area (Meters)" subtitleStringFormat:@"Scale: %1.2f" min:&stru_1012FD3E0 max:&stru_1012FD400 get:v13 set:v14];
}

float sub_1008715C4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 muninRoadNetworkMiniMapAreaInMeters];
  float v3 = v2;

  return v3;
}

void sub_10087160C(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMuninRoadNetworkMiniMapAreaInMeters:v3];
}

void sub_100871664(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v113 = 0;
  uint64_t v114 = &v113;
  uint64_t v115 = 0x3032000000;
  double v116 = sub_100104064;
  v117 = sub_1001048B0;
  id v118 = 0;
  v111[0] = 0;
  v111[1] = v111;
  v111[2] = 0x3032000000;
  v111[3] = sub_100104064;
  v111[4] = sub_1001048B0;
  id v112 = 0;
  uint64_t v105 = 0;
  id v106 = &v105;
  uint64_t v107 = 0x3032000000;
  double v108 = sub_100104064;
  double v109 = sub_1001048B0;
  id v110 = 0;
  uint64_t v99 = 0;
  uint64_t v100 = &v99;
  uint64_t v101 = 0x3032000000;
  uint64_t v102 = sub_100104064;
  id v103 = sub_1001048B0;
  id v104 = 0;
  uint64_t v93 = 0;
  unint64_t v94 = &v93;
  uint64_t v95 = 0x3032000000;
  double v96 = sub_100104064;
  id v97 = sub_1001048B0;
  id v98 = 0;
  uint64_t v87 = 0;
  unint64_t v88 = &v87;
  uint64_t v89 = 0x3032000000;
  char v90 = sub_100104064;
  id v91 = sub_1001048B0;
  id v92 = 0;
  v85[0] = 0;
  v85[1] = v85;
  v85[2] = 0x3032000000;
  v85[3] = sub_100104064;
  v85[4] = sub_1001048B0;
  id v86 = 0;
  uint64_t v79 = 0;
  id v80 = &v79;
  uint64_t v81 = 0x3032000000;
  id v82 = sub_100104064;
  id v83 = sub_1001048B0;
  id v84 = 0;
  v77[0] = 0;
  v77[1] = v77;
  v77[2] = 0x3032000000;
  v77[3] = sub_100104064;
  void v77[4] = sub_1001048B0;
  id v78 = 0;
  objc_initWeak(&location, v3);
  v73[0] = _NSConcreteStackBlock;
  v73[1] = 3221225472;
  v73[2] = sub_100872604;
  v73[3] = &unk_1012FD470;
  id v4 = (id *)(a1 + 40);
  objc_copyWeak(&v74, (id *)(a1 + 40));
  objc_copyWeak(&v75, &location);
  id v5 = [v3 addSectionWithTitle:@"Features" content:v73];
  v71[0] = _NSConcreteStackBlock;
  v71[1] = 3221225472;
  v71[2] = sub_100872DD4;
  v71[3] = &unk_1012E7EF8;
  objc_copyWeak(&v72, (id *)(a1 + 40));
  uint64_t v6 = [v3 addSectionWithTitle:@"DaVinci" content:v71];
  id v7 = (void *)v114[5];
  v114[5] = v6;

  [v114[5] setVisible:[VKMapView _elevatedGroundIsEnabled]];
  id v8 = [v3 addSectionWithTitle:@"Shadow Map Resolution" content:&stru_1012FD610];
  v69[0] = _NSConcreteStackBlock;
  v69[1] = 3221225472;
  v69[2] = sub_100873B94;
  v69[3] = &unk_1012FDA78;
  void v69[4] = v77;
  objc_copyWeak(&v70, (id *)(a1 + 40));
  uint64_t v9 = [v3 addSectionWithTitle:@"Advanced Lighting" content:v69];
  id v10 = (void *)v106[5];
  v106[5] = v9;

  [(id)v106[5] setVisible:MapsFeature_IsEnabled_ShelbyvilleAdvancedLighting()];
  v67[0] = _NSConcreteStackBlock;
  v67[1] = 3221225472;
  v67[2] = sub_100874AC4;
  v67[3] = &unk_1012E7EF8;
  objc_copyWeak(&v68, (id *)(a1 + 40));
  id v11 = [v3 addSectionWithTitle:@"Debug Style Raster Attribute" content:v67];
  v65[0] = _NSConcreteStackBlock;
  v65[1] = 3221225472;
  v65[2] = sub_100874DB0;
  v65[3] = &unk_1012E7EF8;
  objc_copyWeak(&v66, (id *)(a1 + 40));
  id v12 = [v3 addSectionWithTitle:@"Planar Texture Mapping Tuning" content:v65];
  v63[0] = _NSConcreteStackBlock;
  v63[1] = 3221225472;
  v63[2] = sub_1008750AC;
  v63[3] = &unk_1012E7EF8;
  objc_copyWeak(&v64, (id *)(a1 + 40));
  id v13 = [v3 addSectionWithTitle:@"Color Correction Tuning" content:v63];
  v60[0] = _NSConcreteStackBlock;
  v60[1] = 3221225472;
  v60[2] = sub_100875634;
  v60[3] = &unk_1012EE3E8;
  objc_copyWeak(&v62, (id *)(a1 + 40));
  id v61 = *(id *)(a1 + 32);
  uint64_t v14 = [v3 addSectionWithTitle:@"Normal generation edge smoothing" content:v60];
  id v15 = (void *)v100[5];
  v100[5] = v14;

  [v100[5] setVisible:[VKMapView _elevatedGroundIsEnabled]];
  v57[0] = _NSConcreteStackBlock;
  v57[1] = 3221225472;
  v57[2] = sub_100875E38;
  v57[3] = &unk_1012EE3E8;
  objc_copyWeak(&v59, (id *)(a1 + 40));
  id v58 = *(id *)(a1 + 32);
  uint64_t v16 = [v3 addSectionWithTitle:@"Elevation Scaling" content:v57];
  int v17 = (void *)v94[5];
  v94[5] = v16;

  [v94[5] setVisible:[VKMapView _elevatedGroundIsEnabled]];
  v55[0] = _NSConcreteStackBlock;
  v55[1] = 3221225472;
  v55[2] = sub_100876390;
  v55[3] = &unk_1012E7EF8;
  objc_copyWeak(&v56, (id *)(a1 + 40));
  uint64_t v18 = [v3 addSectionWithTitle:@"Pitch Flattening" content:v55];
  double v19 = (void *)v88[5];
  v88[5] = v18;

  [v88[5] setVisible:[VKMapView _elevatedGroundIsEnabled]];
  uint64_t v20 = [v3 addSectionWithTitle:@"Globe Atmosphere" content:&stru_1012FDDD8];
  double v21 = (void *)v80[5];
  v80[5] = v20;

  double v22 = (void *)v80[5];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v24 = [WeakRetained valueForKeyInAllMapLayers:@"enableGlobe"];
  [v22 setVisible:[v24 BOOLValue]];

  v52[0] = _NSConcreteStackBlock;
  v52[1] = 3221225472;
  v52[2] = sub_100876B20;
  v52[3] = &unk_1012FD470;
  objc_copyWeak(&v53, v4);
  objc_copyWeak(&v54, &location);
  id v41 = [v3 addSectionWithTitle:@"Globe Camera" content:v52];
  [v41 setVisible:[VKMapView _globeIsEnabled]];
  v50[0] = _NSConcreteStackBlock;
  v50[1] = 3221225472;
  v50[2] = sub_10087723C;
  v50[3] = &unk_1012E7EF8;
  objc_copyWeak(&v51, v4);
  id v40 = [v3 addSectionWithTitle:@"Draping" content:v50];
  [v40 setVisible:[VKMapView _elevatedGroundIsEnabled]];
  id v25 = objc_loadWeakRetained(v4);
  int v26 = v25;
  if (v25)
  {
    long long v48 = 0u;
    long long v49 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    id v27 = *((id *)v25 + 12);
    id v28 = (char *)[v27 countByEnumeratingWithState:&v46 objects:v119 count:16];
    if (v28)
    {
      uint64_t v29 = *(void *)v47;
      do
      {
        for (uint64_t i = 0; i != v28; ++i)
        {
          if (*(void *)v47 != v29) {
            objc_enumerationMutation(v27);
          }
          MapsFeature_RemoveBlockListener();
        }
        id v28 = (char *)[v27 countByEnumeratingWithState:&v46 objects:v119 count:16];
      }
      while (v28);
    }

    uint64_t v31 = (void *)v26[12];
    id v32 = &_dispatch_main_q;
    v44[1] = _NSConcreteStackBlock;
    v44[2] = (id)3221225472;
    v44[3] = sub_10087766C;
    void v44[4] = &unk_1012FDFC0;
    v44[5] = &v113;
    v44[6] = &v99;
    v44[7] = &v93;
    v44[8] = &v87;
    v44[9] = v85;
    objc_copyWeak(&v45, &location);
    double v33 = MapsFeature_AddBlockListener();
    [v31 addObject:v33];

    double v34 = (void *)v26[12];
    v43[1] = _NSConcreteStackBlock;
    v43[2] = (id)3221225472;
    v43[3] = sub_100877720;
    void v43[4] = &unk_1012FDFE8;
    v43[5] = &v79;
    v43[6] = v77;
    objc_copyWeak(v44, &location);
    int v35 = MapsFeature_AddBlockListener();
    [v34 addObject:v35];

    int v36 = (void *)v26[12];
    v42[1] = _NSConcreteStackBlock;
    v42[2] = (id)3221225472;
    v42[3] = sub_100877798;
    void v42[4] = &unk_1012FE010;
    v42[5] = &v105;
    objc_copyWeak(v43, &location);
    id v37 = MapsFeature_AddBlockListener();
    [v36 addObject:v37];

    id v38 = (void *)v26[12];
    objc_copyWeak(v42, &location);
    id v39 = MapsFeature_AddBlockListener();
    [v38 addObject:v39];

    objc_destroyWeak(v42);
    objc_destroyWeak(v43);
    objc_destroyWeak(v44);
    objc_destroyWeak(&v45);
  }

  objc_destroyWeak(&v51);
  objc_destroyWeak(&v54);
  objc_destroyWeak(&v53);
  objc_destroyWeak(&v56);

  objc_destroyWeak(&v59);
  objc_destroyWeak(&v62);
  objc_destroyWeak(&v64);
  objc_destroyWeak(&v66);
  objc_destroyWeak(&v68);
  objc_destroyWeak(&v70);
  objc_destroyWeak(&v72);
  objc_destroyWeak(&v75);
  objc_destroyWeak(&v74);
  objc_destroyWeak(&location);

  _Block_object_dispose(v77, 8);
  _Block_object_dispose(&v79, 8);

  _Block_object_dispose(v85, 8);
  _Block_object_dispose(&v87, 8);

  _Block_object_dispose(&v93, 8);
  _Block_object_dispose(&v99, 8);

  _Block_object_dispose(&v105, 8);
  _Block_object_dispose(v111, 8);

  _Block_object_dispose(&v113, 8);
}

void sub_100872408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, id *a10, id *a11, id *a12, id *a13, id *a14, id *a15, id *a16, id *a17, id *a18, id *a19, id *a20,id *location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(location);
  objc_destroyWeak(a20);
  objc_destroyWeak(a19);
  objc_destroyWeak(a18);
  objc_destroyWeak(a17);
  objc_destroyWeak(a13);
  objc_destroyWeak(a11);
  objc_destroyWeak(a10);
  objc_destroyWeak(a12);
  objc_destroyWeak(a16);
  objc_destroyWeak(a15);
  objc_destroyWeak(a14);
  objc_destroyWeak((id *)&STACK[0x380]);
  _Block_object_dispose(&STACK[0x388], 8);
  _Block_object_dispose(&STACK[0x3B8], 8);
  _Block_object_dispose(&STACK[0x3E8], 8);
  _Block_object_dispose(&STACK[0x418], 8);
  _Block_object_dispose(&STACK[0x448], 8);
  _Block_object_dispose(&STACK[0x478], 8);
  _Block_object_dispose(&STACK[0x4A8], 8);
  _Block_object_dispose(&STACK[0x4D8], 8);
  _Block_object_dispose(&STACK[0x508], 8);
  _Unwind_Resume(a1);
}

void sub_100872604(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[VKMapView _elevatedGroundIsAvailable])
  {
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    void v22[2] = sub_1008729C0;
    void v22[3] = &unk_1012FD448;
    objc_copyWeak(&v23, (id *)(a1 + 32));
    objc_copyWeak(&v24, (id *)(a1 + 40));
    id v4 = [v3 addSwitchRowWithTitle:@"Terrain" get:&stru_1012FD420 set:v22];
    if (MapsFeature_IsEnabled())
    {
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      _DWORD v20[2] = sub_100872B60;
      void v20[3] = &unk_1012E8290;
      objc_copyWeak(&v21, (id *)(a1 + 32));
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      void v18[2] = sub_100872C0C;
      void v18[3] = &unk_1012E6998;
      objc_copyWeak(&v19, (id *)(a1 + 32));
      id v5 = [v3 addSwitchRowWithTitle:@"Metros" get:v20 set:v18];
      objc_destroyWeak(&v19);
      objc_destroyWeak(&v21);
    }
    objc_destroyWeak(&v24);
    objc_destroyWeak(&v23);
  }
  if (MapsFeature_IsAvailable_ShelbyvilleGlobe())
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v7 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Globe" selector:@"enableGlobe" key:MapsFeaturesConfig_ShelbyvilleGlobe[0] key:MapsFeaturesConfig_ShelbyvilleGlobe[1]];
  }
  if (MapsFeature_IsAvailable_ShelbyvilleRoundedBuildings())
  {
    id v8 = objc_loadWeakRetained((id *)(a1 + 32));
    id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Rounded Buildings" selector:@"enableRoundedBuildings" key:MapsFeaturesConfig_ShelbyvilleRoundedBuildings[0] MapsFeaturesConfig_ShelbyvilleRoundedBuildings[1]];
  }
  if (MapsFeature_IsAvailable_ShelbyvilleColorizedBuildings())
  {
    id v10 = objc_loadWeakRetained((id *)(a1 + 32));
    id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Colorized Buildings" selector:@"enableColorizedBuildings" key:MapsFeaturesConfig_ShelbyvilleColorizedBuildings[0] MapsFeaturesConfig_ShelbyvilleColorizedBuildings[1]];
  }
  if (MapsFeature_IsAvailable_ShelbyvilleBuildingHeights())
  {
    id v12 = objc_loadWeakRetained((id *)(a1 + 32));
    id v13 = [v12 addAllMapsSwitchRowToSection:v3 title:@"Building Heights" selector:@"enableBuildingHeights" key:MapsFeaturesConfig_ShelbyvilleBuildingHeights[0] key:MapsFeaturesConfig_ShelbyvilleBuildingHeights[1]];
  }
  if (MapsFeature_IsAvailable_ShelbyvilleAdvancedLighting())
  {
    id v14 = objc_loadWeakRetained((id *)(a1 + 32));
    id v15 = [v14 addAllMapsSwitchRowToSection:v3 title:@"Advanced Lighting" selector:@"enableAdvancedLighting" key:MapsFeaturesConfig_ShelbyvilleAdvancedLighting[0] MapsFeaturesConfig_ShelbyvilleAdvancedLighting[1]];
  }
  if (MapsFeature_IsAvailable_ShelbyvilleAdvancedWater())
  {
    id v16 = objc_loadWeakRetained((id *)(a1 + 32));
    id v17 = [v16 addAllMapsSwitchRowToSection:v3 title:@"Advanced Water" selector:@"enableAdvancedWater" key:MapsFeaturesConfig_ShelbyvilleAdvancedWater[0] MapsFeaturesConfig_ShelbyvilleAdvancedWater[1]];
  }
}

void sub_100872978(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1008729B0(id a1)
{
  return MapsFeature_IsEnabled();
}

void sub_1008729C0(uint64_t a1)
{
  unsigned int v2 = MapsFeature_SetEnabled();
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained delegate];
  id v5 = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v6 = [v4 allVisibleMapViewsForDebugController:v5];

  id v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        id v12 = [v11 _mapLayer];
        [v12 setTerrainMode:v2];

        id v13 = [v11 _mapLayer];
        [v13 setNeedsLayout];
      }
      id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v8);
  }

  id v14 = objc_loadWeakRetained((id *)(a1 + 40));
  [v14 rebuildSections];
}

BOOL sub_100872B60(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];
  uint64_t v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];

  BOOL v8 = [v7 terrainMode] == (id)1;
  return v8;
}

void sub_100872C0C(uint64_t a1, int a2)
{
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = [WeakRetained delegate];
  id v6 = objc_loadWeakRetained(v3);
  id v7 = [v5 allVisibleMapViewsForDebugController:v6];

  id v8 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        id v13 = [v12 _mapLayer];
        id v14 = v13;
        if (a2)
        {
          [v13 setTerrainMode:1];

          long long v15 = +[NSUserDefaults standardUserDefaults];
          [v15 setBool:1 forKey:@"__internal_MapsDebugEnableTerrainMetros"];
        }
        else
        {
          [v13 setTerrainMode:2];

          long long v15 = +[NSUserDefaults standardUserDefaults];
          [v15 removeObjectForKey:@"__internal_MapsDebugEnableTerrainMetros"];
        }

        long long v16 = [v12 _mapLayer];
        [v16 setNeedsLayout];
      }
      id v9 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v9);
  }
}

void sub_100872DD4(id *a1, void *a2)
{
  id v3 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Entity Highlighting (Top down only (still unreliably))" forVectorKitDebugKey:@"daVinciEntityDebugHighlighting"];

  id v6 = objc_loadWeakRetained(a1);
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Force 3D" forVectorKitDebugKey:@"daVinciForceElevatedGround"];

  id v8 = objc_loadWeakRetained(a1);
  id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Hide Buildings on Camera Collision" forVectorKitDebugKey:@"hideBuildingsOnCollision"];

  id v10 = objc_loadWeakRetained(a1);
  id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Hide Assets (Landmarks/Trees etc.) on Camera Collision" forVectorKitDebugKey:@"hideAssetsOnCollision"];

  id v12 = objc_loadWeakRetained(a1);
  id v13 = [v12 addAllMapsSwitchRowToSection:v3 title:@"Show Geometry Stats" forVectorKitDebugKey:@"drawDaVinciHUD"];

  id v14 = objc_loadWeakRetained(a1);
  id v15 = [v14 addAllMapsSwitchRowToSection:v3 title:@"Enable Wireframe" forVectorKitDebugKey:@"daVinciWireframeEnabled"];

  id v16 = objc_loadWeakRetained(a1);
  id v17 = [v16 addAllMapsSwitchRowToSection:v3 title:@"Paint Decal bounds" forVectorKitDebugKey:@"paintDaVinciDecalBounds"];

  id v18 = objc_loadWeakRetained(a1);
  id v19 = [v18 addAllMapsSwitchRowToSection:v3 title:@"Paint Mesh bounds" forVectorKitDebugKey:@"paintDaVinciMeshBounds"];

  id v20 = objc_loadWeakRetained(a1);
  id v21 = [v20 addAllMapsSwitchRowToSection:v3 title:@"Paint Building Mesh bounds" forVectorKitDebugKey:@"paintDaVinciBuildingMeshBounds"];

  id v22 = objc_loadWeakRetained(a1);
  id v23 = [v22 addAllMapsSwitchRowToSection:v3 title:@"Paint Meta Tiles" forVectorKitDebugKey:@"paintDaVinciMetaTiles"];

  v65[0] = _NSConcreteStackBlock;
  v65[1] = 3221225472;
  v65[2] = sub_1008734C0;
  v65[3] = &unk_1012FB138;
  objc_copyWeak(&v66, a1);
  LODWORD(v++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1.0;
  id v25 = [v3 addSliderRowWithTitle:@"Meta tile opacity" subtitleStringFormat:@"%.1f" min:&stru_1012FD490 max:v65 get:0.0 set:v24];
  id v26 = objc_loadWeakRetained(a1);
  id v27 = [v26 addAllMapsSwitchRowToSection:v3 title:@"Enable Tile Clipping" forVectorKitDebugKey:@"enableTileClipping"];

  id v28 = objc_loadWeakRetained(a1);
  id v29 = [v28 addAllMapsSwitchRowToSection:v3 title:@"Enable Tile Clipping (Fallback) Debugging" forVectorKitDebugKey:@"enableTileClippingDebug"];

  id v30 = objc_loadWeakRetained(a1);
  id v31 = [v30 addAllMapsSwitchRowToSection:v3 title:@"Render line geometry" forVectorKitDebugKey:@"daVinciRenderLineGeometry"];

  id v32 = objc_loadWeakRetained(a1);
  id v33 = [v32 addAllMapsSwitchRowToSection:v3 title:@"Render overlay polygons" key:@"renderOverlayPolygons"];

  id v34 = objc_loadWeakRetained(a1);
  id v35 = [v34 addAllMapsSwitchRowToSection:v3 title:@"Show Center Line Roads" forVectorKitDebugKey:@"daVinciShowCenterLineRoads"];

  id v36 = objc_loadWeakRetained(a1);
  id v37 = [v36 addAllMapsSwitchRowToSection:v3 title:@"Enable Ribbon Antialiasing" forVectorKitDebugKey:@"daVinciEnableRibbonAntialiasing"];

  id v38 = objc_loadWeakRetained(a1);
  id v39 = [v38 addAllMapsSwitchRowToSection:v3 title:@"Paint DaVinci Tiles" forVectorKitDebugKey:@"paintDaVinciTiles"];

  id v40 = objc_loadWeakRetained(a1);
  id v41 = [v40 addAllMapsSwitchRowToSection:v3 title:@"Paint DaVinci Building Tiles" forVectorKitDebugKey:@"paintDaVinciBuildingTiles"];

  id v42 = objc_loadWeakRetained(a1);
  id v43 = [v42 addAllMapsSwitchRowToSection:v3 title:@"Paint Draped Polygons" forVectorKitDebugKey:@"paintDrapedPolygons"];

  id v44 = objc_loadWeakRetained(a1);
  id v45 = [v44 addAllMapsSwitchRowToSection:v3 title:@"Paint Tile Boundary Verts" forVectorKitDebugKey:@"paintDaVinciTileBoundaryVerts"];

  id v46 = objc_loadWeakRetained(a1);
  id v47 = [v46 addAllMapsSwitchRowToSection:v3 title:@"Paint Elevation Raster" forVectorKitDebugKey:@"paintDaVinciElevationRaster"];

  id v48 = objc_loadWeakRetained(a1);
  id v49 = [v48 addAllMapsSwitchRowToSection:v3 title:@"Show Missing Materials" forVectorKitDebugKey:@"daVinciShowMissingMaterials"];

  id v50 = [v3 addSwitchRowWithTitle:@"Paint LOD Levels" get:&stru_1012FD4B0 set:&stru_1012FD4D0];
  id v51 = [v3 addSwitchRowWithTitle:@"Enable Sideloading ASTC texture from DevResources" get:&stru_1012FD4F0 set:&stru_1012FD510];
  id v52 = [v3 addSwitchRowWithTitle:@"Enable Sideloading Asset/Material from DevResources" get:&stru_1012FD530 set:&stru_1012FD550];
  id v53 = [v3 addSwitchRowWithTitle:@"Enable Injected Assets from DevResources" get:&stru_1012FD570 set:&stru_1012FD590];
  unint64_t v60 = _NSConcreteStackBlock;
  uint64_t v61 = 3221225472;
  id v62 = sub_100873890;
  id v63 = &unk_1012FB138;
  objc_copyWeak(&v64, a1);
  LODWORD(v54) = 2.0;
  LODWORD(v55) = 20.0;
  id v56 = [v3 addSliderRowWithTitle:@"Globe Spline Maximum Z" subtitleStringFormat:@"%2.1f " min:&stru_1012FD5B0 max:&v60 get:v54 set:v55];
  id v57 = [v3 addSwitchRowWithTitle:@"Enable Globe Scaling Correction" get:&stru_1012FD5D0 set:&stru_1012FD5F0 v60, v61, v62, v63];
  id v58 = objc_loadWeakRetained(a1);
  id v59 = [v58 addAllMapsSwitchRowToSection:v3 title:@"Show Stacking Venues" forVectorKitDebugKey:@"daVinciShowStackingVenues"];

  objc_destroyWeak(&v64);
  objc_destroyWeak(&v66);
}

void sub_10087344C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

float sub_100873478(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciMetaTileOpacity];
  float v3 = v2;

  return v3;
}

void sub_1008734C0(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDaVinciMetaTileOpacity:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

BOOL sub_100873538(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciTintLODLevels];

  return v2;
}

void sub_100873578(id a1, BOOL a2)
{
  BOOL v2 = a2;
  float v3 = +[VKDebugSettings sharedSettings];
  [v3 setDaVinciTintLODLevels:v2];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

BOOL sub_1008735FC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciASTCTextureSideLoadEnabled];

  return v2;
}

void sub_10087363C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  float v3 = +[VKDebugSettings sharedSettings];
  [v3 setDaVinciASTCTextureSideLoadEnabled:v2];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

BOOL sub_1008736C0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciResourceOverrideEnabled];

  return v2;
}

void sub_100873700(id a1, BOOL a2)
{
  BOOL v2 = a2;
  float v3 = +[VKDebugSettings sharedSettings];
  [v3 setDaVinciResourceOverrideEnabled:v2];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

BOOL sub_100873784(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 enableInjectedAssets];

  return v2;
}

void sub_1008737C4(id a1, BOOL a2)
{
  BOOL v2 = a2;
  float v3 = +[VKDebugSettings sharedSettings];
  [v3 setEnableInjectedAssets:v2];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

float sub_100873848(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciGlobeSplinedMaxZoom];
  float v3 = v2;

  return v3;
}

void sub_100873890(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDaVinciGlobeSplinedMaxZoom:v5];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];
}

BOOL sub_100873908(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciGlobeScalingCorrection];

  return v2;
}

void sub_100873948(id a1, BOOL a2)
{
  BOOL v2 = a2;
  float v3 = +[VKDebugSettings sharedSettings];
  [v3 setDaVinciGlobeScalingCorrection:v2];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

void sub_1008739CC(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addCheckmarkRowsGroupWithContent:&stru_1012FD630 get:&stru_1012FD650 set:&stru_1012FD670];
}

void sub_100873A08(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"No override" value:0];
  float v3 = +[NSNumber numberWithInteger:1024];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"1k" value:v3];

  double v5 = +[NSNumber numberWithInteger:2048];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"2k" value:v5];
}

id sub_100873ACC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  id v2 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v1 shadowMapResolution]);

  return v2;
}

void sub_100873B34(id a1, id a2)
{
  id v2 = [a2 integerValue];
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setShadowMapResolution:v2];
}

void sub_100873B94(uint64_t a1, void *a2)
{
  id v70 = a2;
  id v3 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = [WeakRetained addAllMapsSwitchRowToSection:v70 title:@"Enable Globe Lighting" forVectorKitDebugKey:@"daVinciGlobeLighting"];
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setVisible:[VKMapView _globeIsEnabled]];
  id v8 = [v70 addSwitchRowWithTitle:@"Disable Shadows" get:&stru_1012FD690 set:&stru_1012FD6B0];
  LODWORD(v9) = 1.0;
  id v10 = [v70 addSliderRowWithTitle:@"Shadow Intensity" subtitleStringFormat:@"Intensity:  %1.2f" min:&stru_1012FD6D0 max:&stru_1012FD6F0 get:0.0 set:v9];
  id v11 = objc_loadWeakRetained((id *)(a1 + 40));
  id v12 = [v11 addAllMapsSwitchRowToSection:v70 title:@"Use PBR Shader" forVectorKitDebugKey:@"daVinciEnablePBR"];

  id v13 = objc_loadWeakRetained(v3);
  id v14 = [v13 addAllMapsSwitchRowToSection:v70 title:@"Base Colors Only" forVectorKitDebugKey:@"daVinciLightingDebugAlbedoOnly"];

  id v15 = objc_loadWeakRetained(v3);
  id v16 = [v15 addAllMapsSwitchRowToSection:v70 title:@"Lighting Only" forVectorKitDebugKey:@"daVinciLightingDebugLightsOnly"];

  id v17 = objc_loadWeakRetained(v3);
  id v18 = [v17 addAllMapsSwitchRowToSection:v70 title:@"Show Overexposure" forVectorKitDebugKey:@"daVinciLightingDebugShowOverexposure"];

  id v19 = objc_loadWeakRetained(v3);
  id v20 = [v19 addAllMapsSwitchRowToSection:v70 title:@"Show Normals" forVectorKitDebugKey:@"daVinciLightingDebugShowNormals"];

  id v21 = objc_loadWeakRetained(v3);
  id v22 = [v21 addAllMapsSwitchRowToSection:v70 title:@"Show Lighting Debug Sphere" forVectorKitDebugKey:@"daVinciLightingDebugShowLitSphere"];

  id v23 = objc_loadWeakRetained(v3);
  id v24 = [v23 addAllMapsSwitchRowToSection:v70 title:@"Show UVs" forVectorKitDebugKey:@"daVinciRenderingDebugShowUVs"];

  id v25 = objc_loadWeakRetained(v3);
  id v26 = [v25 addAllMapsSwitchRowToSection:v70 title:@"Enable Ground Ambient Occlusion" forVectorKitDebugKey:@"daVinciGroundAmbientOcclusionEnabled"];

  id v27 = objc_loadWeakRetained(v3);
  id v28 = [v27 addAllMapsSwitchRowToSection:v70 title:@"Occlusion map only" forVectorKitDebugKey:@"daVinciSSAOOcclusionOnly"];

  id v29 = [v70 addSwitchRowWithTitle:@"SSAO Override On" get:&stru_1012FD710 set:&stru_1012FD730];
  LODWORD(v30) = 5.0;
  LODWORD(v31) = 1008981770;
  id v32 = [v70 addSliderRowWithTitle:@"SSAO Override Intensity" subtitleStringFormat:@"Overall Intensity Scale:  %1.2f" min:&stru_1012FD750 max:&stru_1012FD770 get:v31 set:v30];
  LODWORD(v33) = 5.0;
  LODWORD(v34) = 1008981770;
  id v35 = [v70 addSliderRowWithTitle:@"SSAO Override Radius" subtitleStringFormat:@"Radius Scale:  %1.2f" min:&stru_1012FD790 max:&stru_1012FD7B0 get:v34 set:v33];
  LODWORD(v36) = 1.0;
  id v37 = [v70 addSliderRowWithTitle:@"SSAO Max Intensity" subtitleStringFormat:@"Maximum Intensity:  %1.2f" min:&stru_1012FD7D0 max:&stru_1012FD7F0 get:0.0 set:v36];
  LODWORD(v3_Block_object_dispose(&STACK[0x238], 8) = 981668463;
  LODWORD(v39) = 1036831949;
  id v40 = [v70 addSliderRowWithTitle:@"SSAO Max Distance" subtitleStringFormat:@"Maximum Distance:  %1.2f" min:&stru_1012FD810 max:&stru_1012FD830 get:v38 set:v39];
  LODWORD(v41) = 1140460749;
  LODWORD(v42) = 1.0;
  id v43 = [v70 addSliderRowWithTitle:@"SSAO Falloff Scale" subtitleStringFormat:@"Falloff Scale:  %1.2f" min:&stru_1012FD850 max:&stru_1012FD870 get:v42 set:v41];
  id v44 = [v70 addSwitchRowWithTitle:@"Show SSAO Demo Button" get:&stru_1012FD890 set:&stru_1012FD8B0];
  id v45 = objc_loadWeakRetained(v3);
  id v46 = [v45 addAllMapsSwitchRowToSection:v70 title:@"Enable SSAO High Sample Count" forVectorKitDebugKey:@"daVinciSSAOHighSampleCountEnabled"];

  id v47 = objc_loadWeakRetained(v3);
  id v48 = [v47 addAllMapsSwitchRowToSection:v70 title:@"Enable SSAO Blur" forVectorKitDebugKey:@"daVinciSSAOEnableBlur"];

  id v49 = objc_loadWeakRetained(v3);
  id v50 = [v49 addAllMapsSwitchRowToSection:v70 title:@"Enable SSAO Depth Aware Blur" forVectorKitDebugKey:@"daVinciSSAODepthAwareBlurEnabled"];

  id v51 = [v70 addTextFieldRowWithTitle:@"SSAO Blur Size" placeholderText:@"1" inputType:1 get:&stru_1012FD8D0 set:&stru_1012FD8F0];
  LODWORD(v52) = 10.0;
  LODWORD(v53) = 981668463;
  id v54 = [v70 addSliderRowWithTitle:@"SSAO Depth Threshold" subtitleStringFormat:@"Depth Threshold:  %1.2f" min:&stru_1012FD910 max:&stru_1012FD930 get:v53 set:v52];
  LODWORD(v55) = 10.0;
  LODWORD(v56) = 1036831949;
  id v57 = [v70 addSliderRowWithTitle:@"SSAO Blurriness" subtitleStringFormat:@"Blurriness:  %1.2f" min:&stru_1012FD950 max:&stru_1012FD970 get:v56 set:v55];
  LODWORD(v5_Block_object_dispose(&STACK[0x238], 8) = 10.0;
  LODWORD(v59) = 1008981770;
  id v60 = [v70 addSliderRowWithTitle:@"SSAO Depth Blurriness" subtitleStringFormat:@"Blurriness:  %1.2f" min:&stru_1012FD990 max:&stru_1012FD9B0 get:v59 set:v58];
  id v61 = objc_loadWeakRetained(v3);
  id v62 = [v61 addAllMapsSwitchRowToSection:v70 title:@"Enable SSAO Depth Aware Upsample" forVectorKitDebugKey:@"daVinciSSAODepthAwareUpsampleEnabled"];

  LODWORD(v63) = 1092721050;
  LODWORD(v64) = 981668463;
  id v65 = [v70 addSliderRowWithTitle:@"SSAO Upsample Depth Threshold" subtitleStringFormat:@"Upsample Depth Threshold:  %1.2f" min:&stru_1012FD9D0 max:&stru_1012FD9F0 get:v64 set:v63];
  LODWORD(v66) = 1028443341;
  LODWORD(v67) = 2.0;
  id v68 = [v70 addSliderRowWithTitle:@"Occlusion Texture Scale" subtitleStringFormat:@"Scale:  %1.3f" min:&stru_1012FDA10 max:&stru_1012FDA30 get:v66 set:v67];
  id v69 = [v70 addButtonRowWithTitle:@"Reset SSAO values" action:&stru_1012FDA50];
}

BOOL sub_100874220(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100874230(id a1, BOOL a2)
{
}

float sub_100874244(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciShadowIntensity];
  float v3 = v2;

  return v3;
}

void sub_10087428C(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciShadowIntensity:v3];
}

BOOL sub_1008742E4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 ssaoOverrideOn];

  return v2;
}

void sub_100874324(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setSsaoOverrideOn:v2];
}

float sub_10087437C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 ssaoOverrideIntensity];
  float v3 = v2;

  return v3;
}

void sub_1008743C4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setSsaoOverrideIntensity:v3];
}

float sub_10087441C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 ssaoOverrideRadius];
  float v3 = v2;

  return v3;
}

void sub_100874464(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setSsaoOverrideRadius:v3];
}

float sub_1008744BC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 ssaoMaxIntensity];
  float v3 = v2;

  return v3;
}

void sub_100874504(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setSsaoMaxIntensity:v3];
}

float sub_10087455C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 ssaoMaxDistance];
  float v3 = v2;

  return v3;
}

void sub_1008745A4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setSsaoMaxDistance:v3];
}

float sub_1008745FC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 ssaoFalloffScale];
  float v3 = v2;

  return v3;
}

void sub_100874644(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setSsaoFalloffScale:v3];
}

BOOL sub_10087469C(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_1008746AC(id a1, BOOL a2)
{
}

NSString *__cdecl sub_1008746C0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  float v2 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [v1 daVinciSSAOBlurSize]);

  return (NSString *)v2;
}

void sub_100874738(id a1, NSString *a2)
{
  uint64_t v2 = [(NSString *)a2 intValue];
  id v3 = +[VKDebugSettings sharedSettings];
  [v3 setDaVinciSSAOBlurSize:v2];
}

float sub_100874798(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSSAODepthThreshold];
  float v3 = v2;

  return v3;
}

void sub_1008747E0(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciSSAODepthThreshold:v3];
}

float sub_100874838(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSSAOBlurriness];
  float v3 = v2;

  return v3;
}

void sub_100874880(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciSSAOBlurriness:v3];
}

float sub_1008748D8(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSSAODepthBlurriness];
  float v3 = v2;

  return v3;
}

void sub_100874920(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciSSAODepthBlurriness:v3];
}

float sub_100874978(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSSAOUpsampleDepthThreshold];
  float v3 = v2;

  return v3;
}

void sub_1008749C0(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciSSAOUpsampleDepthThreshold:v3];
}

float sub_100874A18(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSSAOTextureScale];
  float v3 = v2;

  return v3;
}

void sub_100874A60(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciSSAOTextureScale:v3];
}

void sub_100874AB8(id a1)
{
}

void sub_100874AC4(id *a1, void *a2)
{
  id v3 = a2;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100874D24;
  void v11[3] = &unk_1012FB5C8;
  a1 += 4;
  objc_copyWeak(&v12, a1);
  id v4 = [v3 addCheckmarkRowsGroupWithContent:&stru_1012FDA98 get:&stru_1012FDAB8 set:v11];
  id WeakRetained = objc_loadWeakRetained(a1);
  id v6 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Enable Aridity Ground Tinting" forVectorKitDebugKey:@"daVinciAridityGroundTintingEnabled"];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 addAllMapsSwitchRowToSection:v3 title:@"Enable Temperature Ground Tinting" forVectorKitDebugKey:@"daVinciTemperatureGroundTintingEnabled"];

  id v9 = objc_loadWeakRetained(a1);
  id v10 = [v9 addAllMapsSwitchRowToSection:v3 title:@"Enable Material Rasters" forVectorKitDebugKey:@"daVinciMaterialRastersEnabled"];

  objc_destroyWeak(&v12);
}

void sub_100874C14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100874C2C(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  uint64_t v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"None" value:&off_1013A8E78];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Temperature" value:&off_1013A8E90];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Precipitation" value:&off_1013A8EA8];
}

id sub_100874CC0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned int v2 = [v1 daVinciDebugRasterStyleAttribute];

  id v3 = &off_1013A8E78;
  if (v2 == 153) {
    id v3 = &off_1013A8E90;
  }
  if (v2 == 154) {
    return &off_1013A8EA8;
  }
  else {
    return v3;
  }
}

void sub_100874D24(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 intValue];
  if (v3 == 1) {
    unsigned int v4 = 153;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v3 == 2) {
    uint64_t v5 = 154;
  }
  else {
    uint64_t v5 = v4;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _setAllMapLayersNeedLayout];

  id v7 = +[VKDebugSettings sharedSettings];
  [v7 setDaVinciDebugRasterStyleAttribute:v5];
}

void sub_100874DB0(uint64_t a1, void *a2)
{
  id v13 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v13 title:@"Override Planar Mapping Parameters" forVectorKitDebugKey:@"daVinciPlanarOverride"];

  LODWORD(v5) = 1.0;
  id v6 = [v13 addSliderRowWithTitle:@"Pixels Per Meter" subtitleStringFormat:@"%1.2f" min:&stru_1012FDAD8 max:&stru_1012FDAF8 get:v5 set:8589936700.0];
  LODWORD(v7) = 1036831949;
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 5.0;
  id v9 = [v13 addSliderRowWithTitle:@"Tiling" subtitleStringFormat:@"%1.2f" min:&stru_1012FDB18 max:&stru_1012FDB38 get:v7 set:v8];
  LODWORD(v10) = -20.0;
  LODWORD(v11) = 20.0;
  id v12 = [v13 addSliderRowWithTitle:@"Offset" subtitleStringFormat:@"%1.2f" min:&stru_1012FDB58 max:&stru_1012FDB78 get:v10 set:v11];
}

float sub_100874ECC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciPlanarPixelPerMeterOverride];
  float v3 = v2;

  return v3;
}

void sub_100874F14(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciPlanarPixelPerMeterOverride:v3];
}

float sub_100874F6C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciPlanarTilingOverride];
  float v3 = v2;

  return v3;
}

void sub_100874FB4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciPlanarTilingOverride:v3];
}

float sub_10087500C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciPlanarOffsetOverride];
  float v3 = v2;

  return v3;
}

void sub_100875054(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciPlanarOffsetOverride:v3];
}

void sub_1008750AC(id *a1, void *a2)
{
  id v3 = a2;
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Override Color Correction Parameters" forVectorKitDebugKey:@"daVinciColorCorrectionOverride"];

  id v6 = objc_loadWeakRetained(a1);
  double v7 = [v6 delegate];
  id v8 = objc_loadWeakRetained(a1);
  id v9 = [v7 allVisibleMapViewsForDebugController:v8];
  double v10 = [v9 firstObject];
  double v11 = [v10 _mapLayer];

  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_1008753DC;
  void v30[3] = &unk_1012FC680;
  id v12 = v11;
  id v31 = v12;
  LODWORD(v13) = 1.0;
  id v14 = [v3 addSliderRowWithTitle:@"Saturation Range Min" subtitleStringFormat:@"%1.2f" min:&stru_1012FDB98 max:v30 get:0.0 set:v13];
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  void v28[2] = sub_100875484;
  v28[3] = &unk_1012FC680;
  id v15 = v12;
  id v29 = v15;
  LODWORD(v16) = 1.0;
  id v17 = [v3 addSliderRowWithTitle:@"Saturation Range Max" subtitleStringFormat:@"%1.2f" min:&stru_1012FDBB8 max:v28 get:0.0 set:v16];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_10087552C;
  v26[3] = &unk_1012FC680;
  id v18 = v15;
  id v27 = v18;
  LODWORD(v19) = 1.0;
  id v20 = [v3 addSliderRowWithTitle:@"Brightness Range Min" subtitleStringFormat:@"%1.2f" min:&stru_1012FDBD8 max:v26 get:0.0 set:v19];
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1008755D4;
  v24[3] = &unk_1012FC680;
  id v25 = v18;
  id v21 = v18;
  LODWORD(v22) = 1.0;
  id v23 = [v3 addSliderRowWithTitle:@"Brightness Range Max" subtitleStringFormat:@"%1.2f" min:&stru_1012FDBF8 max:v24 get:0.0 set:v22];
}

float sub_100875394(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSaturationRangeMinOverride];
  float v3 = v2;

  return v3;
}

id sub_1008753DC(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDaVinciSaturationRangeMinOverride:v5];

  id v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

float sub_10087543C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSaturationRangeMaxOverride];
  float v3 = v2;

  return v3;
}

id sub_100875484(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDaVinciSaturationRangeMaxOverride:v5];

  id v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

float sub_1008754E4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciBrightnessRangeMinOverride];
  float v3 = v2;

  return v3;
}

id sub_10087552C(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDaVinciBrightnessRangeMinOverride:v5];

  id v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

float sub_10087558C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciBrightnessRangeMaxOverride];
  float v3 = v2;

  return v3;
}

id sub_1008755D4(uint64_t a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDaVinciBrightnessRangeMaxOverride:v5];

  id v6 = *(void **)(a1 + 32);

  return [v6 setNeedsLayout];
}

void sub_100875634(uint64_t a1, void *a2)
{
  id v3 = a2;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  void v23[2] = sub_1008759F0;
  void v23[3] = &unk_1012FB138;
  objc_copyWeak(&v24, (id *)(a1 + 40));
  LODWORD(v4) = 1127474790;
  id v5 = [v3 addSliderRowWithTitle:@"Min Z Angle" subtitleStringFormat:@"%3.1f degrees" min:&stru_1012FDC18 max:v23 get:0.0 set:v4];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  void v21[2] = sub_100875AD4;
  v21[3] = &unk_1012EE360;
  id v22 = *(id *)(a1 + 32);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_100875B20;
  void v18[3] = &unk_1012F6648;
  id v19 = *(id *)(a1 + 32);
  objc_copyWeak(&v20, (id *)(a1 + 40));
  id v6 = [v3 addTextFieldRowWithTitle:@"Min Z" placeholderText:@"Z" inputType:1 get:v21 set:v18];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  void v16[2] = sub_100875C38;
  v16[3] = &unk_1012FB138;
  objc_copyWeak(&v17, (id *)(a1 + 40));
  LODWORD(v7) = 1.0;
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 1127474790;
  id v9 = [v3 addSliderRowWithTitle:@"Max Z Angle" subtitleStringFormat:@"%3.1f degrees" min:&stru_1012FDC38 max:v16 get:v7 set:v8];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100875D1C;
  void v14[3] = &unk_1012EE360;
  id v15 = *(id *)(a1 + 32);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100875D68;
  void v11[3] = &unk_1012F6648;
  id v12 = *(id *)(a1 + 32);
  objc_copyWeak(&v13, (id *)(a1 + 40));
  id v10 = [v3 addTextFieldRowWithTitle:@"Max Z" placeholderText:@"Z" inputType:1 get:v14 set:v11];
  objc_destroyWeak(&v13);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&v20);

  objc_destroyWeak(&v24);
}

void sub_100875964(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

float sub_1008759A8(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSmoothEdgeMinZAngle];
  float v3 = v2;

  return v3;
}

void sub_1008759F0(id *a1, float a2)
{
  double v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDaVinciSmoothEdgeMinZAngle:v5];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(a1);
  double v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 clearScene];
}

NSString *sub_100875AD4(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) daVinciSmoothEdgeMinZ]);
}

void sub_100875B20(id *a1, void *a2)
{
  float v2 = a1;
  [a1[4] setDaVinciSmoothEdgeMinZ:[a2 intValue]];
  v2 += 5;
  id WeakRetained = objc_loadWeakRetained(v2);
  float v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v2);
  double v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];
  [v7 clearScene];
}

float sub_100875BF0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciSmoothEdgeMaxZAngle];
  float v3 = v2;

  return v3;
}

void sub_100875C38(id *a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v5 = a2;
  [v4 setDaVinciSmoothEdgeMaxZAngle:v5];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(a1);
  double v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 clearScene];
}

NSString *sub_100875D1C(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) daVinciSmoothEdgeMaxZ]);
}

void sub_100875D68(id *a1, void *a2)
{
  float v2 = a1;
  [a1[4] setDaVinciSmoothEdgeMaxZ:[a2 intValue]];
  v2 += 5;
  id WeakRetained = objc_loadWeakRetained(v2);
  float v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v2);
  double v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];
  id v7 = [v6 _mapLayer];
  [v7 clearScene];
}

void sub_100875E38(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Show Debugging" forVectorKitDebugKey:@"drawDaVinciElevationScalingDebug"];

  id v6 = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [v6 addAllMapsSwitchRowToSection:v3 title:@"Enable Elevation Scaling Override" forVectorKitDebugKey:@"daVinciOverrideElevationScaling"];

  id v8 = objc_loadWeakRetained((id *)(a1 + 40));
  id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Scale Normals Only" forVectorKitDebugKey:@"daVinciElevationScalingNormalsOnly"];

  [v3 setFooter:@"These parameters provide a simple ramp to override the per-zoom level control available in groundSettings.json (in DevResources)"];
  LODWORD(v10) = 1.0;
  LODWORD(v11) = 1112014848;
  id v12 = [v3 addSliderRowWithTitle:@"Min Z Factor" subtitleStringFormat:@"%3.1f" min:&stru_1012FDC58 max:&stru_1012FDC78 get:v10 set:v11];
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_1008761D0;
  v24[3] = &unk_1012EE360;
  id v25 = *(id *)(a1 + 32);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10087621C;
  void v22[3] = &unk_1012E78C8;
  id v23 = *(id *)(a1 + 32);
  id v13 = [v3 addTextFieldRowWithTitle:@"Min Z" placeholderText:@"Z" inputType:1 get:v24 set:v22];
  LODWORD(v14) = 1.0;
  LODWORD(v15) = 1112014848;
  id v16 = [v3 addSliderRowWithTitle:@"Max Z Factor" subtitleStringFormat:@"%3.1f" min:&stru_1012FDC98 max:&stru_1012FDCB8 get:v14 set:v15];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_100876300;
  void v20[3] = &unk_1012EE360;
  id v21 = *(id *)(a1 + 32);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10087634C;
  void v18[3] = &unk_1012E78C8;
  id v19 = *(id *)(a1 + 32);
  id v17 = [v3 addTextFieldRowWithTitle:@"Max Z" placeholderText:@"Z" inputType:1 get:v20 set:v18];
}

float sub_100876130(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciElevationScalingMinZFactor];
  float v3 = v2;

  return v3;
}

void sub_100876178(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciElevationScalingMinZFactor:v3];
}

NSString *sub_1008761D0(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) daVinciElevationScalingMinZ]);
}

id sub_10087621C(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 intValue];
  id v4 = *(void **)(a1 + 32);

  return _[v4 setDaVinciElevationScalingMinZ:v3];
}

float sub_100876260(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciElevationScalingMaxZFactor];
  float v3 = v2;

  return v3;
}

void sub_1008762A8(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciElevationScalingMaxZFactor:v3];
}

NSString *sub_100876300(uint64_t a1)
{
  return +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", [*(id *)(a1 + 32) daVinciElevationScalingMaxZ]);
}

id sub_10087634C(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 intValue];
  id v4 = *(void **)(a1 + 32);

  return _[v4 setDaVinciElevationScalingMaxZ:v3];
}

void sub_100876390(uint64_t a1, void *a2)
{
  id v17 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained addAllMapsSwitchRowToSection:v17 title:@"Enable Pitch Flattening" forVectorKitDebugKey:@"daVinciPitchScaleEnabled"];

  [v17 setFooter:@"Flatten buildings and terrain between certain zooms when the user is looking straight down."];
  LODWORD(v5) = 1.0;
  LODWORD(v6) = 20.0;
  id v7 = [v17 addSliderRowWithTitle:@"Min Zoom" subtitleStringFormat:@"Zoom: %1.2f" min:&stru_1012FDCD8 max:&stru_1012FDCF8 get:v5 set:v6];
  LODWORD(v_Block_object_dispose(&STACK[0x238], 8) = 1.0;
  LODWORD(v9) = 20.0;
  id v10 = [v17 addSliderRowWithTitle:@"Max Zoom" subtitleStringFormat:@"Zoom: %1.2f" min:&stru_1012FDD18 max:&stru_1012FDD38 get:v8 set:v9];
  LODWORD(v11) = 1008981770;
  LODWORD(v12) = 1.0;
  id v13 = [v17 addSliderRowWithTitle:@"Max Zoom Height Fraction" subtitleStringFormat:@"Fraction: %1.2f" min:&stru_1012FDD58 max:&stru_1012FDD78 get:v11 set:v12];
  LODWORD(v14) = 1114636288;
  LODWORD(v15) = 1.0;
  id v16 = [v17 addSliderRowWithTitle:@"Full Height Return Angle" subtitleStringFormat:@"Degrees: %1.2f" min:&stru_1012FDD98 max:&stru_1012FDDB8 get:v15 set:v14];
}

float sub_1008764FC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 buildingPOIPitchScaleMinZoom];
  float v3 = v2;

  return v3;
}

void sub_100876544(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setBuildingPOIPitchScaleMinZoom:v3];
}

float sub_10087659C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 buildingPOIPitchScaleMaxZoom];
  float v3 = v2;

  return v3;
}

void sub_1008765E4(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setBuildingPOIPitchScaleMaxZoom:v3];
}

float sub_10087663C(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 buildingPOIPitchScaleMaxZoomFactor];
  float v3 = v2;

  return v3;
}

void sub_100876684(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setBuildingPOIPitchScaleMaxZoomFactor:v3];
}

float sub_1008766DC(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 buildingPOIPitchScaleFullHeightAngle];
  float v3 = v2;

  return v3;
}

void sub_100876724(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setBuildingPOIPitchScaleFullHeightAngle:v3];
}

void sub_10087677C(id a1, MapsDebugTableSection *a2)
{
  double v11 = a2;
  LODWORD(v2) = 1203982336;
  LODWORD(v3) = 1217559552;
  id v4 = [(MapsDebugTableSection *)v11 addSliderRowWithTitle:@"Atmosphere Height" subtitleStringFormat:@"%6.7f " min:&stru_1012FDDF8 max:&stru_1012FDE18 get:v2 set:v3];
  LODWORD(v5) = 1.0;
  id v6 = [(MapsDebugTableSection *)v11 addSliderRowWithTitle:@"Color Ramp Midpoint" subtitleStringFormat:@"%1.2f " min:&stru_1012FDE38 max:&stru_1012FDE58 get:0.0 set:v5];
  LODWORD(v7) = 10.0;
  id v8 = [(MapsDebugTableSection *)v11 addSliderRowWithTitle:@"Horizon Glow Sharpness" subtitleStringFormat:@"%2.2f " min:&stru_1012FDE78 max:&stru_1012FDE98 get:0.0 set:v7];
  LODWORD(v9) = 2.0;
  id v10 = [(MapsDebugTableSection *)v11 addSliderRowWithTitle:@"Horizon Glow Strength" subtitleStringFormat:@"%1.2f " min:&stru_1012FDEB8 max:&stru_1012FDED8 get:0.0 set:v9];
}

float sub_1008768A0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciAtmosphereMaxHeight];
  float v3 = v2;

  return v3;
}

void sub_1008768E8(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciAtmosphereMaxHeight:v3];
}

float sub_100876940(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciAtmosphereColorMidpoint];
  float v3 = v2;

  return v3;
}

void sub_100876988(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciAtmosphereColorMidpoint:v3];
}

float sub_1008769E0(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciHorizonGlowSharpness];
  float v3 = v2;

  return v3;
}

void sub_100876A28(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciHorizonGlowSharpness:v3];
}

float sub_100876A80(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  [v1 daVinciHorizonGlowStrength];
  float v3 = v2;

  return v3;
}

void sub_100876AC8(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setDaVinciHorizonGlowStrength:v3];
}

void sub_100876B20(uint64_t a1, void *a2)
{
  id v3 = a2;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100876DF4;
  void v14[3] = &unk_1012FD448;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  objc_copyWeak(&v16, (id *)(a1 + 40));
  id v4 = [v3 addSwitchRowWithTitle:@"New Camera Controller" get:&stru_1012FDEF8 set:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  id v12[2] = sub_100876F28;
  void v12[3] = &unk_1012E6998;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Force Mercator Zoom" get:&stru_1012FDF18 set:v12];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100877044;
  void v10[3] = &unk_1012E6998;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addSwitchRowWithTitle:@"Latitude Bias Tile Selection" get:&stru_1012FDF38 set:v10];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100877160;
  _OWORD v8[3] = &unk_1012E6998;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  id v7 = [v3 addSwitchRowWithTitle:@"Constant Z Globe Tile Selection" get:&stru_1012FDF58 set:v8];
  objc_destroyWeak(&v9);
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v16);
  objc_destroyWeak(&v15);
}

void sub_100876D68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100876DB4(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciCameraController];

  return v2;
}

void sub_100876DF4(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setDaVinciCameraController:a2];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v11 = [v9 _mapLayer];

  [v11 forceResolveCameraController];
  id v10 = objc_loadWeakRetained((id *)(a1 + 40));
  [v10 rebuildSections];
}

BOOL sub_100876EE8(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciCameraControllerForceMercatorZoom];

  return v2;
}

void sub_100876F28(uint64_t a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setDaVinciCameraControllerForceMercatorZoom:a2];

  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(v5);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];
}

BOOL sub_100877004(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciBiasLatitudeGlobeTileSelection];

  return v2;
}

id sub_100877044(id *a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setDaVinciBiasLatitudeGlobeTileSelection:a2];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];

  return +[MapsMapDisplayDebugController completelyFlushTiles];
}

BOOL sub_100877120(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  char v2 = [v1 daVinciPitchedGlobeTileSelection] ^ 1;

  return v2;
}

id sub_100877160(uint64_t a1, int a2)
{
  uint64_t v3 = a2 ^ 1u;
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setDaVinciPitchedGlobeTileSelection:v3];

  id v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = [WeakRetained delegate];
  id v8 = objc_loadWeakRetained(v5);
  id v9 = [v7 allVisibleMapViewsForDebugController:v8];
  id v10 = [v9 firstObject];
  id v11 = [v10 _mapLayer];
  [v11 setNeedsLayout];

  return +[MapsMapDisplayDebugController completelyFlushTiles];
}

void sub_10087723C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_100877474;
  void v17[3] = &unk_1012E6998;
  objc_copyWeak(&v18, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Use CollisionMesh" get:&stru_1012FDF78 set:v17];
  double v12 = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472;
  double v14 = sub_100877590;
  id v15 = &unk_1012E6998;
  objc_copyWeak(&v16, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Draw Collision Mesh" get:&stru_1012FDF98 set:&v12];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = [WeakRetained addAllMapsSwitchRowToSection:v3 title:@"Enable Fill Wireframe" forVectorKitDebugKey:@"daVinciTintBandFillWireframeEnabled" v12 v13 v14 v15];

  id v8 = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = [v8 addAllMapsSwitchRowToSection:v3 title:@"Enable Stroke Wireframe" forVectorKitDebugKey:@"daVinciTintBandStrokeWireframeEnabled"];

  id v10 = objc_loadWeakRetained((id *)(a1 + 32));
  id v11 = [v10 addAllMapsSwitchRowToSection:v3 title:@"Enable Stroke Distance Debug" forVectorKitDebugKey:@"daVinciTintBandStrokeDistanceDebugEnabled"];

  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
}

void sub_10087740C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100877434(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciUseCollisionMesh];

  return v2;
}

id sub_100877474(id *a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setDaVinciUseCollisionMesh:a2];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];

  return +[MapsMapDisplayDebugController completelyFlushTiles];
}

BOOL sub_100877550(id a1)
{
  id v1 = +[VKDebugSettings sharedSettings];
  unsigned __int8 v2 = [v1 daVinciDrawCollisionMesh];

  return v2;
}

id sub_100877590(id *a1, uint64_t a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  [v4 setDaVinciDrawCollisionMesh:a2];

  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v6 = [WeakRetained delegate];
  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v6 allVisibleMapViewsForDebugController:v7];
  id v9 = [v8 firstObject];
  id v10 = [v9 _mapLayer];
  [v10 setNeedsLayout];

  return +[MapsMapDisplayDebugController completelyFlushTiles];
}

void sub_10087766C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setVisible:a4];
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setVisible:a4];
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setVisible:a4];
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setVisible:a4];
  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setVisible:a4];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  [WeakRetained rebuildSections];
}

void sub_100877720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setVisible:a4];
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setVisible:a4];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained rebuildSections];
}

void sub_100877798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setVisible:a4];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained rebuildSections];
}

void sub_1008777F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setVisible:a4];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained rebuildSections];
}

void sub_100877858(id *a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(location, v3);
  id v4 = [v3 addSectionWithTitle:@"Rendering Features (Requires Relaunch)" content:&stru_1012FE030];
  id v5 = [v3 addSectionWithTitle:@"UI Features" content:&stru_1012FE150];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  _DWORD v20[2] = sub_100877DC8;
  void v20[3] = &unk_1012E7EF8;
  a1 += 4;
  objc_copyWeak(&v21, a1);
  id v6 = [v3 addSectionWithTitle:@"Hillshade Debug Setting" content:v20];
  id v7 = [v3 addSectionWithTitle:@"Engineering Settings" content:&stru_1012FE230];
  id WeakRetained = objc_loadWeakRetained(a1);
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    id v10 = (void *)WeakRetained[12];
    id v11 = &_dispatch_main_q;
    v18[1] = _NSConcreteStackBlock;
    void v18[2] = (id)3221225472;
    void v18[3] = sub_100878560;
    void v18[4] = &unk_1012FE418;
    void v18[5] = v9;
    objc_copyWeak(&v19, location);
    double v12 = _GEOConfigAddBlockListenerForKey();
    [v10 addObject:v12];

    uint64_t v13 = (void *)v9[12];
    v17[1] = _NSConcreteStackBlock;
    void v17[2] = (id)3221225472;
    void v17[3] = sub_100878670;
    void v17[4] = &unk_1012FE418;
    void v17[5] = v9;
    objc_copyWeak(v18, location);
    double v14 = _GEOConfigAddBlockListenerForKey();
    [v13 addObject:v14];

    id v15 = (void *)v9[12];
    objc_copyWeak(v17, location);
    id v16 = _GEOConfigAddBlockListenerForKey();
    [v15 addObject:v16];

    objc_destroyWeak(v17);
    objc_destroyWeak(v18);
    objc_destroyWeak(&v19);
  }

  objc_destroyWeak(&v21);
  objc_destroyWeak(location);
}

void sub_100877B84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_100877BDC(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Override Hiking Features" get:&stru_1012FE050 set:&stru_1012FE070];
  if (GEOConfigGetBOOL())
  {
    id v3 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Show Hillshade" get:&stru_1012FE090 set:&stru_1012FE0B0];
    id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Show Hiking" get:&stru_1012FE0D0 set:&stru_1012FE0F0];
    if (GEOConfigGetBOOL()) {
      id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Show Topographic Features" get:&stru_1012FE110 set:&stru_1012FE130];
    }
  }
}

BOOL sub_100877CD8(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100877CE8(id a1, BOOL a2)
{
}

BOOL sub_100877CFC(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100877D0C(id a1, BOOL a2)
{
}

BOOL sub_100877D20(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100877D30(id a1, BOOL a2)
{
}

BOOL sub_100877D44(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100877D54(id a1, BOOL a2)
{
}